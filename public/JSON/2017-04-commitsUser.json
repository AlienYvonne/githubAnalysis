{"mail@nlohmann.me": [{"date": "2017-04-24T15:46:21Z", "message": ":sparkles: started working on #458\n\na simple acceptor function"}, {"date": "2017-04-24T13:07:43Z", "message": ":hammer: removed too long running tests"}, {"date": "2017-04-23T20:54:21Z", "message": ":white_check_mark: added more Unicode test cases"}, {"date": "2017-04-23T19:46:30Z", "message": ":memo: fixed documentation #565\n\nThe documentation mismatched the actual code."}, {"date": "2017-04-23T18:51:29Z", "message": ":checkered_flag: another fix for MSVC #464\n\nneeded for VS2015.3 with /std:c++latest"}, {"date": "2017-04-23T18:32:05Z", "message": ":hammer: cleanup"}, {"date": "2017-04-23T16:40:17Z", "message": ":hammer: fixed a compiler warning\n\nDefault arguments are forbidden in lambdas."}, {"date": "2017-04-23T16:34:14Z", "message": ":hammer: removed #ifdefs"}, {"date": "2017-04-23T16:22:35Z", "message": ":bug: fixed test suite"}, {"date": "2017-04-23T13:12:50Z", "message": ":white_check_mark: added exhaustive UTF-8 tests\n\nCreates all well-formed sequences of bytes up to length 4. Furthermore,\ncreates ill-formed sequences by removing required trailing bytes or\nchanging bytes. As the tests can take a lot of time, preprocessor\nsymbols are introduced."}, {"date": "2017-04-23T13:10:40Z", "message": ":memo: improved documentation"}, {"date": "2017-04-22T09:35:58Z", "message": "Merge branch 'develop' into feature/manual_lexer"}, {"date": "2017-04-22T07:58:37Z", "message": "Merge branch 'feature/insert' into develop"}, {"date": "2017-04-21T20:07:07Z", "message": ":memo: fixed examples for Wandbox\n\nAs I learned in https://github.com/melpon/wandbox/issues/209, this\nlibrary is already installed at Wandbox, so we need to adjust the\nexamples to use `#include \"json.hpp\"` insteas of `#include <json.hpp>`."}, {"date": "2017-04-15T08:40:10Z", "message": ":hammer: improved diagnostic output"}, {"date": "2017-04-14T17:49:05Z", "message": ":hammer: templated output_adapter and used in class serializer"}, {"date": "2017-04-14T16:13:01Z", "message": ":memo: updated links and output"}, {"date": "2017-04-14T15:37:28Z", "message": ":bug: added missing header\n\nstd::setw needs the iomanip header (at least with GCC)."}, {"date": "2017-04-14T15:36:45Z", "message": ":bug: fixed README example\n\nThe example with the size() operator is bad: using operator[] already\nchanges the size of the object. The fix makes it clearer."}, {"date": "2017-04-14T15:35:31Z", "message": ":fire: removed .test files\n\nThese files were never meant to be versioned."}, {"date": "2017-04-12T16:07:25Z", "message": "Merge branch 'develop' into feature/manual_lexer"}, {"date": "2017-04-12T16:01:06Z", "message": "Merge branch 'develop' into feature/insert"}, {"date": "2017-04-11T20:13:26Z", "message": ":construction_worker: Travis is very picky"}, {"date": "2017-04-11T18:37:38Z", "message": ":construction_worker: added Clang 3.9-5.0\n\nTaken from\nhttps://github.com/travis-ci/docs-travis-ci-com/pull/746/files."}, {"date": "2017-04-11T16:57:53Z", "message": ":pencil2: fixed a typo"}, {"date": "2017-04-10T17:51:58Z", "message": "Merge branch 'feature/vs2017' into develop"}, {"date": "2017-04-09T20:13:26Z", "message": ":hammer: added an output adapter for the binary writer"}, {"date": "2017-04-09T19:14:51Z", "message": ":hammer: some cleanup"}, {"date": "2017-04-09T17:28:15Z", "message": ":hammer: simplified interface for parser, lexer, and binary_reader\n\nThese classes are now constructed with an interface adapter. This moves\ncomplexity from various places into the interface adapter class, or to\nsome factories which now implement the different flavors of input.\n\nFurthermore, input adapters are kept in std::shared_ptr to avoid the\nneed of manual deletion."}, {"date": "2017-04-09T12:02:04Z", "message": ":hammer: check for value of _HAS_CXX17"}, {"date": "2017-04-09T11:52:04Z", "message": ":bug: added fix for #464"}, {"date": "2017-04-09T10:00:30Z", "message": ":construction_worker: excluding MSVC 2015 with \"/permissive- /std:c++latest /utf-8\""}, {"date": "2017-04-09T09:47:31Z", "message": ":construction_worker: another try"}, {"date": "2017-04-09T09:38:42Z", "message": ":construction_worker: another try"}, {"date": "2017-04-09T09:00:39Z", "message": ":construction_worker: fixed AppVeyor syntax"}, {"date": "2017-04-09T08:59:45Z", "message": ":construction_worker: additional flags for MSVC #464\n\nTo test a fix for issue #464 (not yet implemented), we first need to\nhave  an MSVC build with \u201c/permissive- /std:c++latest /utf-8\u201d."}, {"date": "2017-04-08T21:39:17Z", "message": ":hammer: fixed test case\n\nOne test case for CBOR and MessagePack assumed little endianess."}, {"date": "2017-04-08T19:56:42Z", "message": ":construction_worker: experimenting with configurations"}, {"date": "2017-04-07T16:29:09Z", "message": ":sparkles: proposal for #428\n\nThis implementation forwards the iterators to std::map::insert."}, {"date": "2017-04-07T15:19:52Z", "message": ":twisted_rightwards_arrows: merge branch 'develop' into feature/manual_lexer"}, {"date": "2017-04-07T13:44:41Z", "message": ":bug: fix for #512\n\nWe totally forgot to implement the comparison operators other than ==\nand != for scalar types. Consequently, comparing a JSON value with a\nscalar type led to compile errors."}, {"date": "2017-04-06T17:54:08Z", "message": ":hammer: fixed another warning\n\nDo not store eof() in a char buffer\u2026"}, {"date": "2017-04-05T18:39:27Z", "message": ":hammer: fixed a compiler warning"}, {"date": "2017-04-04T21:17:43Z", "message": ":hammer: implemented a binary writer"}, {"date": "2017-04-04T15:30:43Z", "message": ":hammer: added endianess check"}, {"date": "2017-04-04T14:59:19Z", "message": ":hammer: implemented MessagePack in binary_reader"}, {"date": "2017-04-04T13:55:40Z", "message": "Merge branch 'develop' into feature/manual_lexer"}, {"date": "2017-04-03T20:58:46Z", "message": ":hammer: cleanup"}, {"date": "2017-04-03T19:53:23Z", "message": ":hammer: fixed compilation errors\n\nTIL about C++:\n\nexecuting m[key()]=val(); for a std::map executes\n\nFirst key() then val() with Clang\n\nFirst val() then key() with GCC\n\n#wat"}, {"date": "2017-04-02T16:46:21Z", "message": ":hammer: a lot of restructuring\n\n- removed uncached input stream adapter; it was too slow anyway\n- implemented a class binary_read which parses CBOR based on input\nadapters\n- in the CBOR parser, numbers are created via memcpy to avoid undefined\nbehavior"}, {"date": "2017-04-01T06:34:58Z", "message": ":hammer: improved code coverage"}], "niels.lohmann@gmail.com": [{"date": "2017-04-03T20:13:59Z", "message": "Merge pull request #545 from theodelrieu/feature/enum_class_support\n\nadd enum class default conversions"}], "delrieutheo@gmail.com": [{"date": "2017-04-02T11:10:15Z", "message": "add enum class default conversions"}]}