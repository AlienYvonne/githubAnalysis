{"niels.lohmann@gmail.com": [{"date": "2017-10-31T17:23:42Z", "message": "Merge pull request #811 from Itja/patch-1\n\nTypos README"}, {"date": "2017-10-28T13:33:22Z", "message": "Merge pull request #807 from theodelrieu/fix/805\n\nadd forwarding references to json_ref constructor"}, {"date": "2017-10-27T09:47:23Z", "message": "Merge pull request #795 from jseward/develop\n\nAdd transparent comparator and perfect forwarding support to find() and count()"}, {"date": "2017-10-22T06:52:28Z", "message": "Merge pull request #764 from pjkundert/develop-simplify-istream\n\nSimplified istream handing #367"}, {"date": "2017-10-22T06:52:15Z", "message": "Merge branch 'develop' into develop-simplify-istream"}, {"date": "2017-10-21T08:58:27Z", "message": "Merge pull request #793 from sonulohani/develop\n\nError : 'identifier \"size_t\" is undefined' in linux"}, {"date": "2017-10-18T13:04:24Z", "message": "Merge pull request #788 from jseward/develop\n\nFix Visual Studio 2017 warnings"}, {"date": "2017-10-16T17:48:17Z", "message": "Merge pull request #785 from jseward/develop\n\nFix warning C4706 on Visual Studio 2017 - fixes #784"}, {"date": "2017-10-16T15:54:28Z", "message": "Merge pull request #783 from eld00d/patch-1\n\nSet GENERATE_TAGFILE in Doxyfile"}, {"date": "2017-10-04T08:39:56Z", "message": "Merge pull request #765 from nlohmann/feature/issue698\n\nusing more CMake"}], "itja@users.noreply.github.com": [{"date": "2017-10-31T15:31:14Z", "message": "Typos README\n\nHey, thanks for this great library which I've used in many occasions now. I know it's not much, but I wanted to contribute at least a tiny bit back to you by this PR :-) Keep up the good work!"}], "mail@nlohmann.me": [{"date": "2017-10-31T14:04:14Z", "message": ":hammer: another try to fix #714\n\nadding std::ios_base::binary when opening all_unicode.json.cbor"}, {"date": "2017-10-30T15:04:34Z", "message": ":rocket: installed Request Info Bot"}, {"date": "2017-10-29T15:32:23Z", "message": ":memo: overworked templates"}, {"date": "2017-10-29T10:55:04Z", "message": "Merge branch 'develop' of https://github.com/nlohmann/json into develop"}, {"date": "2017-10-29T10:54:53Z", "message": ":rocket: installed Sentiment Bot"}, {"date": "2017-10-28T07:41:35Z", "message": ":hammer: set bidirectional iterator tag #593"}, {"date": "2017-10-27T14:39:52Z", "message": ":memo: comment to address #561"}, {"date": "2017-10-27T14:07:04Z", "message": ":memo: some documentation"}, {"date": "2017-10-27T09:49:24Z", "message": ":hammer: cleanup"}, {"date": "2017-10-27T09:49:17Z", "message": ":memo: thanks for #795"}, {"date": "2017-10-25T09:37:33Z", "message": ":rocket: installed Stale Bot"}, {"date": "2017-10-23T10:01:50Z", "message": ":rewind: #714 is still not fixed"}, {"date": "2017-10-22T09:16:33Z", "message": ":construction: checking if #714 is now fixed with MSVC\n\nHopefully, #764 fixed this."}, {"date": "2017-10-22T07:12:35Z", "message": ":memo: cleanup after the last PRs"}, {"date": "2017-10-22T06:53:46Z", "message": "Merge branch 'develop' of https://github.com/nlohmann/json into develop"}, {"date": "2017-10-22T06:53:43Z", "message": ":hammer: some simplifications"}, {"date": "2017-10-22T06:53:27Z", "message": ":white_check_mark: improved test coverage"}, {"date": "2017-10-13T06:46:29Z", "message": ":rotating_light: fixed warnings #776"}, {"date": "2017-10-05T18:36:18Z", "message": ":memo: comment how to integrate tsl::ordered_map (#546)"}, {"date": "2017-10-05T18:33:27Z", "message": ":memo: comment how to integrate fifo_map (#485)"}, {"date": "2017-10-05T17:43:59Z", "message": ":memo: different cmake call"}, {"date": "2017-10-05T17:43:39Z", "message": ":wrench: executing tests in parallel"}, {"date": "2017-10-05T17:43:19Z", "message": ":wrench: removing -Weffc++ warnings"}, {"date": "2017-10-05T17:08:28Z", "message": "Merge branch 'feature/coveralls' into develop"}, {"date": "2017-10-05T17:08:15Z", "message": ":hammer: added filter script for branch coverage"}, {"date": "2017-10-05T05:13:59Z", "message": ":hammer: adjusted Coverity script to work without Makefile"}, {"date": "2017-10-04T22:17:09Z", "message": ":hammer: added Makefile target to calculate lcov coverage"}, {"date": "2017-10-04T20:18:21Z", "message": ":hammer: trying to use Coveralls with CMake #698"}, {"date": "2017-10-04T17:27:35Z", "message": ":hammer: cleaned up Makefiles and docs #698"}, {"date": "2017-10-04T15:28:35Z", "message": ":rotating_light: fixing last warning in #755"}, {"date": "2017-10-03T16:47:08Z", "message": ":checkered_flag: and another try"}, {"date": "2017-10-03T16:21:40Z", "message": ":checkered_flag: another try"}, {"date": "2017-10-03T15:57:40Z", "message": ":checkered_flag: try to get MSVC 2017 running again"}, {"date": "2017-10-03T15:23:05Z", "message": "Merge branch 'develop' into feature/issue698"}, {"date": "2017-10-02T21:06:41Z", "message": ":hammer: clean up"}, {"date": "2017-10-02T16:25:25Z", "message": "Merge branch 'develop' into feature/issue698"}, {"date": "2017-10-02T16:11:36Z", "message": ":rotating_light: removing a compiler warning #755"}, {"date": "2017-10-02T15:47:53Z", "message": "Merge branch 'develop' into feature/issue698"}, {"date": "2017-10-02T11:54:14Z", "message": ":checkered_flag: fixing a min() call for MSVC #762"}, {"date": "2017-10-01T13:48:29Z", "message": ":rewind: removed call to std::signbit #761"}], "delrieutheo@gmail.com": [{"date": "2017-10-28T12:22:57Z", "message": "add forwarding references to json_ref constructor\n\nfixes #805"}], "jamie.d.seward@gmail.com": [{"date": "2017-10-24T07:14:25Z", "message": "Add missing spaces"}, {"date": "2017-10-24T07:06:22Z", "message": "Remove extra spaces"}, {"date": "2017-10-24T07:01:56Z", "message": "Remove old non-perfect forwarding find and count"}, {"date": "2017-10-24T06:50:06Z", "message": "Remove c++17 support flag in cmake\n\nAlready covered by AppVeyor"}, {"date": "2017-10-24T06:45:39Z", "message": "Remove tabs for spaces"}, {"date": "2017-10-23T07:43:26Z", "message": "Remove JSON_HAS_STRING_VIEW\n\nInstead implement @gregmarr's PR comments that perfect forwarding should be used. Also cleaned up cpp language standard detection."}, {"date": "2017-10-21T23:36:05Z", "message": "Use consistent logic to determine if string_view exists"}, {"date": "2017-10-21T23:29:37Z", "message": "Fix for _HAS_CXX17 == 0\n\nCopied from solution to https://github.com/nlohmann/json/issues/464"}, {"date": "2017-10-21T22:20:13Z", "message": "Add string_view support\n\nThis avoids unnecessary string copies on often used\nfind()."}, {"date": "2017-10-18T05:53:35Z", "message": "Add comments and newline"}, {"date": "2017-10-17T06:23:55Z", "message": "Fix Visual Studio 2017 warnings"}, {"date": "2017-10-16T08:02:48Z", "message": "Disable warning C4389: '==': signed/unsigned mismatch\n\nLots of tests have this warning.\n\nAlso moved out of for loop, doesn't need to be done every loop."}, {"date": "2017-10-16T07:49:59Z", "message": "Fix whitespace"}, {"date": "2017-10-16T07:41:58Z", "message": "Fix warning C4706"}, {"date": "2017-10-16T07:21:38Z", "message": "Add missing \"u8\"\n\nThis causes test-udt to crash due to bad iterator"}, {"date": "2017-10-16T05:56:38Z", "message": "Add /W4 for MSVS"}], "sonulohani@gmail.com": [{"date": "2017-10-21T07:22:44Z", "message": "Error : 'identifier \"size_t\" is undefined' in linux"}], "perry@hardconsulting.com": [{"date": "2017-10-16T15:06:10Z", "message": "Consistently use std::char_traits int_type-->char conversion intrinsics"}, {"date": "2017-10-07T22:50:19Z", "message": "Simplify the json/src/benchmarks.cpp to allow more optimal code gen.\no For some unknown reason, the complexity of the benchmark platform\n  prevented some C++ compilers from generating optimal code, properly\n  reflective of the real performance in actual deployment.\no Added the json_benchmarks_simple target, which performs the same\n  suite of tests as json_benchmarks.\no Simplified the benchmark platform, and emit an \"Average\" TPS\n  (Transactions Per Second) value reflective of aggregate parse/output\n  performance."}, {"date": "2017-10-06T19:27:53Z", "message": "Remove outdated commentary about the value of eof(), retain input type\no We assume the same character int_type as the unerlying std::istream\no There are no assumptions on the value of eof(), other than that it\n  will not be a valid unsigned char value.\no To retain performance, we do not allow swapping out the underlying\n  std::streambuf during our use of the std::istream for parsing."}, {"date": "2017-10-06T14:53:31Z", "message": "Revert some unnecessary member initializer changes."}, {"date": "2017-10-06T14:37:49Z", "message": "Further simplify character type handling"}, {"date": "2017-10-05T22:37:03Z", "message": "Implement correct handling of std::streambuf int_type, eof()\no Make no assumptions about eof(), other than that it is somewhere\n  outside of the valid range of char_type."}, {"date": "2017-10-05T21:13:55Z", "message": "Accelerate access to underlying std::istream streambuf"}, {"date": "2017-10-04T22:01:10Z", "message": "Specify initializers for yytest, token_string using initializer-lists\no We can retain -Weffc++ and specify default initializers by using\n  initializer lists.  The risks are low (of additional non-conformat\n  compilers), because there is already one other such initialization\n  used in the code-base."}, {"date": "2017-10-04T18:31:10Z", "message": "Further performance improvements, and corrections in get_token_string\no An (-'ve valued, typically -1) EOF must never be allowed in\n  token_string, as it be converted to 255 -- a legitimate value.\no Comparing against a specific eof() (-1, typically) is more costly than\n  detecting +'ve/-'ve.  Since EOF is the only non-positive value allowed\n  we can use the simpler test.\no Removed unnecessary test for token_string size, as it is already\n  tested in the method, and must never occur in correct code; used an\n  assert instead."}, {"date": "2017-10-04T17:47:52Z", "message": "Rename get_string to move_string to imply side-effect"}, {"date": "2017-10-04T17:21:55Z", "message": "Corrected unnnecessary const restriction on returned std::string"}, {"date": "2017-10-04T15:40:32Z", "message": "Improve performance by constructing yytext as a std::string\no Return its contents when necessary.  In many cases, this avoids\n  construction of multiple copies of the yytext token.  Exceeds\n  performance of current develop branch."}, {"date": "2017-10-04T15:33:35Z", "message": "Remove unnnecessary NUL termination of yytext (as it may contain NULs)"}, {"date": "2017-10-03T21:38:38Z", "message": "Restore istream performance #764\no Use std::streambuf I/O instead of std::istream; does not maintain\n  (unused) istream flags.\no Further simplify get/unget handling.\no Restore original handling of NUL in input stream; ignored during\n  token_string escaping."}, {"date": "2017-10-03T15:49:39Z", "message": "Further simplify istream handling; use native unget"}, {"date": "2017-10-02T21:17:23Z", "message": "Test to confirm parsing of multiple JSON records in a istream #367"}, {"date": "2017-10-02T15:50:15Z", "message": "Simplify get_token_string, unnecessary buffering, handle Byte Order Mark"}], "22281318+eld00d@users.noreply.github.com": [{"date": "2017-10-15T00:06:38Z", "message": "Set GENERATE_TAGFILE in Doxyfile\n\nAllows documentation to be linked from other projects to https://nlohmann.github.io/json using Doxygen with the tag:\r\nTAGFILES = $(SOME_PATH)/nlohmann_json.tag=https://nlohmann.github.io/json"}]}