{"niels.lohmann@gmail.com": [{"date": "2013-07-15T06:32:10Z", "message": "+ a fix for C++98"}, {"date": "2013-07-11T12:19:11Z", "message": "- tidied code\n- added more documentation"}, {"date": "2013-07-10T12:57:51Z", "message": "- removed pointers to POD inside the union"}, {"date": "2013-07-10T12:33:17Z", "message": "- reorganized payload"}, {"date": "2013-07-05T14:45:17Z", "message": "- minor tweaks"}, {"date": "2013-07-05T14:15:29Z", "message": "- further adjustments"}, {"date": "2013-07-05T12:57:03Z", "message": "- updated README"}, {"date": "2013-07-05T12:44:45Z", "message": "- a README"}, {"date": "2013-07-05T12:16:47Z", "message": "- a find() function"}, {"date": "2013-07-05T10:32:23Z", "message": "- bugfixing"}, {"date": "2013-07-05T09:57:12Z", "message": "- memory problem"}, {"date": "2013-07-05T09:23:49Z", "message": "- fixes from Harro"}, {"date": "2013-07-04T16:16:24Z", "message": "- header for NULL"}, {"date": "2013-07-04T16:13:17Z", "message": "- added missing headers"}, {"date": "2013-07-04T15:13:04Z", "message": "- removing Autoconf version requirement to allow travis to work"}, {"date": "2013-07-04T15:06:53Z", "message": "- fixed bugs and added test cases"}, {"date": "2013-07-04T08:54:16Z", "message": "- a config file for travis"}, {"date": "2013-07-04T08:49:35Z", "message": "- ignore DS_Stores"}, {"date": "2013-07-04T08:49:03Z", "message": "- initial commit"}, {"date": "2013-12-11T12:23:50Z", "message": "benchmark"}, {"date": "2013-12-11T09:50:50Z", "message": "towards a benchmark"}, {"date": "2013-12-11T09:23:31Z", "message": "a Makefile target for test coverage"}, {"date": "2013-12-11T07:49:07Z", "message": "fixed a typo"}, {"date": "2013-12-11T07:41:12Z", "message": "removed unused flags"}, {"date": "2013-12-11T07:41:02Z", "message": "simplified code"}, {"date": "2013-12-11T07:40:53Z", "message": "added debug output to test cases"}, {"date": "2013-12-10T11:44:23Z", "message": "fixed a cppcheck warning"}, {"date": "2014-12-30T11:02:38Z", "message": "fixed coveralls call to ignore benchmarks folder"}, {"date": "2014-12-30T10:57:58Z", "message": "+ fixed documentation bugs"}, {"date": "2014-12-30T10:47:28Z", "message": "tidy up"}, {"date": "2014-12-30T10:29:59Z", "message": "minor changes"}, {"date": "2014-12-30T10:19:35Z", "message": "+ updated reference"}, {"date": "2014-12-30T09:54:01Z", "message": "+ overworked parser"}, {"date": "2014-12-29T20:13:03Z", "message": "+ fixed a bug in the stream input"}, {"date": "2014-12-29T18:54:31Z", "message": "minor changes"}, {"date": "2014-12-29T17:32:17Z", "message": "minor changes"}, {"date": "2014-12-29T17:20:55Z", "message": "syntax highlighting"}, {"date": "2014-12-29T17:19:06Z", "message": "updated reference"}, {"date": "2014-12-29T16:07:00Z", "message": "type reference"}, {"date": "2014-12-29T15:45:54Z", "message": "+ removed data() function"}, {"date": "2014-12-29T12:35:52Z", "message": "+ documentation"}, {"date": "2014-12-29T11:51:20Z", "message": "+ fix memory issues"}, {"date": "2014-12-28T23:02:13Z", "message": "+ small cleanup"}, {"date": "2014-12-28T22:21:46Z", "message": "issue badge"}, {"date": "2014-12-28T22:09:31Z", "message": "+ that could be it!"}, {"date": "2014-12-28T21:59:11Z", "message": "+ another check"}, {"date": "2014-12-28T21:51:27Z", "message": "+ test"}, {"date": "2014-12-28T21:38:57Z", "message": "+ more test cases"}, {"date": "2014-12-28T21:29:06Z", "message": "+ more test cases"}, {"date": "2014-12-28T21:16:58Z", "message": "+ more test cases"}, {"date": "2014-12-28T21:07:10Z", "message": "+ more test cases"}, {"date": "2014-12-28T20:53:13Z", "message": "+ more test cases"}, {"date": "2014-12-28T19:07:56Z", "message": "+ overworked switches"}, {"date": "2014-12-28T18:51:02Z", "message": "+ more test cases"}, {"date": "2014-12-28T17:12:07Z", "message": "+ more test cases"}, {"date": "2014-12-28T17:00:50Z", "message": "+ more test"}, {"date": "2014-12-28T16:26:33Z", "message": "+ more test cases"}, {"date": "2014-12-28T16:09:38Z", "message": "+ more test cases"}, {"date": "2014-12-28T15:48:22Z", "message": "+ overworked comments"}, {"date": "2014-12-28T14:57:43Z", "message": "+ more test cases"}, {"date": "2014-12-28T14:46:36Z", "message": "+ execute unit tests explicitly"}, {"date": "2014-12-28T14:41:33Z", "message": "+ more test cases"}, {"date": "2014-12-28T13:57:21Z", "message": "+ more test cases"}, {"date": "2014-12-28T13:39:34Z", "message": "+ more test cases"}, {"date": "2014-12-28T12:40:19Z", "message": "more test cases"}, {"date": "2014-12-28T12:31:24Z", "message": "more test cases"}, {"date": "2014-12-28T12:22:06Z", "message": "+ more test cases"}, {"date": "2014-12-28T12:11:50Z", "message": "+ error fix"}, {"date": "2014-12-28T12:09:38Z", "message": "another test case"}, {"date": "2014-12-28T11:50:52Z", "message": "+ test cases for clear()"}, {"date": "2014-12-28T11:38:08Z", "message": "- removed old test cases"}, {"date": "2014-12-28T11:24:52Z", "message": "exclude tests"}, {"date": "2014-12-28T11:20:53Z", "message": "pass gcov version"}, {"date": "2014-12-28T10:27:38Z", "message": "clang seems not to work"}, {"date": "2014-12-28T10:24:40Z", "message": "wrong package name"}, {"date": "2014-12-28T10:20:48Z", "message": "+ fixing coverall"}, {"date": "2014-12-28T10:15:13Z", "message": "make pretty"}, {"date": "2014-12-28T10:09:35Z", "message": "Merge pull request #5 from nlohmann/2.0\n\nVersion 2.0"}, {"date": "2014-12-28T10:06:01Z", "message": "+ updated README"}, {"date": "2014-12-28T08:29:33Z", "message": "added coverage badge"}, {"date": "2014-12-28T08:23:49Z", "message": "+ fixed a compiler warning\n\n+ added coveralls"}, {"date": "2014-12-28T08:21:06Z", "message": "using GCC 4.8 for Travis"}, {"date": "2014-12-28T08:11:01Z", "message": "2.0 preview"}, {"date": "2015-01-31T20:25:38Z", "message": "more test cases"}, {"date": "2015-01-31T19:46:23Z", "message": "remove checks in iterator"}, {"date": "2015-01-31T19:31:43Z", "message": "exclude more files from coveralls"}, {"date": "2015-01-31T19:26:47Z", "message": "coveralls adjustment"}, {"date": "2015-01-31T19:19:36Z", "message": "adjustments to coverall"}, {"date": "2015-01-31T19:13:11Z", "message": "cleanup"}, {"date": "2015-01-26T06:51:40Z", "message": "Merge pull request #33 from luxe/patch-1\n\nmore descriptive documentation in example"}, {"date": "2015-01-24T20:11:42Z", "message": "more examples"}, {"date": "2015-01-24T20:06:05Z", "message": "updated README"}, {"date": "2015-01-24T19:33:06Z", "message": "worked on issue #8 and #27"}, {"date": "2015-01-23T19:46:46Z", "message": "another test case"}, {"date": "2015-01-23T17:42:24Z", "message": "another test case"}, {"date": "2015-01-23T17:27:58Z", "message": "implemented missing operator[]"}, {"date": "2015-01-23T17:07:31Z", "message": "more test cases for reverse iterators"}, {"date": "2015-01-21T17:04:12Z", "message": "fixed an issue with non portability"}, {"date": "2015-01-21T16:42:45Z", "message": "cleanup"}, {"date": "2015-01-21T14:59:52Z", "message": "fixed a memory leak"}, {"date": "2015-01-21T14:43:24Z", "message": "overworked iterators"}, {"date": "2015-01-21T10:47:03Z", "message": "+ more adjustments toward a real container"}, {"date": "2015-01-21T08:40:46Z", "message": "+ generic constructors for arrays and objects"}, {"date": "2015-01-20T21:06:45Z", "message": "another test case"}, {"date": "2015-01-20T20:49:21Z", "message": "+ more test cases"}, {"date": "2015-01-20T20:35:08Z", "message": "+ improved test case coverage"}, {"date": "2015-01-20T20:15:14Z", "message": "added missing header"}, {"date": "2015-01-20T19:43:54Z", "message": "+ set number type to int64_t\n\n+ replaced several functions by template magic"}, {"date": "2015-01-19T18:51:07Z", "message": "+ implemented member and non-member swap"}, {"date": "2015-01-18T09:58:48Z", "message": "fixed #31: only use spaces in pretty print"}, {"date": "2015-01-13T18:26:42Z", "message": "test cases to cover 100% of the fix of #28"}, {"date": "2015-01-13T18:07:53Z", "message": "this should fix #28"}, {"date": "2015-01-12T22:38:55Z", "message": "updated README"}, {"date": "2015-01-12T21:54:39Z", "message": "Merge pull request #26 from wancw/fix_clang_string_casting\n\nFix string conversion under Clang"}, {"date": "2015-01-11T14:16:14Z", "message": "small tidy up after pull request #22\n\n- removed IDE leftovers\n- adjusted const\u2019ness of some functions\n- style guide"}, {"date": "2015-01-11T14:08:13Z", "message": "Merge pull request #22 from Teemperor/unicode_escaping\n\nUnicode escaping"}, {"date": "2015-01-11T14:05:04Z", "message": "+ applied style guide"}, {"date": "2015-01-11T13:03:53Z", "message": "Merge pull request #24 from Teemperor/fix_string_dumping\n\nFixed dumping of strings"}, {"date": "2015-01-11T11:47:00Z", "message": "Merge pull request #23 from Teemperor/gcc_remark_readme\n\nAdded a remark to the readme that coverage is GCC only for now"}, {"date": "2015-01-09T19:48:16Z", "message": "minor style adjustments"}, {"date": "2015-01-09T19:48:06Z", "message": "+ added Thanks section to README"}, {"date": "2015-01-09T19:32:08Z", "message": "Merge pull request #21 from Teemperor/fixed_escaped_chars\n\nImplemented the JSON spec for string parsing for everything but the \\uXXXX escaping - see issue #12."}, {"date": "2015-01-09T17:16:27Z", "message": "created a header-only version (see issue #16)"}, {"date": "2015-01-09T16:50:50Z", "message": "updated README"}, {"date": "2015-01-09T16:40:14Z", "message": "added missing header"}, {"date": "2015-01-09T16:37:42Z", "message": "Merge pull request #19 from kirkshoop/stditerator\n\nadd the std iterator typedefs to iterator and const_iterator"}, {"date": "2015-01-09T15:38:34Z", "message": "minor syntax adjustments"}, {"date": "2015-01-09T15:32:39Z", "message": "Merge pull request #18 from Teemperor/fix_quote_escaping\n\nFixed escaped quotes (issue #17)"}, {"date": "2015-01-06T21:05:32Z", "message": "fixed #15"}, {"date": "2015-01-06T20:44:07Z", "message": "implemented pretty printing (issue #13)\n\n- to_string() method is now called dump()\n- syntax borrowed from Python\u2019s json.dumps()"}, {"date": "2015-01-06T18:14:03Z", "message": "minor changes"}, {"date": "2015-01-06T17:57:44Z", "message": "valgrind parameter is not understood in travis"}, {"date": "2015-01-06T17:52:14Z", "message": "travis now checks with valgrind"}, {"date": "2015-01-06T17:43:21Z", "message": "Merge pull request #14 from elliotgoodrich/master\n\nFix double delete on std::bad_alloc exception"}, {"date": "2015-01-06T17:41:24Z", "message": "moved class into \"nlohmann\" namespace\n\n- fixed issue #9\n- also removed std::mutex member variable\n- also added \u201cstd::\u201d prefix to size_t variables"}, {"date": "2015-01-05T21:25:44Z", "message": "added note from http://isocpp.org/blog/2015/01/json-for-modern-cpp"}, {"date": "2015-01-05T19:36:31Z", "message": "ignore some CMake files"}, {"date": "2015-01-05T19:30:34Z", "message": "minor Markdown error"}, {"date": "2015-01-05T19:28:56Z", "message": "Merge pull request #6 from Teemperor/master\n\nAdded CMake and lcov"}, {"date": "2015-01-04T22:18:24Z", "message": "removed \"noexpect\" from all functions that use new"}, {"date": "2015-01-04T22:09:30Z", "message": "used _-suffix for member variables"}, {"date": "2015-01-04T19:50:28Z", "message": "renamed \"toString()\" to \"to_string()\""}, {"date": "2015-01-04T19:43:25Z", "message": "renamed class from \"JSON\" to \"son\""}, {"date": "2015-01-04T18:05:46Z", "message": "tidy up"}, {"date": "2015-01-04T17:55:15Z", "message": "fix"}, {"date": "2015-01-04T17:52:04Z", "message": "updated examples"}, {"date": "2015-01-04T17:32:03Z", "message": "fixed a link"}, {"date": "2015-01-04T12:20:32Z", "message": "updated README"}, {"date": "2015-01-04T11:29:16Z", "message": "fixed memory leak"}, {"date": "2015-01-04T11:05:28Z", "message": "+ guard call to std::ios_base::sync_with_stdio"}, {"date": "2015-01-03T16:51:14Z", "message": "removing flawed test case"}, {"date": "2015-01-03T16:18:17Z", "message": "cleanup"}, {"date": "2015-01-02T16:19:40Z", "message": "parser returns an object"}, {"date": "2015-01-02T14:29:36Z", "message": "removed old C fragments"}, {"date": "2015-01-02T11:47:32Z", "message": "+ better string handling"}, {"date": "2015-02-25T21:21:05Z", "message": "small syntax fix"}, {"date": "2015-02-24T22:19:19Z", "message": "minor changes"}, {"date": "2015-02-22T21:24:47Z", "message": "small change to GIF"}, {"date": "2015-02-22T17:09:22Z", "message": "increased delays in GIF"}, {"date": "2015-02-22T16:55:25Z", "message": "added GIF"}, {"date": "2015-02-22T16:52:27Z", "message": "overworked iterators"}, {"date": "2015-02-21T12:24:07Z", "message": "a more forgiving array behavior"}, {"date": "2015-02-18T23:06:15Z", "message": "minor syntax error in README"}, {"date": "2015-02-18T23:04:28Z", "message": "Merge pull request #36 from nlohmann/template\n\ntemplate version with re2c scanner"}, {"date": "2015-02-18T21:43:25Z", "message": "fixed coverage"}, {"date": "2015-02-18T21:28:56Z", "message": "fixed [] operator; added README"}, {"date": "2015-02-16T23:36:29Z", "message": "added another test case"}, {"date": "2015-02-16T23:22:12Z", "message": "more type adjustments"}, {"date": "2015-02-16T22:34:37Z", "message": "further type adjustments"}, {"date": "2015-02-16T22:17:28Z", "message": "some type fixes"}, {"date": "2015-02-16T21:54:07Z", "message": "minor change to make code more portable"}, {"date": "2015-02-16T21:47:30Z", "message": "removed unused code and fixed includes"}, {"date": "2015-02-15T22:27:35Z", "message": "clean up"}, {"date": "2015-02-15T22:13:46Z", "message": "more allocators"}, {"date": "2015-02-15T21:58:35Z", "message": "forgot to destroy object"}, {"date": "2015-02-15T21:49:26Z", "message": "experiment with user-defined allocator"}, {"date": "2015-02-15T17:43:17Z", "message": "minor change"}, {"date": "2015-02-15T16:40:46Z", "message": "fix of the fix"}, {"date": "2015-02-15T16:07:19Z", "message": "fixed Valgrind error"}, {"date": "2015-02-15T15:56:54Z", "message": "some unicode magic"}, {"date": "2015-02-15T14:51:11Z", "message": "added missing test case"}, {"date": "2015-02-15T14:45:00Z", "message": "test cases for new features"}, {"date": "2015-02-15T14:16:11Z", "message": "added some missing features from 2.0 version"}, {"date": "2015-02-15T13:52:00Z", "message": "further cleanup"}, {"date": "2015-02-15T12:35:51Z", "message": "clean up"}, {"date": "2015-02-15T10:53:24Z", "message": "fixed test case coverage"}, {"date": "2015-02-15T10:44:49Z", "message": "added Unicode support"}, {"date": "2015-02-14T16:34:06Z", "message": "some reorganization"}, {"date": "2015-02-14T15:47:14Z", "message": "reverse iterators"}, {"date": "2015-02-13T21:12:27Z", "message": "forgot Makefile"}, {"date": "2015-02-13T20:46:33Z", "message": "some fixes and cleanup"}, {"date": "2015-02-13T19:27:27Z", "message": "two more test cases for numbers"}, {"date": "2015-02-13T19:16:53Z", "message": "six more test cases for numbers"}, {"date": "2015-02-13T19:02:36Z", "message": "more test cases for numbers"}, {"date": "2015-02-13T17:57:28Z", "message": "systematic test case for \\uxxxx sequences"}, {"date": "2015-02-13T17:18:58Z", "message": "more systematic test cases"}, {"date": "2015-02-13T16:42:14Z", "message": "more test cases"}, {"date": "2015-02-12T21:54:42Z", "message": "more test cases"}, {"date": "2015-02-11T21:42:49Z", "message": "more test cases"}, {"date": "2015-02-11T16:24:14Z", "message": "fixed a major bug in the parser"}, {"date": "2015-02-11T14:29:41Z", "message": "test cases for iterator classes"}, {"date": "2015-02-11T13:58:52Z", "message": "bug fix and test cases"}, {"date": "2015-02-11T12:25:04Z", "message": "another test case"}, {"date": "2015-02-11T12:15:22Z", "message": "fixed a bug"}, {"date": "2015-02-11T11:53:47Z", "message": "more test cases (unexpected ends)"}, {"date": "2015-02-11T11:36:30Z", "message": "more test cases (0e1)"}, {"date": "2015-02-11T11:21:46Z", "message": "try to understand re2c"}, {"date": "2015-02-11T10:57:36Z", "message": "more test cases (objects, floats)"}, {"date": "2015-02-11T10:47:00Z", "message": "more test cases"}, {"date": "2015-02-11T10:36:45Z", "message": "number test cases"}, {"date": "2015-02-11T09:57:17Z", "message": "fix test case"}, {"date": "2015-02-11T09:27:41Z", "message": "re-added old (failing) test cases"}, {"date": "2015-02-11T09:16:43Z", "message": "cleanup"}, {"date": "2015-02-11T08:51:24Z", "message": "added whitespace handling"}, {"date": "2015-02-11T08:41:23Z", "message": "fixes"}, {"date": "2015-02-11T08:10:28Z", "message": "+ moved lexer to class"}, {"date": "2015-02-10T22:55:44Z", "message": "still errors..."}, {"date": "2015-02-10T22:45:18Z", "message": "more test cases"}, {"date": "2015-02-10T22:28:25Z", "message": "another test case"}, {"date": "2015-02-10T22:20:30Z", "message": "rename member variables; add whitespace tests"}, {"date": "2015-02-10T22:05:45Z", "message": "try"}, {"date": "2015-02-10T21:48:16Z", "message": "removing failing (?) test cases"}, {"date": "2015-02-10T21:37:07Z", "message": "possible fix"}, {"date": "2015-02-10T21:09:21Z", "message": "more test cases"}, {"date": "2015-02-10T20:03:32Z", "message": "fix build error"}, {"date": "2015-02-10T19:52:39Z", "message": "testing the parser"}, {"date": "2015-02-10T19:28:16Z", "message": "more test cases"}, {"date": "2015-02-10T18:50:26Z", "message": "added width feature / more test cases"}, {"date": "2015-02-10T17:51:09Z", "message": "more unit tests"}, {"date": "2015-02-10T16:40:47Z", "message": "fixed tests for copy assignment"}, {"date": "2015-02-10T16:10:39Z", "message": "tests for comparison operators"}, {"date": "2015-02-09T20:10:19Z", "message": "test cases and clean up"}, {"date": "2015-02-09T19:21:26Z", "message": "added test cases and fixed some warnings"}, {"date": "2015-02-09T18:49:09Z", "message": "more test cases"}, {"date": "2015-02-09T17:45:32Z", "message": "more test cases"}, {"date": "2015-02-09T17:02:31Z", "message": "some bug fixing"}, {"date": "2015-02-08T18:22:48Z", "message": "another fix for travis"}, {"date": "2015-02-08T18:18:39Z", "message": "removed reverse_iterators and fixed some bugs"}, {"date": "2015-02-08T17:38:24Z", "message": "a fix for Travis"}, {"date": "2015-02-08T17:27:16Z", "message": "more test cases"}, {"date": "2015-02-08T17:06:16Z", "message": "more test cases"}, {"date": "2015-02-08T16:45:56Z", "message": "more test cases"}, {"date": "2015-02-08T15:57:53Z", "message": "try with GCC 4.9"}, {"date": "2015-02-08T15:44:27Z", "message": "hello coveralls..."}, {"date": "2015-02-08T15:37:21Z", "message": "more test cases"}, {"date": "2015-02-08T15:24:38Z", "message": "more test cases"}, {"date": "2015-02-08T15:14:49Z", "message": "more test cases"}, {"date": "2015-02-08T15:08:48Z", "message": "more test cases"}, {"date": "2015-02-08T14:57:24Z", "message": "more test cases"}, {"date": "2015-02-08T14:47:40Z", "message": "more test cases"}, {"date": "2015-02-08T13:54:16Z", "message": "more test cases"}, {"date": "2015-02-08T13:38:52Z", "message": "more test cases"}, {"date": "2015-02-08T13:10:36Z", "message": "more test cases"}, {"date": "2015-02-08T12:52:11Z", "message": "more test cases"}, {"date": "2015-02-08T12:25:09Z", "message": "systematic unit tests"}, {"date": "2015-02-08T11:53:10Z", "message": "added reverse iterators"}, {"date": "2015-02-07T18:14:23Z", "message": "another commit to trigger coverage"}, {"date": "2015-02-07T18:04:08Z", "message": "small changes with default values"}, {"date": "2015-02-07T15:03:40Z", "message": "include main source file for coveralls"}, {"date": "2015-02-07T14:57:47Z", "message": "added more features from master branch"}, {"date": "2015-02-05T21:45:33Z", "message": "Zwischenstand"}, {"date": "2015-02-05T21:45:21Z", "message": "Zwischenstand"}, {"date": "2015-02-04T21:49:46Z", "message": "strings are escaped"}, {"date": "2015-03-31T21:10:34Z", "message": "don't need this"}, {"date": "2015-03-31T20:56:33Z", "message": "Bower spec"}, {"date": "2015-03-31T20:41:51Z", "message": "added RTD badge"}, {"date": "2015-03-31T20:40:21Z", "message": "cleanup docs"}, {"date": "2015-03-31T20:39:16Z", "message": "rename to check something with RTD"}, {"date": "2015-03-31T20:24:28Z", "message": "started documentation with RTD"}, {"date": "2015-03-27T16:11:08Z", "message": "fix #52 (documented new functions)"}, {"date": "2015-03-26T16:06:33Z", "message": "implemented key()/value() for reverse iterators"}, {"date": "2015-03-24T18:08:03Z", "message": "key/value function for iterators (#46)\n\nCurrently only support iterator and const_iterator. reverse_iterator\nand const_reverse_iterator to be implemented soon."}, {"date": "2015-03-24T18:06:40Z", "message": "fixed acknowledgements"}, {"date": "2015-03-24T17:05:58Z", "message": "minor changes to pull request #40"}, {"date": "2015-03-24T16:57:40Z", "message": "Merge pull request #40 from aburgh/incremental\n\nParse streams incrementally."}, {"date": "2015-03-24T16:39:00Z", "message": "more on #48: allowing non-std begin/end functions"}, {"date": "2015-03-24T15:50:55Z", "message": "fixed #47 (added erase function to remove key form object)"}, {"date": "2015-03-23T22:03:48Z", "message": "fixed #42 (removed equality comparisons for floats)"}, {"date": "2015-03-23T19:30:51Z", "message": "updated README"}, {"date": "2015-03-23T19:27:30Z", "message": "minor adjustments to pull request #38"}, {"date": "2015-03-23T19:15:50Z", "message": "Merge pull request #38 from wtsi-hgi/feature/small-float-serialization\n\nFeature/small float serialization"}, {"date": "2015-03-22T18:18:21Z", "message": "fixed #43 (adding friendship to allow iterator change)"}, {"date": "2015-03-22T18:07:43Z", "message": "fixed #45 (added count function for keys in objects)"}, {"date": "2015-03-22T16:50:43Z", "message": "fixed deprecated warnings in issue #42"}, {"date": "2015-03-22T16:30:48Z", "message": "fixed #48 (using nonmember begin/end)"}, {"date": "2015-04-27T21:09:51Z", "message": "some typename fix"}, {"date": "2015-04-27T20:53:46Z", "message": "Appveyor"}, {"date": "2015-04-27T20:45:21Z", "message": "added /EHsc parameter"}, {"date": "2015-04-27T20:35:45Z", "message": "fixed Makefile"}, {"date": "2015-04-26T21:56:42Z", "message": "Appveyor"}, {"date": "2015-04-26T21:47:11Z", "message": "Appveyor"}, {"date": "2015-04-26T21:41:11Z", "message": "Appveyor"}, {"date": "2015-04-26T21:31:22Z", "message": "Appveyor"}, {"date": "2015-04-26T21:21:16Z", "message": "Appveyor"}, {"date": "2015-04-26T21:14:51Z", "message": "Appveyor"}, {"date": "2015-04-26T21:09:10Z", "message": "Appveyor"}, {"date": "2015-04-26T21:03:15Z", "message": "Appveyor"}, {"date": "2015-04-26T20:53:17Z", "message": "Appveyor test"}, {"date": "2015-04-26T20:47:40Z", "message": "another try"}, {"date": "2015-04-26T20:25:38Z", "message": "fixed Makefile"}, {"date": "2015-04-26T20:09:15Z", "message": "does not"}, {"date": "2015-04-26T20:00:20Z", "message": "trying appveyor again"}, {"date": "2015-04-26T19:51:35Z", "message": "undid changes that broke the build"}, {"date": "2015-04-26T19:43:47Z", "message": "clean up\n\n- removed m_final member\n- parse_internal now takes a reference to a basic_json object to fill\nwith data\n- header is automatically regenerated if re2c file is changed"}, {"date": "2015-04-26T13:16:07Z", "message": "updated README"}, {"date": "2015-04-26T13:10:32Z", "message": "Merge pull request #63 from Florianjw/master\n\nImprove the implementations of the comparission-operators"}, {"date": "2015-04-26T13:10:04Z", "message": "minor change to the parsing of objects/arrays"}, {"date": "2015-04-26T11:37:01Z", "message": "fixed some small issues"}, {"date": "2015-04-25T21:10:23Z", "message": "addressing issue #62"}, {"date": "2015-04-24T23:25:42Z", "message": "minor changes"}, {"date": "2015-04-24T20:06:57Z", "message": "fix #60 (double escaping)"}, {"date": "2015-04-15T15:52:25Z", "message": "updated README to recent pull request"}, {"date": "2015-04-15T06:53:40Z", "message": "Merge pull request #59 from dkopecek/master\n\nFix compilation of json_unit with GCC 5"}, {"date": "2015-04-12T16:33:38Z", "message": "another test case"}, {"date": "2015-04-12T16:12:29Z", "message": "more coverage"}, {"date": "2015-04-12T15:26:54Z", "message": "some simplifications"}, {"date": "2015-04-12T14:57:51Z", "message": "added missing test cases"}, {"date": "2015-04-12T14:19:21Z", "message": "adjusted code to documentation; some cleanup"}, {"date": "2015-04-12T12:14:00Z", "message": "implemented front() and back()"}, {"date": "2015-04-12T11:15:26Z", "message": "constructor for an integer range"}, {"date": "2015-04-12T10:02:30Z", "message": "started to implement sequence container"}, {"date": "2015-04-11T17:26:12Z", "message": "adjusted code to documentation"}, {"date": "2015-04-11T13:42:54Z", "message": "increase test coverage"}, {"date": "2015-04-11T13:30:19Z", "message": "implemented issue #57: erase with iterators"}, {"date": "2015-04-09T17:21:24Z", "message": "added a note about supported compilers to close #50"}, {"date": "2015-04-09T16:55:57Z", "message": "added erase function for arrays"}, {"date": "2015-04-08T21:16:35Z", "message": "another test case"}, {"date": "2015-04-08T20:58:35Z", "message": "improved test case coverage"}, {"date": "2015-04-08T20:23:40Z", "message": "overworked type conversion"}, {"date": "2015-04-03T14:34:39Z", "message": "more SFINAE"}, {"date": "2015-04-03T12:43:44Z", "message": "using \"key_type\" where possible"}, {"date": "2015-04-03T12:20:15Z", "message": "subtle fix for get() function"}, {"date": "2015-04-01T21:23:36Z", "message": "documented empty()"}, {"date": "2015-05-30T14:47:20Z", "message": "added unit test for issue #76"}, {"date": "2015-05-12T15:29:50Z", "message": "Merge pull request #73 from maqnouch/patch-1\n\n Fix typos"}, {"date": "2015-05-10T15:30:41Z", "message": "more cleanup"}, {"date": "2015-05-10T15:12:36Z", "message": "some pretty-printing"}, {"date": "2015-05-10T15:10:47Z", "message": "Merge pull request #72 from aburgh/null-callback\n\nReplace `default_callback` function with `nullptr` and check for null\u2026"}, {"date": "2015-05-10T15:03:50Z", "message": "more cleanup"}, {"date": "2015-05-10T14:30:33Z", "message": "moved some code to json_value union"}, {"date": "2015-05-09T20:49:21Z", "message": "some parsing performance improvements"}, {"date": "2015-05-09T14:58:06Z", "message": "more test cases"}, {"date": "2015-05-09T13:38:58Z", "message": "cleanup"}, {"date": "2015-05-09T13:30:17Z", "message": "updated README"}, {"date": "2015-05-09T13:29:20Z", "message": "overworked code for pull request #71"}, {"date": "2015-05-09T13:23:51Z", "message": "Merge pull request #71 from likebeta/master\n\nsupport enum"}, {"date": "2015-05-09T13:09:52Z", "message": "fixed string definition"}, {"date": "2015-05-09T12:54:33Z", "message": "overworked coverage"}, {"date": "2015-05-09T12:37:22Z", "message": "added test cases"}, {"date": "2015-05-09T11:56:51Z", "message": "added compliance test cases"}, {"date": "2015-05-06T19:32:41Z", "message": "valgrind still makes problems"}, {"date": "2015-05-06T18:48:20Z", "message": "Appveyor"}, {"date": "2015-05-06T18:46:04Z", "message": "added test cases"}, {"date": "2015-05-06T18:21:06Z", "message": "overflows are handled wrong by Valgrind"}, {"date": "2015-05-06T18:18:16Z", "message": "fixed #68"}, {"date": "2015-05-06T17:52:12Z", "message": "fixed #70"}, {"date": "2015-05-04T21:31:34Z", "message": "applied #69 to header"}, {"date": "2015-05-04T13:39:44Z", "message": "Merge pull request #69 from aburgh/callback_performance\n\nFix performance regression introduced with the parsing callback feature."}, {"date": "2015-05-03T19:37:14Z", "message": "removed failing test case"}, {"date": "2015-05-03T19:28:57Z", "message": "another try"}, {"date": "2015-05-03T19:10:22Z", "message": "overworked test case"}, {"date": "2015-05-03T18:59:11Z", "message": "more test cases"}, {"date": "2015-05-03T18:42:24Z", "message": "more tests"}, {"date": "2015-05-03T18:18:16Z", "message": "test case for filter function"}, {"date": "2015-05-03T18:07:31Z", "message": "testing the callback function"}, {"date": "2015-05-03T17:55:45Z", "message": "more tests"}, {"date": "2015-05-03T16:59:58Z", "message": "more test cases"}, {"date": "2015-05-03T16:46:26Z", "message": "fixed test case"}, {"date": "2015-05-03T16:27:43Z", "message": "added more test cases"}, {"date": "2015-05-03T16:19:12Z", "message": "improved test case coverage"}, {"date": "2015-05-03T15:52:13Z", "message": "manually merged pull request #41"}, {"date": "2015-06-29T22:12:18Z", "message": "more tests"}, {"date": "2015-06-29T21:20:33Z", "message": "small README fix"}, {"date": "2015-06-29T21:02:41Z", "message": "add online examples"}, {"date": "2015-06-29T18:53:01Z", "message": "closed #91"}, {"date": "2015-06-28T17:32:09Z", "message": "more documentation"}, {"date": "2015-06-28T13:49:40Z", "message": "added documentation for erase functions"}, {"date": "2015-06-28T12:39:52Z", "message": "fixed #94"}, {"date": "2015-06-28T12:02:47Z", "message": "addressed static analysis warnings #94"}, {"date": "2015-06-27T16:43:11Z", "message": "fixed #97\n\n- added functions is_structured() and is_primitive()\n- updated documentation\n- updated test cases"}, {"date": "2015-06-24T22:40:16Z", "message": "minor changes"}, {"date": "2015-06-24T21:08:40Z", "message": "reset travis file"}, {"date": "2015-06-24T20:49:35Z", "message": "try travis matrix"}, {"date": "2015-06-24T13:46:50Z", "message": "added test cases for the last uncovered lines"}, {"date": "2015-06-24T13:16:32Z", "message": "worked on #91\n\n- implemented `get_ptr` function to return pointer to value member\n- overworked `get` function to support pointer types\n- added test cases\n- added documentation (see\nhttp://nlohmann.github.io/json/classnlohmann_1_1basic__json.html) with\nexamples"}, {"date": "2015-06-24T10:15:51Z", "message": "more documentation\n\nIn this commit, also the semantics for values skipped via the parser\ncallback has changed. Now, the top-level value is returned as \u201cnull\u201d\ninstead of \u201cdiscarded\u201d."}, {"date": "2015-06-22T21:21:49Z", "message": "more documentation"}, {"date": "2015-06-22T19:50:24Z", "message": "update Travis badge"}, {"date": "2015-06-22T19:44:20Z", "message": "more documentation"}, {"date": "2015-06-21T21:17:58Z", "message": "..."}, {"date": "2015-06-21T21:10:12Z", "message": "added codecov"}, {"date": "2015-06-21T21:07:13Z", "message": "fixed doxygen badge"}, {"date": "2015-06-21T21:05:50Z", "message": "update README badges"}, {"date": "2015-06-21T20:56:03Z", "message": "more documentation"}, {"date": "2015-06-21T20:42:32Z", "message": "more documentation"}, {"date": "2015-06-21T19:51:23Z", "message": "target to update documentation"}, {"date": "2015-06-21T19:24:03Z", "message": "reorganized repo"}, {"date": "2015-06-21T16:30:08Z", "message": "more documentation"}, {"date": "2015-06-21T11:39:10Z", "message": "overworked documentation configuration"}, {"date": "2015-06-21T11:16:52Z", "message": "minor change"}, {"date": "2015-06-21T11:14:39Z", "message": "clean up"}, {"date": "2015-06-21T11:12:17Z", "message": "clean up"}, {"date": "2015-06-21T11:04:03Z", "message": "added alias __basic_json"}, {"date": "2015-06-21T10:48:18Z", "message": "broke Makefile"}, {"date": "2015-06-21T10:47:35Z", "message": "automatic commit"}, {"date": "2015-06-21T10:45:46Z", "message": "added target to update Doxygen"}, {"date": "2015-06-21T10:03:59Z", "message": "removed coverity_scan from travis file"}, {"date": "2015-06-21T09:48:45Z", "message": "forgot branch_pattern"}, {"date": "2015-06-21T09:35:54Z", "message": "commit to trigger build"}, {"date": "2015-06-21T09:29:32Z", "message": "more documentation"}, {"date": "2015-06-21T09:29:24Z", "message": "testing poverty"}, {"date": "2015-06-21T07:44:12Z", "message": "more documentation"}, {"date": "2015-06-21T00:14:01Z", "message": "more documentation"}, {"date": "2015-06-20T22:59:33Z", "message": "overworked doxygen"}, {"date": "2015-06-20T15:45:59Z", "message": "mentioned Clang 3.7"}, {"date": "2015-06-20T15:45:52Z", "message": "forgot a header for MSVC"}, {"date": "2015-06-20T13:47:37Z", "message": "fixed compiler warnings"}, {"date": "2015-06-20T13:47:26Z", "message": "updated Catch"}, {"date": "2015-06-20T13:13:45Z", "message": "build in release mode on appveyor (from #88)"}, {"date": "2015-06-20T12:57:08Z", "message": "removed dependent to RTTI"}, {"date": "2015-06-20T12:29:34Z", "message": "minor iterator refactoring (from #88)"}, {"date": "2015-06-20T12:25:49Z", "message": "added fix for ssize_t for MSVC"}, {"date": "2015-06-20T12:16:57Z", "message": "remove warnings on unit tests (from #88)"}, {"date": "2015-06-20T12:15:15Z", "message": "fix warnings possible loss of data (from #88)"}, {"date": "2015-06-20T12:13:48Z", "message": "applied a part of #88"}, {"date": "2015-06-19T06:11:48Z", "message": "fixed issue #93"}, {"date": "2015-06-15T17:45:25Z", "message": "fixed #89 without breaking #71"}, {"date": "2015-06-15T14:37:49Z", "message": "closes #90"}, {"date": "2015-06-15T03:46:12Z", "message": "exclude Unicode tests from Valgrind to avoid timeout"}, {"date": "2015-06-14T21:17:49Z", "message": "added extensive Unicode tests"}, {"date": "2015-06-14T17:35:20Z", "message": "some maintenance\n\n- unified used exception types\n- removed any camel case names"}, {"date": "2015-06-13T11:01:10Z", "message": "test suite is not portable :-("}, {"date": "2015-06-13T10:42:18Z", "message": "fixed more float parsing cases"}, {"date": "2015-06-13T08:29:43Z", "message": "some cleanup after #87"}, {"date": "2015-06-13T08:27:24Z", "message": "Merge pull request #87 from ahamez/master\n\nKeyword 'inline' is useless when member functions are defined in headers"}, {"date": "2015-06-11T16:10:12Z", "message": "change from #86"}, {"date": "2015-06-11T16:08:00Z", "message": "added badge for license"}, {"date": "2015-06-11T16:01:06Z", "message": "Merge pull request #86 from ahamez/master\n\nRemove useless typename"}, {"date": "2015-06-08T14:35:38Z", "message": "some cleanup"}, {"date": "2015-06-08T14:32:37Z", "message": "Merge pull request #85 from ahamez/master\n\nAvoid warning with Xcode's clang"}, {"date": "2015-06-04T19:02:16Z", "message": "included fixes for MSVC (see #62)\n\n94de11e, f673c8d, 540b763"}, {"date": "2015-06-04T18:07:33Z", "message": "added test case for #82"}, {"date": "2015-06-04T17:43:29Z", "message": "fixed float serialization (#81 and #80)"}, {"date": "2015-06-04T06:31:13Z", "message": "fixed MinGW compilation (#81 and #80)"}, {"date": "2015-06-03T21:44:45Z", "message": "reset"}, {"date": "2015-06-03T21:34:10Z", "message": "improved performance for dump()"}, {"date": "2015-06-02T21:57:45Z", "message": "added Benchpress benchmarks"}, {"date": "2015-06-02T19:27:49Z", "message": "made array static constexpr (#79)"}, {"date": "2015-06-02T19:24:03Z", "message": "fixed typo (#74)"}, {"date": "2015-07-30T21:02:55Z", "message": "fixed the build"}, {"date": "2015-07-30T19:32:18Z", "message": "code for #83 (no tests yet)"}, {"date": "2015-07-26T18:44:55Z", "message": "prepare 1.0.0-rc1"}, {"date": "2015-07-26T16:41:58Z", "message": "closed #75\n\nminor changes, but the core idea remains the same"}, {"date": "2015-07-26T08:59:17Z", "message": "cleanup"}, {"date": "2015-07-26T08:46:15Z", "message": "removed Clang 3.7"}, {"date": "2015-07-26T08:41:49Z", "message": "fixed travis"}, {"date": "2015-07-26T08:41:38Z", "message": "updated catch"}, {"date": "2015-07-26T08:17:51Z", "message": "cleanup"}, {"date": "2015-07-24T20:50:22Z", "message": "cleanup"}, {"date": "2015-07-24T20:43:00Z", "message": "added g++-mingw-w64-i686"}, {"date": "2015-07-24T20:41:12Z", "message": "only calculate coverage for GCC 4.9"}, {"date": "2015-07-24T20:29:03Z", "message": "try"}, {"date": "2015-07-24T20:21:30Z", "message": "llvm source"}, {"date": "2015-07-24T20:19:14Z", "message": "cleaned llvm sources"}, {"date": "2015-07-24T20:16:24Z", "message": "more llvm sources"}, {"date": "2015-07-24T20:14:16Z", "message": "sources for llvm"}, {"date": "2015-07-24T20:11:09Z", "message": "set compiler flag"}, {"date": "2015-07-24T20:08:29Z", "message": "added clang"}, {"date": "2015-07-24T20:03:45Z", "message": "fix for environment"}, {"date": "2015-07-24T20:00:48Z", "message": "try env"}, {"date": "2015-07-24T19:54:38Z", "message": "added CXX"}, {"date": "2015-07-24T19:52:56Z", "message": "wrong sources"}, {"date": "2015-07-24T19:51:01Z", "message": "wrong sources"}, {"date": "2015-07-24T19:46:46Z", "message": "added missing source"}, {"date": "2015-07-24T19:43:07Z", "message": "local installation"}, {"date": "2015-07-24T19:41:07Z", "message": "move to new Travis infrastructure"}, {"date": "2015-07-19T11:33:03Z", "message": "fixed Windows build"}, {"date": "2015-07-19T10:41:46Z", "message": "some cleanup"}, {"date": "2015-07-16T20:37:54Z", "message": "updated documentation to show off MSVC support"}, {"date": "2015-07-16T17:53:42Z", "message": "cleanup"}, {"date": "2015-07-16T17:39:18Z", "message": "typo..."}, {"date": "2015-07-16T17:32:19Z", "message": "switch off optimizations in MSVC"}, {"date": "2015-07-16T17:04:51Z", "message": "some changes to Appveyor"}, {"date": "2015-07-16T16:45:19Z", "message": "added changes from #105: MSVC fixes\n\n- additionally, switch off optimization flags to maybe allow build to\ncomplete on AppVeyor"}, {"date": "2015-07-14T19:24:29Z", "message": "updated readme"}, {"date": "2015-07-14T19:21:08Z", "message": "closes #104 and integrates code from #93\n\nIterators are now implemented via const_iterators and reverse_iterator\nand const_reverse_iterator now share a template class. Thanks a lot!"}, {"date": "2015-07-12T20:47:08Z", "message": "added another insert function"}, {"date": "2015-07-12T18:40:46Z", "message": "added test case"}, {"date": "2015-07-12T16:28:23Z", "message": "added first insert functions"}, {"date": "2015-07-12T15:08:51Z", "message": "more documentation"}, {"date": "2015-07-12T12:49:37Z", "message": "more documentation and some cleanup"}, {"date": "2015-07-08T14:55:29Z", "message": "worked on #102: more documentation and examples"}, {"date": "2015-07-07T21:31:43Z", "message": "new implementation for (const_)reverse_iterator to cope with issue #93"}, {"date": "2015-07-06T21:21:54Z", "message": "fixed #100"}, {"date": "2015-07-06T19:12:50Z", "message": "cleanup"}, {"date": "2015-07-05T20:22:15Z", "message": "refactored generic iterator into a new class primitive_iterator_t"}, {"date": "2015-07-01T21:08:54Z", "message": "fixed #101"}, {"date": "2015-08-22T08:47:14Z", "message": "reverted changes"}, {"date": "2015-08-22T08:43:04Z", "message": "more compilers"}, {"date": "2015-08-21T17:12:06Z", "message": "removed failing compilers"}, {"date": "2015-08-21T17:05:47Z", "message": "better compiler matrix"}, {"date": "2015-08-14T13:30:06Z", "message": "debugging"}, {"date": "2015-08-14T13:20:50Z", "message": "debugging"}, {"date": "2015-08-14T13:09:16Z", "message": "Appveyor fix"}, {"date": "2015-08-14T12:56:58Z", "message": "minor change"}, {"date": "2015-08-14T12:45:13Z", "message": "merged #111"}, {"date": "2015-08-13T08:24:28Z", "message": "try to avoid MSVC bug (https://connect.microsoft.com/VisualStudio/feedback/details/797682/c-decltype-of-class-member-access-incompletely-implemented)"}, {"date": "2015-08-13T08:08:55Z", "message": "fixed iterator_wrapper"}, {"date": "2015-08-06T21:02:52Z", "message": "removed failing tests"}, {"date": "2015-08-06T20:53:16Z", "message": "fixed off-by-one error"}, {"date": "2015-08-06T20:36:08Z", "message": "added test cases for #83"}, {"date": "2015-08-06T20:35:56Z", "message": "reverted \u201cfix\u201d for issue #107"}, {"date": "2015-08-06T19:33:24Z", "message": "fixed travis script"}, {"date": "2015-08-04T16:12:11Z", "message": "addressed locale-issues #107"}, {"date": "2015-08-02T19:49:42Z", "message": "fixed build"}, {"date": "2015-08-02T19:47:11Z", "message": "fixed build"}, {"date": "2015-08-02T19:40:25Z", "message": "fixed build"}, {"date": "2015-08-02T19:35:07Z", "message": "fixed build"}, {"date": "2015-08-02T19:27:02Z", "message": "add a test for the iterator_wrapper"}, {"date": "2015-10-23T16:42:10Z", "message": "Merge pull request #130 from dariomt/patch-1\n\nremoved stream operator for iterator, resolution for #125"}, {"date": "2015-10-20T20:31:15Z", "message": "Merge pull request #137 from dariomt/patch-3\n\nDetect correctly pointer-to-const"}, {"date": "2015-10-17T10:51:59Z", "message": "cleanup"}, {"date": "2015-10-17T10:41:20Z", "message": "Merge pull request #131 from dariomt/patch-2\n\ndisabled \"CopyAssignable\" test for MSVC in Debug mode, see #125"}, {"date": "2015-10-03T11:16:59Z", "message": "Cleanup"}, {"date": "2015-10-03T10:29:26Z", "message": "Merge pull request #122 from d-frey/patch-1\n\nexception-safe object creation, fixes #118"}, {"date": "2015-10-03T08:43:16Z", "message": "Merge pull request #120 from silverweed/patch-1\n\nOverload parse() to accept an rvalue reference"}, {"date": "2015-10-03T08:41:26Z", "message": "Merge pull request #115 from whoshuu/patch-1\n\nUse the right variable name in doc string"}, {"date": "2015-10-03T08:39:14Z", "message": "Merge pull request #121 from ColinH/master\n\nFix small oversight."}, {"date": "2015-10-03T08:38:18Z", "message": "Merge pull request #126 from d-frey/patch-2\n\nRemove superfluous inefficiency"}, {"date": "2015-10-03T08:36:35Z", "message": "Merge pull request #129 from dariomt/master\n\nfixed typos in comments for examples"}, {"date": "2015-11-14T07:22:04Z", "message": "Merge pull request #146 from robertmrk/surrogate-pair-parsing-fix\n\nFix character skipping after a surrogate pair"}, {"date": "2015-12-29T11:30:05Z", "message": "removed an unnecessary cast (fixed #162)"}, {"date": "2015-12-28T14:04:15Z", "message": "version number"}, {"date": "2015-12-28T13:51:57Z", "message": "preparing 1.0.0 release"}, {"date": "2015-12-27T17:07:21Z", "message": "fixed a cppcheck warning"}, {"date": "2015-12-27T16:58:36Z", "message": "minor cleanup"}, {"date": "2015-12-27T14:30:30Z", "message": "using CHECK_THROWS_WITH to check exceptions (#160)"}, {"date": "2015-12-26T12:17:32Z", "message": "more work on exceptions (#160)"}, {"date": "2015-12-25T12:04:40Z", "message": "more tests for exceptions (#160)"}, {"date": "2015-12-25T10:46:18Z", "message": "overworked exceptions and tests (#160)"}, {"date": "2015-12-23T11:05:57Z", "message": "cleanup"}, {"date": "2015-12-23T07:44:34Z", "message": "cleanup"}, {"date": "2015-12-23T07:21:29Z", "message": "iterator_wrapper for const objects (#83)"}, {"date": "2015-12-22T17:07:51Z", "message": "some cleanup for #83"}, {"date": "2015-12-22T12:27:40Z", "message": "working on #160"}, {"date": "2015-12-21T07:42:42Z", "message": "re-adding const version operator[] (#135, #159)\n\nIt was a good idea to implement a const version of operator[] it in the\nfirst place. I was a pity that this implementation was flawed. It was a\nmistake to remove the const version completely. This commit\nre-introduces the const version. My apologies for all the inconvenience."}, {"date": "2015-12-20T14:42:01Z", "message": "upgraded Catch to v1.3.1"}, {"date": "2015-12-20T14:30:07Z", "message": "work on #144"}, {"date": "2015-12-17T15:52:38Z", "message": "fixed #156"}, {"date": "2015-12-17T15:22:15Z", "message": "fixed compilation error and fixed shadow warnings"}, {"date": "2015-12-17T14:49:33Z", "message": "some cleanup and more documentation"}, {"date": "2015-12-16T11:10:12Z", "message": "show reference to source code in documentation"}, {"date": "2015-12-16T11:09:59Z", "message": "fix for #127"}, {"date": "2015-12-15T18:42:32Z", "message": "cleanup documentation; started added versions"}, {"date": "2015-12-15T17:34:07Z", "message": "undid the fix for #136"}, {"date": "2015-12-15T07:38:54Z", "message": "fix for #133\n\nadded value() function to get object value at given key or a default\nvalue if key does not exist"}, {"date": "2015-12-14T20:23:21Z", "message": "cleanup"}, {"date": "2015-12-14T15:58:49Z", "message": "clean up (for #154)"}, {"date": "2015-12-14T15:32:37Z", "message": "fixed #154 (no more warnings for incomplete switches)"}, {"date": "2015-12-13T10:26:55Z", "message": "fixed #135: operator[] now only works on nonconst JSON objects"}, {"date": "2015-12-08T17:12:34Z", "message": "dropped GCC 4.8 support (due to #110)"}, {"date": "2015-12-07T21:27:53Z", "message": "ignore UTF-8 byte order mark (fixes #152)"}, {"date": "2015-12-07T20:53:32Z", "message": "added a comment (see #109)"}, {"date": "2015-12-07T20:50:27Z", "message": "corrected a username"}, {"date": "2015-12-07T20:11:58Z", "message": "Merge pull request #124 from emvivre/master\n\nremove invalid parameter '-stdlib=libc++' in CMakeLists.txt"}, {"date": "2015-12-07T20:05:21Z", "message": "added change from #140"}, {"date": "2015-12-07T19:38:13Z", "message": "cleanup after #153"}, {"date": "2015-12-07T19:35:43Z", "message": "Merge pull request #153 from whackashoe/remove_sprintf\n\nReplace sprintf with hex function, this fixes #149"}, {"date": "2015-12-06T16:33:47Z", "message": "fixes #136"}, {"date": "2016-01-31T14:04:38Z", "message": "improve code coverage"}, {"date": "2016-01-31T12:05:39Z", "message": "improved documentation"}, {"date": "2016-01-30T21:05:01Z", "message": "moved documentation to index markdown file"}, {"date": "2016-01-30T20:17:08Z", "message": "added a note about GCC 4.8 (#163)"}, {"date": "2016-01-30T19:33:31Z", "message": "using re2c 0.16 (minimized automaton)"}, {"date": "2016-01-30T19:23:14Z", "message": "removed \"using namespace\" from examples"}, {"date": "2016-01-30T15:51:53Z", "message": "updated ChangeLog"}, {"date": "2016-01-30T12:36:15Z", "message": "cleanup after #200"}, {"date": "2016-01-30T12:32:22Z", "message": "Merge pull request #200 from twelsby/issue199\n\nFixed issue #199 - Small bugs in json.hpp (get_number) and unit.cpp (non-standard integer type test)"}, {"date": "2016-01-26T22:30:51Z", "message": "removed token"}, {"date": "2016-01-26T22:27:07Z", "message": "added note"}, {"date": "2016-01-26T22:10:52Z", "message": "linked releases in ChangeLog"}, {"date": "2016-01-26T21:59:57Z", "message": "added (generated) changelog"}, {"date": "2016-01-26T20:49:20Z", "message": "added Gitter to Travis"}, {"date": "2016-01-26T20:42:51Z", "message": "trying Gitter"}, {"date": "2016-01-26T19:07:03Z", "message": "overworked examples"}, {"date": "2016-01-26T18:50:49Z", "message": "clean up after #193"}, {"date": "2016-01-26T18:40:16Z", "message": "Merge pull request #193 from twelsby/issue178\n\nIssue #178 - Extending support to full uint64_t/int64_t range and unsigned type (updated)"}, {"date": "2016-01-26T18:21:46Z", "message": "added note to warn about floating-point exceptions (#181)"}, {"date": "2016-01-26T18:13:03Z", "message": "cleanup after #196"}, {"date": "2016-01-26T18:12:36Z", "message": "Merge pull request #196 from twelsby/issue195\n\nIssue #195 - update Travis to Trusty due to gcc/clang strtod() bug"}, {"date": "2016-01-26T18:11:58Z", "message": "thanks"}, {"date": "2016-01-26T18:10:46Z", "message": "Merge pull request #197 from m-click/fix_broken_link\n\nFix broken link"}, {"date": "2016-01-24T22:02:28Z", "message": "updated online version"}, {"date": "2016-01-24T21:43:00Z", "message": "fixed documentation"}, {"date": "2016-01-24T21:21:27Z", "message": "fixed version number"}, {"date": "2016-01-24T18:24:06Z", "message": "some editing"}, {"date": "2016-01-24T16:33:46Z", "message": "cleanup after #191"}, {"date": "2016-01-24T16:21:22Z", "message": "Merge pull request #191 from twelsby/issue186\n\nFixed Issue #186 - add strto(f|d|ld) overload wrappers, \"-0.0\" special case and FP trailing zero"}, {"date": "2016-01-24T16:06:36Z", "message": "added issue stats"}, {"date": "2016-01-24T15:42:45Z", "message": "added more comments"}, {"date": "2016-01-24T15:42:13Z", "message": "fixed #194"}, {"date": "2016-01-24T12:28:16Z", "message": "small addition"}, {"date": "2016-01-24T12:28:08Z", "message": "applied include-what-you-use"}, {"date": "2016-01-24T12:04:55Z", "message": "cleanup"}, {"date": "2016-01-24T11:55:40Z", "message": "Merge pull request #190 from twelsby/issue185\n\nfixed #185 - remove approx() and use #pragma to kill warnings"}, {"date": "2016-01-24T10:00:54Z", "message": "cleanup after PR #189"}, {"date": "2016-01-24T09:47:26Z", "message": "Merge pull request #189 from twelsby/issue171\n\nFixed Issue #171 - added two extra template overloads of operator[] for T* arguments"}, {"date": "2016-01-20T20:20:41Z", "message": "added a note wrt. Valgrind (#175)"}, {"date": "2016-01-20T20:15:10Z", "message": "wishlist"}, {"date": "2016-01-20T20:14:58Z", "message": "cleanup after #184"}, {"date": "2016-01-20T19:58:44Z", "message": "Merge pull request #184 from dariomt/master\n\nImplementation of get_ref()"}, {"date": "2016-01-15T07:24:44Z", "message": "thanks"}, {"date": "2016-01-15T06:21:07Z", "message": "Merge pull request #182 from nibroc/master\n\nFixed some typos in CONTRIBUTING.md"}, {"date": "2016-01-13T20:08:42Z", "message": "added note on assertions (#168)"}, {"date": "2016-01-13T19:37:05Z", "message": "fixed wrong file name"}, {"date": "2016-01-13T19:26:47Z", "message": "fixed lists"}, {"date": "2016-01-13T19:19:05Z", "message": "it's 2016 already..."}, {"date": "2016-01-13T19:18:06Z", "message": "contribution guidelines (#175)"}, {"date": "2016-01-13T18:19:35Z", "message": "removing unused catch variables (fixes #180)"}, {"date": "2016-01-13T18:14:33Z", "message": "fixing numerous typos (fixes #179)"}, {"date": "2016-01-03T16:05:27Z", "message": "added assertions (#168)"}, {"date": "2016-01-02T15:49:56Z", "message": "reverting OSX"}, {"date": "2016-01-02T15:42:45Z", "message": "more Valgrind information"}, {"date": "2016-01-02T15:37:40Z", "message": "trying Travis and OSX"}, {"date": "2016-01-02T14:42:56Z", "message": "removed clang 3.8"}, {"date": "2016-01-02T14:34:34Z", "message": "trying Clang 3.8"}, {"date": "2016-01-02T14:30:12Z", "message": "forgot version number"}, {"date": "2016-01-02T14:24:13Z", "message": "trying to add Clang 3.7 toolchain"}, {"date": "2016-01-02T12:07:22Z", "message": "cleanup"}, {"date": "2016-01-01T17:33:58Z", "message": "fix for #166"}, {"date": "2016-02-21T07:17:11Z", "message": "cleanup"}, {"date": "2016-02-21T07:15:46Z", "message": "Merge pull request #213 from whackashoe/patch-1\n\nCreate PULL_REQUEST_TEMPLATE.md"}, {"date": "2016-02-14T21:56:51Z", "message": "improved code coverage"}, {"date": "2016-02-14T21:28:56Z", "message": "updated online documentation"}, {"date": "2016-02-14T21:24:45Z", "message": "cleanup"}, {"date": "2016-02-14T21:18:39Z", "message": "Merge pull request #208 from nlohmann/noexcept\n\nfixed noexcept; added constexpr"}, {"date": "2016-02-14T20:44:00Z", "message": "update from master"}, {"date": "2016-02-14T20:36:56Z", "message": "added serialization to fuzz testing"}, {"date": "2016-02-14T20:36:43Z", "message": "updated Catch to v1.3.4"}, {"date": "2016-02-14T17:38:29Z", "message": "cleanup after #207"}, {"date": "2016-02-14T16:24:54Z", "message": "Merge pull request #207 from msm-/afl-fuzz\n\nadd support for afl-fuzz testing"}, {"date": "2016-02-14T15:58:24Z", "message": "fixed error when compiled with Clang"}, {"date": "2016-02-14T15:53:32Z", "message": "fixed an error in MSVC"}, {"date": "2016-02-14T15:42:48Z", "message": "added noexcept and constexpr"}, {"date": "2016-02-10T20:41:55Z", "message": "Merge pull request #205 from nlohmann/issue204\n\nreplaced ssize_t occurrences with auto (fixes #204)"}, {"date": "2016-02-10T20:19:31Z", "message": "try to replace std::ptrdiff_t with auto (for #204)"}, {"date": "2016-02-10T20:09:52Z", "message": "try to replace ssize_t occurrences with std::ptrdiff_t (for #204)"}, {"date": "2016-02-09T20:26:40Z", "message": "tried Clang 3.9"}, {"date": "2016-02-07T16:24:51Z", "message": "removed gitter"}, {"date": "2016-02-07T14:07:17Z", "message": "updated and fixed online version"}, {"date": "2016-02-07T13:55:29Z", "message": "improved documentation"}, {"date": "2016-02-07T09:45:52Z", "message": "clarified documentation"}, {"date": "2016-02-05T21:37:28Z", "message": "reverted change wrt. Erasable concept"}, {"date": "2016-02-05T21:30:37Z", "message": "checking Erasable concept"}, {"date": "2016-02-05T21:30:25Z", "message": "improved documentation"}, {"date": "2016-02-05T18:24:42Z", "message": "added a constructor from an input stream"}, {"date": "2016-03-30T18:21:35Z", "message": "Merge pull request #227 from kevin--/kevin--/noexcept_documentation\n\nfixes #223 by updating README.md"}, {"date": "2016-03-30T18:18:34Z", "message": "fixed #225"}, {"date": "2016-03-30T18:12:55Z", "message": "Merge pull request #222 from Teemperor/fixAndroid\n\nAdded missing cerrno header to fix ERANGE compile error on android"}, {"date": "2016-03-30T17:47:08Z", "message": "added more thanks to the README file"}, {"date": "2016-03-30T17:42:54Z", "message": "better notes for Android (manually closes #215)"}, {"date": "2016-03-30T17:23:11Z", "message": "cleanup after PR #212 and PR #226"}, {"date": "2016-03-29T08:35:24Z", "message": "Merge pull request #226 from lv-zheng/fix_int64\n\nUse namespace std for int64_t and uint64_t"}, {"date": "2016-03-25T16:41:36Z", "message": "added copyright information to files to make release more self-contained"}, {"date": "2016-03-06T19:03:05Z", "message": "fixes #214"}, {"date": "2016-03-04T06:30:08Z", "message": "fixed #217"}, {"date": "2016-03-04T06:26:27Z", "message": "Merge pull request #218 from Annihil/master\n\nCorrected readme"}, {"date": "2016-04-30T14:22:27Z", "message": "hopefully removed some warnings"}, {"date": "2016-04-30T08:39:03Z", "message": "simplified flatten/unflatten examples"}, {"date": "2016-04-29T23:21:35Z", "message": "added AppVeyor information"}, {"date": "2016-04-29T23:01:41Z", "message": "added documentation on Travis compilers"}, {"date": "2016-04-29T22:43:33Z", "message": "added name call"}, {"date": "2016-04-29T22:25:11Z", "message": "get compiler versions"}, {"date": "2016-04-29T22:12:19Z", "message": "cleanup"}, {"date": "2016-04-29T22:03:47Z", "message": "added test cases"}, {"date": "2016-04-29T19:23:13Z", "message": "hopefully fixed a warning"}, {"date": "2016-04-29T18:50:34Z", "message": "Merge branch 'develop' into feature/json-patch"}, {"date": "2016-04-29T18:48:47Z", "message": "removed MinGW compiler (too old)"}, {"date": "2016-04-29T18:35:40Z", "message": "wrong MinGW binary"}, {"date": "2016-04-29T18:18:20Z", "message": "added MinGW"}, {"date": "2016-04-29T18:09:41Z", "message": "cleanup"}, {"date": "2016-04-29T18:01:11Z", "message": "don't install valgrind for OSX"}, {"date": "2016-04-29T18:00:33Z", "message": "Valgrind only for Linux"}, {"date": "2016-04-29T17:46:37Z", "message": "added OSX"}, {"date": "2016-04-29T17:37:52Z", "message": "trying Clang 3.9"}, {"date": "2016-04-29T17:33:43Z", "message": "removed GCC 6, added Clang 3.5"}, {"date": "2016-04-29T17:29:02Z", "message": "added GCC 6 and Clang 3.8 to Travis"}, {"date": "2016-04-26T18:43:02Z", "message": "Merge branch 'develop' into feature/json-patch"}, {"date": "2016-04-26T18:38:01Z", "message": "update after #238"}, {"date": "2016-04-26T18:32:24Z", "message": "Merge branch 'develop' into feature/json-patch"}, {"date": "2016-04-26T18:31:19Z", "message": "Merge pull request #238 from robertmrk/cmake-package\n\nImplement additional integration options"}, {"date": "2016-04-25T21:17:04Z", "message": "cleanup, test, and diff"}, {"date": "2016-04-24T17:09:12Z", "message": "fixed some warnings"}, {"date": "2016-04-24T17:04:10Z", "message": "oops"}, {"date": "2016-04-24T17:03:33Z", "message": "clean up and added tests"}, {"date": "2016-04-24T15:43:27Z", "message": "implemented \"move\""}, {"date": "2016-04-24T14:51:06Z", "message": "extended \"add\" to cope with arrays"}, {"date": "2016-04-20T14:52:00Z", "message": "implemented remove"}, {"date": "2016-04-20T13:41:33Z", "message": "replace and copy"}, {"date": "2016-04-18T20:41:36Z", "message": "started implementing JSON Patch (RFC 6902)"}, {"date": "2016-04-17T21:41:52Z", "message": "made a function static"}, {"date": "2016-04-17T21:36:37Z", "message": "updated documentation"}, {"date": "2016-04-17T21:23:34Z", "message": "Merge branch 'feature/json-pointer' into develop"}, {"date": "2016-04-17T21:18:07Z", "message": "added examples"}, {"date": "2016-04-17T20:34:39Z", "message": "fixed test case"}, {"date": "2016-04-17T20:08:21Z", "message": "improved documentation and test coverage"}, {"date": "2016-04-17T17:12:12Z", "message": "improved test coverage"}, {"date": "2016-04-17T16:54:54Z", "message": "improved RFC compliance and code coverage"}, {"date": "2016-04-17T16:18:49Z", "message": "more documentation"}, {"date": "2016-04-17T15:39:35Z", "message": "cleanup and documentation"}, {"date": "2016-04-16T18:45:40Z", "message": "implemented deflatten function"}, {"date": "2016-04-16T14:39:20Z", "message": "added a flatten function"}, {"date": "2016-04-16T12:02:14Z", "message": "cleaned up API"}, {"date": "2016-04-16T10:19:31Z", "message": "Merge branch 'develop' into feature/json-pointer"}, {"date": "2016-04-16T10:19:10Z", "message": "cleanup after #234"}, {"date": "2016-04-16T10:12:16Z", "message": "Merge branch 'support-move-iterators' of https://github.com/robertmrk/json into develop"}, {"date": "2016-04-13T21:23:54Z", "message": "overworked reference token parsing"}, {"date": "2016-04-13T15:41:19Z", "message": "adding support for escaped reference tokens"}, {"date": "2016-04-11T21:17:03Z", "message": "very first draft of a JSON pointer API"}, {"date": "2016-04-10T17:36:09Z", "message": "updated ChangeLog"}, {"date": "2016-04-10T16:23:43Z", "message": "fixed typo and indentation"}, {"date": "2016-04-07T15:16:58Z", "message": "Merge pull request #232 from nlohmann/issue228\n\nmake serialization locale-independent (fixes #228)"}, {"date": "2016-04-05T20:28:27Z", "message": "made tests independent of \"C\" locale"}, {"date": "2016-04-05T20:12:12Z", "message": "make code independent of concrete locale"}, {"date": "2016-04-05T19:55:51Z", "message": "fixed locale problems"}, {"date": "2016-04-05T18:47:47Z", "message": "revert changes to master"}, {"date": "2016-04-03T14:33:30Z", "message": "locale-independent dump"}, {"date": "2016-04-03T12:08:38Z", "message": "merged #201"}, {"date": "2016-05-29T12:56:36Z", "message": "Merge branch 'develop' into coverity_scan"}, {"date": "2016-05-29T12:56:08Z", "message": "cleanup"}, {"date": "2016-05-29T12:06:54Z", "message": "Merge branch 'develop' into coverity_scan"}, {"date": "2016-05-29T12:06:43Z", "message": "overworked coverity stuffy"}, {"date": "2016-05-29T11:32:48Z", "message": "Merge branch 'develop' into coverity_scan"}, {"date": "2016-05-29T11:32:36Z", "message": "ignore build errors for coverity-scan"}, {"date": "2016-05-29T11:06:40Z", "message": "Merge branch 'develop' into coverity_scan"}, {"date": "2016-05-29T11:06:27Z", "message": "removing beta-xcode6.3 for now"}, {"date": "2016-05-29T10:57:30Z", "message": "Merge branch 'develop' into coverity_scan"}, {"date": "2016-05-29T10:57:09Z", "message": "fixed used compiler"}, {"date": "2016-05-29T10:29:46Z", "message": "another try for coverity-scan"}, {"date": "2016-05-29T10:15:13Z", "message": "another try for coverity-scan"}, {"date": "2016-05-29T10:07:20Z", "message": "added coverity_scan"}, {"date": "2016-05-28T14:06:41Z", "message": "added a note about different NDKs (see #219)"}, {"date": "2016-05-25T19:55:03Z", "message": "removed a line"}, {"date": "2016-05-18T20:23:35Z", "message": "added hint to Homebrew"}, {"date": "2016-05-18T20:20:45Z", "message": "Merge pull request #247 from robertmrk/feature/cmake-cleanup\n\nDefine CMake/CTest tests"}, {"date": "2016-05-18T20:17:08Z", "message": "fixed #246"}, {"date": "2016-05-12T05:34:36Z", "message": "indentation cleanup"}, {"date": "2016-05-11T22:32:18Z", "message": "fixed a warning and update ChangeLog"}, {"date": "2016-05-11T18:58:11Z", "message": "thanks"}, {"date": "2016-05-11T18:52:45Z", "message": "Merge pull request #242 from ChrisKitching/outOfTree\n\nOut of tree builds and a few other miscellaneous CMake cleanups."}, {"date": "2016-05-11T16:43:12Z", "message": "fixed a shadow error"}, {"date": "2016-05-11T15:25:59Z", "message": "fixed issue #239 (-Wconversion warnings)"}, {"date": "2016-05-11T15:23:01Z", "message": "Merge branch 'develop' into feature/issue239"}, {"date": "2016-05-08T18:28:20Z", "message": "working on #235"}, {"date": "2016-05-08T15:17:17Z", "message": "another try to remove a warning"}, {"date": "2016-05-08T15:07:08Z", "message": "Merge branch 'develop' into feature/issue239"}, {"date": "2016-05-08T12:35:32Z", "message": "added test case for std::bad_alloc"}, {"date": "2016-05-07T18:22:58Z", "message": "removed unnecessary code (numbers must not begin with \"+\")"}, {"date": "2016-05-07T16:41:02Z", "message": "Merge branch 'feature/json-patch' into develop"}, {"date": "2016-05-07T16:33:43Z", "message": "improved test coverage"}, {"date": "2016-06-30T10:43:06Z", "message": "replaced a copy by a move to increase performance by 16-25%"}, {"date": "2016-06-29T10:47:29Z", "message": "using std::advance where possible"}, {"date": "2016-06-29T07:53:48Z", "message": "fixed coverage bug"}, {"date": "2016-06-29T07:34:14Z", "message": "math..."}, {"date": "2016-06-29T07:22:28Z", "message": "wrong GCC version"}, {"date": "2016-06-29T07:16:18Z", "message": "overlapping defines"}, {"date": "2016-06-28T20:49:05Z", "message": "replace some raw loops with algorithms"}, {"date": "2016-06-28T20:09:22Z", "message": "check for unsupported compilers"}, {"date": "2016-06-28T19:46:53Z", "message": "update of ChangeLog"}, {"date": "2016-06-28T19:44:03Z", "message": "bumped version number"}, {"date": "2016-06-28T19:40:23Z", "message": "Merge branch 'develop'"}, {"date": "2016-06-28T19:38:59Z", "message": "Merge branch 'release/2.0.1' into develop"}, {"date": "2016-06-28T19:33:43Z", "message": "Merge branch 'release/2.0.1'"}, {"date": "2016-06-28T19:33:34Z", "message": "adjusted Changelog"}, {"date": "2016-06-28T19:24:18Z", "message": "fixed performance regression #272"}, {"date": "2016-06-28T19:19:36Z", "message": "Merge branch 'feature/issue272' into develop"}, {"date": "2016-06-28T17:18:23Z", "message": "reset locale (for #272)"}, {"date": "2016-06-28T08:42:17Z", "message": "addressing #272"}, {"date": "2016-06-24T15:39:03Z", "message": "updated README and ChangeLog"}, {"date": "2016-06-24T15:15:54Z", "message": "another fix for the MSVC version"}, {"date": "2016-06-24T09:28:01Z", "message": "Merge pull request #271 from thelostt/patch-1\n\nfixed a tiny typo"}, {"date": "2016-06-24T06:06:41Z", "message": "off-by-one error in the documentation"}, {"date": "2016-06-24T05:39:08Z", "message": "clarified MSV version"}, {"date": "2016-06-23T22:46:36Z", "message": "Merge branch 'release/2.0.0'"}, {"date": "2016-06-23T22:28:10Z", "message": "Merge branch 'develop' into coverity_scan"}, {"date": "2016-06-23T22:14:27Z", "message": "update of documentation links"}, {"date": "2016-06-23T21:34:41Z", "message": "updated release information"}, {"date": "2016-06-23T20:49:48Z", "message": "fixed re2c warnings"}, {"date": "2016-06-23T16:28:29Z", "message": "Merge branch 'develop' into coverity_scan"}, {"date": "2016-06-23T16:08:20Z", "message": "updated README"}, {"date": "2016-06-23T16:00:06Z", "message": "Merge branch 'feature/undo-number-roundtrip' into develop"}, {"date": "2016-06-23T03:57:41Z", "message": "Merge branch 'develop' into feature/undo-number-roundtrip"}, {"date": "2016-06-23T03:55:48Z", "message": "cleanup"}, {"date": "2016-06-22T22:05:01Z", "message": "Merge branch 'feature/issue269' into develop"}, {"date": "2016-06-22T22:04:55Z", "message": "Merge branch 'develop' into feature/issue269\n\n# Conflicts:\n#\tREADME.md"}, {"date": "2016-06-22T20:20:55Z", "message": "overworked ChangeLog and README"}, {"date": "2016-06-22T18:40:15Z", "message": "test case for #269"}, {"date": "2016-06-22T18:09:06Z", "message": "fix for previous commit"}, {"date": "2016-06-22T18:05:44Z", "message": "a conceptual quick fix for #269"}, {"date": "2016-06-19T20:39:05Z", "message": "Merge branch 'develop' into coverity_scan"}, {"date": "2016-06-19T20:38:54Z", "message": "updated README"}, {"date": "2016-06-19T20:20:02Z", "message": "re-added GCC6"}, {"date": "2016-06-19T20:12:56Z", "message": "fix for coverity"}, {"date": "2016-06-19T20:07:16Z", "message": "Merge branch 'develop' into coverity_scan"}, {"date": "2016-06-19T19:57:32Z", "message": "fix SSL issue with coverity"}, {"date": "2016-06-19T16:33:46Z", "message": "Merge branch 'develop' into coverity_scan"}, {"date": "2016-06-19T16:27:07Z", "message": "Merge branch 'develop' into feature/undo-number-roundtrip"}, {"date": "2016-06-19T16:25:43Z", "message": "updated to Catch v1.5.6"}, {"date": "2016-06-19T15:59:53Z", "message": "Merge branch 'develop' into feature/undo-number-roundtrip"}, {"date": "2016-06-19T15:56:58Z", "message": "fixed two typos"}, {"date": "2016-06-19T15:13:13Z", "message": "removed roundtripping of floats (#230)"}, {"date": "2016-06-19T14:17:53Z", "message": "minor doc changes"}, {"date": "2016-06-18T12:33:27Z", "message": "trying codecov"}, {"date": "2016-06-15T19:28:27Z", "message": "mentioning Homebrew's `--HEAD` parameter"}, {"date": "2016-06-14T13:27:16Z", "message": "update after PR #266"}, {"date": "2016-06-14T13:24:49Z", "message": "Merge pull request #266 from 06needhamt/Issue\n\nFix Issue #265"}, {"date": "2016-06-14T06:28:36Z", "message": "Merge branch 'feature/issue260' into develop"}, {"date": "2016-06-14T06:23:09Z", "message": "Merge branch 'develop' into feature/issue260"}, {"date": "2016-06-14T06:14:25Z", "message": "adjusted README file to reality in Travis"}, {"date": "2016-06-14T06:02:29Z", "message": "added Xcode 8 beta"}, {"date": "2016-06-07T10:13:03Z", "message": "Merge branch 'develop' into feature/issue260"}, {"date": "2016-06-07T10:04:57Z", "message": "enough for today..."}, {"date": "2016-06-07T09:52:12Z", "message": "setting explicit path to compiler"}, {"date": "2016-06-07T09:42:34Z", "message": "export"}, {"date": "2016-06-07T09:38:56Z", "message": "?"}, {"date": "2016-06-07T09:36:03Z", "message": "another try"}, {"date": "2016-06-07T09:29:37Z", "message": "another try"}, {"date": "2016-06-07T09:25:00Z", "message": "trying to install clang"}, {"date": "2016-06-07T09:14:02Z", "message": "another test"}, {"date": "2016-06-07T09:13:15Z", "message": "a test"}, {"date": "2016-06-07T09:02:45Z", "message": "adding more Clang versions"}, {"date": "2016-06-07T08:53:18Z", "message": "another try"}, {"date": "2016-06-07T08:03:18Z", "message": "readded -lc++"}, {"date": "2016-06-07T07:50:43Z", "message": "removed -lc++"}, {"date": "2016-06-07T07:49:11Z", "message": "Revert \"another try\"\n\nThis reverts commit f63317dce34ae34a9a26809ae277f867ac6b4348."}, {"date": "2016-06-07T07:34:46Z", "message": "another try"}, {"date": "2016-06-07T07:12:53Z", "message": "another try"}, {"date": "2016-06-07T07:01:49Z", "message": "another try"}, {"date": "2016-06-07T06:53:36Z", "message": "another try"}, {"date": "2016-06-07T06:40:25Z", "message": "another try"}, {"date": "2016-06-07T06:32:56Z", "message": "CPATH does not work..."}, {"date": "2016-06-07T06:28:50Z", "message": "added CPATH"}, {"date": "2016-06-07T05:54:00Z", "message": "clang does not work with travis right now"}, {"date": "2016-06-07T05:25:11Z", "message": "another try"}, {"date": "2016-06-07T05:21:17Z", "message": "another try"}, {"date": "2016-06-07T05:14:54Z", "message": "another try"}, {"date": "2016-06-07T05:07:42Z", "message": "another try"}, {"date": "2016-06-07T05:00:31Z", "message": "trying to fix Travis"}, {"date": "2016-06-06T22:20:53Z", "message": "minor cleanup"}, {"date": "2016-06-06T16:50:39Z", "message": "fix proposal for #260"}, {"date": "2016-07-31T21:03:14Z", "message": "switch off assertions for benchmarks"}, {"date": "2016-07-31T12:39:15Z", "message": "version bump"}, {"date": "2016-07-31T12:38:52Z", "message": "Merge branch 'develop' into coverity_scan"}, {"date": "2016-07-31T11:37:49Z", "message": "Merge branch 'release/v2.0.2' into develop"}, {"date": "2016-07-31T11:37:26Z", "message": "Merge branch 'release/v2.0.2'"}, {"date": "2016-07-31T11:37:04Z", "message": "prepared release"}, {"date": "2016-07-30T16:02:41Z", "message": "replaced individual assertions by a class invariant function"}, {"date": "2016-07-30T14:12:10Z", "message": "cleanup and documentation"}, {"date": "2016-07-30T08:50:53Z", "message": "added default value"}, {"date": "2016-07-29T21:47:16Z", "message": "more cleanup"}, {"date": "2016-07-29T20:24:47Z", "message": "header + cleanup"}, {"date": "2016-07-28T19:19:56Z", "message": "some cleanup"}, {"date": "2016-07-27T19:40:15Z", "message": "reverted breaking changes"}, {"date": "2016-07-27T19:29:55Z", "message": "cleaned up code\n\n- removed unnecessary assertions\n- simplified simple if/return patterns"}, {"date": "2016-07-27T15:07:00Z", "message": "fixed some errors in the README gif"}, {"date": "2016-07-25T21:41:16Z", "message": "more on travis"}, {"date": "2016-07-25T20:19:49Z", "message": "used the wrong variable"}, {"date": "2016-07-25T17:38:51Z", "message": "fixed bash errors"}, {"date": "2016-07-25T16:06:59Z", "message": "minor change"}, {"date": "2016-07-25T14:48:26Z", "message": "test homebrew on OSX"}, {"date": "2016-07-25T14:21:15Z", "message": "minor changes"}, {"date": "2016-07-25T14:06:13Z", "message": "improved documentation"}, {"date": "2016-07-25T14:05:58Z", "message": "added more Unicode tests"}, {"date": "2016-07-24T09:16:47Z", "message": "Merge branch 'feature/issue283' into develop (fixes #278)"}, {"date": "2016-07-24T09:08:39Z", "message": "added test case from issue #283"}, {"date": "2016-07-24T09:01:47Z", "message": "improved test coverage"}, {"date": "2016-07-23T07:59:09Z", "message": "started to implement #283"}, {"date": "2016-07-22T19:40:58Z", "message": "fixed a bug that was found in the discussion of #274"}, {"date": "2016-07-22T13:53:38Z", "message": "reverted change to constexpr get_ref (does not work with GCC and MSVC)"}, {"date": "2016-07-22T13:34:45Z", "message": "minor changes\n\n- fixed a bug that did not discard strings with control characters\nbetween 0x10 and 0x1f\n- added termination proofs for two important loops\n- made get_ref() constexpr"}, {"date": "2016-07-20T21:06:45Z", "message": "added benchmarks for numbers"}, {"date": "2016-07-20T18:27:55Z", "message": "Merge branch 'develop' into coverity_scan"}, {"date": "2016-07-20T18:07:45Z", "message": "make sure precision is reset on output streams during serialization"}, {"date": "2016-07-19T20:49:17Z", "message": "Merge branch 'develop' into coverity_scan"}, {"date": "2016-07-19T20:43:56Z", "message": "updated Changelog"}, {"date": "2016-07-19T20:17:43Z", "message": "removed unused header"}, {"date": "2016-07-19T20:10:27Z", "message": "avoid recursion in the scanner"}, {"date": "2016-07-18T14:22:10Z", "message": "fix for #279"}, {"date": "2016-07-15T17:44:19Z", "message": "added header for int64_t and uint64_t (fixes #282)"}, {"date": "2016-07-09T22:32:32Z", "message": "Merge pull request #279 from murinicanor/patch-1\n\nlet the makefile choose the correct sed"}, {"date": "2016-07-03T22:04:22Z", "message": "fixed indentation"}, {"date": "2016-07-01T16:02:37Z", "message": "Merge branch 'feature/improved_documentation' into develop\n\n- improved documentation"}, {"date": "2016-07-01T15:44:27Z", "message": "Merge branch 'feature/parser_performance' into develop\n\n- improved parser performance by avoiding a copy of the result value"}, {"date": "2016-07-01T15:42:36Z", "message": "Merge branch 'feature/detect_unsupported_compilers' into develop\n\n- added error macros to exclude unsupported compilers"}, {"date": "2016-07-01T15:39:25Z", "message": "Merge branch 'feature/algorithm_loops' into develop\n\n- replaces some raw loops by std algorithms\n- used std::advance where possible"}, {"date": "2016-07-01T15:26:09Z", "message": "fixed type_name() signature"}, {"date": "2016-07-01T15:25:56Z", "message": "removed std::out output from test cases"}, {"date": "2016-07-01T15:01:02Z", "message": "Merge branch 'develop' into feature/improved_documentation"}, {"date": "2016-07-01T14:58:50Z", "message": "fixes #270"}, {"date": "2016-07-01T14:52:05Z", "message": "some minor improvements"}, {"date": "2016-07-01T14:51:35Z", "message": "Merge pull request #275 from dtoma/develop\n\nUpdate hexify to use array lookup instead of ternary (#270)"}, {"date": "2016-08-31T22:29:42Z", "message": "fixed test coverage"}, {"date": "2016-08-31T19:27:50Z", "message": "Merge branch 'release/2.0.3' into develop"}, {"date": "2016-08-31T19:27:32Z", "message": "Merge branch 'release/2.0.3'"}, {"date": "2016-08-31T19:27:23Z", "message": "release 2.0.3"}, {"date": "2016-08-31T18:23:24Z", "message": "Merge branch 'feature/iterator_range_parsing' into develop"}, {"date": "2016-08-31T18:23:21Z", "message": "cleanup"}, {"date": "2016-08-31T16:23:46Z", "message": "added another test case"}, {"date": "2016-08-31T16:07:18Z", "message": "Merge branch 'develop' into feature/iterator_range_parsing"}, {"date": "2016-08-31T15:07:35Z", "message": "interface cleanup"}, {"date": "2016-08-30T21:51:14Z", "message": "forgot to run re2c"}, {"date": "2016-08-30T21:49:06Z", "message": "template changes did not work with MSVC"}, {"date": "2016-08-30T21:44:15Z", "message": "cleanup and improvement of branch coverage"}, {"date": "2016-08-30T16:26:07Z", "message": "implemented idea from #290"}, {"date": "2016-08-30T16:20:13Z", "message": "Merge branch 'develop' into feature/iterator_range_parsing"}, {"date": "2016-08-29T20:52:18Z", "message": "Merge pull request #300 from t-b/fix_warning_in_test_case\n\nunit-constructor1.cpp: Fix floating point truncation warning"}, {"date": "2016-08-29T20:36:33Z", "message": "fixed performance degradation (#272)"}, {"date": "2016-08-24T19:31:11Z", "message": "using AppVeyor badge for develop branch"}, {"date": "2016-08-24T19:29:28Z", "message": "removed coverity badge (build is broken, see #299)"}, {"date": "2016-08-24T19:02:33Z", "message": "another experiment"}, {"date": "2016-08-24T05:12:56Z", "message": "experiment: changed order of parse functions"}, {"date": "2016-08-23T20:38:05Z", "message": "fixed lexer issue which required null byte at the end of contiguous storage containers #290"}, {"date": "2016-08-22T19:40:07Z", "message": "integrated proposals for #290"}, {"date": "2016-08-22T18:54:55Z", "message": "Merge branch 'develop' into feature/iterator_range_parsing"}, {"date": "2016-08-22T18:54:32Z", "message": "reverted .travis file"}, {"date": "2016-08-22T18:50:12Z", "message": "no execution for special cases"}, {"date": "2016-08-22T18:44:36Z", "message": "fix for YAML file"}, {"date": "2016-08-22T18:40:25Z", "message": "do not build for special cases"}, {"date": "2016-08-21T21:20:05Z", "message": "Merge branch 'develop' into coverity_scan"}, {"date": "2016-08-21T21:15:27Z", "message": "Merge branch 'develop' into feature/iterator_range_parsing"}, {"date": "2016-08-21T20:48:02Z", "message": "Merge branch 'feature/coverage' into develop"}, {"date": "2016-08-21T20:38:56Z", "message": "improved code coverage"}, {"date": "2016-08-21T19:50:13Z", "message": "removed LCOV_EXCL_LINE"}, {"date": "2016-08-21T19:48:15Z", "message": "minor changes"}, {"date": "2016-08-21T12:39:54Z", "message": "improved branch coverage"}, {"date": "2016-08-21T10:35:40Z", "message": "more on #290"}, {"date": "2016-08-20T18:29:33Z", "message": "allowing parsing from contiguous containers"}, {"date": "2016-08-20T16:51:11Z", "message": "Merge branch 'develop' into feature/iterator_range_parsing"}, {"date": "2016-08-18T16:43:27Z", "message": "mentioning the CII"}, {"date": "2016-08-18T16:29:19Z", "message": "added cppcheck target for travis"}, {"date": "2016-08-17T21:14:28Z", "message": "changes to address #295"}, {"date": "2016-08-17T20:33:26Z", "message": "reset build file"}, {"date": "2016-08-17T19:44:53Z", "message": "forgot a semicolon"}, {"date": "2016-08-17T19:43:28Z", "message": "/Wall"}, {"date": "2016-08-17T19:38:19Z", "message": "checking MSVC compiler flags"}, {"date": "2016-08-17T19:31:59Z", "message": "fixed unit tests"}, {"date": "2016-08-15T20:44:14Z", "message": "added a first version of a parser for #290"}, {"date": "2016-08-15T19:46:02Z", "message": "Merge branch 'develop' into feature/iterator_range_parsing"}, {"date": "2016-08-15T19:45:49Z", "message": "added notes from the CII Best Practices badge"}, {"date": "2016-08-14T21:38:20Z", "message": "added assertion for contiguous memory"}, {"date": "2016-08-14T19:59:41Z", "message": "cleanup"}, {"date": "2016-08-14T15:52:21Z", "message": "spell fix"}, {"date": "2016-08-14T15:34:58Z", "message": "fix for MSVC"}, {"date": "2016-08-14T15:30:53Z", "message": "fix for MSVC"}, {"date": "2016-08-14T15:23:15Z", "message": "cleanup"}, {"date": "2016-08-14T12:18:25Z", "message": "added a parser for continguous containers"}, {"date": "2016-08-11T18:52:48Z", "message": "improved documentation for #289"}, {"date": "2016-08-10T20:50:11Z", "message": "Merge branch 'feature/travis' into develop"}, {"date": "2016-08-10T20:41:09Z", "message": "clean up"}, {"date": "2016-08-10T19:33:03Z", "message": "valgrind + full unit tests takes too long"}, {"date": "2016-08-10T19:00:36Z", "message": "rubygems -> ruby"}, {"date": "2016-08-10T18:56:26Z", "message": "coveralls with lcov"}, {"date": "2016-08-10T17:35:27Z", "message": "fixed Valgrind call"}, {"date": "2016-08-10T16:54:19Z", "message": "added coverity, coveralls, and valgrind"}, {"date": "2016-08-10T16:38:31Z", "message": "removed clang 3.5.x"}, {"date": "2016-08-10T15:42:33Z", "message": "a test"}, {"date": "2016-08-10T14:56:05Z", "message": "more clang versions"}, {"date": "2016-08-10T14:35:57Z", "message": "no directory change"}, {"date": "2016-08-10T14:25:35Z", "message": "fixed YAML error"}, {"date": "2016-08-10T14:22:53Z", "message": "added Clang 3.8"}, {"date": "2016-08-09T21:05:42Z", "message": "commit to re-fix issue #195"}, {"date": "2016-08-09T20:49:08Z", "message": "more compilers"}, {"date": "2016-08-09T20:33:31Z", "message": "moved sources"}, {"date": "2016-08-09T20:29:01Z", "message": "more GCC versions"}, {"date": "2016-08-09T20:18:13Z", "message": "first try"}, {"date": "2016-08-09T16:33:06Z", "message": "reverted last commit"}, {"date": "2016-08-09T16:19:54Z", "message": "another try for coveralls"}, {"date": "2016-08-05T06:56:58Z", "message": "accidentially deleted env"}, {"date": "2016-08-05T06:40:42Z", "message": "set build-root"}, {"date": "2016-08-05T06:18:19Z", "message": "fix for coveralls"}, {"date": "2016-08-04T20:51:08Z", "message": "reorganization into smaller test units"}, {"date": "2016-08-04T20:10:30Z", "message": "removed codecov"}, {"date": "2016-08-04T20:05:16Z", "message": "added check-fast flag"}, {"date": "2016-08-04T20:05:05Z", "message": "adjusted warning flags"}, {"date": "2016-08-04T20:04:55Z", "message": "adjusted capacity test cases"}, {"date": "2016-08-04T19:55:47Z", "message": "split test suite in one file per test case"}, {"date": "2016-08-04T05:40:04Z", "message": "chose correct flags"}, {"date": "2016-08-04T05:33:44Z", "message": "forgot to pass CPPFLAGS"}, {"date": "2016-08-04T05:24:46Z", "message": "split unit tests"}, {"date": "2016-09-14T21:42:12Z", "message": "v2.0.5"}, {"date": "2016-09-14T21:07:14Z", "message": "Merge branch 'release/2.0.5' into develop"}, {"date": "2016-09-14T21:06:53Z", "message": "Merge branch 'release/2.0.5'"}, {"date": "2016-09-14T21:06:39Z", "message": "version bump"}, {"date": "2016-09-14T20:48:12Z", "message": "fixes #310"}, {"date": "2016-09-12T19:23:12Z", "message": "results for #307"}, {"date": "2016-09-11T21:37:30Z", "message": "Merge branch 'release/2.0.4' into develop"}, {"date": "2016-09-11T21:37:11Z", "message": "Merge branch 'release/2.0.4'"}, {"date": "2016-09-11T21:36:59Z", "message": "version bump"}, {"date": "2016-09-11T20:50:40Z", "message": "Travis updated their Xcode"}, {"date": "2016-09-11T20:40:51Z", "message": "fixed #304"}, {"date": "2016-09-11T20:30:08Z", "message": "fixed #306"}, {"date": "2016-09-03T11:08:17Z", "message": "clang 3.9.0 is not working yet"}, {"date": "2016-09-03T10:30:10Z", "message": "moved cmake into clang"}, {"date": "2016-09-03T08:34:52Z", "message": "install from tarball"}, {"date": "2016-09-03T07:44:10Z", "message": "forgot sh call"}, {"date": "2016-09-03T07:17:30Z", "message": "the cmake in apt is too old"}, {"date": "2016-09-03T06:47:07Z", "message": "clang 3.9.0 needs a newer cmake"}, {"date": "2016-09-02T22:37:45Z", "message": "Clang 3.9.0 has been released"}, {"date": "2016-09-02T14:05:38Z", "message": "Merge branch 'develop'"}, {"date": "2016-09-01T06:07:52Z", "message": "release 2.0.3"}, {"date": "2016-10-30T16:46:00Z", "message": "more test coverage"}, {"date": "2016-10-30T16:10:11Z", "message": "improved coverage and updated README"}, {"date": "2016-10-30T15:07:17Z", "message": "evaluated i-tests (#344)"}, {"date": "2016-10-30T11:08:29Z", "message": "added implementation-specific tests (#344)"}, {"date": "2016-10-29T19:08:30Z", "message": "fixed BOM handling #344"}, {"date": "2016-10-29T17:35:17Z", "message": "fixed a lot of unicode errors (#344)\n\nBOMs currently yield an error."}, {"date": "2016-10-29T12:02:33Z", "message": "added n test cases (#344)"}, {"date": "2016-10-29T11:37:17Z", "message": "Merge branch 'develop' into feature/jsontestsuite"}, {"date": "2016-10-29T11:32:36Z", "message": "fixed a bug for short input files (#344)\n\nFor input files with less than 5 bytes, the parser had a bug so that\nrefilling the input buffer led to erasing it."}, {"date": "2016-10-26T21:45:11Z", "message": "added \"y\" cases"}, {"date": "2016-10-26T16:57:56Z", "message": "add test files from https://github.com/nst/JSONTestSuite"}, {"date": "2016-10-26T07:20:40Z", "message": "fixed Cmake link"}, {"date": "2016-10-23T15:25:07Z", "message": "small fixes"}, {"date": "2016-10-22T16:57:58Z", "message": "user-defined string literals exploit string length (#340)"}, {"date": "2016-10-16T21:46:24Z", "message": "cleanup after #336"}, {"date": "2016-10-16T21:40:17Z", "message": "Merge pull request #336 from seeekr/patch-1\n\nfix minor grammar/style issue in README.md"}, {"date": "2016-10-15T14:48:08Z", "message": "Merge branch 'release/2.0.6' into develop"}, {"date": "2016-10-15T14:47:45Z", "message": "release 2.0.6"}, {"date": "2016-10-13T19:00:48Z", "message": "added missing overflow check for #329"}, {"date": "2016-10-12T20:05:45Z", "message": "cleanup after closing #324"}, {"date": "2016-10-12T19:59:56Z", "message": "Merge pull request #324 from vpetrigo/has_mapped_improve\n\nmake has_mapped_type struct friendly"}, {"date": "2016-10-12T19:21:59Z", "message": "Merge branch 'feature/issue323' into develop"}, {"date": "2016-10-10T19:58:31Z", "message": "improve test coverage"}, {"date": "2016-10-10T18:38:50Z", "message": "code cleanup for #323"}, {"date": "2016-10-09T14:32:01Z", "message": "added missing header"}, {"date": "2016-10-08T12:33:10Z", "message": "adjusted README"}, {"date": "2016-10-08T12:27:28Z", "message": "started fixing #323"}, {"date": "2016-10-06T21:27:43Z", "message": "addressed #319, #321, and #318"}, {"date": "2016-10-06T20:35:36Z", "message": "Merge pull request #318 from ChristophJud/include_dir_relocation\n\nInclude dir relocation"}, {"date": "2016-10-06T20:33:58Z", "message": "Merge pull request #321 from vasild/develop\n\nFix usage examples' comments for std::multiset"}, {"date": "2016-10-04T16:20:36Z", "message": "fix after #313"}, {"date": "2016-10-02T09:29:49Z", "message": "Merge pull request #313 from 5tefan/develop\n\ntrivial documentation fix"}, {"date": "2016-10-02T09:23:47Z", "message": "added fuzzing results"}, {"date": "2016-11-29T08:49:05Z", "message": ":white_check_mark: more test cases"}, {"date": "2016-11-29T07:37:27Z", "message": ":white_check_mark: more test cases"}, {"date": "2016-11-29T06:46:14Z", "message": "Merge branch 'feature/issue365' into develop"}, {"date": "2016-11-28T22:24:52Z", "message": "Merge branch 'develop' into feature/issue365"}, {"date": "2016-11-28T22:24:35Z", "message": "Merge branch 'develop' into feature/messagepack"}, {"date": "2016-11-28T22:23:56Z", "message": "Merge branch 'develop' into feature/emplace"}, {"date": "2016-11-28T22:23:45Z", "message": ":memo: update documentation of Travis builders"}, {"date": "2016-11-28T22:20:03Z", "message": ":construction: bug fixes and more tests"}, {"date": "2016-11-28T21:16:33Z", "message": ":construction_worker: removed retired images (https://blog.travis-ci.com/2016-11-17-retiring-some-osx-images/)"}, {"date": "2016-11-28T17:33:46Z", "message": ":sparkles: added return value for emplace (#349)"}, {"date": "2016-11-28T17:00:10Z", "message": "Merge branch 'develop' into feature/emplace"}, {"date": "2016-11-27T20:42:21Z", "message": ":construction: further simplifications"}, {"date": "2016-11-27T18:11:58Z", "message": ":construction_worker: added precondition for individual tests"}, {"date": "2016-11-27T18:11:32Z", "message": ":hammer: refactored number-to-vector calls"}, {"date": "2016-11-27T17:28:23Z", "message": "Merge branch 'feature/individual_tests' into feature/messagepack"}, {"date": "2016-11-27T16:47:56Z", "message": ":white_check_mark: CBOR roundtrip tests"}, {"date": "2016-11-27T16:29:19Z", "message": ":bug: Clang 3.9.0 seems to not work right now"}, {"date": "2016-11-27T16:09:05Z", "message": ":construction: falling back to single unit test for coveralls"}, {"date": "2016-11-27T15:46:33Z", "message": ":bug: fixed YAML"}, {"date": "2016-11-27T15:45:24Z", "message": ":construction: fixing coveralls and valgrind targets"}, {"date": "2016-11-27T15:19:26Z", "message": ":construction: splitting tests into several binaries"}, {"date": "2016-11-26T23:10:04Z", "message": ":construction: CBOR support (#358)"}, {"date": "2016-11-26T23:09:24Z", "message": ":white_check_mark: tests for CBOR"}, {"date": "2016-11-26T17:17:18Z", "message": "Merge branch 'develop' into feature/messagepack"}, {"date": "2016-11-26T11:45:50Z", "message": "Merge branch 'develop' into feature/issue365"}, {"date": "2016-11-26T11:43:23Z", "message": ":zap: added improvements (#365)"}, {"date": "2016-11-25T16:39:38Z", "message": "Merge branch 'feature/filenotfound' into develop"}, {"date": "2016-11-25T16:39:24Z", "message": "Merge branch 'develop' into feature/filenotfound"}, {"date": "2016-11-24T21:07:35Z", "message": ":white_check_mark: added assertion for warning from #368"}, {"date": "2016-11-24T21:05:29Z", "message": ":lipstick: fixed indentation"}, {"date": "2016-11-24T20:56:21Z", "message": ":memo: updating README after fixing #299"}, {"date": "2016-11-24T20:54:05Z", "message": ":lipstick: fixed indentation"}, {"date": "2016-11-24T20:53:41Z", "message": ":white_check_mark: added a test for EOF error (#367)"}, {"date": "2016-11-24T20:45:10Z", "message": ":bug: fixed a bug if parser was called with a stream at EOF (#367)"}, {"date": "2016-11-24T19:01:55Z", "message": "Merge branch 'develop' into coverity_scan"}, {"date": "2016-11-24T17:25:00Z", "message": "Merge branch 'develop' into feature/issue365"}, {"date": "2016-11-24T17:24:26Z", "message": ":chart_with_upwards_trend: removing more variance of the benchmarks"}, {"date": "2016-11-24T16:45:01Z", "message": ":wrench: ignoring Clion files"}, {"date": "2016-11-24T16:26:11Z", "message": "Merge branch 'develop' into coverity_scan"}, {"date": "2016-11-24T16:25:05Z", "message": ":construction_worker: trying Coverity with Clang 3.6 (#299)"}, {"date": "2016-11-23T15:57:01Z", "message": ":bug: parsing erroneous files yields an exception (#366)"}, {"date": "2016-11-23T07:48:54Z", "message": "Merge branch 'develop' into feature/issue365"}, {"date": "2016-11-23T07:47:40Z", "message": ":chart_with_upwards_trend: reducing benchmark variance (#365)"}, {"date": "2016-11-22T19:13:47Z", "message": ":bug: hopefully fixing the crashes on Linux (#365)"}, {"date": "2016-11-22T06:26:11Z", "message": ":zap: added performance fixes (#365)"}, {"date": "2016-11-22T06:25:40Z", "message": ":memo: updated thanks section"}, {"date": "2016-11-22T05:57:58Z", "message": ":bug: fixes crash in dump from static object (#359)\n\nMerge branch 'feature/issue359' into develop"}, {"date": "2016-11-21T22:38:17Z", "message": ":memo: cleaned comments and updated README"}, {"date": "2016-11-21T20:53:10Z", "message": ":bug: fixing #359"}, {"date": "2016-11-16T21:49:25Z", "message": ":green_heart: restored test call"}, {"date": "2016-11-16T21:49:16Z", "message": ":green_heart: moved sample.json to standard test suite to run it with Valgrind"}, {"date": "2016-11-16T21:08:21Z", "message": ":green_heart: is sample.json killing AppVeyor?"}, {"date": "2016-11-16T21:02:38Z", "message": ":green_heart: added verbose message to check AppVeyor build"}, {"date": "2016-11-16T18:16:36Z", "message": "Merge branch 'develop' into feature/messagepack"}, {"date": "2016-11-16T18:16:16Z", "message": "Merge branch 'develop' into feature/emplace"}, {"date": "2016-11-16T18:15:54Z", "message": ":arrow_up: updated to Catch v1.5.8"}, {"date": "2016-11-16T18:08:25Z", "message": ":art: stating the name of the library in the license"}, {"date": "2016-11-16T08:04:37Z", "message": "Merge branch 'develop' into feature/messagepack"}, {"date": "2016-11-16T08:04:25Z", "message": "Merge branch 'develop' into feature/emplace"}, {"date": "2016-11-16T07:25:08Z", "message": ":bug: removed the wrong compiler"}, {"date": "2016-11-16T07:01:48Z", "message": ":apple: removed Xcode 8.0 due to repeated problems"}, {"date": "2016-11-16T05:42:26Z", "message": ":apple: added Xcode 8.1 build for travis"}, {"date": "2016-11-11T18:29:14Z", "message": "proposal for emplace/emplace_back (#349)"}, {"date": "2016-11-11T16:31:37Z", "message": "hid an expensive test case"}, {"date": "2016-11-11T16:11:13Z", "message": "starting to integrate MessagePack (#358)"}, {"date": "2016-11-03T06:27:32Z", "message": "readded missing header"}, {"date": "2016-11-02T20:27:19Z", "message": "documented and cleaned up headers (#314)"}, {"date": "2016-11-02T19:52:42Z", "message": "Merge branch 'release/2.0.7' into develop"}, {"date": "2016-11-02T19:52:15Z", "message": "version bump"}, {"date": "2016-11-02T16:03:17Z", "message": "Merge branch 'feature/jsontestsuite' into develop"}, {"date": "2016-11-02T16:03:12Z", "message": "Merge branch 'develop' into feature/jsontestsuite"}, {"date": "2016-11-02T15:59:23Z", "message": "Merge branch 'feature/issue329' into develop"}, {"date": "2016-11-02T14:44:46Z", "message": "cleanup"}, {"date": "2016-11-01T16:01:04Z", "message": "fixed coverage"}, {"date": "2016-12-30T13:02:51Z", "message": ":construction: started working on #397"}, {"date": "2016-12-30T12:04:33Z", "message": ":white_check_mark: improved test coverage"}, {"date": "2016-12-30T11:29:01Z", "message": "Merge branch 'develop' into feature/release_information"}, {"date": "2016-12-30T11:28:52Z", "message": ":bookmark: added version information"}, {"date": "2016-12-29T16:00:02Z", "message": ":ambulance: fix for #408"}, {"date": "2016-12-29T15:14:15Z", "message": ":ambulance: fix for #407"}, {"date": "2016-12-29T14:39:16Z", "message": ":ambulance: fix for #405"}, {"date": "2016-12-28T13:19:08Z", "message": ":ambulance: removed unsafe call to strerror #403"}, {"date": "2016-12-28T11:26:00Z", "message": ":twisted_rightwards_arrows: merge branch 'feature/fuzzer' into develop"}, {"date": "2016-12-28T11:19:12Z", "message": "Merge branch 'develop' into feature/fuzzer"}, {"date": "2016-12-28T11:18:48Z", "message": ":truck: renamed test files to allow windows build"}, {"date": "2016-12-28T11:11:51Z", "message": "Merge branch 'develop' into feature/fuzzer"}, {"date": "2016-12-28T11:09:15Z", "message": ":ambulance: fixed bugs detected by AFL-Fuzz"}, {"date": "2016-12-25T15:36:43Z", "message": ":construction: added targets for parallel AFL fuzzing"}, {"date": "2016-12-25T15:18:56Z", "message": ":construction: added MessagePack fuzz target"}, {"date": "2016-12-25T15:07:10Z", "message": ":bug: fixed Makefile to work with proper CBOR files"}, {"date": "2016-12-25T15:06:56Z", "message": ":bug: fixed AFL driver to also read binary data"}, {"date": "2016-12-25T15:06:36Z", "message": ":bug: fixed bug in CBOR/MessagePack deserialization"}, {"date": "2016-12-25T13:39:08Z", "message": ":memo: some small documentation fixes"}, {"date": "2016-12-22T11:10:52Z", "message": ":construction: cleanup"}, {"date": "2016-12-22T11:08:36Z", "message": ":construction: cleanup"}, {"date": "2016-12-22T10:09:26Z", "message": ":hammer: split AFL test in driver and test file"}, {"date": "2016-12-22T08:37:15Z", "message": ":arrow_up: Catch v1.5.9"}, {"date": "2016-12-22T08:36:34Z", "message": ":page_facing_up: added license for Catch"}, {"date": "2016-12-22T08:35:53Z", "message": ":hammer: moved third-party code into separate folder"}, {"date": "2016-12-22T08:09:40Z", "message": ":construction: added fuzzer from OSS-Fuzz"}, {"date": "2016-12-22T08:08:50Z", "message": ":heavy_plus_sign: added libFuzzer"}, {"date": "2016-12-21T15:19:26Z", "message": "Merge branch 'develop' into coverity_scan"}, {"date": "2016-12-21T09:33:36Z", "message": ":construction_worker: clang for fedora"}, {"date": "2016-12-21T09:13:59Z", "message": ":construction_worker: using clang where GCC is too old"}, {"date": "2016-12-21T08:54:11Z", "message": ":construction_worker: forgot to install make"}, {"date": "2016-12-21T08:47:31Z", "message": ":construction_worker: the cmake of trusty is too old"}, {"date": "2016-12-21T08:33:16Z", "message": ":construction_worker: Fedora has no package \"build-essential\""}, {"date": "2016-12-21T08:19:53Z", "message": ":construction_worker: there is no cmake in the osx image"}, {"date": "2016-12-21T08:17:17Z", "message": ":construction_worker: trying more doozer workers"}, {"date": "2016-12-20T22:04:07Z", "message": ":construction_worker: added more builders"}, {"date": "2016-12-20T18:16:52Z", "message": ":construction_worker: fixing build command"}, {"date": "2016-12-20T18:13:19Z", "message": ":construction_worker: using cmake with Doozer"}, {"date": "2016-12-20T18:06:15Z", "message": ":construction_worker: trying Doozer"}, {"date": "2016-12-18T17:17:51Z", "message": "Merge branch 'develop' into coverity_scan"}, {"date": "2016-12-18T17:17:26Z", "message": ":construction_worker: trying to fix coverity task"}, {"date": "2016-12-16T20:42:34Z", "message": "Merge branch 'develop' into coverity_scan"}, {"date": "2016-12-16T20:35:28Z", "message": ":twisted_rightwards_arrows: Merge branch 'release/2.0.9' into develop"}, {"date": "2016-12-16T20:34:37Z", "message": ":bookmark: updated documentation"}, {"date": "2016-12-16T20:25:20Z", "message": ":bookmark: updated documentation"}, {"date": "2016-12-16T20:09:14Z", "message": ":bookmark: updated Changelog"}, {"date": "2016-12-16T19:54:43Z", "message": ":memo: updated number of tests"}, {"date": "2016-12-16T19:45:46Z", "message": ":bookmark: bumped version to 2.0.9"}, {"date": "2016-12-16T17:57:19Z", "message": ":rotating_light: removed some warnings"}, {"date": "2016-12-14T21:30:09Z", "message": ":art: cleanup after PR #395"}, {"date": "2016-12-14T20:56:43Z", "message": ":twisted_rightwards_arrows: merge pull request #395 from Bosswestfalen/develop\n\nReplace class iterator and const_iterator by using a single template class to reduce code."}, {"date": "2016-12-13T20:46:07Z", "message": ":white_check_mark: added a regression test for #380 / #390"}, {"date": "2016-12-13T20:26:53Z", "message": "Merge pull request #390 from qwename/integer-overflow\n\n:twisted_rightwards_arrows: fix issue #380: Signed integer overflow check"}, {"date": "2016-12-13T20:23:59Z", "message": ":construction_worker: can't get clang sanitizer to work #394\n\nSee https://travis-ci.org/nlohmann/json/jobs/183684093 for a failing\nbuild."}, {"date": "2016-12-13T18:41:36Z", "message": ":construction_worker: another try for sanitizers #394"}, {"date": "2016-12-13T17:24:16Z", "message": ":construction_worker: moved instructed build to \"before_script\" #394"}, {"date": "2016-12-13T16:55:41Z", "message": ":construction_worker: clang 3.9.0 is not working #394"}, {"date": "2016-12-13T16:51:46Z", "message": ":construction_worker: added Clang 3.9.0 and sanitizer build #394"}, {"date": "2016-12-12T22:19:43Z", "message": ":ambulance: fix to address #389"}, {"date": "2016-12-12T17:21:17Z", "message": ":rotating_light: fixed some warnings"}, {"date": "2016-12-12T16:39:56Z", "message": ":ambulance: fix for #393"}, {"date": "2016-12-12T07:25:08Z", "message": ":memo: added note to example files"}, {"date": "2016-12-12T07:13:26Z", "message": ":ambulance: fixed an AddressSanitizer warning"}, {"date": "2016-12-11T18:42:36Z", "message": ":memo: added TOC to README #383"}, {"date": "2016-12-11T15:36:39Z", "message": ":memo: updated FAQ of the contribution guidelines #382"}, {"date": "2016-12-11T15:21:53Z", "message": ":memo: added not wrt re2c version #390"}, {"date": "2016-12-11T15:11:59Z", "message": ":twisted_rightwards_arrows: Merge branch 'feature/messagepack' into develop"}, {"date": "2016-12-11T15:11:43Z", "message": ":twisted_rightwards_arrows: Merge branch 'develop' into feature/messagepack"}, {"date": "2016-12-11T15:06:52Z", "message": ":memo: cleanup after #391"}, {"date": "2016-12-11T15:04:27Z", "message": ":twisted_rightwards_arrows: merge pull request #391 from jaredgrubb/jgrubb-clang-doc-warning\n\nClang: quiet a warning"}, {"date": "2016-12-11T15:03:23Z", "message": ":memo: fixed two documentation warnings"}, {"date": "2016-12-11T12:36:08Z", "message": ":memo: clean up and added documentation for #358"}, {"date": "2016-12-10T23:39:26Z", "message": ":white_check_mark: fixed a test case"}, {"date": "2016-12-10T23:05:29Z", "message": ":white_check_mark: more test cases for CBOR and msgpack"}, {"date": "2016-12-10T22:12:57Z", "message": ":bug: fixed CBOR code and added test cases"}, {"date": "2016-12-10T20:30:18Z", "message": ":hammer: refactored msgpack code"}, {"date": "2016-12-10T18:29:45Z", "message": ":hammer: refactored CBOR code to a switch"}, {"date": "2016-12-10T17:32:56Z", "message": ":sparkles: implemented indefinite-length CBOR types (#387)"}, {"date": "2016-12-08T08:37:23Z", "message": ":hammer: refactored get_from_vector function\n\nSnippet from http://stackoverflow.com/a/41031865/266378"}, {"date": "2016-12-07T22:14:37Z", "message": ":white_check_mark: more test cases for CBOR"}, {"date": "2016-12-07T21:50:10Z", "message": ":white_check_mark: more CBOR test cases"}, {"date": "2016-12-07T20:43:59Z", "message": ":sparkles: CBOR support for half-precision floats"}, {"date": "2016-12-07T20:25:22Z", "message": ":white_check_mark: test cases from RFC 7049 #384"}, {"date": "2016-12-07T20:24:42Z", "message": ":bug: fix for CBOR (small integers)"}, {"date": "2016-12-07T18:15:05Z", "message": ":green_heart: another approach to the AppVeyor error"}, {"date": "2016-12-07T15:51:15Z", "message": ":green_heart: more AppVeyor fixes"}, {"date": "2016-12-07T15:43:55Z", "message": ":green_heart: another try to fix the AppVeyor build"}, {"date": "2016-12-07T15:34:02Z", "message": ":green_heart: still fixing the AppVeyor error"}, {"date": "2016-12-07T15:21:22Z", "message": ":green_heart: hopefully fixed an error on AppVeyor"}, {"date": "2016-12-07T13:47:06Z", "message": ":hammer: refactored function to get numbers from byte vector"}, {"date": "2016-12-07T12:47:08Z", "message": ":white_check_mark:\ufffc more msgpack test cases"}, {"date": "2016-12-07T08:19:46Z", "message": ":white_check_mark: more msgpack test cases"}, {"date": "2016-12-07T07:39:57Z", "message": "Merge branch 'develop' into feature/messagepack"}, {"date": "2016-12-02T19:30:20Z", "message": "Merge branch 'develop' into coverity_scan"}, {"date": "2016-12-02T19:07:43Z", "message": ":bookmark: Merge branch 'release/2.0.8' into develop"}, {"date": "2016-12-02T19:05:53Z", "message": ":bookmark: version 2.0.8"}, {"date": "2016-12-02T18:04:36Z", "message": ":memo: updated ChangeLog"}, {"date": "2016-12-02T17:39:35Z", "message": ":memo: version bump"}, {"date": "2016-12-02T17:02:38Z", "message": ":memo: updated README"}, {"date": "2016-12-01T20:22:23Z", "message": "Merge branch 'feature/emplace' into develop"}, {"date": "2016-12-01T20:17:40Z", "message": "Merge branch 'develop' into feature/emplace"}, {"date": "2017-01-29T20:40:37Z", "message": ":lipstick: minor refactoring"}, {"date": "2017-01-29T16:18:56Z", "message": ":white_check_mark: added missing tests found by mutate++"}, {"date": "2017-01-29T07:18:44Z", "message": "Merge pull request #439 from jaredgrubb/patch-2\n\nREADME: adjust boost::optional example"}, {"date": "2017-01-28T17:43:48Z", "message": "Merge branch 'develop' into coverity_scan"}, {"date": "2017-01-28T17:43:01Z", "message": ":twisted_rightwards_arrows: merge branch 'release/2.1.0' into develop"}, {"date": "2017-01-28T17:41:30Z", "message": ":memo: updated slides"}, {"date": "2017-01-28T17:20:12Z", "message": ":memo: updated documentation"}, {"date": "2017-01-28T17:17:57Z", "message": ":page_facing_up: changes to let Github detect the license"}, {"date": "2017-01-28T16:12:29Z", "message": ":memo: added example and documentation for the meta function"}, {"date": "2017-01-28T15:46:03Z", "message": ":bookmark: set version to 2.1.0"}, {"date": "2017-01-28T15:03:35Z", "message": ":bookmark: set version to 2.1.0"}, {"date": "2017-01-27T17:50:52Z", "message": ":memo: fixed #434"}, {"date": "2017-01-27T05:22:10Z", "message": ":twisted_rightwards_arrows: merge pull request #435 (based on #338, #355, and #423)\n\nconversion from/to user-defined types"}, {"date": "2017-01-26T19:51:30Z", "message": ":lipstick: cleanup"}, {"date": "2017-01-26T18:39:34Z", "message": ":memo: fixed documentation"}, {"date": "2017-01-26T06:29:37Z", "message": ":memo: added more documentation"}, {"date": "2017-01-25T21:21:07Z", "message": ":lipstick: some cleanup"}, {"date": "2017-01-25T20:59:54Z", "message": ":memo: overworked documentation (re-added constructor examples)"}, {"date": "2017-01-25T18:01:31Z", "message": ":memo: overworked docs #435"}, {"date": "2017-01-24T14:20:20Z", "message": ":memo: adjusted test count"}, {"date": "2017-01-24T14:02:35Z", "message": ":construction: rephrased assertions"}, {"date": "2017-01-24T13:55:51Z", "message": ":memo: added nicer example"}, {"date": "2017-01-24T13:45:32Z", "message": ":memo: cleanup"}, {"date": "2017-01-24T13:37:25Z", "message": ":memo: overworked README"}, {"date": "2017-01-24T12:47:33Z", "message": ":lipstick: overworked documentation and indentation"}, {"date": "2017-01-24T11:49:38Z", "message": ":construction: fixed a warning"}, {"date": "2017-01-24T11:43:43Z", "message": ":lipstick: ran \"make pretty\""}, {"date": "2016-12-18T20:02:09Z", "message": ":lipstick: some cleanup"}, {"date": "2016-12-18T19:32:09Z", "message": ":lipstick: moved changes to re2c file and ran `make pretty`"}, {"date": "2017-01-21T15:12:17Z", "message": ":construction: made type_name() public"}, {"date": "2017-01-19T18:23:56Z", "message": ":rewind: renaming did not help"}, {"date": "2017-01-19T17:19:20Z", "message": ":memo: small documentation update"}, {"date": "2017-01-19T16:09:55Z", "message": ":page_facing_up: help Github find the license"}, {"date": "2017-01-19T06:42:29Z", "message": ":twisted_rightwards_arrows: merge pull request #430 from vjon/patch-1\n\nFix documentation error"}, {"date": "2017-01-18T19:41:17Z", "message": ":twisted_rightwards_arrows: merge branch 'feature/noexceptions_2' into develop"}, {"date": "2017-01-16T21:46:49Z", "message": ":bug: fixed escaping"}, {"date": "2017-01-16T21:36:58Z", "message": ":bug: fixed logic error"}, {"date": "2017-01-16T21:11:07Z", "message": ":sparkles: option to switch off exceptions"}, {"date": "2017-01-16T19:04:47Z", "message": ":page_facing_up: it's 2017"}, {"date": "2017-01-16T19:03:50Z", "message": ":white_check_mark: added Big List of Naughty Strings"}, {"date": "2017-01-12T20:37:31Z", "message": ":twisted_rightwards_arrows: merge branch 'feature/release_information' into develop #397"}, {"date": "2017-01-12T20:35:27Z", "message": ":construction: cleanup"}, {"date": "2017-01-12T20:30:08Z", "message": "Merge branch 'develop' into feature/release_information"}, {"date": "2017-01-11T21:23:02Z", "message": ":arrow_up: upgraded to Catch 1.6.0"}, {"date": "2017-01-08T08:31:40Z", "message": ":bug: forgot to remove a test case"}, {"date": "2017-01-08T08:19:44Z", "message": ":construction: renamed `version()` to `meta()`"}, {"date": "2017-01-04T19:06:23Z", "message": "Merge branch 'develop' into feature/release_information"}, {"date": "2017-01-04T17:54:44Z", "message": ":bug: fix for #417"}, {"date": "2017-01-04T17:07:46Z", "message": ":memo: added documentation wrt. UTF-8 strings #406"}, {"date": "2017-01-03T22:52:01Z", "message": ":ambulance: fix for #416"}, {"date": "2017-01-03T21:37:07Z", "message": ":lipstick: cleanup"}, {"date": "2017-01-03T21:35:31Z", "message": ":construction_worker: better support for OSS-Fuzz"}, {"date": "2017-01-03T20:33:23Z", "message": ":lipstick: ran clang-tidy"}, {"date": "2017-01-02T16:26:00Z", "message": "Merge branch 'develop' into feature/release_information"}, {"date": "2017-01-02T15:39:52Z", "message": "Merge branch 'develop' into coverity_scan"}, {"date": "2017-01-02T15:38:23Z", "message": ":twisted_rightwards_arrows: merge branch 'release/2.0.10' into develop"}, {"date": "2017-01-02T15:37:29Z", "message": ":memo: updated online link"}, {"date": "2017-01-02T09:00:44Z", "message": ":bookmark: version bump to 2.0.10"}, {"date": "2017-01-02T08:56:21Z", "message": ":bookmark: updated ChangeLog"}, {"date": "2017-01-02T08:40:00Z", "message": ":page_facing_up: it's 2017 already"}, {"date": "2017-01-02T08:36:30Z", "message": ":memo: updated test count"}, {"date": "2017-01-02T08:35:57Z", "message": ":bookmark: version bump to 2.0.10"}, {"date": "2017-01-02T08:21:26Z", "message": ":lipstick: clean up"}, {"date": "2017-01-01T20:51:36Z", "message": ":construction: added target to build all fuzzers"}, {"date": "2017-01-01T20:34:58Z", "message": ":lipstick: cleanup after #410"}, {"date": "2017-01-01T18:47:33Z", "message": ":twisted_rightwards_arrows: merge pull request #400 from andoma/develop\n\nAdd Doozer build badge"}, {"date": "2017-01-01T18:45:11Z", "message": ":twisted_rightwards_arrows: merge pull request #410 from Daniel599/feature/clang_sanitize\n\nFeature/clang sanitize"}, {"date": "2017-01-01T18:38:54Z", "message": ":construction_worker: removed failing test suites"}, {"date": "2017-01-01T14:28:01Z", "message": ":ambulance: fix for #411 and #412"}, {"date": "2017-02-14T06:18:35Z", "message": "Merge pull request #450 from nlohmann/TurpentineDistillery-feature/locale_independent_str_to_num\n\nTurpentineDistillery feature/locale independent str to num"}, {"date": "2017-02-08T16:56:43Z", "message": ":lipstick: minor change"}, {"date": "2017-02-05T16:11:26Z", "message": ":pencil2: fixed a typo #446"}, {"date": "2017-02-05T12:13:41Z", "message": ":twisted_rightwards_arrows: merged #379 and fixed conflicts"}, {"date": "2017-02-04T20:00:41Z", "message": ":white_check_mark: uncommented some tests"}, {"date": "2017-02-04T14:30:28Z", "message": ":arrow_up: updated Catch to v1.7.0"}, {"date": "2017-02-04T07:25:55Z", "message": ":bug: fixed test compilation"}, {"date": "2017-02-03T17:28:22Z", "message": ":memo: acknowledgments for #442 and #445"}, {"date": "2017-02-03T17:15:37Z", "message": ":memo: fixing a documentation issue #442"}, {"date": "2017-02-03T17:09:55Z", "message": ":zap: improved test compilation speed #445"}, {"date": "2017-02-01T16:34:39Z", "message": ":white_check_mark: added roundtrip test for the Big List of Naughty Strings"}, {"date": "2017-02-01T15:41:05Z", "message": ":construction_worker: dropped Doozer.io support"}, {"date": "2017-02-01T15:03:51Z", "message": "Merge branch 'develop' into coverity_scan"}, {"date": "2017-02-01T14:13:21Z", "message": ":bug: fixed `-Weffc++` warnings"}, {"date": "2017-03-30T15:25:29Z", "message": "Merge pull request #540 from tinloaf/diagnostics\n\nProperly pop diagnostics"}, {"date": "2017-03-25T13:12:30Z", "message": "Merge pull request #536 from vpetrigo/feature/VS17_appveyor_support\n\nAdd Visual Studio 17 image to appveyor build matrix"}, {"date": "2017-03-24T18:38:29Z", "message": "Merge pull request #534 from TedLyngmo/utf8_encoding_enhancement\n\nUTF8 encoding enhancement"}, {"date": "2017-03-23T12:57:54Z", "message": "Merge pull request #530 from berkus/patch-1\n\nFix typo"}, {"date": "2017-03-22T06:50:34Z", "message": "Merge pull request #526 from krzysztofwos/feature/exception-base-class\n\nMake exception base class visible in basic_json"}, {"date": "2017-03-17T05:47:11Z", "message": "Merge pull request #510 from alex-weej/patch-1\n\n:art: Namespace `uint8_t` from the C++ stdlib"}, {"date": "2017-03-16T18:00:58Z", "message": "Merge pull request #508 from theodelrieu/feature/c_array_conversion\n\nadd to_json method for C arrays"}, {"date": "2017-03-11T14:57:10Z", "message": "Merge pull request #496 from TedLyngmo/fix_effcplusplus_warnings\n\nFix -Weffc++ warnings (GNU 6.3.1)"}, {"date": "2017-04-03T20:13:59Z", "message": "Merge pull request #545 from theodelrieu/feature/enum_class_support\n\nadd enum class default conversions"}, {"date": "2017-05-15T19:09:43Z", "message": "Merge pull request #583 from zhaohuaxishi/doxygen_error\n\nfix doxygen error of basic_json::get()"}, {"date": "2017-05-13T09:37:57Z", "message": "Merge pull request #579 from Type1J/develop_feature_first_second\n\nFixing assignement for iterator wrapper second, and adding unit test"}, {"date": "2017-05-10T15:25:54Z", "message": "Merge pull request #578 from Type1J/develop_feature_first_second\n\nAdding first and second properties to iteration_proxy_internal"}, {"date": "2017-05-10T14:32:14Z", "message": "Merge pull request #576 from Type1J/develop\n\nAdding support for Meson."}, {"date": "2017-06-21T16:54:18Z", "message": "Merge pull request #630 from Chocobo1/doc_neq\n\nfix typo in operator__notequal example"}, {"date": "2017-06-21T16:54:03Z", "message": "Merge pull request #629 from Chocobo1/c4819\n\nFix MSVC warning C4819"}, {"date": "2017-06-19T15:31:10Z", "message": "Merge pull request #624 from theodelrieu/feature/pair_tuple_conversions\n\nadd pair/tuple conversions"}, {"date": "2017-06-17T21:58:13Z", "message": "Merge pull request #626 from koemeet/bugfix/vs2017-min-macro-fix\n\n[BugFix] Add parentheses around std::min"}, {"date": "2017-06-16T16:16:20Z", "message": "Merge pull request #615 from theodelrieu/develop\n\nremove std::pair support"}, {"date": "2017-06-10T16:26:48Z", "message": "Merge pull request #595 from HenryRLee/iterator_arithmetic\n\nIssue #593 Fix the arithmetic operators in the iterator and reverse iterator"}, {"date": "2017-06-07T14:38:23Z", "message": "Merge pull request #609 from theodelrieu/develop\n\nAdd pair support, fix CompatibleObject conversions (fixes #600)"}, {"date": "2017-06-06T18:41:42Z", "message": "Merge pull request #598 from HenryRLee/issue550\n\n#550 Fix iterator related compiling issues for Intel icc"}, {"date": "2017-07-30T18:01:03Z", "message": "Merge pull request #669 from dan-42/change_installed_cmake_include_path\n\nREFACTOR: rewrite CMakeLists.txt for better inlcude and reuse"}, {"date": "2017-07-30T18:00:46Z", "message": "Merge pull request #663 from himikof/move-construction\n\nSupport moving from rvalues in std::initializer_list"}, {"date": "2017-07-30T17:49:24Z", "message": "Merge branch 'develop' into move-construction"}, {"date": "2017-07-27T18:48:56Z", "message": "Merge pull request #666 from effolkronium/develop\n\nenable_testing only if the JSON_BuildTests is ON"}, {"date": "2017-07-15T09:39:27Z", "message": "Merge pull request #652 from olegendo/develop\n\nRename BuildTests to JSON_BuildTests"}, {"date": "2017-07-13T17:16:41Z", "message": ":page_facing_up: added code of conduct\n\nadded Contributor Covenant Code of Conduct"}, {"date": "2017-07-12T05:58:45Z", "message": "Merge pull request #654 from ryanjmulder/develop\n\nadd ensure_ascii parameter to dump. #330"}, {"date": "2017-07-09T21:12:35Z", "message": "Merge pull request #643 from theodelrieu/refacto/split_basic_json\n\nRefacto/split basic json"}, {"date": "2017-07-09T09:12:46Z", "message": "Merge pull request #650 from olegendo/develop\n\nDon't include <iostream>, use std::make_shared"}, {"date": "2017-08-24T10:40:16Z", "message": "Merge pull request #708 from theodelrieu/fix/from_json_tuple_pair\n\nfix from_json implementation for pair/tuple"}, {"date": "2017-08-10T09:39:13Z", "message": "Merge pull request #679 from traits/patch-1\n\nDigraph warning"}, {"date": "2017-08-10T04:44:59Z", "message": "Merge pull request #686 from WebProdPP/patch-1\n\nUpdate json.hpp"}, {"date": "2017-08-09T13:32:33Z", "message": "Merge pull request #685 from daixtrose/patch-1\n\nRemove duplicate word"}, {"date": "2017-08-09T08:16:03Z", "message": "Merge pull request #682 from kbthomp1/fix-intel-osx\n\nTo fix compilation issue for intel OSX compiler"}, {"date": "2017-08-05T11:42:43Z", "message": "Merge pull request #678 from DmitryKuk/develop\n\nmassage -> message"}, {"date": "2017-08-01T18:21:04Z", "message": "Merge pull request #674 from wincent/patch-1\n\nFix \"not constraint\" grammar in docs"}, {"date": "2017-08-01T05:15:55Z", "message": "Merge pull request #671 from dan-42/develop\n\nAdd documentation for integration with CMake and hunter"}, {"date": "2017-09-26T20:36:36Z", "message": "Merge pull request #753 from gregmarr/patch-1\n\nAdd info for the vcpkg package."}, {"date": "2017-10-31T17:23:42Z", "message": "Merge pull request #811 from Itja/patch-1\n\nTypos README"}, {"date": "2017-10-28T13:33:22Z", "message": "Merge pull request #807 from theodelrieu/fix/805\n\nadd forwarding references to json_ref constructor"}, {"date": "2017-10-27T09:47:23Z", "message": "Merge pull request #795 from jseward/develop\n\nAdd transparent comparator and perfect forwarding support to find() and count()"}, {"date": "2017-10-22T06:52:28Z", "message": "Merge pull request #764 from pjkundert/develop-simplify-istream\n\nSimplified istream handing #367"}, {"date": "2017-10-22T06:52:15Z", "message": "Merge branch 'develop' into develop-simplify-istream"}, {"date": "2017-10-21T08:58:27Z", "message": "Merge pull request #793 from sonulohani/develop\n\nError : 'identifier \"size_t\" is undefined' in linux"}, {"date": "2017-10-18T13:04:24Z", "message": "Merge pull request #788 from jseward/develop\n\nFix Visual Studio 2017 warnings"}, {"date": "2017-10-16T17:48:17Z", "message": "Merge pull request #785 from jseward/develop\n\nFix warning C4706 on Visual Studio 2017 - fixes #784"}, {"date": "2017-10-16T15:54:28Z", "message": "Merge pull request #783 from eld00d/patch-1\n\nSet GENERATE_TAGFILE in Doxyfile"}, {"date": "2017-10-04T08:39:56Z", "message": "Merge pull request #765 from nlohmann/feature/issue698\n\nusing more CMake"}, {"date": "2017-11-18T12:35:21Z", "message": "Merge pull request #829 from jowr/patch-1\n\nUpdated hunter package links"}, {"date": "2017-12-28T11:13:19Z", "message": "Merge pull request #858 from mattismyname/develop\n\n:wrench: Fix up a few more effc++ items"}, {"date": "2017-12-23T10:09:46Z", "message": "Merge pull request #885 from TinyTinni/develop\n\nIncludes CTest module/adds BUILD_TESTING option"}, {"date": "2017-12-17T18:52:57Z", "message": "Merge pull request #882 from erengy/fix-msvc-c4819\n\nFix MSVC warning C4819"}, {"date": "2017-12-17T10:24:40Z", "message": "Merge pull request #880 from nlohmann/coverity_scan\n\nMerge branch 'develop' into coverity_scan"}, {"date": "2017-12-16T11:41:07Z", "message": "Merge pull request #879 from nlohmann/feature/algorithms\n\n:white_check_mark: re-added tests for algorithms"}, {"date": "2017-12-14T21:31:19Z", "message": "Merge pull request #875 from nlohmann/feature/spelling\n\nOverworked library toward 3.0.0 release"}, {"date": "2017-12-14T08:35:48Z", "message": "Merge pull request #873 from nlohmann/feature/issue872\n\n:rotating_light: remove C4996 warnings #872"}, {"date": "2017-12-13T05:34:11Z", "message": "Merge pull request #870 from nlohmann/feature/issue838\n\n:boom: throwing an exception in case dump encounters a non-UTF-8 string #838"}, {"date": "2017-12-11T07:55:26Z", "message": "Merge pull request #868 from nlohmann/feature/issue867\n\n:memo: fixing documentation #867"}, {"date": "2017-12-08T06:55:47Z", "message": "Merge pull request #860 from bogemic/std_iterator_conformance_cpp17\n\niter_impl template conformance with C++17"}, {"date": "2017-12-06T20:52:52Z", "message": "Merge pull request #856 from bogemic/std_allocator_conformance_cpp17\n\nStd allocator conformance cpp17"}, {"date": "2017-12-06T19:47:38Z", "message": "Merge pull request #855 from theodelrieu/fix/cmake_include_directories\n\ncmake: use BUILD_INTERFACE/INSTALL_INTERFACE"}, {"date": "2017-12-05T18:36:31Z", "message": "Merge pull request #854 from theodelrieu/fix/force_msvc_stacktrace\n\nto/from_json: add a MSVC-specific static_assert to force a stacktrace"}, {"date": "2017-12-04T20:43:22Z", "message": "Merge pull request #844 from TinyTinni/develop\n\nAdd .natvis for MSVC debug view"}, {"date": "2018-01-29T21:04:26Z", "message": "Merge pull request #940 from kaidokert/develop\n\nAllow overriding THROW/CATCH/TRY macros with no-exceptions #938"}, {"date": "2018-01-27T15:51:52Z", "message": "Merge pull request #936 from zerodefect/improvement/fix_kmin_compiler_warning\n\nRemoved compiler warning about unused variable 'kMinExp'"}, {"date": "2018-01-25T16:11:21Z", "message": "Merge pull request #925 from zerodefect/improvement/improve_readme_json_fwd\n\nHowto installation of json_fwd.hpp (fixes #923)"}, {"date": "2018-01-23T06:32:23Z", "message": "Merge pull request #930 from Pipeliner/develop\n\nFix a typo in README.md"}, {"date": "2018-01-23T06:32:06Z", "message": "Merge pull request #919 from theodelrieu/fix/sfinae_for_incomplete_types\n\nfix sfinae on basic_json UDT constructor"}, {"date": "2018-01-21T14:02:57Z", "message": "Merge pull request #915 from abolz/dtoa\n\nFloating-point formatting"}, {"date": "2018-01-18T05:49:31Z", "message": "Merge pull request #876 from nlohmann/feature/rfc7396\n\nJSON Merge Patch (RFC 7396)"}, {"date": "2018-01-14T19:08:49Z", "message": "Merge pull request #911 from theodelrieu/fix/cmake_install\n\nFix/cmake install"}, {"date": "2018-01-09T06:57:01Z", "message": "Merge pull request #700 from theodelrieu/refactor/split_it\n\nRefactor/split it"}, {"date": "2018-01-04T16:11:18Z", "message": "Merge pull request #900 from Dobiasd/patch-1\n\nfix link to the documentation of the emplace function"}, {"date": "2018-02-26T15:51:51Z", "message": "Merge pull request #981 from wla80/develop\n\nMake integration section concise"}, {"date": "2018-02-12T17:17:59Z", "message": "Merge pull request #969 from theodelrieu/fix/924\n\nFix constraints on from_json(CompatibleArrayType)"}, {"date": "2018-02-12T14:02:21Z", "message": "Merge pull request #957 from theodelrieu/fix_coveralls\n\nMake coveralls watch the include folder"}, {"date": "2018-02-09T22:28:54Z", "message": "Merge pull request #954 from pfultz2/patch-1\n\nAdd a note about installing the library with cget"}, {"date": "2018-02-06T19:18:14Z", "message": "Merge pull request #955 from patrikhuber/patch-1\n\nFix links in README.md"}, {"date": "2018-02-01T17:39:07Z", "message": "Merge pull request #944 from theodelrieu/fix/cmake_install\n\nfix cmake install directory (for real this time)"}, {"date": "2018-02-01T08:29:53Z", "message": "Merge pull request #950 from kaidokert/develop\n\nTemplatize std::string in binary_reader #941"}, {"date": "2018-03-13T13:52:59Z", "message": "Merge pull request #1009 from nlohmann/user_string_parser\n\nAllowing for user-defined string type in lexer/parser"}, {"date": "2018-03-12T17:41:59Z", "message": "Merge pull request #1006 from agrianius/dump-template\n\ndump to alternative string type, as defined in basic_json template"}, {"date": "2018-03-09T20:23:00Z", "message": "Merge pull request #1001 from nlohmann/leak\n\nFix memory leak during parser callback"}, {"date": "2018-03-06T18:27:39Z", "message": "Merge pull request #986 from theodelrieu/fix/basic_json_conversion\n\nFix/basic json conversion"}, {"date": "2018-03-05T14:57:57Z", "message": "Merge pull request #992 from bogemic/pvs_studio_fix_misprinted_condition\n\nfixed misprinted condition detected by PVS Studio."}, {"date": "2018-04-17T17:56:00Z", "message": "Merge pull request #1058 from dns13/patch-1\n\nFix typo"}, {"date": "2018-04-10T15:57:21Z", "message": "Merge pull request #1048 from chuckatkins/misc-cmake-packaging-enhancements\n\nMisc cmake packaging enhancements"}, {"date": "2018-04-10T06:39:58Z", "message": "Merge pull request #1047 from jammehcow/patch-1\n\nFixed incorrect LLVM version number in README"}, {"date": "2018-04-09T06:19:56Z", "message": "Merge pull request #1043 from coryan/patch-1\n\nFix trivial typo in comment."}, {"date": "2018-04-08T09:32:35Z", "message": "Merge pull request #1041 from ax3l/topic-spack\n\nPackage Manager: Spack"}, {"date": "2018-04-07T13:14:59Z", "message": "Merge pull request #1040 from ax3l/topic-debugViewMSVCcmakeMin\n\nCMake: 3.8+ is Sufficient"}, {"date": "2018-04-03T15:34:42Z", "message": "Merge pull request #1026 from ktonon/develop\n\nAdded public target_compile_features for auto and constexpr"}, {"date": "2018-05-28T12:53:23Z", "message": "Merge pull request #1089 from theodelrieu/feature/map_conversion\n\nProvide a from_json overload for std::map"}, {"date": "2018-05-04T15:04:35Z", "message": "Merge pull request #1078 from martin-mfg/patch-1\n\nfix typo in README"}, {"date": "2018-05-03T16:35:56Z", "message": "Update issue templates"}, {"date": "2018-05-03T16:32:53Z", "message": ":wrench: update issue templates"}, {"date": "2018-06-29T07:03:43Z", "message": "Merge pull request #1151 from sonulohani/bigObjFix\n\nFixed compiler error in VS 2015 for debug mode"}, {"date": "2018-06-28T19:21:17Z", "message": "Merge pull request #1134 from Daniel599/feature/items_iterator\n\nfixed compile error for #1045"}, {"date": "2018-06-26T05:58:45Z", "message": "Merge pull request #1144 from jrakow/cppreference-link-fix\n\nFix links to cppreference named requirements (formerly concepts)"}, {"date": "2018-06-24T21:33:30Z", "message": "Merge pull request #1142 from jrakow/develop\n\nmeson: fix include directory"}, {"date": "2018-06-23T15:10:04Z", "message": "Merge pull request #1028 from gracicot/develop\n\nAdded support for string_view in C++17"}, {"date": "2018-06-18T20:01:53Z", "message": "Merge pull request #1130 from agrianius/develop\n\n test (non)equality for alt_string implementation"}, {"date": "2018-06-18T19:59:46Z", "message": "Merge pull request #1138 from theodelrieu/feature/unordered_map_conversion\n\nFeature/unordered map conversion"}, {"date": "2018-06-01T06:05:45Z", "message": "Merge pull request #1117 from TinyTinni/develop\n\nremove stringstream dependency"}], "trevorjameshickey@gmail.com": [{"date": "2015-01-26T02:00:28Z", "message": "more descriptive documentation in example\n\nI wasn't sure what that parameter was at first glance"}], "wancw.wang+github@gmail.com": [{"date": "2015-01-12T12:03:41Z", "message": "Fix string conversion under Clang"}], "teemperor@gmail.com": [{"date": "2015-01-10T21:04:57Z", "message": "Fixed dumping of strings"}, {"date": "2015-01-10T18:53:13Z", "message": "Reapplied code style fixes"}, {"date": "2015-01-10T17:46:01Z", "message": "Fixed build"}, {"date": "2015-01-10T17:28:53Z", "message": "More testing and updated CMake to allow calling private functions from the tests"}, {"date": "2015-01-10T17:09:46Z", "message": "Added a remark to the readme that coverage is GCC only for now"}, {"date": "2015-01-10T16:33:18Z", "message": "Allowed automerge"}, {"date": "2015-01-10T15:50:39Z", "message": "Code point are two words, and so the \"P\" should be capital"}, {"date": "2015-01-10T15:49:10Z", "message": "Fully implemented the JSON spec"}, {"date": "2015-01-10T09:36:30Z", "message": "Quick and dirty implementation for basic multilingual plane in the unicode escape mechanism"}, {"date": "2015-01-09T19:24:58Z", "message": "More tests to get line coverage backt o 100%"}, {"date": "2015-01-09T19:03:18Z", "message": "Implemented the JSON spec for string parsing for everything but the \\uXXXX escaping for unicode"}, {"date": "2015-01-08T21:35:48Z", "message": "Fixed escaped quotes"}, {"date": "2015-01-05T10:29:41Z", "message": "Added CMake to the README"}, {"date": "2015-01-05T10:20:32Z", "message": "Merge branch 'master' of github.com:nlohmann/json"}, {"date": "2015-01-05T10:19:42Z", "message": "CMake and coverage report"}, {"date": "2016-03-10T07:46:26Z", "message": "Added missing cerrno header to fix ERANGE c-error on android"}], "kirk.shoop@microsoft.com": [{"date": "2015-01-09T15:33:28Z", "message": "add the std iterator typedefs to iterator and const_iterator"}], "teemperor@googlemail.com": [{"date": "2015-01-09T10:57:39Z", "message": "Fixed typo in comments"}], "elliotgoodrich@gmail.com": [{"date": "2015-01-06T09:12:55Z", "message": "Fix double delete on std::bad_alloc exception\n\nIf the new operator throws in the json::find methods then result.oi_ is\r\ndeleted again in the destructor of json::iterator/json::const_iterator,\r\nwhich is a double delete and undefined behaviour."}], "jcrandall@alum.mit.edu": [{"date": "2015-02-28T17:11:46Z", "message": "Fixes serialization of small floats\n\nNow uses std::snprintf() to generate a \"%.15g\" formatted string\nfor JSON values of type number_float. 15 decimals digits are\nenough to round-trip an IEEE 754 double from string->double->string\nand get an identical result.\n\nstd::snprintf is called twice. Once to determine the required\nbuffer size and then again after allocating a buffer of that\nsize.\n\nNote that the buffer size *could* be hardcoded for better\nperformance. \"%.15g\" should result in strings of maximum length\n23, plus one character for the terminating null for a buffer size\nof 24."}, {"date": "2015-02-28T15:53:48Z", "message": "Adds (failing) test for small float serialisation"}], "aburgh@mac.com": [{"date": "2015-03-02T20:25:09Z", "message": "Replaced leading tabs with spaces (4 per tab)."}, {"date": "2015-03-01T11:21:47Z", "message": "Added parse() for streams."}, {"date": "2015-03-01T03:36:57Z", "message": "Use inplace configuration for yyfill and disable the parameter to yyfill."}, {"date": "2015-03-01T03:14:57Z", "message": "Added comments to new method yyfill."}, {"date": "2015-02-28T13:42:20Z", "message": "Fixed variable adjustments in yyfill()."}, {"date": "2015-02-28T13:32:12Z", "message": "Purged old commented-out code."}, {"date": "2015-02-28T12:13:17Z", "message": "Removed unused member m_state."}, {"date": "2015-02-28T01:38:05Z", "message": "Removed duplicate m_marker updates in YYFILL macro."}, {"date": "2015-02-28T01:31:03Z", "message": "Deleted extraneous comment."}, {"date": "2015-02-28T01:27:37Z", "message": "Moved m_marker in lexer::scan() to be a member of lexer."}, {"date": "2015-02-28T01:19:15Z", "message": "Moved buffer management into the lexer class and implemented YYFILL so that streams are read incrementally."}, {"date": "2015-05-10T14:09:20Z", "message": "Replace `default_callback` function with `nullptr` and check for null callback function before calling it. This is cleaner and better performing."}, {"date": "2015-05-04T13:08:55Z", "message": "Fix performance regression introduced with the parsing callback feature."}], "oss@florianjw.de": [{"date": "2015-04-26T12:55:06Z", "message": "simplify value_t::operator< by using a lookup-table"}, {"date": "2015-04-26T12:44:56Z", "message": "remove braces around single-return-statement switch-cases"}, {"date": "2015-04-26T12:39:39Z", "message": "Fix comparission between integers and floats\n\nUntil now it depended on the parameter-order whether\nintegers and floats were compared as integers or floats.\n\nAppart from being not logical, this might even have meant that\nthe provided \u201corder\u201d was in fact not that. (not sure here, but I\nlike to be carefull)"}, {"date": "2015-04-26T12:31:31Z", "message": "fix typos and improve operator=="}, {"date": "2015-04-26T12:19:56Z", "message": "simplify operator<"}], "dkopecek@redhat.com": [{"date": "2015-04-14T14:02:49Z", "message": "Fix compilation of json_unit with GCC 5\n\nAddressing:\n```\n+ make json_unit\ng++ -std=c++11  -Wall -Wextra -pedantic -Weffc++ -Wcast-align -Wcast-qual -Wctor-dtor-privacy -Wdisabled-optimization -Wformat=2 -Winit-self -Wmissing-declarations -Wmissing-include-dirs -Wold-style-cast -Woverloaded-virtual -Wredundant-decls -Wshadow -Wsign-conversion -Wsign-promo -Wstrict-overflow=5 -Wswitch -Wundef -Wno-unused -Wnon-virtual-dtor -Wreorder -Wdeprecated -Wfloat-equal  -I src -I test -Dprivate=public test/unit.cpp  -o json_unit\nIn file included from test/catch.hpp:65:0,\n                 from test/unit.cpp:11:\n/usr/include/c++/5.0.0/sstream:300:7: error: 'struct std::__cxx11::basic_stringbuf<_CharT, _Traits, _Alloc>::__xfer_bufptrs' redeclared with different access\n       struct __xfer_bufptrs\n```"}], "aqnouch.mohammed@gmail.com": [{"date": "2015-05-12T13:59:44Z", "message": " Fix typos"}], "ixxoo.me@gmail.com": [{"date": "2015-05-09T09:44:10Z", "message": "support enum\n\nconstruct enum type to basic_json (proxy by int type)\r\n```\r\n    enum { t = 0 };\r\n    json  j = json::array();\r\n    j.push_back(t);\r\n\r\n    j.push_back(json::object({\r\n         {\"game_type\", t}\r\n    }));\r\n```"}], "alexandre.hamez@gmail.com": [{"date": "2015-06-12T08:08:57Z", "message": "inline is useless when member functions are defined in headers\n\nSee https://isocpp.org/wiki/faq/inline-functions#inline-member-fns-more"}, {"date": "2015-06-09T11:31:10Z", "message": "Remove useless typename\n\nAvoid a warning with GCC 4.9:\n\nson.hpp:2361:49: warning: declaration 'struct std::bidirectional_iterator_tag' does not declare anything\n         using iterator_category = typename std::bidirectional_iterator_tag;\n                                                 ^"}, {"date": "2015-06-08T09:39:32Z", "message": "Directly return ostream"}, {"date": "2015-06-08T09:38:52Z", "message": "Avoid warning with Xcode's clang"}], "d.frey@gmx.de": [{"date": "2015-09-25T18:08:35Z", "message": "Remove superfluous inefficiency"}, {"date": "2015-09-20T18:06:33Z", "message": "exception-safe object creation, fixes #118"}], "emvivre@safe-mail.net": [{"date": "2015-09-22T14:57:18Z", "message": "remove invalid parameter '-stdlib=libc++' in CMakeLists.txt"}], "whoshuu@gmail.com": [{"date": "2015-08-25T00:57:50Z", "message": "Use the right variable name in doc string"}], "silverweed1991@gmail.com": [{"date": "2015-09-20T14:15:55Z", "message": "Overload parse() to accept an rvalue reference"}], "colinh-github-06134@icemx.net": [{"date": "2015-09-20T13:04:51Z", "message": "Fix small oversight."}], "dariomt@gmail.com": [{"date": "2015-10-19T10:34:10Z", "message": "Apply same change to the re2c file"}, {"date": "2015-10-19T10:26:38Z", "message": "Apply same change to the re2c file"}, {"date": "2015-10-16T14:42:03Z", "message": "Merge branch 'get_ref'"}, {"date": "2015-10-16T14:40:57Z", "message": "Merge branch 'patch-2'"}, {"date": "2015-10-16T14:36:34Z", "message": "doh! disable test correctly only for MSVC"}, {"date": "2015-10-16T13:45:47Z", "message": "removed const in get_ptr() by accident"}, {"date": "2015-10-16T13:23:57Z", "message": "Added get_ref()\n\nSame as get_ptr() but for references.\nIf the type is incompatible it throws (get_ptr() returns null).\nImplemented in terms of get_ptr()."}, {"date": "2015-10-16T09:11:16Z", "message": "Detect correctly pointer-to-const\n\nThe intention of the current code is to detect a pointer-to-const but instead it is detecting a const-pointer. See #134"}, {"date": "2015-10-07T16:31:08Z", "message": "disabled \"CopyAssignable\" test for MSVC in Debug mode, see #125\n\nSTL iterators used by json::iterator don't pass this test in Debug mode.\r\nThe test does pass in Release mode, so I felt the best thing to do was selectively disable that test."}, {"date": "2015-10-07T15:50:53Z", "message": "removed stream operator for iterator, resolution for #125\n\nIt doesn't really make sense to stream an iterator.\r\nBesides, this was causing trouble in MSVC in Debug mode (see #125)"}, {"date": "2016-01-19T15:20:27Z", "message": "added missing template keyword (required by clang)"}, {"date": "2016-01-19T13:56:07Z", "message": "added missing typename (required by clang/gcc)"}, {"date": "2016-01-18T10:32:24Z", "message": "replicate code changes into re2c file"}, {"date": "2016-01-18T09:08:58Z", "message": "Merge branch 'master' of https://github.com/nlohmann/json"}], "dmenendez@gruposantander.com": [{"date": "2015-10-16T09:23:19Z", "message": "Merge remote-tracking branch 'origin/patch-3'"}, {"date": "2015-10-16T09:22:57Z", "message": "Merge remote-tracking branch 'origin/patch-2'"}, {"date": "2015-10-02T13:57:40Z", "message": "fixed typos in comments for examples"}], "whackashoe@gmail.com": [{"date": "2015-11-19T06:17:36Z", "message": "Replace sprintf with hex function, this fixes #149"}, {"date": "2016-02-20T22:22:46Z", "message": "Create PULL_REQUEST_TEMPLATE.md"}], "gsmiko@gmail.com": [{"date": "2015-11-13T11:49:26Z", "message": "Fix character skipping after a surrogate pair\n\nIn a string the first character following a surrogate pair is skipped by the\nlexer, but the rest of the string is parsed as usual."}, {"date": "2016-04-25T09:55:03Z", "message": "Generate package config files in cmake's current binary directory\n\nGenerate the config files of the package in CMAKE_CURRENT_BINARY_DIR\ninstead of CMAKE_BINARY_DIR because the later will refer to the main\nproject's binary directory if the library is included in the project\nusing the add_subdirectory command."}, {"date": "2016-04-25T08:23:14Z", "message": "Create an install target for the project\n\n- define the project's version in the cmake listfile\n- create a config and config version file for the cmake package\n- install the json.hpp file and the package's targets, config and\nconfig version files"}, {"date": "2016-04-25T07:36:05Z", "message": "Export library target and store build directory in package registry"}, {"date": "2016-04-24T14:55:32Z", "message": "Refactor CMake listfile to define an interface imported library\n\nDefine the library as an interface imported library so other targets\ncan use the library as a dependency and use the interface properties\nof the library."}, {"date": "2016-04-13T11:49:53Z", "message": "Make the indirection and dereference operators of iterator const\n\nfixes #233"}, {"date": "2016-05-18T09:25:36Z", "message": "Define CMake/CTest tests\n\nInstead of copying the test executable and the JSON files used by\nthe tests at install time, define CMake/CTest tests for running\nthe json_unit executable from any build directory with the project's\nsource directory as its working directory.\n\n- call enable_testing in the main lists file to allow the definition\nof tests\n- remove install commands from the test directory's lists file\n- define two tests\n  - json_unit_default for running the default tests by executing\njson_unit without any arguments\n  - json_unit_all for running all the tests by executing json_unit\nwith the \"*\" argument\n- update the AppVeyor configuration file to use the new testing method"}], "welsby.trevorr@gmail.com": [{"date": "2016-01-30T02:41:12Z", "message": "Fixed issue #199"}, {"date": "2016-01-25T23:14:43Z", "message": "Revert to llvm-toolchain-precise-* due to Travis white-list issue"}, {"date": "2016-01-25T22:32:15Z", "message": "Issue #195 - update Travis to Trusty due to gcc/clang strtod() bug"}, {"date": "2016-01-24T16:48:38Z", "message": "Merge upstream commits and resolve conflicts"}, {"date": "2016-01-24T16:42:20Z", "message": "Merge upstream commits and resolve conflicts"}, {"date": "2016-01-24T16:22:46Z", "message": "Disable problematic test for GCC/clang, remove debug dump from unit.cpp"}, {"date": "2016-01-24T16:13:39Z", "message": "Kill unused argument warnings in GCC/clang"}, {"date": "2016-01-24T16:07:49Z", "message": "Fix typo in preprocessor defined/!defined"}, {"date": "2016-01-24T16:01:01Z", "message": "Merge upstream commits and resolve conflicts"}, {"date": "2016-01-24T15:53:32Z", "message": "Disable problematic test for GCC/clang, remove debug dump from unit.cpp"}, {"date": "2016-01-24T15:15:13Z", "message": "Merge upstream commits and resolve conflicts"}, {"date": "2016-01-24T13:51:42Z", "message": "Issue #178 - fully support int64_t/uint64_t numbers, add unsigned type"}, {"date": "2016-01-24T09:15:30Z", "message": "DEBUG ONLY: DUMP INFO FROM TRAVIS"}, {"date": "2016-01-24T07:54:50Z", "message": "Add workaround for gcc < 5 not supporting std::defaultfloat"}, {"date": "2016-01-24T07:15:44Z", "message": "Remove VS induced tabs"}, {"date": "2016-01-24T07:00:11Z", "message": "Fix Issue #186 - add overload wrappers for strto(f|d|ld)"}, {"date": "2016-01-23T07:45:30Z", "message": "Issue #185 - remove approx() and use #pragma to kill warnings"}, {"date": "2016-01-23T07:31:58Z", "message": "Fix typo in new unit.hpp comments"}, {"date": "2016-01-23T07:03:45Z", "message": "Fixed issue #171 - added extra operator[] template overloads"}, {"date": "2016-01-23T06:34:15Z", "message": "Fixed issue #167 - removed operator ValueType() condition for VS2015"}], "v@njh.eu": [{"date": "2016-01-26T14:22:15Z", "message": "Fix broken link"}], "hughes.corbin@gmail.com": [{"date": "2016-01-15T04:35:48Z", "message": "Fixed some typos in CONTRIBUTING.md"}], "michael@macnair.org": [{"date": "2016-02-12T09:35:08Z", "message": "Add support for afl-fuzz testing\n\n\"make fuzz\" creates a simple executable that de-serialises stdin\nand re-serialises to stdout.\n\"make fuzz_testcases\" extracts the smaller json test cases into\na testcases directory.\n\nThe library can then be fuzzed as follows:\n    CC=afl-clang-fast make fuzz\n    make fuzz_testcases\n    mkdir out\n    afl-fuzz -i testcases -o out ./fuzz"}], "kevin.c.dixon@gmail.com": [{"date": "2016-03-30T04:41:46Z", "message": "fixes #223 by updating README.md"}], "lv.zheng.2015@gmail.com": [{"date": "2016-03-28T09:01:25Z", "message": "Use namespace std for int64_t and uint64_t\n\nAccording to the c++11 standard, the declarations are within namespace\nscope of the namespace `std'. Add `std::' to avoid unnecessary\nrequirement of implementations."}], "annihil53@gmail.com": [{"date": "2016-03-02T01:01:40Z", "message": "Corrected readme\n\nInternally, the elements in a map are always sorted by its key following a specific strict weak ordering criterion indicated by its internal comparison object (of type Compare).\r\nWith string type, the default comparator is alphabetical order, and thus two come after three."}], "chriskitching@linux.com": [{"date": "2016-05-11T01:06:33Z", "message": "Repair appveyor... Horrifyingly\n\nIt's sort of gnarly that it's still doing in-tree builds, but I\nreally, _really_ don't want to get any more friendly with CMake's\nVisual Studio generator to work out how to make it stop doing it.\n\nIn-tree builds still work, after all, and the goal of this work is\nto make out-of-tree builds work as well. Notional horrors like\nthis will have to wait ;)"}, {"date": "2016-05-11T00:38:52Z", "message": "Install the test binary and test data. Fixes #241\n\nThe resulting install tree, when tests are enabled, looks like this:\n\n```\n.\n\u251c\u2500\u2500 cmake\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 nlohmann_jsonConfig.cmake\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 nlohmann_jsonConfigVersion.cmake\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 nlohmann_jsonTargets.cmake\n\u251c\u2500\u2500 include\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 nlohmann\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 json.hpp\n\u2514\u2500\u2500 test\n    \u251c\u2500\u2500 bin\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 json_unit\n    \u2514\u2500\u2500 data\n        \u251c\u2500\u2500 json_nlohmann_tests\n        \u2502\u00a0\u00a0 \u251c\u2500\u2500 all_unicode.json\n        \u2502\u00a0\u00a0 \u2514\u2500\u2500 bom.json\n        \u251c\u2500\u2500 json.org\n        \u2502\u00a0\u00a0 \u251c\u2500\u2500 1.json\n        \u2502\u00a0\u00a0 \u251c\u2500\u2500 ...\n        \u251c\u2500\u2500 json_roundtrip\n        \u2502\u00a0\u00a0 \u251c\u2500\u2500 roundtrip01.json\n        \u2502\u00a0\u00a0 \u251c\u2500\u2500 roundtrip02.json\n        \u2502\u00a0\u00a0 \u2514\u2500\u2500 ...\n        \u251c\u2500\u2500 json_tests\n        \u2502\u00a0\u00a0 \u251c\u2500\u2500 fail10.json\n        \u2502\u00a0\u00a0 \u2514\u2500\u2500 ...\n        \u2514\u2500\u2500 json_testsuite\n            \u2514\u2500\u2500 sample.json\n```\n\nIt has the property that you can invoke the test binary from the\nroot of the install tree and the tests work correctly (you no\nlonger depend on the test binary being run inside the source\ntree).\n\nIf tests are disabled, the entire `test/` subtree is omitted.\nNotice how that yields exactly what you want for using this\nlibrary in other projects.\n\nI do not believe I need to update travis due to this change, as the\nevil Makefile continues to do in-tree builds. I expect I'll find\nout soon enough."}, {"date": "2016-05-11T00:25:54Z", "message": "Introduce structure to the test/ directory\n\nThis introduces a clear separation between test data and test\nbinaries. Test data is moved into test/data, and the test binaries\nmove into test/src. A new CMake script specific to building the\ntests is introduced in /test to slightly clean up the toplevel\none.\n\nAs well as tidying things up, this makes the next step trivial..."}, {"date": "2016-05-11T00:14:56Z", "message": "Use definitely-unique target/project name\n\nThere exist lots of json libraries, and project/target names must\nbe globally unique. If someone integrated with this library in a\nparticularly stupid way, using a generic name like \"json\" might\ncause a problem."}, {"date": "2016-05-11T00:12:56Z", "message": "Don't use variable for the test target name\n\nI'm not sure that using a variable for target names really helps\nwith clarity. Unlike paths, target names aren't really something\nyou change. In a sense, targets are themselves a sort of variable,\nso having a variable to name a variable seems just a bit gnarly."}, {"date": "2016-05-11T00:10:29Z", "message": "Unset execute bit on sample.json"}, {"date": "2016-05-08T15:30:24Z", "message": "Add CMake option to disable building the tests (Default builds)"}], "damientoma.pro@gmail.com": [{"date": "2016-06-29T11:28:56Z", "message": "Update hexify to use array lookup instead of ternary (#270)"}], "thlst1101@gmail.com": [{"date": "2016-06-24T08:47:00Z", "message": "fixed a tiny typo"}], "06needhamt@gmail.com": [{"date": "2016-06-14T08:59:50Z", "message": "Fix Issue #265"}], "murinicanor@users.noreply.github.com": [{"date": "2016-07-09T18:02:41Z", "message": "let the makefile choose the correct sed"}], "thomas.braun@byte-physics.de": [{"date": "2016-08-24T22:24:33Z", "message": "unit-constructor1.cpp: Fix floating point truncation warning"}], "christoph.jud@unibas.ch": [{"date": "2016-09-26T10:15:03Z", "message": "relocation of install-include directory for other packages"}], "ssmmcc1@gmail.com": [{"date": "2016-09-17T00:15:36Z", "message": "trivial documentation fix"}], "da.colonel@gmail.com": [{"date": "2016-10-16T00:46:43Z", "message": "fix minor grammar/style issue in README.md"}], "taenaru@gmail.com": [{"date": "2016-10-07T22:03:35Z", "message": "make has_mapped_type struct friendly"}, {"date": "2017-03-25T11:57:58Z", "message": "Add VS17 image to appveyor matrix"}], "vd@freebsd.org": [{"date": "2016-10-04T15:53:44Z", "message": "Fix usage examples' comments for std::multiset"}], "daniel.cohen599@gmail.com": [{"date": "2016-12-25T20:52:37Z", "message": "#394 fixed memory leak in unit-allocator, found by clang's fsanitize"}, {"date": "2016-12-25T12:04:04Z", "message": "going to try clang_sanitize with libstdc++ with g++-6 implementation\n\nConflicts:\n\t.travis.yml\n\tMakefile"}, {"date": "2018-06-16T09:01:49Z", "message": "fixed compile error for #1045; to_json for iternation_proxy_internal was needed"}], "andreas@lonelycoder.com": [{"date": "2016-12-20T20:38:01Z", "message": "Add Doozer build badge"}], "bosswestfalen@users.noreply.github.com": [{"date": "2016-12-13T19:30:56Z", "message": "added missing changes in json.hpp.re2c"}, {"date": "2016-12-12T18:26:45Z", "message": "Replaced class iterator and class const_iterator with aliases of template <typename U> iter_impl. iter_impl has operator const_iterator to create an const_iterator from an iterator."}], "m.yixin.zhang@gmail.com": [{"date": "2016-12-13T01:59:43Z", "message": "Fixed conversion warnings\n\nUse static_cast on digit."}, {"date": "2016-12-10T19:21:13Z", "message": "Ran `make pretty`"}, {"date": "2016-12-10T02:31:57Z", "message": "Fix issue #380: Signed integer overflow check\n\nInstead of checking something like `x * y + z > max` where `x * y` can\noverflow, check for `x > (max - z) / y` instead."}], "alex@alexs-macbook-pro.local": [{"date": "2016-12-13T01:27:15Z", "message": "Merged upstream/develop into feature/locale_independent_str_to_num"}, {"date": "2016-12-13T01:15:57Z", "message": "Tweaked check for preserved sign; added LCOV_EXCL_LINE"}, {"date": "2016-12-13T00:50:21Z", "message": "Disabling snprintf pre-check, since can't get locale-specific behavior to manifest in AppVeyor"}, {"date": "2016-12-13T00:48:14Z", "message": "Disabling strtod pre-check, since can't get locale-specific behavior to manifest in AppVeyor"}, {"date": "2016-12-13T00:46:47Z", "message": "Tweaked check for preserved sign; added LCOV_EXCL_LINE"}, {"date": "2016-12-09T03:39:38Z", "message": "Tweaking unit test, as digits grouping is failing to be invoked in CI"}, {"date": "2016-12-09T03:36:18Z", "message": "Addressing compiler warnings"}, {"date": "2016-12-09T03:13:05Z", "message": "Still trying to invoke locale-specific behavior in CI"}, {"date": "2016-12-09T02:38:14Z", "message": "Removed unused struct; fixed comments"}, {"date": "2016-12-08T01:23:25Z", "message": "Added unit test for issue #378"}, {"date": "2016-12-08T00:55:07Z", "message": "Tweaks to unit-test for issue #379"}, {"date": "2016-12-08T00:53:27Z", "message": "Refactored to avoid using exceptions, as there are plans to support exceptionless mode"}, {"date": "2016-12-07T03:59:12Z", "message": "Trying to coerce setlocale to make snprintf use commas as delimiter some more"}, {"date": "2016-12-07T03:20:48Z", "message": "simplified code a bit based on @gregmarr's suggestions"}, {"date": "2016-12-07T03:18:20Z", "message": "Trying to coerce setlocale to make snprintf use commas as delimiter; the behavior appears to be compiler/platform-specific"}, {"date": "2016-12-07T00:45:48Z", "message": "Added unit-test for issue #379 (locale-independent str-to-num)"}, {"date": "2016-12-07T00:41:31Z", "message": "Refactored preprocessing with a lambda instead of do{...}while(0)"}, {"date": "2016-12-07T00:41:05Z", "message": "Refactored preprocessing with a lambda instead of do{...}while(0)"}, {"date": "2016-12-06T05:43:12Z", "message": "Bugfix: when working with C formatting functions we need to query C locales (localeconv) rather than std::locale"}, {"date": "2016-12-06T05:23:58Z", "message": "Bugfix: when working with C formatting functions we need to query C locales (localeconv) rather than std::locale"}, {"date": "2016-12-06T01:33:28Z", "message": "Addressing msvc-specific compilation issues."}, {"date": "2016-12-06T00:03:39Z", "message": "Small bufix related to creation of fmt string for snprintf"}, {"date": "2016-12-04T18:23:39Z", "message": "Alternative handling of integer types relying on strto[u]ll"}, {"date": "2016-12-04T06:38:23Z", "message": "Fixed suffixing .0 and modified the unit tests accordingly"}, {"date": "2016-12-04T06:27:22Z", "message": "Added locale-independent numtostr"}, {"date": "2016-12-04T04:19:43Z", "message": "stylistic changes"}, {"date": "2016-12-04T03:54:36Z", "message": "Improved overflow detection; removed debugging output statements."}, {"date": "2016-12-04T00:05:09Z", "message": "Added strtonum for locale-independent number parsing"}, {"date": "2017-01-05T00:20:16Z", "message": "Merge upstream/develop into feature/locale_independent_str_to_num"}, {"date": "2017-01-04T23:55:19Z", "message": "Merge upstream/develop into feature/locale_independent_num_to_str"}], "jgrubb@apple.com": [{"date": "2016-12-10T21:17:34Z", "message": "Clang: quiet a warning"}], "jaredgrubb@gmail.com": [{"date": "2017-01-29T02:46:58Z", "message": "README: adjust boost::optional example\n\nThe \"from_json\" example for boost::optional is not complete and should also handle the 'none' case."}], "mstan@bitdefender.com": [{"date": "2017-01-02T22:49:33Z", "message": "fix #414 - comparing to 0 literal\n\nOverload comparison operators for all types that could be converted\nto nullptr."}, {"date": "2017-02-15T13:00:25Z", "message": "Merge remote-tracking branch 'upstream/develop' into develop"}], "theo@tanker.io": [{"date": "2017-01-22T13:23:24Z", "message": "add implicit conversions test (operator T())"}, {"date": "2017-01-22T13:07:28Z", "message": "fix some warnings"}, {"date": "2017-01-21T16:56:59Z", "message": "add static_asserts/remove the need for CopyConstructible in get"}, {"date": "2017-01-21T16:20:32Z", "message": "use typename U = uncvref_t where appropriate"}, {"date": "2017-01-21T16:17:13Z", "message": "put uncvref_t, enable_if_t, value_t and operator<(value_t) in detail"}, {"date": "2017-01-21T16:09:41Z", "message": "put back type_name in basic_json\n\nThis can however not be done easily for value_t, since\nexternal_constructor depends on it, as is operator< which was moved\noutside basic_json too.\nThis is not really an issue, since all basic_json classes share the same\nenum"}, {"date": "2017-01-21T15:47:41Z", "message": "remove useless forward declaration of primitive_iterator_t"}, {"date": "2017-01-21T15:45:08Z", "message": "remove inline keyword from anonymous namespace (not needed)"}, {"date": "2017-01-21T15:41:14Z", "message": "rename template argument Json -> BasicJsonType"}, {"date": "2017-01-21T15:35:23Z", "message": "disable reserve tests when exceptions are disabled"}, {"date": "2017-01-20T22:34:52Z", "message": "rename template argument: BasicJson -> Json"}, {"date": "2017-01-20T22:28:36Z", "message": "move conjunction/disjunction to the top of detail"}, {"date": "2017-01-20T22:21:20Z", "message": "use switchs where appropriate"}, {"date": "2017-01-20T22:07:06Z", "message": "use JSON_THROW"}, {"date": "2017-01-17T09:39:14Z", "message": "run make re2c"}, {"date": "2017-01-17T09:32:35Z", "message": "run make pretty"}, {"date": "2017-01-16T22:23:06Z", "message": "add readme"}, {"date": "2017-01-16T20:59:47Z", "message": "add noexcept tests"}, {"date": "2017-01-15T21:08:49Z", "message": "add basic doxygen documentations"}, {"date": "2017-01-15T21:08:33Z", "message": "remove some boilerplate"}, {"date": "2017-01-15T20:18:58Z", "message": "move static_const to the detail namespace"}, {"date": "2017-01-15T20:01:29Z", "message": "apply changes to json.hpp.re2c"}, {"date": "2017-01-15T19:52:24Z", "message": "remove useless file"}, {"date": "2017-01-15T19:19:54Z", "message": "put const to the left"}, {"date": "2017-01-14T01:47:29Z", "message": "more tests in unit-udt"}, {"date": "2017-01-14T01:47:02Z", "message": "minor message/comments tweak"}, {"date": "2017-01-14T01:33:03Z", "message": "use a priority_tag instead of int and longs with sfinae-dispatch"}, {"date": "2017-01-14T01:20:53Z", "message": "add noexcept checks, and some missing noexcepts"}, {"date": "2017-01-14T00:26:06Z", "message": "attempting to fix coverage. testing that reserve is called"}, {"date": "2017-01-14T00:09:14Z", "message": "put back a specialization for containers with a reserve method"}, {"date": "2017-01-09T09:41:00Z", "message": "check for is_number_unsigned before is_number_integer"}, {"date": "2017-01-09T09:22:22Z", "message": "do not const_cast when calling get_ptr"}, {"date": "2017-01-08T23:29:00Z", "message": "new unit-udt.cpp tests"}, {"date": "2017-01-08T23:06:25Z", "message": "add some constexpr + noexcept"}, {"date": "2017-01-08T22:10:16Z", "message": "remove one has_to/from_json template parameter"}, {"date": "2017-01-08T21:49:02Z", "message": "remove useless helpers"}, {"date": "2017-01-08T18:06:00Z", "message": "remove is_compatible_array_type_impl trait"}, {"date": "2017-01-08T17:59:51Z", "message": "removed is_compatible_float_type trait"}, {"date": "2017-01-08T17:17:33Z", "message": "tweak SFINAE checks for internal types (see commit body)\n\nonly check for public types (iterators, json_pointer)\n\nfor private ones (m_array.iterator, primitive_iterator) simply double\nparentheses on relevant Catch checks"}, {"date": "2017-01-08T16:30:01Z", "message": "cleanup, details in body\n\nremoves:\n- is_basic_json_compatible_type traits\n- a useless operator=\n- void_t\n- disjunction\n\nchanges:\n- is_compatible_object_type's first argument is BasicJson"}, {"date": "2017-01-08T16:20:50Z", "message": "remove old get/get_impl overloads (doc removal is of course temporary)"}, {"date": "2017-01-08T15:55:34Z", "message": "replace constructor by from/to_json: array_t"}, {"date": "2017-01-08T15:17:47Z", "message": "replace constructor by from/to_json: array_t\n\n- tweaked a bit how `get<container<json>>` is handled\n- added a from_json overload for forward list"}, {"date": "2017-01-08T13:07:10Z", "message": "replace constructor by from/to_json: unscoped enum types\n\nthis also means that one can do: j.get<unscoped_enum>();"}, {"date": "2017-01-08T13:06:25Z", "message": "replace constructor by from/to_json: number_integer_t"}, {"date": "2017-01-08T11:44:23Z", "message": "replace constructor by from/to_json: number_unsigned_t\n\nThis commit forces a design change in custom JSONSerializer, which might\nbe temporary"}, {"date": "2017-01-07T18:21:47Z", "message": "replace constructor by from/to_json: number_float_t"}, {"date": "2017-01-07T17:09:42Z", "message": "replace constructor by from/to_json: string_t"}, {"date": "2017-01-07T16:01:17Z", "message": "replace constructor by from/to_json: boolean_t"}, {"date": "2017-01-07T15:57:52Z", "message": "move type_name outside of basic_json, make it a friend"}, {"date": "2017-01-07T14:26:50Z", "message": "move enum class value_t outside of basic_json"}, {"date": "2016-12-15T11:22:53Z", "message": "fix tests, avoid instantiating JSONSerializer when it will not be used"}, {"date": "2016-11-30T22:16:54Z", "message": "rewrite unit-udt: basic usage"}, {"date": "2016-11-29T12:09:51Z", "message": "add support for non-default-constructible udt"}, {"date": "2016-11-24T12:22:46Z", "message": "remove some useless checks, format a bit, added some comments"}, {"date": "2016-11-22T12:27:00Z", "message": "only use conjunction & co when needed to avoid MSVC crashing"}, {"date": "2016-11-21T12:23:25Z", "message": "add is_compatible_basic_json_type trait"}, {"date": "2016-11-17T17:15:40Z", "message": "add a macro for has_xxx types"}, {"date": "2016-11-21T09:17:26Z", "message": "correctly constrain basic_json udt constructor"}, {"date": "2016-11-15T13:22:12Z", "message": "add basic test for custom serializer"}, {"date": "2016-11-08T12:17:16Z", "message": "renamed unit-constructor3.cpp to unit-udt.cpp"}, {"date": "2016-11-08T12:16:14Z", "message": "add template arguments for JSONSerializer"}, {"date": "2016-10-21T14:28:01Z", "message": "move most SFINAE trickery in to/from_json_fn"}, {"date": "2016-10-20T16:02:07Z", "message": "remove has_destructor and has_json_traits, use decltype instead"}, {"date": "2016-10-20T12:02:31Z", "message": "use uncvref_t<T> instead of remove_cv_t<remove_reference_t<T>>>"}, {"date": "2016-10-20T11:45:48Z", "message": "rename __static_const to _static_const (reserved identifier)"}, {"date": "2016-10-16T15:29:57Z", "message": "add first version support for user-defined types"}], "delrieutheo@gmail.com": [{"date": "2017-01-12T22:45:20Z", "message": "use static_casts to silence MSVC warnings\n\nThose warnings are not \"fixed\", but that's intentional.\nTruncations are expected when ArithmeticType is not the same type than\nnumber_unsigned_t (or another basic_json template argument)"}, {"date": "2017-01-12T21:52:00Z", "message": "add static_asserts\n\nremove some useless trailing return types and && to help MSVC"}, {"date": "2016-12-14T23:06:37Z", "message": "add more tests"}, {"date": "2016-12-14T21:08:36Z", "message": "use u8 prefix in unit-udt.cpp"}, {"date": "2016-12-14T20:53:10Z", "message": "fix msvc, by doubling parenthesis on catch assertions"}, {"date": "2016-12-13T23:03:55Z", "message": "add support for enum classes"}, {"date": "2016-12-13T21:01:38Z", "message": "add more tests to unit-udt.cpp"}, {"date": "2016-12-07T22:21:10Z", "message": "add an enum constructor (quickfix)"}, {"date": "2016-12-04T16:52:55Z", "message": "remove explicit keyword on udt-constructor"}, {"date": "2016-11-26T00:31:06Z", "message": "add a few tests"}, {"date": "2016-11-23T23:29:56Z", "message": "format biggest lines"}, {"date": "2016-11-20T23:22:47Z", "message": "add negation, disjunction, and conjunction from C++17"}, {"date": "2016-11-16T22:20:05Z", "message": "remove constraints on JSONSerializer instances, constrain correctly new methods"}, {"date": "2016-11-16T19:49:24Z", "message": "add is_compatible_* traits"}, {"date": "2016-11-09T22:55:03Z", "message": "to_json and from_json takes both two arguments now\n\nthe first is the basic_json type, the second the user-defined type"}, {"date": "2016-11-07T22:24:54Z", "message": "add first version for alternate implementation"}, {"date": "2016-10-18T21:45:58Z", "message": "add alias templates to reduce boilerplate"}, {"date": "2016-10-17T21:41:53Z", "message": "anonymous namespace renamed to detail"}, {"date": "2017-04-02T11:10:15Z", "message": "add enum class default conversions"}, {"date": "2017-06-17T12:24:07Z", "message": "add pair/tuple conversions"}, {"date": "2017-07-09T15:43:59Z", "message": "move serializer outside of basic_json"}, {"date": "2017-07-09T15:31:25Z", "message": "move binary_{reader,writer} outside of basic_json"}, {"date": "2017-07-09T15:20:03Z", "message": "move json_reverse_iterator outside of basic_json"}, {"date": "2017-07-09T14:53:36Z", "message": "move internal_iterator/iter_impl/iteration_proxy outside of basic_json"}, {"date": "2017-07-01T18:18:42Z", "message": "move primitive_iterator outside of basic_json"}, {"date": "2017-07-09T14:38:24Z", "message": "move lexer/parser outside of basic_json"}, {"date": "2017-07-01T18:01:28Z", "message": "move input adapters outside of basic_json"}, {"date": "2017-07-01T17:52:18Z", "message": "move json_pointer outside of basic_json"}, {"date": "2017-07-01T17:44:05Z", "message": "forward declare basic_json, add two macros\n\nThose macros are used to reduce template argument boilerplate"}, {"date": "2017-08-22T21:40:10Z", "message": "fix from_json implementation for pair/tuple\n\nIntroduced by 6e4910d5c5638bedbc3ff650d1b6b91249a927a3\n\nFixes #707"}, {"date": "2017-10-28T12:22:57Z", "message": "add forwarding references to json_ref constructor\n\nfixes #805"}, {"date": "2018-01-13T12:07:03Z", "message": "cmake: add option to use/install the non-amalgamated version"}, {"date": "2018-01-13T12:05:42Z", "message": "move amalgamate tool to third_party folder"}, {"date": "2018-01-13T11:27:33Z", "message": "cmake: add back trailing slash to NLOHMANN_JSON_SOURCE_DIR"}, {"date": "2017-08-14T18:45:33Z", "message": "add single_header CMake target"}, {"date": "2017-08-14T17:28:01Z", "message": "add missing includes, put back include comments"}, {"date": "2017-08-14T16:22:49Z", "message": "add adl_serializer.hpp"}, {"date": "2017-08-14T16:14:27Z", "message": "add detail/json_ref.hpp"}, {"date": "2017-08-14T16:04:51Z", "message": "add detail/serializer.hpp"}, {"date": "2017-08-14T15:55:06Z", "message": "add detail/parsing/binary_writer.hpp"}, {"date": "2017-08-14T15:50:24Z", "message": "add detail/parsing/binary_reader.hpp"}, {"date": "2017-08-14T15:41:23Z", "message": "add detail/parsing/output_adapters.hpp"}, {"date": "2017-08-14T15:29:55Z", "message": "add detail/iterators/json_reverse_iterator.hpp"}, {"date": "2017-08-14T15:26:22Z", "message": "add detail/iterators/iteration_proxy.hpp"}, {"date": "2017-08-14T15:23:15Z", "message": "add detail/iterators/iter_impl.hpp"}, {"date": "2017-08-14T15:18:07Z", "message": "add detail/iterators/internal_iterator.hpp"}, {"date": "2017-08-14T15:10:32Z", "message": "add detail/iterators/primitive_iterator.hpp"}, {"date": "2017-08-14T15:02:40Z", "message": "add detail/parsing/parser.hpp"}, {"date": "2017-08-14T14:54:16Z", "message": "add detail/parsing/lexer.hpp"}, {"date": "2017-08-14T14:48:55Z", "message": "add detail/parsing/input_adapters.hpp"}, {"date": "2017-08-14T14:40:38Z", "message": "add detail/conversions/to_json.hpp"}, {"date": "2017-08-14T14:33:55Z", "message": "add detail/conversions/from_json.hpp"}, {"date": "2017-08-14T13:58:56Z", "message": "add detail/value_t.hpp"}, {"date": "2017-08-14T13:19:40Z", "message": "add detail/exceptions.hpp"}, {"date": "2017-08-14T13:06:35Z", "message": "add detail/meta.hpp"}, {"date": "2017-08-14T12:59:17Z", "message": "add detail/macro_{un}scope.hpp"}, {"date": "2017-08-14T12:41:01Z", "message": "add json_fwd.hpp"}], "vjon207@gmail.com": [{"date": "2017-01-18T19:43:14Z", "message": "Fix documentation error\n\nMove comparison before \"j.clear()\" function call, such that the intended return value \"true\" is actually correct."}], "mail@nlohmann.me": [{"date": "2017-02-28T20:04:16Z", "message": ":twisted_rightwards_arrows: merge branch 'feature/serialization_class' into develop (#418)\n\nMoved all dump()-related functions into a class \"serializer\". This fix includes a lot of performance improvements yielding a 7% speedup for serialization. Details on the individual steps can be found in the commit messages.\n\nIndividual benchmark numbers:\n\nbefore:\n\ndump jeopardy.json                            5   374555228 ns/op\ndump jeopardy.json with indent                5   430953700 ns/op\ndump numbers/floats.json                      5   622938509 ns/op\ndump numbers/signed_ints.json                20    82177979 ns/op\n\nafter:\n\ndump jeopardy.json                            5   335449757 ns/op -11%\ndump jeopardy.json with indent                5   375467773 ns/op -13%\ndump numbers/floats.json                      5   584611852 ns/op -7%\ndump numbers/signed_ints.json                20    68289574 ns/op -17%"}, {"date": "2017-02-28T18:20:50Z", "message": ":lipstick: cleanup\n\n- Added comments for the serializer class.\n- Added test case for resizing of the indentation string.\n- Using std::none_of to check if \u201c.0\u201d needs to be added to\nfloating-point number."}, {"date": "2017-02-28T16:24:03Z", "message": ":lipstick: fixed a warning\n\nsnprintf returns an int, but we later assign it a difference_type which\nis usually a long."}, {"date": "2017-02-28T15:28:22Z", "message": ":zap: micro-optimization of dump()\n\nA lot of small changes to avoid memory allocations:\n\n- The locale is only queried once rather than with every number\nserialization.\n- The indentation string is recycled between different calls.\n- The string escape function avoids a copy if no escaping is necessary.\n- The string escape and the space function use a complete switch case\ninstead of cascaded ifs.\n\nCachegrind measures some 15% performance improvement."}, {"date": "2017-02-28T10:45:38Z", "message": ":bug: fixed a logical error\n\nTreated the size of the range as the number of thousand separators.\nThis logical error yielded a negative value for written_bytes and\neventually an infinite loop, as written_bytes was converted to an\nunsigned value."}, {"date": "2017-02-27T21:10:57Z", "message": ":hammer: integrating numtostr into serializer class\n\nBy merging numtostr into serializer, we can write directly to the\noutput stream. As a consequence, all stream calls are now unformatted."}, {"date": "2017-02-27T20:22:39Z", "message": ":hammer: moved serialization functions to serializer class\n\nThe class is currently just a wrapper for an std::ostream and collects\nall functions related to serialization. The next step should be\nrecycling of variables to avoid repetitive initialization for each\nrecursive dump call."}, {"date": "2017-02-27T15:19:07Z", "message": ":rewind: \":zap: micro-optimizations for dump()\"\n\nThis reverts commit 909b439b03dd1aa048eeaef82c5abfce85c6a56a.\nFor some strange reason, the test suite crashes when compiled\nwith GCC."}, {"date": "2017-02-27T13:58:10Z", "message": ":zap: micro-optimizations for dump()\n\nnumtostr now directly writes to a stream. Return value of snprintf is\nreused to avoid finding end of string. Cachegrind suggests a 1%\nperformance increase."}, {"date": "2017-02-27T00:22:24Z", "message": ":zap: micro-optimizations for dump()\n\nAll \u2018<<\u2018 calls have been replaced by write()/put() calls. The\nindentation strings needs not to be resized. Cachegrind measures 1%\nperformance improvement."}, {"date": "2017-02-26T19:58:00Z", "message": ":zap: micro-optimizations for dump()\n\nIndentation string is recycled to avoid allocations. Comma-separation\nin objects does not need an if any more. Cachegrind measures 1%\nperformance improvement."}, {"date": "2017-02-26T15:55:54Z", "message": ":zap: micro-optimizations for dump()\n\nAdded separate code paths for normal output and pritty-printed output.\nThis allowed to remove most of the ifs along the way. Benchmarks and\ncachegrind suggest a 10% performance improvement."}, {"date": "2017-02-26T13:45:41Z", "message": ":lipstick: cleanup"}, {"date": "2017-02-26T13:34:58Z", "message": ":white_check_mark: more tests for meta() call"}, {"date": "2017-02-26T10:50:52Z", "message": ":white_check_mark: added missing tests"}, {"date": "2017-02-26T10:22:18Z", "message": ":zap: avoid copying a string"}, {"date": "2017-02-25T15:43:15Z", "message": ":memo: updated documentation"}, {"date": "2017-02-25T15:38:18Z", "message": "Merge branch 'develop' into coverity_scan"}, {"date": "2017-02-25T15:37:28Z", "message": ":twisted_rightwards_arrows: merge branch 'release/2.1.1' into develop"}, {"date": "2017-02-25T15:34:38Z", "message": ":bookmark: version 2.1.1"}, {"date": "2017-02-22T19:48:52Z", "message": ":memo: added section on used third-party tools"}, {"date": "2017-02-22T19:48:29Z", "message": ":lipstick: fixed some warnings"}, {"date": "2017-02-22T18:45:10Z", "message": ":twisted_rightwards_arrows: merge branch 'cotire' of https://github.com/tusharpm/json into tusharpm-cotire"}, {"date": "2017-02-22T17:14:29Z", "message": ":construction: fixed more warnings"}, {"date": "2017-02-22T15:56:56Z", "message": ":lipstick: cleanup"}, {"date": "2017-02-21T18:11:34Z", "message": ":construction: overworked fix for #465"}, {"date": "2017-02-20T21:48:27Z", "message": ":ambulance: fix for #465"}, {"date": "2017-02-20T20:56:10Z", "message": ":art: fixed newlines"}, {"date": "2017-02-20T17:32:11Z", "message": ":construction: try to fix some warnings in MSVC"}, {"date": "2017-02-20T17:15:50Z", "message": ":bug: reverted change for #464"}, {"date": "2017-02-20T17:05:52Z", "message": ":bug: fix for #464"}, {"date": "2017-02-20T16:37:34Z", "message": ":hammer: refactored code to avoid using strcpy/strlen/strcat (#463)"}, {"date": "2017-02-20T15:27:16Z", "message": ":construction: removed decay (#448)"}, {"date": "2017-02-20T15:20:45Z", "message": ":lipstick: updated header list"}, {"date": "2017-02-19T20:26:53Z", "message": ":ambulance: fix for #448"}, {"date": "2017-02-19T20:17:05Z", "message": ":sparkles: added start index for from_cbor and from_msgpack (#462)"}, {"date": "2017-02-19T19:08:01Z", "message": ":white_check_mark: added test with thousands_sep"}, {"date": "2017-02-19T18:24:55Z", "message": "Merge branch 'develop' into TurpentineDistillery-feature/locale_independent_num_to_str"}, {"date": "2017-02-19T16:47:20Z", "message": ":construction: fixing warning C4293 (#453)"}, {"date": "2017-02-18T10:01:03Z", "message": ":lipstick: added assertion message"}, {"date": "2017-02-18T10:00:18Z", "message": ":construction: clean up"}, {"date": "2017-02-17T18:14:21Z", "message": ":construction: fixing warning C4267 (#453)"}, {"date": "2017-02-16T08:24:45Z", "message": ":twisted_rightwards_arrows: merge #378 (for #362 and #454)"}, {"date": "2017-02-16T07:50:20Z", "message": ":twisted_rightwards_arrows: merged #415 (fix for #414)"}, {"date": "2017-02-16T07:01:01Z", "message": ":lipstick: cleanup"}, {"date": "2017-02-15T21:44:18Z", "message": ":construction: replaced throws (#440) and _MAX/_MIN macros (#451)"}, {"date": "2017-02-15T20:30:28Z", "message": ":ambulance: fix for #452"}, {"date": "2017-02-14T06:28:30Z", "message": ":memo: update after #302"}, {"date": "2017-02-13T17:55:11Z", "message": ":arrow_up: updated Catch to v1.7.2"}, {"date": "2017-02-13T17:51:23Z", "message": ":hammer: more work on the number parser"}, {"date": "2017-02-12T19:14:43Z", "message": ":white_check_mark: improved test coverage"}, {"date": "2017-02-12T17:50:17Z", "message": ":hammer: further cleanup"}, {"date": "2017-02-11T15:54:25Z", "message": ":hammer: make lexer distinguishes number types"}, {"date": "2017-02-11T14:55:53Z", "message": ":lipstick: cleanup"}, {"date": "2017-02-11T14:17:47Z", "message": ":twisted_rightwards_arrows: merge branch 'develop' into TurpentineDistillery-feature/locale_independent_str_to_num"}, {"date": "2017-02-09T16:38:02Z", "message": ":construction_worker: added Codacy badge"}, {"date": "2017-02-08T19:00:46Z", "message": ":memo: screenshoots look ugly"}, {"date": "2017-02-08T18:22:19Z", "message": ":memo: added screenshots"}, {"date": "2017-02-08T18:16:38Z", "message": ":memo: listing projects using the library"}, {"date": "2017-02-08T17:19:41Z", "message": ":pencil2: fixed more typos"}, {"date": "2017-03-31T22:36:05Z", "message": ":hammer: removed unget() function"}, {"date": "2017-03-31T21:58:45Z", "message": "Merge branch 'develop' into feature/manual_lexer"}, {"date": "2017-03-31T21:57:24Z", "message": ":hammer: added minibench to ignore list"}, {"date": "2017-03-31T21:24:33Z", "message": ":hammer: replaced lookup-tables by switches"}, {"date": "2017-03-31T15:11:51Z", "message": ":hammer: moved buffer size to interface"}, {"date": "2017-03-30T15:39:02Z", "message": ":memo: mentioned #540 and fixed #538"}, {"date": "2017-03-29T05:54:26Z", "message": ":hammer: fixed bugs introduced by merging from develop"}, {"date": "2017-03-28T22:57:09Z", "message": "Merge branch 'develop' into feature/manual_lexer"}, {"date": "2017-03-28T22:39:47Z", "message": ":hammer: deprecated j << istream / j >> ostream functions #367\n\nThe implementation is non-standard. Deprecation allows a simpler API in\nthe future without removing any features."}, {"date": "2017-03-28T21:47:17Z", "message": "Merge branch 'develop' into feature/manual_lexer"}, {"date": "2017-03-28T21:28:54Z", "message": ":white_check_mark: added regression test for #464"}, {"date": "2017-03-28T21:24:59Z", "message": ":memo: addressed #514\n\nNaN values never compare equal to themselves or to other NaN values."}, {"date": "2017-03-28T21:20:45Z", "message": ":hammer: cleanup"}, {"date": "2017-03-28T20:10:24Z", "message": ":hammer: fixed a warning in MSVC"}, {"date": "2017-03-28T19:55:26Z", "message": ":checkered_flag: removed __builtin_expect for MSVC"}, {"date": "2017-03-28T19:39:36Z", "message": "Merge branch 'develop' into feature/manual_lexer"}, {"date": "2017-03-28T19:39:16Z", "message": ":memo: documented Xcode 8.3"}, {"date": "2017-03-28T18:42:12Z", "message": ":construction_worker: added Xcode 8.3\n\nhttps://blog.travis-ci.com/2017-03-28-xcode-83-ga-is-here"}, {"date": "2017-03-28T18:29:27Z", "message": ":hammer: fixed test case"}, {"date": "2017-03-28T18:17:00Z", "message": ":hammer: adjusted test case to new signature of token_type_name()"}, {"date": "2017-03-28T18:08:08Z", "message": ":hammer: some cleanup"}, {"date": "2017-03-28T16:06:43Z", "message": ":hammer: fixed buffer overflow"}, {"date": "2017-03-28T15:00:03Z", "message": ":hammer: fixing last failing test cases"}, {"date": "2017-03-27T20:58:44Z", "message": ":hammer: rewrote string parser to cope with UTF-8"}, {"date": "2017-03-26T16:45:04Z", "message": ":hammer: added code for user-defined number types"}, {"date": "2017-03-26T16:12:58Z", "message": ":hammer: added code for locale-independent number parsing"}, {"date": "2017-03-26T15:26:41Z", "message": ":hammer: fixed number parsing"}, {"date": "2017-03-26T14:19:07Z", "message": ":hammer: adjusted more expected exceptions"}, {"date": "2017-03-26T13:29:08Z", "message": ":hammer: fixed \\uxxxx parsing"}, {"date": "2017-03-26T11:14:14Z", "message": "Merge branch 'develop' into feature/manual_lexer"}, {"date": "2017-03-26T10:54:22Z", "message": "Merge branch 'feature/noexcept_exceptions' into develop"}, {"date": "2017-03-26T10:23:10Z", "message": ":hammer: reverted changes that led to Travis failures"}, {"date": "2017-03-25T22:31:03Z", "message": ":hammer: cleanup"}, {"date": "2017-03-25T16:35:57Z", "message": ":hammer: fixed check for is_nothrow_copy_constructible\n\nWe now only demand our exceptions to be is_nothrow_copy_constructible\nif std::runtime_exception is."}, {"date": "2017-03-25T16:25:39Z", "message": ":hammer: small refactoring\n\nThe solution with a std::runtime_error member is more elegant. It\nallows to have std::exception as base class again. However, I still\nhave no idea why GCC thinks the copy constructor may throw..."}, {"date": "2017-03-25T15:22:52Z", "message": ":ambulance: made exceptions nothrow-copy-constructible #531\n\nTo have nothrow-copy-constructible exceptions, we inherit from\nstd::runtime_error which can cope with arbitrary-length error messages.\nIntermediate strings are built with static functions and then passed to\nthe actual constructor."}, {"date": "2017-03-25T13:47:23Z", "message": ":lipstick: cleanup"}, {"date": "2017-03-25T13:19:05Z", "message": ":memo: cleanup after #536"}, {"date": "2017-03-25T13:12:58Z", "message": "Merge branch 'develop' into feature/manual_lexer"}, {"date": "2017-03-24T18:53:19Z", "message": "Merge branch 'develop' into feature/manual_lexer"}, {"date": "2017-03-24T18:51:11Z", "message": ":memo: update after #534"}, {"date": "2017-03-24T18:49:02Z", "message": ":construction: manual lexer\n\nThis commit removed the re2c lexer and replaced it by a manual version.\nIts integration is not yet complete: number parsing does not respect\nlocales or overflows. Furthermore, parsing does not need to end with\nEOF. Therefore, a lot of test cases fail. The idea is to push this\nbranch forward so we can conduct performance comparisons. So far, a\nnice side effect are better diagnosis messages in case of parse errors."}, {"date": "2017-03-22T07:10:31Z", "message": ":memo: update after #527 and #525"}, {"date": "2017-03-22T07:10:02Z", "message": ":rotating_light: fixed a compiler warning #527\n\nThe result of snprintf is later used in situations where a long may\noverflow."}, {"date": "2017-03-17T21:18:48Z", "message": ":ambulance: fix for #519\n\nAdded catch branch for out_of_range exception that can occur if input\nfile contains a number overflow."}, {"date": "2017-03-17T21:18:05Z", "message": ":ambulance: fix for #516 and #518\n\nWe should compare the binary serializations rather than the JSON values\nthemselves. This fix was already done for CBOR and apparently forgotten\nfor MessagePack."}, {"date": "2017-03-16T18:02:05Z", "message": ":lipstick: cleanup after #508"}, {"date": "2017-03-16T17:39:33Z", "message": ":construction: a lot of minor changes\n\n- Removed unused headers.\n- Added override where needed.\n- Added description for parse_error.113 exception.\n- Fixed some conversion warnings.\n- Integrated cbor_expect_string function for CBOR maps.\n- Added documentation on the supported CBOR/MessagePack features.\n- Added test to check all initial bytes for CBOR input."}, {"date": "2017-03-16T17:35:45Z", "message": ":rotating_light: added pedantic flags for GCC\n\nWith GCC 7, there are even more diagnostic flags."}, {"date": "2017-03-14T22:08:19Z", "message": "Merge branch 'feature/getline' into develop"}, {"date": "2017-03-14T22:08:05Z", "message": ":memo: improved documentation for to-CBOR and to-msgpack functions"}, {"date": "2017-03-14T20:31:36Z", "message": ":hammer: added user-defined exception #493\n\nReplaced old std::invalid_argument exception by parse_error.111 to have\nunified exceptions in case of input stream errors."}, {"date": "2017-03-14T20:24:53Z", "message": ":hammer: changed call from \"not good()\" to \"fail()\" #493\n\nAlso merged develop into this feature branch."}, {"date": "2017-03-14T20:11:20Z", "message": ":checkered_flag: added parentheses around max/min calls #506\n\nWhen <Windows.h> is included with MSVC, a macro NOMINMAX is defined\nthat yields compilation errors when max/min calls are encountered. This\ncan be fixed by un-defining NOMINMAX, or by placing parentheses around\nall min/max calls. We chose the latter."}, {"date": "2017-03-14T20:05:38Z", "message": ":ambulance: added special case to fuzzers to fix #504\n\nSince #329, NaN and inf numbers do not yield an exception, but are\nstored internally and are dumped as \u201cnull\u201d. This commit adjusts the\nfuzz testers to deal with this special case."}, {"date": "2017-03-14T15:14:05Z", "message": ":ambulance: fix for #500\n\nRemoved a check that already failed in MSVC."}, {"date": "2017-03-14T15:07:28Z", "message": ":lipstick: fixed indentation"}, {"date": "2017-03-13T18:04:19Z", "message": ":fire: removed accidentally committed binaries"}, {"date": "2017-03-12T19:59:33Z", "message": ":hammer: added user-defined exception 406"}, {"date": "2017-03-12T19:34:30Z", "message": ":twisted_rightwards_arrows: merge branch 'feature/exceptions_3.0.0' into develop"}, {"date": "2017-03-12T19:22:30Z", "message": ":twisted_rightwards_arrows: merge branch 'develop' into feature/exceptions_3.0.0"}, {"date": "2017-03-12T17:38:05Z", "message": ":boom: implemented new handling of NaN and INF #70 #329 #388\n\n- If an overflow occurs during parsing a number from a JSON text, an\nexception (std::out_of_range for the moment, to be replaced by a\nuser-defined exception #244) is thrown so that the overflow is detected\nearly and roundtripping is guaranteed.\n- NaN and INF floating-point values can be stored in a JSON value and\nare not replaced by null. That is, the basic_json class behaves like\ndouble in this regard (no exception occurs). However, NaN and INF are\nserialized to \u201cnull\u201d.\n- Adjusted test cases appropriately."}, {"date": "2017-03-12T16:05:02Z", "message": ":hammer: cleaned up array from_json methods #473\n\nRemoved some code that is not needed any more. Thus, streamlining the\narray from_json methods."}, {"date": "2017-03-12T14:20:17Z", "message": ":white_check_mark: added regression tests for #473\n\nThese tests currently pass without any adjustments to the source code."}, {"date": "2017-03-12T13:39:20Z", "message": ":hammer: added a check function for MsgPack strings #497\n\nTo avoid the error described in #497, I added a function\nmsgpack_expect_string that is executed every time a string is expected\nduring the parsing of a map. In case the current byte does not belong\nto a MsgPack string, an exception is thrown."}, {"date": "2017-03-12T12:49:39Z", "message": ":memo: overworked documentation for the at functions\n\nAdded all possible exceptions to the examples of the at functions."}, {"date": "2017-03-12T10:51:24Z", "message": "Merge branch 'develop' into feature/exceptions_3.0.0"}, {"date": "2017-03-12T10:49:52Z", "message": "Merge branch 'feature/no_exceptions' into develop"}, {"date": "2017-03-12T10:19:27Z", "message": ":construction_worker: fixed a syntax error"}, {"date": "2017-03-12T10:04:26Z", "message": ":construction_worker: fixed no_exceptions test case\n\nThis test case relied on logics that have been replaced by CMake with\n#461. This change enables compilation and execution of the test suite\nwithout exceptions by adding an after_success task."}, {"date": "2017-03-12T09:40:36Z", "message": ":ambulance: fix for #486\n\nImplemented std::less<value_t> to allow using value_t as std::map key\nin MSVC."}, {"date": "2017-03-11T19:16:13Z", "message": ":hammer: added __EXCEPTIONS to the list"}, {"date": "2017-03-11T18:26:12Z", "message": ":ambulance: fix for #493\n\nAdded a test to check if the input stream is good() before executing\ngetline on it. Also added two test cases that set the failbit and\nbadbit before calling file_line_buffer."}, {"date": "2017-03-11T17:43:21Z", "message": ":hammer: added defined() check"}, {"date": "2017-03-11T16:59:24Z", "message": ":checkered_flag: added check for _CPPUNWIND\n\nMSVC does not define __cpp_exceptions, but seems to use _CPPUNWIND when\nexception support is switched on, see\nhttps://msdn.microsoft.com/en-us/library/b0084kay.aspx."}, {"date": "2017-03-11T16:44:54Z", "message": ":hammer: using __cpp_exceptions to detect exception support #498\n\nI used __EXCEPTIONS to detect whether exceptions are supported.\nApparently, this is a macro that is only used by libstdc++\n(https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64276). It\u2019s much cleaner\nto use __cpp_exceptions as it is in the standard since C++98.\n\nNote that compiling the unit-tests with \u201c-fno-exceptions\u201d still does\nnot work, because Catch uses throw internally. However, the library\u2019s\nexceptions can be switched off by defining JSON_NOEXCEPTION."}, {"date": "2017-03-11T16:22:14Z", "message": "Merge branch 'feature/vector_bool' into develop"}, {"date": "2017-03-11T15:01:26Z", "message": ":art: cleanup after #496\n\nRan \u201cmake pretty\u201d and added a note to the README file."}, {"date": "2017-03-11T14:46:52Z", "message": ":hammer: fixed interface for to_json function"}, {"date": "2017-03-11T14:44:14Z", "message": ":sparkles: added overload for std::less<value_t> #486\n\nMSVC needs this overload to compile code containing a std::map that\nuses nlohmann::detail::operator as key."}, {"date": "2017-03-11T14:32:44Z", "message": ":sparkles: added overload for std::vector<bool> #494\n\nAdds a to_json function for std::vector<bool> to allow implicit\nconversion from bit vectors to basic_json."}, {"date": "2017-03-09T17:55:27Z", "message": "Merge branch 'develop' into coverity_scan"}, {"date": "2017-03-09T17:20:26Z", "message": ":ambulance: fix for #492\n\nThe original test case relied on an invalidated iterator. This error\ndid not occur before, but only with GCC with -D_GLIBCXX_DEBUG. This\ncommit fixes the test case. The library is unaffected by this change."}, {"date": "2017-03-08T22:30:38Z", "message": ":memo: more documentation for the new exceptions"}, {"date": "2017-03-08T22:12:13Z", "message": ":memo: more documentation for the new exceptions"}, {"date": "2017-03-08T20:03:19Z", "message": ":memo: overworked documentation\n\nReplacing references to std exceptions with user-defined exceptions.\nAlso changed some examples to the new exceptions."}, {"date": "2017-03-08T18:16:53Z", "message": ":hammer: added user-defined exception 501"}, {"date": "2017-03-08T17:37:03Z", "message": ":ambulance: fixing fuzzers to work with new exceptions"}, {"date": "2017-03-08T17:07:21Z", "message": ":hammer: changed an exception"}, {"date": "2017-03-08T15:39:17Z", "message": ":white_check_mark: improved test coverage\n\nTests for parse_error.109 were missing."}, {"date": "2017-03-07T19:05:34Z", "message": ":hammer: added user-defined exception 112"}, {"date": "2017-03-06T22:45:08Z", "message": ":hammer: replaced at() calls in msgpack/cbor"}, {"date": "2017-03-06T21:37:46Z", "message": ":hammer: added user-defined exception 111"}, {"date": "2017-03-06T20:00:13Z", "message": ":hammer: added user-defined exception 110"}, {"date": "2017-03-06T18:34:44Z", "message": ":hammer: user-defined exception 302\n\nAlso moved all exception classes into the detail namespace and\nintroduced them via \u201cusing\u201d into basic_json."}, {"date": "2017-03-05T22:25:22Z", "message": "added user-defined exceptions 404-405"}, {"date": "2017-03-05T22:16:17Z", "message": ":hammer: added user-defined exception 403"}, {"date": "2017-03-05T21:56:39Z", "message": ":hammer: added user-defined exceptions 401-402"}, {"date": "2017-03-05T21:39:21Z", "message": ":hammer: added user-defined exception 311"}, {"date": "2017-03-05T21:31:08Z", "message": ":hammer: added user-defined exception 311"}, {"date": "2017-03-05T18:58:26Z", "message": ":hammer: added user-defined exceptions 313-315"}, {"date": "2017-03-05T18:48:11Z", "message": ":hammer: added user-defined exceptions 310"}, {"date": "2017-03-05T18:42:05Z", "message": ":hammer: added user-defined exceptions 309"}, {"date": "2017-03-05T18:35:24Z", "message": ":hammer: added user-defined exceptions 308"}, {"date": "2017-03-05T18:26:44Z", "message": ":hammer: added user-defined exceptions 307"}, {"date": "2017-03-05T18:15:56Z", "message": ":hammer: added user-defined exceptions 306"}, {"date": "2017-03-05T18:08:12Z", "message": ":hammer: added user-defined exceptions 305"}, {"date": "2017-03-05T17:56:35Z", "message": ":hammer: added user-defined exceptions 303-304"}, {"date": "2017-03-05T17:40:09Z", "message": ":hammer: added user-defined exceptions 301"}, {"date": "2017-03-03T13:34:57Z", "message": ":hammer: added user-defined exceptions 2xx"}, {"date": "2017-03-03T13:00:42Z", "message": ":hammer: added user-defined exceptions 205-206"}, {"date": "2017-03-03T12:38:14Z", "message": ":hammer: added user-defined exceptions 203-204"}, {"date": "2017-03-03T12:19:45Z", "message": ":hammer: added user-defined exceptions 201-202\n\nStarted implementing exceptions for invalid iterators."}, {"date": "2017-03-03T11:59:37Z", "message": "Merge branch 'develop' into feature/exceptions_3.0.0"}, {"date": "2017-03-03T11:56:54Z", "message": ":memo: fixed typo #481"}, {"date": "2017-03-03T11:54:45Z", "message": "Merge branch 'develop' into feature/exceptions_3.0.0"}, {"date": "2017-03-03T11:54:37Z", "message": ":hammer: added user-defined exception 109\n\nThis exception occurs when a JSON pointer contains an array index that\ncan not be converted into a number."}, {"date": "2017-03-03T10:56:58Z", "message": ":hammer: added user-defined exceptions 106-108\n\nThese exceptions occur when JSON pointers are malformed."}, {"date": "2017-03-03T09:01:16Z", "message": ":memo: added missing word"}, {"date": "2017-03-02T17:13:19Z", "message": ":arrow_up: updated Catch to v1.8.1"}, {"date": "2017-03-02T16:55:13Z", "message": ":hammer: added user-defined exceptions 104 and 105\n\nThese exceptions are thrown in case of parse errors in JSON patch\ndocuments."}, {"date": "2017-03-01T20:28:44Z", "message": ":hammer: started with user-defined exceptions #301 #244\n\nAdded class hierarchy for user-defined exceptions (#244). Integrated\nparse exceptions 101-103. Parse exceptions include the byte count of\nthe last read character to locate the position of the error (#301)."}, {"date": "2017-03-01T16:49:03Z", "message": ":fire: removed deprecated constructor #480\n\nThe constructor basic_json(std::istream&, const parser_callback_t) has\nbeen deprecated since version 2.0.0. This commit removes it together\nwith its code example, deprecation macro, and test cases. The code now\nalso compiles with -W-deprecated-declarations."}, {"date": "2017-03-01T16:26:32Z", "message": ":memo: added note to 3.0.0 wiki page #474\n\nI created a wiki page\nhttps://github.com/nlohmann/json/wiki/Road-toward-3.0.0 to describe the\ntransition toward version 3.0.0. On this page, all API-breaking changes\nshall be documented."}, {"date": "2017-03-01T09:15:07Z", "message": ":memo: added a note to ordered maps\n\nThe library does not preserve the insertion order of object keys. There\nare frequent requests to change the library in this aspect. The README\nand the contribution guidelines now contain links to containers that\ncan be used to replace std::map to preserve the insertion order."}, {"date": "2017-04-24T15:46:21Z", "message": ":sparkles: started working on #458\n\na simple acceptor function"}, {"date": "2017-04-24T13:07:43Z", "message": ":hammer: removed too long running tests"}, {"date": "2017-04-23T20:54:21Z", "message": ":white_check_mark: added more Unicode test cases"}, {"date": "2017-04-23T19:46:30Z", "message": ":memo: fixed documentation #565\n\nThe documentation mismatched the actual code."}, {"date": "2017-04-23T18:51:29Z", "message": ":checkered_flag: another fix for MSVC #464\n\nneeded for VS2015.3 with /std:c++latest"}, {"date": "2017-04-23T18:32:05Z", "message": ":hammer: cleanup"}, {"date": "2017-04-23T16:40:17Z", "message": ":hammer: fixed a compiler warning\n\nDefault arguments are forbidden in lambdas."}, {"date": "2017-04-23T16:34:14Z", "message": ":hammer: removed #ifdefs"}, {"date": "2017-04-23T16:22:35Z", "message": ":bug: fixed test suite"}, {"date": "2017-04-23T13:12:50Z", "message": ":white_check_mark: added exhaustive UTF-8 tests\n\nCreates all well-formed sequences of bytes up to length 4. Furthermore,\ncreates ill-formed sequences by removing required trailing bytes or\nchanging bytes. As the tests can take a lot of time, preprocessor\nsymbols are introduced."}, {"date": "2017-04-23T13:10:40Z", "message": ":memo: improved documentation"}, {"date": "2017-04-22T09:35:58Z", "message": "Merge branch 'develop' into feature/manual_lexer"}, {"date": "2017-04-22T07:58:37Z", "message": "Merge branch 'feature/insert' into develop"}, {"date": "2017-04-21T20:07:07Z", "message": ":memo: fixed examples for Wandbox\n\nAs I learned in https://github.com/melpon/wandbox/issues/209, this\nlibrary is already installed at Wandbox, so we need to adjust the\nexamples to use `#include \"json.hpp\"` insteas of `#include <json.hpp>`."}, {"date": "2017-04-15T08:40:10Z", "message": ":hammer: improved diagnostic output"}, {"date": "2017-04-14T17:49:05Z", "message": ":hammer: templated output_adapter and used in class serializer"}, {"date": "2017-04-14T16:13:01Z", "message": ":memo: updated links and output"}, {"date": "2017-04-14T15:37:28Z", "message": ":bug: added missing header\n\nstd::setw needs the iomanip header (at least with GCC)."}, {"date": "2017-04-14T15:36:45Z", "message": ":bug: fixed README example\n\nThe example with the size() operator is bad: using operator[] already\nchanges the size of the object. The fix makes it clearer."}, {"date": "2017-04-14T15:35:31Z", "message": ":fire: removed .test files\n\nThese files were never meant to be versioned."}, {"date": "2017-04-12T16:07:25Z", "message": "Merge branch 'develop' into feature/manual_lexer"}, {"date": "2017-04-12T16:01:06Z", "message": "Merge branch 'develop' into feature/insert"}, {"date": "2017-04-11T20:13:26Z", "message": ":construction_worker: Travis is very picky"}, {"date": "2017-04-11T18:37:38Z", "message": ":construction_worker: added Clang 3.9-5.0\n\nTaken from\nhttps://github.com/travis-ci/docs-travis-ci-com/pull/746/files."}, {"date": "2017-04-11T16:57:53Z", "message": ":pencil2: fixed a typo"}, {"date": "2017-04-10T17:51:58Z", "message": "Merge branch 'feature/vs2017' into develop"}, {"date": "2017-04-09T20:13:26Z", "message": ":hammer: added an output adapter for the binary writer"}, {"date": "2017-04-09T19:14:51Z", "message": ":hammer: some cleanup"}, {"date": "2017-04-09T17:28:15Z", "message": ":hammer: simplified interface for parser, lexer, and binary_reader\n\nThese classes are now constructed with an interface adapter. This moves\ncomplexity from various places into the interface adapter class, or to\nsome factories which now implement the different flavors of input.\n\nFurthermore, input adapters are kept in std::shared_ptr to avoid the\nneed of manual deletion."}, {"date": "2017-04-09T12:02:04Z", "message": ":hammer: check for value of _HAS_CXX17"}, {"date": "2017-04-09T11:52:04Z", "message": ":bug: added fix for #464"}, {"date": "2017-04-09T10:00:30Z", "message": ":construction_worker: excluding MSVC 2015 with \"/permissive- /std:c++latest /utf-8\""}, {"date": "2017-04-09T09:47:31Z", "message": ":construction_worker: another try"}, {"date": "2017-04-09T09:38:42Z", "message": ":construction_worker: another try"}, {"date": "2017-04-09T09:00:39Z", "message": ":construction_worker: fixed AppVeyor syntax"}, {"date": "2017-04-09T08:59:45Z", "message": ":construction_worker: additional flags for MSVC #464\n\nTo test a fix for issue #464 (not yet implemented), we first need to\nhave  an MSVC build with \u201c/permissive- /std:c++latest /utf-8\u201d."}, {"date": "2017-04-08T21:39:17Z", "message": ":hammer: fixed test case\n\nOne test case for CBOR and MessagePack assumed little endianess."}, {"date": "2017-04-08T19:56:42Z", "message": ":construction_worker: experimenting with configurations"}, {"date": "2017-04-07T16:29:09Z", "message": ":sparkles: proposal for #428\n\nThis implementation forwards the iterators to std::map::insert."}, {"date": "2017-04-07T15:19:52Z", "message": ":twisted_rightwards_arrows: merge branch 'develop' into feature/manual_lexer"}, {"date": "2017-04-07T13:44:41Z", "message": ":bug: fix for #512\n\nWe totally forgot to implement the comparison operators other than ==\nand != for scalar types. Consequently, comparing a JSON value with a\nscalar type led to compile errors."}, {"date": "2017-04-06T17:54:08Z", "message": ":hammer: fixed another warning\n\nDo not store eof() in a char buffer\u2026"}, {"date": "2017-04-05T18:39:27Z", "message": ":hammer: fixed a compiler warning"}, {"date": "2017-04-04T21:17:43Z", "message": ":hammer: implemented a binary writer"}, {"date": "2017-04-04T15:30:43Z", "message": ":hammer: added endianess check"}, {"date": "2017-04-04T14:59:19Z", "message": ":hammer: implemented MessagePack in binary_reader"}, {"date": "2017-04-04T13:55:40Z", "message": "Merge branch 'develop' into feature/manual_lexer"}, {"date": "2017-04-03T20:58:46Z", "message": ":hammer: cleanup"}, {"date": "2017-04-03T19:53:23Z", "message": ":hammer: fixed compilation errors\n\nTIL about C++:\n\nexecuting m[key()]=val(); for a std::map executes\n\nFirst key() then val() with Clang\n\nFirst val() then key() with GCC\n\n#wat"}, {"date": "2017-04-02T16:46:21Z", "message": ":hammer: a lot of restructuring\n\n- removed uncached input stream adapter; it was too slow anyway\n- implemented a class binary_read which parses CBOR based on input\nadapters\n- in the CBOR parser, numbers are created via memcpy to avoid undefined\nbehavior"}, {"date": "2017-04-01T06:34:58Z", "message": ":hammer: improved code coverage"}, {"date": "2017-05-22T20:59:57Z", "message": ":hammer: fixed compilation"}, {"date": "2017-05-22T20:49:39Z", "message": ":white_check_mark: added test for #367"}, {"date": "2017-05-22T15:06:46Z", "message": ":hammer: trying something #367"}, {"date": "2017-05-21T14:36:51Z", "message": ":white_check_mark: tests and fix for #367\n\noperator>> now works as expected."}, {"date": "2017-05-20T10:44:13Z", "message": ":hammer: working toward #367"}, {"date": "2017-05-20T10:24:13Z", "message": ":hammer: overworked accept() function\n\nFixed to make sure no token is \"overlooked\"."}, {"date": "2017-05-20T08:49:06Z", "message": ":bug: adjusting fix for future versions #586"}, {"date": "2017-05-20T08:34:49Z", "message": ":bug: fix for #586\n\nAlso added a Travis builder with -std=c++1z"}, {"date": "2017-05-15T19:07:58Z", "message": ":rewind: reverting first/second experiment #350"}, {"date": "2017-05-13T17:56:38Z", "message": ":speech_balloon: replaced \"backspace\" with \"backslash\" #509"}, {"date": "2017-05-13T10:27:37Z", "message": ":checkered_flag: fix for #581"}, {"date": "2017-05-13T09:57:15Z", "message": ":memo: updated contribution guidelines"}, {"date": "2017-05-10T10:06:24Z", "message": ":hammer: working on #367\n\nTest cases succeed as expected, but the example in #367 is not fully\nrealized yet."}, {"date": "2017-05-07T17:27:40Z", "message": ":sparkles: implemented an indentation character #520\n\nAn optional parameter for dump() allows to set the character to use for\nindentation (default: space). In case a JSON value is serialized to an\noutput stream, its fill character is used (and can be set with\nstd::setfill)."}, {"date": "2017-05-07T11:41:48Z", "message": ":bug: fixing #575\n\nI forgot to consider the offset."}, {"date": "2017-05-05T16:27:56Z", "message": "Merge branch 'feature/manual_lexer' into develop"}, {"date": "2017-05-05T14:48:47Z", "message": "Merge branch 'develop' into feature/manual_lexer"}, {"date": "2017-05-05T14:42:22Z", "message": ":memo: mentioned value function on main doc page #570"}, {"date": "2017-05-03T20:49:21Z", "message": ":memo: added badge from isitmaintained.com"}, {"date": "2017-06-22T14:40:15Z", "message": ":hammer: simplifying scanner"}, {"date": "2017-06-21T16:55:28Z", "message": "Merge branch 'develop' of https://github.com/nlohmann/json into develop"}, {"date": "2017-06-21T16:55:25Z", "message": ":memo: cleanup after #629 and #630"}, {"date": "2017-06-21T16:50:11Z", "message": ":white_check_mark: added progress output for Unicode tests\n\nTravis aborts tests if they do not produce output for 10 minutes. This commit shall fix this."}, {"date": "2017-06-21T05:26:50Z", "message": ":hammer: removed unexpect function"}, {"date": "2017-06-20T21:05:37Z", "message": ":hammer: adjusted pedantic flags"}, {"date": "2017-06-20T20:58:02Z", "message": ":hammer: fixed a warning"}, {"date": "2017-06-20T20:35:31Z", "message": ":white_check_mark: improved coverage"}, {"date": "2017-06-20T20:20:41Z", "message": ":hammer: fixed a warning"}, {"date": "2017-06-20T20:03:36Z", "message": ":white_check_mark: improved coverage"}, {"date": "2017-06-20T19:39:36Z", "message": ":hammer: fixed a warning"}, {"date": "2017-06-20T19:09:26Z", "message": ":white_check_mark: improved test coverage"}, {"date": "2017-06-20T19:09:05Z", "message": ":hammer: fixed warning about pointer members"}, {"date": "2017-06-20T18:14:18Z", "message": ":hammer: simplified error handling in parser"}, {"date": "2017-06-20T18:13:56Z", "message": ":arrow_up: Catch v1.9.5"}, {"date": "2017-06-20T14:12:14Z", "message": ":memo: updated used compilers"}, {"date": "2017-06-19T19:51:24Z", "message": ":construction_worker: update Travis to use Ubuntu Trusty 14.04 images"}, {"date": "2017-06-19T19:50:36Z", "message": ":hammer: minor change"}, {"date": "2017-06-18T11:03:14Z", "message": ":hammer: replaced lexer's error message by const char*"}, {"date": "2017-06-17T22:00:36Z", "message": "Merge branch 'develop' of https://github.com/nlohmann/json into develop"}, {"date": "2017-06-17T22:00:31Z", "message": ":memo: update after #626"}, {"date": "2017-06-17T18:47:53Z", "message": ":hammer: using std::array to buffer input"}, {"date": "2017-06-17T11:37:04Z", "message": ":white_check_mark: regression test for #600"}, {"date": "2017-06-17T09:20:09Z", "message": ":memo: added note about Conan #566"}, {"date": "2017-06-16T17:23:55Z", "message": ":sparkles: accept functions to check if input is valid JSON #458"}, {"date": "2017-06-13T06:41:14Z", "message": "Merge branch 'feature/ifstream' into develop"}, {"date": "2017-06-12T17:58:44Z", "message": ":hammer: fixed a warning"}, {"date": "2017-06-12T17:02:08Z", "message": ":hammer: removed nonportable code"}, {"date": "2017-06-12T16:58:58Z", "message": ":hammer: trying to fix #367\n\nCode from https://stackoverflow.com/a/44503794/266378 which is hopefully working with MSVC."}, {"date": "2017-06-10T16:29:16Z", "message": ":pencil2: cleanup after #595"}, {"date": "2017-06-06T18:48:11Z", "message": ":pencil2: cleanup after #598"}, {"date": "2017-06-04T16:40:32Z", "message": ":bug: fixed the issue with GCC7 #590"}, {"date": "2017-06-02T10:38:32Z", "message": ":bug: skipping BOM for iterators #602\n\nI totally forgot about byte order marks in this scenario."}, {"date": "2017-06-01T05:32:39Z", "message": ":fire: removed failing test #529"}, {"date": "2017-07-31T21:17:14Z", "message": ":hammer: fixed GCC warnings in #663\n\nhttps://github.com/nlohmann/json/pull/663#issuecomment-318931884"}, {"date": "2017-07-30T18:30:05Z", "message": ":hammer: cleanup after #663"}, {"date": "2017-07-30T18:01:35Z", "message": "Merge branch 'develop' of https://github.com/nlohmann/json into develop"}, {"date": "2017-07-30T18:01:31Z", "message": ":hammer: using emplace"}, {"date": "2017-07-30T16:30:34Z", "message": ":hammer: simplified a call"}, {"date": "2017-07-30T11:25:36Z", "message": ":hammer: small parser performance improvements\n\n- replaced list of pairs by flat list in next_byte_in_range\n- implemented early exit in case of parse errors\n- reused memory for object keys\n- direct calls to embedded objects/arrays for insertions"}, {"date": "2017-07-28T17:18:50Z", "message": ":hammer: refactored some scanner internals"}, {"date": "2017-07-27T22:21:55Z", "message": ":sparkles: binary formats can be stored in std::string, std::ofstreams or std::ostringstream #477"}, {"date": "2017-07-27T18:33:11Z", "message": ":sparkles: implemented exception-free parser #458 #582\n\nYou can now pass a boolean \"allow_exceptions\" to the parse functions. If it is false, no exceptions are thrown in case of a parse error. Instead, parsing is stopped at the first error and a JSON value of type \"discarded\" (check with is_discarded()) is returned."}, {"date": "2017-07-27T04:04:35Z", "message": ":hammer: fixed an error in MSVC"}, {"date": "2017-07-26T21:59:56Z", "message": ":hammer: fixed compilation error"}, {"date": "2017-07-26T21:44:55Z", "message": ":hammer: cleanup"}, {"date": "2017-07-23T21:02:24Z", "message": ":hammer: using input/output adapters for CBOR and MessagePack\n\n- You can now pass a reference to a vector to the to_cbor and to_msgpack functions. The output will be written (appended) to the vector. #476\n\n- You can now pass an output stream with uint8_t character type to the to_cbor and to_msgpack functions. #477\n\n- You can now read from uint8_t */size in the to_cbor and to_msgpack functions. An input adapter will be created from this pair, so you need to use braces. #478"}, {"date": "2017-07-23T16:11:34Z", "message": ":hammer: reorganized interfaces for parse/accept functions #623\n\nWe now rely on implicit conversions to an input_adapter object in the parse/accept functions."}, {"date": "2017-07-22T20:57:22Z", "message": ":hammer: adding destroy function to discard values"}, {"date": "2017-07-22T14:41:42Z", "message": ":hammer: trying to fix the sanitizer error\n\nTravis found an error with Clang 3.8's sanitizers, see https://travis-ci.org/nlohmann/json/jobs/256366699. Unfortunately, I cannot reproduce this error with clang version 6.0.0 (trunk 308825) locally. However, this seems to be an issue, because so far, we did not reset a value after moving from it."}, {"date": "2017-07-22T13:33:31Z", "message": ":hammer: fixed some warnings"}, {"date": "2017-07-22T13:18:38Z", "message": ":zap: started working on parser with provded result reference #418\n\nInternally, the parser now writes its result into a JSON value provided as a reference. To be usable, the public interfaces need to be extended."}, {"date": "2017-07-22T11:35:04Z", "message": ":hammer: further cleanup"}, {"date": "2017-07-21T16:26:07Z", "message": ":hammer: more cleanup using clang-tidy"}, {"date": "2017-07-20T21:01:16Z", "message": ":hammer: cleanup\n\n- Replaced codepoint calculation by bit operations.\n- Fixed several clang-tidy warnings."}, {"date": "2017-07-17T05:53:02Z", "message": ":bug: fix for #656\n\nA complete rewrite of the string escape function. It now provides codepoint-to-\\uxxxx escaping. Invalid UTF-8 byte sequences are not escaped, but copied as-is. I haven\u2019t spent much time optimizing the code - but the library now agrees with Python on every single Unicode character\u2019s escaping (see file test/data/json_nlohmann_tests/all_unicode_ascii.json).\n\nOther minor changes: replaced \"size_t\" by \"std::size_t\""}, {"date": "2017-07-09T10:19:14Z", "message": ":construction_worker: removing Clang 3.9 and 4.0\n\nThese versions are still not working properly: https://travis-ci.org/nlohmann/json/jobs/251675281"}, {"date": "2017-07-09T09:51:38Z", "message": ":memo: cleanup after #650\n\nAs <iostream> is not included in json.hpp any more, all code examples need to include <iostream> now."}, {"date": "2017-07-09T09:10:18Z", "message": ":construction_worker: adding two recent Clang versions\n\nMaybe the simple approach is working now - at least it is in https://github.com/taocpp/PEGTL/blob/master/.travis.yml"}, {"date": "2017-07-08T20:59:19Z", "message": ":construction_worker: added GCC7"}, {"date": "2017-07-08T20:59:04Z", "message": ":hammer: improved performance in dump for deeply nested values"}, {"date": "2017-07-08T20:16:45Z", "message": ":memo: fixed documentation\n\nThere was an issue in the documentation example before. Unfortunately, I did not recreate the example outputs."}, {"date": "2017-07-08T19:35:13Z", "message": ":hammer: removed exception parse_error.111\n\nIt makes no sense to have this special exception. Instead of throwing when an input adapter is created, it is better to detect a parse error in later usage when an EOF is \"read\" unexpectedly."}, {"date": "2017-07-08T18:31:13Z", "message": ":hammer: simplified binary write\n\nAlso added some comments and improved the documentation."}, {"date": "2017-07-08T16:34:08Z", "message": ":hammer: excluded uncovered lines\n\nThese breaks were just added to silence a GCC warning - the GCC is right about warning as it cannot know that the expect function will not return in these two scenarios."}, {"date": "2017-07-08T14:34:00Z", "message": "Merge branch 'feature/undo_171' into develop"}, {"date": "2017-07-08T14:18:27Z", "message": ":memo: fixed typos"}, {"date": "2017-07-08T11:33:13Z", "message": ":fire: removing usused functions #645\n\nIt seems these functions are not required any more. The code was added in commit 7e32457 to fix issue #171. There are still regression tests for #171, so when this commit passes the CI, the functions may be removed for good."}, {"date": "2017-07-08T10:55:05Z", "message": ":memo: added version string for Xcode 9"}, {"date": "2017-07-08T10:11:45Z", "message": ":arrow_up: Catch v1.9.6"}, {"date": "2017-07-08T10:03:12Z", "message": ":hammer: fixed a pedantic warning"}, {"date": "2017-07-08T09:57:09Z", "message": ":construction_worker: added Xcode 9 beta\n\nSee https://twitter.com/travisci/status/880550780368855040"}, {"date": "2017-07-07T21:38:04Z", "message": ":white_check_mark: re-added test\n\nI have no idea why this test has been removed in the first place."}, {"date": "2017-07-07T21:37:16Z", "message": ":bug: fixed undefined behavior bug\n\nWhen an empty vector was passed to the parse function, an empty iterator range was used to construct an input iterator. Unfortunately, we then cannot use the start iterator to derive a pointer from.\n\nFound with Xcode's undefined behavior sanitizer."}, {"date": "2017-07-07T20:41:22Z", "message": ":hammer: fixed some pedantic GCC warnings"}, {"date": "2017-07-07T19:16:33Z", "message": ":memo: fix for #639\n\nRemoved deprecated documentation of the comparison operator."}, {"date": "2017-08-29T21:46:26Z", "message": ":memo: improved documentation"}, {"date": "2017-08-27T09:30:36Z", "message": ":construction_worker: removed unneccessary test"}, {"date": "2017-08-27T08:41:39Z", "message": ":hammer: trying to fix memory issue with valarray"}, {"date": "2017-08-26T06:56:34Z", "message": ":construction_worker: using the same compilers"}, {"date": "2017-08-26T06:20:37Z", "message": ":construction_worker: run sanitizer another time to check if it works"}, {"date": "2017-08-25T20:49:18Z", "message": ":construction_worker: trying to use libstdc++\n\nhttps://github.com/travis-ci/apt-source-whitelist/issues/372#issuecomment-320547215"}, {"date": "2017-08-25T20:34:00Z", "message": ":construction_worker: adjusted flags for Clang sanitizer\n\nwe are overrding the CXXFLAGS provided by travis in order to use gcc's libstdc++"}, {"date": "2017-08-25T19:29:27Z", "message": ":construction_worker: added option to switch off exceptions"}, {"date": "2017-08-25T19:01:07Z", "message": ":construction_worker: using Ninja"}, {"date": "2017-08-25T18:19:58Z", "message": ":construction_worker: adding status messages"}, {"date": "2017-08-25T18:12:21Z", "message": ":construction_worker: added flags for Valgrind and Clang sanitizer"}, {"date": "2017-08-25T16:06:22Z", "message": ":construction_worker: new cmake file for test cases"}, {"date": "2017-08-23T06:39:19Z", "message": "Revert \":construction_worker: using libc++ with Clang\"\n\nThis reverts commit 41b2c69bdb72268638472f46bd996f98919e06e2."}, {"date": "2017-08-22T22:42:15Z", "message": ":hammer: cleanup\n\nFixed some warning in Clion."}, {"date": "2017-08-22T21:28:23Z", "message": ":bug: re-added support for std::valarray #702"}, {"date": "2017-08-22T20:04:38Z", "message": ":construction_worker: using libc++ with Clang"}, {"date": "2017-08-21T18:03:24Z", "message": ":construction_worker: using Clang 5.0"}, {"date": "2017-08-21T15:31:14Z", "message": ":construction_worker: trying to fix build error\n\nSee http://help.appveyor.com/discussions/problems/7450-build-error-on-vs-2017-image-suddenly."}, {"date": "2017-08-21T15:27:35Z", "message": ":construction_worker: added Clang 5.0 (see https://docs.travis-ci.com/user/languages/cpp/#clang)"}, {"date": "2017-08-20T18:44:44Z", "message": "Revert \":boom: changed iterators to andom_access_iterator #593\"\n\nThis reverts commit c77a0be5f3b93365b87b7cdca2e9c3475813652c."}, {"date": "2017-08-20T17:31:07Z", "message": ":rotating_light: fixing two compiler warnings"}, {"date": "2017-08-16T19:35:22Z", "message": ":boom: changed iterators to andom_access_iterator #593\n\nThis commit changes the iterator category to andom_access_iterator and allows offsets and subscript operators for object iterators."}, {"date": "2017-08-16T18:11:05Z", "message": ":hammer: approach to un-break the changes for #462"}, {"date": "2017-08-16T12:48:23Z", "message": ":boom: CBOR/MessagePack input must end with EOF #505\n\nThe CBOR and MessagePack parsers now expect the input to be read until the end. Unless the new parameter \"strict\" is set to false (it is true by default), an exception is raised if the parser ends prematurely. This is a breaking change as the parsers ignored unread input so far.\n\nFurthermore, the offset/startIndex paramter introduced in #462 was removed as this behavior can be mimicked with an iterator range. For instance, instead of calling \"from_cbor(vec, 5);\", you can write \"from_cbor({vec.begin()+5, vec.end()});\"."}, {"date": "2017-08-16T08:23:39Z", "message": ":arrow_up: Catch v1.9.7"}, {"date": "2017-08-16T07:21:20Z", "message": ":construction_worker: running sanitizer job in parallel"}, {"date": "2017-08-16T06:11:02Z", "message": ":construction_worker: run sanitizer after tests"}, {"date": "2017-08-16T05:42:57Z", "message": ":construction_worker: set sanitizer to clang4"}, {"date": "2017-08-16T05:39:30Z", "message": "Merge branch 'feature/update' into develop"}, {"date": "2017-08-16T05:39:11Z", "message": ":hammer: preparation for #505\n\nAdded a parameter to control whether parsing CBOR and MessagePack must completely consume the input."}, {"date": "2017-08-15T19:42:58Z", "message": "Merge branch 'develop' into feature/update"}, {"date": "2017-08-15T19:42:50Z", "message": ":memo: updated documentation for update() function #661"}, {"date": "2017-08-15T18:49:18Z", "message": ":memo: added note wrt. #667"}, {"date": "2017-08-15T18:30:01Z", "message": ":construction_worker: forgot to install Cmake on OSX"}, {"date": "2017-08-15T17:54:22Z", "message": "Merge branch 'develop' into feature/update"}, {"date": "2017-08-15T17:52:47Z", "message": "Merge branch 'feature/travis_clang' into develop"}, {"date": "2017-08-13T18:57:27Z", "message": ":hammer: cleanup"}, {"date": "2017-08-13T18:27:27Z", "message": "Merge branch 'develop' into feature/travis_clang"}, {"date": "2017-08-13T17:02:58Z", "message": ":hammer: cleanup"}, {"date": "2017-08-10T21:41:12Z", "message": ":construction_worker: changed c++17 to c++1z"}, {"date": "2017-08-10T21:40:30Z", "message": ":hammer: cleanup"}, {"date": "2017-08-10T19:17:40Z", "message": ":construction_worker: cleanup"}, {"date": "2017-08-10T18:54:59Z", "message": ":construction_worker: fix for coverity + clang-5.0"}, {"date": "2017-08-10T18:37:23Z", "message": ":construction_worker: removing clang from source"}, {"date": "2017-08-10T18:31:59Z", "message": ":construction_worker: clang-3.4"}, {"date": "2017-08-10T18:26:49Z", "message": ":construction_worker: clang-3.4"}, {"date": "2017-08-10T18:21:41Z", "message": ":construction_worker: clang-4.0"}, {"date": "2017-08-10T18:16:35Z", "message": ":construction_worker: clang-3.9"}, {"date": "2017-08-10T18:12:27Z", "message": ":construction_worker: added source for gcc"}, {"date": "2017-08-10T18:09:39Z", "message": ":construction_worker: added gcc"}, {"date": "2017-08-10T18:06:47Z", "message": ":construction_worker: removed gcc"}, {"date": "2017-08-10T18:04:36Z", "message": ":construction_worker: clang-3.8"}, {"date": "2017-08-10T17:59:00Z", "message": ":construction_worker: another try"}, {"date": "2017-08-10T17:56:09Z", "message": ":construction_worker: clang-3.4"}, {"date": "2017-08-10T17:50:36Z", "message": ":construction_worker: clang-3.5"}, {"date": "2017-08-10T17:45:33Z", "message": ":construction_worker: using clang++"}, {"date": "2017-08-10T17:40:09Z", "message": ":construction_worker: another try"}, {"date": "2017-08-10T17:31:43Z", "message": ":construction_worker: removed g++"}, {"date": "2017-08-10T17:24:36Z", "message": ":construction_worker: clang-3.6"}, {"date": "2017-08-10T17:23:55Z", "message": ":construction_worker: clang-3.6"}, {"date": "2017-08-10T17:18:45Z", "message": ":construction_worker: fixed compiler"}, {"date": "2017-08-10T17:15:16Z", "message": ":construction_worker: different source"}, {"date": "2017-08-10T17:12:04Z", "message": ":construction_worker: clang-3.7"}, {"date": "2017-08-10T17:03:35Z", "message": ":construction_worker: clang-3.8"}, {"date": "2017-08-10T04:50:34Z", "message": ":memo: acknowledgements for #674, #678, #682, #685, and #686"}, {"date": "2017-08-08T19:26:15Z", "message": ":construction_worker: removed failing builders"}, {"date": "2017-08-08T17:15:49Z", "message": "Merge branch 'develop' of https://github.com/nlohmann/json into develop"}, {"date": "2017-08-08T17:14:22Z", "message": ":construction_worker: trying to install g++ to make clang work"}, {"date": "2017-08-03T15:47:42Z", "message": ":white_check_mark: improved test coverage"}, {"date": "2017-08-02T20:44:58Z", "message": ":white_check_mark: added test cases for update #661"}, {"date": "2017-08-02T20:12:41Z", "message": ":tada: first draft for #661"}, {"date": "2017-08-01T17:37:25Z", "message": ":zap: replaced by-value call #673"}, {"date": "2017-09-30T09:00:26Z", "message": ":rotating_light: removing compiler warnings #755"}, {"date": "2017-09-30T08:18:18Z", "message": ":memo: fixed documentation #745"}, {"date": "2017-09-14T15:31:28Z", "message": ":white_check_mark: improved test coverage"}, {"date": "2017-09-14T15:31:14Z", "message": ":construction_worker: another try with Travis"}, {"date": "2017-09-13T16:57:25Z", "message": "Merge branch 'develop' into feature/issue698"}, {"date": "2017-09-13T16:56:54Z", "message": ":white_check_mark: improved test coverage"}, {"date": "2017-09-10T20:38:23Z", "message": "Merge branch 'develop' into feature/issue698"}, {"date": "2017-09-10T20:38:04Z", "message": ":white_check_mark: improved test coverage"}, {"date": "2017-09-10T09:42:57Z", "message": "Merge branch 'develop' into feature/issue698"}, {"date": "2017-09-10T09:42:43Z", "message": ":white_check_mark: improved test coverage"}, {"date": "2017-09-10T08:22:10Z", "message": "Merge branch 'develop' into feature/issue698"}, {"date": "2017-09-10T08:21:53Z", "message": ":white_check_mark: improved test coverage"}, {"date": "2017-09-09T23:13:43Z", "message": "Merge branch 'develop' into feature/issue698"}, {"date": "2017-09-09T23:12:03Z", "message": ":hammer: clean up"}, {"date": "2017-09-09T14:53:37Z", "message": "Merge branch 'develop' into feature/issue698"}, {"date": "2017-09-09T14:53:27Z", "message": ":white_check_mark: improved test coverage"}, {"date": "2017-09-09T11:07:40Z", "message": "Merge branch 'develop' into feature/issue698"}, {"date": "2017-09-09T11:07:10Z", "message": ":white_check_mark: improved test coverage"}, {"date": "2017-09-09T09:05:20Z", "message": "Merge branch 'develop' into feature/issue698"}, {"date": "2017-09-09T09:04:58Z", "message": ":white_check_mark: improved test coverage"}, {"date": "2017-09-06T16:26:52Z", "message": ":rewind: back to previous MSVC 2017"}, {"date": "2017-09-06T16:13:35Z", "message": ":construction_worker: try to use MSVC 2017 again"}, {"date": "2017-09-06T15:14:06Z", "message": ":memo: improved documentation"}, {"date": "2017-10-31T14:04:14Z", "message": ":hammer: another try to fix #714\n\nadding std::ios_base::binary when opening all_unicode.json.cbor"}, {"date": "2017-10-30T15:04:34Z", "message": ":rocket: installed Request Info Bot"}, {"date": "2017-10-29T15:32:23Z", "message": ":memo: overworked templates"}, {"date": "2017-10-29T10:55:04Z", "message": "Merge branch 'develop' of https://github.com/nlohmann/json into develop"}, {"date": "2017-10-29T10:54:53Z", "message": ":rocket: installed Sentiment Bot"}, {"date": "2017-10-28T07:41:35Z", "message": ":hammer: set bidirectional iterator tag #593"}, {"date": "2017-10-27T14:39:52Z", "message": ":memo: comment to address #561"}, {"date": "2017-10-27T14:07:04Z", "message": ":memo: some documentation"}, {"date": "2017-10-27T09:49:24Z", "message": ":hammer: cleanup"}, {"date": "2017-10-27T09:49:17Z", "message": ":memo: thanks for #795"}, {"date": "2017-10-25T09:37:33Z", "message": ":rocket: installed Stale Bot"}, {"date": "2017-10-23T10:01:50Z", "message": ":rewind: #714 is still not fixed"}, {"date": "2017-10-22T09:16:33Z", "message": ":construction: checking if #714 is now fixed with MSVC\n\nHopefully, #764 fixed this."}, {"date": "2017-10-22T07:12:35Z", "message": ":memo: cleanup after the last PRs"}, {"date": "2017-10-22T06:53:46Z", "message": "Merge branch 'develop' of https://github.com/nlohmann/json into develop"}, {"date": "2017-10-22T06:53:43Z", "message": ":hammer: some simplifications"}, {"date": "2017-10-22T06:53:27Z", "message": ":white_check_mark: improved test coverage"}, {"date": "2017-10-13T06:46:29Z", "message": ":rotating_light: fixed warnings #776"}, {"date": "2017-10-05T18:36:18Z", "message": ":memo: comment how to integrate tsl::ordered_map (#546)"}, {"date": "2017-10-05T18:33:27Z", "message": ":memo: comment how to integrate fifo_map (#485)"}, {"date": "2017-10-05T17:43:59Z", "message": ":memo: different cmake call"}, {"date": "2017-10-05T17:43:39Z", "message": ":wrench: executing tests in parallel"}, {"date": "2017-10-05T17:43:19Z", "message": ":wrench: removing -Weffc++ warnings"}, {"date": "2017-10-05T17:08:28Z", "message": "Merge branch 'feature/coveralls' into develop"}, {"date": "2017-10-05T17:08:15Z", "message": ":hammer: added filter script for branch coverage"}, {"date": "2017-10-05T05:13:59Z", "message": ":hammer: adjusted Coverity script to work without Makefile"}, {"date": "2017-10-04T22:17:09Z", "message": ":hammer: added Makefile target to calculate lcov coverage"}, {"date": "2017-10-04T20:18:21Z", "message": ":hammer: trying to use Coveralls with CMake #698"}, {"date": "2017-10-04T17:27:35Z", "message": ":hammer: cleaned up Makefiles and docs #698"}, {"date": "2017-10-04T15:28:35Z", "message": ":rotating_light: fixing last warning in #755"}, {"date": "2017-10-03T16:47:08Z", "message": ":checkered_flag: and another try"}, {"date": "2017-10-03T16:21:40Z", "message": ":checkered_flag: another try"}, {"date": "2017-10-03T15:57:40Z", "message": ":checkered_flag: try to get MSVC 2017 running again"}, {"date": "2017-10-03T15:23:05Z", "message": "Merge branch 'develop' into feature/issue698"}, {"date": "2017-10-02T21:06:41Z", "message": ":hammer: clean up"}, {"date": "2017-10-02T16:25:25Z", "message": "Merge branch 'develop' into feature/issue698"}, {"date": "2017-10-02T16:11:36Z", "message": ":rotating_light: removing a compiler warning #755"}, {"date": "2017-10-02T15:47:53Z", "message": "Merge branch 'develop' into feature/issue698"}, {"date": "2017-10-02T11:54:14Z", "message": ":checkered_flag: fixing a min() call for MSVC #762"}, {"date": "2017-10-01T13:48:29Z", "message": ":rewind: removed call to std::signbit #761"}, {"date": "2017-11-26T09:15:23Z", "message": ":ambulance: the last commit contained a bug #821"}, {"date": "2017-11-25T21:06:18Z", "message": ":rotating_light: fixed some warnings #821"}, {"date": "2017-11-25T18:41:11Z", "message": "Merge branch 'feature/to_array' into develop"}, {"date": "2017-11-25T18:41:02Z", "message": ":white_check_mark: improved test coverage"}, {"date": "2017-11-06T19:35:05Z", "message": ":memo: fixes #820"}, {"date": "2017-12-29T19:24:49Z", "message": "Merge branch 'release/3.0.1' into develop"}, {"date": "2017-12-29T17:31:13Z", "message": ":bookmark: set version to 3.0.1"}, {"date": "2017-12-29T15:53:04Z", "message": ":white_check_mark: added test for #894"}, {"date": "2017-12-29T15:52:09Z", "message": ":memo: updated docs after PRs"}, {"date": "2017-12-28T12:52:26Z", "message": "Merge branch 'develop' of https://github.com/nlohmann/json into develop"}, {"date": "2017-12-28T12:52:23Z", "message": ":ambulance: fix for #894\n\n- Implemented \"copy\" in terms of \"add\".\n- Added check for JSON Pointer array indices to make sure the complete reference token was processed.\n- Added test suite from https://github.com/json-patch/json-patch-tests"}, {"date": "2017-12-23T17:38:18Z", "message": ":memo: added exception 403 to documentation of at (#888)\n\nThe at function throws json::out_of_range.403 when a nonexistent object key is provided (just like the usual at function). This was not documented and users could assume json::out_of_range.404 would be thrown instead.\n\n- Updated documentation.\n- Added example code."}, {"date": "2017-12-18T18:46:53Z", "message": ":memo: fix for #883\n\n- Adjusted table to user-defined exceptions. This was forgotten in the 3.0.0 update.\n- Added update function to the table."}, {"date": "2017-12-17T10:22:35Z", "message": ":memo: removed paragraph on version 3.0.0"}, {"date": "2017-12-17T10:04:53Z", "message": "Merge branch 'release/3.0.0' into develop"}, {"date": "2017-12-17T09:20:30Z", "message": ":arrow_up: updated git-update-ghpages script"}, {"date": "2017-12-17T07:40:19Z", "message": ":bookmark: set version to 3.0.0"}, {"date": "2017-12-17T07:31:18Z", "message": ":bookmark: set version to 3.0.0"}, {"date": "2017-12-16T22:58:10Z", "message": ":memo: improved documentation for dump and iterator_wrapper"}, {"date": "2017-12-16T21:19:30Z", "message": ":rotating_light: fixed some warnings"}, {"date": "2017-12-16T11:37:44Z", "message": ":pencil2: fixed typos"}, {"date": "2017-12-16T11:37:25Z", "message": ":heavy_minus_sign: removing <iomanip> header"}, {"date": "2017-12-16T10:16:34Z", "message": ":white_check_mark: re-added tests for algorithms"}, {"date": "2017-12-15T22:49:37Z", "message": ":memo: fixed year"}, {"date": "2017-12-14T21:29:39Z", "message": ":busts_in_silhouette: added contributor image"}, {"date": "2017-12-14T06:49:16Z", "message": "Revert \":arrow_up: updated to Catch 2.0.1\"\n\nThis reverts commit 920f64c01c126e0664b3b1905c3f60872bd518cd."}, {"date": "2017-12-13T22:44:53Z", "message": ":ok_hand: fixed some issues from the last commit #875"}, {"date": "2017-12-13T22:36:22Z", "message": ":sparkles: implemented JSON Merge Patch (RFC 7396)\n\nSQLite's json1 extension (https://www.sqlite.org/json1.html) supports JSON Merge Patch (https://tools.ietf.org/html/rfc7396). As the implementation is trivial and we already support JSON Patch, I think this could be a nice extension to the library."}, {"date": "2017-12-13T21:18:05Z", "message": ":arrow_up: updated to Catch 2.0.1\n\nUpdate required all CHECK_THROWS_AS macros to pass the exception type without reference, because this is now done by Catch2."}, {"date": "2017-12-13T21:17:02Z", "message": ":memo: overworked README\n\n- Added recent contributors to thanks list.\n- Linked PGP key for private mails.\n- Updated compiler list."}, {"date": "2017-12-13T21:15:53Z", "message": ":ok_hand: cosmetic changes and overworked spelling\n\n- All hex literals use upper case letters after the x.\n- Fixed sime typos.\n- Documented some more functions."}, {"date": "2017-12-13T16:01:39Z", "message": ":rotating_light: remove C4996 warnings #872\n\nThese were the remaining direct calls to alloc."}, {"date": "2017-12-12T19:44:57Z", "message": ":white_check_mark: improved test coverage\n\nAs we guarantee proper UTF-8 before, we do not need to cope with it later."}, {"date": "2017-12-11T21:38:05Z", "message": ":boom: throwing an exception in case dump encounters a non-UTF-8 string #838\n\nWe had a lot of issues with failing roundtrips (i.e., parse errors from serializations) in case string were stored in the library that were not UTF-8 encoded. This PR adds an exception in this case."}, {"date": "2017-12-10T12:07:47Z", "message": ":pencil2: fixing typos #869"}, {"date": "2017-12-10T11:32:20Z", "message": ":memo: fixing documentation #867\n\nThe example in the documentation on how to \"force\" an array of arrays was wrong since the first release. Fixed the documentation and added checks for the README unit tests."}, {"date": "2017-12-06T21:32:03Z", "message": ":construction_worker: added Xcode 9.1 and 9.2"}, {"date": "2017-12-06T21:21:11Z", "message": ":lipstick: reformatted code after PRs"}, {"date": "2017-12-06T20:42:36Z", "message": ":memo: clarified difference between serialization and string value retrieval #853"}, {"date": "2018-01-31T21:36:18Z", "message": ":sparkles: added define for library version #948 #943"}, {"date": "2018-01-31T20:54:38Z", "message": ":memo: added more statistics on binary formats"}, {"date": "2018-01-31T19:53:13Z", "message": ":bug: fix for #947"}, {"date": "2018-01-31T16:23:11Z", "message": ":memo: added documentation for binary formats"}, {"date": "2018-01-30T22:57:49Z", "message": ":rotating_light: fixed warnings"}, {"date": "2018-01-30T22:20:39Z", "message": "Merge branch 'develop' of https://github.com/nlohmann/json into develop"}, {"date": "2018-01-30T22:20:36Z", "message": ":memo: added documentation for binary formats"}, {"date": "2018-01-29T20:56:13Z", "message": ":hammer: rename yytext to token_buffer (fixes #933)"}, {"date": "2018-01-28T20:02:02Z", "message": ":memo: added link to OSS-Fuzz project repository"}, {"date": "2018-01-28T19:44:45Z", "message": ":memo: added more functions to overview"}, {"date": "2018-01-28T16:55:40Z", "message": ":hammer: excluded code from coverage"}, {"date": "2018-01-28T14:36:56Z", "message": ":hammer: moved class json_pointer into separate file #920"}, {"date": "2018-01-28T13:36:17Z", "message": ":memo: documented JSON Merge Patch (RFC 7386)"}, {"date": "2018-01-28T13:13:02Z", "message": ":hammer: clean up"}, {"date": "2018-01-28T12:15:03Z", "message": ":hammer: split \"parsing\" directory to \"input\" and \"output\""}, {"date": "2018-01-27T17:47:32Z", "message": ":white_check_mark: added roundtrip tests for UBJSON"}, {"date": "2018-01-27T17:38:11Z", "message": ":white_check_mark: added fuzzer for UBJSON input"}, {"date": "2018-01-27T17:37:55Z", "message": ":white_check_mark: added roundtrip tests for UBJSON"}, {"date": "2018-01-27T16:43:44Z", "message": ":memo: cleanup after #936"}, {"date": "2018-01-23T17:00:12Z", "message": ":construction_worker: added task to check amalgamation #906\n\n- Builds and runs test cases from individual sources rather than from amalgamation.\n- Checks whether amalgamation would create the same single-header file as checked in."}, {"date": "2018-01-23T15:33:10Z", "message": "Merge branch 'develop' of https://github.com/nlohmann/json into develop"}, {"date": "2018-01-23T15:33:08Z", "message": ":fire: deprecated iterator_wrapper #874\n\nAlso fixed some warnings from GCC."}, {"date": "2018-01-22T22:23:17Z", "message": ":memo: updated documentation for UBJSON functions"}, {"date": "2018-01-21T14:55:35Z", "message": ":hammer: cleanup after #915"}, {"date": "2018-01-21T13:13:42Z", "message": ":memo: updated README"}, {"date": "2018-01-21T13:04:29Z", "message": "Merge branch 'feature/ubjson' into develop"}, {"date": "2018-01-21T12:55:52Z", "message": "Merge branch 'feature/strings' into develop"}, {"date": "2018-01-18T21:00:32Z", "message": ":heavy_plus_sign: using Google Benchmark #921"}, {"date": "2018-01-18T20:57:21Z", "message": ":heavy_plus_sign: using Google Benchmark #921"}, {"date": "2018-01-16T19:42:00Z", "message": ":recycle: re-used existing UTF-8 decoder to simplfy string serialization"}, {"date": "2018-01-16T19:41:04Z", "message": ":hammer: cleanup + some noexcept"}, {"date": "2018-01-16T19:40:24Z", "message": ":hammer: cleanup"}, {"date": "2018-01-15T12:21:33Z", "message": ":hammer: cleanup"}, {"date": "2018-01-14T21:26:20Z", "message": ":hammer: clean up"}, {"date": "2018-01-14T19:07:38Z", "message": ":white_check_mark: improved test coverage"}, {"date": "2018-01-14T16:22:42Z", "message": ":hammer: removed failing amalgamation test"}, {"date": "2018-01-14T16:22:06Z", "message": ":white_check_mark: improved test coverage"}, {"date": "2018-01-14T12:58:06Z", "message": "Merge branch 'develop' into feature/ubjson"}, {"date": "2018-01-14T12:08:28Z", "message": ":memo: overworked documentation wrt. amalgamation #906"}, {"date": "2018-01-14T09:41:59Z", "message": ":memo: it's 2018"}, {"date": "2018-01-14T09:34:43Z", "message": ":recycle: adjusted code to split headers"}, {"date": "2018-01-14T09:28:09Z", "message": "Merge branch 'develop' into feature/rfc7396"}, {"date": "2018-01-14T09:27:30Z", "message": ":recycle: refactored code to split headers"}, {"date": "2018-01-14T09:10:56Z", "message": "Merge branch 'develop' into feature/ubjson"}, {"date": "2018-01-14T09:10:23Z", "message": ":construction: added check whether code is amalgamated"}, {"date": "2018-01-13T10:15:23Z", "message": ":rotating_light: removed linter warnings for Python code"}, {"date": "2018-01-13T09:59:49Z", "message": ":heavy_plus_sign: added amalgamate Python script"}, {"date": "2018-01-12T08:23:33Z", "message": ":memo: documentation"}, {"date": "2018-01-10T22:13:48Z", "message": ":construction: added size benchmark for binary formats"}, {"date": "2018-01-10T21:47:07Z", "message": ":white_check_mark: added more tests"}, {"date": "2018-01-10T15:14:43Z", "message": ":hammer: optimized input format"}, {"date": "2018-01-10T10:22:19Z", "message": ":hammer: optimized output format"}, {"date": "2018-01-10T09:18:31Z", "message": ":hammer: some clean up"}, {"date": "2018-01-09T22:15:06Z", "message": ":heavy_minus_sign: :heavy_plus_sign: replaces amalgamation tool\n\nThe tool used before created a lot of duplicates inside the generated amalgamation. The new tool is a single Python file which seems to do the same job."}, {"date": "2018-01-09T17:30:02Z", "message": ":recycle: reorganized code"}, {"date": "2018-01-08T20:37:51Z", "message": ":bug: fixed copy-paste error"}, {"date": "2018-01-08T20:26:41Z", "message": ":construction: debug"}, {"date": "2018-01-08T20:16:20Z", "message": ":construction: debug"}, {"date": "2018-01-08T19:49:02Z", "message": ":construction: another try"}, {"date": "2018-01-08T18:48:18Z", "message": ":construction: working on AppVeyor's errors"}, {"date": "2018-01-08T17:54:17Z", "message": ":construction: further UBJSON"}, {"date": "2018-01-07T21:09:12Z", "message": ":construction: started UBJSON implementation"}, {"date": "2018-01-05T22:26:22Z", "message": ":white_check_mark: added UTF-8 decoder capability and stress test\n\nAs described in http://www.cl.cam.ac.uk/~mgk25/ucs/examples/UTF-8-test.txt; Markus Kuhn <http://www.cl.cam.ac.uk/~mgk25/> - 2015-08-28 - CC BY 4.0"}, {"date": "2018-01-05T17:34:10Z", "message": "added items() function #874"}, {"date": "2018-01-05T17:33:42Z", "message": ":memo: fixed Doxygen warnings\n\nApparently, using \"\\n\" inside an alias is an error now, but \"^^\" basically means the same."}, {"date": "2018-02-28T21:40:48Z", "message": ":green_heart: fixed test case"}, {"date": "2018-02-28T18:59:54Z", "message": ":rotating_light: fixed a linter warning"}, {"date": "2018-02-26T22:39:23Z", "message": ":hammer: added a SAX-DOM-Parser"}, {"date": "2018-02-26T19:08:12Z", "message": ":recycle: refactored SAX parser"}, {"date": "2018-02-26T19:07:52Z", "message": "Merge branch 'develop' into feature/sax2"}, {"date": "2018-02-26T16:37:24Z", "message": ":memo: overworked README"}, {"date": "2018-02-25T17:35:16Z", "message": ":ok_hand: fixed some compiler warnings"}, {"date": "2018-02-25T16:10:30Z", "message": ":hammer: removed a logic error and improved coverage"}, {"date": "2018-02-25T13:21:30Z", "message": ":white_check_mark: added more tests for SAX parsing"}, {"date": "2018-02-25T09:44:47Z", "message": ":hammer: fixed test cases to be more robust"}, {"date": "2018-02-24T17:04:07Z", "message": ":sparkles: added a SAX parser #971"}, {"date": "2018-02-13T18:36:35Z", "message": "Merge branch 'release/3.1.1' into develop"}, {"date": "2018-02-13T14:59:32Z", "message": ":bookmark: set version to 3.1.1"}, {"date": "2018-02-12T21:59:36Z", "message": ":bookmark: set version to 3.1.1"}, {"date": "2018-02-12T19:46:14Z", "message": ":lipstick: fixed indentation"}, {"date": "2018-02-11T15:50:01Z", "message": ":hammer: overworked release target"}, {"date": "2018-02-11T13:46:15Z", "message": ":hammer: enforce using Python 2 for the wandbox script"}, {"date": "2018-02-10T13:46:39Z", "message": ":hammer: overworked Makefile"}, {"date": "2018-02-09T22:37:20Z", "message": ":memo: updated documentation wrt. objects #963"}, {"date": "2018-02-09T22:32:37Z", "message": "Merge branch 'develop' of https://github.com/nlohmann/json into develop"}, {"date": "2018-02-09T22:32:28Z", "message": ":memo: cleanup after #954"}, {"date": "2018-02-09T22:01:56Z", "message": "Merge branch 'feature/coverage_multi' into develop"}, {"date": "2018-02-09T21:40:52Z", "message": ":rewind: back to the original version"}, {"date": "2018-02-09T21:27:08Z", "message": ":hammer: another try"}, {"date": "2018-02-09T21:18:51Z", "message": ":hammer: another try"}, {"date": "2018-02-09T21:11:05Z", "message": ":hammer: more trying"}, {"date": "2018-02-09T20:54:32Z", "message": ":hammer: added quotes around parameters"}, {"date": "2018-02-09T20:30:15Z", "message": ":hammer: working on #953"}, {"date": "2018-02-09T17:32:12Z", "message": ":checkered_flag: removing test case that fails on MSVC #962"}, {"date": "2018-02-06T21:38:53Z", "message": ":bug: fix for #962\n\nAdded out_of_range exception for UBJSON containers with sizes that exceed the target container's max_size."}, {"date": "2018-02-06T19:43:03Z", "message": ":bug: fixing CBOR's indefinity length strings #961\n\nBeside the fix discussed in #961, we also had to re-adjust a test case. It seems that it was failing before, and I \"fixed\" it to work with the broken implementation..."}, {"date": "2018-02-04T19:58:50Z", "message": ":hammer: fixed directory for lcov coverage"}, {"date": "2018-02-04T12:29:23Z", "message": ":rocket: added release target #956"}, {"date": "2018-02-02T06:56:30Z", "message": ":construction_worker: fixed coveralls"}, {"date": "2018-02-02T06:31:57Z", "message": ":construction_worker: fixed coveralls"}, {"date": "2018-02-01T23:20:04Z", "message": ":construction_worker: re-added homebrew tests"}, {"date": "2018-02-01T23:06:17Z", "message": "Merge branch 'release/3.1.0' into develop"}, {"date": "2018-02-01T21:34:14Z", "message": ":construction_worker: fixed travis file"}, {"date": "2018-02-01T21:26:26Z", "message": ":hammer: fixed benchmark compilation"}, {"date": "2018-02-01T21:20:26Z", "message": ":bookmark: set version to 3.1.0\n\n- updated documentation wrt. new repository layout\n- temporarily switched off Homebrew --HEAD building (can only be switched on after release)\n- set copyright date to 2018"}, {"date": "2018-03-29T22:38:18Z", "message": ":hammer: cleanup"}, {"date": "2018-03-29T16:45:43Z", "message": ":hammer: using a vector<bool> for the parser hierarchy"}, {"date": "2018-03-29T15:19:21Z", "message": ":green_heart: fixed Valgrind options #1030"}, {"date": "2018-03-29T15:07:55Z", "message": ":memo: fixed example for operator> #1029"}, {"date": "2018-03-28T21:39:39Z", "message": ":hammer: realized callback parser wirh SAX interface #971"}, {"date": "2018-03-28T17:37:21Z", "message": ":hammer: improved code #1021"}, {"date": "2018-03-28T16:20:55Z", "message": ":ambulance: fix for #1021"}, {"date": "2018-03-21T19:12:06Z", "message": ":hammer: changed SAX interface"}, {"date": "2018-03-20T22:40:01Z", "message": ":white_check_mark: improved test coverage"}, {"date": "2018-03-20T21:39:08Z", "message": ":white_check_mark: improved coverage"}, {"date": "2018-03-20T19:04:11Z", "message": ":white_check_mark: more tests"}, {"date": "2018-03-20T18:22:18Z", "message": ":memo: updated documentation"}, {"date": "2018-03-20T17:49:10Z", "message": ":white_check_mark: improved test coverage"}, {"date": "2018-03-19T21:48:13Z", "message": ":sparkles: implemented non-throwing binary reader"}, {"date": "2018-03-18T22:00:45Z", "message": ":recycle: proper use of SAX parser for binary formats"}, {"date": "2018-03-18T15:07:21Z", "message": ":hammer: some refactoring"}, {"date": "2018-03-18T14:13:53Z", "message": ":construction: started a SAX/DOM/callback parser"}, {"date": "2018-03-17T22:31:18Z", "message": ":hammer: cleanup"}, {"date": "2018-03-17T18:15:59Z", "message": ":white_check_mark: improved test coverage"}, {"date": "2018-03-17T13:46:50Z", "message": ":recycle: implemented a non-recursive parser"}, {"date": "2018-03-14T21:02:19Z", "message": "Merge branch 'develop' into feature/sax2"}, {"date": "2018-03-14T20:48:03Z", "message": "Merge branch 'release/3.1.2' into develop"}, {"date": "2018-03-14T20:32:03Z", "message": ":bookmark: set version to 3.1.2"}, {"date": "2018-03-14T20:09:27Z", "message": ":bookmark: set version to 3.1.2"}, {"date": "2018-03-14T16:32:48Z", "message": ":rewind: oops"}, {"date": "2018-03-14T16:21:31Z", "message": ":checkered_flag: moved /Wall to CMake"}, {"date": "2018-03-14T06:38:22Z", "message": ":checkered_flag: experimenting with /Wall"}, {"date": "2018-03-14T06:32:28Z", "message": ":checkered_flag: fixed an MSVC warning"}, {"date": "2018-03-14T06:18:42Z", "message": ":hammer: fixed compilation error"}, {"date": "2018-03-13T22:58:17Z", "message": "Merge branch 'develop' into feature/sax2"}, {"date": "2018-03-12T18:15:11Z", "message": ":recycle: adjusting lexer/parser in symmetry to #1006"}, {"date": "2018-03-12T17:44:19Z", "message": ":memo: thanks for #1006"}, {"date": "2018-03-11T21:47:25Z", "message": ":hammer: cleaner exception interface"}, {"date": "2018-03-11T17:47:38Z", "message": ":recycle: refactored binary readers to use a SAX parser"}, {"date": "2018-03-10T10:24:00Z", "message": ":green_heart: improved test coverage"}, {"date": "2018-03-10T10:07:36Z", "message": "Merge branch 'develop' into feature/sax2"}, {"date": "2018-03-10T10:02:58Z", "message": ":ok_hand: made changes proposed in #1001"}, {"date": "2018-03-09T20:56:30Z", "message": "Merge branch 'develop' into feature/sax2"}, {"date": "2018-03-09T20:31:46Z", "message": ":memo: cleanup after #1001"}, {"date": "2018-03-08T16:11:15Z", "message": ":ambulance: hopefully fixed the memory leak"}, {"date": "2018-03-08T06:39:37Z", "message": "Merge branch 'develop' into feature/sax2"}, {"date": "2018-03-08T06:39:21Z", "message": ":fire: removing failing test (work on this in branch \"leak\")"}, {"date": "2018-03-08T06:36:56Z", "message": ":hammer: trying to fix the leak\n\nPart 1: properly use forwarding"}, {"date": "2018-03-07T21:51:22Z", "message": ":ok_hand: fixed some more warnings"}, {"date": "2018-03-07T21:40:48Z", "message": ":fire: replaced acceptor with SAX parser"}, {"date": "2018-03-07T21:26:01Z", "message": "Merge branch 'develop' into feature/sax2"}, {"date": "2018-03-07T21:25:25Z", "message": ":green_heart: added another test case"}, {"date": "2018-03-07T21:01:44Z", "message": ":recycle: refined SFINAE to fix some warnings"}, {"date": "2018-03-06T19:13:31Z", "message": ":green_heart: added regression tests for #972 and #977"}, {"date": "2018-03-06T17:17:07Z", "message": ":hammer: using the SAX-DOM parser"}, {"date": "2018-03-06T06:19:05Z", "message": ":hammer: simplified SAX-DOM parser"}, {"date": "2018-03-05T20:06:00Z", "message": ":hammer: added SAX-DOM-Parser"}, {"date": "2018-03-05T15:46:35Z", "message": ":hammer: added error messages to SAX interface"}, {"date": "2018-03-05T15:16:43Z", "message": "Merge branch 'develop' into feature/sax2"}, {"date": "2018-04-29T15:29:57Z", "message": "Merge branch 'feature/wstring' into develop"}, {"date": "2018-04-29T11:16:12Z", "message": "Merge branch 'develop' into feature/wstring"}, {"date": "2018-04-22T13:41:42Z", "message": ":fire: removed commented-out test cases #1060"}, {"date": "2018-04-10T16:13:37Z", "message": ":memo: updated THANKS list"}, {"date": "2018-04-10T06:39:28Z", "message": ":construction_worker: added Xcode 9.3 builder\n\nSee https://blog.travis-ci.com/2018-04-09-say-bonjour-to-xcode-93-and-macos-high-sierra."}, {"date": "2018-04-10T06:29:07Z", "message": ":hankey: first try on #1045"}, {"date": "2018-04-08T09:36:58Z", "message": "Merge branch 'develop' into feature/wstring"}, {"date": "2018-04-08T09:36:44Z", "message": "Merge branch 'develop' into feature/sax2"}, {"date": "2018-04-08T07:31:59Z", "message": "Merge branch 'develop' into feature/sax2"}, {"date": "2018-04-08T07:28:37Z", "message": "Merge branch 'feature/issue1021' into develop"}, {"date": "2018-04-08T07:21:43Z", "message": "Merge branch 'develop' into feature/issue1021"}, {"date": "2018-04-02T20:38:44Z", "message": ":ambulance: fixed commit 1e08654"}, {"date": "2018-04-02T20:25:17Z", "message": ":hammer: cleanup"}, {"date": "2018-04-02T19:10:48Z", "message": ":hammer: removing unget_character() function from input adapters #834"}, {"date": "2018-04-02T13:38:49Z", "message": ":white_check_mark: improved test coverage #1031"}, {"date": "2018-04-02T11:01:56Z", "message": ":ok_hand: fixed compiler warnings #1031"}, {"date": "2018-04-02T10:27:07Z", "message": ":hammer: trying to make tests run with MSVC #1031"}, {"date": "2018-04-02T09:34:36Z", "message": ":hammer: trying to make tests run with MSVC #1031"}, {"date": "2018-04-01T17:12:36Z", "message": ":construction: added input adapter for wide strings #1031"}, {"date": "2018-05-28T16:14:44Z", "message": ":memo: documentation to avoid future issues like #1108"}, {"date": "2018-05-28T15:57:46Z", "message": "Merge branch 'develop' of https://github.com/nlohmann/json into develop"}, {"date": "2018-05-28T15:57:22Z", "message": ":ambulance: adjusted Fuzzer to new parser\n\nout_of_range exceptions where unexpected before - the parser used to crash in these situations..."}, {"date": "2018-05-27T20:26:00Z", "message": "Merge branch 'feature/key_ref' into develop (fixes #1098)"}, {"date": "2018-05-27T16:12:59Z", "message": "Merge branch 'feature/sax2' into develop #971"}, {"date": "2018-05-27T16:07:53Z", "message": ":memo: added documentation"}, {"date": "2018-05-27T12:26:13Z", "message": "Merge branch 'develop' into feature/sax2"}, {"date": "2018-05-27T10:04:22Z", "message": ":hammer: only calculate array index string when needed #1098"}, {"date": "2018-05-26T12:10:13Z", "message": ":ok_hand: mitigating cppcheck bug #1101"}, {"date": "2018-05-26T11:26:40Z", "message": ":zap: keys are now returned as const reference #1098"}, {"date": "2018-05-17T14:50:37Z", "message": ":white_check_mark: adjusted test cases"}, {"date": "2018-05-17T14:36:43Z", "message": "Merge branch 'testsuite' into feature/sax2"}, {"date": "2018-05-17T08:10:01Z", "message": ":white_check_mark: added more tests from recent nst's JSONTestSuite"}, {"date": "2018-05-06T17:00:49Z", "message": ":ambulance: fixed error in callback logic"}, {"date": "2018-05-06T12:05:29Z", "message": ":hammer: removed unget function for wstring parsers"}, {"date": "2018-05-06T11:29:23Z", "message": "Merge branch 'develop' into feature/sax2"}, {"date": "2018-05-03T16:35:21Z", "message": ":fire: removed old issue template"}, {"date": "2018-05-03T16:11:42Z", "message": ":memo: added public key used for commits and releases"}, {"date": "2018-05-03T15:41:45Z", "message": ":page_facing_up: added SPDX-License-Identifier"}, {"date": "2018-06-28T19:32:32Z", "message": ":hammer: cleanup after #1134"}, {"date": "2018-06-26T20:47:40Z", "message": ":hammer: added macro to disable compiler check #1128"}, {"date": "2018-06-24T16:03:59Z", "message": ":memo: mentioned MinGW in README"}, {"date": "2018-06-24T15:40:16Z", "message": ":construction_worker: choosing correct image"}, {"date": "2018-06-24T15:10:13Z", "message": ":construction_worker: using Ninja to speed up build"}, {"date": "2018-06-24T14:57:53Z", "message": ":hammer: fixed escaping for MinGW"}, {"date": "2018-06-24T14:40:47Z", "message": ":construction_worker: trying a more recent compiler"}, {"date": "2018-06-24T14:37:02Z", "message": ":construction_worker: forgot old PATH"}, {"date": "2018-06-24T14:35:16Z", "message": ":construction_worker: using help from https://stackoverflow.com/a/48509334/266378"}, {"date": "2018-06-24T14:29:03Z", "message": ":construction_worker: set build type"}, {"date": "2018-06-24T14:18:44Z", "message": ":construction_worker: forgot quotes"}, {"date": "2018-06-24T14:17:06Z", "message": ":construction_worker: experimenting with AppVeyor and MinGW"}, {"date": "2018-06-23T15:27:40Z", "message": ":lipstick: fixed indentation"}, {"date": "2018-06-23T15:05:04Z", "message": ":hammer: small refactoring to improve branch coverage\n\nThe branch coverage reported by lcov is weird. The code before and after has the same Godbolt assembler, but the code with the lambda has a better branch coverage."}, {"date": "2018-06-23T09:12:32Z", "message": ":construction_worker: tryping different platforms for AppVeyor"}, {"date": "2018-06-23T09:00:42Z", "message": ":rotating_light: fixed more compiler warnings"}, {"date": "2018-06-23T08:47:55Z", "message": ":rotating_light: fixed more compiler warnings"}, {"date": "2018-06-23T08:28:04Z", "message": ":rotating_light: removed compiler warnings"}, {"date": "2018-06-22T20:35:48Z", "message": ":memo: fix for #1052 #1139"}, {"date": "2018-06-22T20:34:42Z", "message": ":memo: documentation fix"}, {"date": "2018-06-18T20:03:46Z", "message": ":lipstick: cleanup"}, {"date": "2018-07-19T15:31:50Z", "message": ":checkered_flag: fix for #1168"}, {"date": "2018-07-05T19:18:46Z", "message": ":memo: added note about CocoaPods #1148"}], "tushar27192@gmail.com": [{"date": "2017-02-12T14:10:40Z", "message": ":construction_worker: Add cmake logic to Travis config\n- get CMake for XCode 8.1 image"}, {"date": "2017-02-12T11:46:54Z", "message": ":zap: cmake compile time reduce using cotire\n\n- Add prefix header\n  - Include catch.hpp\n  - Include json.hpp\n    - Replace private with public for all json_unit files\n- Move `unit.cpp` to an object library\n- cotire issue: strip whitespace from CMAKE_INCLUDE_SYSTEM_FLAG_CXX"}], "lukas.barth@kit.edu": [{"date": "2017-03-30T14:14:02Z", "message": "Also change the re2c file"}, {"date": "2017-03-30T14:10:03Z", "message": "Pop for every push"}], "ted@lyncon.se": [{"date": "2017-03-24T13:56:48Z", "message": "UTF8 encoding enhancement"}, {"date": "2017-03-11T12:56:38Z", "message": "Fix -Weffc++ warnings (GNU 6.3.1)"}, {"date": "2017-03-11T12:56:38Z", "message": "Fix -Weffc++ warnings (GNU 6.3.1)"}, {"date": "2017-03-11T12:56:38Z", "message": "Fix -Weffc++ warnings (GNU 6.3.1)"}], "berkus@users.noreply.github.com": [{"date": "2017-03-23T12:50:41Z", "message": "Fix typo"}], "krzysztof.wos@gmail.com": [{"date": "2017-03-20T04:07:01Z", "message": "Exit with an error if re2c is not available\n\nInstead of overwriting src/json.hpp with an empty file"}, {"date": "2017-03-20T03:42:44Z", "message": "Make exception base class visible in basic_json"}], "alex@weej.com": [{"date": "2017-03-16T18:24:41Z", "message": ":art: Namespace `uint8_t` from the C++ stdlib"}], "theo.delrieu@tanker.io": [{"date": "2017-03-16T12:43:53Z", "message": "add to_json method for C arrays\n\n    If the array can be converted to basic_json::string_t, the overload\nin this commit is not chosen."}, {"date": "2017-06-19T10:03:38Z", "message": "add from_json support for std::array"}, {"date": "2017-06-13T09:11:29Z", "message": "remove std::pair support"}, {"date": "2017-06-06T12:18:32Z", "message": "fix #600\n\nInstead of calling CompatibleObjectType iterator-range constructor,\nfirst convert json::value_type to CompatibleObjectType::value_type"}, {"date": "2017-06-06T11:44:35Z", "message": "add std::pair<CompatibleStringType, T> support"}, {"date": "2017-12-05T10:27:03Z", "message": "cmake: use BUILD_INTERFACE/INSTALL_INTERFACE in target_include_directories"}, {"date": "2017-12-05T09:52:55Z", "message": "to/from_json: add a MSVC-specific static_assert to force a stacktrace"}, {"date": "2018-01-17T11:17:38Z", "message": "fix sfinae on basic_json UDT constructor\n\nAvoid compiler errors when performing SFINAE checks on basic_json\nand incomplete types."}, {"date": "2018-02-27T11:11:04Z", "message": "support construction from other basic_json types\n\nBefore this patch, `basic_json` types with different template arguments\nwere treated as `CompatibleArrayType`. Which sometimes leads to recursive\ncalls and stack overflows.\n\nThis patch adds a constructor and a `get` overload to deal with\ndifferent `basic_json` types."}, {"date": "2018-02-27T10:09:53Z", "message": "missing CHECK_NOTHROW in unit-udt"}, {"date": "2018-02-12T09:47:17Z", "message": "Fix constraints on from_json(CompatibleArrayType)\n\nFixes #924"}, {"date": "2018-02-10T20:26:15Z", "message": "Make the coveralls job use the multiple header version"}, {"date": "2018-01-29T10:21:11Z", "message": "fix cmake install directory (for real this time)\n\n* Rename 'develop' folder to 'include/nlohmann'\n* Rename 'src' folder to 'single_include/nlohmann'\n* Use <nlohmann/*> headers in sources and tests\n* Change amalgamate config file"}, {"date": "2018-05-14T09:51:37Z", "message": "Provide a from_json overload for std::map\n\nThis overload is chosen only when BasicJsonType::string_t\nis not constructible from std::map::key_type.\n\nCurrently, converting a map to json treats it as an array of pairs.\n\nfixes #1079"}, {"date": "2018-06-18T08:53:51Z", "message": "run make amalgamate"}, {"date": "2018-06-18T08:53:30Z", "message": "from_json: add overload for std::unordered_map\n\nFixes #1133"}, {"date": "2018-06-18T08:52:11Z", "message": "from_json: add missing template arguments for std::map"}], "lee0906@hotmail.com": [{"date": "2017-05-30T14:50:40Z", "message": "Add test cases for iterator to const iterator assignment"}, {"date": "2017-05-30T14:50:14Z", "message": "Redefine the converting assignment in iterator"}, {"date": "2017-05-30T14:31:16Z", "message": "Add test cases for iterator to const iterator conversion"}, {"date": "2017-05-30T13:37:24Z", "message": "Fix indentation"}, {"date": "2017-05-30T10:57:22Z", "message": "Remove the iter_impl<const basic_json> copy constructor and copy assignment"}, {"date": "2017-05-30T10:27:05Z", "message": "Add struct keyword in front of internal_iterator"}, {"date": "2017-05-30T10:23:25Z", "message": "Add converting constructors for iterator"}, {"date": "2017-05-30T09:44:55Z", "message": "Change iterator category to random access"}, {"date": "2017-05-29T13:56:21Z", "message": "Use static cast in the implementation of the operators of reverse iterator"}, {"date": "2017-05-29T12:39:27Z", "message": "Add missing test cases for n + it arithmetic in iterators"}, {"date": "2017-05-29T12:19:10Z", "message": "Comment out the exception message check in operator[] of reverse iterator"}, {"date": "2017-05-29T10:02:58Z", "message": "Fix the indentation from the latest commit"}, {"date": "2017-05-29T09:45:34Z", "message": "Change the definition of the operator override of reverse iterator to using the result of the base class directly"}, {"date": "2017-05-29T09:43:45Z", "message": "Fix some more reverse iterator arithmetic test codes"}, {"date": "2017-05-29T08:52:53Z", "message": "Fix the arithmetic mistakes in reverse iterator"}, {"date": "2017-05-27T03:44:14Z", "message": "Override n + iterator operator in the iterator"}, {"date": "2017-06-09T10:47:42Z", "message": "Merge branch 'develop' into iterator_arithmetic"}, {"date": "2017-06-07T08:01:46Z", "message": "Merge branch 'develop' into iterator_arithmetic"}, {"date": "2017-06-07T08:01:01Z", "message": "Revert a change in reverse iterator to pass the test cases"}, {"date": "2017-06-05T11:59:17Z", "message": "Revert \"Change iterator category to random access\"\n\nThis reverts commit c4ab8f827e45cd6e6f1e80eb77ab850fa228e433."}, {"date": "2017-06-05T10:24:21Z", "message": "Merge branch 'develop' into iterator_arithmetic"}, {"date": "2017-06-05T10:24:08Z", "message": "Merge branch 'develop' into issue550"}], "guorongfei@cvte.com": [{"date": "2017-05-13T23:50:26Z", "message": "remove the redundant @ref command"}, {"date": "2017-05-13T15:13:04Z", "message": "fix doxygen error of basic_json::get()"}], "jaysistar@yahoo.com": [{"date": "2017-05-11T17:22:47Z", "message": "Making comparison operators const."}, {"date": "2017-05-11T14:50:59Z", "message": "Adding equal and not equal operators to proxys."}, {"date": "2017-05-10T17:53:27Z", "message": "Fixing assignement for iterator wrapper second, and adding unit test"}, {"date": "2017-05-10T13:20:52Z", "message": "Adding first and second properties to iteration_proxy_internal"}, {"date": "2017-05-09T02:04:02Z", "message": "Missed one."}, {"date": "2017-05-09T02:01:55Z", "message": "Reducing chatter about Meson."}, {"date": "2017-05-08T13:35:00Z", "message": "Adding support for Meson."}], "chocobo1@users.noreply.github.com": [{"date": "2017-06-21T13:41:20Z", "message": "fix typo"}, {"date": "2017-06-21T08:17:10Z", "message": "Fix MSVC warning C4819\n\nReplace unicode whitespaces by ASCII whitespace 0x20"}], "steffenbrem@gmail.com": [{"date": "2017-06-17T20:01:18Z", "message": "Add parentheses around std::min so it bypasses the macro introduced by windows.h."}], "daniel@duerrenbuehl.de": [{"date": "2017-07-31T21:20:37Z", "message": "DOC: add sort mentioning about support in hunter"}, {"date": "2017-07-31T07:49:26Z", "message": "CONFIG: pin cmake to enable only C++"}, {"date": "2017-07-29T09:59:09Z", "message": "REFACTOR: rewrite CMakeLists.txt for better inlcude and reuse\n\nThe rewrite uses more cmake build-in automatisms and build-in generates\nvariables to allow better generic reuse.\n* cmake  files are installed to\n``` <install_prefix>/lib/cmake/nlohmann_json/ ``` for best support on\nmost systems\n* include path is set to ``` include ```  for usage as ``` #include\n<nlohmann/json.hpp> ```"}], "effolkronium@gmail.com": [{"date": "2017-07-27T14:50:24Z", "message": "enable_testing only if JSON_BuildTests is ON"}], "himikof@gmail.com": [{"date": "2017-07-25T09:17:32Z", "message": "Move from rvalues eagerly to work around MSVC problem\n\nOn MSVC compiler, temporaries that are constructed during a\nlist initialization, are sometimes destroyed even before calling\nthe initializing constructor, instead of at the end of the\ncontaining full-expression. This is clearly non-conforming to\n[class.temporary].\nAs the impact of this bug is silently producing incorrect\nJSON values, move eagerly from rvalues to be safe.\n\nSee https://stackoverflow.com/questions/24586411"}, {"date": "2017-07-24T09:29:06Z", "message": "Make detail::json_ref do less work by deferring moves/copies"}, {"date": "2017-07-23T22:02:03Z", "message": "Fix an actually invalid test\n\nC++ overload resolution/list initialization rules are hard."}, {"date": "2017-07-23T20:59:34Z", "message": "Update tests while fixing possible UB\n\nstd::initializer_list does not own the temporaries created in\nits initialization. Therefore, storing it in an independent\nstack variable is unsafe."}, {"date": "2017-07-23T20:57:17Z", "message": "Support moving from rvalues in an std::initializer_list\n\nThis commit works around an issue in std::initializer_list design.\nBy using a detail::json_ref proxy with a mutable value inside,\nrvalue-ness of an input to list initializer is remembered and\nused later to move from the proxy instead of copying."}, {"date": "2017-07-23T20:50:59Z", "message": "Optimize json construction from rvalue string_t/array_t/object_t"}, {"date": "2017-07-23T20:47:15Z", "message": "Add some tests for std::move from std::initializer_list"}], "ryanjmulder@gmail.com": [{"date": "2017-07-11T18:18:02Z", "message": "restore necessary comman in documentation of dump"}, {"date": "2017-07-11T17:59:07Z", "message": "update comment on dump to not indicate that ensure_ascii is true by default"}, {"date": "2017-07-11T17:41:56Z", "message": "add ensure_ascii parameter to dump. #330"}], "olegendo@gcc.gnu.org": [{"date": "2017-07-11T13:57:49Z", "message": "Rename BuildTests to JSON_BuildTests\n\nThis avoids potential conflicts with other libraries when the library is\nbuilt from source and included in a bigger cmake build."}, {"date": "2017-07-09T06:20:28Z", "message": "fix typo"}, {"date": "2017-07-09T06:19:08Z", "message": "use std::make_shared"}, {"date": "2017-07-09T06:04:49Z", "message": "include <iosfwd> instead of <iostream>\n\navoid bloat caused by <iostream> and std::cout and friends in apps where\niostream are not used."}], "os@traits.de": [{"date": "2017-08-10T07:05:00Z", "message": "Update json.hpp"}, {"date": "2017-08-07T12:23:48Z", "message": "Digraph warning\n\nThe original version can trigger a digraph-related warning in VS2015. Is this namespace construct a typo or something deliberate?"}], "webprodpp@users.noreply.github.com": [{"date": "2017-08-09T13:13:43Z", "message": "Update json.hpp\n\nmistake"}], "daixtrose@users.noreply.github.com": [{"date": "2017-08-09T09:56:48Z", "message": "remove duplicate word\n\ns/to to/to/"}], "kyle.b.thompson@nasa.gov": [{"date": "2017-08-08T22:43:03Z", "message": "To fix compilation issue for intel OSX compiler\n\no To prevent the compilation issue on OSX with the intel compiler suite.  The\nerror was found with icpc version 15.0.3.187 where the \"__clang_version__\" was\nnot defined correctly, while \"__clang__\" was."}], "d1021976@yandex.ru": [{"date": "2017-08-05T07:43:08Z", "message": "massage -> message"}], "greg@hurrell.net": [{"date": "2017-08-01T15:56:28Z", "message": "Fix \"not constraint\" grammar in docs"}], "gregmarr@users.noreply.github.com": [{"date": "2017-09-26T15:39:38Z", "message": "Add info for the vcpkg package."}], "itja@users.noreply.github.com": [{"date": "2017-10-31T15:31:14Z", "message": "Typos README\n\nHey, thanks for this great library which I've used in many occasions now. I know it's not much, but I wanted to contribute at least a tiny bit back to you by this PR :-) Keep up the good work!"}], "jamie.d.seward@gmail.com": [{"date": "2017-10-24T07:14:25Z", "message": "Add missing spaces"}, {"date": "2017-10-24T07:06:22Z", "message": "Remove extra spaces"}, {"date": "2017-10-24T07:01:56Z", "message": "Remove old non-perfect forwarding find and count"}, {"date": "2017-10-24T06:50:06Z", "message": "Remove c++17 support flag in cmake\n\nAlready covered by AppVeyor"}, {"date": "2017-10-24T06:45:39Z", "message": "Remove tabs for spaces"}, {"date": "2017-10-23T07:43:26Z", "message": "Remove JSON_HAS_STRING_VIEW\n\nInstead implement @gregmarr's PR comments that perfect forwarding should be used. Also cleaned up cpp language standard detection."}, {"date": "2017-10-21T23:36:05Z", "message": "Use consistent logic to determine if string_view exists"}, {"date": "2017-10-21T23:29:37Z", "message": "Fix for _HAS_CXX17 == 0\n\nCopied from solution to https://github.com/nlohmann/json/issues/464"}, {"date": "2017-10-21T22:20:13Z", "message": "Add string_view support\n\nThis avoids unnecessary string copies on often used\nfind()."}, {"date": "2017-10-18T05:53:35Z", "message": "Add comments and newline"}, {"date": "2017-10-17T06:23:55Z", "message": "Fix Visual Studio 2017 warnings"}, {"date": "2017-10-16T08:02:48Z", "message": "Disable warning C4389: '==': signed/unsigned mismatch\n\nLots of tests have this warning.\n\nAlso moved out of for loop, doesn't need to be done every loop."}, {"date": "2017-10-16T07:49:59Z", "message": "Fix whitespace"}, {"date": "2017-10-16T07:41:58Z", "message": "Fix warning C4706"}, {"date": "2017-10-16T07:21:38Z", "message": "Add missing \"u8\"\n\nThis causes test-udt to crash due to bad iterator"}, {"date": "2017-10-16T05:56:38Z", "message": "Add /W4 for MSVS"}], "sonulohani@gmail.com": [{"date": "2017-10-21T07:22:44Z", "message": "Error : 'identifier \"size_t\" is undefined' in linux"}], "perry@hardconsulting.com": [{"date": "2017-10-16T15:06:10Z", "message": "Consistently use std::char_traits int_type-->char conversion intrinsics"}, {"date": "2017-10-07T22:50:19Z", "message": "Simplify the json/src/benchmarks.cpp to allow more optimal code gen.\no For some unknown reason, the complexity of the benchmark platform\n  prevented some C++ compilers from generating optimal code, properly\n  reflective of the real performance in actual deployment.\no Added the json_benchmarks_simple target, which performs the same\n  suite of tests as json_benchmarks.\no Simplified the benchmark platform, and emit an \"Average\" TPS\n  (Transactions Per Second) value reflective of aggregate parse/output\n  performance."}, {"date": "2017-10-06T19:27:53Z", "message": "Remove outdated commentary about the value of eof(), retain input type\no We assume the same character int_type as the unerlying std::istream\no There are no assumptions on the value of eof(), other than that it\n  will not be a valid unsigned char value.\no To retain performance, we do not allow swapping out the underlying\n  std::streambuf during our use of the std::istream for parsing."}, {"date": "2017-10-06T14:53:31Z", "message": "Revert some unnecessary member initializer changes."}, {"date": "2017-10-06T14:37:49Z", "message": "Further simplify character type handling"}, {"date": "2017-10-05T22:37:03Z", "message": "Implement correct handling of std::streambuf int_type, eof()\no Make no assumptions about eof(), other than that it is somewhere\n  outside of the valid range of char_type."}, {"date": "2017-10-05T21:13:55Z", "message": "Accelerate access to underlying std::istream streambuf"}, {"date": "2017-10-04T22:01:10Z", "message": "Specify initializers for yytest, token_string using initializer-lists\no We can retain -Weffc++ and specify default initializers by using\n  initializer lists.  The risks are low (of additional non-conformat\n  compilers), because there is already one other such initialization\n  used in the code-base."}, {"date": "2017-10-04T18:31:10Z", "message": "Further performance improvements, and corrections in get_token_string\no An (-'ve valued, typically -1) EOF must never be allowed in\n  token_string, as it be converted to 255 -- a legitimate value.\no Comparing against a specific eof() (-1, typically) is more costly than\n  detecting +'ve/-'ve.  Since EOF is the only non-positive value allowed\n  we can use the simpler test.\no Removed unnecessary test for token_string size, as it is already\n  tested in the method, and must never occur in correct code; used an\n  assert instead."}, {"date": "2017-10-04T17:47:52Z", "message": "Rename get_string to move_string to imply side-effect"}, {"date": "2017-10-04T17:21:55Z", "message": "Corrected unnnecessary const restriction on returned std::string"}, {"date": "2017-10-04T15:40:32Z", "message": "Improve performance by constructing yytext as a std::string\no Return its contents when necessary.  In many cases, this avoids\n  construction of multiple copies of the yytext token.  Exceeds\n  performance of current develop branch."}, {"date": "2017-10-04T15:33:35Z", "message": "Remove unnnecessary NUL termination of yytext (as it may contain NULs)"}, {"date": "2017-10-03T21:38:38Z", "message": "Restore istream performance #764\no Use std::streambuf I/O instead of std::istream; does not maintain\n  (unused) istream flags.\no Further simplify get/unget handling.\no Restore original handling of NUL in input stream; ignored during\n  token_string escaping."}, {"date": "2017-10-03T15:49:39Z", "message": "Further simplify istream handling; use native unget"}, {"date": "2017-10-02T21:17:23Z", "message": "Test to confirm parsing of multiple JSON records in a istream #367"}, {"date": "2017-10-02T15:50:15Z", "message": "Simplify get_token_string, unnecessary buffering, handle Byte Order Mark"}], "22281318+eld00d@users.noreply.github.com": [{"date": "2017-10-15T00:06:38Z", "message": "Set GENERATE_TAGFILE in Doxyfile\n\nAllows documentation to be linked from other projects to https://nlohmann.github.io/json using Doxygen with the tag:\r\nTAGFILES = $(SOME_PATH)/nlohmann_json.tag=https://nlohmann.github.io/json"}], "m_moeller@live.de": [{"date": "2017-11-30T12:37:58Z", "message": "missing new line"}, {"date": "2017-11-30T12:26:45Z", "message": "moved natis to root dir"}, {"date": "2017-11-28T22:43:39Z", "message": "add compiler & cmake version check"}, {"date": "2017-11-26T09:31:33Z", "message": "add .natvis for MSVC debug view"}, {"date": "2017-11-26T09:29:51Z", "message": "fix targetname"}, {"date": "2017-12-20T16:54:45Z", "message": "includes CTest module resp. BUILD_TESTING option"}, {"date": "2018-05-31T14:36:16Z", "message": "added char cast\n\nshould fix the GCC unittest"}, {"date": "2018-05-31T13:32:21Z", "message": "typo"}, {"date": "2018-05-31T11:27:11Z", "message": "remove stringstream dependency"}], "jowr@users.noreply.github.com": [{"date": "2017-11-16T20:01:27Z", "message": "removed hunter badge"}, {"date": "2017-11-15T07:48:11Z", "message": "Updated hunter package links"}], "matthew.k.gumbel@intel.com": [{"date": "2017-12-04T23:42:08Z", "message": ":wrench: Fix up a few more effc++ items"}], "erenokka@gmail.com": [{"date": "2017-12-17T15:02:55Z", "message": "Fix MSVC warning C4819\n\nReplaces a U+00A0 character with regular space, and fixes a typo."}], "contact@bogemic.com": [{"date": "2017-12-07T08:28:28Z", "message": "iter_impl template conformance with C++17"}, {"date": "2017-12-06T09:24:50Z", "message": "fixed merge conflicts"}, {"date": "2017-12-05T11:27:08Z", "message": "fixed conformance with C++17, some members of allocator are depricated and should be used via allocator_traits"}, {"date": "2018-03-02T08:47:35Z", "message": "did make amalgamate"}, {"date": "2018-03-02T08:12:44Z", "message": "pvs_studio fix. misprinted condition"}], "kaido@myblossom.com": [{"date": "2018-01-28T22:42:13Z", "message": "Allow overriding THROW/CATCH/TRY macros with no-exceptions (redo) #938"}, {"date": "2018-02-01T07:01:01Z", "message": "Templatize std::string in binary_reader #941"}], "gavin.smith@coralbay.tv": [{"date": "2018-01-25T12:51:48Z", "message": "Removed compiler warning about unused variable 'kMinExp'."}, {"date": "2018-01-19T11:42:53Z", "message": "Updated README.md to explain how installation of json_fwd.hpp can be achieved as part of install step."}], "v.e.evard@gmail.com": [{"date": "2018-01-22T10:14:39Z", "message": "Fix a typo in README.md"}], "lt.morris.schaffer@googlemail.com": [{"date": "2018-01-15T20:26:03Z", "message": "Use max_digits10 in dump_float for float->text->float round-trip"}, {"date": "2018-01-15T20:24:59Z", "message": "Regenerate src/json.hpp"}, {"date": "2018-01-15T20:13:17Z", "message": "Add unit-tests for detail::to_chars"}, {"date": "2018-01-15T19:58:02Z", "message": "Use the Grisu2 algorithm for formatting 'float's and 'double's"}, {"date": "2018-01-15T19:45:51Z", "message": "Add an implementation of the Grisu2 algorithm for binary to decimal floating-point conversion\n\nThis is an attempt to fix #360. The algorithm produces\ndecimal representations which are guaranteed to roundtrip\nand in ~99.8% actually produces the shortest possible\nrepresentation. So this is a nice compromise between using\na precision of digits10 and max_digits10.\n\nNote 1:\n\nThe implementation only works for IEEE single/double precision\nnumbers. So the old implementation is kept for compatibility\nwith non-IEEE implementations and 'long double'.\n\nNote 2:\n\nIf number_float_t is 'float', not all serialized numbers can\nbe recovered using strtod (strtof works, though). (There is\nexactly one such number and the result is off by 1 ulp.)\nThis can be avoided by changing the implementation (the fix\nis trivial), but then the resulting decimal numbers are not\nexactly short."}, {"date": "2018-01-15T19:41:20Z", "message": "Add tests for #360"}, {"date": "2018-01-15T19:40:57Z", "message": "Tests: Re-enable some round-trip tests"}, {"date": "2018-01-15T19:39:16Z", "message": "Tests: Don't rely on the format used for floating-point formatting"}, {"date": "2018-01-15T19:39:00Z", "message": "Tests: Exponents are formatted with a leading '+' sign"}, {"date": "2018-01-15T19:38:47Z", "message": "Tests: Floating-point formatting uses lower case 'e'"}], "editgym@gmail.com": [{"date": "2018-01-03T10:06:32Z", "message": "fix link to the documentation of the emplace function"}], "wla80@sfu.ca": [{"date": "2018-02-23T23:29:42Z", "message": "Make integration section concise"}], "pfultz2@yahoo.com": [{"date": "2018-02-09T21:45:20Z", "message": "Clarify dev version and add space after the word flag."}, {"date": "2018-02-09T21:35:46Z", "message": "Latest updates based on feedback"}, {"date": "2018-02-02T17:13:13Z", "message": "Add a note about installing the library with cget"}], "patrikhuber@users.noreply.github.com": [{"date": "2018-02-06T11:29:37Z", "message": "Change to angle brackets"}, {"date": "2018-02-04T12:41:46Z", "message": "Changed links from master to develop branch"}, {"date": "2018-02-03T15:48:02Z", "message": "Fix links in README.md"}], "gufideg@gmail.com": [{"date": "2018-03-29T05:03:57Z", "message": "Added test for conversion to string_view"}, {"date": "2018-03-29T05:03:36Z", "message": "Amalgamate single include"}, {"date": "2018-03-16T17:16:10Z", "message": "Amalgamated headers"}, {"date": "2018-03-15T19:35:00Z", "message": "basic_json now supports getting many type of strings"}, {"date": "2018-04-09T15:15:33Z", "message": "Added test for string conversion with string_view"}, {"date": "2018-06-04T15:18:25Z", "message": "Merge branch 'develop' of github.com:gracicot/json into develop"}, {"date": "2018-06-04T15:18:19Z", "message": "Fixed check for compatible string type"}, {"date": "2018-06-04T03:51:07Z", "message": "Aligned template declaration"}, {"date": "2018-06-04T03:49:13Z", "message": "Re-added external_constructor with string compatible types"}, {"date": "2018-06-01T18:42:25Z", "message": "Set MSVC version from 1514 and older"}, {"date": "2018-06-01T18:22:57Z", "message": "Disabled implicit conversion to string_view on MSVC 15.13 and older"}], "nobigb@gmial.com": [{"date": "2018-03-27T16:51:30Z", "message": "Using target_compile_features to specify C++ 11 standard"}, {"date": "2018-04-03T12:28:07Z", "message": "Update CMake to latest on Travis"}], "agri@yandex-team.ru": [{"date": "2018-03-10T21:29:04Z", "message": "test refactoring"}, {"date": "2018-03-10T20:59:10Z", "message": "add unit test: checking dump to alternative string type"}, {"date": "2018-03-10T20:58:16Z", "message": "forward alternative string class from output_adapter to output_string_adapter"}, {"date": "2018-03-10T14:36:51Z", "message": "dump to alternate implementation of string, as defined in basic_json template (changes to amalgamated code)"}, {"date": "2018-03-10T14:19:28Z", "message": "dump to alternate implementation of string, as defined in basic_json template"}], "dns13@users.noreply.github.com": [{"date": "2018-04-17T11:02:36Z", "message": "Fix typo in single_include, too"}, {"date": "2018-04-17T10:08:44Z", "message": "Fix typo"}], "chuck.atkins@kitware.com": [{"date": "2018-04-09T15:32:18Z", "message": "Enable target namespaces and build dir project config\n\nCMake convention is to use a project namespace, i.e. Foo::, for imported\ntargets.  When multiple targets are imported from a project, this looks\nlike Foo::Bar1 Foo::Bar2, etc.  This adds the nlohmann_json:: namespace to\nthe exported target names.\n\nThis also allows the generated project config files to be used from the\nbuild directory instead of just the install directory."}, {"date": "2018-04-09T15:31:25Z", "message": "Make the CMake install dir user-configurable"}], "jspartan250@gmail.com": [{"date": "2018-04-10T05:16:44Z", "message": "Fixed incorrect version number in README\n\nclang-900.0.39.2 is from LLVM 9.0.0, not 8.1.0"}], "coryan@users.noreply.github.com": [{"date": "2018-04-08T19:46:25Z", "message": "Fix trivial typo in comment.\n\nNot really important, but since I saw it."}], "axel.huebl@plasma.ninja": [{"date": "2018-04-07T14:43:01Z", "message": "Package Manager: Spack\n\nI contributed a package to the Spack package manager.\n\nSpack is a flexible package manager that supports multiple versions,\nconfigurations, platforms, and compilers. It is popular in\nhigh-performance computing."}, {"date": "2018-04-07T11:15:44Z", "message": "CMake: 3.8+ is Sufficient\n\nThe current CMake scripts depend on CMake 3.8+.\nThis allows us to remove previous work-arounds."}], "2026226+martin-mfg@users.noreply.github.com": [{"date": "2018-05-03T20:42:52Z", "message": "fix typo in readme\n\nThe README says:\r\n> \"The library itself contains of a single header file ...\"\r\n\r\nI guess \"consists of a\" is the wording that was intended here. Alternatively, \"contains a\" might also be what was intended. Either way, I think both versions work equally well and thus choose the one that I believe was intended."}], "sonu.lohani@veoneer.com": [{"date": "2018-06-29T04:04:41Z", "message": "Fixed compiler error in VS 2015 for debug mode\nhttps://github.com/nlohmann/json/issues/1114"}], "julius@rakow.me": [{"date": "2018-06-24T20:30:37Z", "message": ":memo: fix links to cppreference named requirements\n\n\"Concepts\" have been renamed to \"named requirements\".\nThis is because P0898R3 Standard Library Concepts has been merged into\nC++20.\nCppreference have moved their links accordingly."}, {"date": "2018-06-24T20:29:33Z", "message": ":memo: link to cppreference via HTTPS"}, {"date": "2018-06-24T14:53:02Z", "message": "meson: add multiple headers target"}, {"date": "2018-06-23T18:45:00Z", "message": "meson: fix include directory"}], "agri@akamo.info": [{"date": "2018-06-13T16:47:29Z", "message": "simplify templates for operators, add more checks"}, {"date": "2018-06-11T17:50:39Z", "message": "forward declarations to make new compilers happy"}, {"date": "2018-06-11T16:09:57Z", "message": "define global operator< for const char* and alt_string"}, {"date": "2018-06-11T15:03:46Z", "message": "test (non)equality for alt_string implementation"}]}