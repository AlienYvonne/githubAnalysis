[{"url": "https://api.github.com/repos/nlohmann/json/issues/304", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/304/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/304/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/304/events", "html_url": "https://github.com/nlohmann/json/issues/304", "id": 175243196, "node_id": "MDU6SXNzdWUxNzUyNDMxOTY=", "number": 304, "title": "Unused variable warning", "user": {"login": "jonnymwalker", "id": 8247633, "node_id": "MDQ6VXNlcjgyNDc2MzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/8247633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonnymwalker", "html_url": "https://github.com/jonnymwalker", "followers_url": "https://api.github.com/users/jonnymwalker/followers", "following_url": "https://api.github.com/users/jonnymwalker/following{/other_user}", "gists_url": "https://api.github.com/users/jonnymwalker/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonnymwalker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonnymwalker/subscriptions", "organizations_url": "https://api.github.com/users/jonnymwalker/orgs", "repos_url": "https://api.github.com/users/jonnymwalker/repos", "events_url": "https://api.github.com/users/jonnymwalker/events{/privacy}", "received_events_url": "https://api.github.com/users/jonnymwalker/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/9", "html_url": "https://github.com/nlohmann/json/milestone/9", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/9/labels", "id": 1975894, "node_id": "MDk6TWlsZXN0b25lMTk3NTg5NA==", "number": 9, "title": "Release 2.0.4", "description": "The next release if backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "closed", "created_at": "2016-08-31T19:38:17Z", "updated_at": "2016-09-11T21:49:19Z", "due_on": "2016-09-11T07:00:00Z", "closed_at": "2016-09-11T21:49:19Z"}, "comments": 1, "created_at": "2016-09-06T13:11:41Z", "updated_at": "2016-09-11T20:40:57Z", "closed_at": "2016-09-11T20:40:57Z", "author_association": "NONE", "body": "Hi, I get an unused variable warning when compiling this program (test.cpp):\n\n```\n#include \"json.hpp\"\n\nusing json = nlohmann::json;\n\nint main()\n{\n  json object;\n  json patch = json::array();\n  object = object.patch(patch);\n  return 0;\n}  \n```\n\nCompile command is:\n`g++ -Wall -std=c++11 test.cpp json.hpp`\n\nCompiler version:\n`g++ (Debian 6.1.1-11) 6.1.1 20160802`\n\nThanks for the amazing library!\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/303", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/303/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/303/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/303/events", "html_url": "https://github.com/nlohmann/json/issues/303", "id": 174948343, "node_id": "MDU6SXNzdWUxNzQ5NDgzNDM=", "number": 303, "title": "unit-conversions SIGSEGV on armv7hl", "user": {"login": "dkopecek", "id": 1353140, "node_id": "MDQ6VXNlcjEzNTMxNDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1353140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkopecek", "html_url": "https://github.com/dkopecek", "followers_url": "https://api.github.com/users/dkopecek/followers", "following_url": "https://api.github.com/users/dkopecek/following{/other_user}", "gists_url": "https://api.github.com/users/dkopecek/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkopecek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkopecek/subscriptions", "organizations_url": "https://api.github.com/users/dkopecek/orgs", "repos_url": "https://api.github.com/users/dkopecek/repos", "events_url": "https://api.github.com/users/dkopecek/events{/privacy}", "received_events_url": "https://api.github.com/users/dkopecek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 729086061, "node_id": "MDU6TGFiZWw3MjkwODYwNjE=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20arm", "name": "platform: arm", "color": "eb6420", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2016-09-04T13:12:32Z", "updated_at": "2017-10-24T06:23:28Z", "closed_at": "2016-11-03T10:41:27Z", "author_association": "CONTRIBUTOR", "body": "Hello,\n when trying to build and run the test suite on armv7hl architecture, I get the following results:\n\n```\nmake[1]: Leaving directory '/builddir/build/BUILD/json-2.0.3/test'\ntest/json_unit \"*\"\njson_unit is a Catch v1.5.6 host application.\n\nRun with -? for options\n\nvalue conversion\n  get an object (explicit)\n\nsrc/unit-conversions.cpp:41\nsrc/unit-conversions.cpp:43: FAILED:\ndue to a fatal error condition:\n  SIGSEGV - Segmentation violation signal\n\ntest cases:   14 |   13 passed | 1 failed\nassertions: 4004 | 4003 passed | 1 failed\nMakefile:28: recipe for target 'check' failed\nRPM build errors:\nmake: *** [check] Error 245\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/302", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/302/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/302/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/302/events", "html_url": "https://github.com/nlohmann/json/issues/302", "id": 174654294, "node_id": "MDU6SXNzdWUxNzQ2NTQyOTQ=", "number": 302, "title": "Parsing of floats locale dependent", "user": {"login": "jomade", "id": 1391236, "node_id": "MDQ6VXNlcjEzOTEyMzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1391236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jomade", "html_url": "https://github.com/jomade", "followers_url": "https://api.github.com/users/jomade/followers", "following_url": "https://api.github.com/users/jomade/following{/other_user}", "gists_url": "https://api.github.com/users/jomade/gists{/gist_id}", "starred_url": "https://api.github.com/users/jomade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jomade/subscriptions", "organizations_url": "https://api.github.com/users/jomade/orgs", "repos_url": "https://api.github.com/users/jomade/repos", "events_url": "https://api.github.com/users/jomade/events{/privacy}", "received_events_url": "https://api.github.com/users/jomade/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/18", "html_url": "https://github.com/nlohmann/json/milestone/18", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/18/labels", "id": 2298442, "node_id": "MDk6TWlsZXN0b25lMjI5ODQ0Mg==", "number": 18, "title": "Release 2.1.1", "description": "The next release if backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 19, "state": "closed", "created_at": "2017-02-03T17:22:21Z", "updated_at": "2017-02-25T16:10:15Z", "due_on": "2017-02-25T08:00:00Z", "closed_at": "2017-02-25T16:10:15Z"}, "comments": 22, "created_at": "2016-09-02T00:13:57Z", "updated_at": "2017-02-14T06:16:35Z", "closed_at": "2017-02-14T06:16:35Z", "author_association": "NONE", "body": "With version 2.0.3, the following code: \n\n```\nstd::locale l(\"\");\nstd::string curr_locale = l.name();\nfloat j = nlohmann::json::parse(\"0.1\");\nstd::setlocale(LC_ALL, \"en_US.UTF-8\");\nfloat k = nlohmann::json::parse(\"0.1\");\n```\n\nyields the following results (read in the debugger): \n`curr_locale = \"nb_NO.UTF-8\"`\n`j = 0`\n`k = 0.100000001`\n\nThus, the decimals are truncated in the Norwegian locale. This is rather unexpected, and should IMO not happen. \n\nI think it originates from the parser calling strtod which is locale dependent. \n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/301", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/301/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/301/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/301/events", "html_url": "https://github.com/nlohmann/json/issues/301", "id": 173597630, "node_id": "MDU6SXNzdWUxNzM1OTc2MzA=", "number": 301, "title": "Exception line", "user": {"login": "loustak", "id": 11078371, "node_id": "MDQ6VXNlcjExMDc4Mzcx", "avatar_url": "https://avatars2.githubusercontent.com/u/11078371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/loustak", "html_url": "https://github.com/loustak", "followers_url": "https://api.github.com/users/loustak/followers", "following_url": "https://api.github.com/users/loustak/following{/other_user}", "gists_url": "https://api.github.com/users/loustak/gists{/gist_id}", "starred_url": "https://api.github.com/users/loustak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/loustak/subscriptions", "organizations_url": "https://api.github.com/users/loustak/orgs", "repos_url": "https://api.github.com/users/loustak/repos", "events_url": "https://api.github.com/users/loustak/events{/privacy}", "received_events_url": "https://api.github.com/users/loustak/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 10, "created_at": "2016-08-27T14:05:44Z", "updated_at": "2017-03-12T20:01:09Z", "closed_at": "2017-03-12T20:01:08Z", "author_association": "NONE", "body": "Hello,\nit's not an issue but since I found no place to post my question I put it here.\nSo my question is, is it possible to get the line where the exception was throw in the file ?\nFor exemple in this file:\n`{\n    \"none\" {\n        \"name\": \"holaaaaa\"\n    }\n}`\nI would like the exception to return 2 for exemple.\nThanks.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/299", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/299/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/299/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/299/events", "html_url": "https://github.com/nlohmann/json/issues/299", "id": 173037429, "node_id": "MDU6SXNzdWUxNzMwMzc0Mjk=", "number": 299, "title": "Coverity scan fails", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/13", "html_url": "https://github.com/nlohmann/json/milestone/13", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/13/labels", "id": 2110088, "node_id": "MDk6TWlsZXN0b25lMjExMDA4OA==", "number": 13, "title": "Release 2.0.8", "description": "The next release if backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2016-11-02T16:36:13Z", "updated_at": "2016-12-02T19:10:24Z", "due_on": "2016-12-02T08:00:00Z", "closed_at": "2016-12-02T19:10:24Z"}, "comments": 3, "created_at": "2016-08-24T19:28:30Z", "updated_at": "2016-11-24T20:56:48Z", "closed_at": "2016-11-24T20:56:47Z", "author_association": "OWNER", "body": "The recent [coverity scan build](https://travis-ci.org/nlohmann/json/jobs/154004878#L558) failed:\n\n```\n[WARNING] No files were emitted. This may be due to a problem with your configuration\nor because no files were actually compiled by your build command.\nPlease make sure you have configured the compilers actually used in the compilation.\n For more details, please look at: \n```\n\nI can reproduce the error locally, but the log file gives no information on the error. The only change made since previous successful builds was the split of the unit tests into several compilation units.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/298", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/298/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/298/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/298/events", "html_url": "https://github.com/nlohmann/json/issues/298", "id": 172689394, "node_id": "MDU6SXNzdWUxNzI2ODkzOTQ=", "number": 298, "title": "Document the best way to serialize/deserialize user defined types to json", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/4", "html_url": "https://github.com/nlohmann/json/milestone/4", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/4/labels", "id": 1836706, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwNg==", "number": 4, "title": "Release 2.1.0", "description": "The next release if new, backwards compatible functionality is introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 10, "state": "closed", "created_at": "2016-06-19T16:06:39Z", "updated_at": "2017-01-28T17:45:05Z", "due_on": "2017-01-28T08:00:00Z", "closed_at": "2017-01-28T17:45:05Z"}, "comments": 9, "created_at": "2016-08-23T12:45:30Z", "updated_at": "2017-01-27T07:19:57Z", "closed_at": "2017-01-27T07:19:57Z", "author_association": "NONE", "body": "It would be nice to add an example to the documentation about the best ways to make an user defined type serializable/deserializable to json. For example, given:\n\n``` c++\nstruct point {\n  float x[3];\n};\n\njson v = point{{0., 1., 2.}};\nassert(v.is_array());\nassert(v[0] == 0.0 and v[1] == 1.0 and v[2] == 2.0);\n\npoint p = v; \nassert(p.x[0] == 0.0 and p.x[1] == 1.0 and p.x[2] == 2.0);\n```\n- Is it possible to make json serialization/deserialization without modifying `point` itself?\n- Are there any customization points to allow this?\n\nFor example, to serialize `point` I think it should probably be enough to:\n- define non-member non-friend `begin` and `end` functions that are found by ADL. \n- have [this `basic_json` array constructor](https://github.com/nlohmann/json/blob/develop/src/json.hpp#L1242) use `decltype(begin(std::declval<point>()))`, `decltype(end(std::declval<point>()))` to find the iterator types, and `std::iterator_traits<T>` to find the rest of the required types (instead of `typename T::value_type`) .\n\nSuch that adding:\n\n``` c++\nfloat*       begin(point& p)       { return p.x; }\nfloat const* begin(point const& p) { return p.x; }\nfloat*       end(point& p)       { return p.x + 3; }\nfloat const* end(point const& p) { return p.x + 3; }\n```\n\nto `point`'s namespace should be enough to get it to work. Right now it fails because (for some reason), point is required to have `iterator`, `const_iterator`, and `value_type` type members. But since those can be obtained from point iterators by using `std::iterator_traits<decltype(begin(std::declval<point>()))>` they are not really necessary.\n\nFor other types that are not arrays maybe a couple of customization points could be added (or documented). That way it will be enough to add `to_json`/`from_json` overloads to the types namespace to allow them being found by argument dependent lookup.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/297", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/297/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/297/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/297/events", "html_url": "https://github.com/nlohmann/json/issues/297", "id": 172069443, "node_id": "MDU6SXNzdWUxNzIwNjk0NDM=", "number": 297, "title": "Add StringView template typename to basic_json", "user": {"login": "dv1", "id": 335064, "node_id": "MDQ6VXNlcjMzNTA2NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/335064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dv1", "html_url": "https://github.com/dv1", "followers_url": "https://api.github.com/users/dv1/followers", "following_url": "https://api.github.com/users/dv1/following{/other_user}", "gists_url": "https://api.github.com/users/dv1/gists{/gist_id}", "starred_url": "https://api.github.com/users/dv1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dv1/subscriptions", "organizations_url": "https://api.github.com/users/dv1/orgs", "repos_url": "https://api.github.com/users/dv1/repos", "events_url": "https://api.github.com/users/dv1/events{/privacy}", "received_events_url": "https://api.github.com/users/dv1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 304694104, "node_id": "MDU6TGFiZWwzMDQ2OTQxMDQ=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20please%20discuss", "name": "state: please discuss", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-19T07:17:14Z", "updated_at": "2017-01-02T16:35:58Z", "closed_at": "2017-01-02T16:35:58Z", "author_association": "NONE", "body": "Currently, basic_json expects one string type, which is used for everything - arguments, temporary strings, etc. This may be inefficient if data is available as some sort of a \"string view\". For example, if a C API offers a const char\\* value and a length integer, then it is possible to wrap these in a boost::string_ref instance. Since the JSON parser does not modify the source string, it would be possible to allow for specifying something like boost::string_ref as a \"StringView\" template typename, and std::string as a \"String\" type, which is then used internally.\n\nThe net gain is that a copy is avoided. In the example mentioned above, I have to create a temporary std::string and do a copy of the source string. With a StringView typename, I could avoid that copy.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/296", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/296/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/296/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/296/events", "html_url": "https://github.com/nlohmann/json/issues/296", "id": 171711843, "node_id": "MDU6SXNzdWUxNzE3MTE4NDM=", "number": 296, "title": "[Improvement] Add option to remove exceptions", "user": {"login": "marsh0", "id": 6899464, "node_id": "MDQ6VXNlcjY4OTk0NjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/6899464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marsh0", "html_url": "https://github.com/marsh0", "followers_url": "https://api.github.com/users/marsh0/followers", "following_url": "https://api.github.com/users/marsh0/following{/other_user}", "gists_url": "https://api.github.com/users/marsh0/gists{/gist_id}", "starred_url": "https://api.github.com/users/marsh0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marsh0/subscriptions", "organizations_url": "https://api.github.com/users/marsh0/orgs", "repos_url": "https://api.github.com/users/marsh0/repos", "events_url": "https://api.github.com/users/marsh0/events{/privacy}", "received_events_url": "https://api.github.com/users/marsh0/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/4", "html_url": "https://github.com/nlohmann/json/milestone/4", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/4/labels", "id": 1836706, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwNg==", "number": 4, "title": "Release 2.1.0", "description": "The next release if new, backwards compatible functionality is introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 10, "state": "closed", "created_at": "2016-06-19T16:06:39Z", "updated_at": "2017-01-28T17:45:05Z", "due_on": "2017-01-28T08:00:00Z", "closed_at": "2017-01-28T17:45:05Z"}, "comments": 10, "created_at": "2016-08-17T17:14:31Z", "updated_at": "2017-01-18T19:44:12Z", "closed_at": "2017-01-18T19:44:12Z", "author_association": "NONE", "body": "It would be nice to have the option to compile without exceptions for use on platforms where exceptions cannot be enabled., such as consoles etc. \n\nMainly for the reasons listed here: http://programmers.stackexchange.com/questions/113479/are-there-any-real-world-cases-for-c-without-exceptions\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/295", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/295/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/295/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/295/events", "html_url": "https://github.com/nlohmann/json/issues/295", "id": 171499375, "node_id": "MDU6SXNzdWUxNzE0OTkzNzU=", "number": 295, "title": "warning C4706: assignment within conditional expression", "user": {"login": "marsh0", "id": 6899464, "node_id": "MDQ6VXNlcjY4OTk0NjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/6899464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marsh0", "html_url": "https://github.com/marsh0", "followers_url": "https://api.github.com/users/marsh0/followers", "following_url": "https://api.github.com/users/marsh0/following{/other_user}", "gists_url": "https://api.github.com/users/marsh0/gists{/gist_id}", "starred_url": "https://api.github.com/users/marsh0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marsh0/subscriptions", "organizations_url": "https://api.github.com/users/marsh0/orgs", "repos_url": "https://api.github.com/users/marsh0/repos", "events_url": "https://api.github.com/users/marsh0/events{/privacy}", "received_events_url": "https://api.github.com/users/marsh0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/8", "html_url": "https://github.com/nlohmann/json/milestone/8", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/8/labels", "id": 1913911, "node_id": "MDk6TWlsZXN0b25lMTkxMzkxMQ==", "number": 8, "title": "Release 2.0.3", "description": "The next release if backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "closed", "created_at": "2016-07-31T11:42:07Z", "updated_at": "2016-08-31T19:37:57Z", "due_on": "2016-08-31T07:00:00Z", "closed_at": "2016-08-31T19:37:57Z"}, "comments": 12, "created_at": "2016-08-16T19:37:33Z", "updated_at": "2017-10-02T15:13:43Z", "closed_at": "2016-08-18T21:06:59Z", "author_association": "NONE", "body": "There is a few lines like:\n\n```\nif (keep and (not callback or (keep = callback(depth++, parse_event_t::object_start, result))))\n```\n\nThat are causing warnings and make projects that treat warnings as errors unable to compile without fixing it or disabling warnings in the code. \n\nMicrosoft Visual Studio Compiler 2015\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/294", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/294/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/294/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/294/events", "html_url": "https://github.com/nlohmann/json/issues/294", "id": 171465238, "node_id": "MDU6SXNzdWUxNzE0NjUyMzg=", "number": 294, "title": "Strip comments / Minify", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-16T16:54:57Z", "updated_at": "2016-11-20T12:25:44Z", "closed_at": "2016-08-16T20:26:22Z", "author_association": "NONE", "body": "While comments are not part of JSON, some people (particularly those writting JSON files by hand sometimes add comments to them). That makes those files not JSON anymore. The typical solution when one wants to process one of those files as JSON is to \"minify\" them first.\n\nIs it possible to strip comments / minify json files before parsing them as json?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/293", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/293/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/293/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/293/events", "html_url": "https://github.com/nlohmann/json/issues/293", "id": 171357254, "node_id": "MDU6SXNzdWUxNzEzNTcyNTQ=", "number": 293, "title": "Q: Is it possible to build json tree from already UTF8 encoded values?", "user": {"login": "clarkk", "id": 1913916, "node_id": "MDQ6VXNlcjE5MTM5MTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1913916?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarkk", "html_url": "https://github.com/clarkk", "followers_url": "https://api.github.com/users/clarkk/followers", "following_url": "https://api.github.com/users/clarkk/following{/other_user}", "gists_url": "https://api.github.com/users/clarkk/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarkk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarkk/subscriptions", "organizations_url": "https://api.github.com/users/clarkk/orgs", "repos_url": "https://api.github.com/users/clarkk/repos", "events_url": "https://api.github.com/users/clarkk/events{/privacy}", "received_events_url": "https://api.github.com/users/clarkk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-16T08:54:18Z", "updated_at": "2016-08-18T21:17:57Z", "closed_at": "2016-08-18T21:17:57Z", "author_association": "NONE", "body": "Is it possible to build a JSON tree from already UTF8 encoded strings?\n\neg\n`utf8 encoded string with \u00c3\u00a6\u00c3\u00b8\u00c3\u00a5`\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/292", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/292/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/292/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/292/events", "html_url": "https://github.com/nlohmann/json/issues/292", "id": 170763664, "node_id": "MDU6SXNzdWUxNzA3NjM2NjQ=", "number": 292, "title": "Equality operator results in array when assigned object", "user": {"login": "adamierymenko", "id": 591635, "node_id": "MDQ6VXNlcjU5MTYzNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/591635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamierymenko", "html_url": "https://github.com/adamierymenko", "followers_url": "https://api.github.com/users/adamierymenko/followers", "following_url": "https://api.github.com/users/adamierymenko/following{/other_user}", "gists_url": "https://api.github.com/users/adamierymenko/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamierymenko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamierymenko/subscriptions", "organizations_url": "https://api.github.com/users/adamierymenko/orgs", "repos_url": "https://api.github.com/users/adamierymenko/repos", "events_url": "https://api.github.com/users/adamierymenko/events{/privacy}", "received_events_url": "https://api.github.com/users/adamierymenko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-11T22:38:58Z", "updated_at": "2016-08-12T05:02:17Z", "closed_at": "2016-08-11T22:45:12Z", "author_association": "NONE", "body": "`an_object = an_object;`\n\nAfterwords `an_object` is an _array_ not an object. Easy to test.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/291", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/291/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/291/events", "html_url": "https://github.com/nlohmann/json/issues/291", "id": 170682829, "node_id": "MDU6SXNzdWUxNzA2ODI4Mjk=", "number": 291, "title": "Support for integers not from the range [-(2**53)+1, (2**53)-1] in parser", "user": {"login": "antonovvk", "id": 442904, "node_id": "MDQ6VXNlcjQ0MjkwNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/442904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antonovvk", "html_url": "https://github.com/antonovvk", "followers_url": "https://api.github.com/users/antonovvk/followers", "following_url": "https://api.github.com/users/antonovvk/following{/other_user}", "gists_url": "https://api.github.com/users/antonovvk/gists{/gist_id}", "starred_url": "https://api.github.com/users/antonovvk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antonovvk/subscriptions", "organizations_url": "https://api.github.com/users/antonovvk/orgs", "repos_url": "https://api.github.com/users/antonovvk/repos", "events_url": "https://api.github.com/users/antonovvk/events{/privacy}", "received_events_url": "https://api.github.com/users/antonovvk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-11T16:03:05Z", "updated_at": "2016-08-11T18:20:15Z", "closed_at": "2016-08-11T16:18:59Z", "author_association": "NONE", "body": "Currently the test below fails:\n\n``` C++\nTEST(WTF, BigInteger)  {\n    nlohmann::json val = -3383556239975101330LL;\n    val = nlohmann::json::parse(val.dump());\n    EXPECT_EQ(-3383556239975101330, val.get<int64_t>());\n}\n```\n\nAnd this is the internal inconsistency.\nAs far as I know, RFC does not require JSON integers to be in any range.\nI think that internal consistency is more important than possible non-interoperability with third-party JSON parsers.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/290", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/290/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/290/events", "html_url": "https://github.com/nlohmann/json/issues/290", "id": 170161014, "node_id": "MDU6SXNzdWUxNzAxNjEwMTQ=", "number": 290, "title": "Support for iterator-range parsing", "user": {"login": "theodelrieu", "id": 15652306, "node_id": "MDQ6VXNlcjE1NjUyMzA2", "avatar_url": "https://avatars1.githubusercontent.com/u/15652306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theodelrieu", "html_url": "https://github.com/theodelrieu", "followers_url": "https://api.github.com/users/theodelrieu/followers", "following_url": "https://api.github.com/users/theodelrieu/following{/other_user}", "gists_url": "https://api.github.com/users/theodelrieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/theodelrieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theodelrieu/subscriptions", "organizations_url": "https://api.github.com/users/theodelrieu/orgs", "repos_url": "https://api.github.com/users/theodelrieu/repos", "events_url": "https://api.github.com/users/theodelrieu/events{/privacy}", "received_events_url": "https://api.github.com/users/theodelrieu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/8", "html_url": "https://github.com/nlohmann/json/milestone/8", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/8/labels", "id": 1913911, "node_id": "MDk6TWlsZXN0b25lMTkxMzkxMQ==", "number": 8, "title": "Release 2.0.3", "description": "The next release if backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "closed", "created_at": "2016-07-31T11:42:07Z", "updated_at": "2016-08-31T19:37:57Z", "due_on": "2016-08-31T07:00:00Z", "closed_at": "2016-08-31T19:37:57Z"}, "comments": 53, "created_at": "2016-08-09T13:06:43Z", "updated_at": "2016-11-13T22:37:59Z", "closed_at": "2016-08-31T18:28:23Z", "author_association": "CONTRIBUTOR", "body": "Hi, it would be handy to add an overload to the `parse` method.\n\nIn my code, I deal a lot with `vector<uint8_t>` when communicating with my server.\nHowever I sometimes have to send JSON, and I must convert the buffer to a `std::string`, which is unfortunate.\n\nI know I could typedef basic_json and use `std::basic_string<uint8_t>` as `StringType`.\nHowever, other parts of the code uses the `std::string` version, and I don't want to patch the whole code because of that.\n\nWe could add this overload to `parse`, which will behave like `std::string` iterator constructor:\n\n``` cpp\ntemplate<typename InputIterator>\nstatic basic_json parse(InputIterator begin, InputIterator end, parser_callback_t cb = nullptr);\n\n// user code\n\nauto buffer = receive_bytes();\nauto json = json::parse(buffer.begin(), buffer.end());\n```\n\nWhat are your thoughts on that ?\nIf you agree with the idea, I can take care of the PR.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/289", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/289/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/289/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/289/events", "html_url": "https://github.com/nlohmann/json/issues/289", "id": 170123740, "node_id": "MDU6SXNzdWUxNzAxMjM3NDA=", "number": 289, "title": "Horribly inconsistent behavior between const/non-const reference in operator [] ()", "user": {"login": "kawing-chiu", "id": 5235260, "node_id": "MDQ6VXNlcjUyMzUyNjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5235260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kawing-chiu", "html_url": "https://github.com/kawing-chiu", "followers_url": "https://api.github.com/users/kawing-chiu/followers", "following_url": "https://api.github.com/users/kawing-chiu/following{/other_user}", "gists_url": "https://api.github.com/users/kawing-chiu/gists{/gist_id}", "starred_url": "https://api.github.com/users/kawing-chiu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kawing-chiu/subscriptions", "organizations_url": "https://api.github.com/users/kawing-chiu/orgs", "repos_url": "https://api.github.com/users/kawing-chiu/repos", "events_url": "https://api.github.com/users/kawing-chiu/events{/privacy}", "received_events_url": "https://api.github.com/users/kawing-chiu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/8", "html_url": "https://github.com/nlohmann/json/milestone/8", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/8/labels", "id": 1913911, "node_id": "MDk6TWlsZXN0b25lMTkxMzkxMQ==", "number": 8, "title": "Release 2.0.3", "description": "The next release if backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "closed", "created_at": "2016-07-31T11:42:07Z", "updated_at": "2016-08-31T19:37:57Z", "due_on": "2016-08-31T07:00:00Z", "closed_at": "2016-08-31T19:37:57Z"}, "comments": 29, "created_at": "2016-08-09T09:40:53Z", "updated_at": "2017-01-20T14:03:53Z", "closed_at": "2016-08-31T18:31:15Z", "author_association": "NONE", "body": "Things like \n\n``` cpp\nstd::string tag;\ntry {\n    tag = json[\"tag\"];\n} catch (const std::domain_error &e) {\n    //  handle it\n}\n```\n\nworks nicely and as expected. However, if `json` is a const reference, the above code will fail by **assertion**. Why is it designed like so? Shouldn't it be better and more consistent to at least throw a `domain_error` instead of fail by assertion? It took me more than one hour to debug this issue when I pass the above json by const reference to another function to extract data...\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/288", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/288/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/288/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/288/events", "html_url": "https://github.com/nlohmann/json/issues/288", "id": 169316509, "node_id": "MDU6SXNzdWUxNjkzMTY1MDk=", "number": 288, "title": "Silently get numbers into smaller types", "user": {"login": "vladimirgamalyan", "id": 12879954, "node_id": "MDQ6VXNlcjEyODc5OTU0", "avatar_url": "https://avatars0.githubusercontent.com/u/12879954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vladimirgamalyan", "html_url": "https://github.com/vladimirgamalyan", "followers_url": "https://api.github.com/users/vladimirgamalyan/followers", "following_url": "https://api.github.com/users/vladimirgamalyan/following{/other_user}", "gists_url": "https://api.github.com/users/vladimirgamalyan/gists{/gist_id}", "starred_url": "https://api.github.com/users/vladimirgamalyan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vladimirgamalyan/subscriptions", "organizations_url": "https://api.github.com/users/vladimirgamalyan/orgs", "repos_url": "https://api.github.com/users/vladimirgamalyan/repos", "events_url": "https://api.github.com/users/vladimirgamalyan/events{/privacy}", "received_events_url": "https://api.github.com/users/vladimirgamalyan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-08-04T08:14:54Z", "updated_at": "2016-08-05T05:17:00Z", "closed_at": "2016-08-04T18:28:06Z", "author_association": "NONE", "body": "This code:\n\n``` cpp\n    json j = { { \"foo\", 65536 } };\n    int16_t v = j[\"foo\"].get<int16_t>();\n    std::cout << v << \"\\n\";\n```\n\nprints\n\n```\n0\n```\n\nProbably, it would be better, if `get` thrown some exception (maybe `std::out_of_range`).\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/287", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/287/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/287/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/287/events", "html_url": "https://github.com/nlohmann/json/issues/287", "id": 168920168, "node_id": "MDU6SXNzdWUxNjg5MjAxNjg=", "number": 287, "title": "Incorrect parsing of large int64_t numbers", "user": {"login": "mariobadr", "id": 5625409, "node_id": "MDQ6VXNlcjU2MjU0MDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5625409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mariobadr", "html_url": "https://github.com/mariobadr", "followers_url": "https://api.github.com/users/mariobadr/followers", "following_url": "https://api.github.com/users/mariobadr/following{/other_user}", "gists_url": "https://api.github.com/users/mariobadr/gists{/gist_id}", "starred_url": "https://api.github.com/users/mariobadr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mariobadr/subscriptions", "organizations_url": "https://api.github.com/users/mariobadr/orgs", "repos_url": "https://api.github.com/users/mariobadr/repos", "events_url": "https://api.github.com/users/mariobadr/events{/privacy}", "received_events_url": "https://api.github.com/users/mariobadr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-02T15:47:00Z", "updated_at": "2016-08-02T19:17:23Z", "closed_at": "2016-08-02T15:56:34Z", "author_association": "NONE", "body": "Hello,\n\nI use dynamic instrumentation to gather information about a program, and then output it using your json library to a file. When I parse the file into a different application using your library, I get different values. Below is a minimal example:\n\n**_main.cpp_**\n\n```\n#include <fstream>\n#include <iostream>\n\n#include \"json.hpp\"\n\nint main(int argc, char** argv) {\n  using json = nlohmann::json;\n\n  if(argc != 2) {\n    return 0;\n  }\n\n  std::ifstream stream(argv[1]);\n  json j;\n  stream >> j;\n\n  std::cout << j[\"id\"] << \"\\n\";\n\n  return 0;\n}\n```\n\n**_test.json_**\n`\n{\n  \"call\": \"pthread_mutex_lock\",\n  \"id\": 8492065431569638403,\n  \"object\": 139898772169632\n}\n`\n\n_**Output**_\n`8492065431569638400`\n\nThe documentation states that numbers are stored in int64_t, and that the maximum value allowed is 9223372036854775807. The above value is less than that number, so I'm not sure what the problem is. Thanks.\n\nEdit: I am using version 1.1.0\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/286", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/286/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/286/events", "html_url": "https://github.com/nlohmann/json/issues/286", "id": 167311770, "node_id": "MDU6SXNzdWUxNjczMTE3NzA=", "number": 286, "title": "can function dump()  return string in the order I push in the json object ?", "user": {"login": "zyinter2008", "id": 19711705, "node_id": "MDQ6VXNlcjE5NzExNzA1", "avatar_url": "https://avatars0.githubusercontent.com/u/19711705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zyinter2008", "html_url": "https://github.com/zyinter2008", "followers_url": "https://api.github.com/users/zyinter2008/followers", "following_url": "https://api.github.com/users/zyinter2008/following{/other_user}", "gists_url": "https://api.github.com/users/zyinter2008/gists{/gist_id}", "starred_url": "https://api.github.com/users/zyinter2008/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zyinter2008/subscriptions", "organizations_url": "https://api.github.com/users/zyinter2008/orgs", "repos_url": "https://api.github.com/users/zyinter2008/repos", "events_url": "https://api.github.com/users/zyinter2008/events{/privacy}", "received_events_url": "https://api.github.com/users/zyinter2008/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-07-25T08:32:07Z", "updated_at": "2018-01-15T09:52:41Z", "closed_at": "2016-07-25T11:43:51Z", "author_association": "NONE", "body": "the program like this:\n    json obj = { {\"result\", \"OK\"}, {\"model\", \"AAA\" } };\n    string str = obj.dump();\nwhich i want get { {\"result\", \"OK\"}, {\"model\", \"AAA\" } }, but it always return {  {\"model\", \"AAA\" }, {\"result\", \"OK\"} }\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/285", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/285/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/285/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/285/events", "html_url": "https://github.com/nlohmann/json/issues/285", "id": 167257816, "node_id": "MDU6SXNzdWUxNjcyNTc4MTY=", "number": 285, "title": "Error on the Mac: Undefined symbols for architecture x86_64", "user": {"login": "a-x-", "id": 6201068, "node_id": "MDQ6VXNlcjYyMDEwNjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/6201068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a-x-", "html_url": "https://github.com/a-x-", "followers_url": "https://api.github.com/users/a-x-/followers", "following_url": "https://api.github.com/users/a-x-/following{/other_user}", "gists_url": "https://api.github.com/users/a-x-/gists{/gist_id}", "starred_url": "https://api.github.com/users/a-x-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a-x-/subscriptions", "organizations_url": "https://api.github.com/users/a-x-/orgs", "repos_url": "https://api.github.com/users/a-x-/repos", "events_url": "https://api.github.com/users/a-x-/events{/privacy}", "received_events_url": "https://api.github.com/users/a-x-/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-07-24T22:23:00Z", "updated_at": "2017-11-30T05:58:07Z", "closed_at": "2016-07-25T11:43:36Z", "author_association": "NONE", "body": "I installed json with brew (brew tap nlohmann/json && brew install nlohmann_json).\nthen i wrote hello world:\n\n``` cpp\n#include \"json.hpp\"\nusing json = nlohmann::json;\n    // create object from string literal\n    auto j3 = json::parse(\"{ \\\"happy\\\": true, \\\"pi\\\": 3.141 }\");\n```\n\nfinnaly i ran clang: `clang -std=c++11 -O3 compare-vectors.cpp -o compare-vectors`\n\n```\nUndefined symbols for architecture x86_64:\n  \"std::__1::__vector_base_common<true>::__throw_length_error() const\", referenced from:\n      void std::__1::vector<nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long long, unsigned long long, double, std::__1::allocator>, std::__1::allocator<nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long long, unsigned long long, double, std::__1::allocator> > >::__push_back_slow_path<nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long long, unsigned long long, double, std::__1::allocator> >(nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long long, unsigned long long, double, std::__1::allocator>&&) in compare-vectors-480e6b.o\n...\n      ...\nld: symbol(s) not found for architecture x86_64\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\n```\n\n---\n\nApple LLVM version 7.3.0 (clang-703.0.31)\nTarget: x86_64-apple-darwin15.5.0\nThread model: posix\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/284", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/284/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/284/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/284/events", "html_url": "https://github.com/nlohmann/json/issues/284", "id": 166854094, "node_id": "MDU6SXNzdWUxNjY4NTQwOTQ=", "number": 284, "title": "[question]: macro to disable floating point support", "user": {"login": "rianquinn", "id": 5932003, "node_id": "MDQ6VXNlcjU5MzIwMDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5932003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rianquinn", "html_url": "https://github.com/rianquinn", "followers_url": "https://api.github.com/users/rianquinn/followers", "following_url": "https://api.github.com/users/rianquinn/following{/other_user}", "gists_url": "https://api.github.com/users/rianquinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/rianquinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rianquinn/subscriptions", "organizations_url": "https://api.github.com/users/rianquinn/orgs", "repos_url": "https://api.github.com/users/rianquinn/repos", "events_url": "https://api.github.com/users/rianquinn/events{/privacy}", "received_events_url": "https://api.github.com/users/rianquinn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-07-21T15:50:33Z", "updated_at": "2016-11-13T22:37:59Z", "closed_at": "2016-08-10T21:09:11Z", "author_association": "NONE", "body": "We are interested in using JSON in our [Bareflank](https://github.com/Bareflank/hypervisor) Hypervisor for both comms and configuration files, and would love to use this implementation. Kernel / Hypervisor code however should not use double / float as these data types can generate exceptions that cannot be handled well inside the kernel. \n\nIt appears that you already support signed / unsigned integers. Would you be interested in a patch that disables (likely via a macro of some sort) double / float completely to support people interested in using this library in non-userspace code?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/283", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/283/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/283/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/283/events", "html_url": "https://github.com/nlohmann/json/issues/283", "id": 166710747, "node_id": "MDU6SXNzdWUxNjY3MTA3NDc=", "number": 283, "title": "value() does not work with _json_pointer types", "user": {"login": "clwill", "id": 1330725, "node_id": "MDQ6VXNlcjEzMzA3MjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1330725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clwill", "html_url": "https://github.com/clwill", "followers_url": "https://api.github.com/users/clwill/followers", "following_url": "https://api.github.com/users/clwill/following{/other_user}", "gists_url": "https://api.github.com/users/clwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/clwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clwill/subscriptions", "organizations_url": "https://api.github.com/users/clwill/orgs", "repos_url": "https://api.github.com/users/clwill/repos", "events_url": "https://api.github.com/users/clwill/events{/privacy}", "received_events_url": "https://api.github.com/users/clwill/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/7", "html_url": "https://github.com/nlohmann/json/milestone/7", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/7/labels", "id": 1853616, "node_id": "MDk6TWlsZXN0b25lMTg1MzYxNg==", "number": 7, "title": "Release 2.0.2", "description": "The next release if backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2016-06-28T20:19:10Z", "updated_at": "2016-07-31T11:41:43Z", "due_on": "2016-07-30T07:00:00Z", "closed_at": "2016-07-31T11:41:43Z"}, "comments": 4, "created_at": "2016-07-21T00:13:45Z", "updated_at": "2016-11-13T22:37:59Z", "closed_at": "2016-07-24T09:18:19Z", "author_association": "NONE", "body": "It would be great if value(), which supports default values, worked like at() which can handle _json_pointer types.\n\nThis would allow the handling of nested objects, and still be robust to missing elements.\n\nTo wit:\n\n``` cpp\n#include <json.hpp>\n\nusing json = nlohmann::json;\n\nint main()\n{\n    json j =\n    {\n        {\"object\", {{\"key1\", 1}, {\"key2\", 2}}},\n    };\n\n    int at_integer = j.at(\"/object/key2\"_json_pointer);\n    int val_integer = j.value(\"/object/key2\"_json_pointer, 0);\n\n    std::cout << std::boolalpha << at_integer << \" \" << val_integer\n              << \" \" << (at_integer == val_integer) << \"\\n\";\n}\n```\n\nThis code produces the output:\n\n```\n2 0 false\n```\n\nWould be nice if it was `2 2 true`.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/282", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/282/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/282/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/282/events", "html_url": "https://github.com/nlohmann/json/issues/282", "id": 165781733, "node_id": "MDU6SXNzdWUxNjU3ODE3MzM=", "number": 282, "title": "Build error for std::int64", "user": {"login": "felipezacani", "id": 6606367, "node_id": "MDQ6VXNlcjY2MDYzNjc=", "avatar_url": "https://avatars0.githubusercontent.com/u/6606367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felipezacani", "html_url": "https://github.com/felipezacani", "followers_url": "https://api.github.com/users/felipezacani/followers", "following_url": "https://api.github.com/users/felipezacani/following{/other_user}", "gists_url": "https://api.github.com/users/felipezacani/gists{/gist_id}", "starred_url": "https://api.github.com/users/felipezacani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felipezacani/subscriptions", "organizations_url": "https://api.github.com/users/felipezacani/orgs", "repos_url": "https://api.github.com/users/felipezacani/repos", "events_url": "https://api.github.com/users/felipezacani/events{/privacy}", "received_events_url": "https://api.github.com/users/felipezacani/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/7", "html_url": "https://github.com/nlohmann/json/milestone/7", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/7/labels", "id": 1853616, "node_id": "MDk6TWlsZXN0b25lMTg1MzYxNg==", "number": 7, "title": "Release 2.0.2", "description": "The next release if backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2016-06-28T20:19:10Z", "updated_at": "2016-07-31T11:41:43Z", "due_on": "2016-07-30T07:00:00Z", "closed_at": "2016-07-31T11:41:43Z"}, "comments": 3, "created_at": "2016-07-15T13:01:22Z", "updated_at": "2016-07-15T17:50:00Z", "closed_at": "2016-07-15T17:44:24Z", "author_association": "NONE", "body": "When building on Windows with clang, clang defaults to Visual Studio (Windows SDK) headers. There is no int64 defined inside the std namespace. \n\nAs specified in http://en.cppreference.com/w/cpp/types/integer, those int64 types (lines 209 and 210) are not defined in std, but open in cstdint.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/281", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/281/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/281/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/281/events", "html_url": "https://github.com/nlohmann/json/issues/281", "id": 165275683, "node_id": "MDU6SXNzdWUxNjUyNzU2ODM=", "number": 281, "title": "strings can't be accessed after dump()->parse() - type is lost", "user": {"login": "guygman", "id": 20042886, "node_id": "MDQ6VXNlcjIwMDQyODg2", "avatar_url": "https://avatars0.githubusercontent.com/u/20042886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guygman", "html_url": "https://github.com/guygman", "followers_url": "https://api.github.com/users/guygman/followers", "following_url": "https://api.github.com/users/guygman/following{/other_user}", "gists_url": "https://api.github.com/users/guygman/gists{/gist_id}", "starred_url": "https://api.github.com/users/guygman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guygman/subscriptions", "organizations_url": "https://api.github.com/users/guygman/orgs", "repos_url": "https://api.github.com/users/guygman/repos", "events_url": "https://api.github.com/users/guygman/events{/privacy}", "received_events_url": "https://api.github.com/users/guygman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-13T09:23:34Z", "updated_at": "2016-07-13T16:51:50Z", "closed_at": "2016-07-13T16:51:50Z", "author_association": "NONE", "body": "Hi,\n\nstrangely, this code doesn't work and I can't find out what I'm doing wrong.... \n\nnlohmann::json out;\nout[accessTokenField] = (const string&)accessToken;   // key and value std::strings\nstd::string tmp1 = out[accessTokenField]; // this works\nstd::string dump = out.dump(); // 'dump' is - {\"accessToken\": \"b9c6f71f-0a10-4025-9628\"}\nnlohmann::json in;\nin.parse(dump);\nstd::string tmp2 = in[accessTokenField]; // this fails!! error message- \"type must be string, but is null\"\n\nupdate: using the static json::parse method works fine-\n.\n.\nnlohmann::json in;\nin = nlohmann::json::parse(dump);\nstd::string tmp2 = in[accessTokenField];\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/280", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/280/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/280/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/280/events", "html_url": "https://github.com/nlohmann/json/issues/280", "id": 165081058, "node_id": "MDU6SXNzdWUxNjUwODEwNTg=", "number": 280, "title": "Easy serialization of classes", "user": {"login": "jonasseglare", "id": 5850088, "node_id": "MDQ6VXNlcjU4NTAwODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/5850088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonasseglare", "html_url": "https://github.com/jonasseglare", "followers_url": "https://api.github.com/users/jonasseglare/followers", "following_url": "https://api.github.com/users/jonasseglare/following{/other_user}", "gists_url": "https://api.github.com/users/jonasseglare/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonasseglare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonasseglare/subscriptions", "organizations_url": "https://api.github.com/users/jonasseglare/orgs", "repos_url": "https://api.github.com/users/jonasseglare/repos", "events_url": "https://api.github.com/users/jonasseglare/events{/privacy}", "received_events_url": "https://api.github.com/users/jonasseglare/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-12T13:31:30Z", "updated_at": "2017-01-27T05:25:24Z", "closed_at": "2016-07-20T19:12:05Z", "author_association": "NONE", "body": "I am currently using msgpack to serialize my objects in C++, but the msgpack is not human readable, so I am looking at using JSON. The msgpack-c++ library has a very neat macro called `MSGPACK_DEFINE` which, in one line, adds msgpack serialization to a class, so that it can be serialized/deserialized to the msgpack format. See example here: https://github.com/msgpack/msgpack-c/wiki/v1_1_cpp_adaptor#intrusive-approach\n\n``` C++\n#include <msgpack.hpp>\n\nstruct your_class {\n    int a;\n    std::string b;\n    MSGPACK_DEFINE(a, b);\n};\n```\n\nDoes this JSON library feature a similar functionality? It would be very useful.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/278", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/278/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/278/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/278/events", "html_url": "https://github.com/nlohmann/json/issues/278", "id": 164054159, "node_id": "MDU6SXNzdWUxNjQwNTQxNTk=", "number": 278, "title": "Do not throw exception when default_value's type does not match the actual type", "user": {"login": "cezheng", "id": 2549967, "node_id": "MDQ6VXNlcjI1NDk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2549967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cezheng", "html_url": "https://github.com/cezheng", "followers_url": "https://api.github.com/users/cezheng/followers", "following_url": "https://api.github.com/users/cezheng/following{/other_user}", "gists_url": "https://api.github.com/users/cezheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/cezheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cezheng/subscriptions", "organizations_url": "https://api.github.com/users/cezheng/orgs", "repos_url": "https://api.github.com/users/cezheng/repos", "events_url": "https://api.github.com/users/cezheng/events{/privacy}", "received_events_url": "https://api.github.com/users/cezheng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 304694104, "node_id": "MDU6TGFiZWwzMDQ2OTQxMDQ=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20please%20discuss", "name": "state: please discuss", "color": "fbca04", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 44, "created_at": "2016-07-06T11:23:05Z", "updated_at": "2018-02-08T23:20:34Z", "closed_at": "2017-12-07T14:57:34Z", "author_association": "NONE", "body": "Thanks for this great library. I have been quite happy about almost every aspect of the library, except one point about the `value` method on object.\n\nConsider this sample code.\n\n``` cpp\nint main() {\n  nlohmann::json j = { {\"b\", nullptr}};\n  std::string result = j.value(\"b\", \"1\"); // std::domain_error: type must be string, but is null\n  return 0;\n}\n```\n\nWhen I'm using `value` to specify a default value of a key, I pretty much don't care about whether it exists or not, whether it is a valid value or not. It's pretty much like, if it failed to fetch a value of a specific type, then return the default_value I specified.\n\nSo I'm thinking about changing the following method: \nhttps://github.com/nlohmann/json/blob/develop/src/json.hpp#L3653\n\nto something like this:\n\n``` cpp\n    template <class ValueType, typename\n              std::enable_if<\n                  std::is_convertible<basic_json_t, ValueType>::value\n                  , int>::type = 0>\n    ValueType value(const typename object_t::key_type& key, ValueType default_value) const\n    {\n        // at only works for objects\n        if (is_object())\n        {\n            // if key is found, return value and given default value otherwise\n            const auto it = find(key);\n            if (it != end())\n            {\n                try\n                {\n                    return *it;\n                }\n                catch (...)\n                {\n                    // if some kind of exception occurred, return default value\n                    return default_value;\n                }\n            }\n            else\n            {\n                return default_value;\n            }\n        }\n        else\n        {\n            throw std::domain_error(\"cannot use value() with \" + type_name());\n        }\n    }\n```\n\nWhich I think will make the `value` method a lot easier to use. What do you think? @nlohmann \n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/277", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/277/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/277/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/277/events", "html_url": "https://github.com/nlohmann/json/issues/277", "id": 163745934, "node_id": "MDU6SXNzdWUxNjM3NDU5MzQ=", "number": 277, "title": "recursive data structures", "user": {"login": "froatsnook", "id": 10405574, "node_id": "MDQ6VXNlcjEwNDA1NTc0", "avatar_url": "https://avatars2.githubusercontent.com/u/10405574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froatsnook", "html_url": "https://github.com/froatsnook", "followers_url": "https://api.github.com/users/froatsnook/followers", "following_url": "https://api.github.com/users/froatsnook/following{/other_user}", "gists_url": "https://api.github.com/users/froatsnook/gists{/gist_id}", "starred_url": "https://api.github.com/users/froatsnook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froatsnook/subscriptions", "organizations_url": "https://api.github.com/users/froatsnook/orgs", "repos_url": "https://api.github.com/users/froatsnook/repos", "events_url": "https://api.github.com/users/froatsnook/events{/privacy}", "received_events_url": "https://api.github.com/users/froatsnook/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-07-04T21:51:20Z", "updated_at": "2016-07-06T14:30:50Z", "closed_at": "2016-07-05T04:19:17Z", "author_association": "NONE", "body": "Hi, thanks for the great library :). I had a gotcha when working with a recursive data structure.\n\n``` c++\nusing namespace std;\nusing namespace nlohmann;\nint main() {\n    string text = \"{\\\"A\\\":{\\\"id\\\":1,\\\"children\\\":{\\\"B\\\":{\\\"id\\\":2,\\\"children\\\":{\\\"C\\\":{\\\"id\\\":3,\\\"children\\\":{}}}}}}}\";\n    json data = json::parse(text);\n\n    json& curr = data;\n    curr = curr[\"A\"][\"children\"];\n\n    cout << \"curr=\" << curr.dump() << std::endl; // { B: ... } OK\n    cout << \"data=\" << data.dump() << std::endl; // { B: ... } expected { A: ... }\n}\n```\n\nI was able to work around this using a pointer:\n\n``` c++\n    string text = \"{\\\"A\\\":{\\\"id\\\":1,\\\"children\\\":{\\\"B\\\":{\\\"id\\\":2,\\\"children\\\":{\\\"C\\\":{\\\"id\\\":3,\\\"children\\\":{}}}}}}}\";\n    json data = json::parse(text);\n\n    json* curr = &data;\n    curr = &curr->operator[](\"A\").operator[](\"children\");\n\n    cout << \"curr=\" << curr->dump() << std::endl; // { B: ... } OK\n    cout << \"data=\" << data.dump() << std::endl; // { A: ... } OK\n```\n\nIs there a better way to work with `json` in this way?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/276", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/276/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/276/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/276/events", "html_url": "https://github.com/nlohmann/json/issues/276", "id": 163419027, "node_id": "MDU6SXNzdWUxNjM0MTkwMjc=", "number": 276, "title": "Cannot convert from 'json' to 'char'", "user": {"login": "DPD85", "id": 1238383, "node_id": "MDQ6VXNlcjEyMzgzODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1238383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DPD85", "html_url": "https://github.com/DPD85", "followers_url": "https://api.github.com/users/DPD85/followers", "following_url": "https://api.github.com/users/DPD85/following{/other_user}", "gists_url": "https://api.github.com/users/DPD85/gists{/gist_id}", "starred_url": "https://api.github.com/users/DPD85/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DPD85/subscriptions", "organizations_url": "https://api.github.com/users/DPD85/orgs", "repos_url": "https://api.github.com/users/DPD85/repos", "events_url": "https://api.github.com/users/DPD85/events{/privacy}", "received_events_url": "https://api.github.com/users/DPD85/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}, {"id": 344572510, "node_id": "MDU6TGFiZWwzNDQ1NzI1MTA=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20help%20needed", "name": "state: help needed", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-07-01T15:25:27Z", "updated_at": "2018-04-12T12:49:22Z", "closed_at": "2016-11-02T16:24:28Z", "author_association": "NONE", "body": "I'm not sure if this is an issue,\nbut it's not possible to assign a json object to a variable of type char.\nWith all other integral types it works, only the char type makes error.\n\nExample:\n\n``` cpp\n    json j;\n    j = 'B'; // ok, store a value as type number_integer\n    char b = j; // compiler error: cannot convert from 'json' to 'char'\n```\n"}]