[{"url": "https://api.github.com/repos/nlohmann/json/issues/874", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/874/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/874/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/874/events", "html_url": "https://github.com/nlohmann/json/issues/874", "id": 281877342, "node_id": "MDU6SXNzdWUyODE4NzczNDI=", "number": 874, "title": "Discuss: replace static \"iterator_wrapper\" function with \"items\" member function", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/20", "html_url": "https://github.com/nlohmann/json/milestone/20", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/20/labels", "id": 2984335, "node_id": "MDk6TWlsZXN0b25lMjk4NDMzNQ==", "number": 20, "title": "Release 3.1.0", "description": "The next release when backwards compatible features are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 30, "state": "closed", "created_at": "2017-12-17T10:12:33Z", "updated_at": "2018-02-01T23:09:13Z", "due_on": "2018-02-01T08:00:00Z", "closed_at": "2018-02-01T23:09:13Z"}, "comments": 8, "created_at": "2017-12-13T20:01:03Z", "updated_at": "2018-01-23T15:42:24Z", "closed_at": "2018-01-23T15:42:24Z", "author_association": "OWNER", "body": "The static `iterator_wrapper` function is a means to access objects' keys in a range for. Example:\r\n\r\n```cpp\r\njson j_object = {{\"one\", 1}, {\"two\", 2}};\r\n\r\nfor (auto& x : json::iterator_wrapper(j_object)) {\r\n    std::cout << \"key: \" << x.key() << \", value: \" << x.value() << '\\n';\r\n}\r\n```\r\n\r\nI never was happy about the name of the function and there were several issues where users expected `json` to behave as a map so that `.first` and `.second` could be used.\r\n\r\n## Question 1\r\n\r\nAs for the name: What about replacing the static `iterator_wrapper` function by a member function `items` (name motivated by Python)?\r\n\r\nUsage:\r\n\r\n```cpp\r\njson j_object = {{\"one\", 1}, {\"two\", 2}};\r\n\r\nfor (auto& x : j_object.items()) {\r\n    std::cout << \"key: \" << x.key() << \", value: \" << x.value() << '\\n';\r\n}\r\n```\r\n\r\n## Question 2\r\n\r\nOne could even think about supporting `.first` and `.second`, but this would mean pre-computing the values for `.key()` and `.value()` which would mean a bit of overhead.\r\n\r\nWhat do you think?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/872", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/872/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/872/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/872/events", "html_url": "https://github.com/nlohmann/json/issues/872", "id": 281762863, "node_id": "MDU6SXNzdWUyODE3NjI4NjM=", "number": 872, "title": "Visual Studio 2017 15.5 C++17 std::allocator deprecations", "user": {"login": "Kingston1", "id": 5409091, "node_id": "MDQ6VXNlcjU0MDkwOTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5409091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kingston1", "html_url": "https://github.com/Kingston1", "followers_url": "https://api.github.com/users/Kingston1/followers", "following_url": "https://api.github.com/users/Kingston1/following{/other_user}", "gists_url": "https://api.github.com/users/Kingston1/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kingston1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kingston1/subscriptions", "organizations_url": "https://api.github.com/users/Kingston1/orgs", "repos_url": "https://api.github.com/users/Kingston1/repos", "events_url": "https://api.github.com/users/Kingston1/events{/privacy}", "received_events_url": "https://api.github.com/users/Kingston1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-12-13T14:11:59Z", "updated_at": "2017-12-14T08:36:18Z", "closed_at": "2017-12-14T08:34:18Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\nVisual Studio 2017 15.5 update introduced a bunch of deprecation warnings when using C++17 feature set. It's trying to guide to better standards compliance.\r\n\r\n- Reproduction\r\n\r\nWhen compiling a project that uses json.hpp usage of std::allocator destroy() and construct() gets flagged.\r\n\r\nwarning C4996: 'std::allocator<std::map<StringType,nlohmann::basic_json<std::map,std::vector,StringType,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>,std::less<StringType>,std::allocator<std::pair<const StringType,nlohmann::basic_json<std::map,std::vector,StringType,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>>>>>::destroy': warning STL4010: Various members of std::allocator are deprecated in C++17. Use std::allocator_traits instead of accessing these members directly. You can define _SILENCE_CXX17_OLD_ALLOCATOR_MEMBERS_DEPRECATION_WARNING or _SILENCE_ALL_CXX17_DEPRECATION_WARNINGS to acknowledge that you have received this warning.\r\n\r\nwarning C4996: 'std::allocator<std::map<StringType,nlohmann::basic_json<std::map,std::vector,StringType,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>,std::less<StringType>,std::allocator<std::pair<const StringType,nlohmann::basic_json<std::map,std::vector,StringType,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>>>>>::construct': warning STL4010: Various members of std::allocator are deprecated in C++17. Use std::allocator_traits instead of accessing these members directly. You can define _SILENCE_CXX17_OLD_ALLOCATOR_MEMBERS_DEPRECATION_WARNING or _SILENCE_ALL_CXX17_DEPRECATION_WARNINGS to acknowledge that you have received this warning.\r\n\r\n\r\n- What is the expected behavior?\r\n\r\nThere should be no warnings. Improve allocator usage. I have suppressed the warnings in a local fork of json.hpp and everything still works. But who knows for how long.\r\n\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler]\r\nWindows 10 Pro x64\r\nVisual Studio 2017 15.5.1 professional (perhaps should be supported, I am not sure)\r\n\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\n\r\nHappens on both develop of today and Version 2.1.1"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/871", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/871/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/871/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/871/events", "html_url": "https://github.com/nlohmann/json/issues/871", "id": 281704370, "node_id": "MDU6SXNzdWUyODE3MDQzNzA=", "number": 871, "title": "basic_json::value throws exception instead of returning default value", "user": {"login": "unholytony", "id": 5261390, "node_id": "MDQ6VXNlcjUyNjEzOTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5261390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unholytony", "html_url": "https://github.com/unholytony", "followers_url": "https://api.github.com/users/unholytony/followers", "following_url": "https://api.github.com/users/unholytony/following{/other_user}", "gists_url": "https://api.github.com/users/unholytony/gists{/gist_id}", "starred_url": "https://api.github.com/users/unholytony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unholytony/subscriptions", "organizations_url": "https://api.github.com/users/unholytony/orgs", "repos_url": "https://api.github.com/users/unholytony/repos", "events_url": "https://api.github.com/users/unholytony/events{/privacy}", "received_events_url": "https://api.github.com/users/unholytony/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 735376215, "node_id": "MDU6TGFiZWw3MzUzNzYyMTU=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20needs%20more%20info", "name": "state: needs more info", "color": "f9d0c4", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-12-13T10:50:39Z", "updated_at": "2018-02-08T01:36:23Z", "closed_at": "2018-02-08T01:36:23Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\nMy apologies if this is expected behaviour, it just seemed somewhat unexpected.\r\n\r\nI am using json objects to represent configuration files that may or may not be present. Missing files are represented as default constructed json objects. \r\n\r\nWhen trying to retrieve a value using a json_pointer from an empty json object it is throwing an exception instead of returning my specified default value. This is happening because the empty json object is not an object and so it is failing the first test ( JSON_LIKELY(is_object()) ) and thus throwing an exception. This seems counter intuitive given the description of the function.\r\n\r\nI would have preferred it that if for any reason the json object could not return a valid value that it should return the default. As it currently stands I will have to wrap all value requests to the json object in a helper function to make sure that regardless of the state of the json object I always either get the stored value or the defaulted value. This essentially makes the \"value\" function pointless, for my needs at least.\r\n\r\nThis is on Visual Studio 2017\r\n\r\nThanks for a great library by the way."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/869", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/869/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/869/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/869/events", "html_url": "https://github.com/nlohmann/json/issues/869", "id": 280802257, "node_id": "MDU6SXNzdWUyODA4MDIyNTc=", "number": 869, "title": "Typo \"excpetion\"", "user": {"login": "francoisbecker", "id": 6452454, "node_id": "MDQ6VXNlcjY0NTI0NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6452454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/francoisbecker", "html_url": "https://github.com/francoisbecker", "followers_url": "https://api.github.com/users/francoisbecker/followers", "following_url": "https://api.github.com/users/francoisbecker/following{/other_user}", "gists_url": "https://api.github.com/users/francoisbecker/gists{/gist_id}", "starred_url": "https://api.github.com/users/francoisbecker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/francoisbecker/subscriptions", "organizations_url": "https://api.github.com/users/francoisbecker/orgs", "repos_url": "https://api.github.com/users/francoisbecker/repos", "events_url": "https://api.github.com/users/francoisbecker/events{/privacy}", "received_events_url": "https://api.github.com/users/francoisbecker/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 1, "created_at": "2017-12-10T11:34:19Z", "updated_at": "2017-12-11T07:56:15Z", "closed_at": "2017-12-11T07:56:14Z", "author_association": "NONE", "body": "Location: https://github.com/nlohmann/json/blob/06939452309560352806218740e7adebfb0fd986/src/json.hpp#L230"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/867", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/867/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/867/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/867/events", "html_url": "https://github.com/nlohmann/json/issues/867", "id": 280777727, "node_id": "MDU6SXNzdWUyODA3Nzc3Mjc=", "number": 867, "title": "Explicit array example in README.md incorrect", "user": {"login": "xmo", "id": 5964952, "node_id": "MDQ6VXNlcjU5NjQ5NTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5964952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xmo", "html_url": "https://github.com/xmo", "followers_url": "https://api.github.com/users/xmo/followers", "following_url": "https://api.github.com/users/xmo/following{/other_user}", "gists_url": "https://api.github.com/users/xmo/gists{/gist_id}", "starred_url": "https://api.github.com/users/xmo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xmo/subscriptions", "organizations_url": "https://api.github.com/users/xmo/orgs", "repos_url": "https://api.github.com/users/xmo/repos", "events_url": "https://api.github.com/users/xmo/events{/privacy}", "received_events_url": "https://api.github.com/users/xmo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 3, "created_at": "2017-12-10T03:13:29Z", "updated_at": "2017-12-11T07:56:17Z", "closed_at": "2017-12-11T07:56:17Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\nThe example in README.md to explicitly construct an array does not work. Maybe a typo/oversight?\r\n```cpp\r\n// a way to express an _array_ of key/value pairs [[\"currency\", \"USD\"], [\"value\", 42.99]]\r\njson array_not_object = { json::array({\"currency\", \"USD\"}), json::array({\"value\", 42.99}) };\r\n```\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\n```cpp\r\nusing json = nlohmann::json;\r\n// The original example prints: {\"currency\":\"USD\",\"value\":42.99}\r\njson array_not_object = { json::array({\"currency\", \"USD\"}), json::array({\"value\", 42.99}) };\r\nstd::cout << array_not_object.dump() << std::endl;\r\n// This seems to work correctly. It prints: [[\"currency\",\"USD\"],[\"value\",42.99]]\r\njson array_not_object_corrected = json::array({ { \"currency\", \"USD\" }, { \"value\", 42.99 } });\r\nstd::cout << array_not_object_corrected.dump() << std::endl;\r\n```\r\n\r\n- What is the expected behavior?\r\nConstructs an JSON array, i.e.  [[\"currency\", \"USD\"], [\"value\", 42.99]]\r\n\r\n- And what is the actual behavior instead?\r\nConstructs an JSON object, {\"currency\":\"USD\",\"value\":42.99}\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\nWindows + VS2015. Yes, it is.\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\nMaster branch"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/865", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/865/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/865/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/865/events", "html_url": "https://github.com/nlohmann/json/issues/865", "id": 280698516, "node_id": "MDU6SXNzdWUyODA2OTg1MTY=", "number": 865, "title": "why don't you release this from Feb. ?", "user": {"login": "CodeMasterYi", "id": 10430162, "node_id": "MDQ6VXNlcjEwNDMwMTYy", "avatar_url": "https://avatars1.githubusercontent.com/u/10430162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CodeMasterYi", "html_url": "https://github.com/CodeMasterYi", "followers_url": "https://api.github.com/users/CodeMasterYi/followers", "following_url": "https://api.github.com/users/CodeMasterYi/following{/other_user}", "gists_url": "https://api.github.com/users/CodeMasterYi/gists{/gist_id}", "starred_url": "https://api.github.com/users/CodeMasterYi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CodeMasterYi/subscriptions", "organizations_url": "https://api.github.com/users/CodeMasterYi/orgs", "repos_url": "https://api.github.com/users/CodeMasterYi/repos", "events_url": "https://api.github.com/users/CodeMasterYi/events{/privacy}", "received_events_url": "https://api.github.com/users/CodeMasterYi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-09T08:01:43Z", "updated_at": "2017-12-09T13:19:10Z", "closed_at": "2017-12-09T13:19:10Z", "author_association": "NONE", "body": "As the title.\r\nIs there any big movement recently?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/864", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/864/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/864/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/864/events", "html_url": "https://github.com/nlohmann/json/issues/864", "id": 280638154, "node_id": "MDU6SXNzdWUyODA2MzgxNTQ=", "number": 864, "title": "Make optional user-data available in from_json", "user": {"login": "chadlayton", "id": 543556, "node_id": "MDQ6VXNlcjU0MzU1Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/543556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chadlayton", "html_url": "https://github.com/chadlayton", "followers_url": "https://api.github.com/users/chadlayton/followers", "following_url": "https://api.github.com/users/chadlayton/following{/other_user}", "gists_url": "https://api.github.com/users/chadlayton/gists{/gist_id}", "starred_url": "https://api.github.com/users/chadlayton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chadlayton/subscriptions", "organizations_url": "https://api.github.com/users/chadlayton/orgs", "repos_url": "https://api.github.com/users/chadlayton/repos", "events_url": "https://api.github.com/users/chadlayton/events{/privacy}", "received_events_url": "https://api.github.com/users/chadlayton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-12-08T22:39:27Z", "updated_at": "2017-12-29T22:24:37Z", "closed_at": "2017-12-29T22:24:37Z", "author_association": "NONE", "body": "I'd like to be able to supply optional user-data to json::parse which would then be retrievable in from_json. A naive implementation might look like this:\r\n\r\n```c++\r\nvoid from_json(const json& j, image& img, void* user_data)\r\n{\r\n\tconst char* root_directory = reinterpret_cast<const char*>(user_data);\r\n\tstd::string filename = j[\"filename\"];\r\n\r\n\timg.data = load_external_dependency(std::string(root_directory) + \"//\" + filename);\r\n}\r\n\r\n// ...\r\n\r\njson j = json::parse(json_string, \"C:\\\\images\\\\\");\r\n```\r\n\r\nOr maybe this is already possible? Right now the only way I can see to do it requires global state or caching the data on the object and fixing it up after parsing.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/863", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/863/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/863/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/863/events", "html_url": "https://github.com/nlohmann/json/issues/863", "id": 280392896, "node_id": "MDU6SXNzdWUyODAzOTI4OTY=", "number": 863, "title": "json::parse throws std::invalid_argument when processing string generated by json::dump()", "user": {"login": "chenhongbao", "id": 300400, "node_id": "MDQ6VXNlcjMwMDQwMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/300400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenhongbao", "html_url": "https://github.com/chenhongbao", "followers_url": "https://api.github.com/users/chenhongbao/followers", "following_url": "https://api.github.com/users/chenhongbao/following{/other_user}", "gists_url": "https://api.github.com/users/chenhongbao/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenhongbao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenhongbao/subscriptions", "organizations_url": "https://api.github.com/users/chenhongbao/orgs", "repos_url": "https://api.github.com/users/chenhongbao/repos", "events_url": "https://api.github.com/users/chenhongbao/events{/privacy}", "received_events_url": "https://api.github.com/users/chenhongbao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-12-08T07:01:37Z", "updated_at": "2017-12-13T05:36:06Z", "closed_at": "2017-12-13T05:36:06Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\nI generate a JSON string with json::dump(), and pass to another thread. The thread calls json::parse() to get an object from the JSON string and it throws std::invalid_argument exception.\r\n\r\nThe following codes throws the exception:\r\n\r\n```cpp\r\nvoid unexpect(typename lexer::token_type t) const\r\n        {\r\n            if (t == last_token)\r\n            {\r\n                std::string error_msg = \"parse error - unexpected \";\r\n                error_msg += (last_token == lexer::token_type::parse_error ? (\"'\" +  m_lexer.get_token_string() +\r\n                              \"'\") :\r\n                              lexer::token_type_name(last_token));\r\n                JSON_THROW(std::invalid_argument(error_msg));\r\n            }\r\n        }\r\n```\r\n\r\nThe JSON string:\r\n\r\n```js\r\n{\"Data\":[{\"Bin\":205.0,\"DataName\":\"VolumeDistributionParameters\",\"Expandor\":0.100000001490116,\"Factor\":1.16281127035618,\"InstrumentID\":\"MA805\",\"M\":0.932498933747411,\"Mse\":0.00820842096151519,\"Sigma\":0.837557822465897,\"Theta\":0.0,\"UpdateDay\":\"20171208\",\"UpdateTime\":\"14:51:08\"}],\"ErrorCode\":0,\"ErrorMessage\":\"\u6b63\u786e\",\"Receiver\":\"ANY_RECEIVER\",\"Result\":\"OK\",\"Sender\":\"VOLDIST\",\"ServiceName\":\"VOLDIST\"}\r\n```\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\n\r\nTry the following code and exception will show up:\r\n\r\n```cpp\r\n#include \"json.hpp\"\r\nint main() {\r\n\tnlohmann::json jsonObj;\r\n\tstd::string jstr = R\"({\"Data\":[{\"Bin\":1790.0,\"DataName\":\"VolumeDistributionParameters\",\"Expandor\":0.100000001490116,\"Factor\":0.831193974614143,\"InstrumentID\":\"rb1805\",\"M\":0.640040159225464,\"Mse\":0.00439472794626309,\"Sigma\":0.747419960796833,\"Theta\":0.0,\"UpdateDay\":\"20171208\",\"UpdateTime\":\"14:55:08\"}],\"ErrorCode\":0,\"ErrorMessage\":\"\u6b63\u786e\",\"Receiver\":\"ANY_RECEIVER\",\"Result\":\"OK\",\"Sender\":\"VOLDIST\",\"ServiceName\":\"VOLDIST\"})\";\r\n\ttry\r\n\t{\r\n\t\tjsonObj = nlohmann::json::parse(jstr);\r\n\t}\r\n\tcatch (std::invalid_argument & invalid)\r\n\t{\r\n\t\tstd::cout << invalid.what() << std::endl;\r\n\t}\r\n    return 0;\r\n}\r\n```\r\n\r\n- What is the expected behavior?\r\n\r\nParse the JSON string and return an object.\r\n\r\n- And what is the actual behavior instead?\r\n\r\nThrowing an exception, the std::invalid_argument\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\n\r\nVS 2017 Community\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\n\r\nRelease 2.1.1\r\n\r\n- If you experience a compilation error: can you [compile and run the unit tests](https://github.com/nlohmann/json#execute-unit-tests)?\r\n\r\nNo.\r\n\r\n**Feature Request**\r\n\r\n- Describe the feature in as much detail as possible.\r\n\r\nAbove is enough maybe.\r\n\r\n- Include sample usage where appropriate.\r\n\r\nSee above."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/861", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/861/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/861/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/861/events", "html_url": "https://github.com/nlohmann/json/issues/861", "id": 280136984, "node_id": "MDU6SXNzdWUyODAxMzY5ODQ=", "number": 861, "title": "Casting to std::string not working in VS2015", "user": {"login": "jojastahl", "id": 15796520, "node_id": "MDQ6VXNlcjE1Nzk2NTIw", "avatar_url": "https://avatars0.githubusercontent.com/u/15796520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jojastahl", "html_url": "https://github.com/jojastahl", "followers_url": "https://api.github.com/users/jojastahl/followers", "following_url": "https://api.github.com/users/jojastahl/following{/other_user}", "gists_url": "https://api.github.com/users/jojastahl/gists{/gist_id}", "starred_url": "https://api.github.com/users/jojastahl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jojastahl/subscriptions", "organizations_url": "https://api.github.com/users/jojastahl/orgs", "repos_url": "https://api.github.com/users/jojastahl/repos", "events_url": "https://api.github.com/users/jojastahl/events{/privacy}", "received_events_url": "https://api.github.com/users/jojastahl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-12-07T13:51:31Z", "updated_at": "2018-01-29T19:12:35Z", "closed_at": "2018-01-29T19:12:35Z", "author_association": "NONE", "body": "The following doesn't compile in Visual Studio 2015 Update 3:\r\n\r\n```C++\r\n      json o = { { \"name\", \"value\" } };\r\n      std::string s1;\r\n      s1 = static_cast<std::string>(o[\"name\"]);  // Failing line\r\n```\r\n\r\nIt gives the following error:\r\n\r\n> error C2440: 'static_cast': cannot convert from 'nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>' to 'std::string'\r\n> note: No constructor could take the source type, or constructor overload resolution was ambiguous\r\n \r\nI tried this with the develop branch aswell as the 2.1.1 release.\r\nI'm using Visual Studio 2015 Update 3 with compiler version 19.00.24215.1 for x86\r\n\r\nThis is related to #188 and #167. I have to exclude the _MSC_VER check, so that the condition included in the VS build, too. However, this condition has been introduced to fix #167 as far as I understand. Was #167 a problem in VS2015 pre Update 3 only, or hasn't a test been added for #167? I can compile and run all unit-xxx tests with the check removed."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/859", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/859/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/859/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/859/events", "html_url": "https://github.com/nlohmann/json/issues/859", "id": 279541950, "node_id": "MDU6SXNzdWUyNzk1NDE5NTA=", "number": 859, "title": "code analysis: potential bug?", "user": {"login": "aj664", "id": 11025345, "node_id": "MDQ6VXNlcjExMDI1MzQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/11025345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aj664", "html_url": "https://github.com/aj664", "followers_url": "https://api.github.com/users/aj664/followers", "following_url": "https://api.github.com/users/aj664/following{/other_user}", "gists_url": "https://api.github.com/users/aj664/gists{/gist_id}", "starred_url": "https://api.github.com/users/aj664/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aj664/subscriptions", "organizations_url": "https://api.github.com/users/aj664/orgs", "repos_url": "https://api.github.com/users/aj664/repos", "events_url": "https://api.github.com/users/aj664/events{/privacy}", "received_events_url": "https://api.github.com/users/aj664/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-05T21:45:17Z", "updated_at": "2017-12-12T19:49:30Z", "closed_at": "2017-12-12T19:49:30Z", "author_association": "NONE", "body": "warning C28020: The expression '0<=_Param_(1)&&_Param_(1)<=64-1' is not true at this call.\r\n\r\nfrom the your  .h file:  the line the above comment is pointing at is the  number_buffer[i++  line.\r\n\r\n            // make sure the number has been processed completely\r\n            assert(x == 0);\r\n\r\n            if (is_negative)\r\n            {\r\n                // make sure there is capacity for the '-'\r\n                assert(i < number_buffer.size() - 2);\r\n                number_buffer[i++] = '-';\r\n            }\r\n\r\n\r\nthis code analysis tool gives off some rather strange false positives, so it might be nothing.. \r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/857", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/857/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/857/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/857/events", "html_url": "https://github.com/nlohmann/json/issues/857", "id": 279456873, "node_id": "MDU6SXNzdWUyNzk0NTY4NzM=", "number": 857, "title": "MSVC2017, 15.5 new issues.  ", "user": {"login": "aj664", "id": 11025345, "node_id": "MDQ6VXNlcjExMDI1MzQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/11025345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aj664", "html_url": "https://github.com/aj664", "followers_url": "https://api.github.com/users/aj664/followers", "following_url": "https://api.github.com/users/aj664/following{/other_user}", "gists_url": "https://api.github.com/users/aj664/gists{/gist_id}", "starred_url": "https://api.github.com/users/aj664/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aj664/subscriptions", "organizations_url": "https://api.github.com/users/aj664/orgs", "repos_url": "https://api.github.com/users/aj664/repos", "events_url": "https://api.github.com/users/aj664/events{/privacy}", "received_events_url": "https://api.github.com/users/aj664/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 13, "created_at": "2017-12-05T17:12:15Z", "updated_at": "2017-12-07T21:09:02Z", "closed_at": "2017-12-07T21:09:02Z", "author_association": "NONE", "body": "yesterday 2017.12.05  using MSVC2017, 15.4.4   was compiling v.2.1.1 fine.\r\ntoday, upgraded to MSVC2017 15.5..  now v2.1.1 has lots of std::allocator warnings/errors.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/853", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/853/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/853/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/853/events", "html_url": "https://github.com/nlohmann/json/issues/853", "id": 278828647, "node_id": "MDU6SXNzdWUyNzg4Mjg2NDc=", "number": 853, "title": "very basic: fetching string value/content without quotes", "user": {"login": "rnsanchez", "id": 87608, "node_id": "MDQ6VXNlcjg3NjA4", "avatar_url": "https://avatars0.githubusercontent.com/u/87608?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rnsanchez", "html_url": "https://github.com/rnsanchez", "followers_url": "https://api.github.com/users/rnsanchez/followers", "following_url": "https://api.github.com/users/rnsanchez/following{/other_user}", "gists_url": "https://api.github.com/users/rnsanchez/gists{/gist_id}", "starred_url": "https://api.github.com/users/rnsanchez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rnsanchez/subscriptions", "organizations_url": "https://api.github.com/users/rnsanchez/orgs", "repos_url": "https://api.github.com/users/rnsanchez/repos", "events_url": "https://api.github.com/users/rnsanchez/events{/privacy}", "received_events_url": "https://api.github.com/users/rnsanchez/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 5, "created_at": "2017-12-03T22:38:54Z", "updated_at": "2017-12-06T20:43:12Z", "closed_at": "2017-12-06T20:43:07Z", "author_association": "NONE", "body": "This is kind of a usage issue and not a bug/feature request.  I could be overlooking something trivial as I am very new to the library; if this is the case, please point in the right direcion/documentation.\r\n\r\n- What is the issue you have?\r\n\r\nWhen printing/using a value from a string element, the string is quoted:\r\n\r\n    $ ./test \r\n    \"value\"\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\n\r\n```\r\n    #include <iostream>\r\n    #include \"json.hpp\"\r\n    using json = nlohmann::json;\r\n    int main(int argc, char *argv[])\r\n    {\r\n        json j = R\"({\"one\": \"value\"})\"_json;\r\n        std::cout << j[\"one\"] << '\\n';\r\n    }\r\n```\r\n\r\n- What is the expected behavior?\r\n\r\nPrinting/fetching `value` as opposed to `\"value\"`.\r\n\r\nI understand that this could be a simple matter of picking out a substring, but searching in the documentation and existing issues (closed and open), I didn't find an idiomatic way of simply extracting the original string (no quotes as quotes are not escaped in the JSON blob).\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\n\r\nGCC (7.2.0).\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\n\r\nGit master, cc937deaf6430a5a02d366bb3cb7140693f20c0e\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/852", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/852/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/852/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/852/events", "html_url": "https://github.com/nlohmann/json/issues/852", "id": 278705873, "node_id": "MDU6SXNzdWUyNzg3MDU4NzM=", "number": 852, "title": "Ambiguous function call to get with pointer type and constant json object in VS2015 (15.4.4)", "user": {"login": "MaxSavenkov", "id": 11957018, "node_id": "MDQ6VXNlcjExOTU3MDE4", "avatar_url": "https://avatars3.githubusercontent.com/u/11957018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaxSavenkov", "html_url": "https://github.com/MaxSavenkov", "followers_url": "https://api.github.com/users/MaxSavenkov/followers", "following_url": "https://api.github.com/users/MaxSavenkov/following{/other_user}", "gists_url": "https://api.github.com/users/MaxSavenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaxSavenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaxSavenkov/subscriptions", "organizations_url": "https://api.github.com/users/MaxSavenkov/orgs", "repos_url": "https://api.github.com/users/MaxSavenkov/repos", "events_url": "https://api.github.com/users/MaxSavenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/MaxSavenkov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-02T18:29:29Z", "updated_at": "2017-12-05T18:26:49Z", "closed_at": "2017-12-05T18:26:49Z", "author_association": "NONE", "body": "This code will not compile in Visual Studio 2015 (15.4.4) with the latest nlohmann::json code:\r\n```\r\n    const nlohmann::json test;\r\n    const auto *s = test.get<const std::string*>();\r\n```\r\nThe error message is:\r\n\r\n```\r\n1>F:\\rolecraft2\\prj\\rolecraft\\ui\\ui_view_character.cpp(13): error C2668: 'nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>::get': ambiguous call to overloaded function\r\n1>F:\\rolecraft2\\ext\\nlohmann\\json.hpp(9669): note: could be 'const PointerType nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>::get<const std::string*,0>(void) noexcept const'\r\n1>        with\r\n1>        [\r\n1>            PointerType=const std::string *\r\n1>        ]\r\n1>F:\\rolecraft2\\ext\\nlohmann\\json.hpp(9657): note: or       'PointerType nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>::get<const std::string*,0>(void) noexcept'\r\n1>        with\r\n1>        [\r\n1>            PointerType=const std::string *\r\n1>        ]\r\n1>F:\\rolecraft2\\ext\\nlohmann\\json.hpp(9567): note: or       'ValueType nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>::get<const std::string*,const std::string*,0>(void) noexcept(<expr>) const'\r\n1>        with\r\n1>        [\r\n1>            ValueType=const std::string *\r\n1>        ]\r\n```\r\n\r\nSeems like Visual Studio's compiler can't decide whether to use ValueType version of get(), or PointerType one. The issue is easily worked around by using get_ptr() instead, but I still would like to report it, as it was working in older versions of the library (2.0.5, for example).\r\n\r\nThe issue can be fixed by adding \r\n```\r\n            not std::is_pointer<ValueType>::value and\r\n```\r\nto enable_if template of ValueType get() const noexcept method."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/851", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/851/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/851/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/851/events", "html_url": "https://github.com/nlohmann/json/issues/851", "id": 278454519, "node_id": "MDU6SXNzdWUyNzg0NTQ1MTk=", "number": 851, "title": "Sequential reading of JSON arrays", "user": {"login": "gjgiezeman", "id": 32670530, "node_id": "MDQ6VXNlcjMyNjcwNTMw", "avatar_url": "https://avatars2.githubusercontent.com/u/32670530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gjgiezeman", "html_url": "https://github.com/gjgiezeman", "followers_url": "https://api.github.com/users/gjgiezeman/followers", "following_url": "https://api.github.com/users/gjgiezeman/following{/other_user}", "gists_url": "https://api.github.com/users/gjgiezeman/gists{/gist_id}", "starred_url": "https://api.github.com/users/gjgiezeman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gjgiezeman/subscriptions", "organizations_url": "https://api.github.com/users/gjgiezeman/orgs", "repos_url": "https://api.github.com/users/gjgiezeman/repos", "events_url": "https://api.github.com/users/gjgiezeman/events{/privacy}", "received_events_url": "https://api.github.com/users/gjgiezeman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-12-01T12:40:17Z", "updated_at": "2018-01-29T18:12:35Z", "closed_at": "2018-01-29T18:12:35Z", "author_association": "NONE", "body": "I have an application that logs events as an array of JSON objects. The objects are written one by one to some network stream. I would like to process them when they arrive, not after the application has closed and the array is complete. \r\n\r\nSo, I would like to have (or be able to write) a class with an interface like this:\r\n```cpp\r\nclass SeqJsonReader {\r\n  public:\r\n    void append(std::string const &str);\r\n    void append(char const *str);\r\n    void append(char const *begin, char const *end);\r\n    bool has_value() const;\r\n    nlohmann::json next_value();\r\n    bool at_end() const; // true if closing ']' of array is processed.\r\n};\r\n```\r\n\r\nUsage could be like this:\r\n\r\n```cpp\r\nbool reader_loop(vector<string> const &msgs)\r\n{\r\n    SeqJsonReader reader;\r\n    auto cur = msgs.begin();\r\n    while (!reader.at_end() && cur!=msgs.end()) {\r\n        try {\r\n            reader.append(*cur++);\r\n            while (reader.has_value()) {\r\n                nlohmann::json val = reader.next_value();\r\n                // do something with val\r\n            }\r\n        } catch (...) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nint main()\r\n{\r\n    vector<string> msgs;\r\n    msgs.push_back(R\"([{\"product\":\"apple\",\"amount\":\"512\",\"unit\":\"gram\"})\");\r\n    msgs.push_back(R\"(,{\"product\":\"pear\")\");\r\n    msgs.push_back(R\"(},42,{\"product\":\"orange\",\"amount\":\"402\",\"unit\":\"gram\"}])\");\r\n    reader_loop(msgs);\r\n}\r\n```\r\n\r\nIn practice the strings (msgs) would come from a recv call of a socket or something like that.\r\n\r\nAm I right that currently this is hard to implement? It seems that I can't parse partial JSON input."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/850", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/850/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/850/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/850/events", "html_url": "https://github.com/nlohmann/json/issues/850", "id": 278041093, "node_id": "MDU6SXNzdWUyNzgwNDEwOTM=", "number": 850, "title": "How to put  object in the array as a member?", "user": {"login": "PuddingPengChen", "id": 8456152, "node_id": "MDQ6VXNlcjg0NTYxNTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/8456152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PuddingPengChen", "html_url": "https://github.com/PuddingPengChen", "followers_url": "https://api.github.com/users/PuddingPengChen/followers", "following_url": "https://api.github.com/users/PuddingPengChen/following{/other_user}", "gists_url": "https://api.github.com/users/PuddingPengChen/gists{/gist_id}", "starred_url": "https://api.github.com/users/PuddingPengChen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PuddingPengChen/subscriptions", "organizations_url": "https://api.github.com/users/PuddingPengChen/orgs", "repos_url": "https://api.github.com/users/PuddingPengChen/repos", "events_url": "https://api.github.com/users/PuddingPengChen/events{/privacy}", "received_events_url": "https://api.github.com/users/PuddingPengChen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-30T08:51:53Z", "updated_at": "2017-11-30T11:18:22Z", "closed_at": "2017-11-30T11:18:22Z", "author_association": "NONE", "body": "This not a bug report. I read the example, but not find the way to put an object as the array's member.\r\nI hope to use this . Thank you !\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/849", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/849/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/849/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/849/events", "html_url": "https://github.com/nlohmann/json/issues/849", "id": 278007178, "node_id": "MDU6SXNzdWUyNzgwMDcxNzg=", "number": 849, "title": "misclick, please ignore", "user": {"login": "WikiWikiWang", "id": 1289671, "node_id": "MDQ6VXNlcjEyODk2NzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1289671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WikiWikiWang", "html_url": "https://github.com/WikiWikiWang", "followers_url": "https://api.github.com/users/WikiWikiWang/followers", "following_url": "https://api.github.com/users/WikiWikiWang/following{/other_user}", "gists_url": "https://api.github.com/users/WikiWikiWang/gists{/gist_id}", "starred_url": "https://api.github.com/users/WikiWikiWang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WikiWikiWang/subscriptions", "organizations_url": "https://api.github.com/users/WikiWikiWang/orgs", "repos_url": "https://api.github.com/users/WikiWikiWang/repos", "events_url": "https://api.github.com/users/WikiWikiWang/events{/privacy}", "received_events_url": "https://api.github.com/users/WikiWikiWang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-30T05:58:36Z", "updated_at": "2017-11-30T05:59:59Z", "closed_at": "2017-11-30T05:59:20Z", "author_association": "NONE", "body": "misclick, please ignore"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/847", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/847/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/847/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/847/events", "html_url": "https://github.com/nlohmann/json/issues/847", "id": 277992340, "node_id": "MDU6SXNzdWUyNzc5OTIzNDA=", "number": 847, "title": "Make XML great again.", "user": {"login": "sfinktah", "id": 4650770, "node_id": "MDQ6VXNlcjQ2NTA3NzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/4650770?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfinktah", "html_url": "https://github.com/sfinktah", "followers_url": "https://api.github.com/users/sfinktah/followers", "following_url": "https://api.github.com/users/sfinktah/following{/other_user}", "gists_url": "https://api.github.com/users/sfinktah/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfinktah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfinktah/subscriptions", "organizations_url": "https://api.github.com/users/sfinktah/orgs", "repos_url": "https://api.github.com/users/sfinktah/repos", "events_url": "https://api.github.com/users/sfinktah/events{/privacy}", "received_events_url": "https://api.github.com/users/sfinktah/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-30T04:09:25Z", "updated_at": "2017-12-06T21:21:48Z", "closed_at": "2017-12-06T21:21:48Z", "author_association": "NONE", "body": "Firstly, sincere apologies, this is not an issue with your excellent JSON library, and should probably be tagged \"Wishful Thinking\" or some-such.\r\n\r\nHowever, I will post it anyway, and if I knew how, but regrettably can't cross-post it to the zenxml where it probably belong, since they're on sourceforge. (ikr).\r\n\r\ntl;dr - in your (no doubt) abundance of free time, would you consider \"fixing\" xen::xml (which I thought was the XML equiv. of your lovely library) to actually **be** as good as your library.\r\n\r\n```cpp\r\n    // Example struct\r\n    struct S {\r\n        float get_value()        { return externalFunctionGet(); }\r\n        void  set_value(float _) { externalFunctionSet(_);       }\r\n\r\n        // MSVC prototype extension\r\n        __declspec(property(get = get_value, put = set_value)) float value;\r\n    } s;\r\n\r\n    // JSON - lovely, works perfectly, of course.\r\n\r\n    json j;               // empty XML document\r\n    j[\"value\"] = s.value; // write property\r\n    s.value = j[\"value\"]; // read  property\r\n\r\n\r\n    // zen::Xml\r\n\r\n    zen::XmlDoc doc;       //empty XML document\r\n    zen::XmlOut out(doc);  // data output proxy\r\n    out[\"value\"](s.value); // so far so good, thought not very attractive syntax\r\n    \r\n    zen::XmlIn in(doc);    // data input proxy\r\n    in[\"value\"])(s.value); // **fails** because it requires a reference.\r\n```\r\n\r\nAt this point, you can probably see how zen::xml is at a major disadvantage, not having the (pretty magical) ability of nlohmann::json to automatically determine and convert types via assignment.\r\n\r\nThe problem wouldn't be insurmountable, if the struct just returned member values, one could simply change the getter and setter to use references.\r\n\r\nTechnically, this can actually be done anyway, but only in MSVC (love that standards compliance).\r\n\r\n```cpp\r\n    // shoddy \"fix\" - make functions return references (which will be temporary, though MSVC allows it)\r\n    // unknown whether it will actually function correctly, but it does compile.\r\n\r\n    struct S2 {\r\n        float& get_value()        { return externalFunctionGet(); }\r\n        void  set_value(float& _) { externalFunctionSet(_);       }\r\n\r\n        // MSVC prototype extension\r\n        __declspec(property(get = get_value, put = set_value)) float value;\r\n    } s2;\r\n\r\n    // zen::Xml example works fine\r\n\r\n    // JSON, not so much.\r\n\r\n    j[\"value\"] = s2.value; // write property\r\n    s2.value = j[\"value\"]; // **fails** (can't convert basic_json to float&)\r\n```\r\n\r\nNote: this is not a complaint that JSON fails in this instance...  I don't think it's the fault of your library -\r\n it's more likely to be a quirk of MSVC's property implemention - since it handles this fine: \r\n\r\n```cpp\r\n    auto fn = []() -> float& { static float f = 1.0f;  return f;  };\r\n    s2.value = fn();\r\n```\r\n\r\nAnyway, if any other readers have any suggestions for a solution, or perhaps **any** XML library that would accept something like this example from zen::Xml\r\n\r\n```cpp\r\n//write a value into one deeply nested XML element - note the different types used seamlessly: char[], wchar_t[], char, wchar_t, int\r\nzen::XmlOut out(doc);\r\nout[\"elemento1\"][L\"\u044d\u043b\u0435\u043c\u0435\u043d\u04422\"][L\"\u8981\u7d203\"][L\"\u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03bf4\"][\"elem5\"][L\"\u5143\u7d206\"][L'\u5143']['z'](-1234);```\r\n```\r\n\r\nWhich is very nice, but wholly unusable because it requires the same `&argument`.... \r\n\r\n... well any ideas at all would be appreciated.\r\n\r\nAnd again, I apologise."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/846", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/846/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/846/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/846/events", "html_url": "https://github.com/nlohmann/json/issues/846", "id": 277618234, "node_id": "MDU6SXNzdWUyNzc2MTgyMzQ=", "number": 846, "title": "Allow setting JSON_BuildTests=OFF from parent CMakeLists.txt", "user": {"login": "FDUdannychen", "id": 2918557, "node_id": "MDQ6VXNlcjI5MTg1NTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/2918557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FDUdannychen", "html_url": "https://github.com/FDUdannychen", "followers_url": "https://api.github.com/users/FDUdannychen/followers", "following_url": "https://api.github.com/users/FDUdannychen/following{/other_user}", "gists_url": "https://api.github.com/users/FDUdannychen/gists{/gist_id}", "starred_url": "https://api.github.com/users/FDUdannychen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FDUdannychen/subscriptions", "organizations_url": "https://api.github.com/users/FDUdannychen/orgs", "repos_url": "https://api.github.com/users/FDUdannychen/repos", "events_url": "https://api.github.com/users/FDUdannychen/events{/privacy}", "received_events_url": "https://api.github.com/users/FDUdannychen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/17", "html_url": "https://github.com/nlohmann/json/milestone/17", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/17/labels", "id": 2256017, "node_id": "MDk6TWlsZXN0b25lMjI1NjAxNw==", "number": 17, "title": "Release 3.0.1", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 7, "state": "closed", "created_at": "2017-01-16T19:53:23Z", "updated_at": "2017-12-29T19:16:17Z", "due_on": "2017-12-29T08:00:00Z", "closed_at": "2017-12-29T19:16:17Z"}, "comments": 9, "created_at": "2017-11-29T03:32:54Z", "updated_at": "2017-12-23T10:10:13Z", "closed_at": "2017-12-23T10:10:05Z", "author_association": "NONE", "body": "I think a standard BUILD_TESTING option is better in this case?\r\n\r\nMeanwhile, setting JSON_BuildTests=ON prevents the user from disabling the unit test build from parent CMakeLists.txt.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/845", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/845/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/845/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/845/events", "html_url": "https://github.com/nlohmann/json/issues/845", "id": 277408075, "node_id": "MDU6SXNzdWUyNzc0MDgwNzU=", "number": 845, "title": "Unit test fails for local-independent str-to-num", "user": {"login": "nadiasvertex", "id": 2034108, "node_id": "MDQ6VXNlcjIwMzQxMDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2034108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nadiasvertex", "html_url": "https://github.com/nadiasvertex", "followers_url": "https://api.github.com/users/nadiasvertex/followers", "following_url": "https://api.github.com/users/nadiasvertex/following{/other_user}", "gists_url": "https://api.github.com/users/nadiasvertex/gists{/gist_id}", "starred_url": "https://api.github.com/users/nadiasvertex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nadiasvertex/subscriptions", "organizations_url": "https://api.github.com/users/nadiasvertex/orgs", "repos_url": "https://api.github.com/users/nadiasvertex/repos", "events_url": "https://api.github.com/users/nadiasvertex/events{/privacy}", "received_events_url": "https://api.github.com/users/nadiasvertex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-11-28T14:39:29Z", "updated_at": "2017-12-19T22:45:12Z", "closed_at": "2017-12-19T22:45:12Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\n\r\nTests fail\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\n\r\nI am using the released version of 2.1.1\r\n\r\n```\r\n2017/11/28 09:27:46 -----------------------------------------------------------\r\n2017/11/28 09:27:46 | Configuration: debug\r\n2017/11/28 09:27:46 -----------------------------------------------------------\r\n2017/11/28 09:27:46 === Building json ===\r\n-- The CXX compiler identification is Clang 6.0.0\r\n-- Check for working CXX compiler using: Ninja\r\n-- Check for working CXX compiler using: Ninja -- works\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Detecting CXX compile features\r\n-- Detecting CXX compile features - done\r\n-- cotire 1.7.9 loaded.\r\n-- CXX target json_unit cotired without unity build.\r\n-- Configuring done\r\n-- Generating done\r\nCMake Warning:\r\n  Manually-specified variables were not used by the project:\r\n\r\n    MM_PACKAGE_VERSION\r\n\r\n\r\n-- Build files have been written to: /home/csnelson/meps/projects/mf/toolchain/.build/json/linux/amd64/debug\r\n[35/40] Building CXX object test/CMakeFiles/json_unit.dir/src/unit-constructor1.cpp.o\r\n/home/csnelson/meps/projects/mf/toolchain/json-2.1.1/test/src/unit-constructor1.cpp:1282:18: warning: 'basic_json' is deprecated [-Wdeprecated-declarations]\r\n            json j(ss);\r\n                 ^\r\n/home/csnelson/meps/projects/mf/toolchain/json-2.1.1/src/json.hpp:2395:5: note: 'basic_json' has been explicitly marked deprecated here\r\n    JSON_DEPRECATED\r\n    ^\r\n/home/csnelson/meps/projects/mf/toolchain/json-2.1.1/src/json.hpp:85:44: note: expanded from macro 'JSON_DEPRECATED'\r\n    #define JSON_DEPRECATED __attribute__((deprecated))\r\n                                           ^\r\n/home/csnelson/meps/projects/mf/toolchain/json-2.1.1/test/src/unit-constructor1.cpp:1290:18: warning: 'basic_json' is deprecated [-Wdeprecated-declarations]\r\n            json j(ss, [](int, json::parse_event_t, const json & val)\r\n                 ^\r\n/home/csnelson/meps/projects/mf/toolchain/json-2.1.1/src/json.hpp:2395:5: note: 'basic_json' has been explicitly marked deprecated here\r\n    JSON_DEPRECATED\r\n    ^\r\n/home/csnelson/meps/projects/mf/toolchain/json-2.1.1/src/json.hpp:85:44: note: expanded from macro 'JSON_DEPRECATED'\r\n    #define JSON_DEPRECATED __attribute__((deprecated))\r\n                                           ^\r\n/home/csnelson/meps/projects/mf/toolchain/json-2.1.1/test/src/unit-constructor1.cpp:1308:18: warning: 'basic_json' is deprecated [-Wdeprecated-declarations]\r\n            json j(f);\r\n                 ^\r\n/home/csnelson/meps/projects/mf/toolchain/json-2.1.1/src/json.hpp:2395:5: note: 'basic_json' has been explicitly marked deprecated here\r\n    JSON_DEPRECATED\r\n    ^\r\n/home/csnelson/meps/projects/mf/toolchain/json-2.1.1/src/json.hpp:85:44: note: expanded from macro 'JSON_DEPRECATED'\r\n    #define JSON_DEPRECATED __attribute__((deprecated))\r\n                                           ^\r\n3 warnings generated.\r\n[40/40] Linking CXX executable test/json_unit\r\nTest project /home/csnelson/meps/projects/mf/toolchain/.build/json/linux/amd64/debug\r\n    Start 1: json_unit_default\r\n    Start 2: json_unit_all\r\n1/2 Test #1: json_unit_default ................***Failed   10.01 sec\r\n\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\njson_unit is a Catch v1.7.2 host application.\r\nRun with -? for options\r\n\r\n-------------------------------------------------------------------------------\r\nregression tests\r\n  issue #378 - locale-independent num-to-str\r\n-------------------------------------------------------------------------------\r\n/home/csnelson/meps/projects/mf/toolchain/json-2.1.1/test/src/unit-regression.cpp:424\r\n...............................................................................\r\n\r\n/home/csnelson/meps/projects/mf/toolchain/json-2.1.1/test/src/unit-regression.cpp:434: FAILED:\r\n  CHECK( strcmp(buf.data(), \"12345,67\") == 0 )\r\nwith expansion:\r\n  2 == 0\r\n\r\n-------------------------------------------------------------------------------\r\nregression tests\r\n  issue #379 - locale-independent str-to-num\r\n-------------------------------------------------------------------------------\r\n/home/csnelson/meps/projects/mf/toolchain/json-2.1.1/test/src/unit-regression.cpp:444\r\n...............................................................................\r\n\r\n/home/csnelson/meps/projects/mf/toolchain/json-2.1.1/test/src/unit-regression.cpp:453: FAILED:\r\n  CHECK( std::strtod(\"3,14\", nullptr) == 3.14 )\r\nwith expansion:\r\n  3.0 == 3.14\r\n\r\n/home/csnelson/meps/projects/mf/toolchain/json-2.1.1/test/src/unit-regression.cpp:456: FAILED:\r\n  CHECK( std::strtod(\"3.14\", nullptr) == 3 )\r\nwith expansion:\r\n  3.14 == 3\r\n\r\n===============================================================================\r\ntest cases:      49 |      48 passed | 1 failed\r\nassertions: 2305562 | 2305559 passed | 3 failed\r\n\r\n\r\n2/2 Test #2: json_unit_all ....................***Failed   64.71 sec\r\n\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\njson_unit is a Catch v1.7.2 host application.\r\nRun with -? for options\r\n\r\n-------------------------------------------------------------------------------\r\nregression tests\r\n  issue #378 - locale-independent num-to-str\r\n-------------------------------------------------------------------------------\r\n/home/csnelson/meps/projects/mf/toolchain/json-2.1.1/test/src/unit-regression.cpp:424\r\n...............................................................................\r\n\r\n/home/csnelson/meps/projects/mf/toolchain/json-2.1.1/test/src/unit-regression.cpp:434: FAILED:\r\n  CHECK( strcmp(buf.data(), \"12345,67\") == 0 )\r\nwith expansion:\r\n  2 == 0\r\n\r\n-------------------------------------------------------------------------------\r\nregression tests\r\n  issue #379 - locale-independent str-to-num\r\n-------------------------------------------------------------------------------\r\n/home/csnelson/meps/projects/mf/toolchain/json-2.1.1/test/src/unit-regression.cpp:444\r\n...............................................................................\r\n\r\n/home/csnelson/meps/projects/mf/toolchain/json-2.1.1/test/src/unit-regression.cpp:453: FAILED:\r\n  CHECK( std::strtod(\"3,14\", nullptr) == 3.14 )\r\nwith expansion:\r\n  3.0 == 3.14\r\n\r\n/home/csnelson/meps/projects/mf/toolchain/json-2.1.1/test/src/unit-regression.cpp:456: FAILED:\r\n  CHECK( std::strtod(\"3.14\", nullptr) == 3 )\r\nwith expansion:\r\n  3.14 == 3\r\n\r\n===============================================================================\r\ntest cases:       53 |       52 passed | 1 failed\r\nassertions: 11202643 | 11202640 passed | 3 failed\r\n\r\n\r\n\r\n0% tests passed, 2 tests failed out of 2\r\n\r\nTotal Test time (real) =  64.71 sec\r\n\r\nThe following tests FAILED:\r\n          1 - json_unit_default (Failed)\r\n          2 - json_unit_all (Failed)\r\nErrors while running CTest\r\nUnable to build project.\r\n```\r\n\r\n\r\n"}]