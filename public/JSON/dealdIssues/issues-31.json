[{"url": "https://api.github.com/repos/nlohmann/json/issues/92", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/92/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/92/events", "html_url": "https://github.com/nlohmann/json/issues/92", "id": 89227665, "node_id": "MDU6SXNzdWU4OTIyNzY2NQ==", "number": 92, "title": "init error", "user": {"login": "likebeta", "id": 3068426, "node_id": "MDQ6VXNlcjMwNjg0MjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3068426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/likebeta", "html_url": "https://github.com/likebeta", "followers_url": "https://api.github.com/users/likebeta/followers", "following_url": "https://api.github.com/users/likebeta/following{/other_user}", "gists_url": "https://api.github.com/users/likebeta/gists{/gist_id}", "starred_url": "https://api.github.com/users/likebeta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/likebeta/subscriptions", "organizations_url": "https://api.github.com/users/likebeta/orgs", "repos_url": "https://api.github.com/users/likebeta/repos", "events_url": "https://api.github.com/users/likebeta/events{/privacy}", "received_events_url": "https://api.github.com/users/likebeta/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-06-18T08:06:32Z", "updated_at": "2015-06-20T12:38:48Z", "closed_at": "2015-06-19T06:06:54Z", "author_association": "CONTRIBUTOR", "body": "code:\n\n``` c++\n#include <iostream>\nusing namespace std;\n\n#define print(j) cout << \" \" #j  << \": \" << j  << endl\n\nint main(int argc, char** argv)\n{\n    // case 1\n    json j = {\n        { \"limit\", 1000 },\n        { \"reward\", {{ \"chip\", 1000 },{ \"chip\", 2000 },{ \"chip\", 3000 }}}\n    };\n    print(j);\n\n    // case 2\n    j = {\n        { \"limit\", 1000 },\n        { \"reward\", json::array({ { \"chip\", 1000 }, { \"chip\", 2000 }, { \"chip\", 3000 } }) }\n    };\n    print(j);\n\n    // case 3\n    j[\"limit\"] = 1000;\n    j[\"reward\"] = json::array({ { \"chip\", 1000 }, { \"chip\", 2000 }, { \"chip\", 3000 } });\n    print(j);\n\n    return 0;\n}\n```\n\noutput:\n\n``` sh\n[king@localhost Project1]$ sh make.sh \n j: {\"limit\":1000,\"reward\":{\"chip\":1000}}\n j: {\"limit\":1000,\"reward\":[[\"chip\",1000],[\"chip\",2000],[\"chip\",3000]]}\n j: {\"limit\":1000,\"reward\":[[\"chip\",1000],[\"chip\",2000],[\"chip\",3000]]}\n```\n\nIt is strange  in case 1,  why get this result?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/91", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/91/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/91/events", "html_url": "https://github.com/nlohmann/json/issues/91", "id": 88447264, "node_id": "MDU6SXNzdWU4ODQ0NzI2NA==", "number": 91, "title": "access by (const) reference", "user": {"login": "ropuls", "id": 9431950, "node_id": "MDQ6VXNlcjk0MzE5NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9431950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ropuls", "html_url": "https://github.com/ropuls", "followers_url": "https://api.github.com/users/ropuls/followers", "following_url": "https://api.github.com/users/ropuls/following{/other_user}", "gists_url": "https://api.github.com/users/ropuls/gists{/gist_id}", "starred_url": "https://api.github.com/users/ropuls/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ropuls/subscriptions", "organizations_url": "https://api.github.com/users/ropuls/orgs", "repos_url": "https://api.github.com/users/ropuls/repos", "events_url": "https://api.github.com/users/ropuls/events{/privacy}", "received_events_url": "https://api.github.com/users/ropuls/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 23, "created_at": "2015-06-15T14:44:10Z", "updated_at": "2016-11-13T22:38:10Z", "closed_at": "2015-06-29T18:53:07Z", "author_association": "NONE", "body": "Hi Niels,\n\nyet another question. I try to avoid copying whereever possible (during serialization). So when:\n\n``` c++\njson j = \"foo\";\nif (j.is_string) {\n  const std::string &s = j.get<const std::string &s>();\n  // do something with s\n}\n```\n\nthe compiler tells us:\n\n```\njson.hpp:1010: error: forming pointer to reference type 'const std::basic_string<char>&'\n         return get_impl(static_cast<T*>(nullptr));\n                        ^\n```\n\nwith a static cast:\n\n``` c++\n  const std::string &s = static_cast<const std::string &>(j);\n```\n\nthe compiler is happy, but apparently returns a reference to a temporary, so s is dangling.\n\nHave you got any hints on how to access underlying memory (for string, int, ...) so we can avoid copying the values?\n\nwould \n\n``` c++\ntemplate<typename T> T* get_ptr();\ntemplate<typename T> const T* get_ptr<T>() const;\n```\n\nbe acceptable?\n\nThanks and cheers,\n  Roman\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/90", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/90/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/90/events", "html_url": "https://github.com/nlohmann/json/issues/90", "id": 88429961, "node_id": "MDU6SXNzdWU4ODQyOTk2MQ==", "number": 90, "title": "is_integer and is_float tests", "user": {"login": "ropuls", "id": 9431950, "node_id": "MDQ6VXNlcjk0MzE5NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9431950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ropuls", "html_url": "https://github.com/ropuls", "followers_url": "https://api.github.com/users/ropuls/followers", "following_url": "https://api.github.com/users/ropuls/following{/other_user}", "gists_url": "https://api.github.com/users/ropuls/gists{/gist_id}", "starred_url": "https://api.github.com/users/ropuls/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ropuls/subscriptions", "organizations_url": "https://api.github.com/users/ropuls/orgs", "repos_url": "https://api.github.com/users/ropuls/repos", "events_url": "https://api.github.com/users/ropuls/events{/privacy}", "received_events_url": "https://api.github.com/users/ropuls/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2015-06-15T13:39:31Z", "updated_at": "2016-11-13T22:38:10Z", "closed_at": "2015-06-15T14:37:53Z", "author_association": "NONE", "body": "Hi Niels,\n\nexcellent library, thanks!\n\nwould it be possible to add two more members, namely:\n\n``` c++\n    inline bool is_float() const noexcept {\n        return (m_type == value_t::number_float);\n    }\n\n    inline bool is_integer() const noexcept {\n        return (m_type == value_t::number_integer);\n    }\n```\n\nthat would be extremly helpful when it comes to serializing json i.e. via msgpack or saving a json into mysql.\n\nThanks and Cheers,\n  Roman\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/89", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/89/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/89/events", "html_url": "https://github.com/nlohmann/json/issues/89", "id": 88414136, "node_id": "MDU6SXNzdWU4ODQxNDEzNg==", "number": 89, "title": "Nonstandard integer type", "user": {"login": "arnaudbrejeon", "id": 21390, "node_id": "MDQ6VXNlcjIxMzkw", "avatar_url": "https://avatars3.githubusercontent.com/u/21390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arnaudbrejeon", "html_url": "https://github.com/arnaudbrejeon", "followers_url": "https://api.github.com/users/arnaudbrejeon/followers", "following_url": "https://api.github.com/users/arnaudbrejeon/following{/other_user}", "gists_url": "https://api.github.com/users/arnaudbrejeon/gists{/gist_id}", "starred_url": "https://api.github.com/users/arnaudbrejeon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arnaudbrejeon/subscriptions", "organizations_url": "https://api.github.com/users/arnaudbrejeon/orgs", "repos_url": "https://api.github.com/users/arnaudbrejeon/repos", "events_url": "https://api.github.com/users/arnaudbrejeon/events{/privacy}", "received_events_url": "https://api.github.com/users/arnaudbrejeon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2015-06-15T12:41:06Z", "updated_at": "2015-06-15T18:42:33Z", "closed_at": "2015-06-15T17:45:30Z", "author_association": "NONE", "body": "Hi,\n\nthe following does not build on OSX with C++14:\n\n```\n#include \"nlohmann.json.hpp\"\nusing json = nlohmann::basic_json<std::map, std::vector, std::string, bool, int32_t, float>;\nint main(int argc, const char * argv[]) {   \n    json j;\n    j[\"int_1\"] = 1; << Conversion from 'int' to 'nlohmann::basic_json<std::map, std::vector, std::__1::basic_string<char>, bool, int, float, std::allocator>' is ambiguous\n    return 0;\n}\n```\n\nI'd rather use number type _int32_t_ instead of the default _int64_t_ (which builds properly). Do you have any idea how to fix this issue?\nThank you,\n\nArnaud\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/84", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/84/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/84/events", "html_url": "https://github.com/nlohmann/json/issues/84", "id": 85639192, "node_id": "MDU6SXNzdWU4NTYzOTE5Mg==", "number": 84, "title": "static library build", "user": {"login": "nickdesaulniers", "id": 1823839, "node_id": "MDQ6VXNlcjE4MjM4Mzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1823839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickdesaulniers", "html_url": "https://github.com/nickdesaulniers", "followers_url": "https://api.github.com/users/nickdesaulniers/followers", "following_url": "https://api.github.com/users/nickdesaulniers/following{/other_user}", "gists_url": "https://api.github.com/users/nickdesaulniers/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickdesaulniers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickdesaulniers/subscriptions", "organizations_url": "https://api.github.com/users/nickdesaulniers/orgs", "repos_url": "https://api.github.com/users/nickdesaulniers/repos", "events_url": "https://api.github.com/users/nickdesaulniers/events{/privacy}", "received_events_url": "https://api.github.com/users/nickdesaulniers/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-05T21:46:10Z", "updated_at": "2015-06-20T12:39:01Z", "closed_at": "2015-06-05T23:31:23Z", "author_association": "NONE", "body": "I'm trying to build this as a static lib that I can link to, but must admit I'm out of my depth.  Is it possible?  I've added the usual cmake commands but am getting various errors.  If I try to build the archive manually, I get that it's empty.  If I compile `src/json.hpp` to an object file, it's only 200B in file size, which seems wrong, `objdump` doesn't print any symbols from it, and `ar` complains that the would be archive would be wrong.  What am I missing here?  I recognize the library is meant to be included as a header, and static linking doesn't save me from having to import the forward declarations anyways.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/83", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/83/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/83/events", "html_url": "https://github.com/nlohmann/json/issues/83", "id": 85636191, "node_id": "MDU6SXNzdWU4NTYzNjE5MQ==", "number": 83, "title": "range based for loop for objects", "user": {"login": "nickdesaulniers", "id": 1823839, "node_id": "MDQ6VXNlcjE4MjM4Mzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1823839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickdesaulniers", "html_url": "https://github.com/nickdesaulniers", "followers_url": "https://api.github.com/users/nickdesaulniers/followers", "following_url": "https://api.github.com/users/nickdesaulniers/following{/other_user}", "gists_url": "https://api.github.com/users/nickdesaulniers/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickdesaulniers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickdesaulniers/subscriptions", "organizations_url": "https://api.github.com/users/nickdesaulniers/orgs", "repos_url": "https://api.github.com/users/nickdesaulniers/repos", "events_url": "https://api.github.com/users/nickdesaulniers/events{/privacy}", "received_events_url": "https://api.github.com/users/nickdesaulniers/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 31, "created_at": "2015-06-05T21:23:59Z", "updated_at": "2018-05-25T14:43:40Z", "closed_at": "2016-01-14T21:17:52Z", "author_association": "NONE", "body": "Note that the readme recommends this syntax for iterating key/value pairs of an object:\n\n``` c++\nfor (json::iterator it = o.begin(); it != o.end(); ++it) {\n  std::cout << it.key() << \" : \" << it.value() << \"\\n\";\n}\n```\n\nIf we try to iterate an nlohmann::json object using a range based for, we only seem to get the value:\n\n``` c++\n// clang++ example.cpp -std=c++11 -I lib/\n#include \"json.hpp\"\nint main () {\n  using nlohmann::json;\n  json j = json::parse(\"{ \\\"hello\\\": \\\"world\\\", \\\"name\\\": \\\"Nick\\\" }\");\n  for (json::iterator it = j.begin(); it != j.end(); ++it) {\n    std::cout << it.key() << \" : \" << it.value() << \"\\n\";\n  }\n  for (auto pair : j) {\n    std::cout << pair << \"\\n\";\n    // std::cout << pair.first << \" : \" << pair.second << \"\\n\";\n  }\n\n  std::map<std::string, std::string> map { {\"hello\", \"world\"}, {\"name\", \"Nick\"} };\n  for (auto& pair: map) {\n    std::cout << pair.first << \" : \" << pair.second << \"\\n\";\n    //std::cout << pair << \"\\n\";\n  }\n}\n```\n\nprints:\n\n```\nhello : \"world\"\nname : \"Nick\"\n\"world\"\n\"Nick\"\nhello : world\nname : Nick\n```\n\nUsing [some fancyness](http://stackoverflow.com/a/6963910/1027966), it should be possible to provide an API similar to std::map et al for iterating key value pairs of an object.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/82", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/82/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/82/events", "html_url": "https://github.com/nlohmann/json/issues/82", "id": 84935986, "node_id": "MDU6SXNzdWU4NDkzNTk4Ng==", "number": 82, "title": "lexer::get_number return NAN", "user": {"login": "Ingener74", "id": 3167594, "node_id": "MDQ6VXNlcjMxNjc1OTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/3167594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ingener74", "html_url": "https://github.com/Ingener74", "followers_url": "https://api.github.com/users/Ingener74/followers", "following_url": "https://api.github.com/users/Ingener74/following{/other_user}", "gists_url": "https://api.github.com/users/Ingener74/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ingener74/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ingener74/subscriptions", "organizations_url": "https://api.github.com/users/Ingener74/orgs", "repos_url": "https://api.github.com/users/Ingener74/repos", "events_url": "https://api.github.com/users/Ingener74/events{/privacy}", "received_events_url": "https://api.github.com/users/Ingener74/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2015-06-04T06:14:49Z", "updated_at": "2015-06-08T05:39:38Z", "closed_at": "2015-06-08T05:39:38Z", "author_association": "NONE", "body": "![screenshot_2015-06-04_09-12-02](https://cloud.githubusercontent.com/assets/3167594/7978072/1d45ec8e-0a9a-11e5-98b9-2a98637a0436.png)\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/80", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/80/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/80/events", "html_url": "https://github.com/nlohmann/json/issues/80", "id": 84716525, "node_id": "MDU6SXNzdWU4NDcxNjUyNQ==", "number": 80, "title": "MinGW have no std::to_string", "user": {"login": "Ingener74", "id": 3167594, "node_id": "MDQ6VXNlcjMxNjc1OTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/3167594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ingener74", "html_url": "https://github.com/Ingener74", "followers_url": "https://api.github.com/users/Ingener74/followers", "following_url": "https://api.github.com/users/Ingener74/following{/other_user}", "gists_url": "https://api.github.com/users/Ingener74/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ingener74/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ingener74/subscriptions", "organizations_url": "https://api.github.com/users/Ingener74/orgs", "repos_url": "https://api.github.com/users/Ingener74/repos", "events_url": "https://api.github.com/users/Ingener74/events{/privacy}", "received_events_url": "https://api.github.com/users/Ingener74/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2015-06-03T18:50:05Z", "updated_at": "2016-11-13T22:38:10Z", "closed_at": "2015-06-04T18:00:38Z", "author_association": "NONE", "body": "c:/Users/Pavel/workspace/Jupiter/3rdparty/json/src/json.hpp:2015:24: error: 'to_string' is not a member of 'std'\n\nplease use somethink like that:\ntemplate<typename T>\nstd::string to_string(T t){\n    std::stringstream s;\n    s << t;\n    return s.str();\n}\n\nsorry. my english is bad\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/78", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/78/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/78/events", "html_url": "https://github.com/nlohmann/json/issues/78", "id": 82388617, "node_id": "MDU6SXNzdWU4MjM4ODYxNw==", "number": 78, "title": "Incorrect behaviour of basic_json::count method", "user": {"login": "drewpts", "id": 10561098, "node_id": "MDQ6VXNlcjEwNTYxMDk4", "avatar_url": "https://avatars2.githubusercontent.com/u/10561098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewpts", "html_url": "https://github.com/drewpts", "followers_url": "https://api.github.com/users/drewpts/followers", "following_url": "https://api.github.com/users/drewpts/following{/other_user}", "gists_url": "https://api.github.com/users/drewpts/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewpts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewpts/subscriptions", "organizations_url": "https://api.github.com/users/drewpts/orgs", "repos_url": "https://api.github.com/users/drewpts/repos", "events_url": "https://api.github.com/users/drewpts/events{/privacy}", "received_events_url": "https://api.github.com/users/drewpts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-05-29T11:25:28Z", "updated_at": "2015-05-30T13:18:52Z", "closed_at": "2015-05-30T09:53:26Z", "author_association": "NONE", "body": "Hello again. :)\nIf we have code:\n\n``` cpp\n#include \"json.hpp\"\n#include <iostream>\nusing nlohmann::json;\nint main()\n{\n        json k = { {\"a\", \"A\"}, {\"a\", \"AA\"} };\n        std::cout << k.count(\"a\") << '\\n';\n        return 0;\n}\n```\n\nAccordingly to comment:\n\n``` cpp\n/// returns the number of occurrences of a key in an object\n    inline size_type count(typename object_t::key_type key) const\n    {\n        // return 0 for all nonobject types\n        return (m_type == value_t::object) ? m_value.object->count(key) : 0;\n    }\n```\n\nwe should got \"2\" in program output. By I got \"1\".\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/77", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/77/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/77/events", "html_url": "https://github.com/nlohmann/json/issues/77", "id": 81853551, "node_id": "MDU6SXNzdWU4MTg1MzU1MQ==", "number": 77, "title": "Invoking is_array() function creates \"null\" value", "user": {"login": "drewpts", "id": 10561098, "node_id": "MDQ6VXNlcjEwNTYxMDk4", "avatar_url": "https://avatars2.githubusercontent.com/u/10561098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewpts", "html_url": "https://github.com/drewpts", "followers_url": "https://api.github.com/users/drewpts/followers", "following_url": "https://api.github.com/users/drewpts/following{/other_user}", "gists_url": "https://api.github.com/users/drewpts/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewpts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewpts/subscriptions", "organizations_url": "https://api.github.com/users/drewpts/orgs", "repos_url": "https://api.github.com/users/drewpts/repos", "events_url": "https://api.github.com/users/drewpts/events{/privacy}", "received_events_url": "https://api.github.com/users/drewpts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-28T09:53:18Z", "updated_at": "2015-05-30T13:27:13Z", "closed_at": "2015-05-30T13:27:04Z", "author_association": "NONE", "body": "Hello.\n\n``` cpp\n if (j[SUBPR_DESCR].is_array()) {\n                if (j[SUBPR_DESCR].at(0).is_string() == false)\n                    return json::parse(error_code + \"Wrong values type of subprojects key!\\\"}\");\n            } else if (!j[SUBPR_DESCR].is_null() && !j[SUBPR_DESCR].is_array()) {\n                return json::parse(error_code + \"Corrupted or absent subprojects key!\\\"}\");\n            }\n```\n\nAfter invoking such function on json object data with key SUBPR_DESCR appearing with value \"none\".\n\n![2015-05-28 12 46 21](https://cloud.githubusercontent.com/assets/10561098/7857293/059ef150-0538-11e5-9de7-c8f5f48a1c11.png)\n![2015-05-28 12 46 31](https://cloud.githubusercontent.com/assets/10561098/7857292/059dab10-0538-11e5-96b0-030987fc02c6.png)\n\n[offtop] Lol, horrible char \\* to string casting at the bottom of image :hamster: [/offtop]\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/76", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/76/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/76/events", "html_url": "https://github.com/nlohmann/json/issues/76", "id": 81144170, "node_id": "MDU6SXNzdWU4MTE0NDE3MA==", "number": 76, "title": "dump() / parse() not idempotent", "user": {"login": "benbo75", "id": 63011, "node_id": "MDQ6VXNlcjYzMDEx", "avatar_url": "https://avatars2.githubusercontent.com/u/63011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benbo75", "html_url": "https://github.com/benbo75", "followers_url": "https://api.github.com/users/benbo75/followers", "following_url": "https://api.github.com/users/benbo75/following{/other_user}", "gists_url": "https://api.github.com/users/benbo75/gists{/gist_id}", "starred_url": "https://api.github.com/users/benbo75/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benbo75/subscriptions", "organizations_url": "https://api.github.com/users/benbo75/orgs", "repos_url": "https://api.github.com/users/benbo75/repos", "events_url": "https://api.github.com/users/benbo75/events{/privacy}", "received_events_url": "https://api.github.com/users/benbo75/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2015-05-26T21:30:05Z", "updated_at": "2015-05-31T15:21:27Z", "closed_at": "2015-05-31T13:47:40Z", "author_association": "NONE", "body": "If you construct a string of the JSON payload using `dump()` and then use `parse()` to deserialize it, the contents of the former object don't match the latter when there are escape characters.  Example pseudo-code\n\n```\nvoid test_case()\n{\n    nlohmann::json fields;\n    fields[\"one\"] = std::string(\"one\");\n    fields[\"two\"] = std::string(\"two three\");\n    fields[\"three\"] = std::string(\"three \\\"four\\\"\");\n    std::string payload = fields.dump();\n\n    nlohmann::json parsed_fields = fields_t::parse(payload);\n    test_check_eq(parsed_fields.size(), fields.size());\n    test_check_eq(parsed_fields[\"one\"], fields[\"one\"]);\n    test_check_eq(parsed_fields[\"two\"], fields[\"two\"]);\n    test_check_eq(parsed_fields[\"three\"], fields[\"three\"]);\n}\n```\n\nHere `parsed_fields[\"three\"]  == std::string(\"three \\\\\\\"four\\\\\\\"\")`.  If this is expected, then what should be done to `parsed_fields` in this case to recover the original contents?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/70", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/70/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/70/events", "html_url": "https://github.com/nlohmann/json/issues/70", "id": 73462498, "node_id": "MDU6SXNzdWU3MzQ2MjQ5OA==", "number": 70, "title": "Handle infinity and NaN cases", "user": {"login": "EricMCornelius", "id": 748917, "node_id": "MDQ6VXNlcjc0ODkxNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/748917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EricMCornelius", "html_url": "https://github.com/EricMCornelius", "followers_url": "https://api.github.com/users/EricMCornelius/followers", "following_url": "https://api.github.com/users/EricMCornelius/following{/other_user}", "gists_url": "https://api.github.com/users/EricMCornelius/gists{/gist_id}", "starred_url": "https://api.github.com/users/EricMCornelius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EricMCornelius/subscriptions", "organizations_url": "https://api.github.com/users/EricMCornelius/orgs", "repos_url": "https://api.github.com/users/EricMCornelius/repos", "events_url": "https://api.github.com/users/EricMCornelius/events{/privacy}", "received_events_url": "https://api.github.com/users/EricMCornelius/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2015-05-05T23:29:51Z", "updated_at": "2017-03-12T17:57:42Z", "closed_at": "2015-05-06T17:52:17Z", "author_association": "NONE", "body": "http://en.cppreference.com/w/cpp/io/c/fprintf\n\nsnprintf will format infinity and nan doubles as Inf/Infinity or nan/nan(char_sequence) respectively.  This  can break the validity of a json.dump() document: https://github.com/nlohmann/json/blob/1580eee4ed36cce2251c42ced420807abe8fa35f/src/json.hpp#L2279\n\nYou can check for infinity/nan w/ std::isinfinite/std::isnan - not sure what you'd like to actually do in those scenarios (some specific/configurable string representation?)\n\nhttp://en.cppreference.com/w/cpp/numeric/math/isfinite\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/68", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/68/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/68/events", "html_url": "https://github.com/nlohmann/json/issues/68", "id": 72853213, "node_id": "MDU6SXNzdWU3Mjg1MzIxMw==", "number": 68, "title": "errors in g++-4.8.1", "user": {"login": "soonhokong", "id": 403281, "node_id": "MDQ6VXNlcjQwMzI4MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/403281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soonhokong", "html_url": "https://github.com/soonhokong", "followers_url": "https://api.github.com/users/soonhokong/followers", "following_url": "https://api.github.com/users/soonhokong/following{/other_user}", "gists_url": "https://api.github.com/users/soonhokong/gists{/gist_id}", "starred_url": "https://api.github.com/users/soonhokong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soonhokong/subscriptions", "organizations_url": "https://api.github.com/users/soonhokong/orgs", "repos_url": "https://api.github.com/users/soonhokong/repos", "events_url": "https://api.github.com/users/soonhokong/events{/privacy}", "received_events_url": "https://api.github.com/users/soonhokong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2015-05-03T19:29:35Z", "updated_at": "2015-05-06T20:41:09Z", "closed_at": "2015-05-06T18:18:22Z", "author_association": "NONE", "body": "g++-4.8.1 generates the following two errors while g++-4.9.2 does not generate any error (OS: ubuntu-12.04).\n\n```\ng++-4.8 -std=c++11    -I src -I test test/unit.cpp  -o json_unit\nIn file included from test/unit.cpp:25:0:\nsrc/json.hpp: In instantiation of \u2018T nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::erase(T) [with T = nlohmann::basic_json<>::const_iterator; typename std::enable_if<(std::is_same<V, nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::iterator>::value || std::is_same<V, nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::const_iterator>::value), int>::type <anonymous> = 0; ObjectType = std::map; ArrayType = std::vector; StringType = std::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberFloatType = double; AllocatorType = std::allocator]\u2019:\ntest/unit.cpp:2655:80:   required from here\nsrc/json.hpp:1286:44: error: no matching function for call to \u2018std::vector<nlohmann::basic_json<> >::erase(__gnu_cxx::__normal_iterator<const nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >&)\u2019\n                 result.m_it.array_iterator = m_value.array->erase(pos.m_it.array_iterator);\n                                            ^\nsrc/json.hpp:1286:44: note: candidates are:\nIn file included from /usr/include/c++/4.8/vector:69:0,\n                 from /usr/include/c++/4.8/bits/random.h:34,\n                 from /usr/include/c++/4.8/random:50,\n                 from /usr/include/c++/4.8/bits/stl_algo.h:65,\n                 from /usr/include/c++/4.8/algorithm:62,\n                 from test/catch.hpp:62,\n                 from test/unit.cpp:11:\n/usr/include/c++/4.8/bits/vector.tcc:134:5: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::iterator) [with _Tp = nlohmann::basic_json<>; _Alloc = std::allocator<nlohmann::basic_json<> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = nlohmann::basic_json<>*]\n     vector<_Tp, _Alloc>::\n     ^\n/usr/include/c++/4.8/bits/vector.tcc:134:5: note:   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<const nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >\u2019 to \u2018std::vector<nlohmann::basic_json<> >::iterator {aka __gnu_cxx::__normal_iterator<nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >}\u2019\n/usr/include/c++/4.8/bits/vector.tcc:146:5: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::iterator) [with _Tp = nlohmann::basic_json<>; _Alloc = std::allocator<nlohmann::basic_json<> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = nlohmann::basic_json<>*]\n     vector<_Tp, _Alloc>::\n     ^\n/usr/include/c++/4.8/bits/vector.tcc:146:5: note:   candidate expects 2 arguments, 1 provided\nIn file included from test/unit.cpp:25:0:\nsrc/json.hpp: In instantiation of \u2018T nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::erase(T, T) [with T = nlohmann::basic_json<>::const_iterator; typename std::enable_if<(std::is_same<V, nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::iterator>::value || std::is_same<V, nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::const_iterator>::value), int>::type <anonymous> = 0; ObjectType = std::map; ArrayType = std::vector; StringType = std::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberFloatType = double; AllocatorType = std::allocator]\u2019:\ntest/unit.cpp:2671:95:   required from here\nsrc/json.hpp:1348:44: error: no matching function for call to \u2018std::vector<nlohmann::basic_json<> >::erase(__gnu_cxx::__normal_iterator<const nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >&, __gnu_cxx::__normal_iterator<const nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >&)\u2019\n                 result.m_it.array_iterator = m_value.array->erase(first.m_it.array_iterator,\n                                            ^\nsrc/json.hpp:1348:44: note: candidates are:\nIn file included from /usr/include/c++/4.8/vector:69:0,\n                 from /usr/include/c++/4.8/bits/random.h:34,\n                 from /usr/include/c++/4.8/random:50,\n                 from /usr/include/c++/4.8/bits/stl_algo.h:65,\n                 from /usr/include/c++/4.8/algorithm:62,\n                 from test/catch.hpp:62,\n                 from test/unit.cpp:11:\n/usr/include/c++/4.8/bits/vector.tcc:134:5: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::iterator) [with _Tp = nlohmann::basic_json<>; _Alloc = std::allocator<nlohmann::basic_json<> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = nlohmann::basic_json<>*]\n     vector<_Tp, _Alloc>::\n     ^\n/usr/include/c++/4.8/bits/vector.tcc:134:5: note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/4.8/bits/vector.tcc:146:5: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::iterator) [with _Tp = nlohmann::basic_json<>; _Alloc = std::allocator<nlohmann::basic_json<> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = nlohmann::basic_json<>*]\n     vector<_Tp, _Alloc>::\n     ^\n/usr/include/c++/4.8/bits/vector.tcc:146:5: note:   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<const nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >\u2019 to \u2018std::vector<nlohmann::basic_json<> >::iterator {aka __gnu_cxx::__normal_iterator<nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >}\u2019\nmake: *** [json_unit] Error 1\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/67", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/67/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/67/events", "html_url": "https://github.com/nlohmann/json/issues/67", "id": 72680672, "node_id": "MDU6SXNzdWU3MjY4MDY3Mg==", "number": 67, "title": "Keys when iterating over objects", "user": {"login": "mlund", "id": 3248398, "node_id": "MDQ6VXNlcjMyNDgzOTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3248398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlund", "html_url": "https://github.com/mlund", "followers_url": "https://api.github.com/users/mlund/followers", "following_url": "https://api.github.com/users/mlund/following{/other_user}", "gists_url": "https://api.github.com/users/mlund/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlund/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlund/subscriptions", "organizations_url": "https://api.github.com/users/mlund/orgs", "repos_url": "https://api.github.com/users/mlund/repos", "events_url": "https://api.github.com/users/mlund/events{/privacy}", "received_events_url": "https://api.github.com/users/mlund/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-05-02T18:34:19Z", "updated_at": "2015-05-03T16:14:01Z", "closed_at": "2015-05-03T13:16:42Z", "author_association": "NONE", "body": "I'm trying to iterate over a json input file containing an unknown number of molecules (see below). For each of these the key is the name which I currently have found no way to extract. Is this possible?\n\nCode:\n\n``` c++\n#include <faunus/json.hpp>\n#include <iostream>\n#include <fstream>\n\n/*\n * minimal.json:\n * {\n *   \"moleculelist\" : { \n *     \"salt\" : { \"atoms\":\"Na Cl\", \"atomic\":true, \"Ninit\":1 },\n *     \"water\" : { \"atoms\":\"H H O\", \"atomic\":false, \"Ninit\":55 }\n *   }\n * }\n */\n\nusing json = nlohmann::json;\n\nint main() {\n  std::ifstream f(\"minimal.json\");\n  if (f) {\n    json j;\n    j << f;\n    if ( ! j[\"moleculelist\"].empty() )\n      for ( auto &mol : j[\"moleculelist\"] )\n        if ( mol.is_object() ) {\n          // how to get entry keys? (i.e. \"salt\", \"water\", etc.)\n          for ( auto &i : mol )\n            std::cout << i << \"\\n\";\n        }\n  }\n}\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/66", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/66/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/66/events", "html_url": "https://github.com/nlohmann/json/issues/66", "id": 72561373, "node_id": "MDU6SXNzdWU3MjU2MTM3Mw==", "number": 66, "title": "Consider submitting this to the Boost Library Incubator", "user": {"login": "robertramey", "id": 1970652, "node_id": "MDQ6VXNlcjE5NzA2NTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1970652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robertramey", "html_url": "https://github.com/robertramey", "followers_url": "https://api.github.com/users/robertramey/followers", "following_url": "https://api.github.com/users/robertramey/following{/other_user}", "gists_url": "https://api.github.com/users/robertramey/gists{/gist_id}", "starred_url": "https://api.github.com/users/robertramey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robertramey/subscriptions", "organizations_url": "https://api.github.com/users/robertramey/orgs", "repos_url": "https://api.github.com/users/robertramey/repos", "events_url": "https://api.github.com/users/robertramey/events{/privacy}", "received_events_url": "https://api.github.com/users/robertramey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2015-05-02T01:17:36Z", "updated_at": "2015-12-29T11:24:34Z", "closed_at": "2015-12-29T11:24:34Z", "author_association": "NONE", "body": "www.blincubator.com\n\nRobert Ramey\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/65", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/65/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/65/events", "html_url": "https://github.com/nlohmann/json/issues/65", "id": 72516805, "node_id": "MDU6SXNzdWU3MjUxNjgwNQ==", "number": 65, "title": "Wishlist", "user": {"login": "jwaterloo", "id": 10145988, "node_id": "MDQ6VXNlcjEwMTQ1OTg4", "avatar_url": "https://avatars2.githubusercontent.com/u/10145988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwaterloo", "html_url": "https://github.com/jwaterloo", "followers_url": "https://api.github.com/users/jwaterloo/followers", "following_url": "https://api.github.com/users/jwaterloo/following{/other_user}", "gists_url": "https://api.github.com/users/jwaterloo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwaterloo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwaterloo/subscriptions", "organizations_url": "https://api.github.com/users/jwaterloo/orgs", "repos_url": "https://api.github.com/users/jwaterloo/repos", "events_url": "https://api.github.com/users/jwaterloo/events{/privacy}", "received_events_url": "https://api.github.com/users/jwaterloo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-05-01T20:32:46Z", "updated_at": "2016-11-13T22:38:10Z", "closed_at": "2015-12-14T14:30:35Z", "author_association": "NONE", "body": "A common use case in web development is the need for flatten and unflatten functions, that is the ability to flatten a json object into a map of javascript assignment strings and vice versa.\n\n{\n\"member1\" : true,\n\"member2\" : \"Hello World\",\n\"member3\" : [1, {\"member4\" : 4, \"member5\" : 6.5}, 3]\n}\n\ninto\n\nprefix \"whatever\"\n\nkey = whatever.member1\nvalue = true\nkey = whatever.member2\nvalue = \"Hello World\"\nkey = whatever.member3[0]\nvalue = 1\nkey = whatever.member1[1].member4\nvalue = 4\nkey = whatever.member1[1].member5\nvalue = 6.5\nkey = whatever.member3[2]\nvalue = 3\n\nfunction sighatures would be something like\n\nmap&lt;string, json_primitive_that_insn't_object_or_array&gt; flatten(json_object_or_array, symbol_name);\njson_object_or_array unflatten(map&lt;string, json_primitive_that_insn't_object_or_array&gt;, symbol_name);\n\nThe type of the map would be string to a json primitive that isn't an object or an array.\n\nThe use case is that the keys in the map could be used as form field names. PHP and jQuery both are already doing this natively. Wouldn't it be nice if C++ had equal or better footing for web development.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/64", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/64/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/64/events", "html_url": "https://github.com/nlohmann/json/issues/64", "id": 72137834, "node_id": "MDU6SXNzdWU3MjEzNzgzNA==", "number": 64, "title": "Compilation results in tons of warnings", "user": {"login": "JeffAbrahamson", "id": 1220683, "node_id": "MDQ6VXNlcjEyMjA2ODM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1220683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeffAbrahamson", "html_url": "https://github.com/JeffAbrahamson", "followers_url": "https://api.github.com/users/JeffAbrahamson/followers", "following_url": "https://api.github.com/users/JeffAbrahamson/following{/other_user}", "gists_url": "https://api.github.com/users/JeffAbrahamson/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeffAbrahamson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeffAbrahamson/subscriptions", "organizations_url": "https://api.github.com/users/JeffAbrahamson/orgs", "repos_url": "https://api.github.com/users/JeffAbrahamson/repos", "events_url": "https://api.github.com/users/JeffAbrahamson/events{/privacy}", "received_events_url": "https://api.github.com/users/JeffAbrahamson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2015-04-30T11:54:04Z", "updated_at": "2015-05-01T09:57:36Z", "closed_at": "2015-05-01T09:57:22Z", "author_association": "NONE", "body": "\u256d\u2574 (master=)\u2576\u256e\n\u2570 jeff@siegfried:json $ uname -a\nLinux siegfried 3.16.0-33-generic #44-Ubuntu SMP Thu Mar 12 12:19:35 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux\n\u256d\u2574 (master=)\u2576\u256e\n\u2570 jeff@siegfried:json $ make\ng++ -std=c++11  -Wall -Wextra -pedantic -Weffc++ -Wcast-align -Wcast-qual -Wctor-dtor-privacy -Wdisabled-optimization -Wformat=2 -Winit-self -Wmissing-declarations -Wmissing-include-dirs -Wold-style-cast -Woverloaded-virtual -Wredundant-decls -Wshadow -Wsign-conversion -Wsign-promo -Wstrict-overflow=5 -Wswitch -Wundef -Wno-unused -Wnon-virtual-dtor -Wreorder -Wdeprecated -Wfloat-equal  -I src -I test test/unit.cpp  -o json_unit\nIn file included from test/unit.cpp:11:0:\ntest/catch.hpp:264:57: warning: \u2018const T& Catch::operator+(const T&, Catch::StreamEndStop)\u2019 should return by value [-Weffc++]\n     T const& operator + ( T const& value, StreamEndStop ) {\n                                                         ^\ntest/catch.hpp: In copy constructor \u2018Catch::NotImplementedException::NotImplementedException(const Catch::NotImplementedException&)\u2019:\ntest/catch.hpp:280:9: warning: \u2018Catch::NotImplementedException::m_what\u2019 should be initialized in the member initialization list [-Weffc++]\n         NotImplementedException( NotImplementedException const& ) {}\n         ^\ntest/catch.hpp:280:9: warning: \u2018Catch::NotImplementedException::m_lineInfo\u2019 should be initialized in the member initialization list [-Weffc++]\nIn file included from test/unit.cpp:11:0:\ntest/catch.hpp: At global scope:\ntest/catch.hpp:478:7: warning: \u2018class Catch::MethodTestCase<C>\u2019 only defines a private destructor and has no friends [-Wctor-dtor-privacy]\n class MethodTestCase : public SharedImpl<ITestCase> {\n       ^\ntest/catch.hpp: In constructor \u2018Catch::AssertionInfo::AssertionInfo()\u2019:\ntest/catch.hpp:645:9: warning: \u2018Catch::AssertionInfo::macroName\u2019 should be initialized in the member initialization list [-Weffc++]\n         AssertionInfo() {}\n         ^\ntest/catch.hpp:645:9: warning: \u2018Catch::AssertionInfo::lineInfo\u2019 should be initialized in the member initialization list [-Weffc++]\ntest/catch.hpp:645:9: warning: \u2018Catch::AssertionInfo::capturedExpression\u2019 should be initialized in the member initialization list [-Weffc++]\ntest/catch.hpp:645:9: warning: \u2018Catch::AssertionInfo::resultDisposition\u2019 should be initialized in the member initialization list [-Weffc++]\ntest/catch.hpp: In constructor \u2018Catch::AssertionResultData::AssertionResultData()\u2019:\ntest/catch.hpp:659:9: warning: \u2018Catch::AssertionResultData::reconstructedExpression\u2019 should be initialized in the member initialization list [-Weffc++]\n         AssertionResultData() : resultType( ResultWas::Unknown ) {}\n         ^\ntest/catch.hpp:659:9: warning: \u2018Catch::AssertionResultData::message\u2019 should be initialized in the member initialization list [-Weffc++]\n\n...\n"}]