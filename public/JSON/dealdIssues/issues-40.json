[{"url": "https://api.github.com/repos/nlohmann/json/issues/935", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/935/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/935/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/935/events", "html_url": "https://github.com/nlohmann/json/issues/935", "id": 291526477, "node_id": "MDU6SXNzdWUyOTE1MjY0Nzc=", "number": 935, "title": "Unused variable 'kMinExp'", "user": {"login": "zerodefect", "id": 26778249, "node_id": "MDQ6VXNlcjI2Nzc4MjQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/26778249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zerodefect", "html_url": "https://github.com/zerodefect", "followers_url": "https://api.github.com/users/zerodefect/followers", "following_url": "https://api.github.com/users/zerodefect/following{/other_user}", "gists_url": "https://api.github.com/users/zerodefect/gists{/gist_id}", "starred_url": "https://api.github.com/users/zerodefect/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zerodefect/subscriptions", "organizations_url": "https://api.github.com/users/zerodefect/orgs", "repos_url": "https://api.github.com/users/zerodefect/repos", "events_url": "https://api.github.com/users/zerodefect/events{/privacy}", "received_events_url": "https://api.github.com/users/zerodefect/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/20", "html_url": "https://github.com/nlohmann/json/milestone/20", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/20/labels", "id": 2984335, "node_id": "MDk6TWlsZXN0b25lMjk4NDMzNQ==", "number": 20, "title": "Release 3.1.0", "description": "The next release when backwards compatible features are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 30, "state": "closed", "created_at": "2017-12-17T10:12:33Z", "updated_at": "2018-02-01T23:09:13Z", "due_on": "2018-02-01T08:00:00Z", "closed_at": "2018-02-01T23:09:13Z"}, "comments": 3, "created_at": "2018-01-25T10:48:38Z", "updated_at": "2018-01-27T16:38:02Z", "closed_at": "2018-01-27T16:37:55Z", "author_association": "CONTRIBUTOR", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\n\r\nUnused variable 'kMinExp' in to_chars.hpp, specifically in function:\r\n\r\n```\r\ntemplate <typename FloatType>\r\nboundaries compute_boundaries(FloatType value)\r\n``` \r\n\r\nthen see:\r\n\r\n```\r\nconstexpr int      kMinExp    = 1 - kBias;\r\n```\r\n\r\nDepending on level of compiler warnings/errors, this can fail a build.\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\n\r\nUsing cmake with ExternalProject_add() and building code with '-Wunused-variable' and '-Werror'\r\n\r\n- What is the expected behavior?\r\n\r\nSuccessful build.\r\n\r\n- And what is the actual behavior instead?\r\n\r\nCompiler error.\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\n\r\nClang 4.0\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\n\r\nReleased, but it looks to be a problem in the 'develop'\r\n\r\n- If you experience a compilation error: can you [compile and run the unit tests](https://github.com/nlohmann/json#execute-unit-tests)?\r\n\r\nYes.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/933", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/933/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/933/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/933/events", "html_url": "https://github.com/nlohmann/json/issues/933", "id": 290925524, "node_id": "MDU6SXNzdWUyOTA5MjU1MjQ=", "number": 933, "title": "yytext is already defined", "user": {"login": "Myushu", "id": 7536045, "node_id": "MDQ6VXNlcjc1MzYwNDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7536045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Myushu", "html_url": "https://github.com/Myushu", "followers_url": "https://api.github.com/users/Myushu/followers", "following_url": "https://api.github.com/users/Myushu/following{/other_user}", "gists_url": "https://api.github.com/users/Myushu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Myushu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Myushu/subscriptions", "organizations_url": "https://api.github.com/users/Myushu/orgs", "repos_url": "https://api.github.com/users/Myushu/repos", "events_url": "https://api.github.com/users/Myushu/events{/privacy}", "received_events_url": "https://api.github.com/users/Myushu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/20", "html_url": "https://github.com/nlohmann/json/milestone/20", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/20/labels", "id": 2984335, "node_id": "MDk6TWlsZXN0b25lMjk4NDMzNQ==", "number": 20, "title": "Release 3.1.0", "description": "The next release when backwards compatible features are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 30, "state": "closed", "created_at": "2017-12-17T10:12:33Z", "updated_at": "2018-02-01T23:09:13Z", "due_on": "2018-02-01T08:00:00Z", "closed_at": "2018-02-01T23:09:13Z"}, "comments": 4, "created_at": "2018-01-23T17:24:58Z", "updated_at": "2018-01-29T20:56:32Z", "closed_at": "2018-01-29T20:56:22Z", "author_association": "NONE", "body": "Hi,\r\n\r\nWe are trying to use your library on our project, which already contains 2 parsers generated by bison/flex. We have an issue during compilation because of the `yytext` variable. See the following clang output:\r\n```\r\nnlohmann/json.hpp:2870:17: error: expected ';' at end of declaration list\r\n    std::string yytext {};\r\n                ^\r\nCustomLanguageParser.cpp: note: expanded from macro 'yytext'\r\n#define yytext yyg->yytext_r\r\n                  ^\r\n```\r\nWe previously had a similar issue while implementing the 2 parsers (used to parse custom languages), there was a conflict in-between the `yytext` variable of each parser, which was resolved by using the `%prefix` 'directive' (See the StackOverflow answer [here](https://stackoverflow.com/a/13292128)). This solved our issue until we tried to use your library in our codebase, which raised new errors (conflicts in-between your variable and the parsers `#define`) about the `yytext` variable.\r\n\r\nFor now we are completely stuck as the only solution we found was renaming your `yytext` variable, which doesn't seems like an acceptable fix to us. Did we miss something or are we the first one to use your library in a codebase already containing bison/flex generated parsers ?\r\n\r\n**infos**:\r\n - clang: Apple LLVM version 9.0.0 (clang-900.0.39.2)\r\n - flex: 2.6\r\n - bison: 3.0\r\n - nlohmann/json: 3.0.1\r\n\r\n Thanks"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/932", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/932/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/932/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/932/events", "html_url": "https://github.com/nlohmann/json/issues/932", "id": 290780543, "node_id": "MDU6SXNzdWUyOTA3ODA1NDM=", "number": 932, "title": "Add Key name to Exception", "user": {"login": "tcanabrava", "id": 4027216, "node_id": "MDQ6VXNlcjQwMjcyMTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/4027216?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tcanabrava", "html_url": "https://github.com/tcanabrava", "followers_url": "https://api.github.com/users/tcanabrava/followers", "following_url": "https://api.github.com/users/tcanabrava/following{/other_user}", "gists_url": "https://api.github.com/users/tcanabrava/gists{/gist_id}", "starred_url": "https://api.github.com/users/tcanabrava/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tcanabrava/subscriptions", "organizations_url": "https://api.github.com/users/tcanabrava/orgs", "repos_url": "https://api.github.com/users/tcanabrava/repos", "events_url": "https://api.github.com/users/tcanabrava/events{/privacy}", "received_events_url": "https://api.github.com/users/tcanabrava/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 37, "created_at": "2018-01-23T10:16:30Z", "updated_at": "2018-07-05T05:49:33Z", "closed_at": "2018-03-29T15:24:17Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n(I'm interested in developing this feature, so pointers are appreciated)\r\n\r\n- When working with an invalid json, the exception produced is not really helpfull.\r\n\r\nI'v found out https://github.com/nlohmann/json/issues/160 - but that's a different issue than the one I'm having, and it will also be harder to fix because the values have no notion of key, the specific code I'm talking about on json.hpp follows this pattern:\r\n\r\n```cpp\r\ntemplate<typename BasicJsonType>\r\nvoid from_json(const BasicJsonType& j, typename BasicJsonType::string_t& s)\r\n{\r\n    if (JSON_UNLIKELY(not j.is_string()))\r\n    {\r\n        JSON_THROW(type_error::create(302, \"type must be string, but is \" + std::string(j.type_name())));\r\n    }\r\n    s = *j.template get_ptr<const typename BasicJsonType::string_t*>();\r\n}\r\n```\r\nbut even if we have a small json to handle, the output is not really helpfull:\r\n\r\n` std::exception: [json.exception.type_error.302] type must be string, but is number`\r\n\r\n- Small code example:\r\n\r\n```cpp\r\nnlohmann::json j {{\"firstElement\", \"\"}};\r\nj[\"firstElement\"] = 0;\r\n\r\n```\r\n- What is the expected behavior?\r\n` std::exception: [json.exception.type_error.302] type for key firstElement must be string, but is number`\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\n\r\n3.0.1\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/931", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/931/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/931/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/931/events", "html_url": "https://github.com/nlohmann/json/issues/931", "id": 290467001, "node_id": "MDU6SXNzdWUyOTA0NjcwMDE=", "number": 931, "title": "Equality operator fails", "user": {"login": "axx", "id": 350765, "node_id": "MDQ6VXNlcjM1MDc2NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/350765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/axx", "html_url": "https://github.com/axx", "followers_url": "https://api.github.com/users/axx/followers", "following_url": "https://api.github.com/users/axx/following{/other_user}", "gists_url": "https://api.github.com/users/axx/gists{/gist_id}", "starred_url": "https://api.github.com/users/axx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/axx/subscriptions", "organizations_url": "https://api.github.com/users/axx/orgs", "repos_url": "https://api.github.com/users/axx/repos", "events_url": "https://api.github.com/users/axx/events{/privacy}", "received_events_url": "https://api.github.com/users/axx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-22T13:34:22Z", "updated_at": "2018-01-22T15:53:20Z", "closed_at": "2018-01-22T15:53:20Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\nThe equality operator returns false even though 2 JSON objects have the same content, just different order.\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\n\r\n#include < iostream >\r\n#include \"json.hpp\"\r\n\r\nint main(int argc, char** argv)\r\n{\r\n  auto j1 = R\"#(\r\n{\r\n\"alertResponses\": [\r\n{\"profileId\": \"CEMAV1\",\r\n\"errors\": [{\"code\": 1666, \"title\": \"Not Allowed\"}]\r\n},\r\n{\"profileId\": \"CEMAV2\",\r\n\"errors\": [{\"code\": 1666, \"title\": \"Not Allowed\"}]\r\n}]\r\n}\r\n)#\"_json;\r\n\r\n  auto j2 = R\"#(\r\n{\r\n\"alertResponses\": [\r\n{\"profileId\": \"CEMAV2\",\r\n\"errors\": [{\"code\": 1666, \"title\": \"Not Allowed\"}]\r\n},\r\n{\"profileId\": \"CEMAV1\",\r\n\"errors\": [{\"code\": 1666, \"title\": \"Not Allowed\"}]\r\n}]\r\n}\r\n)#\"_json;\r\n\r\n  if (j1 == j2) std::cout << \"The same!\" << std::endl;\r\n  else std::cout << \"Not the same!\" << std::endl;\r\n\r\n  return 0;\r\n}\r\n\r\n- What is the expected behavior?\r\n\r\n\"The same!\" should be printed out.\r\n\r\n- And what is the actual behavior instead?\r\n\r\n\"Not the same!\" is printed out.\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\n\r\ng++ 4.9.3 on SUSE Linux\r\ng++ Apple LLVM version 9.0.0 (clang-900.0.39.2) on Mac OS X\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\n\r\nIt's from the \"develop\" branch version 2.1.1.\r\nSame problem is found in version 3.0.1\r\n\r\n- If you experience a compilation error: can you [compile and run the unit tests](https://github.com/nlohmann/json#execute-unit-tests)?\r\n\r\nNo compilation error\r\n\r\n**Feature Request**\r\n\r\n- Describe the feature in as much detail as possible.\r\n\r\n- Include sample usage where appropriate.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/929", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/929/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/929/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/929/events", "html_url": "https://github.com/nlohmann/json/issues/929", "id": 290342987, "node_id": "MDU6SXNzdWUyOTAzNDI5ODc=", "number": 929, "title": "use in visual studio 2015", "user": {"login": "jelofen", "id": 10420216, "node_id": "MDQ6VXNlcjEwNDIwMjE2", "avatar_url": "https://avatars3.githubusercontent.com/u/10420216?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jelofen", "html_url": "https://github.com/jelofen", "followers_url": "https://api.github.com/users/jelofen/followers", "following_url": "https://api.github.com/users/jelofen/following{/other_user}", "gists_url": "https://api.github.com/users/jelofen/gists{/gist_id}", "starred_url": "https://api.github.com/users/jelofen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jelofen/subscriptions", "organizations_url": "https://api.github.com/users/jelofen/orgs", "repos_url": "https://api.github.com/users/jelofen/repos", "events_url": "https://api.github.com/users/jelofen/events{/privacy}", "received_events_url": "https://api.github.com/users/jelofen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}, {"id": 735376215, "node_id": "MDU6TGFiZWw3MzUzNzYyMTU=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20needs%20more%20info", "name": "state: needs more info", "color": "f9d0c4", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-22T03:46:11Z", "updated_at": "2018-02-01T17:43:35Z", "closed_at": "2018-02-01T17:43:35Z", "author_association": "NONE", "body": "Hello \r\n- I am a beginner in c++ could anyone please give me an instruction of how to use this in visual studio 2015 step by step?\r\nby including the hpp file I got error\r\n\r\nI need to know how to install this project to use it in VS15, and since I am a beginner please be  patiente with me and tell me the tools, the paths, and way to install this package. I installed my visual studio in default path. \r\nthank you "}, {"url": "https://api.github.com/repos/nlohmann/json/issues/928", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/928/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/928/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/928/events", "html_url": "https://github.com/nlohmann/json/issues/928", "id": 290264966, "node_id": "MDU6SXNzdWUyOTAyNjQ5NjY=", "number": 928, "title": "Relative includes of json_fwd.hpp in detail/meta.hpp. [Develop branch]", "user": {"login": "przemkovv", "id": 3495693, "node_id": "MDQ6VXNlcjM0OTU2OTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3495693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/przemkovv", "html_url": "https://github.com/przemkovv", "followers_url": "https://api.github.com/users/przemkovv/followers", "following_url": "https://api.github.com/users/przemkovv/following{/other_user}", "gists_url": "https://api.github.com/users/przemkovv/gists{/gist_id}", "starred_url": "https://api.github.com/users/przemkovv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/przemkovv/subscriptions", "organizations_url": "https://api.github.com/users/przemkovv/orgs", "repos_url": "https://api.github.com/users/przemkovv/repos", "events_url": "https://api.github.com/users/przemkovv/events{/privacy}", "received_events_url": "https://api.github.com/users/przemkovv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/20", "html_url": "https://github.com/nlohmann/json/milestone/20", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/20/labels", "id": 2984335, "node_id": "MDk6TWlsZXN0b25lMjk4NDMzNQ==", "number": 20, "title": "Release 3.1.0", "description": "The next release when backwards compatible features are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 30, "state": "closed", "created_at": "2017-12-17T10:12:33Z", "updated_at": "2018-02-01T23:09:13Z", "due_on": "2018-02-01T08:00:00Z", "closed_at": "2018-02-01T23:09:13Z"}, "comments": 5, "created_at": "2018-01-21T11:17:48Z", "updated_at": "2018-02-01T17:40:11Z", "closed_at": "2018-02-01T17:39:08Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\nI have nlohmann/json library added using `ExternalProject_Add` in `CMakeLists.txt`.\r\nIn my project, the `<INSTALL_DIR>/include/` folder is added as the system include directories.\r\nDuring compilation, I've an error of missing `json_fwd.hpp` included from `detail/meta.cpp`.\r\nThe file `json_fwd.hpp` is \"missing\" because it is located in `include/nlohmann` and only `include/` is added to 'global' include path.\r\n\r\nI'm using `JSON_MultipleHeaders=ON` flag in CMake.\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\nFile `CMakeLists.txt`\r\n```\r\ncmake_minimum_required(VERSION 3.10)\r\nproject(jj)\r\n\r\ninclude(ExternalProject)\r\nExternalProject_Add(json\r\n    GIT_REPOSITORY https://github.com/nlohmann/json.git\r\n    GIT_TAG develop\r\n    INSTALL_DIR ${PROJECT_BINARY_DIR}\r\n    CMAKE_ARGS -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR> -DBUILD_TESTING=0 -DJSON_MultipleHeaders=ON\r\n    UPDATE_COMMAND \"\"\r\n    )\r\n\r\ninclude_directories(SYSTEM ${PROJECT_BINARY_DIR}/include)\r\nadd_executable(jj src/test.cpp)\r\nadd_dependencies(jj json)\r\n```\r\nFile `src/test.cpp`:\r\n```\r\n#include <nlohmann/json.hpp>\r\n\r\nint main() {\r\n  return 0;\r\n}\r\n```\r\n\r\n- What is the expected behavior?\r\n`json_fwd.hpp` should be visible for files in `detail/` of the json library.\r\n\r\n- And what is the actual behavior instead?\r\nThe relative path in `meta.cpp` to the j`son_fwd.hpp` doesn't allow to compile.\r\nDuring compilation, I've got the following error:\r\n```\r\nIn file included from /home/przemkovv/projects/sandbox/json_bug/src/test.cpp:2:\r\nIn file included from /home/przemkovv/projects/sandbox/json_bug/build/include/nlohmann/json.hpp:46:\r\n/home/przemkovv/projects/sandbox/json_bug/build/include/nlohmann/detail/meta.hpp:9:10: fatal error: 'json_fwd.hpp' file not found\r\n#include \"json_fwd.hpp\"\r\n         ^~~~~~~~~~~~~~\r\n```\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\nArch Linux, Clang 7.0.0\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\ndevelop \r\n\r\n- If you experience a compilation error: can you [compile and run the unit tests](https://github.com/nlohmann/json#execute-unit-tests)?\r\nCannot compile.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/927", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/927/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/927/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/927/events", "html_url": "https://github.com/nlohmann/json/issues/927", "id": 290243251, "node_id": "MDU6SXNzdWUyOTAyNDMyNTE=", "number": 927, "title": "How to solve large json file?", "user": {"login": "napasa", "id": 8340899, "node_id": "MDQ6VXNlcjgzNDA4OTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/8340899?v=4", "gravatar_id": "", "url": "https://api.github.com/users/napasa", "html_url": "https://github.com/napasa", "followers_url": "https://api.github.com/users/napasa/followers", "following_url": "https://api.github.com/users/napasa/following{/other_user}", "gists_url": "https://api.github.com/users/napasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/napasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/napasa/subscriptions", "organizations_url": "https://api.github.com/users/napasa/orgs", "repos_url": "https://api.github.com/users/napasa/repos", "events_url": "https://api.github.com/users/napasa/events{/privacy}", "received_events_url": "https://api.github.com/users/napasa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-01-21T03:15:44Z", "updated_at": "2018-04-03T16:30:03Z", "closed_at": "2018-03-27T18:33:07Z", "author_association": "NONE", "body": "My json file has a array of approximately ten million data.\r\n \tucrtbased.dll!0f5160d0()\tUnknown\r\n \t[Frames below may be incorrect and/or missing, no symbols loaded for ucrtbased.dll]\t\r\n \t[External Code]\t\r\n>\tWenKuInfoProcess.exe!std::_Allocate(unsigned int _Count, unsigned int _Sz, bool _Try_aligned_allocation) Line 87\tC++\r\n \tWenKuInfoProcess.exe!std::allocator<std::_Container_proxy>::allocate(unsigned int _Count) Line 828\tC++\r\n \tWenKuInfoProcess.exe!std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate(unsigned int _Count) Line 1078\tC++\r\n \tWenKuInfoProcess.exe!std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy() Line 1776\tC++\r\n \tWenKuInfoProcess.exe!std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>(std::_Wrap_alloc<std::allocator<char> > && _Al) Line 1731\tC++\r\n \tWenKuInfoProcess.exe!std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >(std::basic_string<char,std::char_traits<char>,std::allocator<char> > && _Right) Line 2055\tC++\r\n \tWenKuInfoProcess.exe!std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> ><std::basic_string<char,std::char_traits<char>,std::allocator<char> >,nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer>,void,0>(std::basic_string<char,std::char_traits<char>,std::allocator<char> > && _Val1, nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> && _Val2) Line 188\tC++\r\n \tWenKuInfoProcess.exe!std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> >,void *> >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> >(std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> > * _Ptr, std::basic_string<char,std::char_traits<char>,std::allocator<char> > && <_Args_0>, nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> && <_Args_1>) Line 840\tC++\r\n \tWenKuInfoProcess.exe!std::allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> >,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> >(std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> >,void *> > & _Al, std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> > * _Ptr, std::basic_string<char,std::char_traits<char>,std::allocator<char> > && <_Args_0>, nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> && <_Args_1>) Line 960\tC++\r\n \tWenKuInfoProcess.exe!std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> >,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> >(std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> > * _Ptr, std::basic_string<char,std::char_traits<char>,std::allocator<char> > && <_Args_0>, nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> && <_Args_1>) Line 1096\tC++\r\n \tWenKuInfoProcess.exe!std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> > >,0> >::_Buynode<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> >(std::basic_string<char,std::char_traits<char>,std::allocator<char> > && <_Val_0>, nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> && <_Val_1>) Line 902\tC++\r\n \tWenKuInfoProcess.exe!std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> > >,0> >::emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> >(std::basic_string<char,std::char_traits<char>,std::allocator<char> > && <_Val_0>, nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> && <_Val_1>) Line 1084\tC++\r\n \tWenKuInfoProcess.exe!nlohmann::detail::parser<nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> >::parse_internal(bool keep, nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> & result) Line 3083\tC++\r\n \tWenKuInfoProcess.exe!nlohmann::detail::parser<nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> >::parse_internal(bool keep, nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> & result) Line 3150\tC++\r\n \tWenKuInfoProcess.exe!nlohmann::detail::parser<nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> >::parse_internal(bool keep, nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> & result) Line 3076\tC++\r\n \tWenKuInfoProcess.exe!nlohmann::detail::parser<nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> >::parse(const bool strict, nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> & result) Line 2941\tC++\r\n \tWenKuInfoProcess.exe!nlohmann::operator>>(std::basic_istream<char,std::char_traits<char> > & i, nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer> & j) Line 13150\tC++\r\n \tWenKuInfoProcess.exe!main(int argc, char * * argv) Line 22\tC++\r\n \t[External Code]\t\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/926", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/926/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/926/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/926/events", "html_url": "https://github.com/nlohmann/json/issues/926", "id": 290000316, "node_id": "MDU6SXNzdWUyOTAwMDAzMTY=", "number": 926, "title": "GCC 7.x issue", "user": {"login": "sander-visser", "id": 11157487, "node_id": "MDQ6VXNlcjExMTU3NDg3", "avatar_url": "https://avatars1.githubusercontent.com/u/11157487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sander-visser", "html_url": "https://github.com/sander-visser", "followers_url": "https://api.github.com/users/sander-visser/followers", "following_url": "https://api.github.com/users/sander-visser/following{/other_user}", "gists_url": "https://api.github.com/users/sander-visser/gists{/gist_id}", "starred_url": "https://api.github.com/users/sander-visser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sander-visser/subscriptions", "organizations_url": "https://api.github.com/users/sander-visser/orgs", "repos_url": "https://api.github.com/users/sander-visser/repos", "events_url": "https://api.github.com/users/sander-visser/events{/privacy}", "received_events_url": "https://api.github.com/users/sander-visser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-19T14:52:15Z", "updated_at": "2018-01-19T15:23:13Z", "closed_at": "2018-01-19T15:23:13Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\nGcc 7.x complains about json.hpp row ~1581:\r\n\r\n        // assertion to check that the iterator range is indeed contiguous,\r\n        // see http://stackoverflow.com/a/35008842/266378 for more discussion\r\n        assert(std::accumulate(\r\n                   first, last, std::pair<bool, int>(true, 0),\r\n                   [&first](std::pair<bool, int> res, decltype(*first) val)\r\n        {\r\n\r\nwith error \"lamda-expression in unevaluated context\"\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\njust include header in hello world application built using gcc 7.3\r\n\r\n- What is the expected behavior?\r\n\r\n- And what is the actual behavior instead?\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\nlooks to be the same on master\r\n\r\n- If you experience a compilation error: can you [compile and run the unit tests](https://github.com/nlohmann/json#execute-unit-tests)?\r\n\r\n\r\n**Feature Request**\r\n\r\n- Describe the feature in as much detail as possible.\r\n\r\n- Include sample usage where appropriate.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/924", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/924/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/924/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/924/events", "html_url": "https://github.com/nlohmann/json/issues/924", "id": 289805274, "node_id": "MDU6SXNzdWUyODk4MDUyNzQ=", "number": 924, "title": "converting json to vector of type with templated constructor", "user": {"login": "dvirtz", "id": 7661709, "node_id": "MDQ6VXNlcjc2NjE3MDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/7661709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvirtz", "html_url": "https://github.com/dvirtz", "followers_url": "https://api.github.com/users/dvirtz/followers", "following_url": "https://api.github.com/users/dvirtz/following{/other_user}", "gists_url": "https://api.github.com/users/dvirtz/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvirtz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvirtz/subscriptions", "organizations_url": "https://api.github.com/users/dvirtz/orgs", "repos_url": "https://api.github.com/users/dvirtz/repos", "events_url": "https://api.github.com/users/dvirtz/events{/privacy}", "received_events_url": "https://api.github.com/users/dvirtz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/21", "html_url": "https://github.com/nlohmann/json/milestone/21", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/21/labels", "id": 3003937, "node_id": "MDk6TWlsZXN0b25lMzAwMzkzNw==", "number": 21, "title": "Release 3.1.1", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 9, "state": "closed", "created_at": "2017-12-29T19:16:13Z", "updated_at": "2018-02-13T18:42:47Z", "due_on": "2018-02-13T08:00:00Z", "closed_at": "2018-02-13T18:42:47Z"}, "comments": 11, "created_at": "2018-01-18T22:57:28Z", "updated_at": "2018-02-12T22:11:15Z", "closed_at": "2018-02-12T17:17:59Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\nThe following code fails to compile when uncommenting line 16:\r\n```c++\r\n#include <nlohmann/json.hpp>\r\n\r\nnamespace nl = nlohmann;\r\n\r\nstruct S {\r\n  S() = default;\r\n  template<typename T> S(const T& t) {}\r\n};\r\n\r\nvoid from_json(const nl::json& j, S& s) {\r\n}\r\n\r\nint main() {\r\n  nl::json j;\r\n  auto s = j.get<S>();\r\n  //auto v = j.get<std::vector<S>>();\r\n};\r\n```\r\nThe error I get is \r\n```\r\njson.hpp(1360): error C2338: could not find from_json() method in T's namespace\r\n```\r\n\r\nThe cause seems to stem from the check for `std::is_convertible<BasicJsonType, typename CompatibleArrayType::value_type>::value` on `void from_json(const BasicJsonType& j, CompatibleArrayType& arr)`. \r\n\r\nSince you do not convert directly from json to the array value but call `get()` I think this check can be changed to allow this to compile.\r\n\r\nCompiled on VS 15.6.0 preview 2.0\r\nLibrary version 3.0.1\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/923", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/923/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/923/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/923/events", "html_url": "https://github.com/nlohmann/json/issues/923", "id": 289794939, "node_id": "MDU6SXNzdWUyODk3OTQ5Mzk=", "number": 923, "title": "json_fwd.hpp not installed", "user": {"login": "zerodefect", "id": 26778249, "node_id": "MDQ6VXNlcjI2Nzc4MjQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/26778249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zerodefect", "html_url": "https://github.com/zerodefect", "followers_url": "https://api.github.com/users/zerodefect/followers", "following_url": "https://api.github.com/users/zerodefect/following{/other_user}", "gists_url": "https://api.github.com/users/zerodefect/gists{/gist_id}", "starred_url": "https://api.github.com/users/zerodefect/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zerodefect/subscriptions", "organizations_url": "https://api.github.com/users/zerodefect/orgs", "repos_url": "https://api.github.com/users/zerodefect/repos", "events_url": "https://api.github.com/users/zerodefect/events{/privacy}", "received_events_url": "https://api.github.com/users/zerodefect/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-18T22:16:16Z", "updated_at": "2018-01-25T16:11:25Z", "closed_at": "2018-01-25T16:11:25Z", "author_association": "CONTRIBUTOR", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\n\r\nNot sure if this is by design or not, but I notice that when I perform 'cmake install', the json_fwd.hpp is not installed. \r\n\r\n- What is the expected behavior?\r\n\r\nWell, if I want to perform an in-source build (ExternalProject_Add()), as an example, it makes things difficult if their is no install procedure for the fwd declaration.\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\n\r\nUbuntu 17.10 and GCC v7.2\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\n\r\nReleased\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/921", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/921/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/921/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/921/events", "html_url": "https://github.com/nlohmann/json/issues/921", "id": 289383820, "node_id": "MDU6SXNzdWUyODkzODM4MjA=", "number": 921, "title": "Use Google Benchmarks", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/20", "html_url": "https://github.com/nlohmann/json/milestone/20", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/20/labels", "id": 2984335, "node_id": "MDk6TWlsZXN0b25lMjk4NDMzNQ==", "number": 20, "title": "Release 3.1.0", "description": "The next release when backwards compatible features are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 30, "state": "closed", "created_at": "2017-12-17T10:12:33Z", "updated_at": "2018-02-01T23:09:13Z", "due_on": "2018-02-01T08:00:00Z", "closed_at": "2018-02-01T23:09:13Z"}, "comments": 0, "created_at": "2018-01-17T19:25:16Z", "updated_at": "2018-01-21T13:16:44Z", "closed_at": "2018-01-21T13:16:44Z", "author_association": "OWNER", "body": "Use [Google Benchmark](https://github.com/google/benchmark) for the benchmarks."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/920", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/920/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/920/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/920/events", "html_url": "https://github.com/nlohmann/json/issues/920", "id": 289351599, "node_id": "MDU6SXNzdWUyODkzNTE1OTk=", "number": 920, "title": "Move class json_pointer to separate file", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/20", "html_url": "https://github.com/nlohmann/json/milestone/20", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/20/labels", "id": 2984335, "node_id": "MDk6TWlsZXN0b25lMjk4NDMzNQ==", "number": 20, "title": "Release 3.1.0", "description": "The next release when backwards compatible features are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 30, "state": "closed", "created_at": "2017-12-17T10:12:33Z", "updated_at": "2018-02-01T23:09:13Z", "due_on": "2018-02-01T08:00:00Z", "closed_at": "2018-02-01T23:09:13Z"}, "comments": 1, "created_at": "2018-01-17T17:35:23Z", "updated_at": "2018-01-28T16:42:53Z", "closed_at": "2018-01-28T16:42:52Z", "author_association": "OWNER", "body": "Class `json_pointer` is spread around file `json.hpp`. It should be moved into a separate file in the `develop` folder and included just like the other sub-classes."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/917", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/917/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/917/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/917/events", "html_url": "https://github.com/nlohmann/json/issues/917", "id": 288925319, "node_id": "MDU6SXNzdWUyODg5MjUzMTk=", "number": 917, "title": "Unable to locate 'to_json()' and 'from_json()' methods in the same namespace", "user": {"login": "federicoorta", "id": 8298280, "node_id": "MDQ6VXNlcjgyOTgyODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/8298280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/federicoorta", "html_url": "https://github.com/federicoorta", "followers_url": "https://api.github.com/users/federicoorta/followers", "following_url": "https://api.github.com/users/federicoorta/following{/other_user}", "gists_url": "https://api.github.com/users/federicoorta/gists{/gist_id}", "starred_url": "https://api.github.com/users/federicoorta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/federicoorta/subscriptions", "organizations_url": "https://api.github.com/users/federicoorta/orgs", "repos_url": "https://api.github.com/users/federicoorta/repos", "events_url": "https://api.github.com/users/federicoorta/events{/privacy}", "received_events_url": "https://api.github.com/users/federicoorta/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-16T14:26:41Z", "updated_at": "2018-01-16T19:46:10Z", "closed_at": "2018-01-16T19:46:10Z", "author_association": "NONE", "body": "I am trying out this nice library and to learn how to use it, after running the examples, I started working on a very small example on my own. \r\n\r\nHere it is:\r\n```cpp\r\nnamespace defe {\r\n    class Item {\r\n\r\n    public:\r\n        { constructor/destructor }\r\n\r\n        { getters&setters }\r\n\r\n        void to_json(json& j, const defe::Item& item) {\r\n            j = json{{\"name\",                item.name},\r\n                     {\"type\",                item.type},\r\n                     {\"lengthInByte\",        item.lengthInByte},\r\n                     {\"elementDescriptions\", item.elementDescriptions}};\r\n        }\r\n\r\n        void from_json(const json& j, defe::Item& item) {\r\n            item.name = j.at(\"name\").get<std::string>();\r\n            item.type = j.at(\"type\").get<std::string>();\r\n            item.lengthInByte = j.at(\"lengthInByte\").get<unsigned short int>();\r\n            item.elementDescriptions = j.at(\"elementDescriptions\").get<std::vector<std::vector<std::string>>>();\r\n        }\r\n\r\n    private:\r\n        std::string name;\r\n        std::string type;\r\n        unsigned short int lengthInByte;\r\n        std::vector<std::vector<std::string>> elementDescriptions;\r\n    };\r\n\r\n    class CategoryDescription {\r\n\r\n    public:\r\n        { constructor/destructor }\r\n\r\n        { getters&setters }\r\n\r\n        void to_json(json& j, const defe::CategoryDescription& catDesc) {\r\n            j = json{{\"item\", catDesc.item}};\r\n        }\r\n\r\n        void from_json(const json& j, defe::CategoryDescription& catDesc) {\r\n            catDesc.item = j.at(\"itemCollection\").get<std::vector<defe::Item>>();\r\n        }\r\n\r\n    private:\r\n        std::vector<defe::Item> items;\r\n    };\r\n}\r\n```\r\nI compiled it twice: the first one, just with the ***Item*** class and it has been successful.\r\nThen, I added the ***CategoryDescription*** class, where I have a vector of *Item* instances.\r\n```GCC 7.2.0 on Ubuntu 17.10```\r\n\r\nWhen I try to compile the complete version (you find here), the compilation fails with the following error:\r\n```\r\nerror: static assertion failed: could not find from_json() method in T's namespace\r\n         static_assert(sizeof(BasicJsonType) == 0\r\n```\r\n\r\nI learned from the docs and from other issue answers that such an error tells that the *to_json()* and *from_json()* methods have not been located, isn't it?\r\nSo my question is: am I required to write a specialization of ```adl_serializer```, even if both classes belongs to the same namespace?\r\n\r\nI am a bit confused, I apologize for that. It might be that I am mixing up two different problems.\r\nBut I am sure to have defined the two classes in the right order (ref. [issue 561](https://github.com/nlohmann/json/issues/561)). The latter class (*CategoryDescription*) is making use of the former class (*Item*).\r\n\r\nThank  you for your help :) \r\nIf I have missed something, feel free to ask further details.\r\n\r\nBest Regards\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/916", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/916/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/916/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/916/events", "html_url": "https://github.com/nlohmann/json/issues/916", "id": 288709301, "node_id": "MDU6SXNzdWUyODg3MDkzMDE=", "number": 916, "title": "Feature: to_string(const json& j);", "user": {"login": "DELTA37", "id": 26091470, "node_id": "MDQ6VXNlcjI2MDkxNDcw", "avatar_url": "https://avatars2.githubusercontent.com/u/26091470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DELTA37", "html_url": "https://github.com/DELTA37", "followers_url": "https://api.github.com/users/DELTA37/followers", "following_url": "https://api.github.com/users/DELTA37/following{/other_user}", "gists_url": "https://api.github.com/users/DELTA37/gists{/gist_id}", "starred_url": "https://api.github.com/users/DELTA37/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DELTA37/subscriptions", "organizations_url": "https://api.github.com/users/DELTA37/orgs", "repos_url": "https://api.github.com/users/DELTA37/repos", "events_url": "https://api.github.com/users/DELTA37/events{/privacy}", "received_events_url": "https://api.github.com/users/DELTA37/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 304694104, "node_id": "MDU6TGFiZWwzMDQ2OTQxMDQ=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20please%20discuss", "name": "state: please discuss", "color": "fbca04", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-01-15T20:33:21Z", "updated_at": "2018-02-22T16:42:31Z", "closed_at": "2018-02-22T16:42:31Z", "author_association": "NONE", "body": "It is very helpful to add method to_string(const json& j); "}, {"url": "https://api.github.com/repos/nlohmann/json/issues/914", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/914/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/914/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/914/events", "html_url": "https://github.com/nlohmann/json/issues/914", "id": 288413718, "node_id": "MDU6SXNzdWUyODg0MTM3MTg=", "number": 914, "title": "[answered]Read key1 from .value example ", "user": {"login": "Diablillowilly", "id": 30727023, "node_id": "MDQ6VXNlcjMwNzI3MDIz", "avatar_url": "https://avatars1.githubusercontent.com/u/30727023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Diablillowilly", "html_url": "https://github.com/Diablillowilly", "followers_url": "https://api.github.com/users/Diablillowilly/followers", "following_url": "https://api.github.com/users/Diablillowilly/following{/other_user}", "gists_url": "https://api.github.com/users/Diablillowilly/gists{/gist_id}", "starred_url": "https://api.github.com/users/Diablillowilly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Diablillowilly/subscriptions", "organizations_url": "https://api.github.com/users/Diablillowilly/orgs", "repos_url": "https://api.github.com/users/Diablillowilly/repos", "events_url": "https://api.github.com/users/Diablillowilly/events{/privacy}", "received_events_url": "https://api.github.com/users/Diablillowilly/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-01-14T14:49:00Z", "updated_at": "2018-01-19T17:24:02Z", "closed_at": "2018-01-19T17:23:44Z", "author_association": "NONE", "body": "I was trying to use the library to read and parse a json post which I receive, so I just want to read each value, but , I dont know how to read a value inside an object. In this [example](https://nlohmann.github.io/json/classnlohmann_1_1basic__json_adcf8ca5079f5db993820bf50036bf45d.html#adcf8ca5079f5db993820bf50036bf45d) I would like to access the value of key1 or key2, I have tryed things like  object.key1 or object:key1, but none of them worked."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/913", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/913/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/913/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/913/events", "html_url": "https://github.com/nlohmann/json/issues/913", "id": 288404379, "node_id": "MDU6SXNzdWUyODg0MDQzNzk=", "number": 913, "title": "Don't use `define private public` in test files", "user": {"login": "horenmar", "id": 9026413, "node_id": "MDQ6VXNlcjkwMjY0MTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/9026413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/horenmar", "html_url": "https://github.com/horenmar", "followers_url": "https://api.github.com/users/horenmar/followers", "following_url": "https://api.github.com/users/horenmar/following{/other_user}", "gists_url": "https://api.github.com/users/horenmar/gists{/gist_id}", "starred_url": "https://api.github.com/users/horenmar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/horenmar/subscriptions", "organizations_url": "https://api.github.com/users/horenmar/orgs", "repos_url": "https://api.github.com/users/horenmar/repos", "events_url": "https://api.github.com/users/horenmar/events{/privacy}", "received_events_url": "https://api.github.com/users/horenmar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}, {"id": 344572510, "node_id": "MDU6TGFiZWwzNDQ1NzI1MTA=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20help%20needed", "name": "state: help needed", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-01-14T12:20:23Z", "updated_at": "2018-06-27T02:38:56Z", "closed_at": "2018-01-23T14:43:15Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\nI wanted to check whether Catch 2.1.0 fixed all perf. regression from Catch Classic on a real world test suite, but using `#define private public` in test files causes compilation errors because of ODR violations.\r\n\r\nOne example:\r\n```\r\nIn file included from /mnt/c/ubuntu/json/src/json.hpp:1800:0,\r\n                 from /mnt/c/ubuntu/json/test/src/unit-iterators1.cpp:32:\r\n/usr/include/c++/5/sstream:300:7: error: \u2018struct std::__cxx11::basic_stringbuf<_CharT, _Traits, _Alloc>::__xfer_bufptrs\u2019 redeclared with different access\r\n       struct __xfer_bufptrs\r\n       ^\r\ntest/CMakeFiles/test-iterators1.dir/build.make:62: recipe for target 'test/CMakeFiles/test-iterators1.dir/src/unit-iterators1.cpp.o' failed\r\n```\r\n\r\nThis is caused by Catch no longer including `<sstream>` everywhere, so an attempt to redefine `private` to `public` also hits `<sstream>` header. It can be temporarily fixed by just force including `<sstream>` before including the `json.hpp` header, but it should be noted that doing `#define private public` ~and having it affect any part of the standard library~ in any TU using the standard library is UB.\r\n\r\n\r\n_Note: There are also several test files that rely on transitive stdlib includes from Catch and will not compile with newer version._\r\n\r\n\r\n**OS & Compiler:** g++ 5.4 under WSL\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/912", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/912/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/912/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/912/events", "html_url": "https://github.com/nlohmann/json/issues/912", "id": 288386790, "node_id": "MDU6SXNzdWUyODgzODY3OTA=", "number": 912, "title": "value() template argument type deduction", "user": {"login": "rexdf", "id": 4038241, "node_id": "MDQ6VXNlcjQwMzgyNDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/4038241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rexdf", "html_url": "https://github.com/rexdf", "followers_url": "https://api.github.com/users/rexdf/followers", "following_url": "https://api.github.com/users/rexdf/following{/other_user}", "gists_url": "https://api.github.com/users/rexdf/gists{/gist_id}", "starred_url": "https://api.github.com/users/rexdf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rexdf/subscriptions", "organizations_url": "https://api.github.com/users/rexdf/orgs", "repos_url": "https://api.github.com/users/rexdf/repos", "events_url": "https://api.github.com/users/rexdf/events{/privacy}", "received_events_url": "https://api.github.com/users/rexdf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-14T06:27:54Z", "updated_at": "2018-01-14T06:48:41Z", "closed_at": "2018-01-14T06:48:41Z", "author_association": "NONE", "body": "```c++\r\nnlohmann::json a,b;\r\nb=a[\"test\"];\r\nb=a.at(\"test\");\r\nb=a.value<nlohmann::json>(\"test\", nullptr);\r\nb=a.value(\"test\", nullptr);  // both msvc and g++, compile error\r\n```\r\n\r\nIs this an expected behavior?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/910", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/910/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/910/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/910/events", "html_url": "https://github.com/nlohmann/json/issues/910", "id": 287717486, "node_id": "MDU6SXNzdWUyODc3MTc0ODY=", "number": 910, "title": "Installation path is incorrect", "user": {"login": "InFaMoUsZero", "id": 4587382, "node_id": "MDQ6VXNlcjQ1ODczODI=", "avatar_url": "https://avatars0.githubusercontent.com/u/4587382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/InFaMoUsZero", "html_url": "https://github.com/InFaMoUsZero", "followers_url": "https://api.github.com/users/InFaMoUsZero/followers", "following_url": "https://api.github.com/users/InFaMoUsZero/following{/other_user}", "gists_url": "https://api.github.com/users/InFaMoUsZero/gists{/gist_id}", "starred_url": "https://api.github.com/users/InFaMoUsZero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/InFaMoUsZero/subscriptions", "organizations_url": "https://api.github.com/users/InFaMoUsZero/orgs", "repos_url": "https://api.github.com/users/InFaMoUsZero/repos", "events_url": "https://api.github.com/users/InFaMoUsZero/events{/privacy}", "received_events_url": "https://api.github.com/users/InFaMoUsZero/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/20", "html_url": "https://github.com/nlohmann/json/milestone/20", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/20/labels", "id": 2984335, "node_id": "MDk6TWlsZXN0b25lMjk4NDMzNQ==", "number": 20, "title": "Release 3.1.0", "description": "The next release when backwards compatible features are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 30, "state": "closed", "created_at": "2017-12-17T10:12:33Z", "updated_at": "2018-02-01T23:09:13Z", "due_on": "2018-02-01T08:00:00Z", "closed_at": "2018-02-01T23:09:13Z"}, "comments": 6, "created_at": "2018-01-11T09:30:26Z", "updated_at": "2018-01-16T19:23:27Z", "closed_at": "2018-01-16T09:50:32Z", "author_association": "NONE", "body": "Calling \"make install\" now installs json.hpp to \"nlohmann/src/json.hpp\".\r\n\r\nNo sure if this was intentional.\r\n\r\nThe issue is from the latest PR change [here](https://github.com/nlohmann/json/blob/b67e00b9b56a344bfdb3ce92bf1f6724db518c95/CMakeLists.txt#L24)."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/909", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/909/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/909/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/909/events", "html_url": "https://github.com/nlohmann/json/issues/909", "id": 287440158, "node_id": "MDU6SXNzdWUyODc0NDAxNTg=", "number": 909, "title": "H", "user": {"login": "Ccwatson99", "id": 35299193, "node_id": "MDQ6VXNlcjM1Mjk5MTkz", "avatar_url": "https://avatars3.githubusercontent.com/u/35299193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ccwatson99", "html_url": "https://github.com/Ccwatson99", "followers_url": "https://api.github.com/users/Ccwatson99/followers", "following_url": "https://api.github.com/users/Ccwatson99/following{/other_user}", "gists_url": "https://api.github.com/users/Ccwatson99/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ccwatson99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ccwatson99/subscriptions", "organizations_url": "https://api.github.com/users/Ccwatson99/orgs", "repos_url": "https://api.github.com/users/Ccwatson99/repos", "events_url": "https://api.github.com/users/Ccwatson99/events{/privacy}", "received_events_url": "https://api.github.com/users/Ccwatson99/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 735376215, "node_id": "MDU6TGFiZWw3MzUzNzYyMTU=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20needs%20more%20info", "name": "state: needs more info", "color": "f9d0c4", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-10T13:51:37Z", "updated_at": "2018-01-13T10:26:58Z", "closed_at": "2018-01-13T10:26:58Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\n\r\n- What is the expected behavior?\r\n\r\n- And what is the actual behavior instead?\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\n\r\n- If you experience a compilation error: can you [compile and run the unit tests](https://github.com/nlohmann/json#execute-unit-tests)?\r\n\r\n\r\n**Feature Request**\r\n\r\n- Describe the feature in as much detail as possible.\r\n\r\n- Include sample usage where appropriate.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/908", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/908/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/908/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/908/events", "html_url": "https://github.com/nlohmann/json/issues/908", "id": 287142443, "node_id": "MDU6SXNzdWUyODcxNDI0NDM=", "number": 908, "title": "Build failure using clang 5", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-09T16:08:35Z", "updated_at": "2018-01-09T16:09:41Z", "closed_at": "2018-01-09T16:09:40Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\n\r\nThe project failed to build\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\n\r\nSee [here](https://circleci.com/gh/conda-forge/staged-recipes/22682) for a build log. The error generated is below:\r\n\r\n```\r\nIn file included from /home/conda/staged-recipes/build_artifacts/nlohmann_json_1515513797346/work/json-3.0.1/test/src/unit-modifiers.cpp:31:\r\n/home/conda/staged-recipes/build_artifacts/nlohmann_json_1515513797346/work/json-3.0.1/src/json.hpp:12061:40: error: no viable overloaded '='\r\n            result.m_it.array_iterator = m_value.array->insert(pos.m_it.array_iterator, cnt, val);\r\n            ~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/home/conda/staged-recipes/build_artifacts/nlohmann_json_1515513797346/work/json-3.0.1/test/src/unit-modifiers.cpp:585:35: note: in instantiation of member function 'nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer>::insert' requested here\r\n                auto it = j_array.insert(j_array.begin(), 3, 5);\r\n                                  ^\r\n/opt/rh/devtoolset-2/root/usr/lib/gcc/x86_64-redhat-linux/4.8.2/../../../../include/c++/4.8.2/bits/stl_iterator.h:708:11: note: candidate function (the implicit copy assignment operator) not viable: cannot convert argument of incomplete type 'void' to 'const __gnu_cxx::__normal_iterator<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer> *, std::vector<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer>, std::allocator<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >' for 1st argument\r\n    class __normal_iterator\r\n          ^\r\n/opt/rh/devtoolset-2/root/usr/lib/gcc/x86_64-redhat-linux/4.8.2/../../../../include/c++/4.8.2/bits/stl_iterator.h:708:11: note: candidate function (the implicit move assignment operator) not viable: cannot convert argument of incomplete type 'void' to '__gnu_cxx::__normal_iterator<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer> *, std::vector<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer>, std::allocator<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >' for 1st argument\r\nIn file included from /home/conda/staged-recipes/build_artifacts/nlohmann_json_1515513797346/work/json-3.0.1/test/src/unit-modifiers.cpp:31:\r\n/home/conda/staged-recipes/build_artifacts/nlohmann_json_1515513797346/work/json-3.0.1/src/json.hpp:12125:36: error: no viable overloaded '='\r\n        result.m_it.array_iterator = m_value.array->insert(\r\n        ~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~\r\n/home/conda/staged-recipes/build_artifacts/nlohmann_json_1515513797346/work/json-3.0.1/test/src/unit-modifiers.cpp:627:35: note: in instantiation of member function 'nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer>::insert' requested here\r\n                auto it = j_array.insert(j_array.end(), j_other_array.begin(), j_other_array.end());\r\n                                  ^\r\n/opt/rh/devtoolset-2/root/usr/lib/gcc/x86_64-redhat-linux/4.8.2/../../../../include/c++/4.8.2/bits/stl_iterator.h:708:11: note: candidate function (the implicit copy assignment operator) not viable: cannot convert argument of incomplete type 'void' to 'const __gnu_cxx::__normal_iterator<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer> *, std::vector<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer>, std::allocator<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >' for 1st argument\r\n    class __normal_iterator\r\n          ^\r\n/opt/rh/devtoolset-2/root/usr/lib/gcc/x86_64-redhat-linux/4.8.2/../../../../include/c++/4.8.2/bits/stl_iterator.h:708:11: note: candidate function (the implicit move assignment operator) not viable: cannot convert argument of incomplete type 'void' to '__gnu_cxx::__normal_iterator<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer> *, std::vector<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer>, std::allocator<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >' for 1st argument\r\nIn file included from /home/conda/staged-recipes/build_artifacts/nlohmann_json_1515513797346/work/json-3.0.1/test/src/unit-modifiers.cpp:31:\r\n/home/conda/staged-recipes/build_artifacts/nlohmann_json_1515513797346/work/json-3.0.1/src/json.hpp:12172:36: error: no viable overloaded '='\r\n        result.m_it.array_iterator = m_value.array->insert(pos.m_it.array_iterator, ilist.begin(), ilist.end());\r\n        ~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/home/conda/staged-recipes/build_artifacts/nlohmann_json_1515513797346/work/json-3.0.1/test/src/unit-modifiers.cpp:696:35: note: in instantiation of member function 'nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer>::insert' requested here\r\n                auto it = j_array.insert(j_array.begin(), {7, 8, 9});\r\n                                  ^\r\n/opt/rh/devtoolset-2/root/usr/lib/gcc/x86_64-redhat-linux/4.8.2/../../../../include/c++/4.8.2/bits/stl_iterator.h:708:11: note: candidate function (the implicit copy assignment operator) not viable: cannot convert argument of incomplete type 'void' to 'const __gnu_cxx::__normal_iterator<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer> *, std::vector<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer>, std::allocator<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >' for 1st argument\r\n    class __normal_iterator\r\n          ^\r\n/opt/rh/devtoolset-2/root/usr/lib/gcc/x86_64-redhat-linux/4.8.2/../../../../include/c++/4.8.2/bits/stl_iterator.h:708:11: note: candidate function (the implicit move assignment operator) not viable: cannot convert argument of incomplete type 'void' to '__gnu_cxx::__normal_iterator<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer> *, std::vector<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer>, std::allocator<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >' for 1st argument\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/907", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/907/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/907/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/907/events", "html_url": "https://github.com/nlohmann/json/issues/907", "id": 287074853, "node_id": "MDU6SXNzdWUyODcwNzQ4NTM=", "number": 907, "title": "Amalgate", "user": {"login": "milipili", "id": 5516919, "node_id": "MDQ6VXNlcjU1MTY5MTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5516919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/milipili", "html_url": "https://github.com/milipili", "followers_url": "https://api.github.com/users/milipili/followers", "following_url": "https://api.github.com/users/milipili/following{/other_user}", "gists_url": "https://api.github.com/users/milipili/gists{/gist_id}", "starred_url": "https://api.github.com/users/milipili/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/milipili/subscriptions", "organizations_url": "https://api.github.com/users/milipili/orgs", "repos_url": "https://api.github.com/users/milipili/repos", "events_url": "https://api.github.com/users/milipili/events{/privacy}", "received_events_url": "https://api.github.com/users/milipili/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/20", "html_url": "https://github.com/nlohmann/json/milestone/20", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/20/labels", "id": 2984335, "node_id": "MDk6TWlsZXN0b25lMjk4NDMzNQ==", "number": 20, "title": "Release 3.1.0", "description": "The next release when backwards compatible features are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 30, "state": "closed", "created_at": "2017-12-17T10:12:33Z", "updated_at": "2018-02-01T23:09:13Z", "due_on": "2018-02-01T08:00:00Z", "closed_at": "2018-02-01T23:09:13Z"}, "comments": 5, "created_at": "2018-01-09T12:39:08Z", "updated_at": "2018-01-18T21:04:01Z", "closed_at": "2018-01-18T21:04:01Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\n\r\n```\r\n[ 44%] Performing update step for 'amalgamate'\r\nCurrent branch master is up to date.\r\n[ 44%] Performing configure step for 'amalgamate'\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /home/milipili/projects/hc/yml2json/ext/json/amalgamate-prefix/src/amalgamate-build\r\n[ 45%] Performing build step for 'amalgamate'\r\n[100%] Built target amalgamate\r\n[ 46%] Performing install step for 'amalgamate'\r\n[100%] Built target amalgamate\r\nInstall the project...\r\n-- Install configuration: \"\"\r\n-- Up-to-date: /home/milipili/projects/hc/yml2json/bin/amalgamate\r\n[ 46%] Completed 'amalgamate'\r\n[ 48%] Built target amalgamate\r\n[ 49%] Amalgamating json.hpp...\r\n/bin/sh: 1: cd: can't cd to /home/milipili/projects/hc/yml2json/src\r\next/json/CMakeFiles/single_header.dir/build.make:57: recipe for target 'ext/json/CMakeFiles/single_header' failed\r\nmake[2]: *** [ext/json/CMakeFiles/single_header] Error 2\r\nCMakeFiles/Makefile2:1576: recipe for target 'ext/json/CMakeFiles/single_header.dir/all' failed\r\nmake[1]: *** [ext/json/CMakeFiles/single_header.dir/all] Error 2\r\nMakefile:129: recipe for target 'all' failed\r\n```\r\n\r\nSimply importing the json project does not work when building in-source.\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\n\r\n* `CMakeLists.txt`\r\n\r\n```\r\ncmake_minimum_required(VERSION 3.9)\r\nproject(xxxxxx)\r\n\r\nset(CMAKE_CXX_STANDARD 17)\r\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\r\nset(CMAKE_CXX_EXTENSIONS OFF)\r\n\r\nset(JSON_BuildTests OFF CACHE STRING \"\")\r\nadd_subdirectory(\"ext/json\")\r\n```\r\n\r\n- What is the expected behavior?\r\n\r\nIt should compile.\r\n\r\n- And what is the actual behavior instead?\r\n\r\nWell, obviously, it does not compile :)\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\n\r\ndevelop / b67e00b9b56a344bfdb3ce92bf1f6724db518c95\r\n\r\n- If you experience a compilation error: can you [compile and run the unit tests](https://github.com/nlohmann/json#execute-unit-tests)?\r\n\r\n\r\n**Feature Request**\r\n\r\n- Describe the feature in as much detail as possible.\r\n\r\n* Do not write files outside CMakeFiles (BINARY DIR). I certainly don't want to have a useless bin folder in my output (in source or out-of-source builds).\r\n* I don't really see the point of the project amalgamate. Simply using cmake to concatenate the files would be good enough and probably safer...\r\n\r\n- Include sample usage where appropriate.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/906", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/906/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/906/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/906/events", "html_url": "https://github.com/nlohmann/json/issues/906", "id": 286991553, "node_id": "MDU6SXNzdWUyODY5OTE1NTM=", "number": 906, "title": "Update documentation and tests wrt. split headers", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/20", "html_url": "https://github.com/nlohmann/json/milestone/20", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/20/labels", "id": 2984335, "node_id": "MDk6TWlsZXN0b25lMjk4NDMzNQ==", "number": 20, "title": "Release 3.1.0", "description": "The next release when backwards compatible features are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 30, "state": "closed", "created_at": "2017-12-17T10:12:33Z", "updated_at": "2018-02-01T23:09:13Z", "due_on": "2018-02-01T08:00:00Z", "closed_at": "2018-02-01T23:09:13Z"}, "comments": 0, "created_at": "2018-01-09T07:17:05Z", "updated_at": "2018-01-27T16:44:39Z", "closed_at": "2018-01-27T16:44:39Z", "author_association": "OWNER", "body": "- [x] The main file is `singled_header/json.hpp` and not `src/json.hpp`.\r\n- [x] Document amalgamation process (see #700).\r\n- [x] Document forward declaration (and annotate issues).\r\n- [x] Update contribution guidelines.\r\n- [x] Update tests: compile suite with `singled_header/json.hpp` as well as `src/json.hpp`.\r\n- [x] Add test: Check that `singled_header/json.hpp` is updated."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/905", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/905/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/905/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/905/events", "html_url": "https://github.com/nlohmann/json/issues/905", "id": 286731797, "node_id": "MDU6SXNzdWUyODY3MzE3OTc=", "number": 905, "title": "Lib not working on ubuntu 16.04", "user": {"login": "rahulm-gdb", "id": 32766438, "node_id": "MDQ6VXNlcjMyNzY2NDM4", "avatar_url": "https://avatars1.githubusercontent.com/u/32766438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rahulm-gdb", "html_url": "https://github.com/rahulm-gdb", "followers_url": "https://api.github.com/users/rahulm-gdb/followers", "following_url": "https://api.github.com/users/rahulm-gdb/following{/other_user}", "gists_url": "https://api.github.com/users/rahulm-gdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/rahulm-gdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rahulm-gdb/subscriptions", "organizations_url": "https://api.github.com/users/rahulm-gdb/orgs", "repos_url": "https://api.github.com/users/rahulm-gdb/repos", "events_url": "https://api.github.com/users/rahulm-gdb/events{/privacy}", "received_events_url": "https://api.github.com/users/rahulm-gdb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 735376215, "node_id": "MDU6TGFiZWw3MzUzNzYyMTU=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20needs%20more%20info", "name": "state: needs more info", "color": "f9d0c4", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-08T12:33:42Z", "updated_at": "2018-01-18T21:04:33Z", "closed_at": "2018-01-18T21:04:33Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\nCloned the repo and tried using json.hpp in my .cpp file.\r\nAlso tried disable debug assertions. with #define NDEBUG\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\n\r\n- What is the expected behavior?\r\nShould compile and run normally.\r\n\r\n- And what is the actual behavior instead?\r\nCompile time error.error: \r\nstatic assertion failed: could not find to_json() method in T's namespace\r\n         static_assert(sizeof(BasicJsonType) == 0\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\ntried using both release as well as develop branch.\r\n- If you experience a compilation error: can you [compile and run the unit tests](https://github.com/nlohmann/json#execute-unit-tests)? yes\r\n\r\n\r\n**Feature Request**\r\n\r\n- Describe the feature in as much detail as possible.\r\n\r\n- Include sample usage where appropriate.\r\n"}]