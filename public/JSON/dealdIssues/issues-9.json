[{"url": "https://api.github.com/repos/nlohmann/json/issues/694", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/694/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/694/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/694/events", "html_url": "https://github.com/nlohmann/json/issues/694", "id": 249596634, "node_id": "MDU6SXNzdWUyNDk1OTY2MzQ=", "number": 694, "title": "support the Chinese language in json string", "user": {"login": "yuanhui2015", "id": 13148268, "node_id": "MDQ6VXNlcjEzMTQ4MjY4", "avatar_url": "https://avatars0.githubusercontent.com/u/13148268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuanhui2015", "html_url": "https://github.com/yuanhui2015", "followers_url": "https://api.github.com/users/yuanhui2015/followers", "following_url": "https://api.github.com/users/yuanhui2015/following{/other_user}", "gists_url": "https://api.github.com/users/yuanhui2015/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuanhui2015/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuanhui2015/subscriptions", "organizations_url": "https://api.github.com/users/yuanhui2015/orgs", "repos_url": "https://api.github.com/users/yuanhui2015/repos", "events_url": "https://api.github.com/users/yuanhui2015/events{/privacy}", "received_events_url": "https://api.github.com/users/yuanhui2015/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2017-08-11T10:32:37Z", "updated_at": "2018-03-22T16:34:35Z", "closed_at": "2017-08-11T11:01:11Z", "author_association": "NONE", "body": "new version doesn't support the Chinese language in json string, I has been fixed. please see the attachment."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/693", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/693/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/693/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/693/events", "html_url": "https://github.com/nlohmann/json/issues/693", "id": 249532366, "node_id": "MDU6SXNzdWUyNDk1MzIzNjY=", "number": 693, "title": "NaN problem within develop branch", "user": {"login": "zenfey", "id": 6791543, "node_id": "MDQ6VXNlcjY3OTE1NDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6791543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zenfey", "html_url": "https://github.com/zenfey", "followers_url": "https://api.github.com/users/zenfey/followers", "following_url": "https://api.github.com/users/zenfey/following{/other_user}", "gists_url": "https://api.github.com/users/zenfey/gists{/gist_id}", "starred_url": "https://api.github.com/users/zenfey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zenfey/subscriptions", "organizations_url": "https://api.github.com/users/zenfey/orgs", "repos_url": "https://api.github.com/users/zenfey/repos", "events_url": "https://api.github.com/users/zenfey/events{/privacy}", "received_events_url": "https://api.github.com/users/zenfey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-11T03:43:19Z", "updated_at": "2017-08-12T10:07:23Z", "closed_at": "2017-08-12T09:02:14Z", "author_association": "NONE", "body": "Library json is a very nice and foregoing work. \r\n\r\nI noticed that develop branch made effort on the bug of NaN and INF problem. however after deserialization of a serialized json object containing nan, an exception is throwed. binary serialization works fine.\r\n\r\n```cpp\r\n#include <json.hpp>\r\n#include <vector>\r\n#include <iostream>\r\n\r\nusing json =  nlohmann::json;\r\n\r\nint main() {\r\n\r\n\tstd::vector<double> a;\r\n\ta.push_back(std::numeric_limits<double>::quiet_NaN());\r\n\ta.push_back(2);\r\n\tjson j;\r\n\tj[\"vec\"] = a;\r\n\tj[\"number\"] = std::numeric_limits<double>::quiet_NaN();\r\n\r\n\tstd::string strj = j.dump();\r\n\r\n\tjson j2 = json::parse(strj);\r\n\r\n\tstd::vector<double> b = j2[\"vec\"];\r\n\tstd::cout << b[0] << std::endl;\r\n\tdouble n = j2[\"number\"];\r\n\tstd::cout << n << std::endl;\r\n\t\r\n\treturn 0;\r\n}\r\n```\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/692", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/692/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/692/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/692/events", "html_url": "https://github.com/nlohmann/json/issues/692", "id": 249510619, "node_id": "MDU6SXNzdWUyNDk1MTA2MTk=", "number": 692, "title": "Please post example of specialization for boost::filesystem", "user": {"login": "solvingj", "id": 8557737, "node_id": "MDQ6VXNlcjg1NTc3Mzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8557737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solvingj", "html_url": "https://github.com/solvingj", "followers_url": "https://api.github.com/users/solvingj/followers", "following_url": "https://api.github.com/users/solvingj/following{/other_user}", "gists_url": "https://api.github.com/users/solvingj/gists{/gist_id}", "starred_url": "https://api.github.com/users/solvingj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solvingj/subscriptions", "organizations_url": "https://api.github.com/users/solvingj/orgs", "repos_url": "https://api.github.com/users/solvingj/repos", "events_url": "https://api.github.com/users/solvingj/events{/privacy}", "received_events_url": "https://api.github.com/users/solvingj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-08-11T00:15:18Z", "updated_at": "2017-08-11T16:26:49Z", "closed_at": "2017-08-11T16:26:49Z", "author_association": "NONE", "body": "You gave an example for boost::optional which was very nice, however i spent some time trying to adapt with no success, here was my best guess.   \r\n\r\n```cpp\r\n  template<>\r\n  struct adl_serializer<boost::filesystem::path>\r\n  {\r\n    static void to_json(json& j, const boost::filesystem::path& path)\r\n    {\r\n      j = path.string();\r\n    }\r\n\r\n    static void from_json(const json& j, boost::filesystem::path& path)\r\n    {\r\n      path = boost::filesystem::path(j);\r\n    }\r\n  };\r\n  \r\n```\r\n\r\nCan you please advise?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/691", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/691/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/691/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/691/events", "html_url": "https://github.com/nlohmann/json/issues/691", "id": 249458286, "node_id": "MDU6SXNzdWUyNDk0NTgyODY=", "number": 691, "title": "Impossible to do an array of composite objects", "user": {"login": "marsvoltero", "id": 7318318, "node_id": "MDQ6VXNlcjczMTgzMTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7318318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marsvoltero", "html_url": "https://github.com/marsvoltero", "followers_url": "https://api.github.com/users/marsvoltero/followers", "following_url": "https://api.github.com/users/marsvoltero/following{/other_user}", "gists_url": "https://api.github.com/users/marsvoltero/gists{/gist_id}", "starred_url": "https://api.github.com/users/marsvoltero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marsvoltero/subscriptions", "organizations_url": "https://api.github.com/users/marsvoltero/orgs", "repos_url": "https://api.github.com/users/marsvoltero/repos", "events_url": "https://api.github.com/users/marsvoltero/events{/privacy}", "received_events_url": "https://api.github.com/users/marsvoltero/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2017-08-10T19:54:02Z", "updated_at": "2017-08-10T20:52:14Z", "closed_at": "2017-08-10T20:52:03Z", "author_association": "NONE", "body": "I need to create a JSon array like this for example:\r\n\r\n```\r\njson j;\r\nj.push_back(\" { { \"objectId\" : 0 } , {\"transfer_data\" : [ {\"transfer_id\" : 0 } , {\"transfer_time\" : 57 } ]  } } \");\r\nj.push_back(\" { { \"objectId\" : 1 } , {\"transfer_data\" : [ {\"transfer_id\" : 1 } , {\"transfer_time\" : 49 } ]  } } \");\r\n```\r\n\r\nBut the push_back function only acept initializer list that contains only two elements.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/690", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/690/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/690/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/690/events", "html_url": "https://github.com/nlohmann/json/issues/690", "id": 249396098, "node_id": "MDU6SXNzdWUyNDkzOTYwOTg=", "number": 690, "title": "How to save json to file?", "user": {"login": "NeverMine17", "id": 23419131, "node_id": "MDQ6VXNlcjIzNDE5MTMx", "avatar_url": "https://avatars2.githubusercontent.com/u/23419131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NeverMine17", "html_url": "https://github.com/NeverMine17", "followers_url": "https://api.github.com/users/NeverMine17/followers", "following_url": "https://api.github.com/users/NeverMine17/following{/other_user}", "gists_url": "https://api.github.com/users/NeverMine17/gists{/gist_id}", "starred_url": "https://api.github.com/users/NeverMine17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NeverMine17/subscriptions", "organizations_url": "https://api.github.com/users/NeverMine17/orgs", "repos_url": "https://api.github.com/users/NeverMine17/repos", "events_url": "https://api.github.com/users/NeverMine17/events{/privacy}", "received_events_url": "https://api.github.com/users/NeverMine17/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-08-10T15:59:08Z", "updated_at": "2017-12-04T21:16:12Z", "closed_at": "2017-08-15T14:55:26Z", "author_association": "NONE", "body": "I'm trying to save json to file and all I'm getting is some weird errors. Any help?\r\nHere is all the info:\r\n\r\n#### *Verison json: 2.1.1*\r\n#### *gcc version 6.3.0 20170618 (Ubuntu 6.3.0-19ubuntu1)*\r\n\r\n## Example code\r\n```cpp\r\n#include \"json.hpp\"\r\nusing jsonf = nlohmann::json;\r\njsonf jsonfile;\r\n\r\n// ...\r\n\r\njsonfile[\"foo\"] = \"bar\";\r\n\r\nstd::fstream file(\"key.json\");\r\nfile << jsonfile;\r\n```\r\n## Error\r\n```\r\njson.hpp:843:9: error: static assertion failed: could not find to_json() method in T's namespace\r\n         static_assert(sizeof(BasicJsonType) == 0,\r\n         ^~~~~~~~~~~~~\r\n\r\njson.hpp:843:9: error: static assertion failed: could not find to_json() method in T's namespace\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/689", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/689/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/689/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/689/events", "html_url": "https://github.com/nlohmann/json/issues/689", "id": 249377051, "node_id": "MDU6SXNzdWUyNDkzNzcwNTE=", "number": 689, "title": "my simple json parser", "user": {"login": "pejman-hkh", "id": 3132990, "node_id": "MDQ6VXNlcjMxMzI5OTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/3132990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pejman-hkh", "html_url": "https://github.com/pejman-hkh", "followers_url": "https://api.github.com/users/pejman-hkh/followers", "following_url": "https://api.github.com/users/pejman-hkh/following{/other_user}", "gists_url": "https://api.github.com/users/pejman-hkh/gists{/gist_id}", "starred_url": "https://api.github.com/users/pejman-hkh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pejman-hkh/subscriptions", "organizations_url": "https://api.github.com/users/pejman-hkh/orgs", "repos_url": "https://api.github.com/users/pejman-hkh/repos", "events_url": "https://api.github.com/users/pejman-hkh/events{/privacy}", "received_events_url": "https://api.github.com/users/pejman-hkh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-10T15:01:37Z", "updated_at": "2017-08-10T16:04:10Z", "closed_at": "2017-08-10T15:19:59Z", "author_association": "NONE", "body": ""}, {"url": "https://api.github.com/repos/nlohmann/json/issues/688", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/688/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/688/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/688/events", "html_url": "https://github.com/nlohmann/json/issues/688", "id": 249278398, "node_id": "MDU6SXNzdWUyNDkyNzgzOTg=", "number": 688, "title": "problem with new struct parsing syntax", "user": {"login": "ykochenkov", "id": 17925342, "node_id": "MDQ6VXNlcjE3OTI1MzQy", "avatar_url": "https://avatars3.githubusercontent.com/u/17925342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ykochenkov", "html_url": "https://github.com/ykochenkov", "followers_url": "https://api.github.com/users/ykochenkov/followers", "following_url": "https://api.github.com/users/ykochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/ykochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/ykochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ykochenkov/subscriptions", "organizations_url": "https://api.github.com/users/ykochenkov/orgs", "repos_url": "https://api.github.com/users/ykochenkov/repos", "events_url": "https://api.github.com/users/ykochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/ykochenkov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-08-10T09:00:07Z", "updated_at": "2017-11-01T10:16:04Z", "closed_at": "2017-11-01T10:16:04Z", "author_association": "NONE", "body": "Hello. \r\nWe wrote a big product with the help of version 2.0.x. With this version we could write serializers like that:\r\n\r\n```cpp\r\nEngineState::EngineState(const json& config) :\r\n\tuserConfig(config.at(\"userConfig\")),\r\n\tpublicConfig(config.at(\"publicConfig\"))\r\n{}\r\n\r\nEngineState::EngineState::operator json() const\r\n{\r\n\treturn{\r\n\t\t{ \"userConfig\", userConfig },\r\n\t\t{ \"publicConfig\", publicConfig },\r\n\t};\r\n}\r\n```\r\n\r\nWith the modern version of library this code is not compiled and to_json and from_json functions required.\r\nIs there a way to fix that problem without rewriting the whole project?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/684", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/684/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/684/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/684/events", "html_url": "https://github.com/nlohmann/json/issues/684", "id": 248973926, "node_id": "MDU6SXNzdWUyNDg5NzM5MjY=", "number": 684, "title": "Parse error while parse the json string contains  UTF 8 encoded document bytes string", "user": {"login": "sivapooja", "id": 30114433, "node_id": "MDQ6VXNlcjMwMTE0NDMz", "avatar_url": "https://avatars2.githubusercontent.com/u/30114433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sivapooja", "html_url": "https://github.com/sivapooja", "followers_url": "https://api.github.com/users/sivapooja/followers", "following_url": "https://api.github.com/users/sivapooja/following{/other_user}", "gists_url": "https://api.github.com/users/sivapooja/gists{/gist_id}", "starred_url": "https://api.github.com/users/sivapooja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sivapooja/subscriptions", "organizations_url": "https://api.github.com/users/sivapooja/orgs", "repos_url": "https://api.github.com/users/sivapooja/repos", "events_url": "https://api.github.com/users/sivapooja/events{/privacy}", "received_events_url": "https://api.github.com/users/sivapooja/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-09T09:41:17Z", "updated_at": "2017-12-04T21:16:23Z", "closed_at": "2017-08-15T14:55:46Z", "author_association": "NONE", "body": "Hi,\r\nI am sending json string with UTF 8 encoded document bytees string from asp.net and receiving the json from c++ program , i am getting parse error while trying to parse the received json string to json object\r\n\r\n```cpp\r\n        string jsonStr = string( body.begin(), body.end() );               \r\n         json j = json::parse(jsonStr);\r\n```\r\n\r\nAsp.net Json string \r\n\r\n```ASP\r\nstring docBytesStr = System.Text.Encoding.UTF8.GetString(docBytes, 0, docBytes.Length);\r\nstring jsonData = \"{ \\\"template\\\" : \\\"1\\\", \\\"doc\\\":\\\"\" + docBytesStr + \"\\\"  }\";\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/683", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/683/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/683/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/683/events", "html_url": "https://github.com/nlohmann/json/issues/683", "id": 248897523, "node_id": "MDU6SXNzdWUyNDg4OTc1MjM=", "number": 683, "title": "[question] how to get a string value by pointer", "user": {"login": "zhishupp", "id": 6071453, "node_id": "MDQ6VXNlcjYwNzE0NTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6071453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhishupp", "html_url": "https://github.com/zhishupp", "followers_url": "https://api.github.com/users/zhishupp/followers", "following_url": "https://api.github.com/users/zhishupp/following{/other_user}", "gists_url": "https://api.github.com/users/zhishupp/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhishupp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhishupp/subscriptions", "organizations_url": "https://api.github.com/users/zhishupp/orgs", "repos_url": "https://api.github.com/users/zhishupp/repos", "events_url": "https://api.github.com/users/zhishupp/events{/privacy}", "received_events_url": "https://api.github.com/users/zhishupp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-08-09T02:14:43Z", "updated_at": "2017-08-10T07:09:58Z", "closed_at": "2017-08-10T07:09:58Z", "author_association": "NONE", "body": "I wrapped a C lib for using json.hpp, like this:\r\n\r\n**json_string = {\"file\":\"/opt/test.conf\"}**\r\n\r\nset json_string to a static json object\r\n\r\n**static json para = json::parse(json_string);**\r\n\r\n`\r\nextern \"C\" const char*   \r\n  \r\nget_json_string()    \r\n\r\n{                       \r\n\r\n    if (para[\"file\"].is_string())     \r\n                \r\n    {                        \r\n\r\n        return para[\"file\"].get<std::string>().c_str();      \r\n               \r\n    }          \r\n             \r\n}\r\n`\r\n\r\nbut actually, get_json_string cannot get the real address of para, so how to get a string value in this way ?\r\n\r\nI don't want to use strcpy like this:\r\n`\r\nget_json_string(char* value)\r\n\r\n{\r\n\r\n    if (para[\"file\"].is_string())\r\n\r\n    {\r\n\r\n        strcpy(value, para[\"file\"].get<std::string>().c_str());\r\n\r\n    }\r\n\r\n}\r\n`\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/681", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/681/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/681/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/681/events", "html_url": "https://github.com/nlohmann/json/issues/681", "id": 248662850, "node_id": "MDU6SXNzdWUyNDg2NjI4NTA=", "number": 681, "title": "create json object from string variable", "user": {"login": "sivapooja", "id": 30114433, "node_id": "MDQ6VXNlcjMwMTE0NDMz", "avatar_url": "https://avatars2.githubusercontent.com/u/30114433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sivapooja", "html_url": "https://github.com/sivapooja", "followers_url": "https://api.github.com/users/sivapooja/followers", "following_url": "https://api.github.com/users/sivapooja/following{/other_user}", "gists_url": "https://api.github.com/users/sivapooja/gists{/gist_id}", "starred_url": "https://api.github.com/users/sivapooja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sivapooja/subscriptions", "organizations_url": "https://api.github.com/users/sivapooja/orgs", "repos_url": "https://api.github.com/users/sivapooja/repos", "events_url": "https://api.github.com/users/sivapooja/events{/privacy}", "received_events_url": "https://api.github.com/users/sivapooja/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-08-08T10:00:12Z", "updated_at": "2017-08-09T04:22:45Z", "closed_at": "2017-08-09T04:22:45Z", "author_association": "NONE", "body": "How to create json object from string variable? i tried to create json object from string variable but doesn't work\r\n\r\n`\r\njson j = jsonStr_json\r\n`\r\n\r\njsonStr is string variable which holds json string."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/680", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/680/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/680/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/680/events", "html_url": "https://github.com/nlohmann/json/issues/680", "id": 248614029, "node_id": "MDU6SXNzdWUyNDg2MTQwMjk=", "number": 680, "title": "adl_serializer and CRTP", "user": {"login": "stevefan1999", "id": 29133953, "node_id": "MDQ6VXNlcjI5MTMzOTUz", "avatar_url": "https://avatars2.githubusercontent.com/u/29133953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stevefan1999", "html_url": "https://github.com/stevefan1999", "followers_url": "https://api.github.com/users/stevefan1999/followers", "following_url": "https://api.github.com/users/stevefan1999/following{/other_user}", "gists_url": "https://api.github.com/users/stevefan1999/gists{/gist_id}", "starred_url": "https://api.github.com/users/stevefan1999/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stevefan1999/subscriptions", "organizations_url": "https://api.github.com/users/stevefan1999/orgs", "repos_url": "https://api.github.com/users/stevefan1999/repos", "events_url": "https://api.github.com/users/stevefan1999/events{/privacy}", "received_events_url": "https://api.github.com/users/stevefan1999/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-08T06:34:43Z", "updated_at": "2017-09-29T08:31:11Z", "closed_at": "2017-09-29T08:31:11Z", "author_association": "NONE", "body": "Because I really hate defining to_json/from_json by using the infamous ADL trick (I come from a C#/Java background so the fame of ADL depends), I decided to make the OOP-way-of-serialization shim of my own\r\n\r\nI was having some progress, the following code demonstrated is a complete valid and legit code:\r\n\r\nIJsonSerializable.hpp:\r\n```C++\r\ntemplate<class T>\r\nstruct IJsonSerializable {\r\n\tusing self_t = IJsonSerializable<T>;\r\n\r\n\tconstexpr void to_json(json &j) const {\r\n\t\tauto self = const_cast<self_t *>(this);\r\n\t\tstatic_cast<T *>(self)->to_json(j);\r\n\t}\r\n\r\n\tconstexpr void from_json(json &j) const {\r\n\t\tauto self = const_cast<self_t *>(this);\r\n\t\tstatic_cast<T *>(self)->from_json(j);\r\n\t}\r\n};\r\n\r\ntemplate <class T>\r\nconstexpr void to_json(json &j, const IJsonSerializable<T> *value) {\r\n\tvalue->to_json(j);\r\n}\r\n\r\ntemplate <class T>\r\nconstexpr void from_json(const json &j, IJsonSerializable<T> *value) {\r\n\tauto _j = const_cast<json &>(j);\r\n\tvalue->from_json(_j);\r\n}\r\n\r\ntemplate <class T>\r\nconstexpr void to_json(json &j, const IJsonSerializable<T> &value) {\r\n\tvalue.to_json(j);\r\n}\r\n\r\ntemplate <class T>\r\nconstexpr void from_json(const json &j, IJsonSerializable<T> &value) {\r\n\tauto _j = const_cast<json &>(j);\r\n\tvalue.from_json(_j);\r\n}\r\n```\r\n\r\nVector3.hpp:\r\n```C++\r\n#include \"IJsonSerializable.h\"\r\n\r\nstruct Vector3 : public IJsonSerializable<Vector3> {\r\n\tfloat x, y, z;\r\n\r\npublic:\r\n\tvoid to_json(json &j)  {\r\n\t\tj = { \r\n\t\t\t{ \"x\", x }, \r\n\t\t\t{ \"y\", y }, \r\n\t\t\t{ \"z\", z} \r\n\t\t};\r\n\t}\r\n\r\n\tvoid from_json(json &j) {\r\n\t\tx = j[\"x\"];\r\n\t\ty = j[\"y\"];\r\n\t\tz = j[\"z\"];\r\n\t}\r\n};\r\n```\r\nThis works pretty much fine for me, but is there any way to rewrite it in the following form?\r\n```C++\r\nnamespace nlohmann {\r\n\ttemplate <class T>\r\n\tstruct adl_serializer<IJsonSerializable<T>> { // not working, should I insert SFINAE here?\r\n\t\tusing self_t = IJsonSerializable<T>;\r\n\r\n\t\tconstexpr void to_json(json &j, const self_t *value) {\r\n\t\t\tvalue->to_json(j);\r\n\t\t}\r\n\r\n\t\tconstexpr void from_json(const json &j, self_t *value) {\r\n\t\t\tauto _j = const_cast<json &>(j);\r\n\t\t\tvalue->from_json(_j);\r\n\t\t}\r\n\r\n\t\tconstexpr void to_json(json &j, const self_t &value) {\r\n\t\t\tvalue.to_json(j);\r\n\t\t}\r\n\r\n\t\tconstexpr void from_json(const json &j, self_t &value) {\r\n\t\t\tauto _j = const_cast<json &>(j);\r\n\t\t\tvalue.from_json(_j);\r\n\t\t}\r\n\t};\r\n}\r\n```\r\nI group all my other serializers into `namespace nlohmann` just to keep it away from polluting my global namespace without creating another namespace of my own."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/677", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/677/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/677/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/677/events", "html_url": "https://github.com/nlohmann/json/issues/677", "id": 248079587, "node_id": "MDU6SXNzdWUyNDgwNzk1ODc=", "number": 677, "title": "Is there a way to control the precision of serialized floating point numbers?", "user": {"login": "gonzalobenegas", "id": 5766420, "node_id": "MDQ6VXNlcjU3NjY0MjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5766420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gonzalobenegas", "html_url": "https://github.com/gonzalobenegas", "followers_url": "https://api.github.com/users/gonzalobenegas/followers", "following_url": "https://api.github.com/users/gonzalobenegas/following{/other_user}", "gists_url": "https://api.github.com/users/gonzalobenegas/gists{/gist_id}", "starred_url": "https://api.github.com/users/gonzalobenegas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gonzalobenegas/subscriptions", "organizations_url": "https://api.github.com/users/gonzalobenegas/orgs", "repos_url": "https://api.github.com/users/gonzalobenegas/repos", "events_url": "https://api.github.com/users/gonzalobenegas/events{/privacy}", "received_events_url": "https://api.github.com/users/gonzalobenegas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-04T18:15:10Z", "updated_at": "2017-08-08T18:24:24Z", "closed_at": "2017-08-08T18:24:24Z", "author_association": "NONE", "body": "I currently see doubles are being serialized with 16 significant figures. Is there any way to serialize them using, say, 6 significant figures?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/676", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/676/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/676/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/676/events", "html_url": "https://github.com/nlohmann/json/issues/676", "id": 248022016, "node_id": "MDU6SXNzdWUyNDgwMjIwMTY=", "number": 676, "title": "Is there a way to get the path of a value?", "user": {"login": "trikkegitaar", "id": 29774698, "node_id": "MDQ6VXNlcjI5Nzc0Njk4", "avatar_url": "https://avatars3.githubusercontent.com/u/29774698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trikkegitaar", "html_url": "https://github.com/trikkegitaar", "followers_url": "https://api.github.com/users/trikkegitaar/followers", "following_url": "https://api.github.com/users/trikkegitaar/following{/other_user}", "gists_url": "https://api.github.com/users/trikkegitaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/trikkegitaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trikkegitaar/subscriptions", "organizations_url": "https://api.github.com/users/trikkegitaar/orgs", "repos_url": "https://api.github.com/users/trikkegitaar/repos", "events_url": "https://api.github.com/users/trikkegitaar/events{/privacy}", "received_events_url": "https://api.github.com/users/trikkegitaar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-04T14:25:13Z", "updated_at": "2017-08-08T16:20:51Z", "closed_at": "2017-08-08T16:20:51Z", "author_association": "NONE", "body": "While traversing the json structure I'd like to fetch the path of a certain value, something like \"/answer/everything\".\r\nIs this possible?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/675", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/675/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/675/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/675/events", "html_url": "https://github.com/nlohmann/json/issues/675", "id": 247909207, "node_id": "MDU6SXNzdWUyNDc5MDkyMDc=", "number": 675, "title": "Could the parser locate errors to line?", "user": {"login": "PinkGabriel", "id": 9349907, "node_id": "MDQ6VXNlcjkzNDk5MDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/9349907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PinkGabriel", "html_url": "https://github.com/PinkGabriel", "followers_url": "https://api.github.com/users/PinkGabriel/followers", "following_url": "https://api.github.com/users/PinkGabriel/following{/other_user}", "gists_url": "https://api.github.com/users/PinkGabriel/gists{/gist_id}", "starred_url": "https://api.github.com/users/PinkGabriel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PinkGabriel/subscriptions", "organizations_url": "https://api.github.com/users/PinkGabriel/orgs", "repos_url": "https://api.github.com/users/PinkGabriel/repos", "events_url": "https://api.github.com/users/PinkGabriel/events{/privacy}", "received_events_url": "https://api.github.com/users/PinkGabriel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-04T05:50:56Z", "updated_at": "2017-08-04T09:17:18Z", "closed_at": "2017-08-04T09:17:18Z", "author_association": "NONE", "body": "hello again~\r\nI use the lib to parse a json file like this:\r\n\r\nstd::ifstream ifs(filename);\r\njson json_input;\r\nifs >> json_input;\r\n\r\nThen I use the json class to do things. But if the input file has syntax error, the parser just reports what the error is, without where the error happens. Is it possible to locate errors to exactly which line the error happens in the json file?\r\nThanks!"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/673", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/673/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/673/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/673/events", "html_url": "https://github.com/nlohmann/json/issues/673", "id": 247117765, "node_id": "MDU6SXNzdWUyNDcxMTc3NjU=", "number": 673, "title": "There is performance inefficiency found by coverity tool json2.1.1/include/nlohmann/json.hpp", "user": {"login": "qinglucich", "id": 26724691, "node_id": "MDQ6VXNlcjI2NzI0Njkx", "avatar_url": "https://avatars3.githubusercontent.com/u/26724691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qinglucich", "html_url": "https://github.com/qinglucich", "followers_url": "https://api.github.com/users/qinglucich/followers", "following_url": "https://api.github.com/users/qinglucich/following{/other_user}", "gists_url": "https://api.github.com/users/qinglucich/gists{/gist_id}", "starred_url": "https://api.github.com/users/qinglucich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qinglucich/subscriptions", "organizations_url": "https://api.github.com/users/qinglucich/orgs", "repos_url": "https://api.github.com/users/qinglucich/repos", "events_url": "https://api.github.com/users/qinglucich/events{/privacy}", "received_events_url": "https://api.github.com/users/qinglucich/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 8, "created_at": "2017-08-01T15:55:30Z", "updated_at": "2017-08-15T19:58:29Z", "closed_at": "2017-08-15T18:40:47Z", "author_association": "NONE", "body": "4063    @since version 1.0.0\r\n4064    */\r\n4065    template<class ValueType, typename std::enable_if<\r\n4066                 std::is_convertible<basic_json_t, ValueType>::value, int>::type = 0>\r\n    \t\r\nCID 10413 (#1 of 1): Big parameter passed by value (PASS_BY_VALUE)\r\npass_by_value: Passing parameter default_value of type cerebras::file_metadata (size 168 bytes) by value.\r\n4067    ValueType value(const typename object_t::key_type& key, ValueType default_value) const\r\n4068    {"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/672", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/672/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/672/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/672/events", "html_url": "https://github.com/nlohmann/json/issues/672", "id": 246686377, "node_id": "MDU6SXNzdWUyNDY2ODYzNzc=", "number": 672, "title": "include problem, when cmake on osx", "user": {"login": "xiazhibin", "id": 11945009, "node_id": "MDQ6VXNlcjExOTQ1MDA5", "avatar_url": "https://avatars0.githubusercontent.com/u/11945009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiazhibin", "html_url": "https://github.com/xiazhibin", "followers_url": "https://api.github.com/users/xiazhibin/followers", "following_url": "https://api.github.com/users/xiazhibin/following{/other_user}", "gists_url": "https://api.github.com/users/xiazhibin/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiazhibin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiazhibin/subscriptions", "organizations_url": "https://api.github.com/users/xiazhibin/orgs", "repos_url": "https://api.github.com/users/xiazhibin/repos", "events_url": "https://api.github.com/users/xiazhibin/events{/privacy}", "received_events_url": "https://api.github.com/users/xiazhibin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-31T08:50:43Z", "updated_at": "2017-07-31T09:14:20Z", "closed_at": "2017-07-31T09:14:20Z", "author_association": "NONE", "body": "I clone the project , and make install.\r\nIn my cpp file, I must `#include \"nlohmann/json.hpp\"` not `#include \"json.hpp\" as it mentions`\r\n\r\nWhy?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/670", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/670/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/670/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/670/events", "html_url": "https://github.com/nlohmann/json/issues/670", "id": 246541045, "node_id": "MDU6SXNzdWUyNDY1NDEwNDU=", "number": 670, "title": "Operator= ambiguous in C++1z and GCC 7.1.1", "user": {"login": "nick-prat", "id": 19151224, "node_id": "MDQ6VXNlcjE5MTUxMjI0", "avatar_url": "https://avatars3.githubusercontent.com/u/19151224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nick-prat", "html_url": "https://github.com/nick-prat", "followers_url": "https://api.github.com/users/nick-prat/followers", "following_url": "https://api.github.com/users/nick-prat/following{/other_user}", "gists_url": "https://api.github.com/users/nick-prat/gists{/gist_id}", "starred_url": "https://api.github.com/users/nick-prat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nick-prat/subscriptions", "organizations_url": "https://api.github.com/users/nick-prat/orgs", "repos_url": "https://api.github.com/users/nick-prat/repos", "events_url": "https://api.github.com/users/nick-prat/events{/privacy}", "received_events_url": "https://api.github.com/users/nick-prat/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 304694104, "node_id": "MDU6TGFiZWwzMDQ2OTQxMDQ=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20please%20discuss", "name": "state: please discuss", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-07-29T19:37:57Z", "updated_at": "2017-08-01T18:45:38Z", "closed_at": "2017-08-01T18:45:38Z", "author_association": "NONE", "body": "With the new GCC 7.1.1 there is a bug with reassigning to strings.\r\n\r\nIn this code\r\n```cpp\r\n#include <string>\r\n#include <iostream>\r\n#include <json.hpp>\r\n\r\nusing json = nlohmann::json;\r\n\r\nint main() {\r\n    json js;\r\n    std::string name = \"\";\r\n    name = js[\"name\"];\r\n}\r\n```\r\nit produces the error\r\n```\r\nIn file included from /usr/include/c++/7.1.1/string:52:0,\r\n                 from json_error.cc:1:\r\n/usr/include/c++/7.1.1/bits/basic_string.h: In instantiation of \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_If_sv<_Tp, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(_Tp) [with _Tp = nlohmann::basic_json<>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_If_sv<_Tp, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&> = std::__cxx11::basic_string<char>&]\u2019:\r\njson_error.cc:10:21:   required from here\r\n/usr/include/c++/7.1.1/bits/basic_string.h:764:28: error: call of overloaded \u2018assign(nlohmann::basic_json<>&)\u2019 is ambiguous\r\n  { return this->assign(__sv); }\r\n                            ^\r\n/usr/include/c++/7.1.1/bits/basic_string.h:1313:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::assign(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\r\n       assign(const basic_string& __str)\r\n       ^~~~~~\r\n/usr/include/c++/7.1.1/bits/basic_string.h:1329:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::assign(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\r\n       assign(basic_string&& __str)\r\n       ^~~~~~\r\n/usr/include/c++/7.1.1/bits/basic_string.h:1440:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::assign(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__sv_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__sv_type = std::basic_string_view<char>]\r\n       assign(__sv_type __sv)\r\n       ^~~~~~\r\n```\r\nwhen built with `g++ -std=c++1z filename.cpp` but it will compile fine with `c++ -std=c++14 filename.cpp`\r\n\r\nthis also occurs if using clang if the GCC libs version is 7.1.1"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/668", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/668/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/668/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/668/events", "html_url": "https://github.com/nlohmann/json/issues/668", "id": 246136650, "node_id": "MDU6SXNzdWUyNDYxMzY2NTA=", "number": 668, "title": "should't the cmake install target be to nlohman/json.hpp", "user": {"login": "dan-42", "id": 1706857, "node_id": "MDQ6VXNlcjE3MDY4NTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1706857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dan-42", "html_url": "https://github.com/dan-42", "followers_url": "https://api.github.com/users/dan-42/followers", "following_url": "https://api.github.com/users/dan-42/following{/other_user}", "gists_url": "https://api.github.com/users/dan-42/gists{/gist_id}", "starred_url": "https://api.github.com/users/dan-42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dan-42/subscriptions", "organizations_url": "https://api.github.com/users/dan-42/orgs", "repos_url": "https://api.github.com/users/dan-42/repos", "events_url": "https://api.github.com/users/dan-42/events{/privacy}", "received_events_url": "https://api.github.com/users/dan-42/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 7, "created_at": "2017-07-27T18:57:01Z", "updated_at": "2018-01-26T12:56:07Z", "closed_at": "2017-07-31T21:24:32Z", "author_association": "CONTRIBUTOR", "body": "dear @nlohmann and other developers\r\nfirst of all many thx for this awesome lib. The usage and simplicity is very cool and I and some former coworkers use it on many places in production and private projects.\r\n\r\nSo my question: is it on purpose that cmake exposes the ``` json.hpp ``` for include directly?\r\nafter all a ``` cmake install ``` installes the file into  ``` nlohmann/json.hpp ``` and the usage is also \r\ninside the namespace ``` nlohmann ```?\r\n\r\nso for the sake of consistancy in bigger projects and also to avoid name collisions with other libraries in package managers, it might be better to atleast for ``` cmake install ``` to expose the the include to ``` nlohmann/json.jpp ``` and users of package managers could easaly disdinguish between nlohmann_json, jsoncpp, and  so on.\r\n\r\n\r\n\r\nThe cause of my request is, that I wanted to update the cmake/hunter package which was still on V1.0.0rc. and integrating ```nlohman_json ``` with the current CMakeLists.txt would cause an inconsistency with the package name, the include and the namespace the user has to see.\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/667", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/667/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/667/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/667/events", "html_url": "https://github.com/nlohmann/json/issues/667", "id": 246068599, "node_id": "MDU6SXNzdWUyNDYwNjg1OTk=", "number": 667, "title": "deserialise from `std::vector`", "user": {"login": "mlund", "id": 3248398, "node_id": "MDQ6VXNlcjMyNDgzOTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3248398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlund", "html_url": "https://github.com/mlund", "followers_url": "https://api.github.com/users/mlund/followers", "following_url": "https://api.github.com/users/mlund/following{/other_user}", "gists_url": "https://api.github.com/users/mlund/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlund/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlund/subscriptions", "organizations_url": "https://api.github.com/users/mlund/orgs", "repos_url": "https://api.github.com/users/mlund/repos", "events_url": "https://api.github.com/users/mlund/events{/privacy}", "received_events_url": "https://api.github.com/users/mlund/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}, {"id": 344572510, "node_id": "MDU6TGFiZWwzNDQ1NzI1MTA=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20help%20needed", "name": "state: help needed", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-07-27T14:58:13Z", "updated_at": "2017-08-15T18:49:37Z", "closed_at": "2017-08-15T18:49:37Z", "author_association": "NONE", "body": "I'm trying to read into a vector, but run into the following problem:\r\n```c++\r\n#include <vector>\r\n#include <json.hpp>\r\nvoid from_json(const nlohmann::json &j, std::vector<int> &v) { /* something */ }\r\nint main() {\r\n    nlohmann::json j; \r\n    std::vector<int> v1 = j; // compiles\r\n    std::vector<int> v2;\r\n    v2 = j; // does not compile\r\n}\r\n```\r\nImplementing as `adl_serializer` does not seem to work. Any help is greatly appreciated!"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/665", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/665/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/665/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/665/events", "html_url": "https://github.com/nlohmann/json/issues/665", "id": 245939273, "node_id": "MDU6SXNzdWUyNDU5MzkyNzM=", "number": 665, "title": "How to iterate?", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-27T06:35:17Z", "updated_at": "2017-07-27T07:47:51Z", "closed_at": "2017-07-27T07:37:11Z", "author_association": "NONE", "body": "Hi, i couldn't figure out how to iterate over some simple json data like this:\r\n\r\n```\r\nstring sJson=\r\n\t\t\t\"{\"\r\n\t\t\t\t\"\\\"data\\\": [\"\r\n\t\t\t\t\t\"{\"\r\n\t\t\t\t\t\t\"\\\"id\\\": \\\"1000\\\"\"\r\n\t\t\t\t\t\"},\"\r\n\t\t\t\t\t\"{\"\r\n\t\t\t\t\t\t\"\\\"id\\\": \\\"1001\\\"\"\r\n\t\t\t\t\t\"},\"\r\n\t\t\t\t\t\"{\"\r\n\t\t\t\t\t\t\"\\\"id\\\": \\\"1002\\\"\"\r\n\t\t\t\t\t\"}\"\r\n\t\t\t\t\"]\"\r\n\t\t\t\"}\";\r\n```\r\n\r\nPlease could you provide an example how to print all the ids?\r\nIn addition not being able to forward declare your stuff is a big show stopper."}]