[{"url": "https://api.github.com/repos/nlohmann/json/issues/1146", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1146/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1146/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1146/events", "html_url": "https://github.com/nlohmann/json/issues/1146", "id": 335679591, "node_id": "MDU6SXNzdWUzMzU2Nzk1OTE=", "number": 1146, "title": "Is it possible to dump a two-dimensional array to \"[[null],[1,2,3]]\"?", "user": {"login": "GingerMoon", "id": 8342412, "node_id": "MDQ6VXNlcjgzNDI0MTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8342412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GingerMoon", "html_url": "https://github.com/GingerMoon", "followers_url": "https://api.github.com/users/GingerMoon/followers", "following_url": "https://api.github.com/users/GingerMoon/following{/other_user}", "gists_url": "https://api.github.com/users/GingerMoon/gists{/gist_id}", "starred_url": "https://api.github.com/users/GingerMoon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GingerMoon/subscriptions", "organizations_url": "https://api.github.com/users/GingerMoon/orgs", "repos_url": "https://api.github.com/users/GingerMoon/repos", "events_url": "https://api.github.com/users/GingerMoon/events{/privacy}", "received_events_url": "https://api.github.com/users/GingerMoon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-26T06:44:22Z", "updated_at": "2018-06-26T13:35:40Z", "closed_at": "2018-06-26T13:35:40Z", "author_association": "NONE", "body": " Is it possible to dump a two-dimensional array to \"[[null],[1,2,3]]\"?\r\n\r\nI tried the code below:\r\n   my_json j;\r\n    std::vector<int> a[2];\r\n    std::vector<int> a1;\r\n    a1.push_back(1);\r\n    a[1] = a1;\r\n    j[\"a\"] = a;\r\n\r\nThe output is:\r\n{\"a\":[[],[1]]}\r\nIs it possible to dump a two-dimensional array to \"[[null],[1,2,3]]\"?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1145", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1145/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1145/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1145/events", "html_url": "https://github.com/nlohmann/json/issues/1145", "id": 335265257, "node_id": "MDU6SXNzdWUzMzUyNjUyNTc=", "number": 1145, "title": "Want to write a class member variable and a struct variable ( this structure is inside the class) to the json file", "user": {"login": "quicksilver345", "id": 37621731, "node_id": "MDQ6VXNlcjM3NjIxNzMx", "avatar_url": "https://avatars0.githubusercontent.com/u/37621731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quicksilver345", "html_url": "https://github.com/quicksilver345", "followers_url": "https://api.github.com/users/quicksilver345/followers", "following_url": "https://api.github.com/users/quicksilver345/following{/other_user}", "gists_url": "https://api.github.com/users/quicksilver345/gists{/gist_id}", "starred_url": "https://api.github.com/users/quicksilver345/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quicksilver345/subscriptions", "organizations_url": "https://api.github.com/users/quicksilver345/orgs", "repos_url": "https://api.github.com/users/quicksilver345/repos", "events_url": "https://api.github.com/users/quicksilver345/events{/privacy}", "received_events_url": "https://api.github.com/users/quicksilver345/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-06-25T05:35:34Z", "updated_at": "2018-07-05T05:28:35Z", "closed_at": "2018-07-05T05:28:35Z", "author_association": "NONE", "body": "I have a class and inside that class i have a struct, now i want to write the class variable \"name\" and the structure member \"a\" in the json file but i am not able to do so, can you please help me with the problem. :-\r\n\r\nCode snipet ->\r\n\r\n```cpp\r\nclass ABC\r\n            {\r\n            public:\r\n                struct ex\r\n                {\r\n                public:\r\n                    int a;\r\n                };\r\n                static void registerclass()\r\n                {\r\n                    ClassMetaInfo<ABC>::registerMember(\"name\", &ABC::name);\r\n                    ClassMetaInfo<ex>::registerMember(\"int a \", &ex::a);\r\n                }\r\n                std::string name;\r\n                ex var = { };\r\n                \r\n            };\r\n\r\n            ABC::registerclass();\r\n            ABC p;\r\n           p.name = \"JOHN\";\r\n            json j = ClassMetaInfo<ABC>::deserialize(p);\r\n```\r\n\r\njson file output :- \r\n\r\n```js\r\n{\r\n    \"name\": \"JOHN\"\r\n}\r\n```\r\n\r\nBy the above code i am getting the class variable \"name\" written in the json file but cannot see the structure variable  \"a\" in the json file.\r\n\r\nI have tried to put the registerclass() method inside the structure also but still i am not getting the stucture variable \"a\" written in my json file\r\n\r\n(I want to write both the class variable and the structure variable in the json file, as per the above example i am expecting something like :-\r\n\r\n```js\r\n{\r\n    \"name\": \"JOHN\"\r\n    \" int a\" : 32 \r\n}\r\n```\r\n\r\nto be the json output\r\n)\r\n\r\nCan you please help me regarding the issue\r\n(Compiling on a windows machine in visual studio 2017)"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1144", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1144/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1144/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1144/events", "html_url": "https://github.com/nlohmann/json/pull/1144", "id": 335210188, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk2OTY4NzUw", "number": 1144, "title": "Fix links to cppreference named requirements (formerly concepts)", "user": {"login": "jrakow", "id": 19510812, "node_id": "MDQ6VXNlcjE5NTEwODEy", "avatar_url": "https://avatars3.githubusercontent.com/u/19510812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrakow", "html_url": "https://github.com/jrakow", "followers_url": "https://api.github.com/users/jrakow/followers", "following_url": "https://api.github.com/users/jrakow/following{/other_user}", "gists_url": "https://api.github.com/users/jrakow/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrakow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrakow/subscriptions", "organizations_url": "https://api.github.com/users/jrakow/orgs", "repos_url": "https://api.github.com/users/jrakow/repos", "events_url": "https://api.github.com/users/jrakow/events{/privacy}", "received_events_url": "https://api.github.com/users/jrakow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/24", "html_url": "https://github.com/nlohmann/json/milestone/24", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/24/labels", "id": 3188647, "node_id": "MDk6TWlsZXN0b25lMzE4ODY0Nw==", "number": 24, "title": "Release 3.1.3", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 33, "state": "open", "created_at": "2018-03-14T21:05:47Z", "updated_at": "2018-07-21T12:46:17Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2018-06-24T20:46:41Z", "updated_at": "2018-06-26T08:57:00Z", "closed_at": "2018-06-26T05:58:46Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1144", "html_url": "https://github.com/nlohmann/json/pull/1144", "diff_url": "https://github.com/nlohmann/json/pull/1144.diff", "patch_url": "https://github.com/nlohmann/json/pull/1144.patch"}, "body": "The link in https://github.com/nlohmann/json#stl-like-access is broken.\r\nIt points to https://en.cppreference.com/w/cpp/concept/ReversibleContainer.\r\n\r\n\"Concepts\" have been renamed to \"named requirements\".\r\nThis is because P0898R3 Standard Library Concepts has been merged into\r\nC++20: cplusplus/draft#2145.\r\nCppreference have moved their links accordingly.\r\n\r\nThis PR also links to HTTPS and not HTTP."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1143", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1143/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1143/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1143/events", "html_url": "https://github.com/nlohmann/json/issues/1143", "id": 335179321, "node_id": "MDU6SXNzdWUzMzUxNzkzMjE=", "number": 1143, "title": "Does json support converting an instance of a struct into json string?", "user": {"login": "GingerMoon", "id": 8342412, "node_id": "MDQ6VXNlcjgzNDI0MTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8342412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GingerMoon", "html_url": "https://github.com/GingerMoon", "followers_url": "https://api.github.com/users/GingerMoon/followers", "following_url": "https://api.github.com/users/GingerMoon/following{/other_user}", "gists_url": "https://api.github.com/users/GingerMoon/gists{/gist_id}", "starred_url": "https://api.github.com/users/GingerMoon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GingerMoon/subscriptions", "organizations_url": "https://api.github.com/users/GingerMoon/orgs", "repos_url": "https://api.github.com/users/GingerMoon/repos", "events_url": "https://api.github.com/users/GingerMoon/events{/privacy}", "received_events_url": "https://api.github.com/users/GingerMoon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-06-24T13:26:52Z", "updated_at": "2018-06-24T13:52:18Z", "closed_at": "2018-06-24T13:52:18Z", "author_association": "NONE", "body": "Does json support converting an instance of a struct into json string?\r\nAnd if yes, can the order of the fields be kept in the order of the declaration in the struct?\r\nFor example,\r\nstruct S {\r\nint Z;\r\nint A;\r\n};\r\nS s = {1,2};\r\n\r\nI tried to read the doc but not able to find the answer.\r\nThe expect json string is:\r\n{\"Z\":1, \"A\":2}\r\n\r\nAny sample code would be much appreciated.\r\n\r\nSome background information for this question:\r\nI am developing a Qt client for a blockchain. I need to sign for a transaction struct json. But the json fields are in the order of alphabet, however on the server side, golang json packeg, the order is the declaration order of the struct fields. Hence the verification for the signature failed."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1142", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1142/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1142/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1142/events", "html_url": "https://github.com/nlohmann/json/pull/1142", "id": 335123145, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk2OTE2MTUz", "number": 1142, "title": "meson: fix include directory", "user": {"login": "jrakow", "id": 19510812, "node_id": "MDQ6VXNlcjE5NTEwODEy", "avatar_url": "https://avatars3.githubusercontent.com/u/19510812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrakow", "html_url": "https://github.com/jrakow", "followers_url": "https://api.github.com/users/jrakow/followers", "following_url": "https://api.github.com/users/jrakow/following{/other_user}", "gists_url": "https://api.github.com/users/jrakow/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrakow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrakow/subscriptions", "organizations_url": "https://api.github.com/users/jrakow/orgs", "repos_url": "https://api.github.com/users/jrakow/repos", "events_url": "https://api.github.com/users/jrakow/events{/privacy}", "received_events_url": "https://api.github.com/users/jrakow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/24", "html_url": "https://github.com/nlohmann/json/milestone/24", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/24/labels", "id": 3188647, "node_id": "MDk6TWlsZXN0b25lMzE4ODY0Nw==", "number": 24, "title": "Release 3.1.3", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 33, "state": "open", "created_at": "2018-03-14T21:05:47Z", "updated_at": "2018-07-21T12:46:17Z", "due_on": null, "closed_at": null}, "comments": 8, "created_at": "2018-06-23T18:58:04Z", "updated_at": "2018-07-01T09:26:36Z", "closed_at": "2018-06-24T21:33:30Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1142", "html_url": "https://github.com/nlohmann/json/pull/1142", "diff_url": "https://github.com/nlohmann/json/pull/1142.diff", "patch_url": "https://github.com/nlohmann/json/pull/1142.patch"}, "body": "Currently Meson exports `single_include/nlohmann` as include directory.\r\nThe compiler flag `-I\u2026/nlohmann_json/single_include/nlohmann` is generated.\r\nAccording to the documentation, this is how you should include it:\r\n```c++\r\n#include <nlohmann/json.hpp>\r\n```\r\nThis does not work currently, but `#include <json.hpp>` does.\r\n\r\nThe correct flag directory is `-I\u2026/nlohmann_json/single_include` and this commit fixes the Meson file.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1141", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1141/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1141/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1141/events", "html_url": "https://github.com/nlohmann/json/issues/1141", "id": 334969511, "node_id": "MDU6SXNzdWUzMzQ5Njk1MTE=", "number": 1141, "title": "#Most efficient way to search for child parameters (recursive find?)", "user": {"login": "JimAtCanon", "id": 40063849, "node_id": "MDQ6VXNlcjQwMDYzODQ5", "avatar_url": "https://avatars2.githubusercontent.com/u/40063849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JimAtCanon", "html_url": "https://github.com/JimAtCanon", "followers_url": "https://api.github.com/users/JimAtCanon/followers", "following_url": "https://api.github.com/users/JimAtCanon/following{/other_user}", "gists_url": "https://api.github.com/users/JimAtCanon/gists{/gist_id}", "starred_url": "https://api.github.com/users/JimAtCanon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JimAtCanon/subscriptions", "organizations_url": "https://api.github.com/users/JimAtCanon/orgs", "repos_url": "https://api.github.com/users/JimAtCanon/repos", "events_url": "https://api.github.com/users/JimAtCanon/events{/privacy}", "received_events_url": "https://api.github.com/users/JimAtCanon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-22T18:04:07Z", "updated_at": "2018-07-05T19:03:10Z", "closed_at": "2018-07-05T11:26:31Z", "author_association": "NONE", "body": "Hello All-\r\n\r\nI have an application where I have a hierarchical set of JSON objects.  Meaning that I have objects that in turn have child JSON objects and so on.  I need to have the ability to allow the user to query  the value of one of the objects using something akin to a file path.  For example, example if my JSON object looks like:\r\n\r\n```js\r\n{\r\n         \"One\":1,\r\n         \"Two\":2,\r\n         \"Child\":{\r\n                 \"Child1\":1\r\n                 \"Child2\":2\r\n                 }\r\n         \"Three\":3\r\n}\r\n```\r\n \r\nI want to provide a method that will return the value of any parameter by passing a 'path' to the parameter.  Using the example above, if I wanted the value of the parameter \"Child2\", I could request it using the path 'Child/Child2', which would return the value 2.  I have it working with the code below:\r\n\r\n```cpp\r\nstd::filesystem::path path(parameterPath);\r\nfor (const auto &parameterName : path) {\r\n   nlohmann::json::iterator iterator = parameterValue.find(parameterName);\r\n   if (iterator != parameterValue.end()) {\r\n      parameterValue = *iterator; //  This makes a copy of the parameter, which is overkill, I just want a reference to it.\r\n      }\r\n     else {\r\n         parameterValue.clear();\r\n         break;\r\n     }\r\n}\r\n```\r\n\r\nHowever I suspect that this is inefficient because I am creating a copy of the parameters as I traverse the tree. I have also thought about iterators and pointers, but thought I would reach out to the community to to see if anyone has already solved this problem, hopefully in a more efficient manor.\r\n\r\nAny suggestions?\r\n\r\nThanks!\r\n\r\nJim"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1140", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1140/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1140/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1140/events", "html_url": "https://github.com/nlohmann/json/issues/1140", "id": 334104006, "node_id": "MDU6SXNzdWUzMzQxMDQwMDY=", "number": 1140, "title": " could not find to_json() method in T's namespace", "user": {"login": "AistisT", "id": 14581924, "node_id": "MDQ6VXNlcjE0NTgxOTI0", "avatar_url": "https://avatars3.githubusercontent.com/u/14581924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AistisT", "html_url": "https://github.com/AistisT", "followers_url": "https://api.github.com/users/AistisT/followers", "following_url": "https://api.github.com/users/AistisT/following{/other_user}", "gists_url": "https://api.github.com/users/AistisT/gists{/gist_id}", "starred_url": "https://api.github.com/users/AistisT/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AistisT/subscriptions", "organizations_url": "https://api.github.com/users/AistisT/orgs", "repos_url": "https://api.github.com/users/AistisT/repos", "events_url": "https://api.github.com/users/AistisT/events{/privacy}", "received_events_url": "https://api.github.com/users/AistisT/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-06-20T14:26:12Z", "updated_at": "2018-06-20T16:24:45Z", "closed_at": "2018-06-20T16:24:45Z", "author_association": "NONE", "body": "```\r\nnlohmann::json subscriber;\t\r\nsubscriber[\"Name\"] = &callerName;\r\nsubscriber[\"SubscribeTopic\"] = topicToSubscribe;\r\nsubscriber[\"CallBackTopic\"] = callBackTopic;\r\n\t\r\n\r\n```\r\n\r\nand\r\n ```\r\nnlohmann::json subscriber = {\r\n\t\t{ \"Name\", &callerName },\r\n\t\t{ \"SubscribeTopic\", &topicToSubscribe },\r\n\t\t{ \"CallBackTopic\", &callBackTopic },\r\n\t};\r\n```\r\nBoth cause the error\r\n\r\nVs 2017, latest release\r\n\r\nI seem to be unable to create json object, I've read through documentation like 20 times and there is nothing else that has been mentioned about it."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1139", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1139/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1139/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1139/events", "html_url": "https://github.com/nlohmann/json/issues/1139", "id": 334060211, "node_id": "MDU6SXNzdWUzMzQwNjAyMTE=", "number": 1139, "title": "chars get treated as JSON numbers not JSON strings", "user": {"login": "zoe-mcelderry", "id": 25527958, "node_id": "MDQ6VXNlcjI1NTI3OTU4", "avatar_url": "https://avatars3.githubusercontent.com/u/25527958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zoe-mcelderry", "html_url": "https://github.com/zoe-mcelderry", "followers_url": "https://api.github.com/users/zoe-mcelderry/followers", "following_url": "https://api.github.com/users/zoe-mcelderry/following{/other_user}", "gists_url": "https://api.github.com/users/zoe-mcelderry/gists{/gist_id}", "starred_url": "https://api.github.com/users/zoe-mcelderry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zoe-mcelderry/subscriptions", "organizations_url": "https://api.github.com/users/zoe-mcelderry/orgs", "repos_url": "https://api.github.com/users/zoe-mcelderry/repos", "events_url": "https://api.github.com/users/zoe-mcelderry/events{/privacy}", "received_events_url": "https://api.github.com/users/zoe-mcelderry/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-20T12:44:49Z", "updated_at": "2018-06-20T14:31:14Z", "closed_at": "2018-06-20T14:31:06Z", "author_association": "NONE", "body": "- What is the issue you have?\r\n\r\nI am creating some JSON from some C++ datatypes, one of which is the char datatype.  I would expect this to be treated as a JSON string, but when I call the dump method it outputs the value as if it were a JSON number.\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\n\r\nnlohmann::json json;\r\nchar sample = 'a';\r\njson[\"char\"] = sample;\r\nstd::cout << json.dump ();\r\n\r\n- What is the expected behavior?\r\n\r\nExpect the output to show : {\"char\":\"a\"}\r\n\r\n- And what is the actual behavior instead?\r\n\r\nThe output I get is : {\"char\":97}\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\n\r\nOS is Debian 9.3, compiler is g++ 6.3.0\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\n\r\nTag v3.1.2\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1138", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1138/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1138/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1138/events", "html_url": "https://github.com/nlohmann/json/pull/1138", "id": 333184232, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk1NDU5MTE2", "number": 1138, "title": "Feature/unordered map conversion", "user": {"login": "theodelrieu", "id": 15652306, "node_id": "MDQ6VXNlcjE1NjUyMzA2", "avatar_url": "https://avatars1.githubusercontent.com/u/15652306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theodelrieu", "html_url": "https://github.com/theodelrieu", "followers_url": "https://api.github.com/users/theodelrieu/followers", "following_url": "https://api.github.com/users/theodelrieu/following{/other_user}", "gists_url": "https://api.github.com/users/theodelrieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/theodelrieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theodelrieu/subscriptions", "organizations_url": "https://api.github.com/users/theodelrieu/orgs", "repos_url": "https://api.github.com/users/theodelrieu/repos", "events_url": "https://api.github.com/users/theodelrieu/events{/privacy}", "received_events_url": "https://api.github.com/users/theodelrieu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/24", "html_url": "https://github.com/nlohmann/json/milestone/24", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/24/labels", "id": 3188647, "node_id": "MDk6TWlsZXN0b25lMzE4ODY0Nw==", "number": 24, "title": "Release 3.1.3", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 33, "state": "open", "created_at": "2018-03-14T21:05:47Z", "updated_at": "2018-07-21T12:46:17Z", "due_on": null, "closed_at": null}, "comments": 6, "created_at": "2018-06-18T08:55:53Z", "updated_at": "2018-06-18T20:59:55Z", "closed_at": "2018-06-18T19:59:47Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1138", "html_url": "https://github.com/nlohmann/json/pull/1138", "diff_url": "https://github.com/nlohmann/json/pull/1138.diff", "patch_url": "https://github.com/nlohmann/json/pull/1138.patch"}, "body": "Add conversion for `std::unordered_map`, when `KeyType != basic_json<>::string_t`\r\n\r\nFixes #1133 \r\n\r\n* * *\r\n\r\n## Pull request checklist\r\n\r\nRead the [Contribution Guidelines](https://github.com/nlohmann/json/blob/develop/.github/CONTRIBUTING.md) for detailed information.\r\n\r\n- [x]  Changes are described in the pull request, or an [existing issue is referenced](https://github.com/nlohmann/json/issues).\r\n- [ ]  The test suite [compiles and runs](https://github.com/nlohmann/json/blob/develop/README.md#execute-unit-tests) without error.\r\n- [ ]  [Code coverage](https://coveralls.io/github/nlohmann/json) is 100%. Test cases can be added by editing the [test suite](https://github.com/nlohmann/json/tree/develop/test/src).\r\n- [x]  The source code is amalgamated; that is, after making changes to the sources in the `include/nlohmann` directory, run `make amalgamate` to create the single-header file `single_include/nlohmann/json.hpp`. The whole process is described [here](https://github.com/nlohmann/json/blob/develop/.github/CONTRIBUTING.md#files-to-change).\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1137", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1137/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1137/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1137/events", "html_url": "https://github.com/nlohmann/json/issues/1137", "id": 333078119, "node_id": "MDU6SXNzdWUzMzMwNzgxMTk=", "number": 1137, "title": "How do I count number of objects in array?", "user": {"login": "zavodnyrichard", "id": 10450344, "node_id": "MDQ6VXNlcjEwNDUwMzQ0", "avatar_url": "https://avatars1.githubusercontent.com/u/10450344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zavodnyrichard", "html_url": "https://github.com/zavodnyrichard", "followers_url": "https://api.github.com/users/zavodnyrichard/followers", "following_url": "https://api.github.com/users/zavodnyrichard/following{/other_user}", "gists_url": "https://api.github.com/users/zavodnyrichard/gists{/gist_id}", "starred_url": "https://api.github.com/users/zavodnyrichard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zavodnyrichard/subscriptions", "organizations_url": "https://api.github.com/users/zavodnyrichard/orgs", "repos_url": "https://api.github.com/users/zavodnyrichard/repos", "events_url": "https://api.github.com/users/zavodnyrichard/events{/privacy}", "received_events_url": "https://api.github.com/users/zavodnyrichard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-17T17:19:25Z", "updated_at": "2018-06-18T20:04:40Z", "closed_at": "2018-06-18T20:04:40Z", "author_association": "NONE", "body": "Hi. I wanna count number of objects in array. For example: **jsonObj[\"array\"]** is object that store another objects. I can access them by **jsonObj[\"array\"][0][\"something\"]**, **jsonObj[\"array\"][1][\"something\"]**, **jsonObj[\"array\"][2][\"something\"]**, and so on. So how do I count number of objects in **jsonObj[\"array\"]**?\r\n\r\nThank you. :)"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1136", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1136/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1136/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1136/events", "html_url": "https://github.com/nlohmann/json/issues/1136", "id": 333070003, "node_id": "MDU6SXNzdWUzMzMwNzAwMDM=", "number": 1136, "title": "Serializing a vector of classes?", "user": {"login": "voidblaze", "id": 32791127, "node_id": "MDQ6VXNlcjMyNzkxMTI3", "avatar_url": "https://avatars2.githubusercontent.com/u/32791127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/voidblaze", "html_url": "https://github.com/voidblaze", "followers_url": "https://api.github.com/users/voidblaze/followers", "following_url": "https://api.github.com/users/voidblaze/following{/other_user}", "gists_url": "https://api.github.com/users/voidblaze/gists{/gist_id}", "starred_url": "https://api.github.com/users/voidblaze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/voidblaze/subscriptions", "organizations_url": "https://api.github.com/users/voidblaze/orgs", "repos_url": "https://api.github.com/users/voidblaze/repos", "events_url": "https://api.github.com/users/voidblaze/events{/privacy}", "received_events_url": "https://api.github.com/users/voidblaze/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2018-06-17T15:14:26Z", "updated_at": "2018-06-28T13:07:37Z", "closed_at": "2018-06-28T12:27:46Z", "author_association": "NONE", "body": "I have a vector* of class* (vector<Doctor*> *doctors) and I need to serialize it. The class Doctor has some other vector* of class* that have to be serialized too. The question is, do I need to create to_json and from_json methods for vector*<Doctor*>, and for any other vectors of classes inside Doctor? I have already created the methods for the class doctor and for every other class that needs it, yet I keep getting the \"could not find to_json() method in T's namespace\". \r\n\r\nI am using MSVS 2017. Thank you in advance for your help!\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1135", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1135/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1135/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1135/events", "html_url": "https://github.com/nlohmann/json/issues/1135", "id": 333044178, "node_id": "MDU6SXNzdWUzMzMwNDQxNzg=", "number": 1135, "title": "Compile error. Unable convert form nullptr to nullptr&&", "user": {"login": "kirill-782", "id": 7936957, "node_id": "MDQ6VXNlcjc5MzY5NTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7936957?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirill-782", "html_url": "https://github.com/kirill-782", "followers_url": "https://api.github.com/users/kirill-782/followers", "following_url": "https://api.github.com/users/kirill-782/following{/other_user}", "gists_url": "https://api.github.com/users/kirill-782/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirill-782/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirill-782/subscriptions", "organizations_url": "https://api.github.com/users/kirill-782/orgs", "repos_url": "https://api.github.com/users/kirill-782/repos", "events_url": "https://api.github.com/users/kirill-782/events{/privacy}", "received_events_url": "https://api.github.com/users/kirill-782/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2018-06-17T08:00:30Z", "updated_at": "2018-07-10T08:57:52Z", "closed_at": "2018-07-10T08:55:34Z", "author_association": "NONE", "body": "I can not compile json.hpp.\r\n\r\n> error C2664: \"BasicJsonType *nlohmann::detail::json_sax_dom_parser<BasicJsonType>::handle_value<nullptr>(Value &&)\": \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u044c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 1 \u0438\u0437 \"nullptr\" \u0432 \"nullptr &&\"\r\n\r\nproblem code: \r\n```\r\n    bool null() override\r\n    {\r\n        handle_value(nullptr); \r\n        return true;\r\n    }\r\n```\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1134", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1134/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1134/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1134/events", "html_url": "https://github.com/nlohmann/json/pull/1134", "id": 332976523, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk1MzI2MTIw", "number": 1134, "title": "fixed compile error for #1045", "user": {"login": "Daniel599", "id": 24626802, "node_id": "MDQ6VXNlcjI0NjI2ODAy", "avatar_url": "https://avatars0.githubusercontent.com/u/24626802?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Daniel599", "html_url": "https://github.com/Daniel599", "followers_url": "https://api.github.com/users/Daniel599/followers", "following_url": "https://api.github.com/users/Daniel599/following{/other_user}", "gists_url": "https://api.github.com/users/Daniel599/gists{/gist_id}", "starred_url": "https://api.github.com/users/Daniel599/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Daniel599/subscriptions", "organizations_url": "https://api.github.com/users/Daniel599/orgs", "repos_url": "https://api.github.com/users/Daniel599/repos", "events_url": "https://api.github.com/users/Daniel599/events{/privacy}", "received_events_url": "https://api.github.com/users/Daniel599/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/24", "html_url": "https://github.com/nlohmann/json/milestone/24", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/24/labels", "id": 3188647, "node_id": "MDk6TWlsZXN0b25lMzE4ODY0Nw==", "number": 24, "title": "Release 3.1.3", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 33, "state": "open", "created_at": "2018-03-14T21:05:47Z", "updated_at": "2018-07-21T12:46:17Z", "due_on": null, "closed_at": null}, "comments": 8, "created_at": "2018-06-16T10:00:40Z", "updated_at": "2018-06-28T22:55:39Z", "closed_at": "2018-06-28T19:21:18Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1134", "html_url": "https://github.com/nlohmann/json/pull/1134", "diff_url": "https://github.com/nlohmann/json/pull/1134.diff", "patch_url": "https://github.com/nlohmann/json/pull/1134.patch"}, "body": "#1045 \r\nAdded ```to_json(BasicJsonType, iteration_proxy_internal)``` which was needed.\r\nnote: there are 2 TODOs to consider"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1133", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1133/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1133/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1133/events", "html_url": "https://github.com/nlohmann/json/issues/1133", "id": 332891166, "node_id": "MDU6SXNzdWUzMzI4OTExNjY=", "number": 1133, "title": "std::unordered_map in struct, serialization", "user": {"login": "d223chen", "id": 27775959, "node_id": "MDQ6VXNlcjI3Nzc1OTU5", "avatar_url": "https://avatars1.githubusercontent.com/u/27775959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d223chen", "html_url": "https://github.com/d223chen", "followers_url": "https://api.github.com/users/d223chen/followers", "following_url": "https://api.github.com/users/d223chen/following{/other_user}", "gists_url": "https://api.github.com/users/d223chen/gists{/gist_id}", "starred_url": "https://api.github.com/users/d223chen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d223chen/subscriptions", "organizations_url": "https://api.github.com/users/d223chen/orgs", "repos_url": "https://api.github.com/users/d223chen/repos", "events_url": "https://api.github.com/users/d223chen/events{/privacy}", "received_events_url": "https://api.github.com/users/d223chen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-15T19:35:31Z", "updated_at": "2018-06-18T19:59:47Z", "closed_at": "2018-06-18T19:59:47Z", "author_association": "NONE", "body": "- What is the issue you have?\r\n\t\t\r\nCannot build deserialization code for a std::unordered_map. Following the example in the README at https://github.com/nlohmann/json#arbitrary-types-conversions\r\n\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\n\r\n\r\n      #include <unordered_map>\r\n      #include <vector>\r\n      #include <string>\r\n      #include <nlohmann/json.hpp>\r\n\r\n      struct myStruct{\r\n        std::string structName;\r\n      }\r\n\t\t\t\t\r\n      struct myStructCollection {\r\n        std::unordered_map<int, myStruct> myStructs;\r\n        myStructCollection(std::unordered_map<int, myStruct> myStructs) : myStructs (myStructs){}\r\n      };\r\n\r\n      void from_json(const json& j, myStructCollection& p) {\r\n        p.myStructs = j.at(\"myStructs\").get<std::unordered_map<int, myStruct>>();\r\n      }\r\n\r\n- What is the expected behavior?\r\n\r\nBuilds. According to https://github.com/nlohmann/json#conversion-from-stl-containers, std::unordered_map is supported.\r\n\r\n- And what is the actual behavior instead?\r\n\r\nError at line 269 of \"utility\": \r\n\r\n      pair& operator=(pair&& _Right)\r\n        _NOEXCEPT_COND(is_nothrow_move_assignable_v<_Ty1>\r\n        && is_nothrow_move_assignable_v<_Ty2>)\r\n      {\t// assign from moved pair\r\n        first = _STD forward<_Ty1>(_Right.first); // ERROR ON THIS LINE!!!!\r\n        second = _STD forward<_Ty2>(_Right.second);\r\n        return (*this);\r\n      }\r\n\r\nError\t C2166\t\"l-value specifies const object\t\"\r\n\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\n\r\nMSVC compiler 19.14.26430, Windows 10, Visual Studio 2017 (version 15.7.2), v141 toolset.\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\n\r\nUsed vcpkg to install.\r\n\r\n- If you experience a compilation error: can you [compile and run the unit tests](https://github.com/nlohmann/json#execute-unit-tests)?\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1132", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1132/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1132/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1132/events", "html_url": "https://github.com/nlohmann/json/issues/1132", "id": 332791357, "node_id": "MDU6SXNzdWUzMzI3OTEzNTc=", "number": 1132, "title": "NuGet Package", "user": {"login": "btowntkd", "id": 1986421, "node_id": "MDQ6VXNlcjE5ODY0MjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1986421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/btowntkd", "html_url": "https://github.com/btowntkd", "followers_url": "https://api.github.com/users/btowntkd/followers", "following_url": "https://api.github.com/users/btowntkd/following{/other_user}", "gists_url": "https://api.github.com/users/btowntkd/gists{/gist_id}", "starred_url": "https://api.github.com/users/btowntkd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/btowntkd/subscriptions", "organizations_url": "https://api.github.com/users/btowntkd/orgs", "repos_url": "https://api.github.com/users/btowntkd/repos", "events_url": "https://api.github.com/users/btowntkd/events{/privacy}", "received_events_url": "https://api.github.com/users/btowntkd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 968316937, "node_id": "MDU6TGFiZWw5NjgzMTY5Mzc=", "url": "https://api.github.com/repos/nlohmann/json/labels/good%20first%20issue", "name": "good first issue", "color": "d4c5f9", "default": true}, {"id": 959018031, "node_id": "MDU6TGFiZWw5NTkwMTgwMzE=", "url": "https://api.github.com/repos/nlohmann/json/labels/pinned", "name": "pinned", "color": "FFFFFF", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-15T14:16:25Z", "updated_at": "2018-07-21T12:26:59Z", "closed_at": null, "author_association": "NONE", "body": "Please release this library as a NuGet package."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1131", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1131/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1131/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1131/events", "html_url": "https://github.com/nlohmann/json/issues/1131", "id": 332732092, "node_id": "MDU6SXNzdWUzMzI3MzIwOTI=", "number": 1131, "title": "dump() can't handle umlauts", "user": {"login": "AndreasMartin72", "id": 11562654, "node_id": "MDQ6VXNlcjExNTYyNjU0", "avatar_url": "https://avatars1.githubusercontent.com/u/11562654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreasMartin72", "html_url": "https://github.com/AndreasMartin72", "followers_url": "https://api.github.com/users/AndreasMartin72/followers", "following_url": "https://api.github.com/users/AndreasMartin72/following{/other_user}", "gists_url": "https://api.github.com/users/AndreasMartin72/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreasMartin72/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreasMartin72/subscriptions", "organizations_url": "https://api.github.com/users/AndreasMartin72/orgs", "repos_url": "https://api.github.com/users/AndreasMartin72/repos", "events_url": "https://api.github.com/users/AndreasMartin72/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreasMartin72/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-15T10:59:05Z", "updated_at": "2018-06-15T14:25:46Z", "closed_at": "2018-06-15T12:23:06Z", "author_association": "NONE", "body": "This small example runs into an exception (\"invalid UTF-8 byte at index...\"):\r\n\r\n```\r\n    nlohmann::json test;\r\n    test[\"Value\"] = \"F\u00fcr\";\r\n    cout << test.dump().c_str();\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1130", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1130/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1130/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1130/events", "html_url": "https://github.com/nlohmann/json/pull/1130", "id": 332079088, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk0NjUwNzgw", "number": 1130, "title": " test (non)equality for alt_string implementation ", "user": {"login": "agrianius", "id": 37244280, "node_id": "MDQ6VXNlcjM3MjQ0Mjgw", "avatar_url": "https://avatars0.githubusercontent.com/u/37244280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agrianius", "html_url": "https://github.com/agrianius", "followers_url": "https://api.github.com/users/agrianius/followers", "following_url": "https://api.github.com/users/agrianius/following{/other_user}", "gists_url": "https://api.github.com/users/agrianius/gists{/gist_id}", "starred_url": "https://api.github.com/users/agrianius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agrianius/subscriptions", "organizations_url": "https://api.github.com/users/agrianius/orgs", "repos_url": "https://api.github.com/users/agrianius/repos", "events_url": "https://api.github.com/users/agrianius/events{/privacy}", "received_events_url": "https://api.github.com/users/agrianius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/24", "html_url": "https://github.com/nlohmann/json/milestone/24", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/24/labels", "id": 3188647, "node_id": "MDk6TWlsZXN0b25lMzE4ODY0Nw==", "number": 24, "title": "Release 3.1.3", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 33, "state": "open", "created_at": "2018-03-14T21:05:47Z", "updated_at": "2018-07-21T12:46:17Z", "due_on": null, "closed_at": null}, "comments": 6, "created_at": "2018-06-13T16:50:59Z", "updated_at": "2018-06-18T20:01:59Z", "closed_at": "2018-06-18T20:01:54Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1130", "html_url": "https://github.com/nlohmann/json/pull/1130", "diff_url": "https://github.com/nlohmann/json/pull/1130.diff", "patch_url": "https://github.com/nlohmann/json/pull/1130.patch"}, "body": "Add a bit more tests for alt_string implementation"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1129", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1129/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1129/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1129/events", "html_url": "https://github.com/nlohmann/json/issues/1129", "id": 331686657, "node_id": "MDU6SXNzdWUzMzE2ODY2NTc=", "number": 1129, "title": "CBOR byte string support", "user": {"login": "Lusitanian", "id": 1907815, "node_id": "MDQ6VXNlcjE5MDc4MTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1907815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lusitanian", "html_url": "https://github.com/Lusitanian", "followers_url": "https://api.github.com/users/Lusitanian/followers", "following_url": "https://api.github.com/users/Lusitanian/following{/other_user}", "gists_url": "https://api.github.com/users/Lusitanian/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lusitanian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lusitanian/subscriptions", "organizations_url": "https://api.github.com/users/Lusitanian/orgs", "repos_url": "https://api.github.com/users/Lusitanian/repos", "events_url": "https://api.github.com/users/Lusitanian/events{/privacy}", "received_events_url": "https://api.github.com/users/Lusitanian/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 571470316, "node_id": "MDU6TGFiZWw1NzE0NzAzMTY=", "url": "https://api.github.com/repos/nlohmann/json/labels/aspect:%20binary%20formats", "name": "aspect: binary formats", "color": "5319e7", "default": false}, {"id": 304694104, "node_id": "MDU6TGFiZWwzMDQ2OTQxMDQ=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20please%20discuss", "name": "state: please discuss", "color": "fbca04", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-06-12T17:41:14Z", "updated_at": "2018-07-21T09:27:34Z", "closed_at": null, "author_association": "NONE", "body": "Currently, the CBOR feature of the library only supports writing strings out as UTF-8 and doesn't support byte arrays as described in the CBOR standard. I'd like to implement COSE on top of this library, but in order to do that, byte string support is needed.\r\n\r\nI'm happy to submit a pull request for this, but I wanted to check in advance if this is something you'd be open to"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1128", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1128/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1128/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1128/events", "html_url": "https://github.com/nlohmann/json/pull/1128", "id": 331645803, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk0MzI1Mjgy", "number": 1128, "title": "Add support for workarounds for non-compliant C++11 compilers", "user": {"login": "TedLyngmo", "id": 2361158, "node_id": "MDQ6VXNlcjIzNjExNTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2361158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TedLyngmo", "html_url": "https://github.com/TedLyngmo", "followers_url": "https://api.github.com/users/TedLyngmo/followers", "following_url": "https://api.github.com/users/TedLyngmo/following{/other_user}", "gists_url": "https://api.github.com/users/TedLyngmo/gists{/gist_id}", "starred_url": "https://api.github.com/users/TedLyngmo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TedLyngmo/subscriptions", "organizations_url": "https://api.github.com/users/TedLyngmo/orgs", "repos_url": "https://api.github.com/users/TedLyngmo/repos", "events_url": "https://api.github.com/users/TedLyngmo/events{/privacy}", "received_events_url": "https://api.github.com/users/TedLyngmo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 24, "created_at": "2018-06-12T15:43:06Z", "updated_at": "2018-06-26T20:59:01Z", "closed_at": "2018-06-26T14:39:07Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1128", "html_url": "https://github.com/nlohmann/json/pull/1128", "diff_url": "https://github.com/nlohmann/json/pull/1128.diff", "patch_url": "https://github.com/nlohmann/json/pull/1128.patch"}, "body": "Include example for Borland C++ Builder (RAD Studio)'s clang (3.3.1) based compiler (bcc32c).\r\n\r\nI know this goes against the Contribution Guidelines and I will keep my fork rebased separately if this is unacceptable. I would nevertheless like your input please.\r\n\r\nWhat I've done is to add a macro (_NLOHMANN_JSON_SKIP_COMPILER_CHECK_) to be able override the compiler check and one macro (_NLOHMANN_JSON_FIX_CONSTEXPR_FOR_CHAR_TRAITS_EOF_) to let a porter define a constexpr instead of using std::char_traits<char>::eof(). I couldn't find a way to override the built in definition unfortunately. If you know of a way that this could be done, I'd be glad to use that way instead.\r\n\r\nThe file \"include/nlohmann/detail/workarounds/borland.hpp\" will not be included in the amalgamated json.hpp - so any user will have to manually include it before json.hpp. I'll happily remove this file if the other changes would be acceptable."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1127", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1127/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1127/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1127/events", "html_url": "https://github.com/nlohmann/json/issues/1127", "id": 331348694, "node_id": "MDU6SXNzdWUzMzEzNDg2OTQ=", "number": 1127, "title": "Add a way to get a key reference from the iterator", "user": {"login": "GTValentine", "id": 11280818, "node_id": "MDQ6VXNlcjExMjgwODE4", "avatar_url": "https://avatars1.githubusercontent.com/u/11280818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GTValentine", "html_url": "https://github.com/GTValentine", "followers_url": "https://api.github.com/users/GTValentine/followers", "following_url": "https://api.github.com/users/GTValentine/following{/other_user}", "gists_url": "https://api.github.com/users/GTValentine/gists{/gist_id}", "starred_url": "https://api.github.com/users/GTValentine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GTValentine/subscriptions", "organizations_url": "https://api.github.com/users/GTValentine/orgs", "repos_url": "https://api.github.com/users/GTValentine/repos", "events_url": "https://api.github.com/users/GTValentine/events{/privacy}", "received_events_url": "https://api.github.com/users/GTValentine/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-11T21:01:05Z", "updated_at": "2018-06-11T21:18:43Z", "closed_at": "2018-06-11T21:18:43Z", "author_association": "NONE", "body": "I may be missing something but I think when I am iterating over all keys in an object I have no way to access they key without actually copying them:\r\n\r\n```cpp\r\nbool foo(const std::string&)\r\n{\r\n...\r\n}\r\n\r\njson j = {...};\r\nfor (auto it = j.begin(); it != j.end(); ++it)\r\n{\r\n\t//it.key() copies the entire std::string\r\n\tif(foo(it.key()))\r\n\t{\r\n\t\tbar(it.value());\r\n\t}\r\n}\r\n```\r\n\r\nIf my keys are large strings, I'd like to avoid copying them for perf reasons. "}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1126", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1126/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1126/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1126/events", "html_url": "https://github.com/nlohmann/json/pull/1126", "id": 331287584, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk0MDU1NzMy", "number": 1126, "title": "test (non)equality for alt_string implementation", "user": {"login": "agrianius", "id": 37244280, "node_id": "MDQ6VXNlcjM3MjQ0Mjgw", "avatar_url": "https://avatars0.githubusercontent.com/u/37244280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agrianius", "html_url": "https://github.com/agrianius", "followers_url": "https://api.github.com/users/agrianius/followers", "following_url": "https://api.github.com/users/agrianius/following{/other_user}", "gists_url": "https://api.github.com/users/agrianius/gists{/gist_id}", "starred_url": "https://api.github.com/users/agrianius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agrianius/subscriptions", "organizations_url": "https://api.github.com/users/agrianius/orgs", "repos_url": "https://api.github.com/users/agrianius/repos", "events_url": "https://api.github.com/users/agrianius/events{/privacy}", "received_events_url": "https://api.github.com/users/agrianius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-11T17:52:03Z", "updated_at": "2018-06-13T16:53:05Z", "closed_at": "2018-06-13T16:41:50Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1126", "html_url": "https://github.com/nlohmann/json/pull/1126", "diff_url": "https://github.com/nlohmann/json/pull/1126.diff", "patch_url": "https://github.com/nlohmann/json/pull/1126.patch"}, "body": "Add a bit more tests for alt_string implementation"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1125", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1125/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1125/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1125/events", "html_url": "https://github.com/nlohmann/json/pull/1125", "id": 331254846, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk0MDMxMzk4", "number": 1125, "title": " test (non)equality for alt_string implementation ", "user": {"login": "agrianius", "id": 37244280, "node_id": "MDQ6VXNlcjM3MjQ0Mjgw", "avatar_url": "https://avatars0.githubusercontent.com/u/37244280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agrianius", "html_url": "https://github.com/agrianius", "followers_url": "https://api.github.com/users/agrianius/followers", "following_url": "https://api.github.com/users/agrianius/following{/other_user}", "gists_url": "https://api.github.com/users/agrianius/gists{/gist_id}", "starred_url": "https://api.github.com/users/agrianius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agrianius/subscriptions", "organizations_url": "https://api.github.com/users/agrianius/orgs", "repos_url": "https://api.github.com/users/agrianius/repos", "events_url": "https://api.github.com/users/agrianius/events{/privacy}", "received_events_url": "https://api.github.com/users/agrianius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-11T16:11:34Z", "updated_at": "2018-06-11T19:19:02Z", "closed_at": "2018-06-11T17:51:20Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1125", "html_url": "https://github.com/nlohmann/json/pull/1125", "diff_url": "https://github.com/nlohmann/json/pull/1125.diff", "patch_url": "https://github.com/nlohmann/json/pull/1125.patch"}, "body": "Add a bit more tests for alt_string implementation"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1124", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1124/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1124/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1124/events", "html_url": "https://github.com/nlohmann/json/pull/1124", "id": 331229473, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk0MDExOTU0", "number": 1124, "title": "test (non)equality for alt_string implementation", "user": {"login": "agrianius", "id": 37244280, "node_id": "MDQ6VXNlcjM3MjQ0Mjgw", "avatar_url": "https://avatars0.githubusercontent.com/u/37244280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agrianius", "html_url": "https://github.com/agrianius", "followers_url": "https://api.github.com/users/agrianius/followers", "following_url": "https://api.github.com/users/agrianius/following{/other_user}", "gists_url": "https://api.github.com/users/agrianius/gists{/gist_id}", "starred_url": "https://api.github.com/users/agrianius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agrianius/subscriptions", "organizations_url": "https://api.github.com/users/agrianius/orgs", "repos_url": "https://api.github.com/users/agrianius/repos", "events_url": "https://api.github.com/users/agrianius/events{/privacy}", "received_events_url": "https://api.github.com/users/agrianius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-11T15:06:23Z", "updated_at": "2018-06-11T16:37:37Z", "closed_at": "2018-06-11T16:08:48Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1124", "html_url": "https://github.com/nlohmann/json/pull/1124", "diff_url": "https://github.com/nlohmann/json/pull/1124.diff", "patch_url": "https://github.com/nlohmann/json/pull/1124.patch"}, "body": "Add a bit more tests for alt_string implementation"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1123", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1123/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1123/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1123/events", "html_url": "https://github.com/nlohmann/json/issues/1123", "id": 330111994, "node_id": "MDU6SXNzdWUzMzAxMTE5OTQ=", "number": 1123, "title": "can't not parse \"\\\\\u201c string", "user": {"login": "wony-zheng", "id": 5218603, "node_id": "MDQ6VXNlcjUyMTg2MDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/5218603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wony-zheng", "html_url": "https://github.com/wony-zheng", "followers_url": "https://api.github.com/users/wony-zheng/followers", "following_url": "https://api.github.com/users/wony-zheng/following{/other_user}", "gists_url": "https://api.github.com/users/wony-zheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/wony-zheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wony-zheng/subscriptions", "organizations_url": "https://api.github.com/users/wony-zheng/orgs", "repos_url": "https://api.github.com/users/wony-zheng/repos", "events_url": "https://api.github.com/users/wony-zheng/events{/privacy}", "received_events_url": "https://api.github.com/users/wony-zheng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-07T04:22:28Z", "updated_at": "2018-06-18T20:04:47Z", "closed_at": "2018-06-18T20:04:47Z", "author_association": "NONE", "body": "`json::parse(\"{\\\"c\\\": \\\"a\\\\a\\\"}\")` throw std::invalid_argument, msg: parse error - unexpected '\"'\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1122", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1122/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1122/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1122/events", "html_url": "https://github.com/nlohmann/json/issues/1122", "id": 329787382, "node_id": "MDU6SXNzdWUzMjk3ODczODI=", "number": 1122, "title": " if  json file  contain Internationalization   chars   ,  get  exception", "user": {"login": "tan00", "id": 13514056, "node_id": "MDQ6VXNlcjEzNTE0MDU2", "avatar_url": "https://avatars0.githubusercontent.com/u/13514056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tan00", "html_url": "https://github.com/tan00", "followers_url": "https://api.github.com/users/tan00/followers", "following_url": "https://api.github.com/users/tan00/following{/other_user}", "gists_url": "https://api.github.com/users/tan00/gists{/gist_id}", "starred_url": "https://api.github.com/users/tan00/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tan00/subscriptions", "organizations_url": "https://api.github.com/users/tan00/orgs", "repos_url": "https://api.github.com/users/tan00/repos", "events_url": "https://api.github.com/users/tan00/events{/privacy}", "received_events_url": "https://api.github.com/users/tan00/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-06T09:25:27Z", "updated_at": "2018-06-07T07:12:58Z", "closed_at": "2018-06-07T06:21:45Z", "author_association": "NONE", "body": "```\r\n\tjson j;\r\n\tj[\"name\"] = \"\u4e2d\u6587\";\r\n\r\n\tstd::cout << j.dump() << std::endl;\r\n\tstd::ofstream ofs;\r\n\tofs.open(\"test.json\");\r\n\tofs << j;\r\n\tofs.close();\r\n\r\n\tstd::ifstream ifs(\"test.json\");\r\n\tif (!ifs.is_open())\r\n\t{\r\n\t\tstd::cout << \"open error\" << std::endl;\r\n\t\treturn -1;\r\n\t}\r\n\tjson j2;\r\n\tj2 << ifs;\r\n\tstd::cout << j2.dump() << std::endl;\r\n```\r\nexception at  ```j2 << ifs;```\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1121", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1121/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1121/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1121/events", "html_url": "https://github.com/nlohmann/json/pull/1121", "id": 329735030, "node_id": "MDExOlB1bGxSZXF1ZXN0MTkyOTE3MDcz", "number": 1121, "title": "WIP/RFC: Flexible pretty printing formatting", "user": {"login": "EvanED", "id": 508945, "node_id": "MDQ6VXNlcjUwODk0NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/508945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EvanED", "html_url": "https://github.com/EvanED", "followers_url": "https://api.github.com/users/EvanED/followers", "following_url": "https://api.github.com/users/EvanED/following{/other_user}", "gists_url": "https://api.github.com/users/EvanED/gists{/gist_id}", "starred_url": "https://api.github.com/users/EvanED/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EvanED/subscriptions", "organizations_url": "https://api.github.com/users/EvanED/orgs", "repos_url": "https://api.github.com/users/EvanED/repos", "events_url": "https://api.github.com/users/EvanED/events{/privacy}", "received_events_url": "https://api.github.com/users/EvanED/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 304694104, "node_id": "MDU6TGFiZWwzMDQ2OTQxMDQ=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20please%20discuss", "name": "state: please discuss", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-06-06T06:58:35Z", "updated_at": "2018-07-24T01:16:51Z", "closed_at": "2018-07-23T17:49:37Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1121", "html_url": "https://github.com/nlohmann/json/pull/1121", "diff_url": "https://github.com/nlohmann/json/pull/1121.diff", "patch_url": "https://github.com/nlohmann/json/pull/1121.patch"}, "body": "This is a pretty massive pull request, and is not really ready to be merged yet; there are still a couple things on my to do list. However, I was hoping to open a discussion about the design of this and what you think before completely finishing it out. I'm hoping it's like 70% there. Inspired by #229, #457, maybe others, and of course my own needs/wants. (Almost everything in here is something that is useful to me.) I'm not sure how you want to work; I'm open to instructions otherwise, and I also fully expect to iterate on this at least a couple times.\r\n\r\nLet me emphasize that I am primarily focused on feedback on the design, with an eye toward whether you want this in your library. I think the [tests](https://github.com/EvanED/json/blob/fancy-serialization/test/src/unit-fancy-serialization.cpp) and [documentation](https://github.com/EvanED/json/blob/fancy-serialization/doc/StyledPrettyPrinting.md) are likely to be the most useful for that, but I don't know how you work. If everything looks great then feel free to take a look at the implementation, but at least for me, that wouldn't be my first stop.\r\n\r\nThere are a few conceptual groups of changes. I can break these into separate pull requests if you like. I don't know how related or unrelated they should be before they become a \"separate issue.\" Here are changes I made to the stock code, not counting my additions:\r\n\r\n* At least for me, when I ran `make pretty` on a clean `develop` checkout, I got changes. (`Artistic Style Version 2.05.1`) So there's one commit cleaning that up. Several files have those changes.\r\n* During this, I discovered an extreme edge case bug -- if the indent width ever grew to >512, it would ignore the provided indent character. (1c1c78908424)\r\n* I added accessors into `json_pointer` -- though I'm not thrilled with it. See my documentation document for more thoughts on that. (Those are the `json_pointer.hpp` and `unit-json-pointer.cpp`)\r\n* I split off everything for rendering strings and numbers from `serializer` to a new `primitve_serializer`. This change also spawned the `unit-convenience.cpp` and `unit-coversion.cpp` changes. (It became a little more obnoxious to test internals, but I'm thinking this doesn't matter.)\r\n\r\nThen there are my additions:\r\n* `fancy_serializer.hpp` holds the actual code\r\n* `unit-fancy-serialization.cpp` has the tests (I guess now that I'm writing this I'm not sure if I have 100% coverage, but I'd think I'm at least close if not there -- this is a design RFC anyway)\r\n* `json.hpp` has a couple trivial changes to make my thing a friend\r\n* `StyledPrettyPrinting.md` has documentation of the new capabilities. :exclamation: indicates a couple things I have TODO, and :question:  calls out items I specifically think feedback would be valuable on. If you're a top-down person, this is probably where to start for my additions.\r\n\r\n* * *\r\n\r\n## Pull request checklist\r\n\r\nRead the [Contribution Guidelines](https://github.com/nlohmann/json/blob/develop/.github/CONTRIBUTING.md) for detailed information.\r\n\r\n- [x]  Changes are described in the pull request, or an [existing issue is referenced](https://github.com/nlohmann/json/issues).\r\n- [x]  The test suite [compiles and runs](https://github.com/nlohmann/json/blob/develop/README.md#execute-unit-tests) without error. *Tested with GCC 5, Ubuntu 16, with and without ASan*\r\n- [ ]  [Code coverage](https://coveralls.io/github/nlohmann/json) is 100%. Test cases can be added by editing the [test suite](https://github.com/nlohmann/json/tree/develop/test/src). *How do I get coverage metrics?*\r\n- [x]  The source code is amalgamated; that is, after making changes to the sources in the `include/nlohmann` directory, run `make amalgamate` to create the single-header file `single_include/nlohmann/json.hpp`. The whole process is described [here](https://github.com/nlohmann/json/blob/develop/.github/CONTRIBUTING.md#files-to-change).\r\n\r\n## Please don't\r\n\r\n- The C++11 support varies between different **compilers** and versions. Please note the [list of supported compilers](https://github.com/nlohmann/json/blob/master/README.md#supported-compilers). Some compilers like GCC 4.8 (and earlier), Clang 3.3 (and earlier), or Microsoft Visual Studio 13.0 and earlier are known not to work due to missing or incomplete C++11 support. Please refrain from proposing changes that work around these compiler's limitations with `#ifdef`s or other means.\r\n- Specifically, I am aware of compilation problems with **Microsoft Visual Studio** (there even is an [issue label](https://github.com/nlohmann/json/issues?utf8=\u2713&q=label%3A%22visual+studio%22+) for these kind of bugs). I understand that even in 2016, complete C++11 support isn't there yet. But please also understand that I do not want to drop features or uglify the code just to make Microsoft's sub-standard compiler happy. The past has shown that there are ways to express the functionality such that the code compiles with the most recent MSVC - unfortunately, this is not the main objective of the project.\r\n- Please refrain from proposing changes that would **break [JSON](http://json.org) conformance**. If you propose a conformant extension of JSON to be supported by the library, please motivate this extension.\r\n- Please do not open pull requests that address **multiple issues**.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1120", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1120/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1120/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1120/events", "html_url": "https://github.com/nlohmann/json/issues/1120", "id": 329551583, "node_id": "MDU6SXNzdWUzMjk1NTE1ODM=", "number": 1120, "title": "How to use a json::iterator dereferenced value in code?", "user": {"login": "d223chen", "id": 27775959, "node_id": "MDQ6VXNlcjI3Nzc1OTU5", "avatar_url": "https://avatars1.githubusercontent.com/u/27775959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d223chen", "html_url": "https://github.com/d223chen", "followers_url": "https://api.github.com/users/d223chen/followers", "following_url": "https://api.github.com/users/d223chen/following{/other_user}", "gists_url": "https://api.github.com/users/d223chen/gists{/gist_id}", "starred_url": "https://api.github.com/users/d223chen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d223chen/subscriptions", "organizations_url": "https://api.github.com/users/d223chen/orgs", "repos_url": "https://api.github.com/users/d223chen/repos", "events_url": "https://api.github.com/users/d223chen/events{/privacy}", "received_events_url": "https://api.github.com/users/d223chen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-06-05T17:21:57Z", "updated_at": "2018-06-07T19:39:47Z", "closed_at": "2018-06-07T19:39:47Z", "author_association": "NONE", "body": "I am trying to do something like this - it involves taking a json::iterator through some json objects, and getting their keys and values for entries. I want to use the values (i.e. it.value() and mit.value()) as arguments to other functions...\r\n\r\n        json result;\r\n        json inboundMessage = ...;//determined at runtime\r\n        json savedMessage = ...; //determined at runtime\r\n        for (json::iterator it = inboundMessage.begin(), mit = savedMessage.begin(); it != inboundMessage.end() && mit != savedMessage.end(); ++it, ++mit) {\r\n\t\tjson pair;\r\n\t\tpair.emplace_back(\"log\", it.value());\r\n\t        pair.emplace_back(\"data\", mit.value());\r\n\t\tresult.emplace_back(it.key(), pair);\r\n        }\r\n        return result;\r\n\r\nWhen I build, I get the following error:            \r\n` 'nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>::basic_json(nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer> &&) noexcept': cannot convert argument 1 from 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' to 'std::initializer_list<nlohmann::detail::json_ref<nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>>>'\t`\r\n\r\nWhat is the correct way to access the value referenced by an iterator such that the value can be used by code?\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1119", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1119/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1119/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1119/events", "html_url": "https://github.com/nlohmann/json/issues/1119", "id": 329496070, "node_id": "MDU6SXNzdWUzMjk0OTYwNzA=", "number": 1119, "title": "clang compiler: error : unknown type name 'not'", "user": {"login": "d223chen", "id": 27775959, "node_id": "MDQ6VXNlcjI3Nzc1OTU5", "avatar_url": "https://avatars1.githubusercontent.com/u/27775959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d223chen", "html_url": "https://github.com/d223chen", "followers_url": "https://api.github.com/users/d223chen/followers", "following_url": "https://api.github.com/users/d223chen/following{/other_user}", "gists_url": "https://api.github.com/users/d223chen/gists{/gist_id}", "starred_url": "https://api.github.com/users/d223chen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d223chen/subscriptions", "organizations_url": "https://api.github.com/users/d223chen/orgs", "repos_url": "https://api.github.com/users/d223chen/repos", "events_url": "https://api.github.com/users/d223chen/events{/privacy}", "received_events_url": "https://api.github.com/users/d223chen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-05T14:57:41Z", "updated_at": "2018-07-28T21:46:47Z", "closed_at": null, "author_association": "NONE", "body": "I am building json.hpp with a project using the Clang/LLVM toolset in Visual Studio 2017 Community Edition (version 15.7.2)and getting these errors (and then some):\r\n\r\n\r\n                  1>------ Build started: Project: SampleProject, Configuration: Debug Win32 ------\r\n                  1>clang-cl.exe : warning : argument unused during compilation: '/ZI' [-Wunused-command-line-argument]\r\n                  1>clang-cl.exe : warning : argument unused during compilation: '/Gm' [-Wunused-command-line-argument]\r\n                  1>In file included from Source.cpp:2:\r\n                  1>C:\\Program Files\\vcpkg\\installed\\x86-windows\\include\\nlohmann\\json.hpp(322,66): error : unknown type name 'not'\r\n                  1>template<class B> struct negation : std::integral_constant<bool, not B::value> {};\r\n                  1>                                                                 ^\r\n                  1>C:\\Program Files\\vcpkg\\installed\\x86-windows\\include\\nlohmann\\json.hpp(322,80): error : expected class name\r\n                  1>template<class B> struct negation : std::integral_constant<bool, not B::value> {};\r\n\r\n(and many more errors).\r\n\r\nHere is the compiler version:\r\n\r\n            C:\\Program Files\\LLVM\\bin>clang-cl.exe --version\r\n            clang version 6.0.0 (tags/RELEASE_600/final)\r\n            Target: x86_64-pc-windows-msvc\r\n            Thread model: posix\r\n            InstalledDir: C:\\Program Files\\LLVM\\bin\r\n\r\nI highly suspect this is a compiler issue. I successfully compiled the project when using the Microsoft Visual C++ compiler (MSVC) version 19.14. \r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1118", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1118/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1118/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1118/events", "html_url": "https://github.com/nlohmann/json/issues/1118", "id": 328229583, "node_id": "MDU6SXNzdWUzMjgyMjk1ODM=", "number": 1118, "title": "Disable implicit conversions from json to std::initializer_list<T> for any T", "user": {"login": "tlemo", "id": 13824553, "node_id": "MDQ6VXNlcjEzODI0NTUz", "avatar_url": "https://avatars2.githubusercontent.com/u/13824553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tlemo", "html_url": "https://github.com/tlemo", "followers_url": "https://api.github.com/users/tlemo/followers", "following_url": "https://api.github.com/users/tlemo/following{/other_user}", "gists_url": "https://api.github.com/users/tlemo/gists{/gist_id}", "starred_url": "https://api.github.com/users/tlemo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tlemo/subscriptions", "organizations_url": "https://api.github.com/users/tlemo/orgs", "repos_url": "https://api.github.com/users/tlemo/repos", "events_url": "https://api.github.com/users/tlemo/events{/privacy}", "received_events_url": "https://api.github.com/users/tlemo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-05-31T17:29:19Z", "updated_at": "2018-07-08T20:58:55Z", "closed_at": "2018-07-08T20:58:55Z", "author_association": "NONE", "body": "This is a cherry pick for from #1116: I suspect most ambiguities related to implicit conversions from json to standard containers (and not only) can be avoided by expanding the SFINAE around basic_json::operator ValueType() to explicitly exclude conversions to any std::initializer_list specialization. \r\n\r\nIt should be an quick, easy and safe fix (even if it doesn't fully address the full range of issues described in #1116). I'd be happy to prepare a patch if it helps.\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1117", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1117/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1117/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1117/events", "html_url": "https://github.com/nlohmann/json/pull/1117", "id": 328107038, "node_id": "MDExOlB1bGxSZXF1ZXN0MTkxNzI5Mjky", "number": 1117, "title": "remove stringstream dependency", "user": {"login": "TinyTinni", "id": 18199235, "node_id": "MDQ6VXNlcjE4MTk5MjM1", "avatar_url": "https://avatars3.githubusercontent.com/u/18199235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TinyTinni", "html_url": "https://github.com/TinyTinni", "followers_url": "https://api.github.com/users/TinyTinni/followers", "following_url": "https://api.github.com/users/TinyTinni/following{/other_user}", "gists_url": "https://api.github.com/users/TinyTinni/gists{/gist_id}", "starred_url": "https://api.github.com/users/TinyTinni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TinyTinni/subscriptions", "organizations_url": "https://api.github.com/users/TinyTinni/orgs", "repos_url": "https://api.github.com/users/TinyTinni/repos", "events_url": "https://api.github.com/users/TinyTinni/events{/privacy}", "received_events_url": "https://api.github.com/users/TinyTinni/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/24", "html_url": "https://github.com/nlohmann/json/milestone/24", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/24/labels", "id": 3188647, "node_id": "MDk6TWlsZXN0b25lMzE4ODY0Nw==", "number": 24, "title": "Release 3.1.3", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 33, "state": "open", "created_at": "2018-03-14T21:05:47Z", "updated_at": "2018-07-21T12:46:17Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2018-05-31T11:50:08Z", "updated_at": "2018-06-01T06:05:46Z", "closed_at": "2018-06-01T06:05:46Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1117", "html_url": "https://github.com/nlohmann/json/pull/1117", "diff_url": "https://github.com/nlohmann/json/pull/1117.diff", "patch_url": "https://github.com/nlohmann/json/pull/1117.patch"}, "body": "Hi,\r\nthis PR replaces the  `stringstream` conversions with `snprintf` ones and removes all stringstream dependencies.\r\n`snprintf` is already use in the project.\r\n\r\nIssue reference: #1111 \r\n"}]