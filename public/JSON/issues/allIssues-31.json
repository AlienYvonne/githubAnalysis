[{"url": "https://api.github.com/repos/nlohmann/json/issues/274", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/274/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/274/events", "html_url": "https://github.com/nlohmann/json/issues/274", "id": 162671818, "node_id": "MDU6SXNzdWUxNjI2NzE4MTg=", "number": 274, "title": "Using QString as string type", "user": {"login": "mlutken", "id": 16965348, "node_id": "MDQ6VXNlcjE2OTY1MzQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/16965348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlutken", "html_url": "https://github.com/mlutken", "followers_url": "https://api.github.com/users/mlutken/followers", "following_url": "https://api.github.com/users/mlutken/following{/other_user}", "gists_url": "https://api.github.com/users/mlutken/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlutken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlutken/subscriptions", "organizations_url": "https://api.github.com/users/mlutken/orgs", "repos_url": "https://api.github.com/users/mlutken/repos", "events_url": "https://api.github.com/users/mlutken/events{/privacy}", "received_events_url": "https://api.github.com/users/mlutken/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 53, "created_at": "2016-06-28T12:17:34Z", "updated_at": "2018-02-19T14:22:08Z", "closed_at": "2016-11-08T20:09:05Z", "author_association": "NONE", "body": "Hi\n\nIt would be very nice if one could do:\nusing json = nlohmann::basic_json < std::map, std::vector, QString >;\n\nAnd have everything work.\nRight now it seems stringstream are used to stringify etc... So it does not quite compile.\n\nOtherwise I am pretty impressed by the way this library works. Having used hson mostly from PHP, where it's very simple, this is clearly the way to go in C++ :)\n\n-Martin\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/273", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/273/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/273/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/273/events", "html_url": "https://github.com/nlohmann/json/issues/273", "id": 162517234, "node_id": "MDU6SXNzdWUxNjI1MTcyMzQ=", "number": 273, "title": "Compilation error.", "user": {"login": "kerolex", "id": 7253675, "node_id": "MDQ6VXNlcjcyNTM2NzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/7253675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kerolex", "html_url": "https://github.com/kerolex", "followers_url": "https://api.github.com/users/kerolex/followers", "following_url": "https://api.github.com/users/kerolex/following{/other_user}", "gists_url": "https://api.github.com/users/kerolex/gists{/gist_id}", "starred_url": "https://api.github.com/users/kerolex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kerolex/subscriptions", "organizations_url": "https://api.github.com/users/kerolex/orgs", "repos_url": "https://api.github.com/users/kerolex/repos", "events_url": "https://api.github.com/users/kerolex/events{/privacy}", "received_events_url": "https://api.github.com/users/kerolex/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-27T18:30:27Z", "updated_at": "2016-06-27T19:51:35Z", "closed_at": "2016-06-27T18:37:33Z", "author_association": "NONE", "body": "Please notice this error during compilation phase:\n\n```\ntest/src/unit.cpp:12033:32: error: unterminated raw string\n             CHECK_NOTHROW(json(R\"(\n                                ^\ntest/src/unit.cpp:12048:14: warning: missing terminating \" character [enabled by default]\n             )\"));\n```\n\nThis error is also repeating on other lines with similar structure.\nPlease can you tell me if it is just a problem of mine?\n\nMy OS is Ubuntu 14.04 LTS and compiler g++ 4.8.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/272", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/272/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/272/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/272/events", "html_url": "https://github.com/nlohmann/json/issues/272", "id": 162470353, "node_id": "MDU6SXNzdWUxNjI0NzAzNTM=", "number": 272, "title": "dump() performance degradation in v2", "user": {"login": "duncanwerner", "id": 3460408, "node_id": "MDQ6VXNlcjM0NjA0MDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/3460408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duncanwerner", "html_url": "https://github.com/duncanwerner", "followers_url": "https://api.github.com/users/duncanwerner/followers", "following_url": "https://api.github.com/users/duncanwerner/following{/other_user}", "gists_url": "https://api.github.com/users/duncanwerner/gists{/gist_id}", "starred_url": "https://api.github.com/users/duncanwerner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duncanwerner/subscriptions", "organizations_url": "https://api.github.com/users/duncanwerner/orgs", "repos_url": "https://api.github.com/users/duncanwerner/repos", "events_url": "https://api.github.com/users/duncanwerner/events{/privacy}", "received_events_url": "https://api.github.com/users/duncanwerner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/6", "html_url": "https://github.com/nlohmann/json/milestone/6", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/6/labels", "id": 1853279, "node_id": "MDk6TWlsZXN0b25lMTg1MzI3OQ==", "number": 6, "title": "Release 2.0.1", "description": "Bugfix release due to #272.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "closed", "created_at": "2016-06-28T17:20:16Z", "updated_at": "2016-06-28T20:18:59Z", "due_on": null, "closed_at": "2016-06-28T20:18:59Z"}, "comments": 11, "created_at": "2016-06-27T14:48:34Z", "updated_at": "2016-09-01T21:33:42Z", "closed_at": "2016-06-28T19:25:42Z", "author_association": "NONE", "body": "(This should maybe go into #202?)\n\nTesting a switch from v1.1 -> v2.0 I found fairly significant performance degradation in `dump()` with a large set of doubles.  Here's a sample implementation:\n\n```\njson data;\nstd::vector< double > vec(5e5);\nsrand(1);\nfor( int i = 0; i< 5e5; i++ ){ vec[i] = rand();}\ndata = vec;\nstd::string str = data.dump();\n```\n\ncompiled with vs2015 on windows.  Using v1.1 the dump call takes ~550ms.  With 2.0 it takes ~25000ms (50x).  I haven't tested on any other platforms (although I can do that if it's helpful).\n\nGranted this is an edge case, but it's a pretty dramatic change.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/271", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/271/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/271/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/271/events", "html_url": "https://github.com/nlohmann/json/pull/271", "id": 162102562, "node_id": "MDExOlB1bGxSZXF1ZXN0NzUwODIzMjA=", "number": 271, "title": "fixed a tiny typo", "user": {"login": "feroldi", "id": 8634526, "node_id": "MDQ6VXNlcjg2MzQ1MjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8634526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/feroldi", "html_url": "https://github.com/feroldi", "followers_url": "https://api.github.com/users/feroldi/followers", "following_url": "https://api.github.com/users/feroldi/following{/other_user}", "gists_url": "https://api.github.com/users/feroldi/gists{/gist_id}", "starred_url": "https://api.github.com/users/feroldi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/feroldi/subscriptions", "organizations_url": "https://api.github.com/users/feroldi/orgs", "repos_url": "https://api.github.com/users/feroldi/repos", "events_url": "https://api.github.com/users/feroldi/events{/privacy}", "received_events_url": "https://api.github.com/users/feroldi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-24T08:47:11Z", "updated_at": "2016-06-24T09:28:08Z", "closed_at": "2016-06-24T09:28:01Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/271", "html_url": "https://github.com/nlohmann/json/pull/271", "diff_url": "https://github.com/nlohmann/json/pull/271.diff", "patch_url": "https://github.com/nlohmann/json/pull/271.patch"}, "body": ""}, {"url": "https://api.github.com/repos/nlohmann/json/issues/270", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/270/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/270/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/270/events", "html_url": "https://github.com/nlohmann/json/issues/270", "id": 162091282, "node_id": "MDU6SXNzdWUxNjIwOTEyODI=", "number": 270, "title": "hexify() function emits conversion warning", "user": {"login": "dtoma", "id": 1595791, "node_id": "MDQ6VXNlcjE1OTU3OTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1595791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtoma", "html_url": "https://github.com/dtoma", "followers_url": "https://api.github.com/users/dtoma/followers", "following_url": "https://api.github.com/users/dtoma/following{/other_user}", "gists_url": "https://api.github.com/users/dtoma/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtoma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtoma/subscriptions", "organizations_url": "https://api.github.com/users/dtoma/orgs", "repos_url": "https://api.github.com/users/dtoma/repos", "events_url": "https://api.github.com/users/dtoma/events{/privacy}", "received_events_url": "https://api.github.com/users/dtoma/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/7", "html_url": "https://github.com/nlohmann/json/milestone/7", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/7/labels", "id": 1853616, "node_id": "MDk6TWlsZXN0b25lMTg1MzYxNg==", "number": 7, "title": "Release 2.0.2", "description": "The next release if backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2016-06-28T20:19:10Z", "updated_at": "2016-07-31T11:41:43Z", "due_on": "2016-07-30T07:00:00Z", "closed_at": "2016-07-31T11:41:43Z"}, "comments": 3, "created_at": "2016-06-24T07:27:54Z", "updated_at": "2016-07-01T14:58:57Z", "closed_at": "2016-07-01T14:58:57Z", "author_association": "CONTRIBUTOR", "body": "Hello,\n\nUsing gcc `6.1.0`.\n\nCompilation error (`-Wconversion -Werror`):\n\n```\n./deps/json.hpp:9995:25:   required from here\n./deps/json.hpp:5957:72: error: conversion to 'char' from 'int' may alter its value [-Werror=conversion]\n                             : ('a' + static_cast<char>((v - 10) & 0x1f));\n                                                                        ^\n./deps/json.hpp:5957:72: error: conversion to 'char' from 'int' may alter its value [-Werror=conversion]\n```\n\n[hexify](https://github.com/nlohmann/json/blob/master/src/json.hpp.re2c#L5953):\n\n``` c++\nconst auto hexify = [](const int v) -> char\n{\n  return (v < 10)\n  ? ('0' + static_cast<char>(v))\n  : ('a' + static_cast<char>((v - 10) & 0x1f));\n};\n```\n\nCould be written as something like:\n\n``` c++\nconst auto hexify = [](const int v) -> char\n{\n    static const std::array<char, 16> hex = { '0', '1', '2', '3',\n                                              '4', '5', '6', '7',\n                                              '8', '9', 'a', 'b',\n                                              'c', 'd', 'e', 'f' };\n    return hex[v];\n};\n```\n\nWould you be interested in a PR for such a change?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/269", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/269/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/269/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/269/events", "html_url": "https://github.com/nlohmann/json/issues/269", "id": 161736046, "node_id": "MDU6SXNzdWUxNjE3MzYwNDY=", "number": 269, "title": "json::diff generates incorrect patch when removing multiple array elements.", "user": {"login": "tmyersjstar", "id": 13578082, "node_id": "MDQ6VXNlcjEzNTc4MDgy", "avatar_url": "https://avatars3.githubusercontent.com/u/13578082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmyersjstar", "html_url": "https://github.com/tmyersjstar", "followers_url": "https://api.github.com/users/tmyersjstar/followers", "following_url": "https://api.github.com/users/tmyersjstar/following{/other_user}", "gists_url": "https://api.github.com/users/tmyersjstar/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmyersjstar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmyersjstar/subscriptions", "organizations_url": "https://api.github.com/users/tmyersjstar/orgs", "repos_url": "https://api.github.com/users/tmyersjstar/repos", "events_url": "https://api.github.com/users/tmyersjstar/events{/privacy}", "received_events_url": "https://api.github.com/users/tmyersjstar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/3", "html_url": "https://github.com/nlohmann/json/milestone/3", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/3/labels", "id": 1510937, "node_id": "MDk6TWlsZXN0b25lMTUxMDkzNw==", "number": 3, "title": "Release 2.0.0", "description": "This release adds several features such as JSON Pointers, JSON Patch, or support for 64 bit unsigned integers. Furthermore, several (subtle) bugs have been fixed.\r\n\r\nAs `noexcept` and `constexpr` specifier have been added to several functions, the public API has effectively been changed in a (potential) non-backwards compatible manner. As we adhere to [Semantic Versioning](http://semver.org), this calls for a new major version, so say hello to 2\ufe0f\u20e3.0\ufe0f\u20e3.0\ufe0f\u20e3.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 34, "state": "closed", "created_at": "2016-01-17T12:14:39Z", "updated_at": "2016-06-23T22:53:19Z", "due_on": "2016-06-23T07:00:00Z", "closed_at": "2016-06-23T22:53:19Z"}, "comments": 5, "created_at": "2016-06-22T17:05:50Z", "updated_at": "2016-06-22T22:05:56Z", "closed_at": "2016-06-22T22:05:56Z", "author_association": "NONE", "body": "Removing multiple elements from an array will generate a patch which is incorrect.  Here is a unit test that will fail:\n\n``` cpp\n// Exists in TEST_CASE(\"JSON patch\")\nSECTION(\"remove multiple\")\n{\n    json doc = R\"(\n        {\n            \"arr1\": [1, 2, 3, 4]\n        }\n    )\"_json;\n    json expected = R\"(\n        {\n            \"arr1\": [1, 2]\n        }\n    )\"_json;\n\n    // check roundtrip\n    CHECK(doc.patch(json::diff(doc, expected)) == expected);\n}\n```\n\nThe patch that is generated is the following:\n\n``` js\n[\n    {\n        \"op\": \"remove\",\n        \"path\": \"/2\"\n    },\n    {\n        \"op\": \"remove\",\n        \"path\": \"/3\"\n    }\n]\n```\n\nThis fails obviously because first index 2 is removed, and then index 3 is attempted to be removed, but the size is only 2 at this point:\n\n```\ntest/src/unit.cpp:13106: FAILED:\n  CHECK( doc.patch(json::diff(doc, expected)) == expected )\ndue to unexpected exception with message:\n  array index 3 is out of range\n```\n\nSorry if this is already a known issue or not the right way to report this issue.  I will try to take a look into creating a fix if I have time.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/268", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/268/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/268/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/268/events", "html_url": "https://github.com/nlohmann/json/issues/268", "id": 161327201, "node_id": "MDU6SXNzdWUxNjEzMjcyMDE=", "number": 268, "title": "dump() method doesn't work with a custom allocator", "user": {"login": "michsco", "id": 15827689, "node_id": "MDQ6VXNlcjE1ODI3Njg5", "avatar_url": "https://avatars0.githubusercontent.com/u/15827689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michsco", "html_url": "https://github.com/michsco", "followers_url": "https://api.github.com/users/michsco/followers", "following_url": "https://api.github.com/users/michsco/following{/other_user}", "gists_url": "https://api.github.com/users/michsco/gists{/gist_id}", "starred_url": "https://api.github.com/users/michsco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michsco/subscriptions", "organizations_url": "https://api.github.com/users/michsco/orgs", "repos_url": "https://api.github.com/users/michsco/repos", "events_url": "https://api.github.com/users/michsco/events{/privacy}", "received_events_url": "https://api.github.com/users/michsco/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}, {"id": 304694104, "node_id": "MDU6TGFiZWwzMDQ2OTQxMDQ=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20please%20discuss", "name": "state: please discuss", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-06-21T00:48:40Z", "updated_at": "2017-06-16T17:36:51Z", "closed_at": "2017-06-16T17:36:51Z", "author_association": "NONE", "body": "Even if #161 isn't fixed, the dump() method still assumes the default allocator is used. Consider the following code:\n\n``` cpp\nnlohmann::basic_json<std::map, std::vector, StringWithMyAllocator, bool, int64_t, uint64_t, double, MyAllocator> j;\n\n// add a string that is stored as std::string\nj[\"name\"] = \"Niels\";\n\n// explicit conversion to string\nStringWithMyAllocator s = j.dump();    // {\\\"happy\\\":true,\\\"pi\\\":3.141}\n```\n\nThis results in a compiler error:\n'return': cannot convert from 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' to 'std::basic_string<char,std::char_traits<char>,MyAllocator<char>>'\n\nThe issue is due to the stringstream that is used without specifying the allocator for the stream. As a result, dump fails to compile due to the call to ss.str().\n\n``` cpp\nstring_t dump(const int indent = -1) const\n{\n    std::stringstream ss;\n\n    if (indent >= 0)\n    {\n        dump(ss, true, static_cast<unsigned int>(indent));\n    }\n    else\n    {\n        dump(ss, false, 0);\n    }\n\n    return ss.str();\n}\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/267", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/267/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/267/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/267/events", "html_url": "https://github.com/nlohmann/json/issues/267", "id": 160952101, "node_id": "MDU6SXNzdWUxNjA5NTIxMDE=", "number": 267, "title": "Docs - What does Json[key] return?", "user": {"login": "MartinNvp", "id": 19196293, "node_id": "MDQ6VXNlcjE5MTk2Mjkz", "avatar_url": "https://avatars1.githubusercontent.com/u/19196293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MartinNvp", "html_url": "https://github.com/MartinNvp", "followers_url": "https://api.github.com/users/MartinNvp/followers", "following_url": "https://api.github.com/users/MartinNvp/following{/other_user}", "gists_url": "https://api.github.com/users/MartinNvp/gists{/gist_id}", "starred_url": "https://api.github.com/users/MartinNvp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MartinNvp/subscriptions", "organizations_url": "https://api.github.com/users/MartinNvp/orgs", "repos_url": "https://api.github.com/users/MartinNvp/repos", "events_url": "https://api.github.com/users/MartinNvp/events{/privacy}", "received_events_url": "https://api.github.com/users/MartinNvp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-06-17T18:49:59Z", "updated_at": "2016-06-22T09:27:00Z", "closed_at": "2016-06-18T12:34:21Z", "author_association": "NONE", "body": "### Background\n\nI wanted to loop through the keys of \"instruments\" (without assuming the nature of the contained values).\n\n``` json\n{\n  \"instruments\": {\n    \"cu1608\": {\"MaxPos\": 3, \"StartTime\": \"09:00\" },\n    \"cu1609\": {\"MaxPos\": 0, \"StartTime\": \"09:00\" },\n    \"cu1610\": {\"MaxPos\": 0, \"StartTime\": \"09:00\" },\n  }\n}\n```\n\nYour main readme.md is great, but seems a tad more focus on _loading_ than reading/querying Json. (The forms of loading are  impressive/elegant.)\nAll the examples I could find for iterating over JSON object/map content where at the top level. Not nested.\n\nI wanted to know what the operator[] returned. I dug into the class docs. Found json::operator[] returned some reference type.\nWhich did not look iterable.\n\nDespite that observation (is it wrong?) this code works:\n\n``` c++\nvoid strathost_from_json(StrategyHostParams& host, const json& j)\n    {\n        host.subscribe_instrumentname_list.clear();\n        const json& instrums = j[\"instruments\"]; //<<<< this bit was hard to figure out\n        for (json::const_iterator it = instrums.begin(); it != instrums.end(); ++it)\n            host.subscribe_instrumentname_list.emplace_back(it.key());\n    }\n```\n\nSo I _can_ get a JSON object at every level all the way down. Happy Surprise.\n### Request\n\nCan (or should?) that readme.md docs state something like:\n-  \"Its JSON objects\" all the way down \n  (not [turtles](https://en.wikipedia.org/wiki/Turtles_all_the_way_down) ;-) )\n- JSON[] returns (via implicit conversion??) a thing convertible to json&\n- show iteration of nested objects arrays.\n\n(Hope this aint daft, new to use of your JSON, or any JSON actually.)\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/266", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/266/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/266/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/266/events", "html_url": "https://github.com/nlohmann/json/pull/266", "id": 160130902, "node_id": "MDExOlB1bGxSZXF1ZXN0NzM3MDM0MzI=", "number": 266, "title": "Fix Issue #265", "user": {"login": "06needhamt", "id": 4162227, "node_id": "MDQ6VXNlcjQxNjIyMjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4162227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/06needhamt", "html_url": "https://github.com/06needhamt", "followers_url": "https://api.github.com/users/06needhamt/followers", "following_url": "https://api.github.com/users/06needhamt/following{/other_user}", "gists_url": "https://api.github.com/users/06needhamt/gists{/gist_id}", "starred_url": "https://api.github.com/users/06needhamt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/06needhamt/subscriptions", "organizations_url": "https://api.github.com/users/06needhamt/orgs", "repos_url": "https://api.github.com/users/06needhamt/repos", "events_url": "https://api.github.com/users/06needhamt/events{/privacy}", "received_events_url": "https://api.github.com/users/06needhamt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/3", "html_url": "https://github.com/nlohmann/json/milestone/3", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/3/labels", "id": 1510937, "node_id": "MDk6TWlsZXN0b25lMTUxMDkzNw==", "number": 3, "title": "Release 2.0.0", "description": "This release adds several features such as JSON Pointers, JSON Patch, or support for 64 bit unsigned integers. Furthermore, several (subtle) bugs have been fixed.\r\n\r\nAs `noexcept` and `constexpr` specifier have been added to several functions, the public API has effectively been changed in a (potential) non-backwards compatible manner. As we adhere to [Semantic Versioning](http://semver.org), this calls for a new major version, so say hello to 2\ufe0f\u20e3.0\ufe0f\u20e3.0\ufe0f\u20e3.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 34, "state": "closed", "created_at": "2016-01-17T12:14:39Z", "updated_at": "2016-06-23T22:53:19Z", "due_on": "2016-06-23T07:00:00Z", "closed_at": "2016-06-23T22:53:19Z"}, "comments": 1, "created_at": "2016-06-14T09:02:37Z", "updated_at": "2016-06-14T13:28:04Z", "closed_at": "2016-06-14T13:24:50Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/266", "html_url": "https://github.com/nlohmann/json/pull/266", "diff_url": "https://github.com/nlohmann/json/pull/266.diff", "patch_url": "https://github.com/nlohmann/json/pull/266.patch"}, "body": "## Files to change\n\nThere are currently two files which need to be edited:\n1. [`src/json.hpp.re2c`](https://github.com/nlohmann/json/blob/master/src/json.hpp.re2c) (note the `.re2c` suffix) - This file contains a comment section which describes the JSON lexic. This section is translated by [`re2c`](http://re2c.org) into file [`src/json.hpp`](https://github.com/nlohmann/json/blob/master/src/json.hpp) which is plain \"vanilla\" C++11 code. (In fact, the generated lexer consists of some hundred lines of `goto`s, which is a hint you never want to edit this file...).\n   \n   If you only edit file `src/json.hpp` (without the `.re2c` suffix), your changes will be overwritten as soon as the lexer is touched again. To generate the `src/json.hpp` file which is actually used during compilation of the tests and all other code, please execute\n   \n   ``` sh\n   make re2c\n   ```\n   \n   To run [`re2c`](http://re2c.org) and generate/overwrite file `src/json.hpp` with your changes in file `src/json.hpp.re2c`.\n2. [`test/src/unit.cpp`](https://github.com/nlohmann/json/blob/master/test/unit.cpp) - This contains the [Catch](https://github.com/philsquared/Catch) unit tests which currently cover [100 %](https://coveralls.io/github/nlohmann/json) of the library's code.\n   \n   If you add or change a feature, please also add a unit test to this file. The unit tests can be compiled with\n   \n   ``` sh\n   make\n   ```\n   \n   and can be executed with\n   \n   ``` sh\n   ./json_unit\n   ```\n   \n   The test cases are also executed with several different compilers on [Travis](https://travis-ci.org/nlohmann/json) once you open a pull request.\n\nPlease understand that I cannot accept pull requests changing only file `src/json.hpp`.\n## Note\n- If you open a pull request, the code will be automatically tested with [Valgrind](http://valgrind.org)'s Memcheck tool to detect memory leaks. Please be aware that the execution with Valgrind _may_ in rare cases yield different behavior than running the code directly. This can result in failing unit tests which run successfully without Valgrind.\n## Please don't\n- Only make changes to file `src/json.hpp` -- please read the paragraph above and understand why `src/json.hpp.re2c` exists.\n- The C++11 support varies between different **compilers** and versions. Please note the [list of supported compilers](https://github.com/nlohmann/json/blob/master/README.md#supported-compilers). Some compilers like GCC 4.8 (and earlier), Clang 3.3 (and earlier), or Microsoft Visual Studio 13.0 and earlier are known not to work due to missing or incomplete C++11 support. Please refrain from proposing changes that work around these compiler's limitations with `#ifdef`s or other means.\n- Specifically, I am aware of compilation problems with **Microsoft Visual Studio** (there even is an [issue label](https://github.com/nlohmann/json/issues?utf8=\u2713&q=label%3A%22visual+studio%22+) for these kind of bugs). I understand that even in 2016, complete C++11 support isn't there yet. But please also understand that I do not want to drop features or uglify the code just to make Microsoft's sub-standard compiler happy. The past has shown that there are ways to express the functionality such that the code compiles with the most recent MSVC - unfortunately, this is not the main objective of the project.\n- Please refrain from proposing changes that would **break [JSON](http://json.org) conformance**. If you propose a conformant extension of JSON to be supported by the library, please motivate this extension.\n- Please do not open pull requests that address **multiple issues**.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/265", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/265/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/265/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/265/events", "html_url": "https://github.com/nlohmann/json/issues/265", "id": 160009990, "node_id": "MDU6SXNzdWUxNjAwMDk5OTA=", "number": 265, "title": "Compiler Errors With JSON.hpp", "user": {"login": "06needhamt", "id": 4162227, "node_id": "MDQ6VXNlcjQxNjIyMjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4162227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/06needhamt", "html_url": "https://github.com/06needhamt", "followers_url": "https://api.github.com/users/06needhamt/followers", "following_url": "https://api.github.com/users/06needhamt/following{/other_user}", "gists_url": "https://api.github.com/users/06needhamt/gists{/gist_id}", "starred_url": "https://api.github.com/users/06needhamt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/06needhamt/subscriptions", "organizations_url": "https://api.github.com/users/06needhamt/orgs", "repos_url": "https://api.github.com/users/06needhamt/repos", "events_url": "https://api.github.com/users/06needhamt/events{/privacy}", "received_events_url": "https://api.github.com/users/06needhamt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/3", "html_url": "https://github.com/nlohmann/json/milestone/3", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/3/labels", "id": 1510937, "node_id": "MDk6TWlsZXN0b25lMTUxMDkzNw==", "number": 3, "title": "Release 2.0.0", "description": "This release adds several features such as JSON Pointers, JSON Patch, or support for 64 bit unsigned integers. Furthermore, several (subtle) bugs have been fixed.\r\n\r\nAs `noexcept` and `constexpr` specifier have been added to several functions, the public API has effectively been changed in a (potential) non-backwards compatible manner. As we adhere to [Semantic Versioning](http://semver.org), this calls for a new major version, so say hello to 2\ufe0f\u20e3.0\ufe0f\u20e3.0\ufe0f\u20e3.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 34, "state": "closed", "created_at": "2016-01-17T12:14:39Z", "updated_at": "2016-06-23T22:53:19Z", "due_on": "2016-06-23T07:00:00Z", "closed_at": "2016-06-23T22:53:19Z"}, "comments": 5, "created_at": "2016-06-13T18:03:04Z", "updated_at": "2016-06-14T13:27:57Z", "closed_at": "2016-06-14T13:27:50Z", "author_association": "CONTRIBUTOR", "body": "Hi i am experiencing some compiler errors with JSON.hpp the errors are as follows\n\n```\nError   C2589   '(': illegal token on right side of '::'    json.hpp 8475   \nError   C2059   syntax error: '::'   json.hpp   8475    \nError   C2143   syntax error: missing '(' before '::'   json.hpp    8475    \nError   C2589   '(': illegal token on right side of '::'    json.hpp    8481    \nError   C2059   syntax error: '::'  json.hpp    8481    \nError   C2143   syntax error: missing '(' before '::'   json.hpp    8481    \n```\n\nThis was compiled using Visual Studio 2015 Update 2 on Windows 10 build 10586\n\nHope this helps fix the issue\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/264", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/264/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/264/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/264/events", "html_url": "https://github.com/nlohmann/json/issues/264", "id": 159492548, "node_id": "MDU6SXNzdWUxNTk0OTI1NDg=", "number": 264, "title": "Throw exception instead of crashing my app", "user": {"login": "RandomSayHello", "id": 10299457, "node_id": "MDQ6VXNlcjEwMjk5NDU3", "avatar_url": "https://avatars2.githubusercontent.com/u/10299457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RandomSayHello", "html_url": "https://github.com/RandomSayHello", "followers_url": "https://api.github.com/users/RandomSayHello/followers", "following_url": "https://api.github.com/users/RandomSayHello/following{/other_user}", "gists_url": "https://api.github.com/users/RandomSayHello/gists{/gist_id}", "starred_url": "https://api.github.com/users/RandomSayHello/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RandomSayHello/subscriptions", "organizations_url": "https://api.github.com/users/RandomSayHello/orgs", "repos_url": "https://api.github.com/users/RandomSayHello/repos", "events_url": "https://api.github.com/users/RandomSayHello/events{/privacy}", "received_events_url": "https://api.github.com/users/RandomSayHello/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-06-09T19:47:55Z", "updated_at": "2016-06-10T16:21:36Z", "closed_at": "2016-06-10T16:06:18Z", "author_association": "NONE", "body": "Hi there,\n\nI just wanted to know how I can \"predefine\" a check-statement.\n\nlike, whenever I read something like json[\"test_me\"] and it's non-existant, my app crash.\nIs there any simple way to check if this value even exists before it force-read it?\n\nsorry, Imma newbie here. I might explained my question in a totally wrong way .. however, I hope you can help me out! :+1: \n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/263", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/263/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/263/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/263/events", "html_url": "https://github.com/nlohmann/json/issues/263", "id": 159380878, "node_id": "MDU6SXNzdWUxNTkzODA4Nzg=", "number": 263, "title": "Ambiguous push_back and operator+= overloads", "user": {"login": "markand", "id": 11919008, "node_id": "MDQ6VXNlcjExOTE5MDA4", "avatar_url": "https://avatars0.githubusercontent.com/u/11919008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markand", "html_url": "https://github.com/markand", "followers_url": "https://api.github.com/users/markand/followers", "following_url": "https://api.github.com/users/markand/following{/other_user}", "gists_url": "https://api.github.com/users/markand/gists{/gist_id}", "starred_url": "https://api.github.com/users/markand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markand/subscriptions", "organizations_url": "https://api.github.com/users/markand/orgs", "repos_url": "https://api.github.com/users/markand/repos", "events_url": "https://api.github.com/users/markand/events{/privacy}", "received_events_url": "https://api.github.com/users/markand/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-09T10:59:34Z", "updated_at": "2016-06-09T13:32:17Z", "closed_at": "2016-06-09T11:00:46Z", "author_association": "NONE", "body": "Hello,\n\nI'm trying to add a property to an object like in the example from the README gif, I get an error about ambiguous overload with the following code using GCC 5.1:\n\n``` cpp\n#include \"json.hpp\"\n\nusing json = nlohmann::json;\n\nint main()\n{\n    json j = json::object();\n\n    j += { \"anotherkey\", false };\n\n    return 0;\n}\n```\n\nAnd the error:\n\n```\nmain.cpp: In function 'int main()':\nmain.cpp:9:4: error: ambiguous overload for 'operator+=' (operand types are 'json {aka nlohmann::basic_json<>}' and '<brace-enclosed initializer list>')\n  j += { \"anotherkey\", false };\n    ^\nIn file included from main.cpp:1:0:\njson.hpp:4324:15: note: candidate: nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::value_type& nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::operator+=(nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>&&) [with ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long long int; NumberFloatType = double; AllocatorType = std::allocator; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::reference = nlohmann::basic_json<>&; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::value_type = nlohmann::basic_json<>]\n     reference operator+=(basic_json&& val)\n               ^\njson.hpp:4358:15: note: candidate: nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::value_type& nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::operator+=(const nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>&) [with ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long long int; NumberFloatType = double; AllocatorType = std::allocator; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::reference = nlohmann::basic_json<>&; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::value_type = nlohmann::basic_json<>]\n     reference operator+=(const basic_json& val)\n               ^\njson.hpp:4408:15: note: candidate: nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::value_type& nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::operator+=(const typename nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::object_t::value_type&) [with ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long long int; NumberFloatType = double; AllocatorType = std::allocator; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::reference = nlohmann::basic_json<>&; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::value_type = nlohmann::basic_json<>; typename nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::object_t::value_type = std::pair<const std::__cxx11::basic_string<char>, nlohmann::basic_json<> >]\n     reference operator+=(const typename object_t::value_type& val)\n               ^\n```\n\nIt works if I use `j += json{{ \"anotherkey\", false }};` though\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/262", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/262/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/262/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/262/events", "html_url": "https://github.com/nlohmann/json/issues/262", "id": 158805394, "node_id": "MDU6SXNzdWUxNTg4MDUzOTQ=", "number": 262, "title": "Preseving order of items in json", "user": {"login": "moneroexamples", "id": 15305358, "node_id": "MDQ6VXNlcjE1MzA1MzU4", "avatar_url": "https://avatars1.githubusercontent.com/u/15305358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moneroexamples", "html_url": "https://github.com/moneroexamples", "followers_url": "https://api.github.com/users/moneroexamples/followers", "following_url": "https://api.github.com/users/moneroexamples/following{/other_user}", "gists_url": "https://api.github.com/users/moneroexamples/gists{/gist_id}", "starred_url": "https://api.github.com/users/moneroexamples/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moneroexamples/subscriptions", "organizations_url": "https://api.github.com/users/moneroexamples/orgs", "repos_url": "https://api.github.com/users/moneroexamples/repos", "events_url": "https://api.github.com/users/moneroexamples/events{/privacy}", "received_events_url": "https://api.github.com/users/moneroexamples/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-07T00:34:00Z", "updated_at": "2016-06-07T04:03:04Z", "closed_at": "2016-06-07T04:03:04Z", "author_association": "NONE", "body": "Is there a way of cunstring json object so that it preserves the ordering of elements?\n\nFor example, this:\n\n``` c++\n    nlohmann::json j1 {{\"ccc\", 2}, {\"aaa\", 4}};\n    cout << j1 << endl;\n```\n\nresults in a string in different order than originally defined\n\n``` c++\n{\"aaa\":4,\"ccc\":2}\n```\n\nI would like to preserve the orginal order, i.e., to get this instead:\n\n``` c++\n{\"ccc\":2,\"aaa\":4}\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/261", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/261/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/261/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/261/events", "html_url": "https://github.com/nlohmann/json/issues/261", "id": 158787352, "node_id": "MDU6SXNzdWUxNTg3ODczNTI=", "number": 261, "title": "'\\' char problem in strings", "user": {"login": "tanisman", "id": 15254912, "node_id": "MDQ6VXNlcjE1MjU0OTEy", "avatar_url": "https://avatars3.githubusercontent.com/u/15254912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tanisman", "html_url": "https://github.com/tanisman", "followers_url": "https://api.github.com/users/tanisman/followers", "following_url": "https://api.github.com/users/tanisman/following{/other_user}", "gists_url": "https://api.github.com/users/tanisman/gists{/gist_id}", "starred_url": "https://api.github.com/users/tanisman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tanisman/subscriptions", "organizations_url": "https://api.github.com/users/tanisman/orgs", "repos_url": "https://api.github.com/users/tanisman/repos", "events_url": "https://api.github.com/users/tanisman/events{/privacy}", "received_events_url": "https://api.github.com/users/tanisman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}, {"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-06-06T22:11:25Z", "updated_at": "2016-06-07T11:23:46Z", "closed_at": "2016-06-07T11:23:46Z", "author_association": "NONE", "body": "I am trying to parse this json:\n\n \"window\": {\n    \"texture\": \"interface\\\\ifcommon\\\\slibifwnd.ddj\",\n    \"width\":330,\n    \"height\":366,\n    \"position\": [0, 0],\n    \"rect\": [0, 0, 330, 366],\n    \"moveable\": true,\n    \"moverect\": [0, 0, 330, 30]\n    },\n\nbut parser gives me unexpected \\ error for string.\n\nIDE: Visual Studio 2015\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/260", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/260/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/260/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/260/events", "html_url": "https://github.com/nlohmann/json/issues/260", "id": 158618433, "node_id": "MDU6SXNzdWUxNTg2MTg0MzM=", "number": 260, "title": "VS2015 compile fail", "user": {"login": "aaron3481", "id": 1323760, "node_id": "MDQ6VXNlcjEzMjM3NjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1323760?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaron3481", "html_url": "https://github.com/aaron3481", "followers_url": "https://api.github.com/users/aaron3481/followers", "following_url": "https://api.github.com/users/aaron3481/following{/other_user}", "gists_url": "https://api.github.com/users/aaron3481/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaron3481/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaron3481/subscriptions", "organizations_url": "https://api.github.com/users/aaron3481/orgs", "repos_url": "https://api.github.com/users/aaron3481/repos", "events_url": "https://api.github.com/users/aaron3481/events{/privacy}", "received_events_url": "https://api.github.com/users/aaron3481/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-06-06T07:46:20Z", "updated_at": "2016-06-14T06:30:38Z", "closed_at": "2016-06-06T15:21:25Z", "author_association": "NONE", "body": "Hi all,\n\nI'm trying to import json.hpp into my project. When compiling, an error came out and pointed to line 8500 \"max = static_cast<uint64_t>(std::numeric_limits<number_integer_t>::max()) + 1;\"\n\nError Code: C2589 '(': illegal token on right side of '::'\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/259", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/259/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/259/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/259/events", "html_url": "https://github.com/nlohmann/json/issues/259", "id": 158510792, "node_id": "MDU6SXNzdWUxNTg1MTA3OTI=", "number": 259, "title": "-Wconversion warning", "user": {"login": "manuporto", "id": 7240098, "node_id": "MDQ6VXNlcjcyNDAwOTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7240098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manuporto", "html_url": "https://github.com/manuporto", "followers_url": "https://api.github.com/users/manuporto/followers", "following_url": "https://api.github.com/users/manuporto/following{/other_user}", "gists_url": "https://api.github.com/users/manuporto/gists{/gist_id}", "starred_url": "https://api.github.com/users/manuporto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manuporto/subscriptions", "organizations_url": "https://api.github.com/users/manuporto/orgs", "repos_url": "https://api.github.com/users/manuporto/repos", "events_url": "https://api.github.com/users/manuporto/events{/privacy}", "received_events_url": "https://api.github.com/users/manuporto/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/3", "html_url": "https://github.com/nlohmann/json/milestone/3", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/3/labels", "id": 1510937, "node_id": "MDk6TWlsZXN0b25lMTUxMDkzNw==", "number": 3, "title": "Release 2.0.0", "description": "This release adds several features such as JSON Pointers, JSON Patch, or support for 64 bit unsigned integers. Furthermore, several (subtle) bugs have been fixed.\r\n\r\nAs `noexcept` and `constexpr` specifier have been added to several functions, the public API has effectively been changed in a (potential) non-backwards compatible manner. As we adhere to [Semantic Versioning](http://semver.org), this calls for a new major version, so say hello to 2\ufe0f\u20e3.0\ufe0f\u20e3.0\ufe0f\u20e3.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 34, "state": "closed", "created_at": "2016-01-17T12:14:39Z", "updated_at": "2016-06-23T22:53:19Z", "due_on": "2016-06-23T07:00:00Z", "closed_at": "2016-06-23T22:53:19Z"}, "comments": 11, "created_at": "2016-06-04T15:59:25Z", "updated_at": "2016-06-23T16:16:45Z", "closed_at": "2016-06-23T16:16:40Z", "author_association": "NONE", "body": "I'm receiving a `-Wconversion` warning when including and compiling the latest release of the library. I read https://github.com/nlohmann/json/issues/239 but the errors showed are different (although it's the same flag that sends the warning), also the links present there are down.\nHere is the complete output:\n\n```\nIn file included from .../foo.cpp:3:0:\n.../json.hpp: In instantiation of \u2018nlohmann::basic_json<ObjectType, ArrayType, StringType, \nBooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::escape_string(const \nstring_t&) [with ObjectType = std::map; ArrayType = std::vector; StringType = \nstd::basic_string<char>; BooleanType = bool; NumberInteger\nType = long int; NumberFloatType = double; AllocatorType = std::allocator; \nnlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, \nNumberFloatType, AllocatorType>::string_t = std::basic_string<char>]::__lambda3\u2019:\n.../json.hpp:5455:40:   required from \u2018struct nlohmann::basic_json<ObjectType, ArrayType, \nStringType, BooleanType, NumberIntegerType, NumberFloatType, \nAllocatorType>::escape_string(const string_t&) [with ObjectType = std::map; ArrayType = \nstd::vector; StringType = std::basic_string<char>; BooleanType = bool; NumberIntegerType = long \nint; NumberFloatType = double; AllocatorType = std::allocator; nlohmann::basic_json<ObjectType, \nArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, \nAllocatorType>::string_t = std::basic_string<char>]::__lambda3\u2019\n.../json.hpp:5458:25:   required from \u2018static nlohmann::basic_json<ObjectType, ArrayType, \nStringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::string_t \nnlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, \nNumberFloatType, AllocatorType>::escape_string(const string_t&) [with ObjectType = std::map; \nArrayType = std::vector; StringType = std::basic_string<char>; BooleanType = bool; \nNumberIntegerType = long int; NumberFloatType = double; AllocatorType = std::allocator; \nnlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, \nNumberFloatType, AllocatorType>::string_t = std::basic_string<char>]\u2019\n.../json.hpp:5536:48:   required from \u2018void nlohmann::basic_json<ObjectType, ArrayType, \nStringType, BooleanType, NumberIntegerType, NumberFloatType, \nAllocatorType>::dump(std::ostream&, bool, unsigned int, unsigned int) const [with ObjectType = \nstd::map; ArrayType = std::vector; StringType = std::basic_string<char>; BooleanType = bool; \nNumberIntegerType = long int; NumberFloatType = double; AllocatorType = std::allocator; \nstd::ostream = std::basic_ostream<char>]\u2019\n.../json.hpp:1892:61:   required from \u2018nlohmann::basic_json<ObjectType, ArrayType, StringType, \nBooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::string_t \nnlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, \nNumberFloatType, AllocatorType>::dump(int) const [with ObjectType = std::map; ArrayType = \nstd::vector; StringType = std::basic_string<char>; BooleanType = bool; NumberIntegerType = long \nint; NumberFloatType = double; AllocatorType =\n std::allocator; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, \nNumberIntegerType, NumberFloatType, AllocatorType>::string_t = std::basic_string<char>]\u2019\n.../json.hpp:8209:25:   required from here\n.../json.hpp:5457:72: error: conversion to \u2018char\u2019 from \u2018int\u2019 may alter its value [-Werror=conversion]\n                             return (v < 10) ? ('0' + v) : ('a' + v - 10);\n                                                                        ^\n.../json.hpp:5457:72: error: conversion to \u2018char\u2019 from \u2018int\u2019 may alter its value [-Werror=conversion]\n.../json.hpp: In instantiation of \u2018static nlohmann::basic_json<ObjectType, ArrayType, StringType, \nBooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::string_t \nnlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, \nNumberFloatType, AllocatorType>::escape_string(const\n string_t&) [with ObjectType = std::map; ArrayType = std::vector; StringType = \nstd::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberFloatType = \ndouble; AllocatorType = std::allocator; nlohmann::basic_json<ObjectType, ArrayType, StringType, \nBooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::string_t = std::basic\n_string<char>]\u2019:\n.../json.hpp:5536:48:   required from \u2018void nlohmann::basic_json<ObjectType, ArrayType, \nStringType, BooleanType, NumberIntegerType, NumberFloatType, \nAllocatorType>::dump(std::ostream&, bool, unsigned int, unsigned int) const [with ObjectType = \nstd::map; ArrayType = std::vector; StringType = std::basic_string<char>; BooleanType = bool; \nNumberIntegerType = long int; NumberFloatType = double; AllocatorType = std::allocator; \nstd::ostream = std::basic_ostream<char>]\u2019\n.../json.hpp:1892:61:   required from \u2018nlohmann::basic_json<ObjectType, ArrayType, StringType, \nBooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::string_t \nnlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, \nNumberFloatType, AllocatorType>::dump(int) const [with ObjectType = std::map; ArrayType = \nstd::vector; StringType = std::basic_string<char>; BooleanType = bool; NumberIntegerType = long \nint; NumberFloatType = double; AllocatorType =\n std::allocator; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, \nNumberIntegerType, NumberFloatType, AllocatorType>::string_t = std::basic_string<char>]\u2019\n.../json.hpp:8209:25:   required from here\n.../json.hpp:5462:51: error: conversion to \u2018char\u2019 from \u2018int\u2019 may alter its value [-Werror=conversion]\n                     { 'u', '0', '0', hexify(c >> 4), hexify(c & 0x0f)\n                                                   ^\ncc1plus: all warnings being treated as errors\n```\n- gcc (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4\n- Compile flags: `-std=c++11 -Wall -Werror -Wconversion -Wno-unused-parameter -Wextra -Wtype-limits -pedantic -pedantic-errors`\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/258", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/258/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/258/events", "html_url": "https://github.com/nlohmann/json/issues/258", "id": 158439893, "node_id": "MDU6SXNzdWUxNTg0Mzk4OTM=", "number": 258, "title": "Maybe a bug", "user": {"login": "dekonunes", "id": 1737599, "node_id": "MDQ6VXNlcjE3Mzc1OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1737599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dekonunes", "html_url": "https://github.com/dekonunes", "followers_url": "https://api.github.com/users/dekonunes/followers", "following_url": "https://api.github.com/users/dekonunes/following{/other_user}", "gists_url": "https://api.github.com/users/dekonunes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dekonunes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dekonunes/subscriptions", "organizations_url": "https://api.github.com/users/dekonunes/orgs", "repos_url": "https://api.github.com/users/dekonunes/repos", "events_url": "https://api.github.com/users/dekonunes/events{/privacy}", "received_events_url": "https://api.github.com/users/dekonunes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-06-03T19:39:34Z", "updated_at": "2016-06-05T00:25:35Z", "closed_at": "2016-06-05T00:25:35Z", "author_association": "NONE", "body": "My english is not so well, but i'll try show what happening.\n\nI'm creating a genetic algorithm and when create a string with 16 or more bits the lib have a bug, will explain better.\n\nFirst i'm reading like this: \n\n``` c++\nvoid IndividuoBinario::openJson() {        \n        using json = nlohmann::json;\n        ifstream texto(\"entrada.json\");\n        if (!texto)\n            cout << \"dont open\" << endl;\n        stringstream buffer;\n        buffer << texto.rdbuf();\n        this->entrada = json::parse(buffer.str());\n        texto.close();\n}\n```\n\nI have a class IndividuoBinario with this constructor: \n\n``` c++\nIndividuoBinario::IndividuoBinario() {\n    static mt19937 mt(time(NULL));\n    static uniform_int_distribution<int> bit(0, 1);\n    string aux;\n    openJson();\n    pair<int, int> auxGenes;\n    for (int count = 0; count < this->entrada[\"qtdVariaveis\"]; ++count) {\n        auxGenes.first = this->entrada[\"variaveis\"][count][\"min\"];\n        auxGenes.second = this->entrada[\"variaveis\"][count][\"max\"];\n        this->genes.push_back(auxGenes);\n    }\n    for (int count = 0; count < this->genes.size(); ++count) {\n        this->quantidadeBitsCadaGene.push_back(getNumeroBits(this->entrada[\"variaveis\"][count][\"max\"],\n                this->entrada[\"variaveis\"][count][\"min\"],\n                this->entrada[\"variaveis\"][count][\"precisao\"]));\n    }\n\n    for (int var = 0; var < this->genes.size(); ++var) {\n        for (int i = 0; i < this->quantidadeBitsCadaGene.at(var); i++) {\n            aux = static_cast<ostringstream*>(&(ostringstream() << bit(mt)))->str();\n            this->cromossomo = this->cromossomo + aux;\n        }\n    }\n    this->probMutacao = this->entrada[\"chanceMutacao\"];\n}\n```\n\n Working fine, BUT when i make a pair this bug happen:\n\n``` c++\npair<IndividuoBinario, IndividuoBinario> newIndividuosCrossover; \n```\n\nusing printf to find the error (error is Segmentation fault) i found in this line (of method openJSON): \n\n``` c++\ncout << \"here 1\" << endl; //show\nifstream texto(\"entrada.json\");\ncout << \"here 2\" << endl; // dont show (Segmentation fault)\n```\n\nwhen run:\n\n```\n.....\nhere1\nhere2\nhere1\nhere2\nline before pair\nhere1\nSegmentation Fault (core dumped)\n```\n\nbut more weird its because this happen just when my string (this->cromossomo) is more then 16 chars and just when use pairs, if invoke normal class IndividuoBinario work fine, just using pair this happen and with more then 16 chars.\n\nI used gdb and this happen \n```malloc_consolidate (av=av@entry=0x7ffff6efec00 <main_arena>) at malloc.c:4134\n4134    malloc.c: Arquivo ou diret\u00f3rio n\u00e3o encontrado.\n\n```\n\n\nI dont know if this is because the lib, but maybe. I'm trying hard to solve this.\n\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/257", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/257/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/257/events", "html_url": "https://github.com/nlohmann/json/issues/257", "id": 158104345, "node_id": "MDU6SXNzdWUxNTgxMDQzNDU=", "number": 257, "title": "Few tests failed on Visual C++ 2015", "user": {"login": "R2RT", "id": 8713380, "node_id": "MDQ6VXNlcjg3MTMzODA=", "avatar_url": "https://avatars3.githubusercontent.com/u/8713380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/R2RT", "html_url": "https://github.com/R2RT", "followers_url": "https://api.github.com/users/R2RT/followers", "following_url": "https://api.github.com/users/R2RT/following{/other_user}", "gists_url": "https://api.github.com/users/R2RT/gists{/gist_id}", "starred_url": "https://api.github.com/users/R2RT/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/R2RT/subscriptions", "organizations_url": "https://api.github.com/users/R2RT/orgs", "repos_url": "https://api.github.com/users/R2RT/repos", "events_url": "https://api.github.com/users/R2RT/events{/privacy}", "received_events_url": "https://api.github.com/users/R2RT/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}, {"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-06-02T10:06:26Z", "updated_at": "2016-06-14T13:24:08Z", "closed_at": "2016-06-14T12:56:01Z", "author_association": "NONE", "body": "Hey,\nI want to report that 6 out of 32 tests failed once I compiled it with VC++ 2015. \nFortunatelly there are only 15 assertion fails, mainly with error message \"parse error - unexpected end of input\".\n\nTested on x86 and x64 debug and release builds.\n\nI can debug it later if needed.\n\nLog attached:\n[log.txt](https://github.com/nlohmann/json/files/295312/log.txt)\n\nAnd build log:\n[build.txt](https://github.com/nlohmann/json/files/295313/build.txt)\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/256", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/256/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/256/events", "html_url": "https://github.com/nlohmann/json/issues/256", "id": 157846295, "node_id": "MDU6SXNzdWUxNTc4NDYyOTU=", "number": 256, "title": "Access keys when iteration with new for loop C++11", "user": {"login": "mdickie", "id": 1424153, "node_id": "MDQ6VXNlcjE0MjQxNTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1424153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdickie", "html_url": "https://github.com/mdickie", "followers_url": "https://api.github.com/users/mdickie/followers", "following_url": "https://api.github.com/users/mdickie/following{/other_user}", "gists_url": "https://api.github.com/users/mdickie/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdickie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdickie/subscriptions", "organizations_url": "https://api.github.com/users/mdickie/orgs", "repos_url": "https://api.github.com/users/mdickie/repos", "events_url": "https://api.github.com/users/mdickie/events{/privacy}", "received_events_url": "https://api.github.com/users/mdickie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-06-01T08:03:55Z", "updated_at": "2016-06-17T19:40:23Z", "closed_at": "2016-06-14T19:55:35Z", "author_association": "NONE", "body": "Here is an example where you can access the values of the json object. However, I have no idea to access the keys.\n\n``` C++\nusing json = nlohmann::json;\nint main() {\n    json j = {\n        {\"name\", \"John Doe\"},\n        {\"born\", \"xxxx\"}\n    };\n    for (auto& element: j) {\n        std::cout << element << std::endl;\n    }\n}\n```\n\nHere is working example with stl where it is possible to access the keys:\n\n``` C++\n#include <iostream>\n#include <map>\n\nusing std::string;\n\nint main() {\n    std::map<string, string> m = {\n        {\"name\", \"Mariusz Wojcik\"},\n        {\"born\", \"1997\"}\n    };\n    for (std::pair<string, string> p: m) {\n        std::cout << std::get<0>(p) << \": \" << std::get<1>(p) << std::endl;\n    }\n}\n```\n\nSo there is my question: Is it possible to access these keys with json in a similiar way?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/255", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/255/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/255/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/255/events", "html_url": "https://github.com/nlohmann/json/issues/255", "id": 157386093, "node_id": "MDU6SXNzdWUxNTczODYwOTM=", "number": 255, "title": "multiline text values", "user": {"login": "ins2718", "id": 12584456, "node_id": "MDQ6VXNlcjEyNTg0NDU2", "avatar_url": "https://avatars0.githubusercontent.com/u/12584456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ins2718", "html_url": "https://github.com/ins2718", "followers_url": "https://api.github.com/users/ins2718/followers", "following_url": "https://api.github.com/users/ins2718/following{/other_user}", "gists_url": "https://api.github.com/users/ins2718/gists{/gist_id}", "starred_url": "https://api.github.com/users/ins2718/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ins2718/subscriptions", "organizations_url": "https://api.github.com/users/ins2718/orgs", "repos_url": "https://api.github.com/users/ins2718/repos", "events_url": "https://api.github.com/users/ins2718/events{/privacy}", "received_events_url": "https://api.github.com/users/ins2718/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-05-29T13:20:37Z", "updated_at": "2016-05-29T14:15:38Z", "closed_at": "2016-05-29T13:26:59Z", "author_association": "NONE", "body": "```\nstd::string s = \"{\\\"text\\\":\\\"line 1\\nline 2\\\"}\";\nauto json = nlohmann::json::parse(s);\n```\n\nThis json-object causes an error. Standard facilities python, php and js correctly handle it.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/254", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/254/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/254/events", "html_url": "https://github.com/nlohmann/json/issues/254", "id": 157343504, "node_id": "MDU6SXNzdWUxNTczNDM1MDQ=", "number": 254, "title": "Error when using json in g++", "user": {"login": "maciek-slon", "id": 224879, "node_id": "MDQ6VXNlcjIyNDg3OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/224879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maciek-slon", "html_url": "https://github.com/maciek-slon", "followers_url": "https://api.github.com/users/maciek-slon/followers", "following_url": "https://api.github.com/users/maciek-slon/following{/other_user}", "gists_url": "https://api.github.com/users/maciek-slon/gists{/gist_id}", "starred_url": "https://api.github.com/users/maciek-slon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maciek-slon/subscriptions", "organizations_url": "https://api.github.com/users/maciek-slon/orgs", "repos_url": "https://api.github.com/users/maciek-slon/repos", "events_url": "https://api.github.com/users/maciek-slon/events{/privacy}", "received_events_url": "https://api.github.com/users/maciek-slon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-28T15:23:11Z", "updated_at": "2016-05-28T15:25:03Z", "closed_at": "2016-05-28T15:25:03Z", "author_association": "NONE", "body": "When trying to compile simple program using `devel` branch:\n\n``` c++\n#include \"json.hpp\"\n\n// for convenience\nusing json = nlohmann::json;\n\nint main() {\n    // create an empty structure (null)\n    json j;\n\n    // add a number that is stored as double (note the implicit conversion of j to an object)\n    j[\"pi\"] = 3.141;\n\n    return 0;\n}\n```\n\nfollowing error is produced:\n\n```\nIn file included from test.cpp:1:0:\njson.hpp: In constructor \u2018nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::basic_json() [with ObjectType = std::map; ArrayType = std::vector; StringType = std::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator]\u2019:\njson.hpp:1060:5: error: conversion from \u2018nlohmann::basic_json<>::value_t\u2019 to non-scalar type \u2018nlohmann::basic_json<>::type_data_t\u2019 requested\n     basic_json() = default;\n     ^\ntest.cpp: In function \u2018int main()\u2019:\ntest.cpp:8:10: note: synthesized method \u2018nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::basic_json() [with ObjectType = std::map; ArrayType = std::vector; StringType = std::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator]\u2019 first required here \n     json j;\n          ^\n```\n\nCompiler version:\n\n```\ng++ (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4\n```\n\nCompile command:\n\n```\ng++ test.cpp -std=c++11\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/253", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/253/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/253/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/253/events", "html_url": "https://github.com/nlohmann/json/issues/253", "id": 157336811, "node_id": "MDU6SXNzdWUxNTczMzY4MTE=", "number": 253, "title": "is the release 2.0?", "user": {"login": "murinicanor", "id": 6024601, "node_id": "MDQ6VXNlcjYwMjQ2MDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/6024601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/murinicanor", "html_url": "https://github.com/murinicanor", "followers_url": "https://api.github.com/users/murinicanor/followers", "following_url": "https://api.github.com/users/murinicanor/following{/other_user}", "gists_url": "https://api.github.com/users/murinicanor/gists{/gist_id}", "starred_url": "https://api.github.com/users/murinicanor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/murinicanor/subscriptions", "organizations_url": "https://api.github.com/users/murinicanor/orgs", "repos_url": "https://api.github.com/users/murinicanor/repos", "events_url": "https://api.github.com/users/murinicanor/events{/privacy}", "received_events_url": "https://api.github.com/users/murinicanor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-28T12:37:22Z", "updated_at": "2016-05-28T13:58:05Z", "closed_at": "2016-05-28T13:57:59Z", "author_association": "CONTRIBUTOR", "body": "hi,\n\ni'm working on a debian package for the your json library (because its a build dependency for usbguard). is the master branch already release 2.0? both https://nlohmann.github.io/json/ and the header of src/json.hpp mention 2.0, but the changelog and the releases page still list 1.1.0 as the latest release...\n\nthanks for your work!\n\ncheers,\nmuri\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/252", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/252/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/252/events", "html_url": "https://github.com/nlohmann/json/issues/252", "id": 156934527, "node_id": "MDU6SXNzdWUxNTY5MzQ1Mjc=", "number": 252, "title": "concatenate objects", "user": {"login": "mlund", "id": 3248398, "node_id": "MDQ6VXNlcjMyNDgzOTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3248398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlund", "html_url": "https://github.com/mlund", "followers_url": "https://api.github.com/users/mlund/followers", "following_url": "https://api.github.com/users/mlund/following{/other_user}", "gists_url": "https://api.github.com/users/mlund/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlund/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlund/subscriptions", "organizations_url": "https://api.github.com/users/mlund/orgs", "repos_url": "https://api.github.com/users/mlund/repos", "events_url": "https://api.github.com/users/mlund/events{/privacy}", "received_events_url": "https://api.github.com/users/mlund/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2016-05-26T08:50:56Z", "updated_at": "2017-07-31T15:53:05Z", "closed_at": "2016-05-28T14:54:07Z", "author_association": "NONE", "body": "Hi!\nI wish to concatenate two json objects and thought of this:\n\n``` cpp\n#include <json.hpp>\n#include <iostream>\n\nint main() {\n  nlohmann::json a,b;\n\n  a[ \"sec\" ] = {\n    { \"title\", \"some title\" }, \n    { \"cnt\", 10 }\n  };\n\n  b[ \"sec\" ] = {\n    { \"more info\", \"add something more\" }\n  };\n\n  a += b;\n\n  std::cout << a.dump(4);\n}\n```\n\nwhich however throws an exception with v1.1.0. Any suggestions how to best do this?\nBest, Mikael\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/251", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/251/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/251/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/251/events", "html_url": "https://github.com/nlohmann/json/issues/251", "id": 156645024, "node_id": "MDU6SXNzdWUxNTY2NDUwMjQ=", "number": 251, "title": "Encoding", "user": {"login": "im95able", "id": 16592464, "node_id": "MDQ6VXNlcjE2NTkyNDY0", "avatar_url": "https://avatars0.githubusercontent.com/u/16592464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/im95able", "html_url": "https://github.com/im95able", "followers_url": "https://api.github.com/users/im95able/followers", "following_url": "https://api.github.com/users/im95able/following{/other_user}", "gists_url": "https://api.github.com/users/im95able/gists{/gist_id}", "starred_url": "https://api.github.com/users/im95able/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/im95able/subscriptions", "organizations_url": "https://api.github.com/users/im95able/orgs", "repos_url": "https://api.github.com/users/im95able/repos", "events_url": "https://api.github.com/users/im95able/events{/privacy}", "received_events_url": "https://api.github.com/users/im95able/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 344572510, "node_id": "MDU6TGFiZWwzNDQ1NzI1MTA=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20help%20needed", "name": "state: help needed", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-05-25T01:35:16Z", "updated_at": "2016-05-28T10:15:16Z", "closed_at": "2016-05-28T10:15:16Z", "author_association": "NONE", "body": "Is there any way to get which UTF encoding the JSON document is using ? \nThanks in advance\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/250", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/250/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/250/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/250/events", "html_url": "https://github.com/nlohmann/json/issues/250", "id": 156372335, "node_id": "MDU6SXNzdWUxNTYzNzIzMzU=", "number": 250, "title": "Unable to build example for constructing json object with stringstreams", "user": {"login": "RElesgoe", "id": 1463845, "node_id": "MDQ6VXNlcjE0NjM4NDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1463845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RElesgoe", "html_url": "https://github.com/RElesgoe", "followers_url": "https://api.github.com/users/RElesgoe/followers", "following_url": "https://api.github.com/users/RElesgoe/following{/other_user}", "gists_url": "https://api.github.com/users/RElesgoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/RElesgoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RElesgoe/subscriptions", "organizations_url": "https://api.github.com/users/RElesgoe/orgs", "repos_url": "https://api.github.com/users/RElesgoe/repos", "events_url": "https://api.github.com/users/RElesgoe/events{/privacy}", "received_events_url": "https://api.github.com/users/RElesgoe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}, {"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-23T21:36:11Z", "updated_at": "2016-05-24T06:58:53Z", "closed_at": "2016-05-24T06:58:53Z", "author_association": "NONE", "body": "http://nlohmann.github.io/json/classnlohmann_1_1basic__json_a9857835334d38ba04959e348ca6be208.html#a9857835334d38ba04959e348ca6be208\n- Visual Studio 2015 Update 2\n- JSON for Modern C++ 1.1.0\n\nCompiler errors:\n\n```\njsonstream\\main.cpp(32): error C2664: 'nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,double,std::allocator>::basic_json(nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,double,std::allocator> &&) noexcept': cannot convert argument 1 from 'std::stringstream' to 'const nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,double,std::allocator>::value_t'\n         jsonstream\\jsonstream\\main.cpp(32): note: No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called\n\njsonstream\\main.cpp(55): error C2664: 'nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,double,std::allocator>::basic_json(nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,double,std::allocator> &&) noexcept': cannot convert argument 1 from 'std::stringstream' to 'std::initializer_list<nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,double,std::allocator>>'\n         jsonstream\\jsonstream\\main.cpp(55): note: No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called\n```\n\nAlso unable to pass a `std::ifstream` object as well.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/249", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/249/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/249/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/249/events", "html_url": "https://github.com/nlohmann/json/issues/249", "id": 156159760, "node_id": "MDU6SXNzdWUxNTYxNTk3NjA=", "number": 249, "title": "Hexadecimal support", "user": {"login": "TheAifam5", "id": 2192274, "node_id": "MDQ6VXNlcjIxOTIyNzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2192274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheAifam5", "html_url": "https://github.com/TheAifam5", "followers_url": "https://api.github.com/users/TheAifam5/followers", "following_url": "https://api.github.com/users/TheAifam5/following{/other_user}", "gists_url": "https://api.github.com/users/TheAifam5/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheAifam5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheAifam5/subscriptions", "organizations_url": "https://api.github.com/users/TheAifam5/orgs", "repos_url": "https://api.github.com/users/TheAifam5/repos", "events_url": "https://api.github.com/users/TheAifam5/events{/privacy}", "received_events_url": "https://api.github.com/users/TheAifam5/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-05-22T16:20:03Z", "updated_at": "2016-11-13T22:37:59Z", "closed_at": "2016-05-22T16:59:35Z", "author_association": "NONE", "body": "Hi,\nWould be really nice to add hexadecimal support.\n\nExample:\n`\n{\n    \"test1\": 0x1,\n    \"test2\": [0x2, 0x3]\n}\n`\n\nRegards TheAifam5.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/248", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/248/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/248/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/248/events", "html_url": "https://github.com/nlohmann/json/issues/248", "id": 156086960, "node_id": "MDU6SXNzdWUxNTYwODY5NjA=", "number": 248, "title": "Readme documentation enhancements", "user": {"login": "spiderkeys", "id": 859469, "node_id": "MDQ6VXNlcjg1OTQ2OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/859469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spiderkeys", "html_url": "https://github.com/spiderkeys", "followers_url": "https://api.github.com/users/spiderkeys/followers", "following_url": "https://api.github.com/users/spiderkeys/following{/other_user}", "gists_url": "https://api.github.com/users/spiderkeys/gists{/gist_id}", "starred_url": "https://api.github.com/users/spiderkeys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spiderkeys/subscriptions", "organizations_url": "https://api.github.com/users/spiderkeys/orgs", "repos_url": "https://api.github.com/users/spiderkeys/repos", "events_url": "https://api.github.com/users/spiderkeys/events{/privacy}", "received_events_url": "https://api.github.com/users/spiderkeys/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-05-21T06:23:54Z", "updated_at": "2017-03-28T21:57:18Z", "closed_at": "2017-03-28T21:57:18Z", "author_association": "NONE", "body": "I heavily use this library in one of my projects (thanks for the great work!), and have become pretty familiar with a lot of its ins and outs, but I had to figure out some of the usage and default behaviours by reading through the source and test cases (the tests are great when it comes to documentation!). I think it might be helpful for a few things to be more explicit in the readme to help newcomers. The intent of this issue is to serve as a tracker for things to add to the readme. I know that these generally exist in doc/index.md, but it can be a bit cryptic and hard to find. Eventually, I will get around to adding them myself and submitting pull requests, but maybe someone else will get to it before me or otherwise demonstrate the lack of need :smile: \n\nTopics\n- [ ] Default constructor and assignment behaviours and examples (move vs copy)\n- [ ] Differences between accessors ([] accessor will add items if they don't exist, .at() will throw)\n- [ ] Section on the various exceptions in general\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/247", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/247/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/247/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/247/events", "html_url": "https://github.com/nlohmann/json/pull/247", "id": 155472982, "node_id": "MDExOlB1bGxSZXF1ZXN0NzA1MDc0NDk=", "number": 247, "title": "Define CMake/CTest tests", "user": {"login": "robertmrk", "id": 7045469, "node_id": "MDQ6VXNlcjcwNDU0Njk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7045469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robertmrk", "html_url": "https://github.com/robertmrk", "followers_url": "https://api.github.com/users/robertmrk/followers", "following_url": "https://api.github.com/users/robertmrk/following{/other_user}", "gists_url": "https://api.github.com/users/robertmrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/robertmrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robertmrk/subscriptions", "organizations_url": "https://api.github.com/users/robertmrk/orgs", "repos_url": "https://api.github.com/users/robertmrk/repos", "events_url": "https://api.github.com/users/robertmrk/events{/privacy}", "received_events_url": "https://api.github.com/users/robertmrk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/3", "html_url": "https://github.com/nlohmann/json/milestone/3", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/3/labels", "id": 1510937, "node_id": "MDk6TWlsZXN0b25lMTUxMDkzNw==", "number": 3, "title": "Release 2.0.0", "description": "This release adds several features such as JSON Pointers, JSON Patch, or support for 64 bit unsigned integers. Furthermore, several (subtle) bugs have been fixed.\r\n\r\nAs `noexcept` and `constexpr` specifier have been added to several functions, the public API has effectively been changed in a (potential) non-backwards compatible manner. As we adhere to [Semantic Versioning](http://semver.org), this calls for a new major version, so say hello to 2\ufe0f\u20e3.0\ufe0f\u20e3.0\ufe0f\u20e3.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 34, "state": "closed", "created_at": "2016-01-17T12:14:39Z", "updated_at": "2016-06-23T22:53:19Z", "due_on": "2016-06-23T07:00:00Z", "closed_at": "2016-06-23T22:53:19Z"}, "comments": 3, "created_at": "2016-05-18T10:58:09Z", "updated_at": "2016-05-19T07:42:42Z", "closed_at": "2016-05-18T20:20:46Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/247", "html_url": "https://github.com/nlohmann/json/pull/247", "diff_url": "https://github.com/nlohmann/json/pull/247.diff", "patch_url": "https://github.com/nlohmann/json/pull/247.patch"}, "body": "In #241 @ChrisKitching described that tests on out of source builds fail because the test executable can't find the JSON files it needs. It's great that he noticed this and provided a fix for it, I totally missed this issue when I rewrote the CMake lists file.\nIn #242 the issue is fixed by installing the test executable and test files. There are two problems with this approach:\n1. The test executable is used only once by the users of the library. It's executed only after a successful build and never used again, so there is no need to install it on the system level.\n2. For executing the tests in out of source builds we don't need to copy any files at all. In CMake we can define tests with the source directory as their working directory, so tests will be able to find the JSON files no matter where the project is built.\n\nIn this PR I defined two CMake/CTest test configurations. \n- `json_unit_default` for running the default tests by executing\n  `json_unit` without any arguments\n- `json_unit_all` for running all the tests by executing `json_unit`\n  with the `\"*\"` argument\n\nSo the tests can be now executed by building the `test` target:\n\n```\nmake test\n```\n\nor by running `ctest` in the build directory.\n\nThe tests can be selectively executed as well with `ctest`:\n\n```\nctest -R json_unit_default\n```\n\nor\n\n```\nctest -R json_unit_all\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/246", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/246/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/246/events", "html_url": "https://github.com/nlohmann/json/issues/246", "id": 155444069, "node_id": "MDU6SXNzdWUxNTU0NDQwNjk=", "number": 246, "title": "Update long-term goals", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/3", "html_url": "https://github.com/nlohmann/json/milestone/3", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/3/labels", "id": 1510937, "node_id": "MDk6TWlsZXN0b25lMTUxMDkzNw==", "number": 3, "title": "Release 2.0.0", "description": "This release adds several features such as JSON Pointers, JSON Patch, or support for 64 bit unsigned integers. Furthermore, several (subtle) bugs have been fixed.\r\n\r\nAs `noexcept` and `constexpr` specifier have been added to several functions, the public API has effectively been changed in a (potential) non-backwards compatible manner. As we adhere to [Semantic Versioning](http://semver.org), this calls for a new major version, so say hello to 2\ufe0f\u20e3.0\ufe0f\u20e3.0\ufe0f\u20e3.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 34, "state": "closed", "created_at": "2016-01-17T12:14:39Z", "updated_at": "2016-06-23T22:53:19Z", "due_on": "2016-06-23T07:00:00Z", "closed_at": "2016-06-23T22:53:19Z"}, "comments": 5, "created_at": "2016-05-18T08:29:23Z", "updated_at": "2016-05-18T20:23:55Z", "closed_at": "2016-05-18T20:17:14Z", "author_association": "OWNER", "body": "File https://github.com/nlohmann/json/blob/develop/.github/CONTRIBUTING.md#wanted is not up to date any more (locale-indepence is achieved, MSVC works, and Travis now also checks OSX).\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/245", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/245/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/245/events", "html_url": "https://github.com/nlohmann/json/issues/245", "id": 155410046, "node_id": "MDU6SXNzdWUxNTU0MTAwNDY=", "number": 245, "title": "Contribution To This Json Project", "user": {"login": "pawandeep2155", "id": 7972666, "node_id": "MDQ6VXNlcjc5NzI2NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7972666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pawandeep2155", "html_url": "https://github.com/pawandeep2155", "followers_url": "https://api.github.com/users/pawandeep2155/followers", "following_url": "https://api.github.com/users/pawandeep2155/following{/other_user}", "gists_url": "https://api.github.com/users/pawandeep2155/gists{/gist_id}", "starred_url": "https://api.github.com/users/pawandeep2155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pawandeep2155/subscriptions", "organizations_url": "https://api.github.com/users/pawandeep2155/orgs", "repos_url": "https://api.github.com/users/pawandeep2155/repos", "events_url": "https://api.github.com/users/pawandeep2155/events{/privacy}", "received_events_url": "https://api.github.com/users/pawandeep2155/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-05-18T03:35:21Z", "updated_at": "2016-05-27T05:02:49Z", "closed_at": "2016-05-27T05:02:49Z", "author_association": "NONE", "body": "Hello,\nI want to contribute to this project and improve my coding skills. I am a beginner-intermediate level programmer. Can anyone please guide me from where to start in order to contribute this project. \nThank You\nPawandeep Singh\n"}]