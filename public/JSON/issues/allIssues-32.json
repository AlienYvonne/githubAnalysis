[{"url": "https://api.github.com/repos/nlohmann/json/issues/244", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/244/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/244/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/244/events", "html_url": "https://github.com/nlohmann/json/issues/244", "id": 154766531, "node_id": "MDU6SXNzdWUxNTQ3NjY1MzE=", "number": 244, "title": "Use user-defined exceptions", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 13, "created_at": "2016-05-13T17:51:29Z", "updated_at": "2017-03-12T20:00:58Z", "closed_at": "2017-03-12T20:00:52Z", "author_association": "OWNER", "body": "After a small [survey on Reddit](https://www.reddit.com/r/cpp/comments/4izaxc/exception_design_use_default_exceptions_or/) it seems to be a good idea to replace the standard exceptions used in the library right now with user-defined exceptions.\n\nThe motivations for this are:\n- Better differentiation between exceptions raised by the STL and those raised by the JSON library.\n- Clearer semantics of the exceptions rather and the possibility of better diagnosis and documentation.\n\nIn the course of this ticket, the list of currently used exceptions need to be classified into user-defined exception classes:\n\n``` cpp\nthrow std::domain_error(\"JSON pointer has no parent\");\nthrow std::domain_error(\"JSON pointer must be empty or begin with '/'\");\nthrow std::domain_error(\"array index must not begin with '0'\");\nthrow std::domain_error(\"cannot compare iterators of different containers\");\nthrow std::domain_error(\"cannot compare order of object iterators\");\nthrow std::domain_error(\"cannot create object from initializer list\");\nthrow std::domain_error(\"cannot use at() with \" + type_name());\nthrow std::domain_error(\"cannot use construct with iterators from \" + first.m_object->type_name());\nthrow std::domain_error(\"cannot use erase() with \" + type_name());\nthrow std::domain_error(\"cannot use insert() with \" + type_name());\nthrow std::domain_error(\"cannot use key() for non-object iterators\");\nthrow std::domain_error(\"cannot use offsets with object iterators\");\nthrow std::domain_error(\"cannot use operator[] for object iterators\");\nthrow std::domain_error(\"cannot use operator[] with \" + type_name());\nthrow std::domain_error(\"cannot use push_back() with \" + type_name());\nthrow std::domain_error(\"cannot use swap() with \" + type_name());\nthrow std::domain_error(\"cannot use value() with \" + type_name());\nthrow std::domain_error(\"escape error: '~' must be followed with '0' or '1'\");\nthrow std::domain_error(\"incompatible ReferenceType for get_ref, actual type is \" +\nthrow std::domain_error(\"invalid value to unflatten\");\nthrow std::domain_error(\"iterator does not fit current value\");\nthrow std::domain_error(\"iterators are not compatible\");\nthrow std::domain_error(\"iterators do not fit current value\");\nthrow std::domain_error(\"iterators do not fit\");\nthrow std::domain_error(\"only objects can be unflattened\");\nthrow std::domain_error(\"passed iterators may not belong to container\");\nthrow std::domain_error(\"type must be array, but is \" + type_name());\nthrow std::domain_error(\"type must be number, but is \" + type_name());\nthrow std::domain_error(\"type must be object, but is \" + type_name());\nthrow std::domain_error(\"type must be string, but is \" + type_name());\nthrow std::domain_error(\"unsuccessful: \" + val.dump());\nthrow std::domain_error(\"values in object must be primitive\");\nthrow std::invalid_argument(\"JSON patch must be an array of objects\");\nthrow std::invalid_argument(\"missing low surrogate\");\nthrow std::invalid_argument(\"missing or wrong low surrogate\");\nthrow std::invalid_argument(\"operation value '\" + op + \"' is invalid\");\nthrow std::invalid_argument(error_msg + \" must have member '\" + member + \"'\");\nthrow std::invalid_argument(error_msg + \" must have string member '\" + member + \"'\");\nthrow std::invalid_argument(error_msg);\nthrow std::out_of_range(\"array index \" + std::to_string(idx) + \" is out of range\");\nthrow std::out_of_range(\"array index '-' (\" +\nthrow std::out_of_range(\"cannot get value\");\nthrow std::out_of_range(\"code points above 0x10FFFF are invalid\");\nthrow std::out_of_range(\"iterator out of range\");\nthrow std::out_of_range(\"iterators out of range\");\nthrow std::out_of_range(\"key '\" + key + \"' not found\");\nthrow std::out_of_range(\"key '\" + last_path + \"' not found\");\nthrow std::out_of_range(\"unresolved reference token '\" + reference_token + \"'\");\n```\n\nFurthermore, STL exceptions need to be caught and rethrown as user-defined exception in several cases.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/243", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/243/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/243/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/243/events", "html_url": "https://github.com/nlohmann/json/issues/243", "id": 154138436, "node_id": "MDU6SXNzdWUxNTQxMzg0MzY=", "number": 243, "title": "Trouble using parser with initial dictionary", "user": {"login": "calkinssean", "id": 16980880, "node_id": "MDQ6VXNlcjE2OTgwODgw", "avatar_url": "https://avatars0.githubusercontent.com/u/16980880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calkinssean", "html_url": "https://github.com/calkinssean", "followers_url": "https://api.github.com/users/calkinssean/followers", "following_url": "https://api.github.com/users/calkinssean/following{/other_user}", "gists_url": "https://api.github.com/users/calkinssean/gists{/gist_id}", "starred_url": "https://api.github.com/users/calkinssean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calkinssean/subscriptions", "organizations_url": "https://api.github.com/users/calkinssean/orgs", "repos_url": "https://api.github.com/users/calkinssean/repos", "events_url": "https://api.github.com/users/calkinssean/events{/privacy}", "received_events_url": "https://api.github.com/users/calkinssean/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-05-11T00:53:57Z", "updated_at": "2016-05-11T16:39:30Z", "closed_at": "2016-05-11T16:39:30Z", "author_association": "NONE", "body": "Hey guys, I'm trying to use this parser along with OneSignal (push notifications) and I'm having a little trouble. It doesn't help that I'm completely new to C++ but I was wondering if you could give me a little point in the right direction. The data I'm trying to parse looks like this: \n{\n   \"coinsAdded\": \"10\",\n   \"sound\": \"default\",\n   \"title\": \"test\"\n}\nand it's in a const char\\* called additionalData.\nAny help you guys could give would be awesome.\nThanks, and great work!\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/242", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/242/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/242/events", "html_url": "https://github.com/nlohmann/json/pull/242", "id": 154137876, "node_id": "MDExOlB1bGxSZXF1ZXN0Njk2MDAyNzY=", "number": 242, "title": "Out of tree builds and a few other miscellaneous CMake cleanups.", "user": {"login": "ChrisKitching", "id": 3526849, "node_id": "MDQ6VXNlcjM1MjY4NDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3526849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisKitching", "html_url": "https://github.com/ChrisKitching", "followers_url": "https://api.github.com/users/ChrisKitching/followers", "following_url": "https://api.github.com/users/ChrisKitching/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisKitching/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisKitching/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisKitching/subscriptions", "organizations_url": "https://api.github.com/users/ChrisKitching/orgs", "repos_url": "https://api.github.com/users/ChrisKitching/repos", "events_url": "https://api.github.com/users/ChrisKitching/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisKitching/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2016-05-11T00:47:42Z", "updated_at": "2016-05-11T18:52:53Z", "closed_at": "2016-05-11T18:52:45Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/242", "html_url": "https://github.com/nlohmann/json/pull/242", "diff_url": "https://github.com/nlohmann/json/pull/242.diff", "patch_url": "https://github.com/nlohmann/json/pull/242.patch"}, "body": "Addresses the stuff I raised in #241. Hopefully this isn't too invasive for you...\n\nI'll attempt to find some time to do more cleanup in the coming days.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/241", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/241/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/241/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/241/events", "html_url": "https://github.com/nlohmann/json/issues/241", "id": 153661464, "node_id": "MDU6SXNzdWUxNTM2NjE0NjQ=", "number": 241, "title": "Unit test fails when doing a CMake out-of-tree build", "user": {"login": "ChrisKitching", "id": 3526849, "node_id": "MDQ6VXNlcjM1MjY4NDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3526849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisKitching", "html_url": "https://github.com/ChrisKitching", "followers_url": "https://api.github.com/users/ChrisKitching/followers", "following_url": "https://api.github.com/users/ChrisKitching/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisKitching/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisKitching/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisKitching/subscriptions", "organizations_url": "https://api.github.com/users/ChrisKitching/orgs", "repos_url": "https://api.github.com/users/ChrisKitching/repos", "events_url": "https://api.github.com/users/ChrisKitching/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisKitching/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/3", "html_url": "https://github.com/nlohmann/json/milestone/3", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/3/labels", "id": 1510937, "node_id": "MDk6TWlsZXN0b25lMTUxMDkzNw==", "number": 3, "title": "Release 2.0.0", "description": "This release adds several features such as JSON Pointers, JSON Patch, or support for 64 bit unsigned integers. Furthermore, several (subtle) bugs have been fixed.\r\n\r\nAs `noexcept` and `constexpr` specifier have been added to several functions, the public API has effectively been changed in a (potential) non-backwards compatible manner. As we adhere to [Semantic Versioning](http://semver.org), this calls for a new major version, so say hello to 2\ufe0f\u20e3.0\ufe0f\u20e3.0\ufe0f\u20e3.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 34, "state": "closed", "created_at": "2016-01-17T12:14:39Z", "updated_at": "2016-06-23T22:53:19Z", "due_on": "2016-06-23T07:00:00Z", "closed_at": "2016-06-23T22:53:19Z"}, "comments": 3, "created_at": "2016-05-08T15:24:24Z", "updated_at": "2016-11-13T22:37:59Z", "closed_at": "2016-05-11T18:52:46Z", "author_association": "CONTRIBUTOR", "body": "This occurs because it looks for the test data in paths relative to the source tree. Since the test target is not installed, and the test data is not present in the build tree, this fails.\n\nI would suggest making a CMake build option to allow turning off the unit tests, and then making the test data and test binary be installed to the install tree in the conventional way. In-tree builds are, after all, discouraged.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/240", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/240/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/240/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/240/events", "html_url": "https://github.com/nlohmann/json/pull/240", "id": 151983880, "node_id": "MDExOlB1bGxSZXF1ZXN0Njg0NDQ2MzA=", "number": 240, "title": "Patch to fix Issue #230", "user": {"login": "Kamtron", "id": 3418448, "node_id": "MDQ6VXNlcjM0MTg0NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3418448?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kamtron", "html_url": "https://github.com/Kamtron", "followers_url": "https://api.github.com/users/Kamtron/followers", "following_url": "https://api.github.com/users/Kamtron/following{/other_user}", "gists_url": "https://api.github.com/users/Kamtron/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kamtron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kamtron/subscriptions", "organizations_url": "https://api.github.com/users/Kamtron/orgs", "repos_url": "https://api.github.com/users/Kamtron/repos", "events_url": "https://api.github.com/users/Kamtron/events{/privacy}", "received_events_url": "https://api.github.com/users/Kamtron/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-04-29T22:50:11Z", "updated_at": "2016-06-19T15:55:37Z", "closed_at": "2016-06-19T15:55:37Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/240", "html_url": "https://github.com/nlohmann/json/pull/240", "diff_url": "https://github.com/nlohmann/json/pull/240.diff", "patch_url": "https://github.com/nlohmann/json/pull/240.patch"}, "body": "## Files to change\n\nThere are currently two files which need to be edited:\n1. [`src/json.hpp.re2c`](https://github.com/nlohmann/json/blob/master/src/json.hpp.re2c) (note the `.re2c` suffix) - This file contains a comment section which describes the JSON lexic. This section is translated by [`re2c`](http://re2c.org) into file [`src/json.hpp`](https://github.com/nlohmann/json/blob/master/src/json.hpp) which is plain \"vanilla\" C++11 code. (In fact, the generated lexer consists of some hundred lines of `goto`s, which is a hint you never want to edit this file...).\n   \n   If you only edit file `src/json.hpp` (without the `.re2c` suffix), your changes will be overwritten as soon as the lexer is touched again. To generate the `src/json.hpp` file which is actually used during compilation of the tests and all other code, please execute\n   \n   ``` sh\n   make re2c\n   ```\n   \n   To run [`re2c`](http://re2c.org) and generate/overwrite file `src/json.hpp` with your changes in file `src/json.hpp.re2c`.\n2. [`test/unit.cpp`](https://github.com/nlohmann/json/blob/master/test/unit.cpp) - This contains the [Catch](https://github.com/philsquared/Catch) unit tests which currently cover [100 %](https://coveralls.io/github/nlohmann/json) of the library's code.\n   \n   If you add or change a feature, please also add a unit test to this file. The unit tests can be compiled with\n   \n   ``` sh\n   make\n   ```\n   \n   and can be executed with\n   \n   ``` sh\n   ./json_unit\n   ```\n   \n   The test cases are also executed with several different compilers on [Travis](https://travis-ci.org/nlohmann/json) once you open a pull request.\n\nPlease understand that I cannot accept pull requests changing only file `src/json.hpp`.\n## Note\n- If you open a pull request, the code will be automatically tested with [Valgrind](http://valgrind.org)'s Memcheck tool to detect memory leaks. Please be aware that the execution with Valgrind _may_ in rare cases yield different behavior than running the code directly. This can result in failing unit tests which run successfully without Valgrind.\n## Please don't\n- Only make changes to file `src/json.hpp` -- please read the paragraph above and understand why `src/json.hpp.re2c` exists.\n- The C++11 support varies between different **compilers** and versions. Please note the [list of supported compilers](https://github.com/nlohmann/json/blob/master/README.md#supported-compilers). Some compilers like GCC 4.8 (and earlier), Clang 3.3 (and earlier), or Microsoft Visual Studio 13.0 and earlier are known not to work due to missing or incomplete C++11 support. Please refrain from proposing changes that work around these compiler's limitations with `#ifdef`s or other means.\n- Specifically, I am aware of compilation problems with **Microsoft Visual Studio** (there even is an [issue label](https://github.com/nlohmann/json/issues?utf8=\u2713&q=label%3A%22visual+studio%22+) for these kind of bugs). I understand that even in 2016, complete C++11 support isn't there yet. But please also understand that I do not want to drop features or uglify the code just to make Microsoft's sub-standard compiler happy. The past has shown that there are ways to express the functionality such that the code compiles with the most recent MSVC - unfortunately, this is not the main objective of the project.\n- Please refrain from proposing changes that would **break [JSON](http://json.org) conformance**. If you propose a conformant extension of JSON to be supported by the library, please motivate this extension.\n- Please do not open pull requests that address **multiple issues**.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/239", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/239/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/239/events", "html_url": "https://github.com/nlohmann/json/issues/239", "id": 151645583, "node_id": "MDU6SXNzdWUxNTE2NDU1ODM=", "number": 239, "title": "-Wconversion warnings", "user": {"login": "Aykelith", "id": 2557410, "node_id": "MDQ6VXNlcjI1NTc0MTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2557410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aykelith", "html_url": "https://github.com/Aykelith", "followers_url": "https://api.github.com/users/Aykelith/followers", "following_url": "https://api.github.com/users/Aykelith/following{/other_user}", "gists_url": "https://api.github.com/users/Aykelith/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aykelith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aykelith/subscriptions", "organizations_url": "https://api.github.com/users/Aykelith/orgs", "repos_url": "https://api.github.com/users/Aykelith/repos", "events_url": "https://api.github.com/users/Aykelith/events{/privacy}", "received_events_url": "https://api.github.com/users/Aykelith/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/3", "html_url": "https://github.com/nlohmann/json/milestone/3", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/3/labels", "id": 1510937, "node_id": "MDk6TWlsZXN0b25lMTUxMDkzNw==", "number": 3, "title": "Release 2.0.0", "description": "This release adds several features such as JSON Pointers, JSON Patch, or support for 64 bit unsigned integers. Furthermore, several (subtle) bugs have been fixed.\r\n\r\nAs `noexcept` and `constexpr` specifier have been added to several functions, the public API has effectively been changed in a (potential) non-backwards compatible manner. As we adhere to [Semantic Versioning](http://semver.org), this calls for a new major version, so say hello to 2\ufe0f\u20e3.0\ufe0f\u20e3.0\ufe0f\u20e3.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 34, "state": "closed", "created_at": "2016-01-17T12:14:39Z", "updated_at": "2016-06-23T22:53:19Z", "due_on": "2016-06-23T07:00:00Z", "closed_at": "2016-06-23T22:53:19Z"}, "comments": 7, "created_at": "2016-04-28T13:46:39Z", "updated_at": "2016-05-11T15:27:13Z", "closed_at": "2016-05-11T15:27:13Z", "author_association": "NONE", "body": "I'm using `g++ (i686-posix-dwarf-rev0, Built by MinGW-W64 project) 5.3.0` and `g++ (i686-posix-dwarf-rev1, Built by MinGW-W64 project) 4.9.2` and I'm getting this:\n\n> In file included from ..\\path\\StateMachine.cpp:3:0:\n> ../path/json/json.hpp: In instantiation of 'nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::type_data_t& nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::type_data_t::operator=(nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::value_t) [with ObjectType = std::map; ArrayType = std::vector; StringType = std::basic_string<char>; BooleanType = bool; NumberIntegerType = long long int; NumberUnsignedType = long long unsigned int; NumberFloatType = double; AllocatorType = std::allocator]':\n> ../path/json/json.hpp:2037:22:   required from 'nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::basic_json(nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>&&) [with ObjectType = std::map; ArrayType = std::vector; StringType = std::basic_string<char>; BooleanType = bool; NumberIntegerType = long long int; NumberUnsignedType = long long unsigned int; NumberFloatType = double; AllocatorType = std::allocator]'\n> ../path/json/json.hpp:9568:98:   required from here\n> ../path/json/json.hpp:760:23: warning: conversion to 'unsigned char:4' from 'uint16_t {aka short unsigned int}' may alter its value [-Wconversion]\n>              bits.type = static_cast<uint16_t>(rhs);\n>                        ^\n> In file included from ..\\path\\StateMachine.cpp:3:0:\n> ../path/json/json.hpp: In instantiation of 'nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::escape_string(const string_t&)::<lambda(char)> [with ObjectType = std::map; ArrayType = std::vector; StringType = std::basic_string<char>; BooleanType = bool; NumberIntegerType = long long int; NumberUnsignedType = long long unsigned int; NumberFloatType = double; AllocatorType = std::allocator]':\n> ../path/json/json.hpp:6081:40:   required from 'struct nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::escape_string(const string_t&) [with ObjectType = std::map; ArrayType = std::vector; StringType = std::basic_string<char>; BooleanType = bool; NumberIntegerType = long long int; NumberUnsignedType = long long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::string_t = std::basic_string<char>]::<lambda(char)>'\n> ../path/json/json.hpp:6084:25:   required from 'static nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::string_t nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::escape_string(const string_t&) [with ObjectType = std::map; ArrayType = std::vector; StringType = std::basic_string<char>; BooleanType = bool; NumberIntegerType = long long int; NumberUnsignedType = long long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::string_t = std::basic_string<char>]'\n> ../path/json/json.hpp:6162:48:   required from 'void nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::dump(std::ostream&, bool, unsigned int, unsigned int) const [with ObjectType = std::map; ArrayType = std::vector; StringType = std::basic_string<char>; BooleanType = bool; NumberIntegerType = long long int; NumberUnsignedType = long long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; std::ostream = std::basic_ostream<char>]'\n> ../path/json/json.hpp:2167:61:   required from 'nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::string_t nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::dump(int) const [with ObjectType = std::map; ArrayType = std::vector; StringType = std::basic_string<char>; BooleanType = bool; NumberIntegerType = long long int; NumberUnsignedType = long long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::string_t = std::basic_string<char>]'\n> ../path/json/json.hpp:9549:25:   required from here\n> ../path/json/json.hpp:6083:72: warning: conversion to 'char' from 'int' may alter its value [-Wconversion]\n>                              return (v < 10) ? ('0' + v) : ('a' + v - 10);\n>                                                                         ^\n> ../path/json/json.hpp:6083:72: warning: conversion to 'char' from 'int' may alter its value [-Wconversion]\n> ../path/json/json.hpp: In instantiation of 'static nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::string_t nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::escape_string(const string_t&) [with ObjectType = std::map; ArrayType = std::vector; StringType = std::basic_string<char>; BooleanType = bool; NumberIntegerType = long long int; NumberUnsignedType = long long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::string_t = std::basic_string<char>]':\n> ../path/json/json.hpp:6162:48:   required from 'void nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::dump(std::ostream&, bool, unsigned int, unsigned int) const [with ObjectType = std::map; ArrayType = std::vector; StringType = std::basic_string<char>; BooleanType = bool; NumberIntegerType = long long int; NumberUnsignedType = long long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; std::ostream = std::basic_ostream<char>]'\n> ../path/json/json.hpp:2167:61:   required from 'nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::string_t nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::dump(int) const [with ObjectType = std::map; ArrayType = std::vector; StringType = std::basic_string<char>; BooleanType = bool; NumberIntegerType = long long int; NumberUnsignedType = long long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::string_t = std::basic_string<char>]'\n> ../path/json/json.hpp:9549:25:   required from here\n> ../path/json/json.hpp:6088:51: warning: conversion to 'char' from 'int' may alter its value [-Wconversion]\n>                      { 'u', '0', '0', hexify(c >> 4), hexify(c & 0x0f)\n>                                                    ^\n> In file included from ..\\path\\StateMachine.cpp:3:0:\n> ../path/json/json.hpp: In instantiation of 'nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::type_data_t::type_data_t(nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::value_t) [with ObjectType = std::map; ArrayType = std::vector; StringType = std::basic_string<char>; BooleanType = bool; NumberIntegerType = long long int; NumberUnsignedType = long long unsigned int; NumberFloatType = double; AllocatorType = std::allocator]':\n> ../path/json/json.hpp:1060:5:   required from 'nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType> nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::parser::parse() [with ObjectType = std::map; ArrayType = std::vector; StringType = std::basic_string<char>; BooleanType = bool; NumberIntegerType = long long int; NumberUnsignedType = long long unsigned int; NumberFloatType = double; AllocatorType = std::allocator]'\n> ../path/json/json.hpp:5837:36:   required from 'static nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType> nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::parse(const string_t&, nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::parser_callback_t) [with ObjectType = std::map; ArrayType = std::vector; StringType = std::basic_string<char>; BooleanType = bool; NumberIntegerType = long long int; NumberUnsignedType = long long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::string_t = std::basic_string<char>; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::parser_callback_t = std::function<bool(int, nlohmann::basic_json<>::parse_event_t, nlohmann::basic_json<>&)>]'\n> ../path/json/json.hpp:9568:98:   required from here\n> ../path/json/json.hpp:768:23: warning: conversion to 'unsigned char:4' from 'uint16_t {aka short unsigned int}' may alter its value [-Wconversion]\n>              bits.type = static_cast<uint16_t>(t);\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/238", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/238/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/238/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/238/events", "html_url": "https://github.com/nlohmann/json/pull/238", "id": 150842702, "node_id": "MDExOlB1bGxSZXF1ZXN0Njc3MTE0NjE=", "number": 238, "title": "Implement additional integration options", "user": {"login": "robertmrk", "id": 7045469, "node_id": "MDQ6VXNlcjcwNDU0Njk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7045469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robertmrk", "html_url": "https://github.com/robertmrk", "followers_url": "https://api.github.com/users/robertmrk/followers", "following_url": "https://api.github.com/users/robertmrk/following{/other_user}", "gists_url": "https://api.github.com/users/robertmrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/robertmrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robertmrk/subscriptions", "organizations_url": "https://api.github.com/users/robertmrk/orgs", "repos_url": "https://api.github.com/users/robertmrk/repos", "events_url": "https://api.github.com/users/robertmrk/events{/privacy}", "received_events_url": "https://api.github.com/users/robertmrk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-25T12:31:56Z", "updated_at": "2016-04-26T18:31:55Z", "closed_at": "2016-04-26T18:31:19Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/238", "html_url": "https://github.com/nlohmann/json/pull/238", "diff_url": "https://github.com/nlohmann/json/pull/238.diff", "patch_url": "https://github.com/nlohmann/json/pull/238.patch"}, "body": "This PR contains the implementation of the changes suggested in #237.\nThe listfile is quite different then it was. The required c++ standard is now specified as a target property for the `json_unit` executable which is more portable, and compiler flags and definitions are also specified using target properties using generator expressions instead of variables, but they result in the same compiler flags.\nThe only longterm change that this PR brings is that from now on the version number of the library must be changed in the listfile as well when a new release is published so CMake can generate the appropriate config version file for the package when it's installed.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/237", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/237/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/237/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/237/events", "html_url": "https://github.com/nlohmann/json/issues/237", "id": 150838245, "node_id": "MDU6SXNzdWUxNTA4MzgyNDU=", "number": 237, "title": "Additional integration options", "user": {"login": "robertmrk", "id": 7045469, "node_id": "MDQ6VXNlcjcwNDU0Njk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7045469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robertmrk", "html_url": "https://github.com/robertmrk", "followers_url": "https://api.github.com/users/robertmrk/followers", "following_url": "https://api.github.com/users/robertmrk/following{/other_user}", "gists_url": "https://api.github.com/users/robertmrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/robertmrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robertmrk/subscriptions", "organizations_url": "https://api.github.com/users/robertmrk/orgs", "repos_url": "https://api.github.com/users/robertmrk/repos", "events_url": "https://api.github.com/users/robertmrk/events{/privacy}", "received_events_url": "https://api.github.com/users/robertmrk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/3", "html_url": "https://github.com/nlohmann/json/milestone/3", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/3/labels", "id": 1510937, "node_id": "MDk6TWlsZXN0b25lMTUxMDkzNw==", "number": 3, "title": "Release 2.0.0", "description": "This release adds several features such as JSON Pointers, JSON Patch, or support for 64 bit unsigned integers. Furthermore, several (subtle) bugs have been fixed.\r\n\r\nAs `noexcept` and `constexpr` specifier have been added to several functions, the public API has effectively been changed in a (potential) non-backwards compatible manner. As we adhere to [Semantic Versioning](http://semver.org), this calls for a new major version, so say hello to 2\ufe0f\u20e3.0\ufe0f\u20e3.0\ufe0f\u20e3.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 34, "state": "closed", "created_at": "2016-01-17T12:14:39Z", "updated_at": "2016-06-23T22:53:19Z", "due_on": "2016-06-23T07:00:00Z", "closed_at": "2016-06-23T22:53:19Z"}, "comments": 3, "created_at": "2016-04-25T12:12:55Z", "updated_at": "2017-02-11T14:21:52Z", "closed_at": "2016-04-26T18:32:07Z", "author_association": "CONTRIBUTOR", "body": "At the moment the only way to integrate the library into a client project is to add the `json.hpp` file to the source tree of the project. In some use cases that might not be the ideal solution.\nFor instance I'm working on a JSON processing library that uses the nlohmann/json library not only internally but in it's API as well. So client applications which would wan't to use the library would either have to use the `json.hpp` file supplied by the JSON processing library, which is awkward, or if they are already using the `json.hpp` file they can create and pass `json` variables to the library which can cause unpredictable problems if the version of the `json.hpp` file used by the client application and the JSON processing library differs.\nFortunately, CMake has a solution to the above problems. \nWith a few lines of CMake code we can create an [interface library](https://cmake.org/cmake/help/v3.0/manual/cmake-buildsystem.7.html#interface-libraries) (a library target that doesn't generates any output, but it can be used to store usage requirements, which in our case would be the include directory of the `json.hpp` file) and export it. This way by including the nlohmann/json library into the client application with `add_subdirectory`, all targets would be able to find and use the library with the `find_package` command.\n\n``` CMake\nfind_package(json)\nadd_executable(json-client ...) #or add_library(json-client ...)\ntarget_link_libraries(json-client json)\n```\n\nWith another few lines of CMake we can add an install target to the nlohmann/json project. Users would be able to install it using `make install` and use it, again, with the `find_package` command without including the `json.hpp` file into the project.\nSo by using `find_package` users can be sure that all the targets that depend on nlohmann/json are using the exact same file, and since we can optionally specify a version number for the `find_package` command too, users can avoid problems that might arise when using different versions.\nIn the end, we wouldn't lose anything. Users can continue to copy the `json.hpp` file into their projects if they feel that this is the right approach for integrating nlohmann/json into their projects. But we would gain some additional integration options.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/236", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/236/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/236/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/236/events", "html_url": "https://github.com/nlohmann/json/issues/236", "id": 150689049, "node_id": "MDU6SXNzdWUxNTA2ODkwNDk=", "number": 236, "title": ".get<std::string>() works for non spaced string but returns as array for spaced/longer strings", "user": {"login": "ilikenwf", "id": 414778, "node_id": "MDQ6VXNlcjQxNDc3OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/414778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilikenwf", "html_url": "https://github.com/ilikenwf", "followers_url": "https://api.github.com/users/ilikenwf/followers", "following_url": "https://api.github.com/users/ilikenwf/following{/other_user}", "gists_url": "https://api.github.com/users/ilikenwf/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilikenwf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilikenwf/subscriptions", "organizations_url": "https://api.github.com/users/ilikenwf/orgs", "repos_url": "https://api.github.com/users/ilikenwf/repos", "events_url": "https://api.github.com/users/ilikenwf/events{/privacy}", "received_events_url": "https://api.github.com/users/ilikenwf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-24T18:33:02Z", "updated_at": "2016-04-24T21:35:05Z", "closed_at": "2016-04-24T18:34:22Z", "author_association": "NONE", "body": "I'm not sure if this is the expected behavior or not, but seeing as how the json below isn't really returning the \"message\" as an array, I'm confused as to why I'm having to use [0] to select it...\n\nAssuming the json below:\n\n```\n    {\n        \"status\": \"failure\",\n        \"message\": \"This is a spaced string.\"\n    }\n```\n\nWorks:\n\n```\n    std::string status = j[\"status\"].get<std::string>();\n    cout << status;\n```\n\nDoesn't work:\n\n```\n   std::string message = j[\"message\"].get<std::string>();\n   cout << message;\n```\n\nWorks: \n\n```\n   std::string message = j[\"message\"][0].get<std::string>();\n   cout << message;\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/235", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/235/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/235/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/235/events", "html_url": "https://github.com/nlohmann/json/issues/235", "id": 149439516, "node_id": "MDU6SXNzdWUxNDk0Mzk1MTY=", "number": 235, "title": "ambiguous overload for 'push_back' and 'operator+='", "user": {"login": "alestrooisma", "id": 6317807, "node_id": "MDQ6VXNlcjYzMTc4MDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/6317807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alestrooisma", "html_url": "https://github.com/alestrooisma", "followers_url": "https://api.github.com/users/alestrooisma/followers", "following_url": "https://api.github.com/users/alestrooisma/following{/other_user}", "gists_url": "https://api.github.com/users/alestrooisma/gists{/gist_id}", "starred_url": "https://api.github.com/users/alestrooisma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alestrooisma/subscriptions", "organizations_url": "https://api.github.com/users/alestrooisma/orgs", "repos_url": "https://api.github.com/users/alestrooisma/repos", "events_url": "https://api.github.com/users/alestrooisma/events{/privacy}", "received_events_url": "https://api.github.com/users/alestrooisma/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/3", "html_url": "https://github.com/nlohmann/json/milestone/3", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/3/labels", "id": 1510937, "node_id": "MDk6TWlsZXN0b25lMTUxMDkzNw==", "number": 3, "title": "Release 2.0.0", "description": "This release adds several features such as JSON Pointers, JSON Patch, or support for 64 bit unsigned integers. Furthermore, several (subtle) bugs have been fixed.\r\n\r\nAs `noexcept` and `constexpr` specifier have been added to several functions, the public API has effectively been changed in a (potential) non-backwards compatible manner. As we adhere to [Semantic Versioning](http://semver.org), this calls for a new major version, so say hello to 2\ufe0f\u20e3.0\ufe0f\u20e3.0\ufe0f\u20e3.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 34, "state": "closed", "created_at": "2016-01-17T12:14:39Z", "updated_at": "2016-06-23T22:53:19Z", "due_on": "2016-06-23T07:00:00Z", "closed_at": "2016-06-23T22:53:19Z"}, "comments": 5, "created_at": "2016-04-19T12:05:08Z", "updated_at": "2016-05-09T10:01:28Z", "closed_at": "2016-05-08T18:45:53Z", "author_association": "NONE", "body": "When compiling this very simple program with g++ 4.9.2, I get \"ambiguous overload\" errors about both the `push_back` and the `operator+=` calls.\n\n``` cpp\n#include <iostream>\n#include \"json.hpp\"\n\nusing json = nlohmann::json;\n\nint main(int argc, char** argv) {\n    json data = {{\"key\", \"value\"}};\n    data.push_back({\"key2\", \"value2\"});\n    data += {\"key3\", \"value3\"};\n    return 0;\n}\n```\n\nSee [here](http://pastebin.com/5MwBXULU) for the compiler output (it's rather large)\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/234", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/234/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/234/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/234/events", "html_url": "https://github.com/nlohmann/json/pull/234", "id": 148042371, "node_id": "MDExOlB1bGxSZXF1ZXN0NjYzMTE0NjY=", "number": 234, "title": "Make the indirection and dereference operators of iterator const", "user": {"login": "robertmrk", "id": 7045469, "node_id": "MDQ6VXNlcjcwNDU0Njk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7045469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robertmrk", "html_url": "https://github.com/robertmrk", "followers_url": "https://api.github.com/users/robertmrk/followers", "following_url": "https://api.github.com/users/robertmrk/following{/other_user}", "gists_url": "https://api.github.com/users/robertmrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/robertmrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robertmrk/subscriptions", "organizations_url": "https://api.github.com/users/robertmrk/orgs", "repos_url": "https://api.github.com/users/robertmrk/repos", "events_url": "https://api.github.com/users/robertmrk/events{/privacy}", "received_events_url": "https://api.github.com/users/robertmrk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-04-13T12:20:24Z", "updated_at": "2016-04-17T17:19:02Z", "closed_at": "2016-04-16T10:28:09Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/234", "html_url": "https://github.com/nlohmann/json/pull/234", "diff_url": "https://github.com/nlohmann/json/pull/234.diff", "patch_url": "https://github.com/nlohmann/json/pull/234.patch"}, "body": "This is an attempt to fix #233, by making the indirection and dereference operators of `basic_json::iterator` `const`.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/233", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/233/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/233/events", "html_url": "https://github.com/nlohmann/json/issues/233", "id": 148033909, "node_id": "MDU6SXNzdWUxNDgwMzM5MDk=", "number": 233, "title": "Can't use basic_json::iterator as a base iterator for std::move_iterator", "user": {"login": "robertmrk", "id": 7045469, "node_id": "MDQ6VXNlcjcwNDU0Njk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7045469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robertmrk", "html_url": "https://github.com/robertmrk", "followers_url": "https://api.github.com/users/robertmrk/followers", "following_url": "https://api.github.com/users/robertmrk/following{/other_user}", "gists_url": "https://api.github.com/users/robertmrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/robertmrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robertmrk/subscriptions", "organizations_url": "https://api.github.com/users/robertmrk/orgs", "repos_url": "https://api.github.com/users/robertmrk/repos", "events_url": "https://api.github.com/users/robertmrk/events{/privacy}", "received_events_url": "https://api.github.com/users/robertmrk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/3", "html_url": "https://github.com/nlohmann/json/milestone/3", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/3/labels", "id": 1510937, "node_id": "MDk6TWlsZXN0b25lMTUxMDkzNw==", "number": 3, "title": "Release 2.0.0", "description": "This release adds several features such as JSON Pointers, JSON Patch, or support for 64 bit unsigned integers. Furthermore, several (subtle) bugs have been fixed.\r\n\r\nAs `noexcept` and `constexpr` specifier have been added to several functions, the public API has effectively been changed in a (potential) non-backwards compatible manner. As we adhere to [Semantic Versioning](http://semver.org), this calls for a new major version, so say hello to 2\ufe0f\u20e3.0\ufe0f\u20e3.0\ufe0f\u20e3.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 34, "state": "closed", "created_at": "2016-01-17T12:14:39Z", "updated_at": "2016-06-23T22:53:19Z", "due_on": "2016-06-23T07:00:00Z", "closed_at": "2016-06-23T22:53:19Z"}, "comments": 2, "created_at": "2016-04-13T11:45:30Z", "updated_at": "2016-11-13T22:37:59Z", "closed_at": "2016-04-16T10:13:39Z", "author_association": "CONTRIBUTOR", "body": "While it's possible to move a range of container elements instead of copying them by using the [std::move](http://en.cppreference.com/w/cpp/algorithm/move) algorithm instead of [std::copy](http://en.cppreference.com/w/cpp/algorithm/copy), some copying algorithms like [std::copy_if](http://en.cppreference.com/w/cpp/algorithm/copy) and [std::copy_n](http://en.cppreference.com/w/cpp/algorithm/copy_n) doesn't have a move counterpart. The only way to use move semantics with these algorithms is to wrap the input iterators into [std::move_iterator](http://en.cppreference.com/w/cpp/iterator/move_iterator) objects.\n\n``` c++\njson source = {\"a\", \"b\", \"c\"};  \njson dest;\nstd::copy_n(std::make_move_iterator(source.begin()), 2, std::back_inserter(dest));\n```\n\nUnfortunately, creating a move_iterator from a basic_json::iterator is not possible, because the indirection operator of move_iterator is a const member function and it can't call the non-const indirection operator of basic_json::iterator.\nCompiling the code above with AppleClang 7.0.0 (which is based on clang 3.7 I think), will produce the following error:\n\n``` c++\n../include/c++/v1/iterator:959:37: error: indirection requires pointer operand ('const nlohmann::basic_json<std::map, std::vector, std::__1::basic_string<char>, bool, long long, unsigned long long, double, std::allocator>::iterator' invalid)\n      return static_cast<reference>(*__i);\n                                    ^~~~\n```\n\nThe issue can be fixed by making the indirection operator of basic_json::iterator const, and while we're at it, we can safely make the dereference operator const too, since the non-const iterators in STL have a const indirection and dereference operator too.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/232", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/232/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/232/events", "html_url": "https://github.com/nlohmann/json/pull/232", "id": 146653349, "node_id": "MDExOlB1bGxSZXF1ZXN0NjU2NDYxOTQ=", "number": 232, "title": "make serialization locale-independent", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/3", "html_url": "https://github.com/nlohmann/json/milestone/3", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/3/labels", "id": 1510937, "node_id": "MDk6TWlsZXN0b25lMTUxMDkzNw==", "number": 3, "title": "Release 2.0.0", "description": "This release adds several features such as JSON Pointers, JSON Patch, or support for 64 bit unsigned integers. Furthermore, several (subtle) bugs have been fixed.\r\n\r\nAs `noexcept` and `constexpr` specifier have been added to several functions, the public API has effectively been changed in a (potential) non-backwards compatible manner. As we adhere to [Semantic Versioning](http://semver.org), this calls for a new major version, so say hello to 2\ufe0f\u20e3.0\ufe0f\u20e3.0\ufe0f\u20e3.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 34, "state": "closed", "created_at": "2016-01-17T12:14:39Z", "updated_at": "2016-06-23T22:53:19Z", "due_on": "2016-06-23T07:00:00Z", "closed_at": "2016-06-23T22:53:19Z"}, "comments": 1, "created_at": "2016-04-07T15:06:56Z", "updated_at": "2016-04-07T15:16:58Z", "closed_at": "2016-04-07T15:16:58Z", "author_association": "OWNER", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/232", "html_url": "https://github.com/nlohmann/json/pull/232", "diff_url": "https://github.com/nlohmann/json/pull/232.diff", "patch_url": "https://github.com/nlohmann/json/pull/232.patch"}, "body": "Code to make the serialization of JSON numbers locale-independent in the sense that the decimal separator will always be `.` independent of how the locale defines it. The code should suffer some performance penalty as stringstreams are used.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/231", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/231/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/231/events", "html_url": "https://github.com/nlohmann/json/issues/231", "id": 146602335, "node_id": "MDU6SXNzdWUxNDY2MDIzMzU=", "number": 231, "title": "json object's creation can freezes execution", "user": {"login": "cfoursan", "id": 2263965, "node_id": "MDQ6VXNlcjIyNjM5NjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2263965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cfoursan", "html_url": "https://github.com/cfoursan", "followers_url": "https://api.github.com/users/cfoursan/followers", "following_url": "https://api.github.com/users/cfoursan/following{/other_user}", "gists_url": "https://api.github.com/users/cfoursan/gists{/gist_id}", "starred_url": "https://api.github.com/users/cfoursan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cfoursan/subscriptions", "organizations_url": "https://api.github.com/users/cfoursan/orgs", "repos_url": "https://api.github.com/users/cfoursan/repos", "events_url": "https://api.github.com/users/cfoursan/events{/privacy}", "received_events_url": "https://api.github.com/users/cfoursan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-04-07T12:23:47Z", "updated_at": "2016-06-19T16:20:22Z", "closed_at": "2016-05-28T10:15:55Z", "author_association": "NONE", "body": "When I try create json object and if no memory to allocate there is execution freeze instead of std::bad_alloc.\n\nGdb trace:\nThread 541 (Thread 0x7fc74f64a700 (LWP 133066)):\n#0  0x000000000043cf71 in _ZSt3getILm0EIPSt6vectorIN8nlohmann10basic_jsonISt3mapS0_SsblmdSaEESaIS4_EEZNS4_6createIS6_ISt16initializer_listIS4_EEEEPT_DpOT0_EUlS7_E_EENSt11__add_c_refINSt13tuple_elementIXT_ESt5tupleIIDpT0_EEE4typeEE4typeERKSM_ (__t=empty std::tuple) at /usr/include/c++/4.8/tuple:766\n#1  0x000000000043cf9c in _ZNKSt10unique_ptrISt6vectorIN8nlohmann10basic_jsonISt3mapS0_SsblmdSaEESaIS4_EEZNS4_6createIS6_ISt16initializer_listIS4_EEEEPT_DpOT0_EUlPS6_E_E3getEv (this=0x7fc74f648ba0) at /usr/include/c++/4.8/bits/unique_ptr.h:234\n#2  0x000000000043a1d1 in nlohmann::basic_json<std::map, std::vector, std::string, bool, long, unsigned long, double, std::allocator>::create<std::vector<nlohmann::basic_json<std::map, std::vector, std::string, bool, long, unsigned long, double, std::allocator>, std::allocator<nlohmann::basic_json<std::map, std::vector, std::string, bool, long, unsigned long, double, std::allocator> > >, std::initializer_list<nlohmann::basic_json<std::map, std::vector, std::string, bool, long, unsigned long, double, std::allocator> > >(std::initializer_list<nlohmann::basic_json<std::map, std::vector, std::string, bool, long, unsigned long, double, std::allocator> >&&) () at ../src/json.hpp:689\n#3  0x0000000000437af4 in nlohmann::basic_json<std::map, std::vector, std::string, bool, long, unsigned long, double, std::allocator>::basic_json (this=0x7fc74f648f30, init=..., type_deduction=true, manual_type=nlohmann::basic_json<std::map, std::vector, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator>::array) at ../src/json.hpp:1571\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/230", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/230/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/230/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/230/events", "html_url": "https://github.com/nlohmann/json/issues/230", "id": 146089505, "node_id": "MDU6SXNzdWUxNDYwODk1MDU=", "number": 230, "title": "Incorrect dumping of parsed numbers with exponents, but without decimal places", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/3", "html_url": "https://github.com/nlohmann/json/milestone/3", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/3/labels", "id": 1510937, "node_id": "MDk6TWlsZXN0b25lMTUxMDkzNw==", "number": 3, "title": "Release 2.0.0", "description": "This release adds several features such as JSON Pointers, JSON Patch, or support for 64 bit unsigned integers. Furthermore, several (subtle) bugs have been fixed.\r\n\r\nAs `noexcept` and `constexpr` specifier have been added to several functions, the public API has effectively been changed in a (potential) non-backwards compatible manner. As we adhere to [Semantic Versioning](http://semver.org), this calls for a new major version, so say hello to 2\ufe0f\u20e3.0\ufe0f\u20e3.0\ufe0f\u20e3.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 34, "state": "closed", "created_at": "2016-01-17T12:14:39Z", "updated_at": "2016-06-23T22:53:19Z", "due_on": "2016-06-23T07:00:00Z", "closed_at": "2016-06-23T22:53:19Z"}, "comments": 20, "created_at": "2016-04-05T19:38:58Z", "updated_at": "2016-06-23T16:12:35Z", "closed_at": "2016-06-23T16:12:27Z", "author_association": "OWNER", "body": "The new floating point representation (#201) has a bug when it comes to negative exponents. Number `2342e-2` is correctly duped as `23.42`, but when it is parsed from a string, the output is `2e01`.\n\nExample code:\n\n``` cpp\njson j2a = 2342e-2;\njson j2b = json::parse(\"2342e-2\");\n\nCHECK(j2a.dump() == \"23.42\");\nCHECK(j2b.dump() == \"2342e-2\");\n```\n\nOutput:\n\n```\nFAILED:\n  CHECK( j2b.dump() == \"2342e-2\" )\nwith expansion:\n  \"2e01\" == \"2342e-2\"\n```\n\n@twelsby Any idea about this?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/229", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/229/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/229/events", "html_url": "https://github.com/nlohmann/json/issues/229", "id": 145677205, "node_id": "MDU6SXNzdWUxNDU2NzcyMDU=", "number": 229, "title": "Please add a Pretty-Print option for arrays to stay always in one line", "user": {"login": "mireiner", "id": 18225068, "node_id": "MDQ6VXNlcjE4MjI1MDY4", "avatar_url": "https://avatars1.githubusercontent.com/u/18225068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mireiner", "html_url": "https://github.com/mireiner", "followers_url": "https://api.github.com/users/mireiner/followers", "following_url": "https://api.github.com/users/mireiner/following{/other_user}", "gists_url": "https://api.github.com/users/mireiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/mireiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mireiner/subscriptions", "organizations_url": "https://api.github.com/users/mireiner/orgs", "repos_url": "https://api.github.com/users/mireiner/repos", "events_url": "https://api.github.com/users/mireiner/events{/privacy}", "received_events_url": "https://api.github.com/users/mireiner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 26, "created_at": "2016-04-04T12:58:59Z", "updated_at": "2018-06-03T20:18:48Z", "closed_at": "2016-11-02T16:18:44Z", "author_association": "NONE", "body": "Please add a Pretty-Printing option for arrays to stay always in one line (don't add lines) if dump() parameter > -1 or std::setw()) is set. So that only other JSON types than arrays are expanded.\n\nExample:\n\n``` cpp\njson j;\nj[\"person\"][\"name\"] = \"Glory Rainbow\";\nj[\"person\"][\"age\"] = 61;\nj[\"person\"][\"mind\"] = \"Easy going\";\nj[\"color\"][\"month\"] = { 1, 3, 5, 7, 8, 10, 12};\nj[\"color\"][\"order\"] = {\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"indigo\", \"violet\"};\nstd::cout << j.dump(4);\n```\n\nWanted output:\n\n``` json\n{\n    \"color\": {\n        \"month\":  [1, 3, 5, 7, 8, 10, 12],\n        \"order\": [\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"indigo\", \"violet\"]\n    } ,\n    \"person\": {\n        \"age\": 61,\n        \"name\": \"Glory Rainbow\",\n        \"mind\": \"Easy going\"\n    }\n} \n```\n\nThank you!\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/228", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/228/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/228/events", "html_url": "https://github.com/nlohmann/json/issues/228", "id": 144918752, "node_id": "MDU6SXNzdWUxNDQ5MTg3NTI=", "number": 228, "title": "double values are serialized with commas as decimal points", "user": {"login": "jplatte", "id": 951129, "node_id": "MDQ6VXNlcjk1MTEyOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/951129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jplatte", "html_url": "https://github.com/jplatte", "followers_url": "https://api.github.com/users/jplatte/followers", "following_url": "https://api.github.com/users/jplatte/following{/other_user}", "gists_url": "https://api.github.com/users/jplatte/gists{/gist_id}", "starred_url": "https://api.github.com/users/jplatte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jplatte/subscriptions", "organizations_url": "https://api.github.com/users/jplatte/orgs", "repos_url": "https://api.github.com/users/jplatte/repos", "events_url": "https://api.github.com/users/jplatte/events{/privacy}", "received_events_url": "https://api.github.com/users/jplatte/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/3", "html_url": "https://github.com/nlohmann/json/milestone/3", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/3/labels", "id": 1510937, "node_id": "MDk6TWlsZXN0b25lMTUxMDkzNw==", "number": 3, "title": "Release 2.0.0", "description": "This release adds several features such as JSON Pointers, JSON Patch, or support for 64 bit unsigned integers. Furthermore, several (subtle) bugs have been fixed.\r\n\r\nAs `noexcept` and `constexpr` specifier have been added to several functions, the public API has effectively been changed in a (potential) non-backwards compatible manner. As we adhere to [Semantic Versioning](http://semver.org), this calls for a new major version, so say hello to 2\ufe0f\u20e3.0\ufe0f\u20e3.0\ufe0f\u20e3.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 34, "state": "closed", "created_at": "2016-01-17T12:14:39Z", "updated_at": "2016-06-23T22:53:19Z", "due_on": "2016-06-23T07:00:00Z", "closed_at": "2016-06-23T22:53:19Z"}, "comments": 5, "created_at": "2016-03-31T14:30:21Z", "updated_at": "2016-04-07T16:28:23Z", "closed_at": "2016-04-07T15:16:59Z", "author_association": "NONE", "body": "Might be related to #51. As a workaround I can start my application with `LC_ALL=C`, but this is obviously something that should be fixed in the library. I'm using git master.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/227", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/227/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/227/events", "html_url": "https://github.com/nlohmann/json/pull/227", "id": 144462913, "node_id": "MDExOlB1bGxSZXF1ZXN0NjQ1NzExMjY=", "number": 227, "title": "fixes #223 by updating README.md", "user": {"login": "kevin--", "id": 3334774, "node_id": "MDQ6VXNlcjMzMzQ3NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/3334774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevin--", "html_url": "https://github.com/kevin--", "followers_url": "https://api.github.com/users/kevin--/followers", "following_url": "https://api.github.com/users/kevin--/following{/other_user}", "gists_url": "https://api.github.com/users/kevin--/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevin--/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevin--/subscriptions", "organizations_url": "https://api.github.com/users/kevin--/orgs", "repos_url": "https://api.github.com/users/kevin--/repos", "events_url": "https://api.github.com/users/kevin--/events{/privacy}", "received_events_url": "https://api.github.com/users/kevin--/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-30T04:43:42Z", "updated_at": "2016-03-30T18:21:40Z", "closed_at": "2016-03-30T18:21:35Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/227", "html_url": "https://github.com/nlohmann/json/pull/227", "diff_url": "https://github.com/nlohmann/json/pull/227.diff", "patch_url": "https://github.com/nlohmann/json/pull/227.patch"}, "body": "see my comment on https://github.com/nlohmann/json/issues/223\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/226", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/226/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/226/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/226/events", "html_url": "https://github.com/nlohmann/json/pull/226", "id": 143945206, "node_id": "MDExOlB1bGxSZXF1ZXN0NjQzMDg0NDQ=", "number": 226, "title": "Use namespace std for int64_t and uint64_t", "user": {"login": "lv-zheng", "id": 7455711, "node_id": "MDQ6VXNlcjc0NTU3MTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/7455711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lv-zheng", "html_url": "https://github.com/lv-zheng", "followers_url": "https://api.github.com/users/lv-zheng/followers", "following_url": "https://api.github.com/users/lv-zheng/following{/other_user}", "gists_url": "https://api.github.com/users/lv-zheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/lv-zheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lv-zheng/subscriptions", "organizations_url": "https://api.github.com/users/lv-zheng/orgs", "repos_url": "https://api.github.com/users/lv-zheng/repos", "events_url": "https://api.github.com/users/lv-zheng/events{/privacy}", "received_events_url": "https://api.github.com/users/lv-zheng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/3", "html_url": "https://github.com/nlohmann/json/milestone/3", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/3/labels", "id": 1510937, "node_id": "MDk6TWlsZXN0b25lMTUxMDkzNw==", "number": 3, "title": "Release 2.0.0", "description": "This release adds several features such as JSON Pointers, JSON Patch, or support for 64 bit unsigned integers. Furthermore, several (subtle) bugs have been fixed.\r\n\r\nAs `noexcept` and `constexpr` specifier have been added to several functions, the public API has effectively been changed in a (potential) non-backwards compatible manner. As we adhere to [Semantic Versioning](http://semver.org), this calls for a new major version, so say hello to 2\ufe0f\u20e3.0\ufe0f\u20e3.0\ufe0f\u20e3.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 34, "state": "closed", "created_at": "2016-01-17T12:14:39Z", "updated_at": "2016-06-23T22:53:19Z", "due_on": "2016-06-23T07:00:00Z", "closed_at": "2016-06-23T22:53:19Z"}, "comments": 2, "created_at": "2016-03-28T10:18:20Z", "updated_at": "2016-03-30T17:43:37Z", "closed_at": "2016-03-29T08:35:24Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/226", "html_url": "https://github.com/nlohmann/json/pull/226", "diff_url": "https://github.com/nlohmann/json/pull/226.diff", "patch_url": "https://github.com/nlohmann/json/pull/226.patch"}, "body": "According to the c++11 standard, the declarations are within namespace\nscope of the namespace `std`. Add `std::` to avoid unnecessary\nassumptions of implementations.\n\nReferences:\nhttp://stackoverflow.com/questions/13129945/use-types-in-cstdint-with-ot-without-namespace\nhttp://en.cppreference.com/w/cpp/header/cstdint\nhttps://msdn.microsoft.com/en-us/library/hh874765.aspx\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/225", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/225/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/225/events", "html_url": "https://github.com/nlohmann/json/issues/225", "id": 142213753, "node_id": "MDU6SXNzdWUxNDIyMTM3NTM=", "number": 225, "title": "Move semantics with std::initializer_list", "user": {"login": "ahorn", "id": 25549, "node_id": "MDQ6VXNlcjI1NTQ5", "avatar_url": "https://avatars0.githubusercontent.com/u/25549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahorn", "html_url": "https://github.com/ahorn", "followers_url": "https://api.github.com/users/ahorn/followers", "following_url": "https://api.github.com/users/ahorn/following{/other_user}", "gists_url": "https://api.github.com/users/ahorn/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahorn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahorn/subscriptions", "organizations_url": "https://api.github.com/users/ahorn/orgs", "repos_url": "https://api.github.com/users/ahorn/repos", "events_url": "https://api.github.com/users/ahorn/events{/privacy}", "received_events_url": "https://api.github.com/users/ahorn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/3", "html_url": "https://github.com/nlohmann/json/milestone/3", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/3/labels", "id": 1510937, "node_id": "MDk6TWlsZXN0b25lMTUxMDkzNw==", "number": 3, "title": "Release 2.0.0", "description": "This release adds several features such as JSON Pointers, JSON Patch, or support for 64 bit unsigned integers. Furthermore, several (subtle) bugs have been fixed.\r\n\r\nAs `noexcept` and `constexpr` specifier have been added to several functions, the public API has effectively been changed in a (potential) non-backwards compatible manner. As we adhere to [Semantic Versioning](http://semver.org), this calls for a new major version, so say hello to 2\ufe0f\u20e3.0\ufe0f\u20e3.0\ufe0f\u20e3.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 34, "state": "closed", "created_at": "2016-01-17T12:14:39Z", "updated_at": "2016-06-23T22:53:19Z", "due_on": "2016-06-23T07:00:00Z", "closed_at": "2016-06-23T22:53:19Z"}, "comments": 2, "created_at": "2016-03-20T22:13:09Z", "updated_at": "2016-03-30T18:20:01Z", "closed_at": "2016-03-30T18:18:39Z", "author_association": "NONE", "body": "[Line 1564](https://github.com/nlohmann/json/blob/49dc2dff68abb4bbf1f3ee8b0327de7d0a673d16/src/json.hpp#L1564) uses move semantics when working with `std::initializer_list`. But when I debug the type of, say, `element[1]`, using clang++ 3.5 and compiling the unit tests, the compiler deduces a const reference type (see also [std::initializer_list::begin](http://en.cppreference.com/w/cpp/utility/initializer_list/begin)). There are no meaningful semantics for moving const references so I wanted to double check with you guys.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/224", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/224/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/224/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/224/events", "html_url": "https://github.com/nlohmann/json/issues/224", "id": 142045092, "node_id": "MDU6SXNzdWUxNDIwNDUwOTI=", "number": 224, "title": "replace emplace", "user": {"login": "geromueller", "id": 1321689, "node_id": "MDQ6VXNlcjEzMjE2ODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1321689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geromueller", "html_url": "https://github.com/geromueller", "followers_url": "https://api.github.com/users/geromueller/followers", "following_url": "https://api.github.com/users/geromueller/following{/other_user}", "gists_url": "https://api.github.com/users/geromueller/gists{/gist_id}", "starred_url": "https://api.github.com/users/geromueller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geromueller/subscriptions", "organizations_url": "https://api.github.com/users/geromueller/orgs", "repos_url": "https://api.github.com/users/geromueller/repos", "events_url": "https://api.github.com/users/geromueller/events{/privacy}", "received_events_url": "https://api.github.com/users/geromueller/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-19T09:05:17Z", "updated_at": "2016-03-20T11:08:40Z", "closed_at": "2016-03-19T09:06:14Z", "author_association": "NONE", "body": "GCC 4.7 does not support std::map::emplace.\nOn scientific clusters older compilers are often found, e.g. on debian wheezy.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/223", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/223/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/223/events", "html_url": "https://github.com/nlohmann/json/issues/223", "id": 140909104, "node_id": "MDU6SXNzdWUxNDA5MDkxMDQ=", "number": 223, "title": "abort during getline in yyfill", "user": {"login": "kevin--", "id": 3334774, "node_id": "MDQ6VXNlcjMzMzQ3NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/3334774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevin--", "html_url": "https://github.com/kevin--", "followers_url": "https://api.github.com/users/kevin--/followers", "following_url": "https://api.github.com/users/kevin--/following{/other_user}", "gists_url": "https://api.github.com/users/kevin--/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevin--/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevin--/subscriptions", "organizations_url": "https://api.github.com/users/kevin--/orgs", "repos_url": "https://api.github.com/users/kevin--/repos", "events_url": "https://api.github.com/users/kevin--/events{/privacy}", "received_events_url": "https://api.github.com/users/kevin--/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-03-15T08:43:29Z", "updated_at": "2016-03-30T18:39:32Z", "closed_at": "2016-03-30T18:21:36Z", "author_association": "CONTRIBUTOR", "body": "I'm experiencing a runtime abort with MSVC 2015 14.0.24720.00 Update 1 while attempting to read a file using the \">>\" operator. The file was written by this library as well, using the \"<<\" operator.\nA dialog appears with \"abort() has been called\", hitting retry drops me into the debugger.\n\nI don't think there's anything very novel about my code:\n`\n    json document;\n    std::ifstream in;\n    in.exceptions(std::ifstream::failbit | std::ifstream::badbit);\n    in.open(filepath);\n    in >> document;\n`\n\nFor now the work around is to read the file into a string, then call `parse()`\n\nhere's the data I'm trying to read\n[file_in_question.json.txt](https://github.com/nlohmann/json/files/173518/file_in_question.json.txt)\n\nStack trace\n`>  bumped.exe!__GSHandlerCheck_EH(_EXCEPTION_RECORD * ExceptionRecord, void * EstablisherFrame, _CONTEXT * ContextRecord, _DISPATCHER_CONTEXT * DispatcherContext) Line 101    C`\n\n`...bunch of msvc runtime...`\n\n`bumped.exe!std::getline<char,std::char_traits<char>,std::allocator<char> >(std::basic_istream<char,std::char_traits<char> > && _Istr, std::basic_string<char,std::char_traits<char>,std::allocator<char> > & _Str, const char _Delim) Line 120 C++`\n\n`bumped.exe!std::getline<char,std::char_traits<char>,std::allocator<char> >(std::basic_istream<char,std::char_traits<char> > & _Istr, std::basic_string<char,std::char_traits<char>,std::allocator<char> > & _Str) Line 162 C++`\n\n`bumped.exe!nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,double,std::allocator>::lexer::yyfill() Line 7636   C++`\n\n`bumped.exe!nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,double,std::allocator>::lexer::scan() Line 6877 C++`\n\n`bumped.exe!nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,double,std::allocator>::parser::get_token() Line 8118   C++`\n\n`bumped.exe!nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,double,std::allocator>::parser::parse_internal(bool keep) Line 7961 C++`\n\n`bumped.exe!nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,double,std::allocator>::parser::parse() Line 7889   C++`\n\n`bumped.exe!nlohmann::operator>>(std::basic_istream<char,std::char_traits<char> > & i, nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,double,std::allocator> & j) Line 5287    C++`\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/222", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/222/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/222/events", "html_url": "https://github.com/nlohmann/json/pull/222", "id": 139815106, "node_id": "MDExOlB1bGxSZXF1ZXN0NjIzNTIzNjA=", "number": 222, "title": "Added missing cerrno header to fix ERANGE compile error on android", "user": {"login": "Teemperor", "id": 736001, "node_id": "MDQ6VXNlcjczNjAwMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/736001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Teemperor", "html_url": "https://github.com/Teemperor", "followers_url": "https://api.github.com/users/Teemperor/followers", "following_url": "https://api.github.com/users/Teemperor/following{/other_user}", "gists_url": "https://api.github.com/users/Teemperor/gists{/gist_id}", "starred_url": "https://api.github.com/users/Teemperor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Teemperor/subscriptions", "organizations_url": "https://api.github.com/users/Teemperor/orgs", "repos_url": "https://api.github.com/users/Teemperor/repos", "events_url": "https://api.github.com/users/Teemperor/events{/privacy}", "received_events_url": "https://api.github.com/users/Teemperor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-10T08:01:39Z", "updated_at": "2016-03-30T18:13:04Z", "closed_at": "2016-03-30T18:12:55Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/222", "html_url": "https://github.com/nlohmann/json/pull/222", "diff_url": "https://github.com/nlohmann/json/pull/222.diff", "patch_url": "https://github.com/nlohmann/json/pull/222.patch"}, "body": "See #219.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/221", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/221/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/221/events", "html_url": "https://github.com/nlohmann/json/issues/221", "id": 138883178, "node_id": "MDU6SXNzdWUxMzg4ODMxNzg=", "number": 221, "title": "free(): invalid pointer error in GCC 5.2.1", "user": {"login": "manhnt9", "id": 11463928, "node_id": "MDQ6VXNlcjExNDYzOTI4", "avatar_url": "https://avatars1.githubusercontent.com/u/11463928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manhnt9", "html_url": "https://github.com/manhnt9", "followers_url": "https://api.github.com/users/manhnt9/followers", "following_url": "https://api.github.com/users/manhnt9/following{/other_user}", "gists_url": "https://api.github.com/users/manhnt9/gists{/gist_id}", "starred_url": "https://api.github.com/users/manhnt9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manhnt9/subscriptions", "organizations_url": "https://api.github.com/users/manhnt9/orgs", "repos_url": "https://api.github.com/users/manhnt9/repos", "events_url": "https://api.github.com/users/manhnt9/events{/privacy}", "received_events_url": "https://api.github.com/users/manhnt9/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-07T04:23:44Z", "updated_at": "2016-03-07T15:31:10Z", "closed_at": "2016-03-07T13:04:09Z", "author_association": "NONE", "body": "My old code using GCC 4.8.4 works fine. But today I upgrade my system and recompile the code.\nIt doesn't run anymore and crashes when I retrieve my data.\nWhat should I do to investigate this more?\n![snapshot1](https://cloud.githubusercontent.com/assets/11463928/13560828/f9f60eac-e456-11e5-9e6a-fd5681f274c3.png)\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/220", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/220/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/220/events", "html_url": "https://github.com/nlohmann/json/issues/220", "id": 138089062, "node_id": "MDU6SXNzdWUxMzgwODkwNjI=", "number": 220, "title": "Conversion to STL map<string, vector<int>> gives error", "user": {"login": "pnth", "id": 16401127, "node_id": "MDQ6VXNlcjE2NDAxMTI3", "avatar_url": "https://avatars3.githubusercontent.com/u/16401127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnth", "html_url": "https://github.com/pnth", "followers_url": "https://api.github.com/users/pnth/followers", "following_url": "https://api.github.com/users/pnth/following{/other_user}", "gists_url": "https://api.github.com/users/pnth/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnth/subscriptions", "organizations_url": "https://api.github.com/users/pnth/orgs", "repos_url": "https://api.github.com/users/pnth/repos", "events_url": "https://api.github.com/users/pnth/events{/privacy}", "received_events_url": "https://api.github.com/users/pnth/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}, {"id": 344572510, "node_id": "MDU6TGFiZWwzNDQ1NzI1MTA=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20help%20needed", "name": "state: help needed", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-03-03T06:35:23Z", "updated_at": "2016-11-02T16:24:20Z", "closed_at": "2016-11-02T16:24:20Z", "author_association": "NONE", "body": "I tried to convert a json object to and from STL `map<string, vector<int>>`. The \"from\" direction works well:\n\n``` c++\nmap<string, vector<int> > c_map{ { \"one\", { 1, 2 } }, { \"two\", { 3, 4 } }, { \"three\", { 5, 6 } } };\njson j_map(c_map);\ncout << j_map.dump() << endl;\n// Output: {\"one\":[1,2],\"three\":[5,6],\"two\":[3,4]}\n```\n\nBut the \"to\" direction gives the following error: \n\n``` c++\nmap<string, vector<int> > v2 = j_map;\nor\nmap<string, vector<int> > v2 = j_map.get<map<string, vector<int>>>();\n\n/usr/bin/../lib64/gcc/x86_64-unknown-linux-gnu/5.3.0/../../../../include/c++/5\n.3.0/bits/stl_pair.h:125:22: error: call to constructor of 'std::vector<int, s\ntd::allocator<int> >' is ambiguous\n```\n\nIs there a way to get around this error?\n\nThe library does conversions fine for `map<string, int>`\n\n``` c++\nmap<string, int> c_map{ { \"one\", 1 }, { \"two\", 4 }, { \"three\", 6 } };\njson j_map(c_map);\ncout << j_map.dump() << endl;\nmap<string, int > v2 = j_map;\n```\n\nI also tried this but did not work either\n\n``` c++\nmap<string, vector<int> > v2;\nv2[\"one\"] = j_map[\"one\"];\nmain.cpp:249:13: error: use of overloaded operator '=' is ambiguous (with oper\nand types 'mapped_type' (aka 'std::vector<int, std::allocator<int> >') and 'va\nlue_type' (aka 'nlohmann::basic_json<std::map, std::vector, std::__cxx11::basi\nc_string<char>, bool, long, unsigned long, double, std::allocator>'))\n```\n\nThis final one works but looks ugly:\n\n``` c++\nmap<string, vector<int> > v2;\nvector<int> one = j_map[\"one\"];\nv2[\"one\"] = one;\nvector<int> two = j_map[\"two\"];\nv2[\"two\"] = two;\n```\n\nMany thanks\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/219", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/219/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/219/events", "html_url": "https://github.com/nlohmann/json/issues/219", "id": 137990816, "node_id": "MDU6SXNzdWUxMzc5OTA4MTY=", "number": 219, "title": "Error compile Android NDK  error: 'strtof' is not a member of 'std'", "user": {"login": "fh127", "id": 7613721, "node_id": "MDQ6VXNlcjc2MTM3MjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/7613721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fh127", "html_url": "https://github.com/fh127", "followers_url": "https://api.github.com/users/fh127/followers", "following_url": "https://api.github.com/users/fh127/following{/other_user}", "gists_url": "https://api.github.com/users/fh127/gists{/gist_id}", "starred_url": "https://api.github.com/users/fh127/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fh127/subscriptions", "organizations_url": "https://api.github.com/users/fh127/orgs", "repos_url": "https://api.github.com/users/fh127/repos", "events_url": "https://api.github.com/users/fh127/events{/privacy}", "received_events_url": "https://api.github.com/users/fh127/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 382449225, "node_id": "MDU6TGFiZWwzODI0NDkyMjU=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20android", "name": "platform: android", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 28, "created_at": "2016-03-02T20:58:39Z", "updated_at": "2017-02-27T15:21:05Z", "closed_at": "2016-05-28T14:07:37Z", "author_association": "NONE", "body": "hi, can you help me, this error occurs when it compile with Android NDK\n\n```\n          error: 'strtof' is not a member of 'std'\n         return std::strtof(reinterpret_cast<typename string_t::const_pointer>(m_start), endptr);\n\n         error: 'ERANGE' was not declared in this scope\n         if (reinterpret_cast<lexer_char_t*>(endptr) != m_cursor || errno == ERANGE)\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/218", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/218/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/218/events", "html_url": "https://github.com/nlohmann/json/pull/218", "id": 137740348, "node_id": "MDExOlB1bGxSZXF1ZXN0NjEzMzYwODA=", "number": 218, "title": "Corrected readme", "user": {"login": "Annihil", "id": 16704309, "node_id": "MDQ6VXNlcjE2NzA0MzA5", "avatar_url": "https://avatars3.githubusercontent.com/u/16704309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Annihil", "html_url": "https://github.com/Annihil", "followers_url": "https://api.github.com/users/Annihil/followers", "following_url": "https://api.github.com/users/Annihil/following{/other_user}", "gists_url": "https://api.github.com/users/Annihil/gists{/gist_id}", "starred_url": "https://api.github.com/users/Annihil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Annihil/subscriptions", "organizations_url": "https://api.github.com/users/Annihil/orgs", "repos_url": "https://api.github.com/users/Annihil/repos", "events_url": "https://api.github.com/users/Annihil/events{/privacy}", "received_events_url": "https://api.github.com/users/Annihil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/3", "html_url": "https://github.com/nlohmann/json/milestone/3", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/3/labels", "id": 1510937, "node_id": "MDk6TWlsZXN0b25lMTUxMDkzNw==", "number": 3, "title": "Release 2.0.0", "description": "This release adds several features such as JSON Pointers, JSON Patch, or support for 64 bit unsigned integers. Furthermore, several (subtle) bugs have been fixed.\r\n\r\nAs `noexcept` and `constexpr` specifier have been added to several functions, the public API has effectively been changed in a (potential) non-backwards compatible manner. As we adhere to [Semantic Versioning](http://semver.org), this calls for a new major version, so say hello to 2\ufe0f\u20e3.0\ufe0f\u20e3.0\ufe0f\u20e3.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 34, "state": "closed", "created_at": "2016-01-17T12:14:39Z", "updated_at": "2016-06-23T22:53:19Z", "due_on": "2016-06-23T07:00:00Z", "closed_at": "2016-06-23T22:53:19Z"}, "comments": 1, "created_at": "2016-03-02T01:05:10Z", "updated_at": "2016-03-30T17:44:04Z", "closed_at": "2016-03-04T06:26:27Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/218", "html_url": "https://github.com/nlohmann/json/pull/218", "diff_url": "https://github.com/nlohmann/json/pull/218.diff", "patch_url": "https://github.com/nlohmann/json/pull/218.patch"}, "body": "I found an error in the example of usage when casting map STL container to json, leading users to think that it keeps insertion order instead of alphabetical order of the keys.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/217", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/217/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/217/events", "html_url": "https://github.com/nlohmann/json/issues/217", "id": 137374034, "node_id": "MDU6SXNzdWUxMzczNzQwMzQ=", "number": 217, "title": "Wrong link in the README.md", "user": {"login": "Themercee", "id": 6720140, "node_id": "MDQ6VXNlcjY3MjAxNDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6720140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Themercee", "html_url": "https://github.com/Themercee", "followers_url": "https://api.github.com/users/Themercee/followers", "following_url": "https://api.github.com/users/Themercee/following{/other_user}", "gists_url": "https://api.github.com/users/Themercee/gists{/gist_id}", "starred_url": "https://api.github.com/users/Themercee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Themercee/subscriptions", "organizations_url": "https://api.github.com/users/Themercee/orgs", "repos_url": "https://api.github.com/users/Themercee/repos", "events_url": "https://api.github.com/users/Themercee/events{/privacy}", "received_events_url": "https://api.github.com/users/Themercee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-29T21:03:11Z", "updated_at": "2016-03-04T06:30:26Z", "closed_at": "2016-03-04T06:30:16Z", "author_association": "NONE", "body": "Hi,\nnot a big deal, but there is a link in the readme.md that is not working, near the \"Serious testing\".\n\nNot working --> https://github.com/nlohmann/json/blob/master/test/json_unit.cc\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/216", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/216/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/216/events", "html_url": "https://github.com/nlohmann/json/issues/216", "id": 137363154, "node_id": "MDU6SXNzdWUxMzczNjMxNTQ=", "number": 216, "title": "Wide character strings not supported", "user": {"login": "kalumekenge", "id": 17554986, "node_id": "MDQ6VXNlcjE3NTU0OTg2", "avatar_url": "https://avatars3.githubusercontent.com/u/17554986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kalumekenge", "html_url": "https://github.com/kalumekenge", "followers_url": "https://api.github.com/users/kalumekenge/followers", "following_url": "https://api.github.com/users/kalumekenge/following{/other_user}", "gists_url": "https://api.github.com/users/kalumekenge/gists{/gist_id}", "starred_url": "https://api.github.com/users/kalumekenge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kalumekenge/subscriptions", "organizations_url": "https://api.github.com/users/kalumekenge/orgs", "repos_url": "https://api.github.com/users/kalumekenge/repos", "events_url": "https://api.github.com/users/kalumekenge/events{/privacy}", "received_events_url": "https://api.github.com/users/kalumekenge/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-29T20:28:21Z", "updated_at": "2016-04-10T14:26:50Z", "closed_at": "2016-04-10T14:26:50Z", "author_association": "NONE", "body": "```\n    std::wstring s1 = LR\"({\n  \"pi\": 3.141,\n  \"happy\": true,\n  \"name\": \"Niels\",\n  \"nothing\": null,\n  \"answer\": {\n    \"everything\": 42\n  },\n  \"list\": [1, 0, 2],\n  \"object\": {\n    \"currency\": \"USD\",\n    \"value\": 42.99\n  }\n})\";\n```\n\n```\nauto p0 = json::parse(s1);\nauto p1 = p0.dump();\nstd::wcout << p1 << std::endl;\n```\n\nVS 2015 Community Edition\n error C2665: 'nlohmann::basic_jsonstd::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator::parse': none of the 3 overloads could convert all the argument types\nwhile trying to match the argument list '(std::wstring)'\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/215", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/215/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/215/events", "html_url": "https://github.com/nlohmann/json/pull/215", "id": 137110839, "node_id": "MDExOlB1bGxSZXF1ZXN0NjEwMTI0NDI=", "number": 215, "title": "Update the README to give better instructions for Android.", "user": {"login": "zewt", "id": 286287, "node_id": "MDQ6VXNlcjI4NjI4Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/286287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zewt", "html_url": "https://github.com/zewt", "followers_url": "https://api.github.com/users/zewt/followers", "following_url": "https://api.github.com/users/zewt/following{/other_user}", "gists_url": "https://api.github.com/users/zewt/gists{/gist_id}", "starred_url": "https://api.github.com/users/zewt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zewt/subscriptions", "organizations_url": "https://api.github.com/users/zewt/orgs", "repos_url": "https://api.github.com/users/zewt/repos", "events_url": "https://api.github.com/users/zewt/events{/privacy}", "received_events_url": "https://api.github.com/users/zewt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/3", "html_url": "https://github.com/nlohmann/json/milestone/3", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/3/labels", "id": 1510937, "node_id": "MDk6TWlsZXN0b25lMTUxMDkzNw==", "number": 3, "title": "Release 2.0.0", "description": "This release adds several features such as JSON Pointers, JSON Patch, or support for 64 bit unsigned integers. Furthermore, several (subtle) bugs have been fixed.\r\n\r\nAs `noexcept` and `constexpr` specifier have been added to several functions, the public API has effectively been changed in a (potential) non-backwards compatible manner. As we adhere to [Semantic Versioning](http://semver.org), this calls for a new major version, so say hello to 2\ufe0f\u20e3.0\ufe0f\u20e3.0\ufe0f\u20e3.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 34, "state": "closed", "created_at": "2016-01-17T12:14:39Z", "updated_at": "2016-06-23T22:53:19Z", "due_on": "2016-06-23T07:00:00Z", "closed_at": "2016-06-23T22:53:19Z"}, "comments": 7, "created_at": "2016-02-28T23:29:17Z", "updated_at": "2016-03-30T17:43:25Z", "closed_at": "2016-03-30T17:43:02Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/215", "html_url": "https://github.com/nlohmann/json/pull/215", "diff_url": "https://github.com/nlohmann/json/pull/215.diff", "patch_url": "https://github.com/nlohmann/json/pull/215.patch"}, "body": "The MingW link doesn't help for Android, and points people down the wrong path.  On Android all you need to do is tell the build system to use a newer compiler and standard library.\n\nThe unit tests run successfully with this configuration on Android.\n\nRelated to #136.\n\n(I've left Android mentioned in the MingW line, so people searching for \"to_string\" and finding that line are pointed upwards.)\n"}]