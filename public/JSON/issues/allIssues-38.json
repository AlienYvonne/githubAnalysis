[{"url": "https://api.github.com/repos/nlohmann/json/issues/62", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/62/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/62/events", "html_url": "https://github.com/nlohmann/json/issues/62", "id": 70944091, "node_id": "MDU6SXNzdWU3MDk0NDA5MQ==", "number": 62, "title": "Windows/Visual Studio (through 2013) is unsupported", "user": {"login": "smiley", "id": 354181, "node_id": "MDQ6VXNlcjM1NDE4MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/354181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smiley", "html_url": "https://github.com/smiley", "followers_url": "https://api.github.com/users/smiley/followers", "following_url": "https://api.github.com/users/smiley/following{/other_user}", "gists_url": "https://api.github.com/users/smiley/gists{/gist_id}", "starred_url": "https://api.github.com/users/smiley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smiley/subscriptions", "organizations_url": "https://api.github.com/users/smiley/orgs", "repos_url": "https://api.github.com/users/smiley/repos", "events_url": "https://api.github.com/users/smiley/events{/privacy}", "received_events_url": "https://api.github.com/users/smiley/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 42, "created_at": "2015-04-25T17:50:57Z", "updated_at": "2016-11-13T22:38:10Z", "closed_at": "2015-12-14T14:31:04Z", "author_association": "NONE", "body": "I was about to use this for a C++ project in Visual Studio 2013, but the header fails compilation entirely, thanks to a myriad of errors:\n\n```\n1>------ Build started: Project: jsondummy, Configuration: Debug Win32 ------\n1>  main.cpp\n1>d:\\github\\jsondummy\\src\\json.hpp(137): error C2061: syntax error : identifier 'iterator'\n1>          d:\\github\\jsondummy\\src\\json.hpp(4893) : see reference to class template instantiation 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>' being compiled\n1>d:\\github\\jsondummy\\src\\json.hpp(137): error C2238: unexpected token(s) preceding ';'\n1>d:\\github\\jsondummy\\src\\json.hpp(143): error C2061: syntax error : identifier 'const_iterator'\n1>d:\\github\\jsondummy\\src\\json.hpp(143): error C2238: unexpected token(s) preceding ';'\n1>d:\\github\\jsondummy\\src\\json.hpp(149): error C2061: syntax error : identifier 'reverse_iterator'\n1>d:\\github\\jsondummy\\src\\json.hpp(149): error C2238: unexpected token(s) preceding ';'\n1>d:\\github\\jsondummy\\src\\json.hpp(155): error C2061: syntax error : identifier 'const_reverse_iterator'\n1>d:\\github\\jsondummy\\src\\json.hpp(155): error C2238: unexpected token(s) preceding ';'\n1>d:\\github\\jsondummy\\src\\json.hpp(382): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(385): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(402): warning C4346: 'std::is_constructible<ObjectType<StringType,nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,>::key_type,V::key_type>::value' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(402): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(402): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(402): error C2143: syntax error : missing ',' before 'std::is_constructible<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,V::mapped_type>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(402): error C2977: 'std::enable_if' : too many template arguments\n1>          c:\\program files (x86)\\microsoft visual studio 12.0\\vc\\include\\xtr1common(67) : see declaration of 'std::enable_if'\n1>d:\\github\\jsondummy\\src\\json.hpp(403): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int\n1>d:\\github\\jsondummy\\src\\json.hpp(426): error C2065: 'not' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(426): warning C4346: 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::iterator' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(426): error C2923: 'std::is_same' : 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::iterator' is not a valid template type argument for parameter '_Ty2'\n1>d:\\github\\jsondummy\\src\\json.hpp(426): error C2143: syntax error : missing ',' before 'std::integral_constant<bool,false>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(427): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(427): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(427): error C2146: syntax error : missing ',' before identifier 'not'\n1>d:\\github\\jsondummy\\src\\json.hpp(427): error C2065: 'not' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(427): warning C4346: 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::const_iterator' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(427): error C2923: 'std::is_same' : 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::const_iterator' is not a valid template type argument for parameter '_Ty2'\n1>d:\\github\\jsondummy\\src\\json.hpp(427): error C2143: syntax error : missing ',' before 'std::integral_constant<bool,false>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(428): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(428): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(428): error C2146: syntax error : missing ',' before identifier 'not'\n1>d:\\github\\jsondummy\\src\\json.hpp(428): error C2065: 'not' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(428): warning C4346: 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::reverse_iterator' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(428): error C2923: 'std::is_same' : 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::reverse_iterator' is not a valid template type argument for parameter '_Ty2'\n1>d:\\github\\jsondummy\\src\\json.hpp(428): error C2143: syntax error : missing ',' before 'std::integral_constant<bool,false>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(429): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(429): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(429): error C2146: syntax error : missing ',' before identifier 'not'\n1>d:\\github\\jsondummy\\src\\json.hpp(429): error C2065: 'not' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(429): warning C4346: 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::const_reverse_iterator' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(429): error C2923: 'std::is_same' : 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::const_reverse_iterator' is not a valid template type argument for parameter '_Ty2'\n1>d:\\github\\jsondummy\\src\\json.hpp(429): error C2143: syntax error : missing ',' before 'std::integral_constant<bool,false>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(430): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(430): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(430): error C2146: syntax error : missing ',' before identifier 'not'\n1>d:\\github\\jsondummy\\src\\json.hpp(430): error C2065: 'not' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(430): error C2143: syntax error : missing ',' before 'std::is_same<V,ArrayType<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,>::iterator>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(431): warning C4346: 'std::is_same<V,ArrayType<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,>::iterator>::value' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(431): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(431): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(431): error C2146: syntax error : missing ',' before identifier 'not'\n1>d:\\github\\jsondummy\\src\\json.hpp(431): error C2065: 'not' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(431): error C2143: syntax error : missing ',' before 'std::is_same<V,ArrayType<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,>::const_iterator>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(432): warning C4346: 'std::is_same<V,ArrayType<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,>::const_iterator>::value' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(432): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(432): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(432): error C2143: syntax error : missing ',' before 'std::is_constructible<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,V::value_type>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(432): error C2977: 'std::enable_if' : too many template arguments\n1>          c:\\program files (x86)\\microsoft visual studio 12.0\\vc\\include\\xtr1common(67) : see declaration of 'std::enable_if'\n1>d:\\github\\jsondummy\\src\\json.hpp(433): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int\n1>d:\\github\\jsondummy\\src\\json.hpp(434): error C2535: 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::basic_json(const V &)' : member function already defined or declared\n1>          d:\\github\\jsondummy\\src\\json.hpp(404) : see declaration of 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::basic_json'\n1>d:\\github\\jsondummy\\src\\json.hpp(485): warning C4346: 'std::is_constructible<NumberIntegerType,T>::value' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(485): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(485): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(485): error C2143: syntax error : missing ',' before 'std::numeric_limits<T>::is_integer'\n1>d:\\github\\jsondummy\\src\\json.hpp(485): error C2977: 'std::enable_if' : too many template arguments\n1>          c:\\program files (x86)\\microsoft visual studio 12.0\\vc\\include\\xtr1common(67) : see declaration of 'std::enable_if'\n1>d:\\github\\jsondummy\\src\\json.hpp(486): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int\n1>d:\\github\\jsondummy\\src\\json.hpp(487): warning C4346: 'std::numeric_limits<T>::is_integer' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(487): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(502): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(594): warning C4346: 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::iterator' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(594): error C2923: 'std::is_same' : 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::iterator' is not a valid template type argument for parameter '_Ty2'\n1>d:\\github\\jsondummy\\src\\json.hpp(595): error C2146: syntax error : missing ',' before identifier 'or'\n1>d:\\github\\jsondummy\\src\\json.hpp(595): error C2065: 'or' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(595): warning C4346: 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::const_iterator' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(595): error C2923: 'std::is_same' : 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::const_iterator' is not a valid template type argument for parameter '_Ty2'\n1>d:\\github\\jsondummy\\src\\json.hpp(596): error C2143: syntax error : missing ',' before 'std::integral_constant<bool,false>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(596): error C2977: 'std::enable_if' : too many template arguments\n1>          c:\\program files (x86)\\microsoft visual studio 12.0\\vc\\include\\xtr1common(67) : see declaration of 'std::enable_if'\n1>d:\\github\\jsondummy\\src\\json.hpp(597): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int\n1>d:\\github\\jsondummy\\src\\json.hpp(748): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(761): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(762): warning C4346: 'std::is_nothrow_move_constructible<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::value_t>::value' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(762): error C2061: syntax error : identifier 'value'\n1>d:\\github\\jsondummy\\src\\json.hpp(767): error C2091: function returns function\n1>d:\\github\\jsondummy\\src\\json.hpp(779): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(838): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(851): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(857): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(863): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(869): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(875): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(881): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(887): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(893): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(906): warning C4346: 'std::is_convertible<ObjectType<StringType,nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,>::key_type,T::key_type>::value' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(906): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(906): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(907): error C2143: syntax error : missing ',' before 'std::is_convertible<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,T::mapped_type>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(907): error C2977: 'std::enable_if' : too many template arguments\n1>          c:\\program files (x86)\\microsoft visual studio 12.0\\vc\\include\\xtr1common(67) : see declaration of 'std::enable_if'\n1>d:\\github\\jsondummy\\src\\json.hpp(907): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int\n1>d:\\github\\jsondummy\\src\\json.hpp(943): warning C4346: 'std::is_convertible<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,T::value_type>::value' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(943): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(943): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(943): error C2146: syntax error : missing ',' before identifier 'not'\n1>d:\\github\\jsondummy\\src\\json.hpp(943): error C2065: 'not' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(943): error C2143: syntax error : missing ',' before 'std::is_same<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,T::value_type>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(944): warning C4346: 'std::is_same<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,T::value_type>::value' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(944): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(944): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(944): error C2146: syntax error : missing ',' before identifier 'not'\n1>d:\\github\\jsondummy\\src\\json.hpp(944): error C2065: 'not' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(944): error C2143: syntax error : missing ',' before 'std::is_arithmetic<T>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(945): warning C4346: 'std::is_arithmetic<T>::value' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(945): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(945): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(945): error C2146: syntax error : missing ',' before identifier 'not'\n1>d:\\github\\jsondummy\\src\\json.hpp(945): error C2065: 'not' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(945): error C2143: syntax error : missing ',' before 'std::is_convertible<std::string,T>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(946): warning C4346: 'std::is_convertible<std::string,T>::value' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(946): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(946): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(946): error C2146: syntax error : missing ',' before identifier 'not'\n1>d:\\github\\jsondummy\\src\\json.hpp(946): error C2065: 'not' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(947): error C2143: syntax error : missing ',' before 'nlohmann::has_mapped_type<T>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(947): error C2977: 'std::enable_if' : too many template arguments\n1>          c:\\program files (x86)\\microsoft visual studio 12.0\\vc\\include\\xtr1common(67) : see declaration of 'std::enable_if'\n1>d:\\github\\jsondummy\\src\\json.hpp(947): fatal error C1003: error count exceeds 100; stopping compilation\n========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========\n```\n\nThis is on VS2013, and as far as I know it supports [90% of the standard](https://msdn.microsoft.com/en-us/library/hh567368.aspx?f=255&MSPPError=-2147217396) (but not some of what you're using here, like `noexcept`).\n\nAre you planning to support Visual Studio/Windows some time later on?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/61", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/61/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/61/events", "html_url": "https://github.com/nlohmann/json/issues/61", "id": 70819875, "node_id": "MDU6SXNzdWU3MDgxOTg3NQ==", "number": 61, "title": "Complete brief documentation", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-24T23:22:42Z", "updated_at": "2015-06-22T21:30:58Z", "closed_at": "2015-06-22T21:30:58Z", "author_association": "OWNER", "body": "The following functions are not yet documented:\n- [ ] type\n- [ ] push_back\n- [ ] operator+=\n- [ ] swap\n- [ ] find\n- [ ] count\n- [ ] dump\n- [ ] parse\n- [ ] operator==, operator!=, operator<, operator<=, operator>, operator>=\n- [ ] std::swap\n- [ ] std::hash\n- [ ] operator<<, operator>>\n- [ ] operator\"\" _json\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/60", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/60/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/60/events", "html_url": "https://github.com/nlohmann/json/issues/60", "id": 69392571, "node_id": "MDU6SXNzdWU2OTM5MjU3MQ==", "number": 60, "title": "Double quotation mark is not parsed correctly", "user": {"login": "miloyip", "id": 1195774, "node_id": "MDQ6VXNlcjExOTU3NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1195774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miloyip", "html_url": "https://github.com/miloyip", "followers_url": "https://api.github.com/users/miloyip/followers", "following_url": "https://api.github.com/users/miloyip/following{/other_user}", "gists_url": "https://api.github.com/users/miloyip/gists{/gist_id}", "starred_url": "https://api.github.com/users/miloyip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miloyip/subscriptions", "organizations_url": "https://api.github.com/users/miloyip/orgs", "repos_url": "https://api.github.com/users/miloyip/repos", "events_url": "https://api.github.com/users/miloyip/events{/privacy}", "received_events_url": "https://api.github.com/users/miloyip/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2015-04-19T06:36:04Z", "updated_at": "2015-04-24T20:07:04Z", "closed_at": "2015-04-24T20:07:04Z", "author_association": "NONE", "body": "In JSON, double quotation mark in a JSON string is escaped as `\\\"`, such as\n\n``` js\n[\"\\\"foo\\\"\"]\n```\n\nshould be escaped as `\"foo\"`. But this library did not handle it and parsed it as `\\\"foo\\\"`.\n\nI reproduced the bug with the following test case:\n\n``` cpp\n    SECTION(\"escape_dobulequote\")\n    {\n        auto s = \"[\\\"\\\\\\\"foo\\\\\\\"\\\"]\";\n        json j = json::parse(s);\n        CHECK(j == json({\"\\\"foo\\\"\"}));\n    }\n```\n\nResults:\n\n```\ntest/unit.cpp:6351: FAILED:\n  CHECK( j == json({\"\\\"foo\\\"\"}) )\nwith expansion:\n  [\"\\\\\\\"foo\\\\\\\"\"] == \"\\\"foo\\\"\"\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/59", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/59/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/59/events", "html_url": "https://github.com/nlohmann/json/pull/59", "id": 68387177, "node_id": "MDExOlB1bGxSZXF1ZXN0MzMyNjA0NTc=", "number": 59, "title": "Fix compilation of json_unit with GCC 5", "user": {"login": "dkopecek", "id": 1353140, "node_id": "MDQ6VXNlcjEzNTMxNDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1353140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkopecek", "html_url": "https://github.com/dkopecek", "followers_url": "https://api.github.com/users/dkopecek/followers", "following_url": "https://api.github.com/users/dkopecek/following{/other_user}", "gists_url": "https://api.github.com/users/dkopecek/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkopecek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkopecek/subscriptions", "organizations_url": "https://api.github.com/users/dkopecek/orgs", "repos_url": "https://api.github.com/users/dkopecek/repos", "events_url": "https://api.github.com/users/dkopecek/events{/privacy}", "received_events_url": "https://api.github.com/users/dkopecek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-14T14:07:23Z", "updated_at": "2015-04-15T07:44:58Z", "closed_at": "2015-04-15T06:53:40Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/59", "html_url": "https://github.com/nlohmann/json/pull/59", "diff_url": "https://github.com/nlohmann/json/pull/59.diff", "patch_url": "https://github.com/nlohmann/json/pull/59.patch"}, "body": "Addressing:\n\n```\n+ make json_unit\ng++ -std=c++11  -Wall -Wextra -pedantic -Weffc++ -Wcast-align -Wcast-qual -Wctor-dtor-privacy -Wdisabled-optimization -Wformat=2 -Winit-self -Wmissing-declarations -Wmissing-include-dirs -Wold-style-cast -Woverloaded-virtual -Wredundant-decls -Wshadow -Wsign-conversion -Wsign-promo -Wstrict-overflow=5 -Wswitch -Wundef -Wno-unused -Wnon-virtual-dtor -Wreorder -Wdeprecated -Wfloat-equal  -I src -I test -Dprivate=public test/unit.cpp  -o json_unit\nIn file included from test/catch.hpp:65:0,\n                 from test/unit.cpp:11:\n/usr/include/c++/5.0.0/sstream:300:7: error: 'struct std::__cxx11::basic_stringbuf<_CharT, _Traits, _Alloc>::__xfer_bufptrs' redeclared with different access\n       struct __xfer_bufptrs\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/58", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/58/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/58/events", "html_url": "https://github.com/nlohmann/json/issues/58", "id": 67934042, "node_id": "MDU6SXNzdWU2NzkzNDA0Mg==", "number": 58, "title": "Get coverage back to 100%", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-12T16:50:51Z", "updated_at": "2015-05-09T13:22:54Z", "closed_at": "2015-05-09T13:22:54Z", "author_association": "OWNER", "body": "There are currently some lines that are not covered by test cases:\n- [x] https://coveralls.io/builds/2320536/source?filename=src%2Fjson.hpp#L4168\n- [x] https://coveralls.io/builds/2320536/source?filename=src%2Fjson.hpp#L4152\n- [x] https://coveralls.io/builds/2320536/source?filename=src%2Fjson.hpp#L4185\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/57", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/57/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/57/events", "html_url": "https://github.com/nlohmann/json/issues/57", "id": 67416401, "node_id": "MDU6SXNzdWU2NzQxNjQwMQ==", "number": 57, "title": "erase elements using iterators", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2015-04-09T17:53:13Z", "updated_at": "2016-11-13T22:38:10Z", "closed_at": "2015-04-11T13:48:31Z", "author_association": "OWNER", "body": "Just as other containers, iterators should be used to identify the element to be deleted from a container.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/56", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/56/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/56/events", "html_url": "https://github.com/nlohmann/json/issues/56", "id": 67087425, "node_id": "MDU6SXNzdWU2NzA4NzQyNQ==", "number": 56, "title": "Removing item from array", "user": {"login": "drewpts", "id": 10561098, "node_id": "MDQ6VXNlcjEwNTYxMDk4", "avatar_url": "https://avatars2.githubusercontent.com/u/10561098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewpts", "html_url": "https://github.com/drewpts", "followers_url": "https://api.github.com/users/drewpts/followers", "following_url": "https://api.github.com/users/drewpts/following{/other_user}", "gists_url": "https://api.github.com/users/drewpts/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewpts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewpts/subscriptions", "organizations_url": "https://api.github.com/users/drewpts/orgs", "repos_url": "https://api.github.com/users/drewpts/repos", "events_url": "https://api.github.com/users/drewpts/events{/privacy}", "received_events_url": "https://api.github.com/users/drewpts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-04-08T09:22:10Z", "updated_at": "2016-11-13T22:38:09Z", "closed_at": "2015-04-09T16:59:29Z", "author_association": "NONE", "body": "Hi. Thanks for great lib!\nIs there support for removing item/items from array?\n\nE.g.:\n\n``` cpp\n        json j;\n        j[\"name\"] = { \"testname\", \"yetanothername\" };\n        j[\"name\"].erase(\"testname\");\n```\n\n```\n$ ./a.out \nterminate called after throwing an instance of 'std::runtime_error'\nwhat():  cannot use at with array\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/55", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/55/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/55/events", "html_url": "https://github.com/nlohmann/json/issues/55", "id": 66730656, "node_id": "MDU6SXNzdWU2NjczMDY1Ng==", "number": 55, "title": "Serialize/Deserialize like PHP?", "user": {"login": "irazasyed", "id": 1915268, "node_id": "MDQ6VXNlcjE5MTUyNjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1915268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irazasyed", "html_url": "https://github.com/irazasyed", "followers_url": "https://api.github.com/users/irazasyed/followers", "following_url": "https://api.github.com/users/irazasyed/following{/other_user}", "gists_url": "https://api.github.com/users/irazasyed/gists{/gist_id}", "starred_url": "https://api.github.com/users/irazasyed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irazasyed/subscriptions", "organizations_url": "https://api.github.com/users/irazasyed/orgs", "repos_url": "https://api.github.com/users/irazasyed/repos", "events_url": "https://api.github.com/users/irazasyed/events{/privacy}", "received_events_url": "https://api.github.com/users/irazasyed/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2015-04-06T23:30:16Z", "updated_at": "2017-01-27T06:08:17Z", "closed_at": "2015-04-09T17:05:10Z", "author_association": "NONE", "body": "Hi,\n\nIs there a way we could Serialize the output like PHP's [Serialize](http://php.net/manual/en/function.serialize.php) version?\n\nCurrently it outputs in one line as a string. Would be helpful if it could support additional method such as this one.\n\nLet me know!\n\nThanks.\n\nP.S Kudos for the awesome work you've done. Very nice, clean and easier to use!\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/54", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/54/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/54/events", "html_url": "https://github.com/nlohmann/json/issues/54", "id": 66726604, "node_id": "MDU6SXNzdWU2NjcyNjYwNA==", "number": 54, "title": "Numbers as keys", "user": {"login": "ivan-krukov", "id": 1881263, "node_id": "MDQ6VXNlcjE4ODEyNjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1881263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivan-krukov", "html_url": "https://github.com/ivan-krukov", "followers_url": "https://api.github.com/users/ivan-krukov/followers", "following_url": "https://api.github.com/users/ivan-krukov/following{/other_user}", "gists_url": "https://api.github.com/users/ivan-krukov/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivan-krukov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivan-krukov/subscriptions", "organizations_url": "https://api.github.com/users/ivan-krukov/orgs", "repos_url": "https://api.github.com/users/ivan-krukov/repos", "events_url": "https://api.github.com/users/ivan-krukov/events{/privacy}", "received_events_url": "https://api.github.com/users/ivan-krukov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-04-06T23:05:49Z", "updated_at": "2016-11-13T22:38:09Z", "closed_at": "2015-04-08T20:35:42Z", "author_association": "NONE", "body": "I know this isn't strictly `json`-compliant, but I would love to have numbers as keys.\n\nSay I try:\n\n```\nstd::map data<double, double> = {{1.0, 2.0}, {3.0, 4.0}};\n```\n\nI would like to be able to:\n\n```\njson j_data(data);\n```\n\nIn order to get:\n\n```\n{1.0:2.0, 3.0:4.0}\n```\n\nI think the strength of `json` is that it can take a little bit of abuse.\nThanks.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/53", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/53/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/53/events", "html_url": "https://github.com/nlohmann/json/issues/53", "id": 66522543, "node_id": "MDU6SXNzdWU2NjUyMjU0Mw==", "number": 53, "title": "Why are elements alphabetized on key while iterating?", "user": {"login": "luxe", "id": 1312081, "node_id": "MDQ6VXNlcjEzMTIwODE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1312081?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luxe", "html_url": "https://github.com/luxe", "followers_url": "https://api.github.com/users/luxe/followers", "following_url": "https://api.github.com/users/luxe/following{/other_user}", "gists_url": "https://api.github.com/users/luxe/gists{/gist_id}", "starred_url": "https://api.github.com/users/luxe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luxe/subscriptions", "organizations_url": "https://api.github.com/users/luxe/orgs", "repos_url": "https://api.github.com/users/luxe/repos", "events_url": "https://api.github.com/users/luxe/events{/privacy}", "received_events_url": "https://api.github.com/users/luxe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-06T04:21:24Z", "updated_at": "2015-04-08T20:32:13Z", "closed_at": "2015-04-08T20:32:13Z", "author_association": "CONTRIBUTOR", "body": "Let's say I have the json from the example readme:\n\n```\n  nlohmann::json all = {\n  {\"pi\", 3.141},\n  {\"happy\", true},\n  {\"name\", \"Niels\"},\n  {\"nothing\", nullptr},\n  {\"answer\", {\n    {\"everything\", 42}\n  }},\n  {\"list\", {1, 0, 2}},\n  {\"object\", {\n    {\"currency\", \"USD\"},\n    {\"value\", 42.99}\n  }}\n};\n```\n\nI will iterate over it the following way:\n\n```\n  for (nlohmann::json::iterator it = all.begin(); it != all.end(); ++it) {\n    std::cout << it.key() << std::endl;\n  }\n```\n\nI would expect this:\n\n```\npi\nhappy\nname\nnothing\nanswer\nlist\nobject\n```\n\nInstead, I get:\n\n```\nanswer\nhappy\nlist\nname\nnothing\nobject\npi\n```\n\nWhy is this the default?  Can it be turned off?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/52", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/52/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/52/events", "html_url": "https://github.com/nlohmann/json/issues/52", "id": 64583856, "node_id": "MDU6SXNzdWU2NDU4Mzg1Ng==", "number": 52, "title": "Document erase, count, and iterators key and value", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-03-26T17:04:58Z", "updated_at": "2016-11-13T22:38:09Z", "closed_at": "2015-03-27T16:11:11Z", "author_association": "NONE", "body": "Add examples in the documentation for:\n- erase(iterator)\n- count(iterator)\n- and for the usage of iterators key()/value() member functions\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/51", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/51/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/51/events", "html_url": "https://github.com/nlohmann/json/issues/51", "id": 64490007, "node_id": "MDU6SXNzdWU2NDQ5MDAwNw==", "number": 51, "title": "Do not use std::to_string", "user": {"login": "krisztiantobias", "id": 11661824, "node_id": "MDQ6VXNlcjExNjYxODI0", "avatar_url": "https://avatars0.githubusercontent.com/u/11661824?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krisztiantobias", "html_url": "https://github.com/krisztiantobias", "followers_url": "https://api.github.com/users/krisztiantobias/followers", "following_url": "https://api.github.com/users/krisztiantobias/following{/other_user}", "gists_url": "https://api.github.com/users/krisztiantobias/gists{/gist_id}", "starred_url": "https://api.github.com/users/krisztiantobias/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krisztiantobias/subscriptions", "organizations_url": "https://api.github.com/users/krisztiantobias/orgs", "repos_url": "https://api.github.com/users/krisztiantobias/repos", "events_url": "https://api.github.com/users/krisztiantobias/events{/privacy}", "received_events_url": "https://api.github.com/users/krisztiantobias/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2015-03-26T10:24:28Z", "updated_at": "2015-03-27T16:13:12Z", "closed_at": "2015-03-27T16:13:12Z", "author_association": "NONE", "body": "This is simply wrong:\n\n``` cpp\n    case (value_t::number_float):\n    {\n        return std::to_string(m_value.number_float);\n    }\n```\n\nThe to_string use std::locale what can change the point to comma (happened with us, because in QT the QApplication create change this) what is not good for json. You have to use always point instead of comma (json rpc standard)\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/50", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/50/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/50/events", "html_url": "https://github.com/nlohmann/json/issues/50", "id": 63954027, "node_id": "MDU6SXNzdWU2Mzk1NDAyNw==", "number": 50, "title": "Supported compilers", "user": {"login": "suy", "id": 1200609, "node_id": "MDQ6VXNlcjEyMDA2MDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1200609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suy", "html_url": "https://github.com/suy", "followers_url": "https://api.github.com/users/suy/followers", "following_url": "https://api.github.com/users/suy/following{/other_user}", "gists_url": "https://api.github.com/users/suy/gists{/gist_id}", "starred_url": "https://api.github.com/users/suy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suy/subscriptions", "organizations_url": "https://api.github.com/users/suy/orgs", "repos_url": "https://api.github.com/users/suy/repos", "events_url": "https://api.github.com/users/suy/events{/privacy}", "received_events_url": "https://api.github.com/users/suy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2015-03-24T09:53:39Z", "updated_at": "2016-11-13T22:38:09Z", "closed_at": "2015-04-09T17:21:47Z", "author_association": "NONE", "body": "Hi.\n\nThere is no documentation on what compilers are supported, or which C++ features are required. I've tried to include the header in a project with MSVC 2013, and I get plenty of compile errors (with MinGW it compiles fine). I know MSVC might not have good enough C++11 support, so that's somewhat expected. I'm wondering, though, if anybody has attempted some newer pre-release of MSVC and if it is worth it at all trying to get it compile, sending patches, etc.\n\nThank you.\n\nPD: In case it's useful, the first error I have is with the declaration of using iterator = basic_json::iterator:\n\n```\nc:\\users\\alex\\documents\\helloworld\\json/src/json.hpp(142) : error C2061: syntax error : identifier 'iterator'\n        c:\\users\\alex\\documents\\helloworld\\json/src/json.hpp(4335) : see reference to class template instantiation 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,Allocator>' being compiled\nc:\\users\\alex\\documents\\helloworld\\json/src/json.hpp(142) : error C2238: unexpected token(s) preceding ';'\n```\n\nLater on I get plenty of unrecognized noexcept. The later could be worked around with a macro, I think, but I have no idea on the former, or other template magic involved.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/49", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/49/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/49/events", "html_url": "https://github.com/nlohmann/json/issues/49", "id": 62529139, "node_id": "MDU6SXNzdWU2MjUyOTEzOQ==", "number": 49, "title": "Confused about iterating through json objects", "user": {"login": "DanTheColoradan", "id": 3826143, "node_id": "MDQ6VXNlcjM4MjYxNDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3826143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DanTheColoradan", "html_url": "https://github.com/DanTheColoradan", "followers_url": "https://api.github.com/users/DanTheColoradan/followers", "following_url": "https://api.github.com/users/DanTheColoradan/following{/other_user}", "gists_url": "https://api.github.com/users/DanTheColoradan/gists{/gist_id}", "starred_url": "https://api.github.com/users/DanTheColoradan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DanTheColoradan/subscriptions", "organizations_url": "https://api.github.com/users/DanTheColoradan/orgs", "repos_url": "https://api.github.com/users/DanTheColoradan/repos", "events_url": "https://api.github.com/users/DanTheColoradan/events{/privacy}", "received_events_url": "https://api.github.com/users/DanTheColoradan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-03-17T22:06:47Z", "updated_at": "2015-03-26T17:03:35Z", "closed_at": "2015-03-26T17:01:18Z", "author_association": "NONE", "body": "If I have:\n\n``` .json\n{\n  \"england\": {\n    \"name\": \"euro\",\n    \"value\": 57.99\n  },\n  \"mexico\": {\n    \"name\": \"peso\",\n    \"value\": 31.99\n  },\n  \"us\": {\n    \"name\": \"USD\",\n    \"value\": 42.99\n  }\n}\n```\n\nAnd I want to iterate through each, how would I do so?\n\nMy attempt so far has been similar to the following:\n\n``` .cpp\nstd::ifstream input_file( const string file_path );\nnlohmann::json currencies_json;\ncurrencies_json << input_file;\ninput_file.close();\n\nunordered_map <string, currency_class> currencies;\nfor ( const auto currency_json: currencies_json ) {\n    currency_class new_currency;\n\n    new_currency[ \"country\" ] = ???\n    new_currency[ \"name\" ] = ???\n    new_currency[ \"value\"] = ???\n\n    currencies[ country ] = new_currency;\n}\n```\n\nI've tried it a a few ways including - for example - creating a string for `new_currency[ \"country\" ]` first and then storing it in it like `new_currency[ \"country\" ] = my_string`, but I get errors such as:\n\n``` .sh\nno member named 'key' in 'nlohmann::basic_json<std::map, std::vector, std::__1::basic_string<char>, bool, long long, double, std::allocator>'\n```\n\nor\n\n``` .sh\n[....]:1073:20: error: 'm_it' is a private member of 'nlohmann::basic_json<std::map, std::vector, std::__1::basic_string<char>,\n      bool, long long, double, std::allocator>::const_iterator'\n           result.m_it.object_iterator = m_value.object->find(key);\n                   ^\n[...]:89:32: note: in instantiation of member function 'nlohmann::basic_json<std::map, std::vector, std::__1::basic_string<char>, bool, long long, double,\n      std::allocator>::find' requested here\n                const auto iterator = currencies.find(\"country\");\n                                             ^\n[...]/build/dependencies/json-prefix/src/json/src/json.hpp:3007:96: note: declared private here\n        internal_iterator<typename array_t::const_iterator, typename object_t::const_iterator> m_it;\n```\n\nCould you provide some guidance? I'd really appreciate it!\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/48", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/48/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/48/events", "html_url": "https://github.com/nlohmann/json/issues/48", "id": 60546129, "node_id": "MDU6SXNzdWU2MDU0NjEyOQ==", "number": 48, "title": "Use non-member begin/end", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2015-03-10T18:27:35Z", "updated_at": "2016-11-13T22:38:09Z", "closed_at": "2015-03-22T16:30:56Z", "author_association": "NONE", "body": "Right now the library uses member-functions `.begin()` and `.end()` when serializing sequences: see e.g. [here](https://github.com/nlohmann/json/blob/master/src/json.hpp#L441). \n\nAs a consequence some types cannot be serialized. \n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/47", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/47/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/47/events", "html_url": "https://github.com/nlohmann/json/issues/47", "id": 60523518, "node_id": "MDU6SXNzdWU2MDUyMzUxOA==", "number": 47, "title": "Erase key", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-03-10T16:02:41Z", "updated_at": "2016-11-13T22:38:09Z", "closed_at": "2015-03-24T15:51:01Z", "author_association": "NONE", "body": "Right now there is no way of erasing a key.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/46", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/46/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/46/events", "html_url": "https://github.com/nlohmann/json/issues/46", "id": 60523361, "node_id": "MDU6SXNzdWU2MDUyMzM2MQ==", "number": 46, "title": "Key iterator", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 19, "created_at": "2015-03-10T16:01:55Z", "updated_at": "2016-11-13T22:38:09Z", "closed_at": "2015-03-26T17:01:12Z", "author_association": "NONE", "body": "When iterating over a `json` object, e.g. using a range-based for loop, one only gets the values, and it is impossible right now to get the key of each value. It would be nice to be able to iterate over the keys, since this allows you to get the value afterwards if you want too. \n\nAnother alternative is a key.value pair iterator like map.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/45", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/45/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/45/events", "html_url": "https://github.com/nlohmann/json/issues/45", "id": 60506866, "node_id": "MDU6SXNzdWU2MDUwNjg2Ng==", "number": 45, "title": "Add count member function", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2015-03-10T14:23:22Z", "updated_at": "2016-11-13T22:38:09Z", "closed_at": "2015-03-22T18:07:48Z", "author_association": "NONE", "body": "A typical operation is to find if a `json` object has a given key, this is typically done like:\n\n``` c++\njson j;\nbool has_key = j.find(\"key\") != j.end();\n```\n\nThe standard containers (`std::map`, `std::set`,...) offer a `count` member function that counts the number of occurrences of a key, such that one can:\n\n``` c++\nstd::map<std::string, int> m;\nbool has_key = m.count(\"key\");  // -> count == 0? false : true\n```\n\nIt would be nice to have something similar since this is a very common operation.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/44", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/44/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/44/events", "html_url": "https://github.com/nlohmann/json/issues/44", "id": 59815590, "node_id": "MDU6SXNzdWU1OTgxNTU5MA==", "number": 44, "title": "Problem getting vector (array) of strings", "user": {"login": "amirmasoudabdol", "id": 1290841, "node_id": "MDQ6VXNlcjEyOTA4NDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1290841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amirmasoudabdol", "html_url": "https://github.com/amirmasoudabdol", "followers_url": "https://api.github.com/users/amirmasoudabdol/followers", "following_url": "https://api.github.com/users/amirmasoudabdol/following{/other_user}", "gists_url": "https://api.github.com/users/amirmasoudabdol/gists{/gist_id}", "starred_url": "https://api.github.com/users/amirmasoudabdol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amirmasoudabdol/subscriptions", "organizations_url": "https://api.github.com/users/amirmasoudabdol/orgs", "repos_url": "https://api.github.com/users/amirmasoudabdol/repos", "events_url": "https://api.github.com/users/amirmasoudabdol/events{/privacy}", "received_events_url": "https://api.github.com/users/amirmasoudabdol/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2015-03-04T15:44:35Z", "updated_at": "2015-04-09T08:02:49Z", "closed_at": "2015-04-08T20:31:55Z", "author_association": "NONE", "body": "Considering the JSON below,\n\n``` json\n{\n     \"names\": [\"Tim\", \"Tom\"],\n     \"num\": [1, 2]\n}\n```\n\n I want to get a vector of string. I realized that I could only use `auto a = json[\"name\"]` and then process it using for-range loop. However, if I want to explicitly define the return type then I will get an error. For instance, both `vector<string> names = j[\"names\"]` and `vector<string> names = j[\"names\"].get<vector<string>>()` will give me an error:\n\n```\n./json.hpp:829:24: error: no matching constructor for initialization of 'std::__1::vector<std::__1::basic_string<char>,\n      std::__1::allocator<std::__1::basic_string<char> > >'\n                return T(m_value.array->begin(), m_value.array->end());\n```\n\nI can see that json library couldn't cast to `vector<string>`; however, it will work if I want to get `num` even explicitly like this: `vector<float> f = j[\"num\"].get<vector<float>>()`.\n\nNow, I'm wondering if I am doing it wrong or it's not implemented?\n\nThanks,\nAmir.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/43", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/43/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/43/events", "html_url": "https://github.com/nlohmann/json/issues/43", "id": 59796735, "node_id": "MDU6SXNzdWU1OTc5NjczNQ==", "number": 43, "title": "Compilation error due to assuming that private=public", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2015-03-04T13:23:53Z", "updated_at": "2015-03-22T18:18:25Z", "closed_at": "2015-03-22T18:18:25Z", "author_association": "NONE", "body": "The snippet to reproduce the error:\n\n``` c++\n  struct A {\n    nlohmann::json j;\n    auto has_entry(std::string n) {\n      return j.find(n) != j.end() ? true : false;\n    }\n  };\n```\n\nwhat the error looks like:\n\n``` shell\nsrc/json.hpp:1073:20: error: 'm_it' is a private member of 'nlohmann::basic_json<std::map, std::vector, std::__1::basic_string<char>, bool, long long,\n      double, std::allocator>::const_iterator'\n            result.m_it.object_iterator = m_value.object->find(key);\n                   ^\n```\n\nThis is not catched by the unit tests because they are compiled by defining `private=public`. \n\nA \"better\" way to do that could be  to have a separate file only for those tests that \"need\" `private=public`.\n\nThis _might be_ clang 3.6 specific, since I'm the only one who seems to be having problems. \n\nI worked around this issue by including the library as follows:\n\n``` c++\n#pragma clang diagnostic push\n#pragma clang diagnostic ignored \"-Wfloat-equal\"\n#pragma clang diagnostic ignored \"-Wdeprecated\"\n#define private public\n#include <json.hpp>\n#define private private\n#pragma clang diagnostic pop\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/42", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/42/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/42/events", "html_url": "https://github.com/nlohmann/json/issues/42", "id": 59792155, "node_id": "MDU6SXNzdWU1OTc5MjE1NQ==", "number": 42, "title": "Use of deprecated implicit copy constructor", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2015-03-04T12:38:15Z", "updated_at": "2015-03-23T22:04:07Z", "closed_at": "2015-03-23T22:03:54Z", "author_association": "NONE", "body": "Appears when `-Wdeprecated` is enabled on clang.\n\n``` shell\nsrc/json.hpp:2076:26: warning: definition of implicit copy constructor for 'iterator' is deprecated because it has a user-declared copy assignment\n      operator [-Wdeprecated]\n        inline iterator& operator=(const iterator& other) noexcept\n                         ^\ntest/unit.cpp:2471:37: note: implicit copy constructor for 'iterator' first required here\n                json::iterator it = j.begin();\n\nIn file included from test/unit.cpp:13:\nsrc/json.hpp:2579:32: warning: definition of implicit copy constructor for 'const_iterator' is deprecated because it has a user-declared copy\n      assignment operator [-Wdeprecated]\n        inline const_iterator& operator=(const const_iterator& other) noexcept\n                               ^\ntest/unit.cpp:2496:38: note: implicit copy constructor for 'const_iterator' first required here\n                json::const_iterator it = j_const.begin();\n                                     ^\n```\n\nThere are also some warnings involving floating point comparisons when `Wfloat-equal` is enabled:\n\n``` shell\nsrc/json.hpp:1567:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n                    return lhs.m_value.number_float == static_cast<number_float_t>(rhs.m_value.number_integer);\n                           ~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\ntest/unit.cpp:127:21: note: in instantiation of member function 'nlohmann::operator==' requested here\n            CHECK(j == j_reference);\n                    ^\ntest/catch.hpp:8925:44: note: expanded from macro 'CHECK'\n#define CHECK( expr ) INTERNAL_CATCH_TEST( expr, Catch::ResultDisposition::ContinueOnFailure, \"CHECK\" )\n                                           ^\ntest/catch.hpp:1484:39: note: expanded from macro 'INTERNAL_CATCH_TEST'\n    } while( Catch::isTrue( false && (expr) ) ) // expr here is never evaluated at runtime but it forces the compiler to give it a look\n                                      ^\nIn file included from test/unit.cpp:13:\nsrc/json.hpp:1571:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n                    return lhs.m_value.number_float == rhs.m_value.number_float;\n                           ~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~~~~~~~~~~~~~~~~~~~~~\nsrc/json.hpp:4235:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n                    if (float_val == int_val)\n                        ~~~~~~~~~ ^  ~~~~~~~\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/41", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/41/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/41/events", "html_url": "https://github.com/nlohmann/json/pull/41", "id": 59564873, "node_id": "MDExOlB1bGxSZXF1ZXN0MzAzMjkxMzM=", "number": 41, "title": "Add parser callback with the ability to filter results.", "user": {"login": "aburgh", "id": 191582, "node_id": "MDQ6VXNlcjE5MTU4Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/191582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aburgh", "html_url": "https://github.com/aburgh", "followers_url": "https://api.github.com/users/aburgh/followers", "following_url": "https://api.github.com/users/aburgh/following{/other_user}", "gists_url": "https://api.github.com/users/aburgh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aburgh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aburgh/subscriptions", "organizations_url": "https://api.github.com/users/aburgh/orgs", "repos_url": "https://api.github.com/users/aburgh/repos", "events_url": "https://api.github.com/users/aburgh/events{/privacy}", "received_events_url": "https://api.github.com/users/aburgh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 14, "created_at": "2015-03-02T22:49:01Z", "updated_at": "2015-05-10T21:47:51Z", "closed_at": "2015-05-06T17:51:03Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/41", "html_url": "https://github.com/nlohmann/json/pull/41", "diff_url": "https://github.com/nlohmann/json/pull/41.diff", "patch_url": "https://github.com/nlohmann/json/pull/41.patch"}, "body": "This request builds on the \"incremental\" pull request. I separated the two in case you find this change objectionable. The changes implement a callback to a user-provided function (which can be a closure) to notify the user of key parser events: entering object and array elements, closing object and array elements, parsing an object key, and parsing a value. This enables processing elements as they are parsed, for example to provide progress feedback. More importantly, the user function returns a bool to indicate whether to keep the value. This can be used to filter the accumulated elements to reduce memory consumption. There is a default callback provided, so it existing code should compile and work as before.\n\nBelow is an example use case. It parses a JSON file that consists of an array (which is inside a simple object) of a large number of objects. The example just pretty-prints the result, discarding all dictionaries at a depth of 2, but it could do more interesting processing. Without the callback, a 4.1 MB test file uses 12.5 MB of memory. With the callback, it peaks at around 680 KB, most of which is process overhead.\n\n``` C++\nusing namespace std;\nusing json = nlohmann::json;\n\nstatic const auto tab = '\\t';\nifstream stream(\"/tmp/test/json/data.json\");\n\n...\n{\n        bool keyed = false;\n\n        json j = json::parse(stream, [&keyed] (int depth, json::parse_event_t event, const json& element) -> bool {\n\n            switch (event) {\n                case json::parse_event_t::object_start:\n                    if (not keyed)\n                        for (int i = 0; i < depth; i++) cout << tab;\n                    cout << '{' << endl;\n                    keyed = false;\n                    break;\n\n                case json::parse_event_t::object_end:\n                    for (int i = 0; i < depth; i++) cout << tab;\n                    cout << '}' << endl;\n                    if (depth == 2) return false;\n                    break;\n\n                case json::parse_event_t::array_start:\n                    if (not keyed)\n                        for (int i = 0; i < depth; i++) cout << tab;\n                    cout << '[' << endl;\n                    keyed = false;\n                    break;\n\n                case json::parse_event_t::array_end:\n                    for (int i = 0; i < depth; i++) cout << tab;\n                    cout << ']' << endl;\n                    break;\n\n                case json::parse_event_t::key:\n                    for (int i = 0; i < depth; i++) cout << tab;\n                    cout << element << \" = \";\n                    keyed = true;\n                    break;\n\n                case json::parse_event_t::value:\n                    if (keyed) {\n                        cout << element << endl;\n                    }\n                    else {\n                        for (int i = 0; i < depth; i++) cout << tab;\n                        cout << element << endl;\n                    }\n                    keyed = false;\n                    break;\n\n                default:\n                    break;\n            }\n            return true;\n        });\n    }\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/40", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/40/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/40/events", "html_url": "https://github.com/nlohmann/json/pull/40", "id": 59393102, "node_id": "MDExOlB1bGxSZXF1ZXN0MzAyNDA4ODA=", "number": 40, "title": "Parse streams incrementally.", "user": {"login": "aburgh", "id": 191582, "node_id": "MDQ6VXNlcjE5MTU4Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/191582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aburgh", "html_url": "https://github.com/aburgh", "followers_url": "https://api.github.com/users/aburgh/followers", "following_url": "https://api.github.com/users/aburgh/following{/other_user}", "gists_url": "https://api.github.com/users/aburgh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aburgh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aburgh/subscriptions", "organizations_url": "https://api.github.com/users/aburgh/orgs", "repos_url": "https://api.github.com/users/aburgh/repos", "events_url": "https://api.github.com/users/aburgh/events{/privacy}", "received_events_url": "https://api.github.com/users/aburgh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-03-01T11:48:49Z", "updated_at": "2015-05-10T21:47:52Z", "closed_at": "2015-03-24T16:57:40Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/40", "html_url": "https://github.com/nlohmann/json/pull/40", "diff_url": "https://github.com/nlohmann/json/pull/40.diff", "patch_url": "https://github.com/nlohmann/json/pull/40.patch"}, "body": "I did not update `src/json.hpp` because I get different indentation results than the existing version.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/39", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/39/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/39/events", "html_url": "https://github.com/nlohmann/json/issues/39", "id": 59371044, "node_id": "MDU6SXNzdWU1OTM3MTA0NA==", "number": 39, "title": "Printing attribute names", "user": {"login": "luxe", "id": 1312081, "node_id": "MDQ6VXNlcjEzMTIwODE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1312081?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luxe", "html_url": "https://github.com/luxe", "followers_url": "https://api.github.com/users/luxe/followers", "following_url": "https://api.github.com/users/luxe/following{/other_user}", "gists_url": "https://api.github.com/users/luxe/gists{/gist_id}", "starred_url": "https://api.github.com/users/luxe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luxe/subscriptions", "organizations_url": "https://api.github.com/users/luxe/orgs", "repos_url": "https://api.github.com/users/luxe/repos", "events_url": "https://api.github.com/users/luxe/events{/privacy}", "received_events_url": "https://api.github.com/users/luxe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2015-03-01T01:44:00Z", "updated_at": "2016-11-13T22:38:20Z", "closed_at": "2015-03-26T17:01:31Z", "author_association": "CONTRIBUTOR", "body": "What would be the best way to iterate over a json object and print the attribute names?  \nMy goal would be to have something like this:  \n\n**example json:**  \n\n``` json\n{\n\"example\": {\n    \"a\": \"hello\",\n    \"b\": \"world\",\n    \"c\": \"text\"\n  }\n}\n```\n\n**example printing code:**  \n\n``` cpp\nauto j = nlohmann::json::parse(Read_Entire_File_Into_String(\"example.json\"));\nauto element = j[\"example\"];\nfor (auto const& it: element) {\n    std::cout << it.attribute_name() << std::endl;\n}\n// I made up 'Read_Entire_File_Into_String', but it does what you'd expect.\n// the attribute_name() method doesn't exist, but I wish that it had.\n```\n\n**example results:**  \n\n```\na\nb\nc\n```\n\nNot everything has an attribute name, in which case, it could return an empty string, throw an exception, or return std::optional.  \n\nI thought this might be easy to implement, but it appears that all of the attribute names are stored in the parent object, which means that when we iterate over an object, each iterator points to an object that has no way of finding out its own attribute name.  \n\nfor example, if I were to edit `json.hpp` and give the `basic_json` class this public member function:  \n\n``` cpp\n    inline string_t attribute_name() const noexcept\n    {\n        std::string str;\n        if (m_type == value_t::object){\n            for (auto i = m_value.object->cbegin(); i != m_value.object->cend(); ++i){\n                str += escape_string(i->first) + \" \";\n            }\n        }\n\n        return str;\n    }\n```\n\nand run client code like this:  \n\n``` cpp\n#include \"json.hpp\"\n#include <iostream>\n\nvoid Recursive_Print(nlohmann::json const& element, unsigned int depth);\n\nint main(){\n  auto element = nlohmann::json::parse(Read_Entire_File_Into_String(\"changelog.json\"));\n\n  if (element.is_null()){ std::cout << \"null \" << element.attribute_name() << std::endl;}\n  if (element.is_boolean()){std::cout << \"bool \" << element.attribute_name() << std::endl;}\n  if (element.is_number()){std::cout << \"number \" << element.attribute_name() << std::endl;}\n  if (element.is_object()){std::cout << \"object \" << element.attribute_name() << std::endl;}\n  if (element.is_array()){std::cout << \"array \" << element.attribute_name() << std::endl;}\n  if (element.is_string()){std::cout << \"string \" << element.attribute_name() << std::endl;}\n}\nvoid Recursive_Print(nlohmann::json const& element, unsigned int depth){\n  for (auto const& it: element) {\n    Print_Character_N_Times('-',depth); \n    if (it.is_null()){ std::cout << \"null \" << it.attribute_name() << std::endl;}\n    if (it.is_boolean()){std::cout << \"bool \" << it.attribute_name() << std::endl;}\n    if (it.is_number()){std::cout << \"number \" << it.attribute_name() << std::endl;}\n    if (it.is_object()){std::cout << \"object \" << it.attribute_name() << std::endl; Recursive_Print(it,++depth);}\n    if (it.is_array()){std::cout << \"array \" << it.attribute_name() << std::endl; Recursive_Print(it,++depth);}\n    if (it.is_string()){std::cout << \"string \" << it.attribute_name() << std::endl;}\n  }\n}\n//PRETTY MESSY.  BUT YOU GET THE GIST\n```\n\n**it would result in the following**:  \n\n```\nobject example \n-object a b c \n--string \n--string \n--string\n```\n\nI think that illustrates my point about attribute names being stored in the parents.\n\nAnyway, do you have any thoughts on how I could accomplish this?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/38", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/38/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/38/events", "html_url": "https://github.com/nlohmann/json/pull/38", "id": 59349361, "node_id": "MDExOlB1bGxSZXF1ZXN0MzAyMjcyNTc=", "number": 38, "title": "Feature/small float serialization", "user": {"login": "jrandall", "id": 458361, "node_id": "MDQ6VXNlcjQ1ODM2MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/458361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrandall", "html_url": "https://github.com/jrandall", "followers_url": "https://api.github.com/users/jrandall/followers", "following_url": "https://api.github.com/users/jrandall/following{/other_user}", "gists_url": "https://api.github.com/users/jrandall/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrandall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrandall/subscriptions", "organizations_url": "https://api.github.com/users/jrandall/orgs", "repos_url": "https://api.github.com/users/jrandall/repos", "events_url": "https://api.github.com/users/jrandall/events{/privacy}", "received_events_url": "https://api.github.com/users/jrandall/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-02-28T17:20:15Z", "updated_at": "2015-03-23T19:28:18Z", "closed_at": "2015-03-23T19:15:50Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/38", "html_url": "https://github.com/nlohmann/json/pull/38", "diff_url": "https://github.com/nlohmann/json/pull/38.diff", "patch_url": "https://github.com/nlohmann/json/pull/38.patch"}, "body": "Adds a test for small floats (which previously failed) along with a fix \nfor dump() that makes the test pass. \n\nNow uses std::snprintf() to generate a \"%.15g\" formatted string\nfor JSON values of type number_float. 15 decimals digits are\nenough to round-trip an IEEE 754 double from string->double->string\nand get an identical result.\n\nstd::snprintf is called twice. Once to determine the required\nbuffer size and then again after allocating a buffer of that\nsize.\n\nNote that the buffer size _could_ be hardcoded for better\nperformance. \"%.15g\" should result in strings of maximum length\n23, plus one character for the terminating null for a buffer size\nof 24. Let me know if you'd like me to switch to a fixed buffer \nsize to avoid the extra call to snprintf and the overhead of \ndynamic memory allocation. \n\nFixes #37 \n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/37", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/37/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/37/events", "html_url": "https://github.com/nlohmann/json/issues/37", "id": 59345378, "node_id": "MDU6SXNzdWU1OTM0NTM3OA==", "number": 37, "title": "dumping a small number_float just outputs 0.000000", "user": {"login": "jrandall", "id": 458361, "node_id": "MDQ6VXNlcjQ1ODM2MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/458361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrandall", "html_url": "https://github.com/jrandall", "followers_url": "https://api.github.com/users/jrandall/followers", "following_url": "https://api.github.com/users/jrandall/following{/other_user}", "gists_url": "https://api.github.com/users/jrandall/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrandall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrandall/subscriptions", "organizations_url": "https://api.github.com/users/jrandall/orgs", "repos_url": "https://api.github.com/users/jrandall/repos", "events_url": "https://api.github.com/users/jrandall/events{/privacy}", "received_events_url": "https://api.github.com/users/jrandall/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-02-28T15:27:34Z", "updated_at": "2015-03-23T19:15:50Z", "closed_at": "2015-03-23T19:15:50Z", "author_association": "CONTRIBUTOR", "body": "I expected that small doubles would be represented in dumped JSON as a javascript number in scientific notation, but instead it just appears as `0.000000` \n\nExample:\n\n``` c++\n#include <iostream>\n\n#include \"json.hpp\"\nusing json = nlohmann::json;\n\nmain() {\n  double d = 1.23456e-89;\n  json j = d;\n\n  std::cout << \"d=\" << d << \" j=\" << j << std::endl;\n}\n```\n\nExpected output: `d=1.23456e-89 j=1.23456e-89`\n\nActual output: `d=1.23456e-89 j=0.000000`\n\nLooking at the json code, it appears this is due to using `std::to_string()` for all numbers, which is equivalent to `sprintf(\"%f\", ...)` whereas `sprintf(\"%g\", ...)` would be more appropriate. To fix this, the dump function would need to use something other than to_string to format floating point numbers. I'll try to put together a PR for this although C++ is far from my best language. \n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/36", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/36/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/36/events", "html_url": "https://github.com/nlohmann/json/pull/36", "id": 58142748, "node_id": "MDExOlB1bGxSZXF1ZXN0Mjk1NzIwOTA=", "number": 36, "title": "template version with re2c scanner", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-18T22:57:37Z", "updated_at": "2015-02-18T23:04:59Z", "closed_at": "2015-02-18T23:04:28Z", "author_association": "OWNER", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/36", "html_url": "https://github.com/nlohmann/json/pull/36", "diff_url": "https://github.com/nlohmann/json/pull/36.diff", "patch_url": "https://github.com/nlohmann/json/pull/36.patch"}, "body": "- _Changed:_ In the generic class `basic_json`, all JSON value types (array, object, string, bool, integer number, and floating-point) are now **templated**. That is, you can choose whether you like a `std::list` for your arrays or an `std::unordered_map` for your objects. The specialization `json` sets some reasonable defaults.\n- _Changed:_ The library now consists of a single header, called `json.hpp`. Consequently, build systems such as Automake or CMake are not any longer required.\n- _Changed:_ The **deserialization** is now supported by a lexer generated with [re2c](http://re2c.org) from file [`src/json.hpp.re2c`](https://github.com/nlohmann/json/blob/master/src/json.hpp.re2c). As a result, we follow the JSON specification more strictly. Note neither the tool re2c nor its input are required to use the class.\n- _Added:_ The library now satisfies the [**ReversibleContainer**](http://en.cppreference.com/w/cpp/concept/ReversibleContainer) requirement. It hence provides four different iterators (`iterator`, `const_iterator`, `reverse_iterator`, and `const_reverse_iterator`), comparison functions, `swap()`, `size()`, `max_size()`, and `empty()` member functions.\n- _Added_: The class uses **user-defined allocators** which default to `std::allocator`, but can be templated via parameter `Allocator`.\n- _Added:_ To simplify pretty-printing, the `std::setw` **stream manipulator** has been overloaded to set the desired indentation. Pretty-printing a JSON object `j` is as simple as `std::cout << std::setw(4) << j << '\\n'.\n- _Changed_: The type `json::value_t::number` is now called `json::value_t::number_integer` to be more symmetric compared to `json::value_t::number_float`.\n- _Removed:_ The `key()` and `value()` member functions for object iterators were nonstandard and yielded more problems than benefits. They were removed from the library.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/35", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/35/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/35/events", "html_url": "https://github.com/nlohmann/json/pull/35", "id": 56656371, "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg3MTU5MDE=", "number": 35, "title": "fixed duplicate symbols errors on header-only version. issue #16", "user": {"login": "mnpk", "id": 6612387, "node_id": "MDQ6VXNlcjY2MTIzODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6612387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mnpk", "html_url": "https://github.com/mnpk", "followers_url": "https://api.github.com/users/mnpk/followers", "following_url": "https://api.github.com/users/mnpk/following{/other_user}", "gists_url": "https://api.github.com/users/mnpk/gists{/gist_id}", "starred_url": "https://api.github.com/users/mnpk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mnpk/subscriptions", "organizations_url": "https://api.github.com/users/mnpk/orgs", "repos_url": "https://api.github.com/users/mnpk/repos", "events_url": "https://api.github.com/users/mnpk/events{/privacy}", "received_events_url": "https://api.github.com/users/mnpk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-02-05T11:07:40Z", "updated_at": "2015-02-05T18:16:58Z", "closed_at": "2015-02-05T18:16:58Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/35", "html_url": "https://github.com/nlohmann/json/pull/35", "diff_url": "https://github.com/nlohmann/json/pull/35.diff", "patch_url": "https://github.com/nlohmann/json/pull/35.patch"}, "body": "I got duplicate symbols errors when include header-only version in more than one cpp files.\nSo I just add inline keyword before method defines to fix this. Link errors disappeared. Is this enough to close #16?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/34", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/34/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/34/events", "html_url": "https://github.com/nlohmann/json/pull/34", "id": 56527389, "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg2Mzg4OTk=", "number": 34, "title": "(partial) msvc support", "user": {"login": "Zoadian", "id": 880071, "node_id": "MDQ6VXNlcjg4MDA3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/880071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoadian", "html_url": "https://github.com/Zoadian", "followers_url": "https://api.github.com/users/Zoadian/followers", "following_url": "https://api.github.com/users/Zoadian/following{/other_user}", "gists_url": "https://api.github.com/users/Zoadian/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoadian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoadian/subscriptions", "organizations_url": "https://api.github.com/users/Zoadian/orgs", "repos_url": "https://api.github.com/users/Zoadian/repos", "events_url": "https://api.github.com/users/Zoadian/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoadian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-02-04T13:42:30Z", "updated_at": "2015-02-05T18:31:42Z", "closed_at": "2015-02-05T18:21:09Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/34", "html_url": "https://github.com/nlohmann/json/pull/34", "diff_url": "https://github.com/nlohmann/json/pull/34.diff", "patch_url": "https://github.com/nlohmann/json/pull/34.patch"}, "body": "some changes to support compilation with msvc120\nI used .h and .cc files directly without cmake.\n\nalso line 2374 is probably wrong\n\nso this is just the first step to support msvc.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/33", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/33/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/33/events", "html_url": "https://github.com/nlohmann/json/pull/33", "id": 55440022, "node_id": "MDExOlB1bGxSZXF1ZXN0MjgwMDI0Njc=", "number": 33, "title": "more descriptive documentation in example", "user": {"login": "luxe", "id": 1312081, "node_id": "MDQ6VXNlcjEzMTIwODE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1312081?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luxe", "html_url": "https://github.com/luxe", "followers_url": "https://api.github.com/users/luxe/followers", "following_url": "https://api.github.com/users/luxe/following{/other_user}", "gists_url": "https://api.github.com/users/luxe/gists{/gist_id}", "starred_url": "https://api.github.com/users/luxe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luxe/subscriptions", "organizations_url": "https://api.github.com/users/luxe/orgs", "repos_url": "https://api.github.com/users/luxe/repos", "events_url": "https://api.github.com/users/luxe/events{/privacy}", "received_events_url": "https://api.github.com/users/luxe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-01-26T02:00:36Z", "updated_at": "2015-01-26T06:51:55Z", "closed_at": "2015-01-26T06:51:40Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/33", "html_url": "https://github.com/nlohmann/json/pull/33", "diff_url": "https://github.com/nlohmann/json/pull/33.diff", "patch_url": "https://github.com/nlohmann/json/pull/33.patch"}, "body": "I wasn't sure what that parameter was at first glance\n"}]