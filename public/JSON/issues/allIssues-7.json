[{"url": "https://api.github.com/repos/nlohmann/json/issues/995", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/995/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/995/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/995/events", "html_url": "https://github.com/nlohmann/json/issues/995", "id": 302392612, "node_id": "MDU6SXNzdWUzMDIzOTI2MTI=", "number": 995, "title": "Prevent Null values to appear in .dump()", "user": {"login": "nuno407", "id": 11352538, "node_id": "MDQ6VXNlcjExMzUyNTM4", "avatar_url": "https://avatars2.githubusercontent.com/u/11352538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nuno407", "html_url": "https://github.com/nuno407", "followers_url": "https://api.github.com/users/nuno407/followers", "following_url": "https://api.github.com/users/nuno407/following{/other_user}", "gists_url": "https://api.github.com/users/nuno407/gists{/gist_id}", "starred_url": "https://api.github.com/users/nuno407/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nuno407/subscriptions", "organizations_url": "https://api.github.com/users/nuno407/orgs", "repos_url": "https://api.github.com/users/nuno407/repos", "events_url": "https://api.github.com/users/nuno407/events{/privacy}", "received_events_url": "https://api.github.com/users/nuno407/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-05T17:32:44Z", "updated_at": "2018-03-06T16:47:00Z", "closed_at": "2018-03-06T16:47:00Z", "author_association": "NONE", "body": "Imagine that you have the following json string created by .dump()\r\n\r\n`\r\n{\"connectorId\":0,\r\n\"meterValue\": [{\"sampledValue\":[{\"context\":\"Sample.Periodic\",\"format\":null,\"location\":\"Body\",\"measurand\":null,\"phase\":\"L1\",\"unit\":\"V\",\"value\":\"18440\"},{\"context\":\"Sample.Periodic\",\"format\":null,\"location\":\"Body\",\"measurand\":null,\"phase\":\"L2\",\"unit\":\"V\",\"value\":\"46927\"},{\"context\":\"Sample.Periodic\",\"format\":null,\"location\":\"Body\",\"measurand\":null,\"phase\":\"L3\",\"unit\":\"V\",\"value\":\"44515\"}]\r\n`\r\n\r\nHow can I configure the library to not include null values in the dump? I research in the documentation by with no success. The only way I can find is to create a For loop that removes all null entries but is quite inefficient.\r\n\r\nThank you for the help,\r\nNuno\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/994", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/994/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/994/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/994/events", "html_url": "https://github.com/nlohmann/json/issues/994", "id": 302098095, "node_id": "MDU6SXNzdWUzMDIwOTgwOTU=", "number": 994, "title": "compilation error while using intel c++ compiler 2018", "user": {"login": "tomqt", "id": 37045275, "node_id": "MDQ6VXNlcjM3MDQ1Mjc1", "avatar_url": "https://avatars2.githubusercontent.com/u/37045275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomqt", "html_url": "https://github.com/tomqt", "followers_url": "https://api.github.com/users/tomqt/followers", "following_url": "https://api.github.com/users/tomqt/following{/other_user}", "gists_url": "https://api.github.com/users/tomqt/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomqt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomqt/subscriptions", "organizations_url": "https://api.github.com/users/tomqt/orgs", "repos_url": "https://api.github.com/users/tomqt/repos", "events_url": "https://api.github.com/users/tomqt/events{/privacy}", "received_events_url": "https://api.github.com/users/tomqt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 706237888, "node_id": "MDU6TGFiZWw3MDYyMzc4ODg=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20icc", "name": "platform: icc", "color": "eb6420", "default": false}, {"id": 735376215, "node_id": "MDU6TGFiZWw3MzUzNzYyMTU=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20needs%20more%20info", "name": "state: needs more info", "color": "f9d0c4", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-04T16:13:03Z", "updated_at": "2018-04-25T17:42:28Z", "closed_at": "2018-04-09T20:19:11Z", "author_association": "NONE", "body": "Hello!\r\n\r\nI am facing an issue that maybe has been already solved but I can't find documentation regarding it.\r\nWhen trying to compile a new project that includes json.hpp with Intel C++ 18.0 compiler (as well for Intel C++ 17.0) in visual studio\r\nI get the following errors:\r\n\r\n```\r\n...\\json.hpp(428): error : type name is not allowed\r\ndetect(std::declval<typename BasicJsonType::template json_serializer<T, void>()))>::value;\r\n\r\n...\\json.hpp(446): error : type name is not allowed\r\nstd::declval<typename BasicJsonType::template json_serializer<T, void>()))>::value;\r\n\r\n...\\json.hpp(461): error : type name is not allowed\r\nstd::declval<typename BasicJsonType::template json_serializer<T, void>()))>::value;\r\n```\r\n\r\nIs it a known and solved issue?\r\n\r\nThanks!"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/993", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/993/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/993/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/993/events", "html_url": "https://github.com/nlohmann/json/issues/993", "id": 302066098, "node_id": "MDU6SXNzdWUzMDIwNjYwOTg=", "number": 993, "title": "number parsing", "user": {"login": "Yaossg", "id": 29620619, "node_id": "MDQ6VXNlcjI5NjIwNjE5", "avatar_url": "https://avatars1.githubusercontent.com/u/29620619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yaossg", "html_url": "https://github.com/Yaossg", "followers_url": "https://api.github.com/users/Yaossg/followers", "following_url": "https://api.github.com/users/Yaossg/following{/other_user}", "gists_url": "https://api.github.com/users/Yaossg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yaossg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yaossg/subscriptions", "organizations_url": "https://api.github.com/users/Yaossg/orgs", "repos_url": "https://api.github.com/users/Yaossg/repos", "events_url": "https://api.github.com/users/Yaossg/events{/privacy}", "received_events_url": "https://api.github.com/users/Yaossg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-04T08:03:01Z", "updated_at": "2018-03-05T11:21:15Z", "closed_at": "2018-03-05T11:21:09Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\nnumber literals like `\"+1\"_json` , `\".5\"_json` , `\"5.\"_json` are invalid\r\n\r\n**Feature Request**\r\n\r\nhexadecimal floating literal (like`0x1.2p3`)"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/992", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/992/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/992/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/992/events", "html_url": "https://github.com/nlohmann/json/pull/992", "id": 301693404, "node_id": "MDExOlB1bGxSZXF1ZXN0MTcyNDQ5Nzc4", "number": 992, "title": "fixed misprinted condition detected by PVS Studio.", "user": {"login": "bogemic", "id": 26283467, "node_id": "MDQ6VXNlcjI2MjgzNDY3", "avatar_url": "https://avatars0.githubusercontent.com/u/26283467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bogemic", "html_url": "https://github.com/bogemic", "followers_url": "https://api.github.com/users/bogemic/followers", "following_url": "https://api.github.com/users/bogemic/following{/other_user}", "gists_url": "https://api.github.com/users/bogemic/gists{/gist_id}", "starred_url": "https://api.github.com/users/bogemic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bogemic/subscriptions", "organizations_url": "https://api.github.com/users/bogemic/orgs", "repos_url": "https://api.github.com/users/bogemic/repos", "events_url": "https://api.github.com/users/bogemic/events{/privacy}", "received_events_url": "https://api.github.com/users/bogemic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/23", "html_url": "https://github.com/nlohmann/json/milestone/23", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/23/labels", "id": 3114191, "node_id": "MDk6TWlsZXN0b25lMzExNDE5MQ==", "number": 23, "title": "Release 3.1.2", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "closed", "created_at": "2018-02-13T18:42:55Z", "updated_at": "2018-03-14T20:25:26Z", "due_on": "2018-03-14T07:00:00Z", "closed_at": "2018-03-14T20:25:26Z"}, "comments": 2, "created_at": "2018-03-02T08:49:46Z", "updated_at": "2018-03-05T14:58:03Z", "closed_at": "2018-03-05T14:57:57Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/992", "html_url": "https://github.com/nlohmann/json/pull/992", "diff_url": "https://github.com/nlohmann/json/pull/992.diff", "patch_url": "https://github.com/nlohmann/json/pull/992.patch"}, "body": "fixed misprinted condition detected by PVS Studio.\r\n\r\n* * *\r\n\r\n## Pull request checklist\r\n\r\nRead the [Contribution Guidelines](https://github.com/nlohmann/json/blob/develop/.github/CONTRIBUTING.md) for detailed information.\r\n\r\n- [ ]  Changes are described in the pull request, or an [existing issue is referenced](https://github.com/nlohmann/json/issues).\r\n- [ ]  The test suite [compiles and runs](https://github.com/nlohmann/json/blob/develop/README.md#execute-unit-tests) without error.\r\n- [ ]  [Code coverage](https://coveralls.io/github/nlohmann/json) is 100%. Test cases can be added by editing the [test suite](https://github.com/nlohmann/json/tree/develop/test/src).\r\n- [ ]  The source code is amalgamated; that is, after making changes to the sources in the `include/nlohmann` directory, run `make amalgamate` to create the single-header file `single_include/nlohmann/json.hpp`. The whole process is described [here](https://github.com/nlohmann/json/blob/develop/.github/CONTRIBUTING.md#files-to-change).\r\n\r\n## Please don't\r\n\r\n- The C++11 support varies between different **compilers** and versions. Please note the [list of supported compilers](https://github.com/nlohmann/json/blob/master/README.md#supported-compilers). Some compilers like GCC 4.8 (and earlier), Clang 3.3 (and earlier), or Microsoft Visual Studio 13.0 and earlier are known not to work due to missing or incomplete C++11 support. Please refrain from proposing changes that work around these compiler's limitations with `#ifdef`s or other means.\r\n- Specifically, I am aware of compilation problems with **Microsoft Visual Studio** (there even is an [issue label](https://github.com/nlohmann/json/issues?utf8=\u2713&q=label%3A%22visual+studio%22+) for these kind of bugs). I understand that even in 2016, complete C++11 support isn't there yet. But please also understand that I do not want to drop features or uglify the code just to make Microsoft's sub-standard compiler happy. The past has shown that there are ways to express the functionality such that the code compiles with the most recent MSVC - unfortunately, this is not the main objective of the project.\r\n- Please refrain from proposing changes that would **break [JSON](http://json.org) conformance**. If you propose a conformant extension of JSON to be supported by the library, please motivate this extension.\r\n- Please do not open pull requests that address **multiple issues**.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/991", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/991/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/991/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/991/events", "html_url": "https://github.com/nlohmann/json/pull/991", "id": 301688561, "node_id": "MDExOlB1bGxSZXF1ZXN0MTcyNDQ2NDE4", "number": 991, "title": "pvs_studio fix. misprinted condition", "user": {"login": "bogemic", "id": 26283467, "node_id": "MDQ6VXNlcjI2MjgzNDY3", "avatar_url": "https://avatars0.githubusercontent.com/u/26283467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bogemic", "html_url": "https://github.com/bogemic", "followers_url": "https://api.github.com/users/bogemic/followers", "following_url": "https://api.github.com/users/bogemic/following{/other_user}", "gists_url": "https://api.github.com/users/bogemic/gists{/gist_id}", "starred_url": "https://api.github.com/users/bogemic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bogemic/subscriptions", "organizations_url": "https://api.github.com/users/bogemic/orgs", "repos_url": "https://api.github.com/users/bogemic/repos", "events_url": "https://api.github.com/users/bogemic/events{/privacy}", "received_events_url": "https://api.github.com/users/bogemic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-02T08:29:01Z", "updated_at": "2018-03-02T09:42:34Z", "closed_at": "2018-03-02T08:30:36Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/991", "html_url": "https://github.com/nlohmann/json/pull/991", "diff_url": "https://github.com/nlohmann/json/pull/991.diff", "patch_url": "https://github.com/nlohmann/json/pull/991.patch"}, "body": "fixed misprinted condition detected by PVS Studio.\r\n[Describe your pull request here. Please read the text below the line, and make sure you follow the checklist.]\r\n\r\n* * *\r\n\r\n## Pull request checklist\r\n\r\nRead the [Contribution Guidelines](https://github.com/nlohmann/json/blob/develop/.github/CONTRIBUTING.md) for detailed information.\r\n\r\n- [ ]  Changes are described in the pull request, or an [existing issue is referenced](https://github.com/nlohmann/json/issues).\r\n- [ ]  The test suite [compiles and runs](https://github.com/nlohmann/json/blob/develop/README.md#execute-unit-tests) without error.\r\n- [ ]  [Code coverage](https://coveralls.io/github/nlohmann/json) is 100%. Test cases can be added by editing the [test suite](https://github.com/nlohmann/json/tree/develop/test/src).\r\n- [ ]  The source code is amalgamated; that is, after making changes to the sources in the `include/nlohmann` directory, run `make amalgamate` to create the single-header file `single_include/nlohmann/json.hpp`. The whole process is described [here](https://github.com/nlohmann/json/blob/develop/.github/CONTRIBUTING.md#files-to-change).\r\n\r\n## Please don't\r\n\r\n- The C++11 support varies between different **compilers** and versions. Please note the [list of supported compilers](https://github.com/nlohmann/json/blob/master/README.md#supported-compilers). Some compilers like GCC 4.8 (and earlier), Clang 3.3 (and earlier), or Microsoft Visual Studio 13.0 and earlier are known not to work due to missing or incomplete C++11 support. Please refrain from proposing changes that work around these compiler's limitations with `#ifdef`s or other means.\r\n- Specifically, I am aware of compilation problems with **Microsoft Visual Studio** (there even is an [issue label](https://github.com/nlohmann/json/issues?utf8=\u2713&q=label%3A%22visual+studio%22+) for these kind of bugs). I understand that even in 2016, complete C++11 support isn't there yet. But please also understand that I do not want to drop features or uglify the code just to make Microsoft's sub-standard compiler happy. The past has shown that there are ways to express the functionality such that the code compiles with the most recent MSVC - unfortunately, this is not the main objective of the project.\r\n- Please refrain from proposing changes that would **break [JSON](http://json.org) conformance**. If you propose a conformant extension of JSON to be supported by the library, please motivate this extension.\r\n- Please do not open pull requests that address **multiple issues**.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/990", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/990/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/990/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/990/events", "html_url": "https://github.com/nlohmann/json/issues/990", "id": 301238885, "node_id": "MDU6SXNzdWUzMDEyMzg4ODU=", "number": 990, "title": "How to create a json variable?", "user": {"login": "miketing629", "id": 36926596, "node_id": "MDQ6VXNlcjM2OTI2NTk2", "avatar_url": "https://avatars3.githubusercontent.com/u/36926596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miketing629", "html_url": "https://github.com/miketing629", "followers_url": "https://api.github.com/users/miketing629/followers", "following_url": "https://api.github.com/users/miketing629/following{/other_user}", "gists_url": "https://api.github.com/users/miketing629/gists{/gist_id}", "starred_url": "https://api.github.com/users/miketing629/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miketing629/subscriptions", "organizations_url": "https://api.github.com/users/miketing629/orgs", "repos_url": "https://api.github.com/users/miketing629/repos", "events_url": "https://api.github.com/users/miketing629/events{/privacy}", "received_events_url": "https://api.github.com/users/miketing629/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-03-01T00:46:30Z", "updated_at": "2018-03-18T22:52:43Z", "closed_at": "2018-03-18T22:52:43Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\n\r\nThis is more of a question than an issue.  The sample code illustrates what I'm trying to do, and the included output shows it's not working the way I hope/expect.  I've tried other variations than what is in the sample - can't get anything to work.\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\n\r\nBuild and run this code:\r\n\r\n```cpp\r\nvoid jsonTest()\r\n{\r\n    try\r\n    {\r\n        nlohmann::json v1 = nlohmann::json::parse(\"{ \\\"a\\\":{\\\"b\\\":{\\\"c\\\":{\\\"value\\\":900}}} }\");\r\n        auto value1 = v1[\"a\"][\"b\"][\"c\"].value(\"value\", 0);\r\n\r\n        std::cout << \"value1: \" << value1 << std::endl;\r\n    }\r\n    catch (...)\r\n    {\r\n        printf(\"value1: exception\");\r\n        std::cout << \"value1: exception\" << std::endl;\r\n    }\r\n\r\n    try\r\n    {\r\n        nlohmann::json v2 =\r\n        {\r\n            \"a\",\r\n            {\r\n                \"b\",\r\n                {\r\n                    \"c\",\r\n                    {\r\n                        \"value\", 900\r\n                    }\r\n                }\r\n            } \r\n        };\r\n        auto value2 = v2[\"a\"][\"b\"][\"c\"].value(\"value\", 0);\r\n\r\n        std::cout << \"value1: \" << value2 << std::endl;\r\n    }\r\n    catch (...)\r\n    {\r\n        std::cout << \"value2: exception\" << std::endl;\r\n    }\r\n\r\n    try\r\n    {\r\n        nlohmann::json v3 =\r\n        {\r\n            {\r\n                \"a\",\r\n                {\r\n                    \"b\",\r\n                    {\r\n                        \"c\",\r\n                        {\r\n                            \"value\", 900\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        auto value3 = v3[\"a\"][\"b\"][\"c\"].value(\"value\", 0);\r\n\r\n        std::cout << \"value3: \" << value3 << std::endl;\r\n    }\r\n    catch (...)\r\n    {\r\n        std::cout << \"value3: exception\" << std::endl;\r\n    }\r\n}\r\n```\r\n\r\n- What is the expected behavior?\r\n\r\nAll cases print the value 900.\r\n- And what is the actual behavior instead?\r\n\r\nThis is the output of the code:\r\n\r\nvalue1: 900\r\nvalue2 : exception\r\nvalue3 : exception\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\n\r\nVisual Studio 2017, Windows 10\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\n\r\nReleased version 3.1.1.\r\n\r\n- If you experience a compilation error: can you [compile and run the unit tests](https://github.com/nlohmann/json#execute-unit-tests)?\r\n\r\n\r\n**Feature Request**\r\n\r\n- Describe the feature in as much detail as possible.\r\n\r\n- Include sample usage where appropriate.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/989", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/989/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/989/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/989/events", "html_url": "https://github.com/nlohmann/json/pull/989", "id": 301054984, "node_id": "MDExOlB1bGxSZXF1ZXN0MTcxOTc2ODE0", "number": 989, "title": "Add license scan report and status", "user": {"login": "fossabot", "id": 29791463, "node_id": "MDQ6VXNlcjI5NzkxNDYz", "avatar_url": "https://avatars0.githubusercontent.com/u/29791463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fossabot", "html_url": "https://github.com/fossabot", "followers_url": "https://api.github.com/users/fossabot/followers", "following_url": "https://api.github.com/users/fossabot/following{/other_user}", "gists_url": "https://api.github.com/users/fossabot/gists{/gist_id}", "starred_url": "https://api.github.com/users/fossabot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fossabot/subscriptions", "organizations_url": "https://api.github.com/users/fossabot/orgs", "repos_url": "https://api.github.com/users/fossabot/repos", "events_url": "https://api.github.com/users/fossabot/events{/privacy}", "received_events_url": "https://api.github.com/users/fossabot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-28T14:56:33Z", "updated_at": "2018-02-28T15:14:18Z", "closed_at": "2018-02-28T15:14:18Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/989", "html_url": "https://github.com/nlohmann/json/pull/989", "diff_url": "https://github.com/nlohmann/json/pull/989.diff", "patch_url": "https://github.com/nlohmann/json/pull/989.patch"}, "body": "Your FOSSA integration was successful! Attached in this PR is a badge and license report to track scan status in your README.\n\nBelow are docs for integrating FOSSA license checks into your CI:\n\n- [CircleCI](http://fossa.io/docs/integrating-tools/circleci/)\n- [TravisCI](http://fossa.io/docs/integrating-tools/travisci/)\n- [Jenkins](https://github.com/fossas/fossa-jenkins-plugin)\n- [Other](https://github.com/fossas/license-cli)"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/988", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/988/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/988/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/988/events", "html_url": "https://github.com/nlohmann/json/pull/988", "id": 301016626, "node_id": "MDExOlB1bGxSZXF1ZXN0MTcxOTQ3NzAy", "number": 988, "title": "Configure Zappr", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-28T13:05:59Z", "updated_at": "2018-02-28T15:14:08Z", "closed_at": "2018-02-28T13:06:50Z", "author_association": "OWNER", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/988", "html_url": "https://github.com/nlohmann/json/pull/988", "diff_url": "https://github.com/nlohmann/json/pull/988.diff", "patch_url": "https://github.com/nlohmann/json/pull/988.patch"}, "body": "This is a reduced example of a [configuration file](https://zappr.readthedocs.io/en/latest/setup) for Zappr.\nIf you have questions you can reach us\n\n  * in our [Gitter channel](https://gitter.im/zalando/zappr)\n  * on [Twitter](https://twitter.com/zalando_zappr)\n\nThese are the features we currently support:\n\n## Approvals\n\n  * Approve pull requests with comments and configurable pattern\n  * \"Veto\" (ie. block) pull requests with comments and configurable pattern\n  * Configure how many approvals your pull request needs before merging\n  * Extensively configure who can approve or veto in your project\n\n## Pull Request guidelines\n\n  * Block a PR until it has the required set of labels (e.g. `reviewed`)\n  * Block a PR as long as it has unfinished tasks\n\n## Specification guidelines\n\n  * Configure minimum length of pull request title and description\n  * Configure if pull request description can be the same as pull request template\n\n## Commit message guidelines\n\n  * Configure patterns that all commits in a pull request must match\n\n## Automatic branch creation\n\n  * Automatically create a branch in your repository for every issue\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/987", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/987/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/987/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/987/events", "html_url": "https://github.com/nlohmann/json/issues/987", "id": 300947997, "node_id": "MDU6SXNzdWUzMDA5NDc5OTc=", "number": 987, "title": "C2664 (C++/CLR) cannot convert 'nullptr' to 'nullptr &&'", "user": {"login": "freanux", "id": 11588703, "node_id": "MDQ6VXNlcjExNTg4NzAz", "avatar_url": "https://avatars0.githubusercontent.com/u/11588703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/freanux", "html_url": "https://github.com/freanux", "followers_url": "https://api.github.com/users/freanux/followers", "following_url": "https://api.github.com/users/freanux/following{/other_user}", "gists_url": "https://api.github.com/users/freanux/gists{/gist_id}", "starred_url": "https://api.github.com/users/freanux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/freanux/subscriptions", "organizations_url": "https://api.github.com/users/freanux/orgs", "repos_url": "https://api.github.com/users/freanux/repos", "events_url": "https://api.github.com/users/freanux/events{/privacy}", "received_events_url": "https://api.github.com/users/freanux/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2018-02-28T09:23:45Z", "updated_at": "2018-03-01T07:49:06Z", "closed_at": "2018-02-28T18:41:38Z", "author_association": "NONE", "body": "I'm working on a C++ to C# wrapper using C++/CLR and MS VS Community 2015 (Version 14.0.25431.01 Update 3).\r\n\r\nCompiling the single header json.hpp fails with described error in the title. The json.hpp version in 3.1.1.\r\n\r\nI uploaded a tiny test project to reproduce the compile error:\r\n[TestLibrary.zip](https://github.com/nlohmann/json/files/1766437/TestLibrary.zip)\r\n\r\nFor me a possible workaround is to encapsulate the json object and return the dump()ed string to pass to the C++/CLR and pass that string to the C# world instead of passing the dump()ed string from my C++/CLR class to the C# environment.\r\n\r\nThanks in advance."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/986", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/986/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/986/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/986/events", "html_url": "https://github.com/nlohmann/json/pull/986", "id": 300604187, "node_id": "MDExOlB1bGxSZXF1ZXN0MTcxNjQzMTUw", "number": 986, "title": "Fix/basic json conversion", "user": {"login": "theodelrieu", "id": 15652306, "node_id": "MDQ6VXNlcjE1NjUyMzA2", "avatar_url": "https://avatars1.githubusercontent.com/u/15652306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theodelrieu", "html_url": "https://github.com/theodelrieu", "followers_url": "https://api.github.com/users/theodelrieu/followers", "following_url": "https://api.github.com/users/theodelrieu/following{/other_user}", "gists_url": "https://api.github.com/users/theodelrieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/theodelrieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theodelrieu/subscriptions", "organizations_url": "https://api.github.com/users/theodelrieu/orgs", "repos_url": "https://api.github.com/users/theodelrieu/repos", "events_url": "https://api.github.com/users/theodelrieu/events{/privacy}", "received_events_url": "https://api.github.com/users/theodelrieu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/23", "html_url": "https://github.com/nlohmann/json/milestone/23", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/23/labels", "id": 3114191, "node_id": "MDk6TWlsZXN0b25lMzExNDE5MQ==", "number": 23, "title": "Release 3.1.2", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "closed", "created_at": "2018-02-13T18:42:55Z", "updated_at": "2018-03-14T20:25:26Z", "due_on": "2018-03-14T07:00:00Z", "closed_at": "2018-03-14T20:25:26Z"}, "comments": 17, "created_at": "2018-02-27T12:05:55Z", "updated_at": "2018-03-06T21:49:38Z", "closed_at": "2018-03-06T18:27:39Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/986", "html_url": "https://github.com/nlohmann/json/pull/986", "diff_url": "https://github.com/nlohmann/json/pull/986.diff", "patch_url": "https://github.com/nlohmann/json/pull/986.patch"}, "body": "Attempt to fix #977.\r\n\r\nDetails can be found in the commit message body.\r\n\r\nThere is a `FIXME` left in the code about the `value_t::discarded` flag. I don't know in which cases this flag can be encountered.\r\n\r\n* * *\r\n\r\n## Pull request checklist\r\n\r\nRead the [Contribution Guidelines](https://github.com/nlohmann/json/blob/develop/.github/CONTRIBUTING.md) for detailed information.\r\n\r\n- [x]  Changes are described in the pull request, or an [existing issue is referenced](https://github.com/nlohmann/json/issues).\r\n- [x]  The test suite [compiles and runs](https://github.com/nlohmann/json/blob/develop/README.md#execute-unit-tests) without error.\r\n- [x]  [Code coverage](https://coveralls.io/github/nlohmann/json) is 100%. Test cases can be added by editing the [test suite](https://github.com/nlohmann/json/tree/develop/test/src).\r\n- [x]  The source code is amalgamated; that is, after making changes to the sources in the `include/nlohmann` directory, run `make amalgamate` to create the single-header file `single_include/nlohmann/json.hpp`. The whole process is described [here](https://github.com/nlohmann/json/blob/develop/.github/CONTRIBUTING.md#files-to-change).\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/985", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/985/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/985/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/985/events", "html_url": "https://github.com/nlohmann/json/issues/985", "id": 300524860, "node_id": "MDU6SXNzdWUzMDA1MjQ4NjA=", "number": 985, "title": "Uniform initialization from another json object differs between gcc and clang.", "user": {"login": "dsiroky", "id": 1227818, "node_id": "MDQ6VXNlcjEyMjc4MTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1227818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsiroky", "html_url": "https://github.com/dsiroky", "followers_url": "https://api.github.com/users/dsiroky/followers", "following_url": "https://api.github.com/users/dsiroky/following{/other_user}", "gists_url": "https://api.github.com/users/dsiroky/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsiroky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsiroky/subscriptions", "organizations_url": "https://api.github.com/users/dsiroky/orgs", "repos_url": "https://api.github.com/users/dsiroky/repos", "events_url": "https://api.github.com/users/dsiroky/events{/privacy}", "received_events_url": "https://api.github.com/users/dsiroky/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-27T07:49:43Z", "updated_at": "2018-02-28T15:20:46Z", "closed_at": "2018-02-28T15:20:38Z", "author_association": "NONE", "body": "Construction behaves differently with gcc 7.2 and clang 5.\r\n\r\nCode to reproduce:\r\n```\r\nauto j1{nlohmann::json::parse(\"5\")};\r\nauto j2 = nlohmann::json::parse(\"5\");\r\nstd::cout << j1.is_array() << '\\n';\r\nstd::cout << j2.is_array() << '\\n';\r\n```\r\n\r\ngcc prints:\r\n1\r\n0\r\n\r\nclang prints:\r\n0\r\n0\r\n\r\nBoth are nlohmann::json instances however `j1` has an array wrapped around in gcc."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/984", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/984/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/984/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/984/events", "html_url": "https://github.com/nlohmann/json/pull/984", "id": 300224926, "node_id": "MDExOlB1bGxSZXF1ZXN0MTcxMzY1MjY1", "number": 984, "title": "Set stream flags in `input_stream_adapter`", "user": {"login": "abolz", "id": 1213085, "node_id": "MDQ6VXNlcjEyMTMwODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1213085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abolz", "html_url": "https://github.com/abolz", "followers_url": "https://api.github.com/users/abolz/followers", "following_url": "https://api.github.com/users/abolz/following{/other_user}", "gists_url": "https://api.github.com/users/abolz/gists{/gist_id}", "starred_url": "https://api.github.com/users/abolz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abolz/subscriptions", "organizations_url": "https://api.github.com/users/abolz/orgs", "repos_url": "https://api.github.com/users/abolz/repos", "events_url": "https://api.github.com/users/abolz/events{/privacy}", "received_events_url": "https://api.github.com/users/abolz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-02-26T12:49:04Z", "updated_at": "2018-05-19T18:57:04Z", "closed_at": "2018-05-19T18:57:04Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/984", "html_url": "https://github.com/nlohmann/json/pull/984", "diff_url": "https://github.com/nlohmann/json/pull/984.diff", "patch_url": "https://github.com/nlohmann/json/pull/984.patch"}, "body": "Set stream flags in `input_stream_adapter` on various error conditions. Fixes #976.\r\n\r\nFor performance reasons do not use the `istream` interface but the underlying `streambuf` to get/unget characters. The behavior of this implementation differs slightly from the reference implementation (see below) in case a `streambuf` operation throws an exception (`badbit` is not turned on in the `istream`'s error state).\r\n\r\n---\r\nFor reference, this class was used to generate test cases:\r\n```c++\r\nclass input_stream_adapter : public input_adapter_protocol {\r\n    std::istream& is;\r\n\r\npublic:\r\n    explicit input_stream_adapter(std::istream& i) : is(i) {\r\n        // skip byte order mark\r\n        if (is.peek() == 0xEF) {\r\n            is.ignore();\r\n            if (is.peek() == 0xBB) {\r\n                is.ignore();\r\n                if (is.peek() == 0xBF) {\r\n                    is.ignore();\r\n                    return;\r\n                }\r\n                is.unget();\r\n            }\r\n            is.unget();\r\n        }\r\n    }\r\n\r\n    traits::int_type get_character() override {\r\n        if (is.good()) {\r\n            const auto ch = is.peek();\r\n            if (ch != traits::eof()) {\r\n                is.ignore();\r\n                return ch;\r\n            }\r\n        }\r\n        return traits::eof();\r\n    }\r\n\r\n    void unget_character() override {\r\n        is.unget();\r\n    }\r\n};\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/983", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/983/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/983/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/983/events", "html_url": "https://github.com/nlohmann/json/issues/983", "id": 300160531, "node_id": "MDU6SXNzdWUzMDAxNjA1MzE=", "number": 983, "title": "Problem with adding the lib as a submodule", "user": {"login": "CDitzel", "id": 22954412, "node_id": "MDQ6VXNlcjIyOTU0NDEy", "avatar_url": "https://avatars3.githubusercontent.com/u/22954412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDitzel", "html_url": "https://github.com/CDitzel", "followers_url": "https://api.github.com/users/CDitzel/followers", "following_url": "https://api.github.com/users/CDitzel/following{/other_user}", "gists_url": "https://api.github.com/users/CDitzel/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDitzel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDitzel/subscriptions", "organizations_url": "https://api.github.com/users/CDitzel/orgs", "repos_url": "https://api.github.com/users/CDitzel/repos", "events_url": "https://api.github.com/users/CDitzel/events{/privacy}", "received_events_url": "https://api.github.com/users/CDitzel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-26T09:19:33Z", "updated_at": "2018-02-26T15:50:17Z", "closed_at": "2018-02-26T15:49:50Z", "author_association": "NONE", "body": "I am trying to use your lib as a submodule in my CMake Project in an externalLibs directory that I call via add_subdirectory(json). CMake runs through, but when I try to compile I get a whole lot of errors along the following lines\r\n\r\n~/project/extLibs/json/test/src/unit-json_patch.cpp:65:12: warning: missing terminating \" character\r\n             CHECK(doc1.patch(patch) == R\"(\r\n            ^\r\n~/project/extLibs/json/test/src/unit-json_patch.cpp:65:12: error: missing terminating \" character\r\n             CHECK(doc1.patch(patch) == R\"(\r\n            ^~~~~~~~~~~~~~~~~~~~~~~~~~\r\n~/project/extLibs/json/test/src/unit-json_patch.cpp:67:21: error: stray \u2018\\\u2019 in program\r\n                     \"a\": {\r\n\r\nI cant seem to find the reason for that; i use gcc-7.2 \r\n\r\nhelp is deeply appreciated \r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/982", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/982/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/982/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/982/events", "html_url": "https://github.com/nlohmann/json/issues/982", "id": 299913853, "node_id": "MDU6SXNzdWUyOTk5MTM4NTM=", "number": 982, "title": "UTF-8/Unicode error", "user": {"login": "frank83413", "id": 23654153, "node_id": "MDQ6VXNlcjIzNjU0MTUz", "avatar_url": "https://avatars3.githubusercontent.com/u/23654153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frank83413", "html_url": "https://github.com/frank83413", "followers_url": "https://api.github.com/users/frank83413/followers", "following_url": "https://api.github.com/users/frank83413/following{/other_user}", "gists_url": "https://api.github.com/users/frank83413/gists{/gist_id}", "starred_url": "https://api.github.com/users/frank83413/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frank83413/subscriptions", "organizations_url": "https://api.github.com/users/frank83413/orgs", "repos_url": "https://api.github.com/users/frank83413/repos", "events_url": "https://api.github.com/users/frank83413/events{/privacy}", "received_events_url": "https://api.github.com/users/frank83413/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-02-24T05:29:24Z", "updated_at": "2018-03-05T14:58:25Z", "closed_at": "2018-03-05T14:58:25Z", "author_association": "NONE", "body": "I have some problems with parsing UTF-8\r\nHere is my code\r\n```\r\n#include <iostream>\r\n#include <string.h> \r\n#include \"nlohmann/json.hpp\"\r\nusing json = nlohmann::json;\r\n\r\nint main()\r\n{\r\n\tjson j1 = \"{\\\"name\\\":\\\"\\\\u6211\\\"}\"_json;\r\n\tjson j2 = json::parse(R\"({ \"name\" : \"\\u6211\" })\");\r\n        std::cout << j1.dump() << std::endl;\r\n\tstd::cout << j2.dump() << std::endl;\r\n\tsystem(\"pause\");\r\n\treturn 0;\r\n}\r\n\r\n```\r\n\r\nI think I should get  output like :\r\n\r\n```\r\n{\"name\":\"\u6211\"}\r\n{\"name\":\"\u6211\"}\r\n```\r\n\r\nbut I only get:\r\n\r\n```\r\n{\"name\":\"?\r\n```\r\n\r\nIf I do  ```auto temp = j1[\"name\"].get<std::string>();``` temp will have Invalid character in string.\r\n\r\nAre there anyone could help me to fix it?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/981", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/981/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/981/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/981/events", "html_url": "https://github.com/nlohmann/json/pull/981", "id": 299883541, "node_id": "MDExOlB1bGxSZXF1ZXN0MTcxMTQxNTQ0", "number": 981, "title": "Make integration section concise", "user": {"login": "wla80", "id": 13490408, "node_id": "MDQ6VXNlcjEzNDkwNDA4", "avatar_url": "https://avatars1.githubusercontent.com/u/13490408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wla80", "html_url": "https://github.com/wla80", "followers_url": "https://api.github.com/users/wla80/followers", "following_url": "https://api.github.com/users/wla80/following{/other_user}", "gists_url": "https://api.github.com/users/wla80/gists{/gist_id}", "starred_url": "https://api.github.com/users/wla80/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wla80/subscriptions", "organizations_url": "https://api.github.com/users/wla80/orgs", "repos_url": "https://api.github.com/users/wla80/repos", "events_url": "https://api.github.com/users/wla80/events{/privacy}", "received_events_url": "https://api.github.com/users/wla80/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/23", "html_url": "https://github.com/nlohmann/json/milestone/23", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/23/labels", "id": 3114191, "node_id": "MDk6TWlsZXN0b25lMzExNDE5MQ==", "number": 23, "title": "Release 3.1.2", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "closed", "created_at": "2018-02-13T18:42:55Z", "updated_at": "2018-03-14T20:25:26Z", "due_on": "2018-03-14T07:00:00Z", "closed_at": "2018-03-14T20:25:26Z"}, "comments": 3, "created_at": "2018-02-23T23:35:30Z", "updated_at": "2018-02-26T15:51:52Z", "closed_at": "2018-02-26T15:51:52Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/981", "html_url": "https://github.com/nlohmann/json/pull/981", "diff_url": "https://github.com/nlohmann/json/pull/981.diff", "patch_url": "https://github.com/nlohmann/json/pull/981.patch"}, "body": "Rewrite in concise sentences to improve the readability of the section\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/980", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/980/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/980/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/980/events", "html_url": "https://github.com/nlohmann/json/issues/980", "id": 299758270, "node_id": "MDU6SXNzdWUyOTk3NTgyNzA=", "number": 980, "title": "\"forcing MSVC stacktrace to show which T we're talking about.\" error", "user": {"login": "Starfinder99999", "id": 19537044, "node_id": "MDQ6VXNlcjE5NTM3MDQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/19537044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Starfinder99999", "html_url": "https://github.com/Starfinder99999", "followers_url": "https://api.github.com/users/Starfinder99999/followers", "following_url": "https://api.github.com/users/Starfinder99999/following{/other_user}", "gists_url": "https://api.github.com/users/Starfinder99999/gists{/gist_id}", "starred_url": "https://api.github.com/users/Starfinder99999/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Starfinder99999/subscriptions", "organizations_url": "https://api.github.com/users/Starfinder99999/orgs", "repos_url": "https://api.github.com/users/Starfinder99999/repos", "events_url": "https://api.github.com/users/Starfinder99999/events{/privacy}", "received_events_url": "https://api.github.com/users/Starfinder99999/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-02-23T15:55:42Z", "updated_at": "2018-02-27T12:16:07Z", "closed_at": "2018-02-27T12:15:59Z", "author_association": "NONE", "body": "Hello, I am a beginner at c++ and get this error message, when I try to run my code:\r\n\r\nError\tC2338\tforcing MSVC stacktrace to show which T we're talking about.\tConsoleRPG\tc:\\...\\nlohmann\\json.hpp\t1207\r\nError\tC2065\t\"force_msvc_stacktrace\": undeclared identifier\tConsoleRPG\tc:\\...\\nlohmann\\json.hpp\t1206\r\nError\tC2039\t\"force_msvc_stacktrace\": is not a member of \"Item\"\tConsoleRPG\tc:\\...\\nlohmann\\json.hpp\t1206\r\nError        C2338\tcould not find from_json() method in T's namespace\tConsoleRPG\tc:\\...\\nlohmann\\json.hpp\t1202\r\n\r\nI already read this thread: https://github.com/nlohmann/json/issues/929\r\n\r\nI could still not locate the error.\r\n\r\nThe only thing I assign to json values is like this: \r\nnlohmann::json itemJ = json::parse(\"string\")\r\nor having them as parameters in functions."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/979", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/979/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/979/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/979/events", "html_url": "https://github.com/nlohmann/json/issues/979", "id": 299299616, "node_id": "MDU6SXNzdWUyOTkyOTk2MTY=", "number": 979, "title": "reverse order of serialization ", "user": {"login": "CDitzel", "id": 22954412, "node_id": "MDQ6VXNlcjIyOTU0NDEy", "avatar_url": "https://avatars3.githubusercontent.com/u/22954412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDitzel", "html_url": "https://github.com/CDitzel", "followers_url": "https://api.github.com/users/CDitzel/followers", "following_url": "https://api.github.com/users/CDitzel/following{/other_user}", "gists_url": "https://api.github.com/users/CDitzel/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDitzel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDitzel/subscriptions", "organizations_url": "https://api.github.com/users/CDitzel/orgs", "repos_url": "https://api.github.com/users/CDitzel/repos", "events_url": "https://api.github.com/users/CDitzel/events{/privacy}", "received_events_url": "https://api.github.com/users/CDitzel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-22T10:31:31Z", "updated_at": "2018-02-22T13:38:01Z", "closed_at": "2018-02-22T13:37:55Z", "author_association": "NONE", "body": "why is the snippet \r\n\r\n`json j;\r\n  j[\"pi\"] = 3.141;\r\n  j[\"happy\"] = true;\r\n  std::ofstream ofs{ \"test.json\" };\r\n  ofs << j << std::endl;`\r\n\r\nrsulting in an output like the following\r\n\r\n{\r\n    \"happy\": true,\r\n    \"pi\": 3.141\r\n}\r\n\r\nit should be the other way around should it not? What am I missing here?\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/978", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/978/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/978/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/978/events", "html_url": "https://github.com/nlohmann/json/pull/978", "id": 299191124, "node_id": "MDExOlB1bGxSZXF1ZXN0MTcwNjM0OTIy", "number": 978, "title": "Fix `#include` brackets", "user": {"login": "aardvarkk", "id": 1251092, "node_id": "MDQ6VXNlcjEyNTEwOTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1251092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aardvarkk", "html_url": "https://github.com/aardvarkk", "followers_url": "https://api.github.com/users/aardvarkk/followers", "following_url": "https://api.github.com/users/aardvarkk/following{/other_user}", "gists_url": "https://api.github.com/users/aardvarkk/gists{/gist_id}", "starred_url": "https://api.github.com/users/aardvarkk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aardvarkk/subscriptions", "organizations_url": "https://api.github.com/users/aardvarkk/orgs", "repos_url": "https://api.github.com/users/aardvarkk/repos", "events_url": "https://api.github.com/users/aardvarkk/events{/privacy}", "received_events_url": "https://api.github.com/users/aardvarkk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 735376215, "node_id": "MDU6TGFiZWw3MzUzNzYyMTU=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20needs%20more%20info", "name": "state: needs more info", "color": "f9d0c4", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-02-22T01:29:28Z", "updated_at": "2018-03-06T20:28:12Z", "closed_at": "2018-03-06T20:28:12Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/978", "html_url": "https://github.com/nlohmann/json/pull/978", "diff_url": "https://github.com/nlohmann/json/pull/978.diff", "patch_url": "https://github.com/nlohmann/json/pull/978.patch"}, "body": "Fix `#include` brackets so they correspond to local includes instead of system includes.\r\n\r\nWhen building code relying on this library in Xcode, the build process throws an error (not a warning!) stating its inability to locate the presumed system includes. The `<>` angle brackets on `#include` indicate a system-level include, not a user-level include. By swapping to quotation marks for the `#include` we more accurately represent the content of the included files and Xcode builds without complaint!"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/977", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/977/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/977/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/977/events", "html_url": "https://github.com/nlohmann/json/issues/977", "id": 298873421, "node_id": "MDU6SXNzdWUyOTg4NzM0MjE=", "number": 977, "title": "Assigning between different json types", "user": {"login": "yosagi", "id": 11404771, "node_id": "MDQ6VXNlcjExNDA0Nzcx", "avatar_url": "https://avatars1.githubusercontent.com/u/11404771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yosagi", "html_url": "https://github.com/yosagi", "followers_url": "https://api.github.com/users/yosagi/followers", "following_url": "https://api.github.com/users/yosagi/following{/other_user}", "gists_url": "https://api.github.com/users/yosagi/gists{/gist_id}", "starred_url": "https://api.github.com/users/yosagi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yosagi/subscriptions", "organizations_url": "https://api.github.com/users/yosagi/orgs", "repos_url": "https://api.github.com/users/yosagi/repos", "events_url": "https://api.github.com/users/yosagi/events{/privacy}", "received_events_url": "https://api.github.com/users/yosagi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/23", "html_url": "https://github.com/nlohmann/json/milestone/23", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/23/labels", "id": 3114191, "node_id": "MDk6TWlsZXN0b25lMzExNDE5MQ==", "number": 23, "title": "Release 3.1.2", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "closed", "created_at": "2018-02-13T18:42:55Z", "updated_at": "2018-03-14T20:25:26Z", "due_on": "2018-03-14T07:00:00Z", "closed_at": "2018-03-14T20:25:26Z"}, "comments": 11, "created_at": "2018-02-21T08:03:40Z", "updated_at": "2018-03-06T18:28:20Z", "closed_at": "2018-03-06T18:27:39Z", "author_association": "NONE", "body": "I have 2 different json types, like following:\r\n```c++\r\nusing foo_json = nlohmann::basic_json<std::map, std::vector, std::string, bool, std::int64_t,\r\n std::uint64_t, double, std::allocator,ns::foo_serializer>;\r\n\r\nusing json = nlohmann::json\r\n```\r\n\r\nBasically, they are same type except their JSONSerializer, and I want to copy/assign them one another. But when I copy one type to the other, the program receives SIGSEGV. It seems stack overflow.\r\nHow can I make it work?\r\n\r\nDemonstration code:\r\n\r\n```c++\r\n#include <nlohmann/json.hpp>\r\n#include <iostream>\r\n#include <type_traits>\r\n\r\nnamespace ns{\r\nstruct foo{\r\n  int x;\r\n};\r\n\r\ntemplate <typename, typename SFINAE = void>\r\nstruct foo_serializer;\r\n\r\ntemplate<typename T>\r\nstruct foo_serializer<T,typename std::enable_if<std::is_same<foo, T>::value>::type> {\r\n  template <typename BasicJsonType>\r\n  static void to_json(BasicJsonType& j, const T& value) {\r\n    j=BasicJsonType{{\"x\",value.x}};\r\n  }\r\n  template <typename BasicJsonType>\r\n  static void from_json(const BasicJsonType& j, foo& value) {\r\n    nlohmann::from_json(j.at(\"x\"),value.x);\r\n  }\r\n};\r\n\r\ntemplate<typename T>\r\nstruct foo_serializer<T, typename std::enable_if<!std::is_same<foo, T>::value>::type> {\r\n  template <typename BasicJsonType>\r\n  static void to_json(BasicJsonType& j, const T& value) {\r\n    ::nlohmann::to_json(j, value);\r\n  }\r\n  template <typename BasicJsonType>\r\n  static void from_json(const BasicJsonType& j, foo& value) {\r\n    ::nlohmann::from_json(j, value);\r\n  }\r\n};\r\n}\r\n\r\nusing foo_json = nlohmann::basic_json<std::map, std::vector, std::string, bool, std::int64_t, \r\nstd::uint64_t, double, std::allocator,ns::foo_serializer>;\r\n\r\nint main(){\r\n  foo_json lj=ns::foo{3};\r\n  ns::foo ff=lj;\r\n  std::cout<<lj<<std::endl;\r\n  std::cout<<ff.x<<std::endl;\r\n  nlohmann::json nj=lj;             // !!! Crash here !!!\r\n}\r\n```\r\nTested compilers\r\n + g++ 5.4\r\n + clang 3.8\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/976", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/976/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/976/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/976/events", "html_url": "https://github.com/nlohmann/json/issues/976", "id": 298871219, "node_id": "MDU6SXNzdWUyOTg4NzEyMTk=", "number": 976, "title": "istream >> json  --- 1st character skipped in stream", "user": {"login": "us-er-name", "id": 29406067, "node_id": "MDQ6VXNlcjI5NDA2MDY3", "avatar_url": "https://avatars2.githubusercontent.com/u/29406067?v=4", "gravatar_id": "", "url": "https://api.github.com/users/us-er-name", "html_url": "https://github.com/us-er-name", "followers_url": "https://api.github.com/users/us-er-name/followers", "following_url": "https://api.github.com/users/us-er-name/following{/other_user}", "gists_url": "https://api.github.com/users/us-er-name/gists{/gist_id}", "starred_url": "https://api.github.com/users/us-er-name/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/us-er-name/subscriptions", "organizations_url": "https://api.github.com/users/us-er-name/orgs", "repos_url": "https://api.github.com/users/us-er-name/repos", "events_url": "https://api.github.com/users/us-er-name/events{/privacy}", "received_events_url": "https://api.github.com/users/us-er-name/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}, {"id": 304694104, "node_id": "MDU6TGFiZWwzMDQ2OTQxMDQ=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20please%20discuss", "name": "state: please discuss", "color": "fbca04", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2018-02-21T07:53:04Z", "updated_at": "2018-06-19T02:47:07Z", "closed_at": "2018-06-19T02:47:07Z", "author_association": "NONE", "body": "BUG: The first character in the stream file is skipped.\r\n\r\nI took the single include source and used it in some test code.\r\nSource code posted about Feb 13\r\nhttps://github.com/nlohmann/json/blob/develop/single_include/nlohmann/json.hpp\r\n\r\nWhat I did amounted to:\r\n```\r\n// Extracted from my code\r\njson j;\r\nstd::ifstream is(\"filename\");\r\nis >> j;\r\n```\r\nTracing thru the source, I found this behaviour is the result of the code looking for a BOM at the start of the UTF-8 stream:\r\nIt fetches the first character. Since it is not part of the BOM, it performs:\r\n```Line 1669\t\tis.unget(); // no byte order mark; process as usual```\r\n\r\nWhich is what it should do BUT ...\r\nwhen get() is called shortly after:\r\n```\r\nLine 3024    token_type scan()\r\n\t\t\t{\r\n\t\t\t\t// read next character and ignore whitespace\r\n\t\t\t\tdo\r\n\t\t\t\t{\r\n\t\t\t\t\tget();\r\n\t\t\t...\r\n```\r\nthe variable 'current' contains the second char, as if unget() did not happen.\r\n\r\nNot sure as to why.  Repeated get() do get all subsequent chars one by one.\r\n\r\nSince this was just a test, the workaround is to add in a return and start text on line two. Then it works fine. Actually, to verify the bug, placing ANY character in the first position shows that character is ignored.\r\n\r\nGeneral settings:\r\nUsing MSVC C++ V17 (v141)\r\nMFC in shared DLL\r\nEXE w/Unicode support. no CLR support.\r\n\r\nText file loaded, edited, saved in MSVC IDE\r\n\r\nTested on source uploaded 8 days ago and also reproduced in a version before that.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/975", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/975/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/975/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/975/events", "html_url": "https://github.com/nlohmann/json/issues/975", "id": 297854711, "node_id": "MDU6SXNzdWUyOTc4NTQ3MTE=", "number": 975, "title": "Support serialisation of `unique_ptr<>` and `shared_ptr<>`", "user": {"login": "Timmmm", "id": 376842, "node_id": "MDQ6VXNlcjM3Njg0Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/376842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Timmmm", "html_url": "https://github.com/Timmmm", "followers_url": "https://api.github.com/users/Timmmm/followers", "following_url": "https://api.github.com/users/Timmmm/following{/other_user}", "gists_url": "https://api.github.com/users/Timmmm/gists{/gist_id}", "starred_url": "https://api.github.com/users/Timmmm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Timmmm/subscriptions", "organizations_url": "https://api.github.com/users/Timmmm/orgs", "repos_url": "https://api.github.com/users/Timmmm/repos", "events_url": "https://api.github.com/users/Timmmm/events{/privacy}", "received_events_url": "https://api.github.com/users/Timmmm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-02-16T17:03:00Z", "updated_at": "2018-02-28T18:09:42Z", "closed_at": "2018-02-24T10:57:25Z", "author_association": "NONE", "body": "If you try something like this:\r\n\r\n```\r\nstd::unique_ptr<int> a = ...;\r\njson j = a;\r\n```\r\n\r\nIt will fail with a template error (`get_json()` isn't defined for `unique_ptr`). I can't see a good reason why that shouldn't work by default. I would expect `null` for null pointers and the actual value otherwise."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/974", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/974/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/974/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/974/events", "html_url": "https://github.com/nlohmann/json/issues/974", "id": 297591743, "node_id": "MDU6SXNzdWUyOTc1OTE3NDM=", "number": 974, "title": "Unexpected end of input (not same as one before)", "user": {"login": "DragonOsman", "id": 18173932, "node_id": "MDQ6VXNlcjE4MTczOTMy", "avatar_url": "https://avatars3.githubusercontent.com/u/18173932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DragonOsman", "html_url": "https://github.com/DragonOsman", "followers_url": "https://api.github.com/users/DragonOsman/followers", "following_url": "https://api.github.com/users/DragonOsman/following{/other_user}", "gists_url": "https://api.github.com/users/DragonOsman/gists{/gist_id}", "starred_url": "https://api.github.com/users/DragonOsman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DragonOsman/subscriptions", "organizations_url": "https://api.github.com/users/DragonOsman/orgs", "repos_url": "https://api.github.com/users/DragonOsman/repos", "events_url": "https://api.github.com/users/DragonOsman/events{/privacy}", "received_events_url": "https://api.github.com/users/DragonOsman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-15T20:49:58Z", "updated_at": "2018-02-17T21:47:38Z", "closed_at": "2018-02-17T21:47:33Z", "author_association": "NONE", "body": "As the title says, my issue is an \"unexpected end of input\" error.  I have a HTTP web server I'm writing using an example from the Boost.Beast library, and in it I want to send a request to a currency API that gives back its response as JSON data.  I'm trying to use this library for that.  \r\n\r\nI don't know what exactly caused the problem, but I can provide a link to a Gist with all of my code here at least: https://gist.github.com/DragonOsman/9a7d4ee116efc575dece7d6de46bd31d . The HTML and JavaScript files provided are also part of the project and may be needed to reproduce the issue.\r\n\r\nThe expected behavior for the JSON part is that I should get back a conversion rate as JSON data that would be stored in my cache storage.  \r\n\r\nThe actual behavior is that I have a message that says there's an unexpected input error, and it seems like the response body I was expecting isn't there.  There are other problems in the program itself, but I don't think I should talk about them here since this is about the JSON library.  \r\n\r\nThe compiler I'm using is MSVC, latest version.  Visual Studio 2017 IDE.  OS is Windows 10.\r\n\r\nThis is not a bug report, just an issue I'm having that I thought I should ask about.  Any help would be appreciated.  Thanks in advance.\r\n\r\nEdit to add: I forgot to say this earlier; I used ParcelJS to build my front-end code to make the `country-currency-map` stuff work.  It runs its own server, though, so I had to close that and then run the application which has its own server."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/973", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/973/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/973/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/973/events", "html_url": "https://github.com/nlohmann/json/issues/973", "id": 297064213, "node_id": "MDU6SXNzdWUyOTcwNjQyMTM=", "number": 973, "title": "Segfault on direct initializing json object", "user": {"login": "dns13", "id": 4911959, "node_id": "MDQ6VXNlcjQ5MTE5NTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4911959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dns13", "html_url": "https://github.com/dns13", "followers_url": "https://api.github.com/users/dns13/followers", "following_url": "https://api.github.com/users/dns13/following{/other_user}", "gists_url": "https://api.github.com/users/dns13/gists{/gist_id}", "starred_url": "https://api.github.com/users/dns13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dns13/subscriptions", "organizations_url": "https://api.github.com/users/dns13/orgs", "repos_url": "https://api.github.com/users/dns13/repos", "events_url": "https://api.github.com/users/dns13/events{/privacy}", "received_events_url": "https://api.github.com/users/dns13/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 729086061, "node_id": "MDU6TGFiZWw3MjkwODYwNjE=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20arm", "name": "platform: arm", "color": "eb6420", "default": false}, {"id": 344572510, "node_id": "MDU6TGFiZWwzNDQ1NzI1MTA=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20help%20needed", "name": "state: help needed", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-02-14T11:37:21Z", "updated_at": "2018-03-05T15:06:17Z", "closed_at": "2018-03-05T15:06:17Z", "author_association": "CONTRIBUTOR", "body": "I'm currently updating from 2.x to 3.1.1: Now my default initialisation of json objects is causing a SEGFAULT:\r\n\r\nExample:\r\n```c++\r\njson root = {\r\n    {\"command\", \"request_token\"},\r\n    {\"payload\", {\r\n        {\"token\", child_info.token}\r\n    }}\r\n};\r\n```\r\n\r\nThis code is working fine:\r\n```c++\r\njson root;\r\nroot = {\r\n    {\"command\", \"request_token\"},\r\n    {\"payload\", {\r\n        {\"token\", child_info.token}\r\n    }}\r\n};\r\n```\r\n\r\nI'm experiencing this in only one single way to call the containing function:\r\nI'm using a command string parsed from an json object, and a std::map to map that string to an enumeration object, which I pass to a switch statement to determine which function to be called.\r\n\r\nIf I skip the switch statement, and determine the calling of the function by directly comparing the command string, it won't crash.\r\n\r\nI'm using gcc 4.9.2 with cross compiling to armv7.\r\n\r\nHeres a backtrace after crashing:\r\n\r\n```\r\n#0  0x0003e32c in nlohmann::basic_json<std::map, std::vector, std::string, bool, long long, unsigned long long, double, std::allocator, nlohmann::adl_serializer>::json_value::destroy(nlohmann::detail::value_t) ()\r\n#1  0x0002cef4 in int (anonymous namespace)::command_expr_request_token<0, 0>(nlohmann::basic_json<std::map, std::vector, std::string, bool, long long, unsigned long long, double, std::allocator, nlohmann::adl_serializer> const&, conn_info_t&, bio_st*, int, bool) [clone .isra.1043] ()\r\n#2  0x00044b38 in parseCommand(nlohmann::basic_json<std::map, std::vector, std::string, bool, long long, unsigned long long, double, std::allocator, nlohmann::adl_serializer> const&, conn_info_t&, bio_st*) ()\r\n#3  0x0006e4b4 in (anonymous namespace)::thread_child(bio_st*) ()\r\n#4  0x4b2c7f68 in ?? () from /usr/lib/libstdc++.so.6\r\n#5  0x4b146068 in ?? () from /lib/libpthread.so.0\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/972", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/972/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/972/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/972/events", "html_url": "https://github.com/nlohmann/json/issues/972", "id": 296994491, "node_id": "MDU6SXNzdWUyOTY5OTQ0OTE=", "number": 972, "title": "Segmentation fault on G++ when trying to assign json string literal to custom json type.", "user": {"login": "zaycakitayca", "id": 2539038, "node_id": "MDQ6VXNlcjI1MzkwMzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2539038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zaycakitayca", "html_url": "https://github.com/zaycakitayca", "followers_url": "https://api.github.com/users/zaycakitayca/followers", "following_url": "https://api.github.com/users/zaycakitayca/following{/other_user}", "gists_url": "https://api.github.com/users/zaycakitayca/gists{/gist_id}", "starred_url": "https://api.github.com/users/zaycakitayca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zaycakitayca/subscriptions", "organizations_url": "https://api.github.com/users/zaycakitayca/orgs", "repos_url": "https://api.github.com/users/zaycakitayca/repos", "events_url": "https://api.github.com/users/zaycakitayca/events{/privacy}", "received_events_url": "https://api.github.com/users/zaycakitayca/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/23", "html_url": "https://github.com/nlohmann/json/milestone/23", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/23/labels", "id": 3114191, "node_id": "MDk6TWlsZXN0b25lMzExNDE5MQ==", "number": 23, "title": "Release 3.1.2", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "closed", "created_at": "2018-02-13T18:42:55Z", "updated_at": "2018-03-14T20:25:26Z", "due_on": "2018-03-14T07:00:00Z", "closed_at": "2018-03-14T20:25:26Z"}, "comments": 11, "created_at": "2018-02-14T06:58:36Z", "updated_at": "2018-03-06T18:28:38Z", "closed_at": "2018-03-06T18:28:37Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\nThis is the minimal code demonstrating the problem.\r\n\r\n```cpp\r\n#include <iostream>\r\n#include \"json.hpp\"\r\n#include \"fifo_map.hpp\"\r\n\r\ntemplate<class K, class V, class dummy_compare, class A>\r\nusing my_workaround_fifo_map = nlohmann::fifo_map<K, V, nlohmann::fifo_map_compare<K>, A>;\r\nusing my_json = nlohmann::basic_json<my_workaround_fifo_map>;\r\n\r\nint main()\r\n{\r\n\tmy_json foo = R\"([1, 2, 3])\"_json;\r\n\t\r\n\tstd::cout << foo << std::endl;\r\n}\r\n```\r\n\r\n```\r\n$ g++ --version\r\ng++ (GCC) 7.3.0\r\n$ uname -a\r\nLinux daddy 4.14.15-1-ARCH #1 SMP PREEMPT Tue Jan 23 21:49:25 UTC 2018 x86_64 GNU/Linux\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/971", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/971/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/971/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/971/events", "html_url": "https://github.com/nlohmann/json/issues/971", "id": 296874755, "node_id": "MDU6SXNzdWUyOTY4NzQ3NTU=", "number": 971, "title": "Add a SAX parser", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 304694104, "node_id": "MDU6TGFiZWwzMDQ2OTQxMDQ=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20please%20discuss", "name": "state: please discuss", "color": "fbca04", "default": false}], "state": "open", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 70, "created_at": "2018-02-13T20:29:29Z", "updated_at": "2018-07-04T06:43:19Z", "closed_at": null, "author_association": "OWNER", "body": "The library currently only supports DOM-like parsing. This does not scale when the input files are enormous (#927). I would like to discuss how a SAX-like parser could look like.\r\n\r\nMy proposal (heavily motivated by [RapidJSON](http://rapidjson.org/md_doc_sax.html)) is as follows:\r\n\r\n```cpp\r\nstruct SAX\r\n{\r\n    // a null value was read\r\n    bool null();\r\n\r\n    // a boolean value was read\r\n    bool boolean(bool);\r\n\r\n    // an integer number was read\r\n    bool number_integer(number_integer_t);\r\n\r\n    // an unsigned integer number was read\r\n    bool number_unsigned(number_unsigned_t);\r\n\r\n    // a floating-point number was read\r\n    // the string parameter contains the raw number value\r\n    bool number_float(number_float_t, const std::string&);\r\n\r\n    // a string value was read\r\n    bool string(const std::string&);\r\n\r\n    // the beginning of an object was read\r\n    // binary formats may report the number of elements\r\n    bool start_object(std::size_t elements);\r\n\r\n    // an object key was read\r\n    bool key(const std::string&);\r\n\r\n    // the end of an object was read\r\n    bool end_object();\r\n\r\n    // the beginning of an array was read\r\n    // binary formats may report the number of elements\r\n    bool start_array(std::size_t elements);\r\n\r\n    // the end of an array was read\r\n    bool end_array();\r\n\r\n    // a binary value was read\r\n    // examples are CBOR type 2 strings, MessagePack bin, and maybe UBJSON array<uint8t>\r\n    bool binary(const std::vector<uint8_t>& vec);\r\n\r\n    // a parse error occurred\r\n    // the byte position and the last token are reported\r\n    bool parse_error(int position, const std::string& last_token);\r\n};\r\n```\r\n\r\nSome remarks:\r\n\r\n- All functions return a `bool`: `true` if the parser should continue or `false` if the parser should stop processing the input.\r\n- The proposal covers parsing of JSON, but also of CBOR, MessagePack, and UBJSON. Therefore, it contains extensions like array or object sizes as well as a binary type which do not occur when parsing JSON.\r\n- The idea is that the user would implement the above struct (we need to discuss whether we make all functions virtual, define a default implementation, etc.) and pass it to new parse functions, e.g. `void parse_json(SAX &sax);` or `void parse_ubjson(SAX &sax);`.\r\n\r\nWhat do you think?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/970", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/970/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/970/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/970/events", "html_url": "https://github.com/nlohmann/json/issues/970", "id": 296739218, "node_id": "MDU6SXNzdWUyOTY3MzkyMTg=", "number": 970, "title": "os_defines.h:44:19: error: missing binary operator before token \"(\"", "user": {"login": "joxeankoret", "id": 2945834, "node_id": "MDQ6VXNlcjI5NDU4MzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/2945834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joxeankoret", "html_url": "https://github.com/joxeankoret", "followers_url": "https://api.github.com/users/joxeankoret/followers", "following_url": "https://api.github.com/users/joxeankoret/following{/other_user}", "gists_url": "https://api.github.com/users/joxeankoret/gists{/gist_id}", "starred_url": "https://api.github.com/users/joxeankoret/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joxeankoret/subscriptions", "organizations_url": "https://api.github.com/users/joxeankoret/orgs", "repos_url": "https://api.github.com/users/joxeankoret/repos", "events_url": "https://api.github.com/users/joxeankoret/events{/privacy}", "received_events_url": "https://api.github.com/users/joxeankoret/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2018-02-13T13:36:43Z", "updated_at": "2018-02-15T09:22:32Z", "closed_at": "2018-02-15T09:22:32Z", "author_association": "NONE", "body": "Hi!\r\n\r\nI'm trying to build an old Intel PIN tool using the current GitHub's version of the single include file json.hpp. I noticed that it fails building in my system (Ubuntu 16.04 x86_64, tested with g++ 5.0 and 4.9). This the very first error I get:\r\n\r\n```\r\nIn file included from /usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h:482:0,\r\n                 from /usr/include/c++/5/initializer_list:41,\r\n                 from json.hpp:41,\r\n                 from Tracer.h:24,\r\n                 from Tracer.cpp:5:\r\n/usr/include/x86_64-linux-gnu/c++/5/bits/os_defines.h:44:19: error: missing binary operator before token \"(\"\r\n #if __GLIBC_PREREQ(2,15) && defined(_GNU_SOURCE)\r\n                   ^\r\n```\r\n\r\nI tried including features.h before \"json.hpp\", defining myself __GLIBC_PREREQ to trick it, but it fails in other ways, so I guess I'm doing something wrong :)\r\n\r\nAny ideas?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/969", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/969/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/969/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/969/events", "html_url": "https://github.com/nlohmann/json/pull/969", "id": 296315972, "node_id": "MDExOlB1bGxSZXF1ZXN0MTY4NTM1MDE5", "number": 969, "title": "Fix constraints on from_json(CompatibleArrayType)", "user": {"login": "theodelrieu", "id": 15652306, "node_id": "MDQ6VXNlcjE1NjUyMzA2", "avatar_url": "https://avatars1.githubusercontent.com/u/15652306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theodelrieu", "html_url": "https://github.com/theodelrieu", "followers_url": "https://api.github.com/users/theodelrieu/followers", "following_url": "https://api.github.com/users/theodelrieu/following{/other_user}", "gists_url": "https://api.github.com/users/theodelrieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/theodelrieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theodelrieu/subscriptions", "organizations_url": "https://api.github.com/users/theodelrieu/orgs", "repos_url": "https://api.github.com/users/theodelrieu/repos", "events_url": "https://api.github.com/users/theodelrieu/events{/privacy}", "received_events_url": "https://api.github.com/users/theodelrieu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/21", "html_url": "https://github.com/nlohmann/json/milestone/21", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/21/labels", "id": 3003937, "node_id": "MDk6TWlsZXN0b25lMzAwMzkzNw==", "number": 21, "title": "Release 3.1.1", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 9, "state": "closed", "created_at": "2017-12-29T19:16:13Z", "updated_at": "2018-02-13T18:42:47Z", "due_on": "2018-02-13T08:00:00Z", "closed_at": "2018-02-13T18:42:47Z"}, "comments": 2, "created_at": "2018-02-12T09:52:26Z", "updated_at": "2018-02-12T17:35:05Z", "closed_at": "2018-02-12T17:17:59Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/969", "html_url": "https://github.com/nlohmann/json/pull/969", "diff_url": "https://github.com/nlohmann/json/pull/969.diff", "patch_url": "https://github.com/nlohmann/json/pull/969.patch"}, "body": "Fixes #924\r\n\r\nThe constraints on that overload were incorrect. We were checking that the `Array::value_type` could be converted **to** json, which makes no sense.\r\n\r\nSurprising that no one had this issue before, I guess everybody converts from and to json...\r\n\r\nAnyway, it should not happen from now.\r\n\r\n* * *\r\n\r\n## Pull request checklist\r\n\r\nRead the [Contribution Guidelines](https://github.com/nlohmann/json/blob/develop/.github/CONTRIBUTING.md) for detailed information.\r\n\r\n- [x]  Changes are described in the pull request, or an [existing issue is referenced](https://github.com/nlohmann/json/issues).\r\n- [x]  The test suite [compiles and runs](https://github.com/nlohmann/json/blob/develop/README.md#execute-unit-tests) without error.\r\n- [x]  [Code coverage](https://coveralls.io/github/nlohmann/json) is 100%. Test cases can be added by editing the [test suite](https://github.com/nlohmann/json/tree/develop/test/src).\r\n- [x]  The source code is amalgamated; that is, after making changes to the sources in the `include/nlohmann` directory, run `make amalgamate` to create the single-header file `single_include/nlohmann/json.hpp`. The whole process is described [here](https://github.com/nlohmann/json/blob/develop/.github/CONTRIBUTING.md#files-to-change).\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/968", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/968/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/968/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/968/events", "html_url": "https://github.com/nlohmann/json/issues/968", "id": 296193668, "node_id": "MDU6SXNzdWUyOTYxOTM2Njg=", "number": 968, "title": "Updation of child object isn't reflected in parent Object", "user": {"login": "traw", "id": 2088753, "node_id": "MDQ6VXNlcjIwODg3NTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2088753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/traw", "html_url": "https://github.com/traw", "followers_url": "https://api.github.com/users/traw/followers", "following_url": "https://api.github.com/users/traw/following{/other_user}", "gists_url": "https://api.github.com/users/traw/gists{/gist_id}", "starred_url": "https://api.github.com/users/traw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/traw/subscriptions", "organizations_url": "https://api.github.com/users/traw/orgs", "repos_url": "https://api.github.com/users/traw/repos", "events_url": "https://api.github.com/users/traw/events{/privacy}", "received_events_url": "https://api.github.com/users/traw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-11T14:22:40Z", "updated_at": "2018-02-11T15:59:52Z", "closed_at": "2018-02-11T15:58:32Z", "author_association": "NONE", "body": "I've following snippet, where I read and modify child obj attributes with `at`, But it doesn't get reflected in parent Obj. At the end of following code  `_root` is written to file, But with previoius values of `_child[\"array\"]`. \r\n```\r\nvoid fun(std::vector<int> &vec) {\r\n        std::ifstream in(file);\r\n        _root = Json::parse(in);\r\n        in.close();\r\n        if (_root.find(\"child\") != _root.end()) {\r\n            _child = _root.at(\"child\");\r\n            _child[\"array\"] = vec;\r\n          std::ofstream writer(file);\r\n          writer << root;    \r\n        }\r\n}\r\n``` \r\n\r\nFor example Previous values for `_child[\"array\"]` were `[1, 2]` and  `vec` contains `[99, 98]`. So at the end it should be 99, 98. \r\n\r\nPrevious Json values:\r\n```\r\n{\r\n  \"child\" : {\r\n     \"array\" : [1, 2]\r\n  }\r\n} \r\n```\r\n\r\nExpected Json Values:\r\n```\r\n\r\n{\r\n  \"child\" : {\r\n     \"array\" : [99, 98]\r\n  }\r\n} \r\n```\r\n\r\nAm I doing it right? "}, {"url": "https://api.github.com/repos/nlohmann/json/issues/967", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/967/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/967/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/967/events", "html_url": "https://github.com/nlohmann/json/issues/967", "id": 296150709, "node_id": "MDU6SXNzdWUyOTYxNTA3MDk=", "number": 967, "title": "Passing an iteration object by reference to a function", "user": {"login": "J-e-r-e-m-i-a-h", "id": 31524381, "node_id": "MDQ6VXNlcjMxNTI0Mzgx", "avatar_url": "https://avatars0.githubusercontent.com/u/31524381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/J-e-r-e-m-i-a-h", "html_url": "https://github.com/J-e-r-e-m-i-a-h", "followers_url": "https://api.github.com/users/J-e-r-e-m-i-a-h/followers", "following_url": "https://api.github.com/users/J-e-r-e-m-i-a-h/following{/other_user}", "gists_url": "https://api.github.com/users/J-e-r-e-m-i-a-h/gists{/gist_id}", "starred_url": "https://api.github.com/users/J-e-r-e-m-i-a-h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/J-e-r-e-m-i-a-h/subscriptions", "organizations_url": "https://api.github.com/users/J-e-r-e-m-i-a-h/orgs", "repos_url": "https://api.github.com/users/J-e-r-e-m-i-a-h/repos", "events_url": "https://api.github.com/users/J-e-r-e-m-i-a-h/events{/privacy}", "received_events_url": "https://api.github.com/users/J-e-r-e-m-i-a-h/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-02-11T01:35:11Z", "updated_at": "2018-02-18T12:06:13Z", "closed_at": "2018-02-18T12:06:13Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\nI cannot pass a JSON iteration object by reference to a function\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\n```\r\nnlohmann::json j;\r\nstd::ifstream if( \"C:\\\\example.json\" );\r\nj << if;\r\nif.close( );\r\n\r\n/*...*/\r\n\r\nvoid square( int &in )\r\n{\r\n    in *= in;\r\n}\r\n\r\n/*...*/\r\n\r\nsquare( &j[ \"int\" ] );\r\n```\r\n- What is the expected behavior?\r\nTo be able to pass the object by reference, rather than this:\r\n```\r\nint buf = j[ \"int\" ];\r\nsquare( &buf );\r\nj[ \"int\" ] = buf;\r\n```\r\n- And what is the actual behavior instead?\r\n`Error (active)    E0167    argument of type \"nlohmann::basic_json<std::map, std::vector, std::string, bool, int64_t, uint64_t, double, std::allocator, nlohmann::adl_serializer> *\" is incompatible with parameter of type \"int *\"`\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\nVisual Studio 2017 15.5.3, Windows 10\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\nReleased\r\n\r\n- If you experience a compilation error: can you [compile and run the unit tests](https://github.com/nlohmann/json#execute-unit-tests)?\r\nYes"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/966", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/966/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/966/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/966/events", "html_url": "https://github.com/nlohmann/json/issues/966", "id": 296073270, "node_id": "MDU6SXNzdWUyOTYwNzMyNzA=", "number": 966, "title": "How to add user defined C++ path to sublime text ", "user": {"login": "Prateek0601", "id": 33068264, "node_id": "MDQ6VXNlcjMzMDY4MjY0", "avatar_url": "https://avatars2.githubusercontent.com/u/33068264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Prateek0601", "html_url": "https://github.com/Prateek0601", "followers_url": "https://api.github.com/users/Prateek0601/followers", "following_url": "https://api.github.com/users/Prateek0601/following{/other_user}", "gists_url": "https://api.github.com/users/Prateek0601/gists{/gist_id}", "starred_url": "https://api.github.com/users/Prateek0601/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Prateek0601/subscriptions", "organizations_url": "https://api.github.com/users/Prateek0601/orgs", "repos_url": "https://api.github.com/users/Prateek0601/repos", "events_url": "https://api.github.com/users/Prateek0601/events{/privacy}", "received_events_url": "https://api.github.com/users/Prateek0601/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-02-10T04:40:43Z", "updated_at": "2018-02-12T17:11:44Z", "closed_at": "2018-02-11T16:40:16Z", "author_association": "NONE", "body": "#I am using C++ Programming language.\r\n\r\n#Windows 10 1709 (build 16299.192).\r\n\r\n#GCC(g++)4.8.0.\r\n\r\n#I want to use my own Modules to my Program so how could i add that library to sublime text 3.I tried to add the path to the 'Environment variables'but still shows error'.\r\ncheck\r\n\r\n![check](https://user-images.githubusercontent.com/33068264/36058596-6cb70772-0dd9-11e8-9a6c-d7e7f045d7d3.png)\r\n"}]