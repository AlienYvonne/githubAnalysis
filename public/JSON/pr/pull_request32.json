[{"url": "https://api.github.com/repos/nlohmann/json/issues/59", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/59/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/59/events", "html_url": "https://github.com/nlohmann/json/pull/59", "id": 68387177, "node_id": "MDExOlB1bGxSZXF1ZXN0MzMyNjA0NTc=", "number": 59, "title": "Fix compilation of json_unit with GCC 5", "user": {"login": "dkopecek", "id": 1353140, "node_id": "MDQ6VXNlcjEzNTMxNDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1353140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkopecek", "html_url": "https://github.com/dkopecek", "followers_url": "https://api.github.com/users/dkopecek/followers", "following_url": "https://api.github.com/users/dkopecek/following{/other_user}", "gists_url": "https://api.github.com/users/dkopecek/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkopecek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkopecek/subscriptions", "organizations_url": "https://api.github.com/users/dkopecek/orgs", "repos_url": "https://api.github.com/users/dkopecek/repos", "events_url": "https://api.github.com/users/dkopecek/events{/privacy}", "received_events_url": "https://api.github.com/users/dkopecek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-14T14:07:23Z", "updated_at": "2015-04-15T07:44:58Z", "closed_at": "2015-04-15T06:53:40Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/59", "html_url": "https://github.com/nlohmann/json/pull/59", "diff_url": "https://github.com/nlohmann/json/pull/59.diff", "patch_url": "https://github.com/nlohmann/json/pull/59.patch"}, "body": "Addressing:\n\n```\n+ make json_unit\ng++ -std=c++11  -Wall -Wextra -pedantic -Weffc++ -Wcast-align -Wcast-qual -Wctor-dtor-privacy -Wdisabled-optimization -Wformat=2 -Winit-self -Wmissing-declarations -Wmissing-include-dirs -Wold-style-cast -Woverloaded-virtual -Wredundant-decls -Wshadow -Wsign-conversion -Wsign-promo -Wstrict-overflow=5 -Wswitch -Wundef -Wno-unused -Wnon-virtual-dtor -Wreorder -Wdeprecated -Wfloat-equal  -I src -I test -Dprivate=public test/unit.cpp  -o json_unit\nIn file included from test/catch.hpp:65:0,\n                 from test/unit.cpp:11:\n/usr/include/c++/5.0.0/sstream:300:7: error: 'struct std::__cxx11::basic_stringbuf<_CharT, _Traits, _Alloc>::__xfer_bufptrs' redeclared with different access\n       struct __xfer_bufptrs\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/41", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/41/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/41/events", "html_url": "https://github.com/nlohmann/json/pull/41", "id": 59564873, "node_id": "MDExOlB1bGxSZXF1ZXN0MzAzMjkxMzM=", "number": 41, "title": "Add parser callback with the ability to filter results.", "user": {"login": "aburgh", "id": 191582, "node_id": "MDQ6VXNlcjE5MTU4Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/191582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aburgh", "html_url": "https://github.com/aburgh", "followers_url": "https://api.github.com/users/aburgh/followers", "following_url": "https://api.github.com/users/aburgh/following{/other_user}", "gists_url": "https://api.github.com/users/aburgh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aburgh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aburgh/subscriptions", "organizations_url": "https://api.github.com/users/aburgh/orgs", "repos_url": "https://api.github.com/users/aburgh/repos", "events_url": "https://api.github.com/users/aburgh/events{/privacy}", "received_events_url": "https://api.github.com/users/aburgh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 14, "created_at": "2015-03-02T22:49:01Z", "updated_at": "2015-05-10T21:47:51Z", "closed_at": "2015-05-06T17:51:03Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/41", "html_url": "https://github.com/nlohmann/json/pull/41", "diff_url": "https://github.com/nlohmann/json/pull/41.diff", "patch_url": "https://github.com/nlohmann/json/pull/41.patch"}, "body": "This request builds on the \"incremental\" pull request. I separated the two in case you find this change objectionable. The changes implement a callback to a user-provided function (which can be a closure) to notify the user of key parser events: entering object and array elements, closing object and array elements, parsing an object key, and parsing a value. This enables processing elements as they are parsed, for example to provide progress feedback. More importantly, the user function returns a bool to indicate whether to keep the value. This can be used to filter the accumulated elements to reduce memory consumption. There is a default callback provided, so it existing code should compile and work as before.\n\nBelow is an example use case. It parses a JSON file that consists of an array (which is inside a simple object) of a large number of objects. The example just pretty-prints the result, discarding all dictionaries at a depth of 2, but it could do more interesting processing. Without the callback, a 4.1 MB test file uses 12.5 MB of memory. With the callback, it peaks at around 680 KB, most of which is process overhead.\n\n``` C++\nusing namespace std;\nusing json = nlohmann::json;\n\nstatic const auto tab = '\\t';\nifstream stream(\"/tmp/test/json/data.json\");\n\n...\n{\n        bool keyed = false;\n\n        json j = json::parse(stream, [&keyed] (int depth, json::parse_event_t event, const json& element) -> bool {\n\n            switch (event) {\n                case json::parse_event_t::object_start:\n                    if (not keyed)\n                        for (int i = 0; i < depth; i++) cout << tab;\n                    cout << '{' << endl;\n                    keyed = false;\n                    break;\n\n                case json::parse_event_t::object_end:\n                    for (int i = 0; i < depth; i++) cout << tab;\n                    cout << '}' << endl;\n                    if (depth == 2) return false;\n                    break;\n\n                case json::parse_event_t::array_start:\n                    if (not keyed)\n                        for (int i = 0; i < depth; i++) cout << tab;\n                    cout << '[' << endl;\n                    keyed = false;\n                    break;\n\n                case json::parse_event_t::array_end:\n                    for (int i = 0; i < depth; i++) cout << tab;\n                    cout << ']' << endl;\n                    break;\n\n                case json::parse_event_t::key:\n                    for (int i = 0; i < depth; i++) cout << tab;\n                    cout << element << \" = \";\n                    keyed = true;\n                    break;\n\n                case json::parse_event_t::value:\n                    if (keyed) {\n                        cout << element << endl;\n                    }\n                    else {\n                        for (int i = 0; i < depth; i++) cout << tab;\n                        cout << element << endl;\n                    }\n                    keyed = false;\n                    break;\n\n                default:\n                    break;\n            }\n            return true;\n        });\n    }\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/40", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/40/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/40/events", "html_url": "https://github.com/nlohmann/json/pull/40", "id": 59393102, "node_id": "MDExOlB1bGxSZXF1ZXN0MzAyNDA4ODA=", "number": 40, "title": "Parse streams incrementally.", "user": {"login": "aburgh", "id": 191582, "node_id": "MDQ6VXNlcjE5MTU4Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/191582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aburgh", "html_url": "https://github.com/aburgh", "followers_url": "https://api.github.com/users/aburgh/followers", "following_url": "https://api.github.com/users/aburgh/following{/other_user}", "gists_url": "https://api.github.com/users/aburgh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aburgh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aburgh/subscriptions", "organizations_url": "https://api.github.com/users/aburgh/orgs", "repos_url": "https://api.github.com/users/aburgh/repos", "events_url": "https://api.github.com/users/aburgh/events{/privacy}", "received_events_url": "https://api.github.com/users/aburgh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-03-01T11:48:49Z", "updated_at": "2015-05-10T21:47:52Z", "closed_at": "2015-03-24T16:57:40Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/40", "html_url": "https://github.com/nlohmann/json/pull/40", "diff_url": "https://github.com/nlohmann/json/pull/40.diff", "patch_url": "https://github.com/nlohmann/json/pull/40.patch"}, "body": "I did not update `src/json.hpp` because I get different indentation results than the existing version.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/38", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/38/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/38/events", "html_url": "https://github.com/nlohmann/json/pull/38", "id": 59349361, "node_id": "MDExOlB1bGxSZXF1ZXN0MzAyMjcyNTc=", "number": 38, "title": "Feature/small float serialization", "user": {"login": "jrandall", "id": 458361, "node_id": "MDQ6VXNlcjQ1ODM2MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/458361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrandall", "html_url": "https://github.com/jrandall", "followers_url": "https://api.github.com/users/jrandall/followers", "following_url": "https://api.github.com/users/jrandall/following{/other_user}", "gists_url": "https://api.github.com/users/jrandall/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrandall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrandall/subscriptions", "organizations_url": "https://api.github.com/users/jrandall/orgs", "repos_url": "https://api.github.com/users/jrandall/repos", "events_url": "https://api.github.com/users/jrandall/events{/privacy}", "received_events_url": "https://api.github.com/users/jrandall/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-02-28T17:20:15Z", "updated_at": "2015-03-23T19:28:18Z", "closed_at": "2015-03-23T19:15:50Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/38", "html_url": "https://github.com/nlohmann/json/pull/38", "diff_url": "https://github.com/nlohmann/json/pull/38.diff", "patch_url": "https://github.com/nlohmann/json/pull/38.patch"}, "body": "Adds a test for small floats (which previously failed) along with a fix \nfor dump() that makes the test pass. \n\nNow uses std::snprintf() to generate a \"%.15g\" formatted string\nfor JSON values of type number_float. 15 decimals digits are\nenough to round-trip an IEEE 754 double from string->double->string\nand get an identical result.\n\nstd::snprintf is called twice. Once to determine the required\nbuffer size and then again after allocating a buffer of that\nsize.\n\nNote that the buffer size _could_ be hardcoded for better\nperformance. \"%.15g\" should result in strings of maximum length\n23, plus one character for the terminating null for a buffer size\nof 24. Let me know if you'd like me to switch to a fixed buffer \nsize to avoid the extra call to snprintf and the overhead of \ndynamic memory allocation. \n\nFixes #37 \n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/36", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/36/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/36/events", "html_url": "https://github.com/nlohmann/json/pull/36", "id": 58142748, "node_id": "MDExOlB1bGxSZXF1ZXN0Mjk1NzIwOTA=", "number": 36, "title": "template version with re2c scanner", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-18T22:57:37Z", "updated_at": "2015-02-18T23:04:59Z", "closed_at": "2015-02-18T23:04:28Z", "author_association": "OWNER", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/36", "html_url": "https://github.com/nlohmann/json/pull/36", "diff_url": "https://github.com/nlohmann/json/pull/36.diff", "patch_url": "https://github.com/nlohmann/json/pull/36.patch"}, "body": "- _Changed:_ In the generic class `basic_json`, all JSON value types (array, object, string, bool, integer number, and floating-point) are now **templated**. That is, you can choose whether you like a `std::list` for your arrays or an `std::unordered_map` for your objects. The specialization `json` sets some reasonable defaults.\n- _Changed:_ The library now consists of a single header, called `json.hpp`. Consequently, build systems such as Automake or CMake are not any longer required.\n- _Changed:_ The **deserialization** is now supported by a lexer generated with [re2c](http://re2c.org) from file [`src/json.hpp.re2c`](https://github.com/nlohmann/json/blob/master/src/json.hpp.re2c). As a result, we follow the JSON specification more strictly. Note neither the tool re2c nor its input are required to use the class.\n- _Added:_ The library now satisfies the [**ReversibleContainer**](http://en.cppreference.com/w/cpp/concept/ReversibleContainer) requirement. It hence provides four different iterators (`iterator`, `const_iterator`, `reverse_iterator`, and `const_reverse_iterator`), comparison functions, `swap()`, `size()`, `max_size()`, and `empty()` member functions.\n- _Added_: The class uses **user-defined allocators** which default to `std::allocator`, but can be templated via parameter `Allocator`.\n- _Added:_ To simplify pretty-printing, the `std::setw` **stream manipulator** has been overloaded to set the desired indentation. Pretty-printing a JSON object `j` is as simple as `std::cout << std::setw(4) << j << '\\n'.\n- _Changed_: The type `json::value_t::number` is now called `json::value_t::number_integer` to be more symmetric compared to `json::value_t::number_float`.\n- _Removed:_ The `key()` and `value()` member functions for object iterators were nonstandard and yielded more problems than benefits. They were removed from the library.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/35", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/35/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/35/events", "html_url": "https://github.com/nlohmann/json/pull/35", "id": 56656371, "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg3MTU5MDE=", "number": 35, "title": "fixed duplicate symbols errors on header-only version. issue #16", "user": {"login": "mnpk", "id": 6612387, "node_id": "MDQ6VXNlcjY2MTIzODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6612387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mnpk", "html_url": "https://github.com/mnpk", "followers_url": "https://api.github.com/users/mnpk/followers", "following_url": "https://api.github.com/users/mnpk/following{/other_user}", "gists_url": "https://api.github.com/users/mnpk/gists{/gist_id}", "starred_url": "https://api.github.com/users/mnpk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mnpk/subscriptions", "organizations_url": "https://api.github.com/users/mnpk/orgs", "repos_url": "https://api.github.com/users/mnpk/repos", "events_url": "https://api.github.com/users/mnpk/events{/privacy}", "received_events_url": "https://api.github.com/users/mnpk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-02-05T11:07:40Z", "updated_at": "2015-02-05T18:16:58Z", "closed_at": "2015-02-05T18:16:58Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/35", "html_url": "https://github.com/nlohmann/json/pull/35", "diff_url": "https://github.com/nlohmann/json/pull/35.diff", "patch_url": "https://github.com/nlohmann/json/pull/35.patch"}, "body": "I got duplicate symbols errors when include header-only version in more than one cpp files.\nSo I just add inline keyword before method defines to fix this. Link errors disappeared. Is this enough to close #16?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/34", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/34/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/34/events", "html_url": "https://github.com/nlohmann/json/pull/34", "id": 56527389, "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg2Mzg4OTk=", "number": 34, "title": "(partial) msvc support", "user": {"login": "Zoadian", "id": 880071, "node_id": "MDQ6VXNlcjg4MDA3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/880071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoadian", "html_url": "https://github.com/Zoadian", "followers_url": "https://api.github.com/users/Zoadian/followers", "following_url": "https://api.github.com/users/Zoadian/following{/other_user}", "gists_url": "https://api.github.com/users/Zoadian/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoadian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoadian/subscriptions", "organizations_url": "https://api.github.com/users/Zoadian/orgs", "repos_url": "https://api.github.com/users/Zoadian/repos", "events_url": "https://api.github.com/users/Zoadian/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoadian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-02-04T13:42:30Z", "updated_at": "2015-02-05T18:31:42Z", "closed_at": "2015-02-05T18:21:09Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/34", "html_url": "https://github.com/nlohmann/json/pull/34", "diff_url": "https://github.com/nlohmann/json/pull/34.diff", "patch_url": "https://github.com/nlohmann/json/pull/34.patch"}, "body": "some changes to support compilation with msvc120\nI used .h and .cc files directly without cmake.\n\nalso line 2374 is probably wrong\n\nso this is just the first step to support msvc.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/33", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/33/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/33/events", "html_url": "https://github.com/nlohmann/json/pull/33", "id": 55440022, "node_id": "MDExOlB1bGxSZXF1ZXN0MjgwMDI0Njc=", "number": 33, "title": "more descriptive documentation in example", "user": {"login": "luxe", "id": 1312081, "node_id": "MDQ6VXNlcjEzMTIwODE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1312081?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luxe", "html_url": "https://github.com/luxe", "followers_url": "https://api.github.com/users/luxe/followers", "following_url": "https://api.github.com/users/luxe/following{/other_user}", "gists_url": "https://api.github.com/users/luxe/gists{/gist_id}", "starred_url": "https://api.github.com/users/luxe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luxe/subscriptions", "organizations_url": "https://api.github.com/users/luxe/orgs", "repos_url": "https://api.github.com/users/luxe/repos", "events_url": "https://api.github.com/users/luxe/events{/privacy}", "received_events_url": "https://api.github.com/users/luxe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-01-26T02:00:36Z", "updated_at": "2015-01-26T06:51:55Z", "closed_at": "2015-01-26T06:51:40Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/33", "html_url": "https://github.com/nlohmann/json/pull/33", "diff_url": "https://github.com/nlohmann/json/pull/33.diff", "patch_url": "https://github.com/nlohmann/json/pull/33.patch"}, "body": "I wasn't sure what that parameter was at first glance\n"}]