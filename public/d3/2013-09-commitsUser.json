{"mbostock@gmail.com": [{"date": "2013-09-26T21:38:51Z", "message": "Merge branch '3.3.6'", "url": "https://api.github.com/repos/d3/d3/commits/2c93d9c1924461708876781cdc96f139b205c33d"}, {"date": "2013-09-26T21:38:01Z", "message": "Update dependencies.", "url": "https://api.github.com/repos/d3/d3/commits/c6f9932035449a7efe942b55aa57a0eccf6b4fe7"}, {"date": "2013-09-26T21:26:06Z", "message": "Merge remote-tracking branch 'origin/fix-zero-duration-transitions' into 3.3.6", "url": "https://api.github.com/repos/d3/d3/commits/328cd9f17f27fa1df7d6d58269ed1bb0b85b93e4"}, {"date": "2013-09-26T21:08:16Z", "message": "Don\u2019t pollute an ordinal scale\u2019s domain.\n\nFixes #1550. By using the copy of the new scale (which we make anyway for a\nsnapshot) we avoid polluting the scale\u2019s domain with the old values when using\nthe scale as the key function for the tick data-join.", "url": "https://api.github.com/repos/d3/d3/commits/d2ad436fed9f2238b27f7978ef72efed76f12ed1"}, {"date": "2013-09-25T19:53:21Z", "message": "Merge remote-tracking branch 'origin/fix-clip-extent' into 3.3.6", "url": "https://api.github.com/repos/d3/d3/commits/a76aed5852a30a860176d3094bd0fc0ffa413ced"}, {"date": "2013-09-25T19:00:50Z", "message": "Optimize hyperbolic functions.\n\nNot used much, but still an improvement. http://jsperf.com/hyperbolics", "url": "https://api.github.com/repos/d3/d3/commits/0bf3fc1721e6aab8e76172e9131a46797525b642"}, {"date": "2013-09-25T18:44:50Z", "message": "Move benchmark.", "url": "https://api.github.com/repos/d3/d3/commits/68582505d9c2f2d40b35d099f75a34308d05a831"}, {"date": "2013-09-25T18:43:53Z", "message": "Yay \u03c4!", "url": "https://api.github.com/repos/d3/d3/commits/876e764429bb4c1201b055d8cf7d5d353ed6226c"}, {"date": "2013-09-25T18:39:46Z", "message": "Consolidate.", "url": "https://api.github.com/repos/d3/d3/commits/88862d37c2f904be9eb13358ab1b9d25a20292c6"}, {"date": "2013-09-25T04:31:08Z", "message": "Prevent tick at t = 0.\n\nThis is especially important for a zero-duration transition, where the duration\nis actually one millisecond, and we want the only tick to be at t = 1.", "url": "https://api.github.com/repos/d3/d3/commits/863f618e4d445e5294026a25d01faec5edd1fd8b"}, {"date": "2013-09-25T04:21:10Z", "message": "Simplify.", "url": "https://api.github.com/repos/d3/d3/commits/58325a94191485b34272b86290ad98c21474ea15"}, {"date": "2013-09-21T18:49:09Z", "message": "Merge branch 'fix-implicit-ordinal-domain'", "url": "https://api.github.com/repos/d3/d3/commits/7bb322f645de4766b3ea8acc6f65470330a9d035"}, {"date": "2013-09-21T17:31:07Z", "message": "Restrict implicit domains to explicit ranges.\n\nWhen an ordinal scale\u2019s range is explicitly defined as an array of values, we\ncan build the domain implicitly by progressively assigning values from the\nrange; this is commonly done with color palettes, for example.\n\nHowever, when an ordinal scale\u2019s range is rather implied by chopping a\ncontinuous range into a series of points or bands, then the domain must be\nspecified explicitly: for the scale to be consistent, we need to know the\ncardinality of the domain to compute the implied range values.\n\nThus, it only makes sense to extend the domain implicitly when the range is\nspecified explicitly. Fixes #1536 #1535.", "url": "https://api.github.com/repos/d3/d3/commits/113032bc977ec1d196280597b060e17083bda90d"}, {"date": "2013-09-19T03:52:44Z", "message": "Merge branch '3.3.4'", "url": "https://api.github.com/repos/d3/d3/commits/9ca071eee7db9720b41f860c626c11351462f488"}, {"date": "2013-09-19T03:51:35Z", "message": "Merge remote-tracking branch 'origin/fix-time-degenerate-ticks' into 3.3.4", "url": "https://api.github.com/repos/d3/d3/commits/0d57d390b3f234f7b81e823a7d984791914960d1"}, {"date": "2013-09-19T03:50:30Z", "message": "Merge remote-tracking branch 'origin/fix-axis-tick-key' into 3.3.4", "url": "https://api.github.com/repos/d3/d3/commits/874bf961168277a733da66ab7d8d8bf8fda02403"}, {"date": "2013-09-19T03:50:12Z", "message": "Merge remote-tracking branch 'origin/fix-geo-pip' into 3.3.4", "url": "https://api.github.com/repos/d3/d3/commits/9405e4518a09aff706165ef38ea869e473cb1942"}, {"date": "2013-09-19T03:35:27Z", "message": "Fix crash in ticks for empty d3.time.scale domain.\n\nFixes #1525. This was only an issue because the domain is extended by one\nmillisecond when it is empty (for an inclusive upper bound).", "url": "https://api.github.com/repos/d3/d3/commits/90d06cf08d18c46b0e1f0f51222d43888f6049e8"}, {"date": "2013-09-19T03:06:37Z", "message": "Use the scale as the tick key function.\n\nPreviously we were using string coercion as the key function for axis ticks.\nHowever, when the stringified value of the tick does not fully capture the\nrepresentation (such as a date with millisecond precision, whose string form\nonly has second precision; fixes #1529), string coercion is insufficient.\n\nFortunately, there is an equivalently-simple key function for tick identity: the\nscale! If the scale does not return a unique position for the given tick, then\nthe tick would be overlapping, so it serves perfectly as the key function.", "url": "https://api.github.com/repos/d3/d3/commits/06e2077ff84a1db94b8e0d9274d4e5bfad82cd5d"}, {"date": "2013-09-05T18:21:15Z", "message": "Merge branch '3.3.3'", "url": "https://api.github.com/repos/d3/d3/commits/a83ff054c93d172482be15ef35a87d07be92f43a"}, {"date": "2013-09-05T18:20:40Z", "message": "Merge branch 'zoom-multiple' into 3.3.3", "url": "https://api.github.com/repos/d3/d3/commits/e67138acc95db35c0316d4ee3bc4bad3ed1058a0"}, {"date": "2013-09-05T18:20:07Z", "message": "Merge branch 'time-parse-zone' into 3.3.3", "url": "https://api.github.com/repos/d3/d3/commits/2378ab8f792446456522d1e98ec6ffb6e6117056"}, {"date": "2013-09-05T17:52:56Z", "message": "Remove redundant code in d3.svg.brush.\n\nNow that d3.mouse does the \u201cright thing\u201d for touch events, we don\u2019t need code\nthat handles touch events specially.", "url": "https://api.github.com/repos/d3/d3/commits/d512a78d8586a6ee4bbe94737904fff05110ad61"}, {"date": "2013-09-05T17:31:39Z", "message": "If present, use changedTouches[0] for d3.mouse.\n\nNormally d3.mouse(this) is equivalent to d3.touches(this)[0] because the clientX\nand clientY properties of the event and the first touch are the same. However,\non touchend the touches list is empty, and the clientX and clientY are 0! So\ninstead it seems safer to use the position of the first changed touch for the\ndefault location of a touch event.", "url": "https://api.github.com/repos/d3/d3/commits/8dc4ed81af778aada8f564cce85b383eca3bc0f5"}, {"date": "2013-09-05T05:37:25Z", "message": "Add a few comments.", "url": "https://api.github.com/repos/d3/d3/commits/39cb7e6df620b2b36c201e81d73f0896f3d85ba4"}], "jason@jasondavies.com": [{"date": "2013-09-26T14:52:02Z", "message": "Fix clipping bug for complex polygons.\n\nIntersection points are sorted along the clipping region edge relative\nto a particular point.  In the case of antimeridian clipping, this point\nis the South pole.  Previously, the first intersection was assumed to be\nan entering intersection, but this is not always the case.\n\nThe fix is to see whether the clip region start point (the point\nrelative to which sorting occurs) is inside or outside the polygon being\ndrawn.  If it is inside, then the first intersection point must be\noutside, and so forth.\n\nThe same applies to d3.geo.clipExtent.  Provision was already made for\nthis, but this has now been optimised to use a single point instead of\npicking one of the four corners.\n\nAnother optimisation was to reuse this clip region start point to\ndetermine whether to interpolate all the way around the clip region\nedge.  Previously, this was done by testing an arbitrary point in the\nclip region.\n\nThe above fix seemed to have broken one of the tests, and this has been\nfixed by modifying the point-in-polygon routine slightly to handle\npoints that might lie exactly on the polygon edge.\n\nFinally, I noticed a regression with the recent clipExtent fix, where a\npolygon incorrectly being marked as \u201cclean\u201d (no intersections) on a\nper-ring instead of per-polygon basis.", "url": "https://api.github.com/repos/d3/d3/commits/9eb878ec7d3e4e2044b29ccba325821a3d70f495"}, {"date": "2013-09-25T18:24:28Z", "message": "Optimise.", "url": "https://api.github.com/repos/d3/d3/commits/db39176f24ca9ceb0d4ab897e87f5c8ba6104a2c"}, {"date": "2013-09-25T18:15:32Z", "message": "Wrap longitudes in d3_geo_rotation.", "url": "https://api.github.com/repos/d3/d3/commits/9b8792c13d2a53f34069c95427ad7be3f58a2370"}, {"date": "2013-09-24T19:03:05Z", "message": "Perform winding order check on unrotated polygons.\n\nWe remove the rotation step that occurred prior to clipping, so that\nclipping processes unrotated polygons.  Note that clip regions are\ndefined relative to the rotated globe, so clipping now needs a rotation\nparameter.\n\nRather than moving the rotation step so it occurs after clipping, the\nrotation occurs as part of clipping, using the rotation parameter to\nrotate streamed points.  Alternatively, points could be clipped against\na rotated clip region, and then subsequently rotated as a separate step,\nbut this seems slightly less efficient.\n\nFixes #1453.", "url": "https://api.github.com/repos/d3/d3/commits/31ea7dc0f1ff553c446d91591826ec2731fadff1"}, {"date": "2013-09-24T19:08:33Z", "message": "Simplify.", "url": "https://api.github.com/repos/d3/d3/commits/ba48daa1e44b17d1597d381af8956864d6a5e826"}, {"date": "2013-09-24T17:49:46Z", "message": "Fix clipExtent bug.\n\nIf a polygon does not intersect with the extent, but has one or more\nrings inside the extent, then the extent should be checked to see\nwhether it is inside the polygon: if so, an additional exterior ring is\ngenerated.\n\nPreviously, this check was only made if there were no visible rings at\nall.\n\nFixes an issue noticed in #1453.", "url": "https://api.github.com/repos/d3/d3/commits/b89c2d979bfdd543cce69698f3d588db1791af2c"}, {"date": "2013-09-16T21:30:20Z", "message": "Fix point-in-polygon for multiple polar rings.\n\nInstead of detecting if any single polygon ring winds around a pole, we\nconsider the cumulative winding of all polygon rings together.  This is\nconsistent with the area calculation, which considers the cumulative\narea total of all rings.\n\nThis fixes #1521: an issue with the Hammer Retroazimuthal projection,\nwhich uses such a polygon with two rings, covering most of the globe.\n\nIn addition, drop the special handling of points at the south pole,\nwhich might have been there to pass an incorrect test: a CCW triangle\ntouching the south pole, which was probably incorrectly thought to be\nclockwise.  This fixes an issue with a \u201cstripe\u201d polygon rotated so that\na point is at the south pole, mentioned in #1453.", "url": "https://api.github.com/repos/d3/d3/commits/eff0a11615ba84c42fe021939007f6b3c629486c"}, {"date": "2013-09-05T20:31:03Z", "message": "Remove dead code.\n\nThis line doesn\u2019t appear to do anything useful, since the parent node is\nnow saved in the closure.  Previously, this line checked to see if\ntarget.parentNode was null, since this would cause a crash when\ncomputing the relative position.", "url": "https://api.github.com/repos/d3/d3/commits/25630484b8f895737e8a781ffe3fb850ace8ef8b"}, {"date": "2013-09-05T18:53:01Z", "message": "Fix d3.mouse touch fallback for HTML targets.", "url": "https://api.github.com/repos/d3/d3/commits/5f8056c1e4f41339c3d4d862545d7e21bf4d0e46"}]}