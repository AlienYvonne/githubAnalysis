[{"url": "https://api.github.com/repos/nlohmann/json/comments/15502242", "html_url": "https://github.com/nlohmann/json/commit/09a4751ee7f979ab1180feb0de3e3c82f9ca453c#commitcomment-15502242", "id": 15502242, "node_id": "MDEzOkNvbW1pdENvbW1lbnQxNTUwMjI0Mg==", "user": {"login": "twelsby", "id": 16697318, "node_id": "MDQ6VXNlcjE2Njk3MzE4", "avatar_url": "https://avatars0.githubusercontent.com/u/16697318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twelsby", "html_url": "https://github.com/twelsby", "followers_url": "https://api.github.com/users/twelsby/followers", "following_url": "https://api.github.com/users/twelsby/following{/other_user}", "gists_url": "https://api.github.com/users/twelsby/gists{/gist_id}", "starred_url": "https://api.github.com/users/twelsby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twelsby/subscriptions", "organizations_url": "https://api.github.com/users/twelsby/orgs", "repos_url": "https://api.github.com/users/twelsby/repos", "events_url": "https://api.github.com/users/twelsby/events{/privacy}", "received_events_url": "https://api.github.com/users/twelsby/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "09a4751ee7f979ab1180feb0de3e3c82f9ca453c", "created_at": "2016-01-18T09:28:18Z", "updated_at": "2016-01-18T11:48:29Z", "author_association": "CONTRIBUTOR", "body": "The updated commit fixes the documentation/aesthetic issues identified as well as introducing a new parse method that is more efficient in that it only requires one parse for integers and does not require separating the floating point number with `modf`.\n\nThe new method first parses using `strtoll()`/`strtoull()` (looking for the minus sign to decide which) and then uses two tests to decide if further parsing is required:\n1. If the `endptr` set by `strtoll()`/`strtoull()` is equal to `m_cursor` then the number parsed represents the entire number and there is no decimal point or exponent that wasn't parsed.\n2. If errno is not equal to ERANGE then the number will fit in the integer data type.\n\nIf both of these conditions are not met then the number is parsed using `strtod()`.  An attempt is made to cast it back in an integer form (using the method in the original code) to cover the case of numbers like 1.2e3 that are floating point numbers that can be accurately represented as integers.  Finally a check is done for unexpected trailing characters so that an error may be thrown.\n\nThe new parse method means that inputs such as \"0.\" will no longer throw the exception \"0 is not a number\" but instead throw \"unexpected '.'; expected end of input\".  This was an unexpected side effect of parsing using `strtoull()`/`strtoll()` instead of `strtod()` (which captures the \".\"), so the unit test has had to change.  This is actually a good thing as the previous message, while convenient from a coding point of view, was misleading and, in the literal sense, nonsensical.\n\nThe AppVeyor failure is the same as for the current upstream commit i.e. no new problems.  It looks like a Catch problem and there are indications that this may be a known problem for which there is a fix in the development branch.  As soon as I can get a VS build of the unit test I will give it a go (my current local repo is set up for Ubuntu only).\n"}]