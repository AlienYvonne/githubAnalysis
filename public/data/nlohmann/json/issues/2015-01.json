[{"url": "https://api.github.com/repos/nlohmann/json/issues/32", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/32/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/32/events", "html_url": "https://github.com/nlohmann/json/issues/32", "id": 54837983, "node_id": "MDU6SXNzdWU1NDgzNzk4Mw==", "number": 32, "title": "find is error", "user": {"login": "lonerwolf", "id": 514169, "node_id": "MDQ6VXNlcjUxNDE2OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/514169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lonerwolf", "html_url": "https://github.com/lonerwolf", "followers_url": "https://api.github.com/users/lonerwolf/followers", "following_url": "https://api.github.com/users/lonerwolf/following{/other_user}", "gists_url": "https://api.github.com/users/lonerwolf/gists{/gist_id}", "starred_url": "https://api.github.com/users/lonerwolf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lonerwolf/subscriptions", "organizations_url": "https://api.github.com/users/lonerwolf/orgs", "repos_url": "https://api.github.com/users/lonerwolf/repos", "events_url": "https://api.github.com/users/lonerwolf/events{/privacy}", "received_events_url": "https://api.github.com/users/lonerwolf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2015-01-20T02:55:34Z", "updated_at": "2015-01-24T19:43:08Z", "closed_at": "2015-01-24T19:43:08Z", "author_association": "NONE", "body": "json o;\no[\"foo\"] = 23;\no[\"bar\"] = false;\no[\"baz\"] = 3.141;\n\n// find an entry\nif (o.find(\"foo\") != o.end()) {\n  // there is an entry with key \"foo\"\n}\n\nin my example\n\nkey:\"Heart_COL\"\ntype:\"HEX\"\nval:\"DF01140234340000\"\n\nauto it = jsonData.find(\"type\");\nstd::cout << *it << '\\n';\nthe printf data is \"Heart_COL\"\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/31", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/31/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/31/events", "html_url": "https://github.com/nlohmann/json/issues/31", "id": 54680644, "node_id": "MDU6SXNzdWU1NDY4MDY0NA==", "number": 31, "title": "Avoid using spaces when encoding without pretty print", "user": {"login": "alvarolb", "id": 1141353, "node_id": "MDQ6VXNlcjExNDEzNTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1141353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alvarolb", "html_url": "https://github.com/alvarolb", "followers_url": "https://api.github.com/users/alvarolb/followers", "following_url": "https://api.github.com/users/alvarolb/following{/other_user}", "gists_url": "https://api.github.com/users/alvarolb/gists{/gist_id}", "starred_url": "https://api.github.com/users/alvarolb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alvarolb/subscriptions", "organizations_url": "https://api.github.com/users/alvarolb/orgs", "repos_url": "https://api.github.com/users/alvarolb/repos", "events_url": "https://api.github.com/users/alvarolb/events{/privacy}", "received_events_url": "https://api.github.com/users/alvarolb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-01-18T00:09:10Z", "updated_at": "2017-09-11T13:34:51Z", "closed_at": "2015-01-18T09:58:51Z", "author_association": "NONE", "body": "When encoding the JSON string with the dump method, it will insert some spaces (after \":\" or \",\") even without pretty print active. It will add some undesired extra bytes when the data is just going over the wire. In my case it is important as I am encoding JSON Web Tokens (JWT), and every byte its important as the token is being transmitted in every request.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/30", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/30/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/30/events", "html_url": "https://github.com/nlohmann/json/issues/30", "id": 54678992, "node_id": "MDU6SXNzdWU1NDY3ODk5Mg==", "number": 30, "title": "Cannot encode long numbers", "user": {"login": "alvarolb", "id": 1141353, "node_id": "MDQ6VXNlcjExNDEzNTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1141353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alvarolb", "html_url": "https://github.com/alvarolb", "followers_url": "https://api.github.com/users/alvarolb/followers", "following_url": "https://api.github.com/users/alvarolb/following{/other_user}", "gists_url": "https://api.github.com/users/alvarolb/gists{/gist_id}", "starred_url": "https://api.github.com/users/alvarolb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alvarolb/subscriptions", "organizations_url": "https://api.github.com/users/alvarolb/orgs", "repos_url": "https://api.github.com/users/alvarolb/repos", "events_url": "https://api.github.com/users/alvarolb/events{/privacy}", "received_events_url": "https://api.github.com/users/alvarolb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-01-17T23:04:02Z", "updated_at": "2016-11-13T22:38:20Z", "closed_at": "2015-01-21T16:45:33Z", "author_association": "NONE", "body": "I cannot encode a unsigned long or unsigned long long value without casting it to int, with its corresponding overflow. It is required, i.e., for storing a timestamp in milliseconds from epoch.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/28", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/28/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/28/events", "html_url": "https://github.com/nlohmann/json/issues/28", "id": 54226464, "node_id": "MDU6SXNzdWU1NDIyNjQ2NA==", "number": 28, "title": "segmentation fault when iterating over empty arrays/objects", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2015-01-13T18:06:51Z", "updated_at": "2015-01-13T18:12:34Z", "closed_at": "2015-01-13T18:07:58Z", "author_association": "OWNER", "body": "From an email:\n\n> Anyway, a quite serious bug is when one tries to iterate over a empty container (array or object), which results in a segmentation fault due to a 0x0 this pointer. I fixed this by changing the iterator constructors to check if the container is empty, and in that case set the \u201cobject_\u201d pointer to a nullptr.\n\nThe proposed code fix:\n\n``` cpp\njson::const_iterator::const_iterator(const json* j) : object_(j)\n{\n    if (object_ != nullptr)\n    {\n        if (object_->type_ == value_type::array)\n        {\n            if (object_->empty())\n// Explicit empty check added\n            {\n                object_ = nullptr;\n            }\n            else\n            {\n                vi_ = new array_t::const_iterator(object_->value_.array->begin());\n            }\n        }\n        else if (object_->type_ == value_type::object)\n// *else if* is mandatory since the previous\n        {\n// block can set pointer to nullptr!\n            if (object_->empty())\n// Explicit empty check added\n            {\n                object_ = nullptr;\n            }\n            else\n            {\n                oi_ = new object_t::const_iterator(object_->value_.object->begin());\n            }\n        }\n    }\n}\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/27", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/27/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/27/events", "html_url": "https://github.com/nlohmann/json/issues/27", "id": 54162671, "node_id": "MDU6SXNzdWU1NDE2MjY3MQ==", "number": 27, "title": "Creating an empty array", "user": {"login": "edi9999", "id": 2071336, "node_id": "MDQ6VXNlcjIwNzEzMzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2071336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edi9999", "html_url": "https://github.com/edi9999", "followers_url": "https://api.github.com/users/edi9999/followers", "following_url": "https://api.github.com/users/edi9999/following{/other_user}", "gists_url": "https://api.github.com/users/edi9999/gists{/gist_id}", "starred_url": "https://api.github.com/users/edi9999/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edi9999/subscriptions", "organizations_url": "https://api.github.com/users/edi9999/orgs", "repos_url": "https://api.github.com/users/edi9999/repos", "events_url": "https://api.github.com/users/edi9999/events{/privacy}", "received_events_url": "https://api.github.com/users/edi9999/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2015-01-13T08:26:38Z", "updated_at": "2016-11-13T22:38:20Z", "closed_at": "2015-01-24T19:42:27Z", "author_association": "NONE", "body": "I'm using the following code right now:\n\n```\njson customers;\n\nfor (...)\n{\n  customers.push_back(...)\n}\n\ncout << customers;\n```\n\nHowever, if the for loop doesnt happen, I would like to return an empty array (eg `[]`)\n\nIs they an other way to get this behaviour without doing `json customers= json::parse(\"[]\");`  ?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/25", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/25/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/25/events", "html_url": "https://github.com/nlohmann/json/issues/25", "id": 53993772, "node_id": "MDU6SXNzdWU1Mzk5Mzc3Mg==", "number": 25, "title": "Custom allocator support", "user": {"login": "Teemperor", "id": 736001, "node_id": "MDQ6VXNlcjczNjAwMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/736001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Teemperor", "html_url": "https://github.com/Teemperor", "followers_url": "https://api.github.com/users/Teemperor/followers", "following_url": "https://api.github.com/users/Teemperor/following{/other_user}", "gists_url": "https://api.github.com/users/Teemperor/gists{/gist_id}", "starred_url": "https://api.github.com/users/Teemperor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Teemperor/subscriptions", "organizations_url": "https://api.github.com/users/Teemperor/orgs", "repos_url": "https://api.github.com/users/Teemperor/repos", "events_url": "https://api.github.com/users/Teemperor/events{/privacy}", "received_events_url": "https://api.github.com/users/Teemperor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-11T14:54:05Z", "updated_at": "2016-11-13T22:38:19Z", "closed_at": "2015-02-18T23:07:26Z", "author_association": "CONTRIBUTOR", "body": "Similar to a STL container json should support a custom allocator.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/20", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/20/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/20/events", "html_url": "https://github.com/nlohmann/json/issues/20", "id": 53892153, "node_id": "MDU6SXNzdWU1Mzg5MjE1Mw==", "number": 20, "title": "make the type of the used string container customizable", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-09T17:24:23Z", "updated_at": "2016-11-13T22:38:19Z", "closed_at": "2015-02-18T23:09:35Z", "author_association": "OWNER", "body": "As proposed in http://www.reddit.com/r/cpp/comments/2rbhn3/json_for_modern_c_what_if_json_was_part_of_modern/cnh7ox4, it would be nice to template the string container that is used inside the json class.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/17", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/17/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/17/events", "html_url": "https://github.com/nlohmann/json/issues/17", "id": 53571891, "node_id": "MDU6SXNzdWU1MzU3MTg5MQ==", "number": 17, "title": "Improper parsing of JSON string \"\\\\\"", "user": {"login": "cmaloney", "id": 751088, "node_id": "MDQ6VXNlcjc1MTA4OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/751088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmaloney", "html_url": "https://github.com/cmaloney", "followers_url": "https://api.github.com/users/cmaloney/followers", "following_url": "https://api.github.com/users/cmaloney/following{/other_user}", "gists_url": "https://api.github.com/users/cmaloney/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmaloney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmaloney/subscriptions", "organizations_url": "https://api.github.com/users/cmaloney/orgs", "repos_url": "https://api.github.com/users/cmaloney/repos", "events_url": "https://api.github.com/users/cmaloney/events{/privacy}", "received_events_url": "https://api.github.com/users/cmaloney/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-06T22:27:48Z", "updated_at": "2015-01-10T21:28:23Z", "closed_at": "2015-01-09T15:32:39Z", "author_association": "NONE", "body": "Currently the parser assumes if a '\\' is before a double quote, the double quote isn't the end of the string.\n\nNote that there are more complicated cases like this (and their expansion) which need to be handled properly which probably will take more code to support properly: (\"\\\\\"\", \"\\\\\") of arbitrary length. A reverse search which checks if the number of '\\' preceding the quote is even or odd would do it: https://github.com/nlohmann/json/blob/master/src/json.cc#L2050\n\nPerformance in backslash-heavy strings may suffer a lot though. Might be better to do a pure forward scan of the string counting backslashes as you go (Lots of memory access, but it should all be prefetched + L1 cached by current x86, x64 CPUs).\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/16", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/16/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/16/events", "html_url": "https://github.com/nlohmann/json/issues/16", "id": 53562580, "node_id": "MDU6SXNzdWU1MzU2MjU4MA==", "number": 16, "title": "create a header-only version", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2015-01-06T21:00:12Z", "updated_at": "2016-11-13T22:38:19Z", "closed_at": "2015-02-18T23:07:49Z", "author_association": "OWNER", "body": "As wished in http://www.reddit.com/r/cpp/comments/2rbhn3/json_for_modern_c_what_if_json_was_part_of_modern/cnelnzq:\n\n> I think this would be fare more useful as a header only library. I'm down for sending a PR with the change if you are.\n\nAnd as I wrote:\n\n> Good idea! But I think it would be more useful if there would be a script that reads the source files json.cc and json.h and creates a header-only version. That way, both approaches can be followed at the same time.\n"}]