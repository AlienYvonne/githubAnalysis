[{"url": "https://api.github.com/repos/nlohmann/json/issues/64", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/64/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/64/events", "html_url": "https://github.com/nlohmann/json/issues/64", "id": 72137834, "node_id": "MDU6SXNzdWU3MjEzNzgzNA==", "number": 64, "title": "Compilation results in tons of warnings", "user": {"login": "JeffAbrahamson", "id": 1220683, "node_id": "MDQ6VXNlcjEyMjA2ODM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1220683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeffAbrahamson", "html_url": "https://github.com/JeffAbrahamson", "followers_url": "https://api.github.com/users/JeffAbrahamson/followers", "following_url": "https://api.github.com/users/JeffAbrahamson/following{/other_user}", "gists_url": "https://api.github.com/users/JeffAbrahamson/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeffAbrahamson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeffAbrahamson/subscriptions", "organizations_url": "https://api.github.com/users/JeffAbrahamson/orgs", "repos_url": "https://api.github.com/users/JeffAbrahamson/repos", "events_url": "https://api.github.com/users/JeffAbrahamson/events{/privacy}", "received_events_url": "https://api.github.com/users/JeffAbrahamson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2015-04-30T11:54:04Z", "updated_at": "2015-05-01T09:57:36Z", "closed_at": "2015-05-01T09:57:22Z", "author_association": "NONE", "body": "\u256d\u2574 (master=)\u2576\u256e\n\u2570 jeff@siegfried:json $ uname -a\nLinux siegfried 3.16.0-33-generic #44-Ubuntu SMP Thu Mar 12 12:19:35 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux\n\u256d\u2574 (master=)\u2576\u256e\n\u2570 jeff@siegfried:json $ make\ng++ -std=c++11  -Wall -Wextra -pedantic -Weffc++ -Wcast-align -Wcast-qual -Wctor-dtor-privacy -Wdisabled-optimization -Wformat=2 -Winit-self -Wmissing-declarations -Wmissing-include-dirs -Wold-style-cast -Woverloaded-virtual -Wredundant-decls -Wshadow -Wsign-conversion -Wsign-promo -Wstrict-overflow=5 -Wswitch -Wundef -Wno-unused -Wnon-virtual-dtor -Wreorder -Wdeprecated -Wfloat-equal  -I src -I test test/unit.cpp  -o json_unit\nIn file included from test/unit.cpp:11:0:\ntest/catch.hpp:264:57: warning: \u2018const T& Catch::operator+(const T&, Catch::StreamEndStop)\u2019 should return by value [-Weffc++]\n     T const& operator + ( T const& value, StreamEndStop ) {\n                                                         ^\ntest/catch.hpp: In copy constructor \u2018Catch::NotImplementedException::NotImplementedException(const Catch::NotImplementedException&)\u2019:\ntest/catch.hpp:280:9: warning: \u2018Catch::NotImplementedException::m_what\u2019 should be initialized in the member initialization list [-Weffc++]\n         NotImplementedException( NotImplementedException const& ) {}\n         ^\ntest/catch.hpp:280:9: warning: \u2018Catch::NotImplementedException::m_lineInfo\u2019 should be initialized in the member initialization list [-Weffc++]\nIn file included from test/unit.cpp:11:0:\ntest/catch.hpp: At global scope:\ntest/catch.hpp:478:7: warning: \u2018class Catch::MethodTestCase<C>\u2019 only defines a private destructor and has no friends [-Wctor-dtor-privacy]\n class MethodTestCase : public SharedImpl<ITestCase> {\n       ^\ntest/catch.hpp: In constructor \u2018Catch::AssertionInfo::AssertionInfo()\u2019:\ntest/catch.hpp:645:9: warning: \u2018Catch::AssertionInfo::macroName\u2019 should be initialized in the member initialization list [-Weffc++]\n         AssertionInfo() {}\n         ^\ntest/catch.hpp:645:9: warning: \u2018Catch::AssertionInfo::lineInfo\u2019 should be initialized in the member initialization list [-Weffc++]\ntest/catch.hpp:645:9: warning: \u2018Catch::AssertionInfo::capturedExpression\u2019 should be initialized in the member initialization list [-Weffc++]\ntest/catch.hpp:645:9: warning: \u2018Catch::AssertionInfo::resultDisposition\u2019 should be initialized in the member initialization list [-Weffc++]\ntest/catch.hpp: In constructor \u2018Catch::AssertionResultData::AssertionResultData()\u2019:\ntest/catch.hpp:659:9: warning: \u2018Catch::AssertionResultData::reconstructedExpression\u2019 should be initialized in the member initialization list [-Weffc++]\n         AssertionResultData() : resultType( ResultWas::Unknown ) {}\n         ^\ntest/catch.hpp:659:9: warning: \u2018Catch::AssertionResultData::message\u2019 should be initialized in the member initialization list [-Weffc++]\n\n...\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/62", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/62/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/62/events", "html_url": "https://github.com/nlohmann/json/issues/62", "id": 70944091, "node_id": "MDU6SXNzdWU3MDk0NDA5MQ==", "number": 62, "title": "Windows/Visual Studio (through 2013) is unsupported", "user": {"login": "smiley", "id": 354181, "node_id": "MDQ6VXNlcjM1NDE4MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/354181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smiley", "html_url": "https://github.com/smiley", "followers_url": "https://api.github.com/users/smiley/followers", "following_url": "https://api.github.com/users/smiley/following{/other_user}", "gists_url": "https://api.github.com/users/smiley/gists{/gist_id}", "starred_url": "https://api.github.com/users/smiley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smiley/subscriptions", "organizations_url": "https://api.github.com/users/smiley/orgs", "repos_url": "https://api.github.com/users/smiley/repos", "events_url": "https://api.github.com/users/smiley/events{/privacy}", "received_events_url": "https://api.github.com/users/smiley/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 42, "created_at": "2015-04-25T17:50:57Z", "updated_at": "2016-11-13T22:38:10Z", "closed_at": "2015-12-14T14:31:04Z", "author_association": "NONE", "body": "I was about to use this for a C++ project in Visual Studio 2013, but the header fails compilation entirely, thanks to a myriad of errors:\n\n```\n1>------ Build started: Project: jsondummy, Configuration: Debug Win32 ------\n1>  main.cpp\n1>d:\\github\\jsondummy\\src\\json.hpp(137): error C2061: syntax error : identifier 'iterator'\n1>          d:\\github\\jsondummy\\src\\json.hpp(4893) : see reference to class template instantiation 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>' being compiled\n1>d:\\github\\jsondummy\\src\\json.hpp(137): error C2238: unexpected token(s) preceding ';'\n1>d:\\github\\jsondummy\\src\\json.hpp(143): error C2061: syntax error : identifier 'const_iterator'\n1>d:\\github\\jsondummy\\src\\json.hpp(143): error C2238: unexpected token(s) preceding ';'\n1>d:\\github\\jsondummy\\src\\json.hpp(149): error C2061: syntax error : identifier 'reverse_iterator'\n1>d:\\github\\jsondummy\\src\\json.hpp(149): error C2238: unexpected token(s) preceding ';'\n1>d:\\github\\jsondummy\\src\\json.hpp(155): error C2061: syntax error : identifier 'const_reverse_iterator'\n1>d:\\github\\jsondummy\\src\\json.hpp(155): error C2238: unexpected token(s) preceding ';'\n1>d:\\github\\jsondummy\\src\\json.hpp(382): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(385): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(402): warning C4346: 'std::is_constructible<ObjectType<StringType,nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,>::key_type,V::key_type>::value' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(402): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(402): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(402): error C2143: syntax error : missing ',' before 'std::is_constructible<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,V::mapped_type>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(402): error C2977: 'std::enable_if' : too many template arguments\n1>          c:\\program files (x86)\\microsoft visual studio 12.0\\vc\\include\\xtr1common(67) : see declaration of 'std::enable_if'\n1>d:\\github\\jsondummy\\src\\json.hpp(403): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int\n1>d:\\github\\jsondummy\\src\\json.hpp(426): error C2065: 'not' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(426): warning C4346: 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::iterator' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(426): error C2923: 'std::is_same' : 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::iterator' is not a valid template type argument for parameter '_Ty2'\n1>d:\\github\\jsondummy\\src\\json.hpp(426): error C2143: syntax error : missing ',' before 'std::integral_constant<bool,false>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(427): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(427): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(427): error C2146: syntax error : missing ',' before identifier 'not'\n1>d:\\github\\jsondummy\\src\\json.hpp(427): error C2065: 'not' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(427): warning C4346: 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::const_iterator' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(427): error C2923: 'std::is_same' : 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::const_iterator' is not a valid template type argument for parameter '_Ty2'\n1>d:\\github\\jsondummy\\src\\json.hpp(427): error C2143: syntax error : missing ',' before 'std::integral_constant<bool,false>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(428): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(428): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(428): error C2146: syntax error : missing ',' before identifier 'not'\n1>d:\\github\\jsondummy\\src\\json.hpp(428): error C2065: 'not' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(428): warning C4346: 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::reverse_iterator' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(428): error C2923: 'std::is_same' : 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::reverse_iterator' is not a valid template type argument for parameter '_Ty2'\n1>d:\\github\\jsondummy\\src\\json.hpp(428): error C2143: syntax error : missing ',' before 'std::integral_constant<bool,false>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(429): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(429): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(429): error C2146: syntax error : missing ',' before identifier 'not'\n1>d:\\github\\jsondummy\\src\\json.hpp(429): error C2065: 'not' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(429): warning C4346: 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::const_reverse_iterator' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(429): error C2923: 'std::is_same' : 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::const_reverse_iterator' is not a valid template type argument for parameter '_Ty2'\n1>d:\\github\\jsondummy\\src\\json.hpp(429): error C2143: syntax error : missing ',' before 'std::integral_constant<bool,false>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(430): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(430): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(430): error C2146: syntax error : missing ',' before identifier 'not'\n1>d:\\github\\jsondummy\\src\\json.hpp(430): error C2065: 'not' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(430): error C2143: syntax error : missing ',' before 'std::is_same<V,ArrayType<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,>::iterator>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(431): warning C4346: 'std::is_same<V,ArrayType<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,>::iterator>::value' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(431): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(431): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(431): error C2146: syntax error : missing ',' before identifier 'not'\n1>d:\\github\\jsondummy\\src\\json.hpp(431): error C2065: 'not' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(431): error C2143: syntax error : missing ',' before 'std::is_same<V,ArrayType<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,>::const_iterator>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(432): warning C4346: 'std::is_same<V,ArrayType<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,>::const_iterator>::value' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(432): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(432): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(432): error C2143: syntax error : missing ',' before 'std::is_constructible<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,V::value_type>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(432): error C2977: 'std::enable_if' : too many template arguments\n1>          c:\\program files (x86)\\microsoft visual studio 12.0\\vc\\include\\xtr1common(67) : see declaration of 'std::enable_if'\n1>d:\\github\\jsondummy\\src\\json.hpp(433): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int\n1>d:\\github\\jsondummy\\src\\json.hpp(434): error C2535: 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::basic_json(const V &)' : member function already defined or declared\n1>          d:\\github\\jsondummy\\src\\json.hpp(404) : see declaration of 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::basic_json'\n1>d:\\github\\jsondummy\\src\\json.hpp(485): warning C4346: 'std::is_constructible<NumberIntegerType,T>::value' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(485): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(485): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(485): error C2143: syntax error : missing ',' before 'std::numeric_limits<T>::is_integer'\n1>d:\\github\\jsondummy\\src\\json.hpp(485): error C2977: 'std::enable_if' : too many template arguments\n1>          c:\\program files (x86)\\microsoft visual studio 12.0\\vc\\include\\xtr1common(67) : see declaration of 'std::enable_if'\n1>d:\\github\\jsondummy\\src\\json.hpp(486): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int\n1>d:\\github\\jsondummy\\src\\json.hpp(487): warning C4346: 'std::numeric_limits<T>::is_integer' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(487): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(502): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(594): warning C4346: 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::iterator' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(594): error C2923: 'std::is_same' : 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::iterator' is not a valid template type argument for parameter '_Ty2'\n1>d:\\github\\jsondummy\\src\\json.hpp(595): error C2146: syntax error : missing ',' before identifier 'or'\n1>d:\\github\\jsondummy\\src\\json.hpp(595): error C2065: 'or' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(595): warning C4346: 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::const_iterator' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(595): error C2923: 'std::is_same' : 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::const_iterator' is not a valid template type argument for parameter '_Ty2'\n1>d:\\github\\jsondummy\\src\\json.hpp(596): error C2143: syntax error : missing ',' before 'std::integral_constant<bool,false>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(596): error C2977: 'std::enable_if' : too many template arguments\n1>          c:\\program files (x86)\\microsoft visual studio 12.0\\vc\\include\\xtr1common(67) : see declaration of 'std::enable_if'\n1>d:\\github\\jsondummy\\src\\json.hpp(597): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int\n1>d:\\github\\jsondummy\\src\\json.hpp(748): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(761): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(762): warning C4346: 'std::is_nothrow_move_constructible<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::value_t>::value' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(762): error C2061: syntax error : identifier 'value'\n1>d:\\github\\jsondummy\\src\\json.hpp(767): error C2091: function returns function\n1>d:\\github\\jsondummy\\src\\json.hpp(779): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(838): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(851): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(857): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(863): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(869): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(875): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(881): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(887): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(893): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(906): warning C4346: 'std::is_convertible<ObjectType<StringType,nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,>::key_type,T::key_type>::value' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(906): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(906): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(907): error C2143: syntax error : missing ',' before 'std::is_convertible<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,T::mapped_type>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(907): error C2977: 'std::enable_if' : too many template arguments\n1>          c:\\program files (x86)\\microsoft visual studio 12.0\\vc\\include\\xtr1common(67) : see declaration of 'std::enable_if'\n1>d:\\github\\jsondummy\\src\\json.hpp(907): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int\n1>d:\\github\\jsondummy\\src\\json.hpp(943): warning C4346: 'std::is_convertible<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,T::value_type>::value' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(943): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(943): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(943): error C2146: syntax error : missing ',' before identifier 'not'\n1>d:\\github\\jsondummy\\src\\json.hpp(943): error C2065: 'not' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(943): error C2143: syntax error : missing ',' before 'std::is_same<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,T::value_type>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(944): warning C4346: 'std::is_same<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,T::value_type>::value' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(944): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(944): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(944): error C2146: syntax error : missing ',' before identifier 'not'\n1>d:\\github\\jsondummy\\src\\json.hpp(944): error C2065: 'not' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(944): error C2143: syntax error : missing ',' before 'std::is_arithmetic<T>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(945): warning C4346: 'std::is_arithmetic<T>::value' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(945): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(945): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(945): error C2146: syntax error : missing ',' before identifier 'not'\n1>d:\\github\\jsondummy\\src\\json.hpp(945): error C2065: 'not' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(945): error C2143: syntax error : missing ',' before 'std::is_convertible<std::string,T>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(946): warning C4346: 'std::is_convertible<std::string,T>::value' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(946): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(946): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(946): error C2146: syntax error : missing ',' before identifier 'not'\n1>d:\\github\\jsondummy\\src\\json.hpp(946): error C2065: 'not' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(947): error C2143: syntax error : missing ',' before 'nlohmann::has_mapped_type<T>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(947): error C2977: 'std::enable_if' : too many template arguments\n1>          c:\\program files (x86)\\microsoft visual studio 12.0\\vc\\include\\xtr1common(67) : see declaration of 'std::enable_if'\n1>d:\\github\\jsondummy\\src\\json.hpp(947): fatal error C1003: error count exceeds 100; stopping compilation\n========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========\n```\n\nThis is on VS2013, and as far as I know it supports [90% of the standard](https://msdn.microsoft.com/en-us/library/hh567368.aspx?f=255&MSPPError=-2147217396) (but not some of what you're using here, like `noexcept`).\n\nAre you planning to support Visual Studio/Windows some time later on?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/61", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/61/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/61/events", "html_url": "https://github.com/nlohmann/json/issues/61", "id": 70819875, "node_id": "MDU6SXNzdWU3MDgxOTg3NQ==", "number": 61, "title": "Complete brief documentation", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-24T23:22:42Z", "updated_at": "2015-06-22T21:30:58Z", "closed_at": "2015-06-22T21:30:58Z", "author_association": "OWNER", "body": "The following functions are not yet documented:\n- [ ] type\n- [ ] push_back\n- [ ] operator+=\n- [ ] swap\n- [ ] find\n- [ ] count\n- [ ] dump\n- [ ] parse\n- [ ] operator==, operator!=, operator<, operator<=, operator>, operator>=\n- [ ] std::swap\n- [ ] std::hash\n- [ ] operator<<, operator>>\n- [ ] operator\"\" _json\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/60", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/60/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/60/events", "html_url": "https://github.com/nlohmann/json/issues/60", "id": 69392571, "node_id": "MDU6SXNzdWU2OTM5MjU3MQ==", "number": 60, "title": "Double quotation mark is not parsed correctly", "user": {"login": "miloyip", "id": 1195774, "node_id": "MDQ6VXNlcjExOTU3NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1195774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miloyip", "html_url": "https://github.com/miloyip", "followers_url": "https://api.github.com/users/miloyip/followers", "following_url": "https://api.github.com/users/miloyip/following{/other_user}", "gists_url": "https://api.github.com/users/miloyip/gists{/gist_id}", "starred_url": "https://api.github.com/users/miloyip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miloyip/subscriptions", "organizations_url": "https://api.github.com/users/miloyip/orgs", "repos_url": "https://api.github.com/users/miloyip/repos", "events_url": "https://api.github.com/users/miloyip/events{/privacy}", "received_events_url": "https://api.github.com/users/miloyip/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2015-04-19T06:36:04Z", "updated_at": "2015-04-24T20:07:04Z", "closed_at": "2015-04-24T20:07:04Z", "author_association": "NONE", "body": "In JSON, double quotation mark in a JSON string is escaped as `\\\"`, such as\n\n``` js\n[\"\\\"foo\\\"\"]\n```\n\nshould be escaped as `\"foo\"`. But this library did not handle it and parsed it as `\\\"foo\\\"`.\n\nI reproduced the bug with the following test case:\n\n``` cpp\n    SECTION(\"escape_dobulequote\")\n    {\n        auto s = \"[\\\"\\\\\\\"foo\\\\\\\"\\\"]\";\n        json j = json::parse(s);\n        CHECK(j == json({\"\\\"foo\\\"\"}));\n    }\n```\n\nResults:\n\n```\ntest/unit.cpp:6351: FAILED:\n  CHECK( j == json({\"\\\"foo\\\"\"}) )\nwith expansion:\n  [\"\\\\\\\"foo\\\\\\\"\"] == \"\\\"foo\\\"\"\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/58", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/58/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/58/events", "html_url": "https://github.com/nlohmann/json/issues/58", "id": 67934042, "node_id": "MDU6SXNzdWU2NzkzNDA0Mg==", "number": 58, "title": "Get coverage back to 100%", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-12T16:50:51Z", "updated_at": "2015-05-09T13:22:54Z", "closed_at": "2015-05-09T13:22:54Z", "author_association": "OWNER", "body": "There are currently some lines that are not covered by test cases:\n- [x] https://coveralls.io/builds/2320536/source?filename=src%2Fjson.hpp#L4168\n- [x] https://coveralls.io/builds/2320536/source?filename=src%2Fjson.hpp#L4152\n- [x] https://coveralls.io/builds/2320536/source?filename=src%2Fjson.hpp#L4185\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/57", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/57/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/57/events", "html_url": "https://github.com/nlohmann/json/issues/57", "id": 67416401, "node_id": "MDU6SXNzdWU2NzQxNjQwMQ==", "number": 57, "title": "erase elements using iterators", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2015-04-09T17:53:13Z", "updated_at": "2016-11-13T22:38:10Z", "closed_at": "2015-04-11T13:48:31Z", "author_association": "OWNER", "body": "Just as other containers, iterators should be used to identify the element to be deleted from a container.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/56", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/56/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/56/events", "html_url": "https://github.com/nlohmann/json/issues/56", "id": 67087425, "node_id": "MDU6SXNzdWU2NzA4NzQyNQ==", "number": 56, "title": "Removing item from array", "user": {"login": "drewpts", "id": 10561098, "node_id": "MDQ6VXNlcjEwNTYxMDk4", "avatar_url": "https://avatars2.githubusercontent.com/u/10561098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewpts", "html_url": "https://github.com/drewpts", "followers_url": "https://api.github.com/users/drewpts/followers", "following_url": "https://api.github.com/users/drewpts/following{/other_user}", "gists_url": "https://api.github.com/users/drewpts/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewpts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewpts/subscriptions", "organizations_url": "https://api.github.com/users/drewpts/orgs", "repos_url": "https://api.github.com/users/drewpts/repos", "events_url": "https://api.github.com/users/drewpts/events{/privacy}", "received_events_url": "https://api.github.com/users/drewpts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-04-08T09:22:10Z", "updated_at": "2016-11-13T22:38:09Z", "closed_at": "2015-04-09T16:59:29Z", "author_association": "NONE", "body": "Hi. Thanks for great lib!\nIs there support for removing item/items from array?\n\nE.g.:\n\n``` cpp\n        json j;\n        j[\"name\"] = { \"testname\", \"yetanothername\" };\n        j[\"name\"].erase(\"testname\");\n```\n\n```\n$ ./a.out \nterminate called after throwing an instance of 'std::runtime_error'\nwhat():  cannot use at with array\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/55", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/55/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/55/events", "html_url": "https://github.com/nlohmann/json/issues/55", "id": 66730656, "node_id": "MDU6SXNzdWU2NjczMDY1Ng==", "number": 55, "title": "Serialize/Deserialize like PHP?", "user": {"login": "irazasyed", "id": 1915268, "node_id": "MDQ6VXNlcjE5MTUyNjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1915268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irazasyed", "html_url": "https://github.com/irazasyed", "followers_url": "https://api.github.com/users/irazasyed/followers", "following_url": "https://api.github.com/users/irazasyed/following{/other_user}", "gists_url": "https://api.github.com/users/irazasyed/gists{/gist_id}", "starred_url": "https://api.github.com/users/irazasyed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irazasyed/subscriptions", "organizations_url": "https://api.github.com/users/irazasyed/orgs", "repos_url": "https://api.github.com/users/irazasyed/repos", "events_url": "https://api.github.com/users/irazasyed/events{/privacy}", "received_events_url": "https://api.github.com/users/irazasyed/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2015-04-06T23:30:16Z", "updated_at": "2017-01-27T06:08:17Z", "closed_at": "2015-04-09T17:05:10Z", "author_association": "NONE", "body": "Hi,\n\nIs there a way we could Serialize the output like PHP's [Serialize](http://php.net/manual/en/function.serialize.php) version?\n\nCurrently it outputs in one line as a string. Would be helpful if it could support additional method such as this one.\n\nLet me know!\n\nThanks.\n\nP.S Kudos for the awesome work you've done. Very nice, clean and easier to use!\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/54", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/54/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/54/events", "html_url": "https://github.com/nlohmann/json/issues/54", "id": 66726604, "node_id": "MDU6SXNzdWU2NjcyNjYwNA==", "number": 54, "title": "Numbers as keys", "user": {"login": "ivan-krukov", "id": 1881263, "node_id": "MDQ6VXNlcjE4ODEyNjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1881263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivan-krukov", "html_url": "https://github.com/ivan-krukov", "followers_url": "https://api.github.com/users/ivan-krukov/followers", "following_url": "https://api.github.com/users/ivan-krukov/following{/other_user}", "gists_url": "https://api.github.com/users/ivan-krukov/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivan-krukov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivan-krukov/subscriptions", "organizations_url": "https://api.github.com/users/ivan-krukov/orgs", "repos_url": "https://api.github.com/users/ivan-krukov/repos", "events_url": "https://api.github.com/users/ivan-krukov/events{/privacy}", "received_events_url": "https://api.github.com/users/ivan-krukov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-04-06T23:05:49Z", "updated_at": "2016-11-13T22:38:09Z", "closed_at": "2015-04-08T20:35:42Z", "author_association": "NONE", "body": "I know this isn't strictly `json`-compliant, but I would love to have numbers as keys.\n\nSay I try:\n\n```\nstd::map data<double, double> = {{1.0, 2.0}, {3.0, 4.0}};\n```\n\nI would like to be able to:\n\n```\njson j_data(data);\n```\n\nIn order to get:\n\n```\n{1.0:2.0, 3.0:4.0}\n```\n\nI think the strength of `json` is that it can take a little bit of abuse.\nThanks.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/53", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/53/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/53/events", "html_url": "https://github.com/nlohmann/json/issues/53", "id": 66522543, "node_id": "MDU6SXNzdWU2NjUyMjU0Mw==", "number": 53, "title": "Why are elements alphabetized on key while iterating?", "user": {"login": "luxe", "id": 1312081, "node_id": "MDQ6VXNlcjEzMTIwODE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1312081?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luxe", "html_url": "https://github.com/luxe", "followers_url": "https://api.github.com/users/luxe/followers", "following_url": "https://api.github.com/users/luxe/following{/other_user}", "gists_url": "https://api.github.com/users/luxe/gists{/gist_id}", "starred_url": "https://api.github.com/users/luxe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luxe/subscriptions", "organizations_url": "https://api.github.com/users/luxe/orgs", "repos_url": "https://api.github.com/users/luxe/repos", "events_url": "https://api.github.com/users/luxe/events{/privacy}", "received_events_url": "https://api.github.com/users/luxe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-06T04:21:24Z", "updated_at": "2015-04-08T20:32:13Z", "closed_at": "2015-04-08T20:32:13Z", "author_association": "CONTRIBUTOR", "body": "Let's say I have the json from the example readme:\n\n```\n  nlohmann::json all = {\n  {\"pi\", 3.141},\n  {\"happy\", true},\n  {\"name\", \"Niels\"},\n  {\"nothing\", nullptr},\n  {\"answer\", {\n    {\"everything\", 42}\n  }},\n  {\"list\", {1, 0, 2}},\n  {\"object\", {\n    {\"currency\", \"USD\"},\n    {\"value\", 42.99}\n  }}\n};\n```\n\nI will iterate over it the following way:\n\n```\n  for (nlohmann::json::iterator it = all.begin(); it != all.end(); ++it) {\n    std::cout << it.key() << std::endl;\n  }\n```\n\nI would expect this:\n\n```\npi\nhappy\nname\nnothing\nanswer\nlist\nobject\n```\n\nInstead, I get:\n\n```\nanswer\nhappy\nlist\nname\nnothing\nobject\npi\n```\n\nWhy is this the default?  Can it be turned off?\n"}]