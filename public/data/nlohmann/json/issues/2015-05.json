[{"url": "https://api.github.com/repos/nlohmann/json/issues/78", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/78/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/78/events", "html_url": "https://github.com/nlohmann/json/issues/78", "id": 82388617, "node_id": "MDU6SXNzdWU4MjM4ODYxNw==", "number": 78, "title": "Incorrect behaviour of basic_json::count method", "user": {"login": "drewpts", "id": 10561098, "node_id": "MDQ6VXNlcjEwNTYxMDk4", "avatar_url": "https://avatars2.githubusercontent.com/u/10561098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewpts", "html_url": "https://github.com/drewpts", "followers_url": "https://api.github.com/users/drewpts/followers", "following_url": "https://api.github.com/users/drewpts/following{/other_user}", "gists_url": "https://api.github.com/users/drewpts/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewpts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewpts/subscriptions", "organizations_url": "https://api.github.com/users/drewpts/orgs", "repos_url": "https://api.github.com/users/drewpts/repos", "events_url": "https://api.github.com/users/drewpts/events{/privacy}", "received_events_url": "https://api.github.com/users/drewpts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-05-29T11:25:28Z", "updated_at": "2015-05-30T13:18:52Z", "closed_at": "2015-05-30T09:53:26Z", "author_association": "NONE", "body": "Hello again. :)\nIf we have code:\n\n``` cpp\n#include \"json.hpp\"\n#include <iostream>\nusing nlohmann::json;\nint main()\n{\n        json k = { {\"a\", \"A\"}, {\"a\", \"AA\"} };\n        std::cout << k.count(\"a\") << '\\n';\n        return 0;\n}\n```\n\nAccordingly to comment:\n\n``` cpp\n/// returns the number of occurrences of a key in an object\n    inline size_type count(typename object_t::key_type key) const\n    {\n        // return 0 for all nonobject types\n        return (m_type == value_t::object) ? m_value.object->count(key) : 0;\n    }\n```\n\nwe should got \"2\" in program output. By I got \"1\".\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/77", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/77/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/77/events", "html_url": "https://github.com/nlohmann/json/issues/77", "id": 81853551, "node_id": "MDU6SXNzdWU4MTg1MzU1MQ==", "number": 77, "title": "Invoking is_array() function creates \"null\" value", "user": {"login": "drewpts", "id": 10561098, "node_id": "MDQ6VXNlcjEwNTYxMDk4", "avatar_url": "https://avatars2.githubusercontent.com/u/10561098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewpts", "html_url": "https://github.com/drewpts", "followers_url": "https://api.github.com/users/drewpts/followers", "following_url": "https://api.github.com/users/drewpts/following{/other_user}", "gists_url": "https://api.github.com/users/drewpts/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewpts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewpts/subscriptions", "organizations_url": "https://api.github.com/users/drewpts/orgs", "repos_url": "https://api.github.com/users/drewpts/repos", "events_url": "https://api.github.com/users/drewpts/events{/privacy}", "received_events_url": "https://api.github.com/users/drewpts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-28T09:53:18Z", "updated_at": "2015-05-30T13:27:13Z", "closed_at": "2015-05-30T13:27:04Z", "author_association": "NONE", "body": "Hello.\n\n``` cpp\n if (j[SUBPR_DESCR].is_array()) {\n                if (j[SUBPR_DESCR].at(0).is_string() == false)\n                    return json::parse(error_code + \"Wrong values type of subprojects key!\\\"}\");\n            } else if (!j[SUBPR_DESCR].is_null() && !j[SUBPR_DESCR].is_array()) {\n                return json::parse(error_code + \"Corrupted or absent subprojects key!\\\"}\");\n            }\n```\n\nAfter invoking such function on json object data with key SUBPR_DESCR appearing with value \"none\".\n\n![2015-05-28 12 46 21](https://cloud.githubusercontent.com/assets/10561098/7857293/059ef150-0538-11e5-9de7-c8f5f48a1c11.png)\n![2015-05-28 12 46 31](https://cloud.githubusercontent.com/assets/10561098/7857292/059dab10-0538-11e5-96b0-030987fc02c6.png)\n\n[offtop] Lol, horrible char \\* to string casting at the bottom of image :hamster: [/offtop]\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/76", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/76/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/76/events", "html_url": "https://github.com/nlohmann/json/issues/76", "id": 81144170, "node_id": "MDU6SXNzdWU4MTE0NDE3MA==", "number": 76, "title": "dump() / parse() not idempotent", "user": {"login": "benbo75", "id": 63011, "node_id": "MDQ6VXNlcjYzMDEx", "avatar_url": "https://avatars2.githubusercontent.com/u/63011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benbo75", "html_url": "https://github.com/benbo75", "followers_url": "https://api.github.com/users/benbo75/followers", "following_url": "https://api.github.com/users/benbo75/following{/other_user}", "gists_url": "https://api.github.com/users/benbo75/gists{/gist_id}", "starred_url": "https://api.github.com/users/benbo75/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benbo75/subscriptions", "organizations_url": "https://api.github.com/users/benbo75/orgs", "repos_url": "https://api.github.com/users/benbo75/repos", "events_url": "https://api.github.com/users/benbo75/events{/privacy}", "received_events_url": "https://api.github.com/users/benbo75/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2015-05-26T21:30:05Z", "updated_at": "2015-05-31T15:21:27Z", "closed_at": "2015-05-31T13:47:40Z", "author_association": "NONE", "body": "If you construct a string of the JSON payload using `dump()` and then use `parse()` to deserialize it, the contents of the former object don't match the latter when there are escape characters.  Example pseudo-code\n\n```\nvoid test_case()\n{\n    nlohmann::json fields;\n    fields[\"one\"] = std::string(\"one\");\n    fields[\"two\"] = std::string(\"two three\");\n    fields[\"three\"] = std::string(\"three \\\"four\\\"\");\n    std::string payload = fields.dump();\n\n    nlohmann::json parsed_fields = fields_t::parse(payload);\n    test_check_eq(parsed_fields.size(), fields.size());\n    test_check_eq(parsed_fields[\"one\"], fields[\"one\"]);\n    test_check_eq(parsed_fields[\"two\"], fields[\"two\"]);\n    test_check_eq(parsed_fields[\"three\"], fields[\"three\"]);\n}\n```\n\nHere `parsed_fields[\"three\"]  == std::string(\"three \\\\\\\"four\\\\\\\"\")`.  If this is expected, then what should be done to `parsed_fields` in this case to recover the original contents?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/70", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/70/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/70/events", "html_url": "https://github.com/nlohmann/json/issues/70", "id": 73462498, "node_id": "MDU6SXNzdWU3MzQ2MjQ5OA==", "number": 70, "title": "Handle infinity and NaN cases", "user": {"login": "EricMCornelius", "id": 748917, "node_id": "MDQ6VXNlcjc0ODkxNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/748917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EricMCornelius", "html_url": "https://github.com/EricMCornelius", "followers_url": "https://api.github.com/users/EricMCornelius/followers", "following_url": "https://api.github.com/users/EricMCornelius/following{/other_user}", "gists_url": "https://api.github.com/users/EricMCornelius/gists{/gist_id}", "starred_url": "https://api.github.com/users/EricMCornelius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EricMCornelius/subscriptions", "organizations_url": "https://api.github.com/users/EricMCornelius/orgs", "repos_url": "https://api.github.com/users/EricMCornelius/repos", "events_url": "https://api.github.com/users/EricMCornelius/events{/privacy}", "received_events_url": "https://api.github.com/users/EricMCornelius/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2015-05-05T23:29:51Z", "updated_at": "2017-03-12T17:57:42Z", "closed_at": "2015-05-06T17:52:17Z", "author_association": "NONE", "body": "http://en.cppreference.com/w/cpp/io/c/fprintf\n\nsnprintf will format infinity and nan doubles as Inf/Infinity or nan/nan(char_sequence) respectively.  This  can break the validity of a json.dump() document: https://github.com/nlohmann/json/blob/1580eee4ed36cce2251c42ced420807abe8fa35f/src/json.hpp#L2279\n\nYou can check for infinity/nan w/ std::isinfinite/std::isnan - not sure what you'd like to actually do in those scenarios (some specific/configurable string representation?)\n\nhttp://en.cppreference.com/w/cpp/numeric/math/isfinite\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/68", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/68/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/68/events", "html_url": "https://github.com/nlohmann/json/issues/68", "id": 72853213, "node_id": "MDU6SXNzdWU3Mjg1MzIxMw==", "number": 68, "title": "errors in g++-4.8.1", "user": {"login": "soonhokong", "id": 403281, "node_id": "MDQ6VXNlcjQwMzI4MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/403281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soonhokong", "html_url": "https://github.com/soonhokong", "followers_url": "https://api.github.com/users/soonhokong/followers", "following_url": "https://api.github.com/users/soonhokong/following{/other_user}", "gists_url": "https://api.github.com/users/soonhokong/gists{/gist_id}", "starred_url": "https://api.github.com/users/soonhokong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soonhokong/subscriptions", "organizations_url": "https://api.github.com/users/soonhokong/orgs", "repos_url": "https://api.github.com/users/soonhokong/repos", "events_url": "https://api.github.com/users/soonhokong/events{/privacy}", "received_events_url": "https://api.github.com/users/soonhokong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2015-05-03T19:29:35Z", "updated_at": "2015-05-06T20:41:09Z", "closed_at": "2015-05-06T18:18:22Z", "author_association": "NONE", "body": "g++-4.8.1 generates the following two errors while g++-4.9.2 does not generate any error (OS: ubuntu-12.04).\n\n```\ng++-4.8 -std=c++11    -I src -I test test/unit.cpp  -o json_unit\nIn file included from test/unit.cpp:25:0:\nsrc/json.hpp: In instantiation of \u2018T nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::erase(T) [with T = nlohmann::basic_json<>::const_iterator; typename std::enable_if<(std::is_same<V, nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::iterator>::value || std::is_same<V, nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::const_iterator>::value), int>::type <anonymous> = 0; ObjectType = std::map; ArrayType = std::vector; StringType = std::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberFloatType = double; AllocatorType = std::allocator]\u2019:\ntest/unit.cpp:2655:80:   required from here\nsrc/json.hpp:1286:44: error: no matching function for call to \u2018std::vector<nlohmann::basic_json<> >::erase(__gnu_cxx::__normal_iterator<const nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >&)\u2019\n                 result.m_it.array_iterator = m_value.array->erase(pos.m_it.array_iterator);\n                                            ^\nsrc/json.hpp:1286:44: note: candidates are:\nIn file included from /usr/include/c++/4.8/vector:69:0,\n                 from /usr/include/c++/4.8/bits/random.h:34,\n                 from /usr/include/c++/4.8/random:50,\n                 from /usr/include/c++/4.8/bits/stl_algo.h:65,\n                 from /usr/include/c++/4.8/algorithm:62,\n                 from test/catch.hpp:62,\n                 from test/unit.cpp:11:\n/usr/include/c++/4.8/bits/vector.tcc:134:5: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::iterator) [with _Tp = nlohmann::basic_json<>; _Alloc = std::allocator<nlohmann::basic_json<> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = nlohmann::basic_json<>*]\n     vector<_Tp, _Alloc>::\n     ^\n/usr/include/c++/4.8/bits/vector.tcc:134:5: note:   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<const nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >\u2019 to \u2018std::vector<nlohmann::basic_json<> >::iterator {aka __gnu_cxx::__normal_iterator<nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >}\u2019\n/usr/include/c++/4.8/bits/vector.tcc:146:5: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::iterator) [with _Tp = nlohmann::basic_json<>; _Alloc = std::allocator<nlohmann::basic_json<> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = nlohmann::basic_json<>*]\n     vector<_Tp, _Alloc>::\n     ^\n/usr/include/c++/4.8/bits/vector.tcc:146:5: note:   candidate expects 2 arguments, 1 provided\nIn file included from test/unit.cpp:25:0:\nsrc/json.hpp: In instantiation of \u2018T nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::erase(T, T) [with T = nlohmann::basic_json<>::const_iterator; typename std::enable_if<(std::is_same<V, nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::iterator>::value || std::is_same<V, nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::const_iterator>::value), int>::type <anonymous> = 0; ObjectType = std::map; ArrayType = std::vector; StringType = std::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberFloatType = double; AllocatorType = std::allocator]\u2019:\ntest/unit.cpp:2671:95:   required from here\nsrc/json.hpp:1348:44: error: no matching function for call to \u2018std::vector<nlohmann::basic_json<> >::erase(__gnu_cxx::__normal_iterator<const nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >&, __gnu_cxx::__normal_iterator<const nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >&)\u2019\n                 result.m_it.array_iterator = m_value.array->erase(first.m_it.array_iterator,\n                                            ^\nsrc/json.hpp:1348:44: note: candidates are:\nIn file included from /usr/include/c++/4.8/vector:69:0,\n                 from /usr/include/c++/4.8/bits/random.h:34,\n                 from /usr/include/c++/4.8/random:50,\n                 from /usr/include/c++/4.8/bits/stl_algo.h:65,\n                 from /usr/include/c++/4.8/algorithm:62,\n                 from test/catch.hpp:62,\n                 from test/unit.cpp:11:\n/usr/include/c++/4.8/bits/vector.tcc:134:5: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::iterator) [with _Tp = nlohmann::basic_json<>; _Alloc = std::allocator<nlohmann::basic_json<> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = nlohmann::basic_json<>*]\n     vector<_Tp, _Alloc>::\n     ^\n/usr/include/c++/4.8/bits/vector.tcc:134:5: note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/4.8/bits/vector.tcc:146:5: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::iterator) [with _Tp = nlohmann::basic_json<>; _Alloc = std::allocator<nlohmann::basic_json<> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = nlohmann::basic_json<>*]\n     vector<_Tp, _Alloc>::\n     ^\n/usr/include/c++/4.8/bits/vector.tcc:146:5: note:   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<const nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >\u2019 to \u2018std::vector<nlohmann::basic_json<> >::iterator {aka __gnu_cxx::__normal_iterator<nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >}\u2019\nmake: *** [json_unit] Error 1\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/67", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/67/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/67/events", "html_url": "https://github.com/nlohmann/json/issues/67", "id": 72680672, "node_id": "MDU6SXNzdWU3MjY4MDY3Mg==", "number": 67, "title": "Keys when iterating over objects", "user": {"login": "mlund", "id": 3248398, "node_id": "MDQ6VXNlcjMyNDgzOTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3248398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlund", "html_url": "https://github.com/mlund", "followers_url": "https://api.github.com/users/mlund/followers", "following_url": "https://api.github.com/users/mlund/following{/other_user}", "gists_url": "https://api.github.com/users/mlund/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlund/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlund/subscriptions", "organizations_url": "https://api.github.com/users/mlund/orgs", "repos_url": "https://api.github.com/users/mlund/repos", "events_url": "https://api.github.com/users/mlund/events{/privacy}", "received_events_url": "https://api.github.com/users/mlund/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-05-02T18:34:19Z", "updated_at": "2015-05-03T16:14:01Z", "closed_at": "2015-05-03T13:16:42Z", "author_association": "NONE", "body": "I'm trying to iterate over a json input file containing an unknown number of molecules (see below). For each of these the key is the name which I currently have found no way to extract. Is this possible?\n\nCode:\n\n``` c++\n#include <faunus/json.hpp>\n#include <iostream>\n#include <fstream>\n\n/*\n * minimal.json:\n * {\n *   \"moleculelist\" : { \n *     \"salt\" : { \"atoms\":\"Na Cl\", \"atomic\":true, \"Ninit\":1 },\n *     \"water\" : { \"atoms\":\"H H O\", \"atomic\":false, \"Ninit\":55 }\n *   }\n * }\n */\n\nusing json = nlohmann::json;\n\nint main() {\n  std::ifstream f(\"minimal.json\");\n  if (f) {\n    json j;\n    j << f;\n    if ( ! j[\"moleculelist\"].empty() )\n      for ( auto &mol : j[\"moleculelist\"] )\n        if ( mol.is_object() ) {\n          // how to get entry keys? (i.e. \"salt\", \"water\", etc.)\n          for ( auto &i : mol )\n            std::cout << i << \"\\n\";\n        }\n  }\n}\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/66", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/66/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/66/events", "html_url": "https://github.com/nlohmann/json/issues/66", "id": 72561373, "node_id": "MDU6SXNzdWU3MjU2MTM3Mw==", "number": 66, "title": "Consider submitting this to the Boost Library Incubator", "user": {"login": "robertramey", "id": 1970652, "node_id": "MDQ6VXNlcjE5NzA2NTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1970652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robertramey", "html_url": "https://github.com/robertramey", "followers_url": "https://api.github.com/users/robertramey/followers", "following_url": "https://api.github.com/users/robertramey/following{/other_user}", "gists_url": "https://api.github.com/users/robertramey/gists{/gist_id}", "starred_url": "https://api.github.com/users/robertramey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robertramey/subscriptions", "organizations_url": "https://api.github.com/users/robertramey/orgs", "repos_url": "https://api.github.com/users/robertramey/repos", "events_url": "https://api.github.com/users/robertramey/events{/privacy}", "received_events_url": "https://api.github.com/users/robertramey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2015-05-02T01:17:36Z", "updated_at": "2015-12-29T11:24:34Z", "closed_at": "2015-12-29T11:24:34Z", "author_association": "NONE", "body": "www.blincubator.com\n\nRobert Ramey\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/65", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/65/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/65/events", "html_url": "https://github.com/nlohmann/json/issues/65", "id": 72516805, "node_id": "MDU6SXNzdWU3MjUxNjgwNQ==", "number": 65, "title": "Wishlist", "user": {"login": "jwaterloo", "id": 10145988, "node_id": "MDQ6VXNlcjEwMTQ1OTg4", "avatar_url": "https://avatars2.githubusercontent.com/u/10145988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwaterloo", "html_url": "https://github.com/jwaterloo", "followers_url": "https://api.github.com/users/jwaterloo/followers", "following_url": "https://api.github.com/users/jwaterloo/following{/other_user}", "gists_url": "https://api.github.com/users/jwaterloo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwaterloo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwaterloo/subscriptions", "organizations_url": "https://api.github.com/users/jwaterloo/orgs", "repos_url": "https://api.github.com/users/jwaterloo/repos", "events_url": "https://api.github.com/users/jwaterloo/events{/privacy}", "received_events_url": "https://api.github.com/users/jwaterloo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-05-01T20:32:46Z", "updated_at": "2016-11-13T22:38:10Z", "closed_at": "2015-12-14T14:30:35Z", "author_association": "NONE", "body": "A common use case in web development is the need for flatten and unflatten functions, that is the ability to flatten a json object into a map of javascript assignment strings and vice versa.\n\n{\n\"member1\" : true,\n\"member2\" : \"Hello World\",\n\"member3\" : [1, {\"member4\" : 4, \"member5\" : 6.5}, 3]\n}\n\ninto\n\nprefix \"whatever\"\n\nkey = whatever.member1\nvalue = true\nkey = whatever.member2\nvalue = \"Hello World\"\nkey = whatever.member3[0]\nvalue = 1\nkey = whatever.member1[1].member4\nvalue = 4\nkey = whatever.member1[1].member5\nvalue = 6.5\nkey = whatever.member3[2]\nvalue = 3\n\nfunction sighatures would be something like\n\nmap&lt;string, json_primitive_that_insn't_object_or_array&gt; flatten(json_object_or_array, symbol_name);\njson_object_or_array unflatten(map&lt;string, json_primitive_that_insn't_object_or_array&gt;, symbol_name);\n\nThe type of the map would be string to a json primitive that isn't an object or an array.\n\nThe use case is that the keys in the map could be used as form field names. PHP and jQuery both are already doing this natively. Wouldn't it be nice if C++ had equal or better footing for web development.\n"}]