[{"url": "https://api.github.com/repos/nlohmann/json/issues/107", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/107/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/107/events", "html_url": "https://github.com/nlohmann/json/issues/107", "id": 97883903, "node_id": "MDU6SXNzdWU5Nzg4MzkwMw==", "number": 107, "title": "[clang-3.6.2] string/sstream with number to json issue", "user": {"login": "vpetrigo", "id": 5689770, "node_id": "MDQ6VXNlcjU2ODk3NzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5689770?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vpetrigo", "html_url": "https://github.com/vpetrigo", "followers_url": "https://api.github.com/users/vpetrigo/followers", "following_url": "https://api.github.com/users/vpetrigo/following{/other_user}", "gists_url": "https://api.github.com/users/vpetrigo/gists{/gist_id}", "starred_url": "https://api.github.com/users/vpetrigo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vpetrigo/subscriptions", "organizations_url": "https://api.github.com/users/vpetrigo/orgs", "repos_url": "https://api.github.com/users/vpetrigo/repos", "events_url": "https://api.github.com/users/vpetrigo/events{/privacy}", "received_events_url": "https://api.github.com/users/vpetrigo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 17, "created_at": "2015-07-29T08:15:09Z", "updated_at": "2015-11-06T13:40:21Z", "closed_at": "2015-11-06T07:36:56Z", "author_association": "CONTRIBUTOR", "body": "Dear Niels,\n\nI have a library for working with some translate API. By using curl I form request to the server and obtain a string in the format `{\"code\":200,\"lang\":\"ru-en\",\"text\":[hello]}`. After a while I met the issue that my library which had been build with clang dropped with `Segmentation fault` error. \nBelow my test code which works well with `g++ (4.9.2 and 5.2.0)`, but not with `clang++ (3.6.2)`:\n\n``` cpp\n#include <iostream>\n#include <sstream>\n#include \"json.hpp\"\n\nusing json = nlohmann::json;\n\nint main() {\n    std::istringstream is {R\"({\"code\":200,\"lang\":\"ru-en\",\"text\":[\"hello\"]})\"};\n    json d;\n\n    std::cout << is.str() << std::endl;\n\n    is >> d;\n\n    std::cout << d.dump() << std::endl;\n\n    return 0;\n}\n```\n\nAnd also tested such case:\n\n``` cpp\n    std::string s{\"{ \\\"code\\\" : 200 }\"};\n    json d;\n\n    d = json::parse(s);\n```\n\nMy current clang is `version 3.6.2 (tags/RELEASE_362/final)`. I will test it with other version and will tell you if something changes.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/106", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/106/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/106/events", "html_url": "https://github.com/nlohmann/json/issues/106", "id": 97546245, "node_id": "MDU6SXNzdWU5NzU0NjI0NQ==", "number": 106, "title": "maintaining order of keys during iteration", "user": {"login": "nickdesaulniers", "id": 1823839, "node_id": "MDQ6VXNlcjE4MjM4Mzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1823839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickdesaulniers", "html_url": "https://github.com/nickdesaulniers", "followers_url": "https://api.github.com/users/nickdesaulniers/followers", "following_url": "https://api.github.com/users/nickdesaulniers/following{/other_user}", "gists_url": "https://api.github.com/users/nickdesaulniers/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickdesaulniers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickdesaulniers/subscriptions", "organizations_url": "https://api.github.com/users/nickdesaulniers/orgs", "repos_url": "https://api.github.com/users/nickdesaulniers/repos", "events_url": "https://api.github.com/users/nickdesaulniers/events{/privacy}", "received_events_url": "https://api.github.com/users/nickdesaulniers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-07-27T20:18:52Z", "updated_at": "2016-12-10T20:50:06Z", "closed_at": "2015-12-06T15:51:32Z", "author_association": "NONE", "body": "keys in JSON are not sorted, but ordered based on definition. This becomes apparent when iterating keys of an object.  For example, in JavaScript, with an object literal:\n\n``` js\nx = { a: 0, b: 1 }\ny = { b: 0, a: 1 }\nfor (var key in x) console.log(key)\nfor (var key in y) console.log(key)\nfor (var key in JSON.parse(JSON.stringify(x))) console.log(key)\nfor (var key in JSON.parse(JSON.stringify(y))) console.log(key)\n```\n\nprints\n\n```\na\nb\nb\na\na\nb\nb\na\n```\n\nFor example, I believe most JS JITs keep separate shapes for object with the same properties but defined in different orders.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/103", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/103/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/103/events", "html_url": "https://github.com/nlohmann/json/issues/103", "id": 92838102, "node_id": "MDU6SXNzdWU5MjgzODEwMg==", "number": 103, "title": "object field accessors", "user": {"login": "ropuls", "id": 9431950, "node_id": "MDQ6VXNlcjk0MzE5NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9431950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ropuls", "html_url": "https://github.com/ropuls", "followers_url": "https://api.github.com/users/ropuls/followers", "following_url": "https://api.github.com/users/ropuls/following{/other_user}", "gists_url": "https://api.github.com/users/ropuls/gists{/gist_id}", "starred_url": "https://api.github.com/users/ropuls/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ropuls/subscriptions", "organizations_url": "https://api.github.com/users/ropuls/orgs", "repos_url": "https://api.github.com/users/ropuls/repos", "events_url": "https://api.github.com/users/ropuls/events{/privacy}", "received_events_url": "https://api.github.com/users/ropuls/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-07-03T09:43:04Z", "updated_at": "2016-11-13T22:38:10Z", "closed_at": "2015-12-15T07:39:22Z", "author_association": "NONE", "body": "Hi Niels,\n\nnot sure if this is needed inside the class, however that pattern is widely in use here, and might be of use for other users as well.\n\n``` c++\ntemplate <typename T>\nT get(json &value, const std::string &key, T defval = T()) {\n    if (value.is_object()) {\n        auto it = value.find(key);\n        if (it != value.end()) {\n            try {\n                return it.value().get<T>();\n            } catch (...) {\n\n            }\n        }\n    }\n    return defval;\n}\n\nvoid dispatch(const json &j) {\n    std::string op = get<std::string>(j, \"op\");\n    if (op == \"replace\") {\n        ...\n    } else if (op == \"insert\") {\n        ...\n    } else if (op == \"select\") {\n        ...\n    }\n}\n```\n\nIn a real implementation, names would need to be changed, and SFINAE type-checking shall be made if T is generally convertible from json's underlying types. It would also be good to avoid the internal exception, if possible, and have a non-throwing path (for me an exception is almost ever an error condition, whilst that new accessors gently asks \"may I have it as T if that key is here\"?\n\nAnother variant for c++14 and beyond users would be:\n\n``` c++\ntemplate <typename T>\nstd::optional<T> get(const json &j, const std::string &key) {\n    ...\n}\n\nif (get(j, \"op\").value_or(\"\")) { ... }\n```\n\nWhich would make things even better/more precise.\n\nCheers,\n  Roman\n\nPS: with gcc5 (stolen from their homepage) we can detect std::optional like this:\n\n``` c++\n#ifdef __has_include\n#  if __has_include(<optional>)\n#    include <optional>\n#    define have_optional 1\n#  elif __has_include(<experimental/optional>)\n#    include <experimental/optional>\n#    define have_optional 1\n#    define experimental_optional\n#  else\n#    define have_optional 0\n#  endif\n#endif\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/102", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/102/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/102/events", "html_url": "https://github.com/nlohmann/json/issues/102", "id": 92487741, "node_id": "MDU6SXNzdWU5MjQ4Nzc0MQ==", "number": 102, "title": "Finish documenting the public interface in Doxygen", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/1", "html_url": "https://github.com/nlohmann/json/milestone/1", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/1/labels", "id": 1189739, "node_id": "MDk6TWlsZXN0b25lMTE4OTczOQ==", "number": 1, "title": "Release 1.0.0-rc1", "description": "The 1.0.0 release should be the first \"official\" release after the initial announcement of the class in January 2015 via reddit (\"0.1.0\") and a heavily overworked second version (\"0.2.0\") in February. By switching to official releases, I would like to make the class evolution and feature set more predictable. The times of frequent API changes are over.\r\n\r\nThis milestone collects issues that should be finished before a release can be made.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2015-07-01T21:13:03Z", "updated_at": "2016-01-13T20:02:11Z", "due_on": null, "closed_at": "2016-01-13T20:02:11Z"}, "comments": 0, "created_at": "2015-07-01T21:20:32Z", "updated_at": "2015-07-26T09:50:54Z", "closed_at": "2015-07-26T09:50:52Z", "author_association": "OWNER", "body": "There are several undocumented public functions and types, see http://nlohmann.github.io/json/todo.html. This ticket can be closed if all public functions and types are documented and annotated with examples.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/101", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/101/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/101/events", "html_url": "https://github.com/nlohmann/json/issues/101", "id": 92426851, "node_id": "MDU6SXNzdWU5MjQyNjg1MQ==", "number": 101, "title": "Binary string causes numbers to be dumped as hex", "user": {"login": "minus7", "id": 419104, "node_id": "MDQ6VXNlcjQxOTEwNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/419104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minus7", "html_url": "https://github.com/minus7", "followers_url": "https://api.github.com/users/minus7/followers", "following_url": "https://api.github.com/users/minus7/following{/other_user}", "gists_url": "https://api.github.com/users/minus7/gists{/gist_id}", "starred_url": "https://api.github.com/users/minus7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minus7/subscriptions", "organizations_url": "https://api.github.com/users/minus7/orgs", "repos_url": "https://api.github.com/users/minus7/repos", "events_url": "https://api.github.com/users/minus7/events{/privacy}", "received_events_url": "https://api.github.com/users/minus7/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2015-07-01T16:25:58Z", "updated_at": "2015-07-01T21:09:02Z", "closed_at": "2015-07-01T21:09:02Z", "author_association": "NONE", "body": "The following code dumps the value of the `number` field in hexadecimal format (without leading `0x`, but that's not legal json anyway afaik) when there's also a string containing a symbol between `\\x00` and `\\x1f`.\n\n``` cpp\n#include <iostream>\n#include \"json.hpp\"\n\nusing namespace std;\nusing json = nlohmann::json;\n\nint main()\n{\n    int64_t number = 10;\n    cout << \"number: \" << number << endl;\n    string bytes{\"\\x00\" \"asdf\\n\", 6};\n    cout << \"bytes: \" << bytes << endl;\n    //json j{{\"int64\", number}, {\"binary string\", bytes}};\n    json j;\n    j[\"int64\"] = number;\n    j[\"binary string\"] = bytes;\n    cout << j.dump() << endl;\n    return 0;\n}\n```\n\nThe output looks like this:\n\n```\nnumber: 10\nbytes: asdf\n\n{\"binary string\":\"\\u0000asdf\\n\",\"int64\":a}\n```\n\nUsing the latest revision (540c58964dba265453d13c43ffd93a21504c4157)\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/100", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/100/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/100/events", "html_url": "https://github.com/nlohmann/json/issues/100", "id": 92277607, "node_id": "MDU6SXNzdWU5MjI3NzYwNw==", "number": 100, "title": "failed to iterator json object with reverse_iterator", "user": {"login": "likebeta", "id": 3068426, "node_id": "MDQ6VXNlcjMwNjg0MjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3068426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/likebeta", "html_url": "https://github.com/likebeta", "followers_url": "https://api.github.com/users/likebeta/followers", "following_url": "https://api.github.com/users/likebeta/following{/other_user}", "gists_url": "https://api.github.com/users/likebeta/gists{/gist_id}", "starred_url": "https://api.github.com/users/likebeta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/likebeta/subscriptions", "organizations_url": "https://api.github.com/users/likebeta/orgs", "repos_url": "https://api.github.com/users/likebeta/repos", "events_url": "https://api.github.com/users/likebeta/events{/privacy}", "received_events_url": "https://api.github.com/users/likebeta/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/1", "html_url": "https://github.com/nlohmann/json/milestone/1", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/1/labels", "id": 1189739, "node_id": "MDk6TWlsZXN0b25lMTE4OTczOQ==", "number": 1, "title": "Release 1.0.0-rc1", "description": "The 1.0.0 release should be the first \"official\" release after the initial announcement of the class in January 2015 via reddit (\"0.1.0\") and a heavily overworked second version (\"0.2.0\") in February. By switching to official releases, I would like to make the class evolution and feature set more predictable. The times of frequent API changes are over.\r\n\r\nThis milestone collects issues that should be finished before a release can be made.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2015-07-01T21:13:03Z", "updated_at": "2016-01-13T20:02:11Z", "due_on": null, "closed_at": "2016-01-13T20:02:11Z"}, "comments": 5, "created_at": "2015-07-01T06:00:02Z", "updated_at": "2015-07-07T02:17:35Z", "closed_at": "2015-07-06T21:22:01Z", "author_association": "CONTRIBUTOR", "body": "Hello @nlohmann , I've got a problem.\n\ncode:\n\n```\n#include \"json.hpp\"\nusing nlohmann::json;\n#include <iostream>\nusing namespace std;\n\nint main()\n{\n    json config = {\n        { \"111\", 111 },\n        { \"112\", 112 },\n        { \"113\", 113 }\n    };\n\n    cout << config << endl;\n    for (auto it = config.begin(); it != config.end(); ++it)\n    {\n        cout << it.key() << \": \" << it.value() << endl;\n    }\n\n    for (auto it = config.rbegin(); it != config.rend(); ++it)\n    {\n        cout << it.key() << \": \" << it.value() << endl;\n    }\n\n    return 0;\n}\n```\n\noutput:\n\n```\n{\"111\":111,\"112\":112,\"113\":113}\n111: 111\n112: 112\n113: 113\nSegmentation fault (core dumped)\n```\n\nThink you for your help!\n"}]