[{"url": "https://api.github.com/repos/nlohmann/json/issues/138", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/138/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/138/events", "html_url": "https://github.com/nlohmann/json/issues/138", "id": 111872918, "node_id": "MDU6SXNzdWUxMTE4NzI5MTg=", "number": 138, "title": "Question: Is the use of incomplete type correct?", "user": {"login": "dariomt", "id": 12997431, "node_id": "MDQ6VXNlcjEyOTk3NDMx", "avatar_url": "https://avatars3.githubusercontent.com/u/12997431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dariomt", "html_url": "https://github.com/dariomt", "followers_url": "https://api.github.com/users/dariomt/followers", "following_url": "https://api.github.com/users/dariomt/following{/other_user}", "gists_url": "https://api.github.com/users/dariomt/gists{/gist_id}", "starred_url": "https://api.github.com/users/dariomt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dariomt/subscriptions", "organizations_url": "https://api.github.com/users/dariomt/orgs", "repos_url": "https://api.github.com/users/dariomt/repos", "events_url": "https://api.github.com/users/dariomt/events{/privacy}", "received_events_url": "https://api.github.com/users/dariomt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-10-16T17:11:13Z", "updated_at": "2015-12-15T08:42:24Z", "closed_at": "2015-12-15T08:42:15Z", "author_association": "CONTRIBUTOR", "body": "The definitions of `array_t` and `object_t` in json.hpp look like this:\n\n``` cpp\nclass basic_json\n{\n    ...\n    using array_t = ArrayType<basic_json, AllocatorType<basic_json>>;\n    ...\n    using object_t = ObjectType<StringType,\n          basic_json,\n          std::less<StringType>,\n          AllocatorType<std::pair<const StringType,\n          basic_json>>>;\n```\n\nSo it is instantiating the `ArrayType` and the `ObjectType` templates when `basic_json` is still an incomplete type. By default those templates are `std::vector` and `std::map`.\nIt seems to work, but I wonder, is it correct according to the standard?\n\nInstantiating STL types with incomplete types seems to be prohibited, so I'd say recursive structures like this would not be _technically_ correct (even if the current implementation allowed it).\n\nFrom an [answer](http://stackoverflow.com/questions/12281274/map-with-incomplete-value-type) in stackoverflow:\n\n> \u00a717.6.4.8 Other functions / 2:\n> In particular, the effects are undefined in the following cases:\n> ...\n> - if an incomplete type (3.9) is used as a template argument when instantiating a template component, unless specifically allowed for that component.\n\nIn fact, supporting recursive structures is one of the nice features that Boost.Container provides and the STL does not, according to its [docs](http://www.boost.org/doc/libs/1_59_0/doc/html/container/main_features.html#container.main_features.containers_of_incomplete_types).\n\nWhat do you think?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/136", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/136/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/136/events", "html_url": "https://github.com/nlohmann/json/issues/136", "id": 110861980, "node_id": "MDU6SXNzdWUxMTA4NjE5ODA=", "number": 136, "title": "json.hpp:5746:32: error: 'to_string' is not a member of 'std'", "user": {"login": "Ingener74", "id": 3167594, "node_id": "MDQ6VXNlcjMxNjc1OTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/3167594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ingener74", "html_url": "https://github.com/Ingener74", "followers_url": "https://api.github.com/users/Ingener74/followers", "following_url": "https://api.github.com/users/Ingener74/following{/other_user}", "gists_url": "https://api.github.com/users/Ingener74/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ingener74/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ingener74/subscriptions", "organizations_url": "https://api.github.com/users/Ingener74/orgs", "repos_url": "https://api.github.com/users/Ingener74/repos", "events_url": "https://api.github.com/users/Ingener74/events{/privacy}", "received_events_url": "https://api.github.com/users/Ingener74/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382449225, "node_id": "MDU6TGFiZWwzODI0NDkyMjU=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20android", "name": "platform: android", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 78, "created_at": "2015-10-11T15:07:27Z", "updated_at": "2017-03-06T23:51:58Z", "closed_at": "2015-12-15T17:34:43Z", "author_association": "NONE", "body": "Hello.\nOn Android i have this messages\n- json.hpp:5746:32: error: 'to_string' is not a member of 'std'\n- json.hpp:6911:36: error: 'strtold' is not a member of 'std'\n\nandroid ndk have no to_strign realization\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/135", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/135/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/135/events", "html_url": "https://github.com/nlohmann/json/issues/135", "id": 110645836, "node_id": "MDU6SXNzdWUxMTA2NDU4MzY=", "number": 135, "title": "Bug in basic_json::operator[] const overload", "user": {"login": "dariomt", "id": 12997431, "node_id": "MDQ6VXNlcjEyOTk3NDMx", "avatar_url": "https://avatars3.githubusercontent.com/u/12997431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dariomt", "html_url": "https://github.com/dariomt", "followers_url": "https://api.github.com/users/dariomt/followers", "following_url": "https://api.github.com/users/dariomt/following{/other_user}", "gists_url": "https://api.github.com/users/dariomt/gists{/gist_id}", "starred_url": "https://api.github.com/users/dariomt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dariomt/subscriptions", "organizations_url": "https://api.github.com/users/dariomt/orgs", "repos_url": "https://api.github.com/users/dariomt/repos", "events_url": "https://api.github.com/users/dariomt/events{/privacy}", "received_events_url": "https://api.github.com/users/dariomt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2015-10-09T12:16:50Z", "updated_at": "2015-12-21T08:02:59Z", "closed_at": "2015-12-21T08:02:59Z", "author_association": "CONTRIBUTOR", "body": "The following code\n\n```\n// note the *const*\nconst json object =\n{\n        {\"one\", 1}, {\"two\", 2}, {\"three\", 2.9}\n};\nstd::cout << object.size() << '\\n';\nstd::cout << object[\"doh!\"] << '\\n'; // element not found\nstd::cout << object.size() << '\\n'; // const object modified!\n```\n\nprints\n\n```\n3\nnull\n4\n```\n\nAllowing a const object to change like this is not a good idea.\nI think this is a bug: either the const overload of `operator[]` throws if the key cannot be found, or there is no such const overload (e.g. std::map does not have it).\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/134", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/134/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/134/events", "html_url": "https://github.com/nlohmann/json/issues/134", "id": 110500666, "node_id": "MDU6SXNzdWUxMTA1MDA2NjY=", "number": 134, "title": "wrong enable_if for const pointer (instead of pointer-to-const)", "user": {"login": "dariomt", "id": 12997431, "node_id": "MDQ6VXNlcjEyOTk3NDMx", "avatar_url": "https://avatars3.githubusercontent.com/u/12997431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dariomt", "html_url": "https://github.com/dariomt", "followers_url": "https://api.github.com/users/dariomt/followers", "following_url": "https://api.github.com/users/dariomt/following{/other_user}", "gists_url": "https://api.github.com/users/dariomt/gists{/gist_id}", "starred_url": "https://api.github.com/users/dariomt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dariomt/subscriptions", "organizations_url": "https://api.github.com/users/dariomt/orgs", "repos_url": "https://api.github.com/users/dariomt/repos", "events_url": "https://api.github.com/users/dariomt/events{/privacy}", "received_events_url": "https://api.github.com/users/dariomt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2015-10-08T17:12:26Z", "updated_at": "2015-12-06T15:44:54Z", "closed_at": "2015-12-06T15:44:54Z", "author_association": "CONTRIBUTOR", "body": "Hi ,\nThe following test fails to compile:\n\n```\nconst json value = {{\"one\", 1}, {\"two\", 2}};\nconst json::object_t* p = value.get_ptr<const json::object_t*>();\n```\n\nBut this compiles (note the extra const):\n\n```\nconst json value = {{\"one\", 1}, {\"two\", 2}};\nconst json::object_t* const q = value.get_ptr<const json::object_t* const>();\n```\n\nI think that the problem is the additional check for the const overload of get_ptr\n`and std::is_const<PointerType>::value`\n\nI think what you intended was to check that the template parameter is a \"pointer-to-const\" but what you are actually checking is if you got a \"const pointer\".\n\nI believe the right fix is to check for \"pointer-to-const\" like this:\n`and std::is_const< typename std::remove_pointer<PointerType>::type >::value`\nIt works in VS2015.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/133", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/133/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/133/events", "html_url": "https://github.com/nlohmann/json/issues/133", "id": 110451476, "node_id": "MDU6SXNzdWUxMTA0NTE0NzY=", "number": 133, "title": "overload of at() with default value", "user": {"login": "dariomt", "id": 12997431, "node_id": "MDQ6VXNlcjEyOTk3NDMx", "avatar_url": "https://avatars3.githubusercontent.com/u/12997431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dariomt", "html_url": "https://github.com/dariomt", "followers_url": "https://api.github.com/users/dariomt/followers", "following_url": "https://api.github.com/users/dariomt/following{/other_user}", "gists_url": "https://api.github.com/users/dariomt/gists{/gist_id}", "starred_url": "https://api.github.com/users/dariomt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dariomt/subscriptions", "organizations_url": "https://api.github.com/users/dariomt/orgs", "repos_url": "https://api.github.com/users/dariomt/repos", "events_url": "https://api.github.com/users/dariomt/events{/privacy}", "received_events_url": "https://api.github.com/users/dariomt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 22, "created_at": "2015-10-08T13:31:07Z", "updated_at": "2016-11-13T22:38:10Z", "closed_at": "2015-12-27T14:32:48Z", "author_association": "CONTRIBUTOR", "body": "My use case is:\n- use find() to look for a key\n- if the key is not found return a default_value of type T (possibly moved in and out)\n- if the key is found return the object converted to type T (only if T is compatible)\n\ne.g.\n\n```\ntemplate <typename T>\nT at (const typename object_t::key_type & key, T default_value) const noexcept\n{\n    auto it = find(key);\n    if (it != end()) return *it;\n    return default_value;\n}\n```\n\nWhat do you think?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/132", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/132/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/132/events", "html_url": "https://github.com/nlohmann/json/issues/132", "id": 110425267, "node_id": "MDU6SXNzdWUxMTA0MjUyNjc=", "number": 132, "title": "Splitting source", "user": {"login": "dariomt", "id": 12997431, "node_id": "MDQ6VXNlcjEyOTk3NDMx", "avatar_url": "https://avatars3.githubusercontent.com/u/12997431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dariomt", "html_url": "https://github.com/dariomt", "followers_url": "https://api.github.com/users/dariomt/followers", "following_url": "https://api.github.com/users/dariomt/following{/other_user}", "gists_url": "https://api.github.com/users/dariomt/gists{/gist_id}", "starred_url": "https://api.github.com/users/dariomt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dariomt/subscriptions", "organizations_url": "https://api.github.com/users/dariomt/orgs", "repos_url": "https://api.github.com/users/dariomt/repos", "events_url": "https://api.github.com/users/dariomt/events{/privacy}", "received_events_url": "https://api.github.com/users/dariomt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-10-08T11:03:14Z", "updated_at": "2015-12-09T15:32:39Z", "closed_at": "2015-12-09T15:32:39Z", "author_association": "CONTRIBUTOR", "body": "Hi,\nI appreciate the ease of deploying a single header file.\nBut, I think it would be better to decouple the different pieces of functionality.\n\nI propose splitting the single json.hpp header file into three parts:\n- json_fwd.hpp with only the forward declarations of template basic_json and the alias json\n- json.hpp with the definition of template basic_json but without the io (and without the dependency to all the very heavy standard io related headers)\n- json_io.hpp with the definition of the io funcitonality, i.e. parsing, streaming, etc...\n\nDo you think this is feasible?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/128", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/128/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/128/events", "html_url": "https://github.com/nlohmann/json/issues/128", "id": 109462593, "node_id": "MDU6SXNzdWUxMDk0NjI1OTM=", "number": 128, "title": "Question about get_ref()", "user": {"login": "dariomt", "id": 12997431, "node_id": "MDQ6VXNlcjEyOTk3NDMx", "avatar_url": "https://avatars3.githubusercontent.com/u/12997431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dariomt", "html_url": "https://github.com/dariomt", "followers_url": "https://api.github.com/users/dariomt/followers", "following_url": "https://api.github.com/users/dariomt/following{/other_user}", "gists_url": "https://api.github.com/users/dariomt/gists{/gist_id}", "starred_url": "https://api.github.com/users/dariomt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dariomt/subscriptions", "organizations_url": "https://api.github.com/users/dariomt/orgs", "repos_url": "https://api.github.com/users/dariomt/repos", "events_url": "https://api.github.com/users/dariomt/events{/privacy}", "received_events_url": "https://api.github.com/users/dariomt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/2", "html_url": "https://github.com/nlohmann/json/milestone/2", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/2/labels", "id": 1479859, "node_id": "MDk6TWlsZXN0b25lMTQ3OTg1OQ==", "number": 2, "title": "Release 1.1.0", "description": "", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 19, "state": "closed", "created_at": "2016-01-01T17:36:30Z", "updated_at": "2016-01-26T05:26:42Z", "due_on": "2016-01-23T08:00:00Z", "closed_at": "2016-01-26T05:26:42Z"}, "comments": 11, "created_at": "2015-10-02T09:50:35Z", "updated_at": "2016-01-20T20:16:24Z", "closed_at": "2016-01-20T20:16:24Z", "author_association": "CONTRIBUTOR", "body": "I see there were some discussions about adding get_ref(), but I can't see it in the code.\nWhat happened to get_ref()?\n\nI believe that having get_ref() is convenient and safe. It could merely call get_ptr() and throw if it returns nullptr. It makes it easier to traverse a json object when I'm pretty sure about the types it holds. Otherwise I have to constantly check against nullptr myself.\n\nI'd like the following code to work seamlessly:\n\n``` cpp\nvoid func(const std::string&);\njson value = \"foobar\";\nfunc( value.get_ref<const std::string>() );\n```\n\nCurrently I'd have to write the following:\n\n``` cpp\nvoid func(const std::string&);\njson value = \"foobar\";\nauto p = value.get_ptr<const std::string*>();\nif (!p) throw some_exception;\nfunc( *p );\n```\n\nWould you accept a PR for this functionality?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/127", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/127/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/127/events", "html_url": "https://github.com/nlohmann/json/issues/127", "id": 109460870, "node_id": "MDU6SXNzdWUxMDk0NjA4NzA=", "number": 127, "title": "Question about get_ptr()", "user": {"login": "dariomt", "id": 12997431, "node_id": "MDQ6VXNlcjEyOTk3NDMx", "avatar_url": "https://avatars3.githubusercontent.com/u/12997431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dariomt", "html_url": "https://github.com/dariomt", "followers_url": "https://api.github.com/users/dariomt/followers", "following_url": "https://api.github.com/users/dariomt/following{/other_user}", "gists_url": "https://api.github.com/users/dariomt/gists{/gist_id}", "starred_url": "https://api.github.com/users/dariomt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dariomt/subscriptions", "organizations_url": "https://api.github.com/users/dariomt/orgs", "repos_url": "https://api.github.com/users/dariomt/repos", "events_url": "https://api.github.com/users/dariomt/events{/privacy}", "received_events_url": "https://api.github.com/users/dariomt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-10-02T09:37:37Z", "updated_at": "2015-12-16T10:43:34Z", "closed_at": "2015-12-16T10:43:34Z", "author_association": "CONTRIBUTOR", "body": "I see the following in the documentation of get_ptr()\n\n\"@warning Writing data to the pointee of the result yields an undefined state.\"\n\nIIUC this means that the following code yields an undefined state:\n\n``` cpp\njson value = 17;\nauto p = value.get_ptr<json::number_integer_t*>();\n*p = 42;\n```\n\ni.e. I cannot modify the integer value inside the json\n\nWhy is this so?\n"}]