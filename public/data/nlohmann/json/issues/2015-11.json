[{"url": "https://api.github.com/repos/nlohmann/json/issues/152", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/152/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/152/events", "html_url": "https://github.com/nlohmann/json/issues/152", "id": 119494021, "node_id": "MDU6SXNzdWUxMTk0OTQwMjE=", "number": 152, "title": "json::parse(string) does not check utf8 bom", "user": {"login": "rockeet", "id": 1574991, "node_id": "MDQ6VXNlcjE1NzQ5OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1574991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rockeet", "html_url": "https://github.com/rockeet", "followers_url": "https://api.github.com/users/rockeet/followers", "following_url": "https://api.github.com/users/rockeet/following{/other_user}", "gists_url": "https://api.github.com/users/rockeet/gists{/gist_id}", "starred_url": "https://api.github.com/users/rockeet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rockeet/subscriptions", "organizations_url": "https://api.github.com/users/rockeet/orgs", "repos_url": "https://api.github.com/users/rockeet/repos", "events_url": "https://api.github.com/users/rockeet/events{/privacy}", "received_events_url": "https://api.github.com/users/rockeet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-11-30T13:43:12Z", "updated_at": "2016-11-13T22:37:59Z", "closed_at": "2015-12-07T21:28:08Z", "author_association": "NONE", "body": "Exception thrown when passing an utf8 string with starting bom to json::parse, it should skip the bom mark and treat the string as utf8\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/151", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/151/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/151/events", "html_url": "https://github.com/nlohmann/json/issues/151", "id": 118271440, "node_id": "MDU6SXNzdWUxMTgyNzE0NDA=", "number": 151, "title": "unsigned 64bit values output as signed", "user": {"login": "mbunkus", "id": 414282, "node_id": "MDQ6VXNlcjQxNDI4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/414282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbunkus", "html_url": "https://github.com/mbunkus", "followers_url": "https://api.github.com/users/mbunkus/followers", "following_url": "https://api.github.com/users/mbunkus/following{/other_user}", "gists_url": "https://api.github.com/users/mbunkus/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbunkus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbunkus/subscriptions", "organizations_url": "https://api.github.com/users/mbunkus/orgs", "repos_url": "https://api.github.com/users/mbunkus/repos", "events_url": "https://api.github.com/users/mbunkus/events{/privacy}", "received_events_url": "https://api.github.com/users/mbunkus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-11-22T16:04:28Z", "updated_at": "2016-11-13T22:38:10Z", "closed_at": "2015-12-16T10:39:25Z", "author_association": "NONE", "body": "I'm trying to add JSON output to [mkvmerge's](/mbunkus/mkvtoolnix/) identification output. mkvmerge is a tool dealing with Matroska media files, and those in turn use a lot of unsigned 64bit values \u2013 e.g. each track in that file has a unique ID that's basically a random 64bit number.\n\nOutputting those results in signed 64bit values being output instead, obviously.\n\nTrivial test case:\n\n``` c++\nstd::cout << nlohmann::json{std::numeric_limits<uint64_t>::max()};\n```\n\nOutput:\n\n```\n[-1]\n```\n\nWhen parsing JSON with such huge values: it would be nice to be able to query the JSON object if the encoded value was in fact negative, but for my use case encoding is the important part, not parsing.\n\nThis is obviously similar to #30, but probably harder to fix. Maybe you'll have to store integers both signed and unsigned and output them depending on which type has been used\u2026\n\nBTW: I really love using your library. Thanks for providing it.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/150", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/150/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/150/events", "html_url": "https://github.com/nlohmann/json/issues/150", "id": 118187528, "node_id": "MDU6SXNzdWUxMTgxODc1Mjg=", "number": 150, "title": "Wish feature: json5", "user": {"login": "rockeet", "id": 1574991, "node_id": "MDQ6VXNlcjE1NzQ5OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1574991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rockeet", "html_url": "https://github.com/rockeet", "followers_url": "https://api.github.com/users/rockeet/followers", "following_url": "https://api.github.com/users/rockeet/following{/other_user}", "gists_url": "https://api.github.com/users/rockeet/gists{/gist_id}", "starred_url": "https://api.github.com/users/rockeet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rockeet/subscriptions", "organizations_url": "https://api.github.com/users/rockeet/orgs", "repos_url": "https://api.github.com/users/rockeet/repos", "events_url": "https://api.github.com/users/rockeet/events{/privacy}", "received_events_url": "https://api.github.com/users/rockeet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-11-21T10:20:49Z", "updated_at": "2016-11-13T22:38:10Z", "closed_at": "2015-12-06T16:13:04Z", "author_association": "NONE", "body": "As described in: http://json5.org/\nAnd there is a js implementation for json5: https://github.com/aseemk/json5\nBut I didn't found a good json5 in C++\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/149", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/149/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/149/events", "html_url": "https://github.com/nlohmann/json/issues/149", "id": 117739253, "node_id": "MDU6SXNzdWUxMTc3MzkyNTM=", "number": 149, "title": "Unable to compile on MSVC 2015 with SDL checking enabled: This function or variable may be unsafe.", "user": {"login": "dmartyn-0", "id": 9222588, "node_id": "MDQ6VXNlcjkyMjI1ODg=", "avatar_url": "https://avatars3.githubusercontent.com/u/9222588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmartyn-0", "html_url": "https://github.com/dmartyn-0", "followers_url": "https://api.github.com/users/dmartyn-0/followers", "following_url": "https://api.github.com/users/dmartyn-0/following{/other_user}", "gists_url": "https://api.github.com/users/dmartyn-0/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmartyn-0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmartyn-0/subscriptions", "organizations_url": "https://api.github.com/users/dmartyn-0/orgs", "repos_url": "https://api.github.com/users/dmartyn-0/repos", "events_url": "https://api.github.com/users/dmartyn-0/events{/privacy}", "received_events_url": "https://api.github.com/users/dmartyn-0/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-11-19T04:34:41Z", "updated_at": "2015-12-07T19:35:44Z", "closed_at": "2015-12-07T19:35:44Z", "author_association": "NONE", "body": "When this library is compiled under MSVC 2015 with SDL checking on, compilation fails with this error:\n\nC4996 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.\n\nThe error occurs here at line 4694:\n![image](https://cloud.githubusercontent.com/assets/9222588/11262352/2955c4f4-8ee3-11e5-8bb3-eb4314fbd26e.png)\n\nedit: This occurs with the latest release available from the releases list.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/148", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/148/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/148/events", "html_url": "https://github.com/nlohmann/json/issues/148", "id": 117301052, "node_id": "MDU6SXNzdWUxMTczMDEwNTI=", "number": 148, "title": "\"Json Object\" type does not keep object order", "user": {"login": "rockeet", "id": 1574991, "node_id": "MDQ6VXNlcjE1NzQ5OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1574991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rockeet", "html_url": "https://github.com/rockeet", "followers_url": "https://api.github.com/users/rockeet/followers", "following_url": "https://api.github.com/users/rockeet/following{/other_user}", "gists_url": "https://api.github.com/users/rockeet/gists{/gist_id}", "starred_url": "https://api.github.com/users/rockeet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rockeet/subscriptions", "organizations_url": "https://api.github.com/users/rockeet/orgs", "repos_url": "https://api.github.com/users/rockeet/repos", "events_url": "https://api.github.com/users/rockeet/events{/privacy}", "received_events_url": "https://api.github.com/users/rockeet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-11-17T07:36:36Z", "updated_at": "2017-01-19T13:06:49Z", "closed_at": "2015-11-17T20:34:06Z", "author_association": "NONE", "body": "for json: { \"b\" : \"B\", \"a\" : \"A\" }\nThe iteration order is by lexical order of keys, but it should be the original order in the json object.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/147", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/147/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/147/events", "html_url": "https://github.com/nlohmann/json/issues/147", "id": 116914317, "node_id": "MDU6SXNzdWUxMTY5MTQzMTc=", "number": 147, "title": "dump()  convert strings encoded by utf-8 to shift-jis on windows 10. ", "user": {"login": "silverist", "id": 10098847, "node_id": "MDQ6VXNlcjEwMDk4ODQ3", "avatar_url": "https://avatars0.githubusercontent.com/u/10098847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/silverist", "html_url": "https://github.com/silverist", "followers_url": "https://api.github.com/users/silverist/followers", "following_url": "https://api.github.com/users/silverist/following{/other_user}", "gists_url": "https://api.github.com/users/silverist/gists{/gist_id}", "starred_url": "https://api.github.com/users/silverist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/silverist/subscriptions", "organizations_url": "https://api.github.com/users/silverist/orgs", "repos_url": "https://api.github.com/users/silverist/repos", "events_url": "https://api.github.com/users/silverist/events{/privacy}", "received_events_url": "https://api.github.com/users/silverist/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-11-14T09:38:36Z", "updated_at": "2015-11-17T22:50:50Z", "closed_at": "2015-11-17T22:50:50Z", "author_association": "NONE", "body": "when I dump() a json object as follows, the dumped string is converted from \"utf-8\" to \"shift-jis\".\nHow can I do to keep up its encode \"utf-8\"?\n\n``` C++\n{\n   \"data\":\"[[0,1,2,3,4],[0,1,2,3,4]]\",\n   \"status\":1\n}\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/145", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/145/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/145/events", "html_url": "https://github.com/nlohmann/json/issues/145", "id": 116254210, "node_id": "MDU6SXNzdWUxMTYyNTQyMTA=", "number": 145, "title": "Unable to get field names in a json object", "user": {"login": "renkun-ken", "id": 4662568, "node_id": "MDQ6VXNlcjQ2NjI1Njg=", "avatar_url": "https://avatars2.githubusercontent.com/u/4662568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/renkun-ken", "html_url": "https://github.com/renkun-ken", "followers_url": "https://api.github.com/users/renkun-ken/followers", "following_url": "https://api.github.com/users/renkun-ken/following{/other_user}", "gists_url": "https://api.github.com/users/renkun-ken/gists{/gist_id}", "starred_url": "https://api.github.com/users/renkun-ken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/renkun-ken/subscriptions", "organizations_url": "https://api.github.com/users/renkun-ken/orgs", "repos_url": "https://api.github.com/users/renkun-ken/repos", "events_url": "https://api.github.com/users/renkun-ken/events{/privacy}", "received_events_url": "https://api.github.com/users/renkun-ken/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-11T03:04:55Z", "updated_at": "2015-11-11T03:08:28Z", "closed_at": "2015-11-11T03:08:28Z", "author_association": "NONE", "body": "For a json document like the example \n\n``` json\n{\n  \"pi\": 3.141,\n  \"happy\": true,\n  \"name\": \"Niels\",\n  \"nothing\": null,\n  \"answer\": {\n    \"everything\": 42\n  },\n  \"list\": [1, 0, 2],\n  \"object\": {\n    \"currency\": \"USD\",\n    \"value\": 42.99\n  }\n}\n```\n\nI don't find a method to get the name list of the fields, something like\n\n``` cpp\njson j;\nifstream file(\"example.json\");\nfile >> j;\nvector<string> names = j.fields();\n```\n\nso that I can get `\"pi\", \"happy\", \"name\", \"nothing\", \"answer\", \"list\", \"object\"`.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/144", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/144/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/144/events", "html_url": "https://github.com/nlohmann/json/issues/144", "id": 114524987, "node_id": "MDU6SXNzdWUxMTQ1MjQ5ODc=", "number": 144, "title": "Implicit assignment to std::string fails", "user": {"login": "Cleroth", "id": 4611301, "node_id": "MDQ6VXNlcjQ2MTEzMDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/4611301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cleroth", "html_url": "https://github.com/Cleroth", "followers_url": "https://api.github.com/users/Cleroth/followers", "following_url": "https://api.github.com/users/Cleroth/following{/other_user}", "gists_url": "https://api.github.com/users/Cleroth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cleroth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cleroth/subscriptions", "organizations_url": "https://api.github.com/users/Cleroth/orgs", "repos_url": "https://api.github.com/users/Cleroth/repos", "events_url": "https://api.github.com/users/Cleroth/events{/privacy}", "received_events_url": "https://api.github.com/users/Cleroth/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/2", "html_url": "https://github.com/nlohmann/json/milestone/2", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/2/labels", "id": 1479859, "node_id": "MDk6TWlsZXN0b25lMTQ3OTg1OQ==", "number": 2, "title": "Release 1.1.0", "description": "", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 19, "state": "closed", "created_at": "2016-01-01T17:36:30Z", "updated_at": "2016-01-26T05:26:42Z", "due_on": "2016-01-23T08:00:00Z", "closed_at": "2016-01-26T05:26:42Z"}, "comments": 22, "created_at": "2015-11-02T04:58:52Z", "updated_at": "2016-12-16T09:38:28Z", "closed_at": "2016-01-26T05:26:30Z", "author_association": "NONE", "body": "Put simply, when constructing a string, you can pass a basic_json:\n\n```\nstd::string s = o[\"name\"];\n```\n\nHowever, this does not work:\n\n```\nstd::string s;\ns = o[\"name\"];\ns = o[\"name\"].get<std::string>(); // this works\n```\n\nThe following compiler errors pop up:\n\n1>g:\\files\\smoldy_adventure\\src\\client\\units\\unitmgr.cpp(53): error C2593: 'operator =' is ambiguous\n1>  g:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\xstring(1032): note: could be 'std::basic_string<char,std::char_traits<char>,std::allocator<char>> &std::basic_string<char,std::char_traits<char>,std::allocator<char>>::operator =(_Elem)'\n1>          with\n1>          [\n1>              _Elem=char\n1>          ] (compiling source file units\\unitmgr.cpp)\n1>  g:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\xstring(1027): note: or       'std::basic_string<char,std::char_traits<char>,std::allocator<char>> &std::basic_string<char,std::char_traits<char>,std::allocator<char>>::operator =(const _Elem *)'\n1>          with\n1>          [\n1>              _Elem=char\n1>          ] (compiling source file units\\unitmgr.cpp)\n1>  g:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\xstring(1011): note: or       'std::basic_string<char,std::char_traits<char>,std::allocator<char>> &std::basic_string<char,std::char_traits<char>,std::allocator<char>>::operator =(const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &)' (compiling source file units\\unitmgr.cpp)\n1>  g:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\xstring(972): note: or       'std::basic_string<char,std::char_traits<char>,std::allocator<char>> &std::basic_string<char,std::char_traits<char>,std::allocator<char>>::operator =(std::initializer_list<_Elem>)'\n1>          with\n1>          [\n1>              _Elem=char\n1>          ] (compiling source file units\\unitmgr.cpp)\n1>  g:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\xstring(914): note: or       'std::basic_string<char,std::char_traits<char>,std::allocator<char>> &std::basic_string<char,std::char_traits<char>,std::allocator<char>>::operator =(std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&) noexcept' (compiling source file units\\unitmgr.cpp)\n1>  g:\\files\\smoldy_adventure\\src\\client\\units\\unitmgr.cpp(53): note: while trying to match the argument list '(std::string, stlx::basic_jsonstd::map,std::vector,std::string,bool,int64_t,double,std::allocator)'\n\n**Compiler**: Visual Studio 2015\n"}]