[{"url": "https://api.github.com/repos/nlohmann/json/issues/202", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/202/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/202/events", "html_url": "https://github.com/nlohmann/json/issues/202", "id": 129940920, "node_id": "MDU6SXNzdWUxMjk5NDA5MjA=", "number": 202, "title": "Performance in miloyip/nativejson-benchmark", "user": {"login": "twelsby", "id": 16697318, "node_id": "MDQ6VXNlcjE2Njk3MzE4", "avatar_url": "https://avatars0.githubusercontent.com/u/16697318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twelsby", "html_url": "https://github.com/twelsby", "followers_url": "https://api.github.com/users/twelsby/followers", "following_url": "https://api.github.com/users/twelsby/following{/other_user}", "gists_url": "https://api.github.com/users/twelsby/gists{/gist_id}", "starred_url": "https://api.github.com/users/twelsby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twelsby/subscriptions", "organizations_url": "https://api.github.com/users/twelsby/orgs", "repos_url": "https://api.github.com/users/twelsby/repos", "events_url": "https://api.github.com/users/twelsby/events{/privacy}", "received_events_url": "https://api.github.com/users/twelsby/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-01-30T05:04:21Z", "updated_at": "2017-01-02T16:36:10Z", "closed_at": "2017-01-02T16:36:10Z", "author_association": "CONTRIBUTOR", "body": "Here is the results of testing 1.1.0, 2.0.0 and my proposed changes to 2.0.0 under miloyip/nativejson-benchmark [Results.zip](https://github.com/nlohmann/json/files/110681/Results.zip).\n\nHere is my (possibly naive) interpretation:\n\n**Parse**\nOur lexer looks to be pretty good and parsing of strings is about as good as it could be.  Some further improvements could be made in number parsing by incorporating custom floating point parsing into the proposed `get_integer()` in lieu of `strtof()`/`strtod()`/`strtold()` but this would greatly increase code complexity and the improvements would likely be marginal at best.\n\nLooking at the other libraries results (especially the ones with fast parsing) it looks like allocations are what is killing us.  The other thing that might be killing us is the use of map.  This is not ideal for parsing a large unordered file because the tree will be continually re-balanced.  The benefit of using a map is lookup, but that isn't really tested in this benchmark as the timed access is all sequential.  \n\nNote that I'm not saying we should be moving away from map, because our library is really designed around using the json object to store data, not merely to parse/dump json files.  We probably just have to accept that our parse is always going to be slower.\n\n**Stringify**\nThe proposed change to `snprintf()` for floating point stringifying highlights just how bad `stringstream`s are for this.  There may be further improvements by reducing our reliance on `stringstream`s elsewhere but this would come at the expense of c++ style.  I did try using `snprintf()` for integers, and even a very efficient custom function I've used before on microcontrollers, but didn't achieve any significant improvement so perhaps the issue is only manifest for floating point numbers.\n\nThe other thing here is that use of map is probably not as fast for sequential dumping as other container types.  I think this is just a price we have to pay.\n\n**Time**\nThis test simply iterates through the document while collecting statistics about number of strings, numbers, objects, arrays etc.  Any difference between library versions is an anomaly as there are no significant differences (only the bitfield overhead for the proposed changes).  Because this test is sequential we are at a disadvantage using maps.\n\nThe bottom line seems to be that a choice must be made - do we optimize for rapid parsing/dumping/sequential access at the expense of lookup, or do we optimize for lookup and accept that parsing/dumping/sequential access will always be a little slower (but not that much).\n\n@nlohmann, if you are able to run similar tests under Linux/OSX that would help to make sure this isn't just a VS2015 issue.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/199", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/199/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/199/events", "html_url": "https://github.com/nlohmann/json/issues/199", "id": 129931473, "node_id": "MDU6SXNzdWUxMjk5MzE0NzM=", "number": 199, "title": "Small bugs in json.hpp (get_number) and unit.cpp (non-standard integer type test)", "user": {"login": "twelsby", "id": 16697318, "node_id": "MDQ6VXNlcjE2Njk3MzE4", "avatar_url": "https://avatars0.githubusercontent.com/u/16697318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twelsby", "html_url": "https://github.com/twelsby", "followers_url": "https://api.github.com/users/twelsby/followers", "following_url": "https://api.github.com/users/twelsby/following{/other_user}", "gists_url": "https://api.github.com/users/twelsby/gists{/gist_id}", "starred_url": "https://api.github.com/users/twelsby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twelsby/subscriptions", "organizations_url": "https://api.github.com/users/twelsby/orgs", "repos_url": "https://api.github.com/users/twelsby/repos", "events_url": "https://api.github.com/users/twelsby/events{/privacy}", "received_events_url": "https://api.github.com/users/twelsby/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/3", "html_url": "https://github.com/nlohmann/json/milestone/3", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/3/labels", "id": 1510937, "node_id": "MDk6TWlsZXN0b25lMTUxMDkzNw==", "number": 3, "title": "Release 2.0.0", "description": "This release adds several features such as JSON Pointers, JSON Patch, or support for 64 bit unsigned integers. Furthermore, several (subtle) bugs have been fixed.\r\n\r\nAs `noexcept` and `constexpr` specifier have been added to several functions, the public API has effectively been changed in a (potential) non-backwards compatible manner. As we adhere to [Semantic Versioning](http://semver.org), this calls for a new major version, so say hello to 2\ufe0f\u20e3.0\ufe0f\u20e3.0\ufe0f\u20e3.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 34, "state": "closed", "created_at": "2016-01-17T12:14:39Z", "updated_at": "2016-06-23T22:53:19Z", "due_on": "2016-06-23T07:00:00Z", "closed_at": "2016-06-23T22:53:19Z"}, "comments": 1, "created_at": "2016-01-30T02:41:16Z", "updated_at": "2016-01-30T12:36:44Z", "closed_at": "2016-01-30T12:36:44Z", "author_association": "CONTRIBUTOR", "body": "There is a small bug in the following area of json.cpp:\n\n``` c++\nif (attempt_cast(std::strtoll(reinterpret_cast<typename string_t::const_pointer>(m_start), \n                             &endptr, 10), result.m_value.number_unsigned))\n```\n\nHere `result.m_value.number_unsigned` should be `result.m_value.number_integer`.\n\nThen in unit.hpp there is another bug:\n\n``` c++\n// integer object creation - expected to wrap and still be stored as an integer\nj = -2147483649LL; // -2^31-1\nCHECK(static_cast<int>(j.type()) == static_cast<int>(custom_json::value_t::number_integer));\nCHECK(j.get<int32_t>() == 2147483647.0);  // Wrap\n\n// integer parsing - expected to overflow and be stored as a float\nj = custom_json::parse(\"-2147483648\"); // -2^31\nCHECK(static_cast<int>(j.type()) == static_cast<int>(custom_json::value_t::number_float));\nCHECK(j.get<float>() == -2147483648.0);\n```\n\nThe second test for parsing uses an incorrect value.  Instead of `-2147483648` it should read `-2147483649`.\n\nThe previous value `-2147483648` should not have wrapped as was intended however the bug in json.hpp had the effect of causing the cast to fail anyway.  The second error effectively hid the first error so the unit test passed.\n\nOne other small error is that all of the floating point comparisons in this section should have an 'f' after the literals otherwise they are double literals - so the above comparison would read `CHECK(j.get<float>() == -2147483650.0f`.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/195", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/195/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/195/events", "html_url": "https://github.com/nlohmann/json/issues/195", "id": 128533614, "node_id": "MDU6SXNzdWUxMjg1MzM2MTQ=", "number": 195, "title": "GCC/clang floating point parsing bug in strtod()", "user": {"login": "twelsby", "id": 16697318, "node_id": "MDQ6VXNlcjE2Njk3MzE4", "avatar_url": "https://avatars0.githubusercontent.com/u/16697318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twelsby", "html_url": "https://github.com/twelsby", "followers_url": "https://api.github.com/users/twelsby/followers", "following_url": "https://api.github.com/users/twelsby/following{/other_user}", "gists_url": "https://api.github.com/users/twelsby/gists{/gist_id}", "starred_url": "https://api.github.com/users/twelsby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twelsby/subscriptions", "organizations_url": "https://api.github.com/users/twelsby/orgs", "repos_url": "https://api.github.com/users/twelsby/repos", "events_url": "https://api.github.com/users/twelsby/events{/privacy}", "received_events_url": "https://api.github.com/users/twelsby/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/3", "html_url": "https://github.com/nlohmann/json/milestone/3", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/3/labels", "id": 1510937, "node_id": "MDk6TWlsZXN0b25lMTUxMDkzNw==", "number": 3, "title": "Release 2.0.0", "description": "This release adds several features such as JSON Pointers, JSON Patch, or support for 64 bit unsigned integers. Furthermore, several (subtle) bugs have been fixed.\r\n\r\nAs `noexcept` and `constexpr` specifier have been added to several functions, the public API has effectively been changed in a (potential) non-backwards compatible manner. As we adhere to [Semantic Versioning](http://semver.org), this calls for a new major version, so say hello to 2\ufe0f\u20e3.0\ufe0f\u20e3.0\ufe0f\u20e3.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 34, "state": "closed", "created_at": "2016-01-17T12:14:39Z", "updated_at": "2016-06-23T22:53:19Z", "due_on": "2016-06-23T07:00:00Z", "closed_at": "2016-06-23T22:53:19Z"}, "comments": 1, "created_at": "2016-01-25T13:08:57Z", "updated_at": "2016-01-26T18:13:42Z", "closed_at": "2016-01-26T18:13:42Z", "author_association": "CONTRIBUTOR", "body": "I have managed to identify the source of the failure to parse the following number:\n\n`1.00000000000000011102230246251565404236316680908203126`\n\nwhich should parse to:\n\n`1.00000000000000022`\n\nHowever under gcc/clang _on Travis only_ it instead parsed as exactly `1`.  Local gcc/clang builds and AppVeyor builds all ran correctly.\n\nThis was mentioned in issue #186 where I speculated that it was likely caused by a bug in `strtod()` in what must have been an older version on Travis.  To address that issue and get the rest of the tests to run on Travis, pull #191 (now merged) disabled this test for gcc/clang.\n\nResearch identified the following blog post: [How strtod() Works (and Sometimes Doesn\u2019t)](http://www.exploringbinary.com/how-strtod-works-and-sometimes-doesnt/), which indicates that it was caused by the double rounding error that was suspected all along to have caused it.  Although the bug was fixed back in 2013, it appears that the bug is still present in both gcc and clang on the version of Ubuntu on which the Travis builds run (precise).\n\nTravis also has a more recent version of Ubuntu (trusty), which is currently in beta.  I decided see if upgrading `.travis.yml` to build on trusty instead might address the bug and allow the test to also be done under gcc/clang - it works.  The trusty environment is beta but there do not appear to be any issues with the build and it is inevitable that we will need to migrate to trusty eventually so it might as well be now.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/194", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/194/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/194/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/194/events", "html_url": "https://github.com/nlohmann/json/issues/194", "id": 128405188, "node_id": "MDU6SXNzdWUxMjg0MDUxODg=", "number": 194, "title": "Small error in pull #185", "user": {"login": "twelsby", "id": 16697318, "node_id": "MDQ6VXNlcjE2Njk3MzE4", "avatar_url": "https://avatars0.githubusercontent.com/u/16697318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twelsby", "html_url": "https://github.com/twelsby", "followers_url": "https://api.github.com/users/twelsby/followers", "following_url": "https://api.github.com/users/twelsby/following{/other_user}", "gists_url": "https://api.github.com/users/twelsby/gists{/gist_id}", "starred_url": "https://api.github.com/users/twelsby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twelsby/subscriptions", "organizations_url": "https://api.github.com/users/twelsby/orgs", "repos_url": "https://api.github.com/users/twelsby/repos", "events_url": "https://api.github.com/users/twelsby/events{/privacy}", "received_events_url": "https://api.github.com/users/twelsby/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/2", "html_url": "https://github.com/nlohmann/json/milestone/2", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/2/labels", "id": 1479859, "node_id": "MDk6TWlsZXN0b25lMTQ3OTg1OQ==", "number": 2, "title": "Release 1.1.0", "description": "", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 19, "state": "closed", "created_at": "2016-01-01T17:36:30Z", "updated_at": "2016-01-26T05:26:42Z", "due_on": "2016-01-23T08:00:00Z", "closed_at": "2016-01-26T05:26:42Z"}, "comments": 1, "created_at": "2016-01-24T15:37:39Z", "updated_at": "2016-01-24T15:42:22Z", "closed_at": "2016-01-24T15:42:22Z", "author_association": "CONTRIBUTOR", "body": "I was just merging the recent commits and encountered a conflict due to a typo in pull #185 (my bad).\n\nAt line 4863 is the following:\n\n``` c++\nelse if (lhs_type == value_t::number_integer and rhs_type == value_t::number_float)\n{\n    return static_cast<number_float_t>(lhs.m_value.number_integer == rhs.m_value.number_float);\n}\nelse if (lhs_type == value_t::number_float and rhs_type == value_t::number_integer)\n{\n    return lhs.m_value.number_float == static_cast<number_float_t>(rhs.m_value.number_integer);\n}\n```\n\nThe top return value is incorrect as the parenthesis should surround only `lhs.m_value.number_integer`\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/192", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/192/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/192/events", "html_url": "https://github.com/nlohmann/json/issues/192", "id": 128392347, "node_id": "MDU6SXNzdWUxMjgzOTIzNDc=", "number": 192, "title": "What is within scope?", "user": {"login": "whackashoe", "id": 855581, "node_id": "MDQ6VXNlcjg1NTU4MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/855581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whackashoe", "html_url": "https://github.com/whackashoe", "followers_url": "https://api.github.com/users/whackashoe/followers", "following_url": "https://api.github.com/users/whackashoe/following{/other_user}", "gists_url": "https://api.github.com/users/whackashoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/whackashoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whackashoe/subscriptions", "organizations_url": "https://api.github.com/users/whackashoe/orgs", "repos_url": "https://api.github.com/users/whackashoe/repos", "events_url": "https://api.github.com/users/whackashoe/events{/privacy}", "received_events_url": "https://api.github.com/users/whackashoe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-24T12:11:33Z", "updated_at": "2016-11-13T22:37:59Z", "closed_at": "2016-02-15T20:26:54Z", "author_association": "CONTRIBUTOR", "body": "General question with a few examples:\n- json schema \n- alternative encodings such as bson or json5 (ability to swap encoder/decoder)\n- using multi-precision numbers\n\nBut on a grander level - what is the scope of nlohmann/json ? Is it to only support base json? Is it to support base json but make it easy to use weird crap? Or hard to use the above (at the benefit of keeping code easier to work with) without maintaining fork? If answer for these is fork may I suggest making a json organization so that forks could be all in one place- could be a potentially nicer namespace than the seemingly random nlohmann namespace :dancers: \n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/187", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/187/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/187/events", "html_url": "https://github.com/nlohmann/json/issues/187", "id": 128223992, "node_id": "MDU6SXNzdWUxMjgyMjM5OTI=", "number": 187, "title": "Bugs in miloyip/nativejson-benchmark: roundtrips", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/3", "html_url": "https://github.com/nlohmann/json/milestone/3", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/3/labels", "id": 1510937, "node_id": "MDk6TWlsZXN0b25lMTUxMDkzNw==", "number": 3, "title": "Release 2.0.0", "description": "This release adds several features such as JSON Pointers, JSON Patch, or support for 64 bit unsigned integers. Furthermore, several (subtle) bugs have been fixed.\r\n\r\nAs `noexcept` and `constexpr` specifier have been added to several functions, the public API has effectively been changed in a (potential) non-backwards compatible manner. As we adhere to [Semantic Versioning](http://semver.org), this calls for a new major version, so say hello to 2\ufe0f\u20e3.0\ufe0f\u20e3.0\ufe0f\u20e3.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 34, "state": "closed", "created_at": "2016-01-17T12:14:39Z", "updated_at": "2016-06-23T22:53:19Z", "due_on": "2016-06-23T07:00:00Z", "closed_at": "2016-06-23T22:53:19Z"}, "comments": 17, "created_at": "2016-01-22T19:15:05Z", "updated_at": "2016-01-31T09:05:44Z", "closed_at": "2016-01-30T16:43:19Z", "author_association": "OWNER", "body": "I checked the library with the latest https://github.com/miloyip/nativejson-benchmark benchmark suite. There are several errors in the round trip tests:\n- Roundtrip,Nlohmann (C++11),roundtrip20,false\n- Roundtrip,Nlohmann (C++11),roundtrip21,false\n- Roundtrip,Nlohmann (C++11),roundtrip24,false\n- Roundtrip,Nlohmann (C++11),roundtrip25,false\n- Roundtrip,Nlohmann (C++11),roundtrip26,false\n- Roundtrip,Nlohmann (C++11),roundtrip27,false\n\nThese are the values:\n- `[0.0]`\n- `[-0.0]`\n- `[5e-324]`\n- `[2.225073858507201e-308]`\n- `[2.2250738585072014e-308]`\n- `[1.7976931348623157e308]`\n\nI will have a deeper look at this later. I just wanted to paste the results here before I forget.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/186", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/186/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/186/events", "html_url": "https://github.com/nlohmann/json/issues/186", "id": 128223712, "node_id": "MDU6SXNzdWUxMjgyMjM3MTI=", "number": 186, "title": "Bugs in miloyip/nativejson-benchmark: floating-point parsing", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/2", "html_url": "https://github.com/nlohmann/json/milestone/2", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/2/labels", "id": 1479859, "node_id": "MDk6TWlsZXN0b25lMTQ3OTg1OQ==", "number": 2, "title": "Release 1.1.0", "description": "", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 19, "state": "closed", "created_at": "2016-01-01T17:36:30Z", "updated_at": "2016-01-26T05:26:42Z", "due_on": "2016-01-23T08:00:00Z", "closed_at": "2016-01-26T05:26:42Z"}, "comments": 11, "created_at": "2016-01-22T19:13:19Z", "updated_at": "2016-01-24T16:57:07Z", "closed_at": "2016-01-24T16:57:07Z", "author_association": "OWNER", "body": "I checked the library with the latest https://github.com/miloyip/nativejson-benchmark benchmark suite. There are several errors parsing floating-point numbers:\n- Parse Double,Nlohmann (C++11),double02,false\n- Parse Double,Nlohmann (C++11),double37,false\n- Parse Double,Nlohmann (C++11),double40,false\n- Parse Double,Nlohmann (C++11),double44,false\n- Parse Double,Nlohmann (C++11),double48,false\n- Parse Double,Nlohmann (C++11),double53,false\n- Parse Double,Nlohmann (C++11),double58,false\n- Parse Double,Nlohmann (C++11),double63,false\n\nThe respective code is this:\n\n``` cpp\n// Parse Double\n{\n    using rapidjson::internal::Double;\n    int i = 1;\n    #define TEST_DOUBLE(json, expect)\\\n    {\\\n        bool result = false;\\\n        double actual = 0.0;\\\n        if (test.ParseDouble(json, &actual)) \\\n            result = Double(expect).Uint64Value() == Double(actual).Uint64Value();\\\n        printf(\"double%02d: %s\\n\", i, result ? \"true\" : \"false\");\\\n        if (!result)\\\n            printf(\"JSON: %s\\nExpect: %17g\\nActual: %17g\\n\\n\", json, expect, actual);\\\n        fprintf(fp, \"2. Parse Double,%s,double%02d,%s\\n\", test.GetName(), i, result ? \"true\" : \"false\");\\\n        i++;\\\n    }\n    TEST_DOUBLE(\"[0.0]\", 0.0);\n    TEST_DOUBLE(\"[-0.0]\", -0.0);\n    TEST_DOUBLE(\"[1.0]\", 1.0);\n    TEST_DOUBLE(\"[-1.0]\", -1.0);\n    TEST_DOUBLE(\"[1.5]\", 1.5);\n    TEST_DOUBLE(\"[-1.5]\", -1.5);\n    TEST_DOUBLE(\"[3.1416]\", 3.1416);\n    TEST_DOUBLE(\"[1E10]\", 1E10);\n    TEST_DOUBLE(\"[1e10]\", 1e10);\n    TEST_DOUBLE(\"[1E+10]\", 1E+10);\n    TEST_DOUBLE(\"[1E-10]\", 1E-10);\n    TEST_DOUBLE(\"[-1E10]\", -1E10);\n    TEST_DOUBLE(\"[-1e10]\", -1e10);\n    TEST_DOUBLE(\"[-1E+10]\", -1E+10);\n    TEST_DOUBLE(\"[-1E-10]\", -1E-10);\n    TEST_DOUBLE(\"[1.234E+10]\", 1.234E+10);\n    TEST_DOUBLE(\"[1.234E-10]\", 1.234E-10);\n    TEST_DOUBLE(\"[1.79769e+308]\", 1.79769e+308);\n    TEST_DOUBLE(\"[2.22507e-308]\", 2.22507e-308);\n    TEST_DOUBLE(\"[-1.79769e+308]\", -1.79769e+308);\n    TEST_DOUBLE(\"[-2.22507e-308]\", -2.22507e-308);\n    TEST_DOUBLE(\"[4.9406564584124654e-324]\", 4.9406564584124654e-324); // minimum denormal\n    TEST_DOUBLE(\"[2.2250738585072009e-308]\", 2.2250738585072009e-308); // Max subnormal double\n    TEST_DOUBLE(\"[2.2250738585072014e-308]\", 2.2250738585072014e-308); // Min normal positive double\n    TEST_DOUBLE(\"[1.7976931348623157e+308]\", 1.7976931348623157e+308); // Max double\n    TEST_DOUBLE(\"[1e-10000]\", 0.0);                                   // must underflow\n    TEST_DOUBLE(\"[18446744073709551616]\", 18446744073709551616.0);    // 2^64 (max of uint64_t + 1, force to use double)\n    TEST_DOUBLE(\"[-9223372036854775809]\", -9223372036854775809.0);    // -2^63 - 1(min of int64_t + 1, force to use double)\n    TEST_DOUBLE(\"[0.9868011474609375]\", 0.9868011474609375);          // https://github.com/miloyip/rapidjson/issues/120\n    TEST_DOUBLE(\"[123e34]\", 123e34);                                  // Fast Path Cases In Disguise\n    TEST_DOUBLE(\"[45913141877270640000.0]\", 45913141877270640000.0);\n    TEST_DOUBLE(\"[2.2250738585072011e-308]\", 2.2250738585072011e-308); // http://www.exploringbinary.com/php-hangs-on-numeric-value-2-2250738585072011e-308/\n    //TEST_DOUBLE(\"[1e-00011111111111]\", 0.0);\n    //TEST_DOUBLE(\"[-1e-00011111111111]\", -0.0);\n    TEST_DOUBLE(\"[1e-214748363]\", 0.0);\n    TEST_DOUBLE(\"[1e-214748364]\", 0.0);\n    //TEST_DOUBLE(\"[1e-21474836311]\", 0.0);\n    TEST_DOUBLE(\"[0.017976931348623157e+310]\", 1.7976931348623157e+308); // Max double in another form\n\n    // Since\n    // abs((2^-1022 - 2^-1074) - 2.2250738585072012e-308) = 3.109754131239141401123495768877590405345064751974375599... \u00a1\u00c1 10^-324\n    // abs((2^-1022) - 2.2250738585072012e-308) = 1.830902327173324040642192159804623318305533274168872044... \u00a1\u00c1 10 ^ -324\n    // So 2.2250738585072012e-308 should round to 2^-1022 = 2.2250738585072014e-308\n    TEST_DOUBLE(\"[2.2250738585072012e-308]\", 2.2250738585072014e-308); // http://www.exploringbinary.com/java-hangs-when-converting-2-2250738585072012e-308/\n\n    // More closer to normal/subnormal boundary\n    // boundary = 2^-1022 - 2^-1075 = 2.225073858507201136057409796709131975934819546351645648... \u00a1\u00c1 10^-308\n    TEST_DOUBLE(\"[2.22507385850720113605740979670913197593481954635164564e-308]\", 2.2250738585072009e-308);\n    TEST_DOUBLE(\"[2.22507385850720113605740979670913197593481954635164565e-308]\", 2.2250738585072014e-308);\n\n    // 1.0 is in (1.0 - 2^-54, 1.0 + 2^-53)\n    // 1.0 - 2^-54 = 0.999999999999999944488848768742172978818416595458984375\n    TEST_DOUBLE(\"[0.999999999999999944488848768742172978818416595458984375]\", 1.0); // round to even\n    TEST_DOUBLE(\"[0.999999999999999944488848768742172978818416595458984374]\", 0.99999999999999989); // previous double\n    TEST_DOUBLE(\"[0.999999999999999944488848768742172978818416595458984376]\", 1.0); // next double\n    // 1.0 + 2^-53 = 1.00000000000000011102230246251565404236316680908203125\n    TEST_DOUBLE(\"[1.00000000000000011102230246251565404236316680908203125]\", 1.0); // round to even\n    TEST_DOUBLE(\"[1.00000000000000011102230246251565404236316680908203124]\", 1.0); // previous double\n    TEST_DOUBLE(\"[1.00000000000000011102230246251565404236316680908203126]\", 1.00000000000000022); // next double\n\n    // Numbers from https://github.com/floitsch/double-conversion/blob/master/test/cctest/test-strtod.cc\n\n    TEST_DOUBLE(\"[72057594037927928.0]\", 72057594037927928.0);\n    TEST_DOUBLE(\"[72057594037927936.0]\", 72057594037927936.0);\n    TEST_DOUBLE(\"[72057594037927932.0]\", 72057594037927936.0);\n    TEST_DOUBLE(\"[7205759403792793199999e-5]\", 72057594037927928.0);\n    TEST_DOUBLE(\"[7205759403792793200001e-5]\", 72057594037927936.0);\n\n    TEST_DOUBLE(\"[9223372036854774784.0]\", 9223372036854774784.0);\n    TEST_DOUBLE(\"[9223372036854775808.0]\", 9223372036854775808.0);\n    TEST_DOUBLE(\"[9223372036854775296.0]\", 9223372036854775808.0);\n    TEST_DOUBLE(\"[922337203685477529599999e-5]\", 9223372036854774784.0);\n    TEST_DOUBLE(\"[922337203685477529600001e-5]\", 9223372036854775808.0);\n\n    TEST_DOUBLE(\"[10141204801825834086073718800384]\", 10141204801825834086073718800384.0);\n    TEST_DOUBLE(\"[10141204801825835211973625643008]\", 10141204801825835211973625643008.0);\n    TEST_DOUBLE(\"[10141204801825834649023672221696]\", 10141204801825835211973625643008.0);\n    TEST_DOUBLE(\"[1014120480182583464902367222169599999e-5]\", 10141204801825834086073718800384.0);\n    TEST_DOUBLE(\"[1014120480182583464902367222169600001e-5]\", 10141204801825835211973625643008.0);\n\n    TEST_DOUBLE(\"[5708990770823838890407843763683279797179383808]\", 5708990770823838890407843763683279797179383808.0);\n    TEST_DOUBLE(\"[5708990770823839524233143877797980545530986496]\", 5708990770823839524233143877797980545530986496.0);\n    TEST_DOUBLE(\"[5708990770823839207320493820740630171355185152]\", 5708990770823839524233143877797980545530986496.0);\n    TEST_DOUBLE(\"[5708990770823839207320493820740630171355185151999e-3]\", 5708990770823838890407843763683279797179383808.0);\n    TEST_DOUBLE(\"[5708990770823839207320493820740630171355185152001e-3]\", 5708990770823839524233143877797980545530986496.0);\n\n    {\n        char n1e308[312];   // '1' followed by 308 '0'\n        n1e308[0] = '[';\n        n1e308[1] = '1';\n        for (int j = 2; j < 310; j++)\n            n1e308[j] = '0';\n        n1e308[310] = ']';\n        n1e308[311] = '\\0';\n        TEST_DOUBLE(n1e308, 1E308);\n    }\n\n    // Cover trimming\n    TEST_DOUBLE(\n        \"[2.22507385850720113605740979670913197593481954635164564802342610972482222202107694551652952390813508\"\n        \"7914149158913039621106870086438694594645527657207407820621743379988141063267329253552286881372149012\"\n        \"9811224514518898490572223072852551331557550159143974763979834118019993239625482890171070818506906306\"\n        \"6665599493827577257201576306269066333264756530000924588831643303777979186961204949739037782970490505\"\n        \"1080609940730262937128958950003583799967207254304360284078895771796150945516748243471030702609144621\"\n        \"5722898802581825451803257070188608721131280795122334262883686223215037756666225039825343359745688844\"\n        \"2390026549819838548794829220689472168983109969836584681402285424333066033985088644580400103493397042\"\n        \"7567186443383770486037861622771738545623065874679014086723327636718751234567890123456789012345678901\"\n        \"e-308]\", \n        2.2250738585072014e-308);\n}\n```\n\nI will have a deeper look at this later. I just wanted to paste the results here before I forget.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/185", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/185/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/185/events", "html_url": "https://github.com/nlohmann/json/issues/185", "id": 127948212, "node_id": "MDU6SXNzdWUxMjc5NDgyMTI=", "number": 185, "title": "Floating point equality", "user": {"login": "twelsby", "id": 16697318, "node_id": "MDQ6VXNlcjE2Njk3MzE4", "avatar_url": "https://avatars0.githubusercontent.com/u/16697318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twelsby", "html_url": "https://github.com/twelsby", "followers_url": "https://api.github.com/users/twelsby/followers", "following_url": "https://api.github.com/users/twelsby/following{/other_user}", "gists_url": "https://api.github.com/users/twelsby/gists{/gist_id}", "starred_url": "https://api.github.com/users/twelsby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twelsby/subscriptions", "organizations_url": "https://api.github.com/users/twelsby/orgs", "repos_url": "https://api.github.com/users/twelsby/repos", "events_url": "https://api.github.com/users/twelsby/events{/privacy}", "received_events_url": "https://api.github.com/users/twelsby/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/2", "html_url": "https://github.com/nlohmann/json/milestone/2", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/2/labels", "id": 1479859, "node_id": "MDk6TWlsZXN0b25lMTQ3OTg1OQ==", "number": 2, "title": "Release 1.1.0", "description": "", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 19, "state": "closed", "created_at": "2016-01-01T17:36:30Z", "updated_at": "2016-01-26T05:26:42Z", "due_on": "2016-01-23T08:00:00Z", "closed_at": "2016-01-26T05:26:42Z"}, "comments": 5, "created_at": "2016-01-21T15:22:10Z", "updated_at": "2016-11-24T21:49:44Z", "closed_at": "2016-01-24T11:55:41Z", "author_association": "CONTRIBUTOR", "body": "I made a brief comment about some gcc's paranoid float equality warnings in issue #167 but I feel I need to draw attention to this as a separate matter, specifically the function `static bool approx(const T a, const T b)`, which may not be doing what it is intended to do.  If this function is intended as nothing more than a way to suppress gcc's compiler warning then it is achieving its objective and you can close this issue.  But if it is intended to avoid perceived pitfalls of `if(float == float)` type statements then it is not doing that.\n\nTry running this code:\n\n``` c++\n#include <random>\n#include <iostream>\n#include <float>\n\nint main()\n{\n    std::mt19937 eng;  // a core engine class \n    float halfrange = 100 * std::numeric_limits<float>::epsilon();\n    std::uniform_real_distribution<float> dist(1-halfrange, 1+halfrange);\n    int agree=0, disagree=0;\n    for (int i = 0; i < 1000000000; ++i) {\n        float a = dist(eng);\n        float b = dist(eng);\n        bool method_1 = not (a > b or a < b);\n        bool method_2 = (a == b);\n        if (method_1 or method_2) {\n            if (method_1 == method_2) agree++;\n            else disagree++;\n            std::cout << \"\\rIteration: \" << i << \" Agree: \" << agree << \" Disagree: \" << disagree;\n        }\n    }\n}\n```\n\nBasically this generates pairs of floating point numbers in a very small range about 1 and then compares them for equality using both the `==` method and the one in `approx`.  The small range is to ensure collisions occur frequently.  If either method says they are equal then it increments one of two counters depending on whether they both agree or disagree with the equality.  Let it run as long as you like - you will never see disagreement.\n\nThe only way I know of to achieve what it is trying to achieve is to determine the difference between the two floats and see if it is less than some arbitrary acceptable error (usually based on epsilon).\n\nBut I don't actually think we should be doing that.\n\nThe concern about `if(float == float)` seems to be based around the idea that floating point numbers are somehow indeterminate or uncertain but this is not true - they are fundamentally as determinate as integers - provided the storage and rounding rules are consistent, and that is what IEEE is all about.  If I assign a particular floating point number to a variable then the resulting floating point representation should be the same as long as the storage and rounding rules are the same.  If I move it to another memory location it will stay the same and I can compare it with the original for equality and it will be equal (assuming the type doesn't change during this process).  The x87 instruction set even includes instructions for testing equality.\n\nThe alleged inaccuracies in floating point numbers arise from, in my opinion, a misunderstanding about how they are stored due to the assumption that terminating floating point decimal numbers will also be terminating floating point binary numbers.  The most oft-quoted example is 0.1<sub>10</sub>, which in binary is the non-terminating 0.0001100110011...<sub>2</sub>.\n\nIf you were under the mistaken belief that 0.1<sub>10</sub> can be represented in a terminating binary floating point number then you would expect that adding it to 0.8<sub>10</sub> would produce 0.9<sub>10</sub> and that if you assigned 0.9<sub>10</sub> to another variable and compared them that they would be equal.  This is not the case because all three numbers incur rounding.\n\nApply the same logic to non-terminating decimal numbers and the problem becomes obvious.  One non-terminating decimal number is 1/3, which can be approximated as 0.33 (with as many digits as you like).  Most people would be aware that 3 \\* 1/3 = 1 but would also not be surprised that 3 \\* 0.33 does not equal 1 (no matter how many digits you use), because of the rounding.  Do the same in binary and the result seems indeterminate.\n\nThis is what is \"unsafe\" about floating point equality and if this scenario would cause problems then that is when you would apply the method I mentioned.\n\nNow none of this should concern us because nowhere are we doing actual floating point calculations.  We just take floating point numbers store them, retrieve them and compare them etc.  Even the cast with approx comparison (for the loss of precision check) doesn't do anything that would trip up.\n\nReally it should be up the the user of the library to take into account rounding because they know how precisely their data is defined, and how close they want their numbers to be before they are considered equal, and the rounding settings they have applied.  Users should be able to expect that if `operator==` says two floating point numbers are equal that they are equal, not merely close.  It is their responsibility, if storing a literal or the result of a calculation they have done, to take into account the rounding that may have occurred, the same as if they were using regular variables.\n\nThe warnings that would result can be suppressed with a `#pragma`.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/181", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/181/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/181/events", "html_url": "https://github.com/nlohmann/json/issues/181", "id": 126580384, "node_id": "MDU6SXNzdWUxMjY1ODAzODQ=", "number": 181, "title": "Floating point exceptions", "user": {"login": "twelsby", "id": 16697318, "node_id": "MDQ6VXNlcjE2Njk3MzE4", "avatar_url": "https://avatars0.githubusercontent.com/u/16697318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twelsby", "html_url": "https://github.com/twelsby", "followers_url": "https://api.github.com/users/twelsby/followers", "following_url": "https://api.github.com/users/twelsby/following{/other_user}", "gists_url": "https://api.github.com/users/twelsby/gists{/gist_id}", "starred_url": "https://api.github.com/users/twelsby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twelsby/subscriptions", "organizations_url": "https://api.github.com/users/twelsby/orgs", "repos_url": "https://api.github.com/users/twelsby/repos", "events_url": "https://api.github.com/users/twelsby/events{/privacy}", "received_events_url": "https://api.github.com/users/twelsby/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/3", "html_url": "https://github.com/nlohmann/json/milestone/3", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/3/labels", "id": 1510937, "node_id": "MDk6TWlsZXN0b25lMTUxMDkzNw==", "number": 3, "title": "Release 2.0.0", "description": "This release adds several features such as JSON Pointers, JSON Patch, or support for 64 bit unsigned integers. Furthermore, several (subtle) bugs have been fixed.\r\n\r\nAs `noexcept` and `constexpr` specifier have been added to several functions, the public API has effectively been changed in a (potential) non-backwards compatible manner. As we adhere to [Semantic Versioning](http://semver.org), this calls for a new major version, so say hello to 2\ufe0f\u20e3.0\ufe0f\u20e3.0\ufe0f\u20e3.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 34, "state": "closed", "created_at": "2016-01-17T12:14:39Z", "updated_at": "2016-06-23T22:53:19Z", "due_on": "2016-06-23T07:00:00Z", "closed_at": "2016-06-23T22:53:19Z"}, "comments": 19, "created_at": "2016-01-14T05:27:48Z", "updated_at": "2016-01-26T18:22:18Z", "closed_at": "2016-01-26T18:22:18Z", "author_association": "CONTRIBUTOR", "body": "The code to perform loss of precision checking in parser::parse_internal() for lexer::token_type::value_number types can cause unhandled floating point exceptions with certain combinations of hardware, compilation options and input data.  Specifically the following line (currently found at line 6772) causes the exception:\n\n```\n// check if conversion loses precision\nconst auto int_val = static_cast<number_integer_t>(float_val);\n```\n\nThe exception can be generated on Intel x64 processors if the following three conditions occur:\n1. The floating point unit is configured with the 'floating-point invalid' exception unmasked (enabled).\n2. The compiler uses a CVTTSD2SI (Convert Scalar Double-Precision Floating-Point Value to Signed Doubleword Integer with Truncation) instruction.\n3. The value of float_val exceeds that which can be represented (after truncation) in a signed 64 bit integer.\n\nThese conditions were found to occur in a DLL that was built using Visual Studio 2015 (Update 1 version 14.0.24720.00) that uses the JSON library.  Interestingly it did NOT occur when the DLL was dynamically loaded in a test app that was built to test the DLL (built using the same compiler) but it did occur when the DLL was dynamically loaded by a commercial program (built separately and for which the source code and build options are not available).  Both the test app and the commercial program were presented with identical data.  This suggests that Visual Studio generates an executable that disables this floating point exception but that for whatever reason the commercial program does not.\n\nA workaround is to manually disable the floating-point invalid exception using, for example, _controlfp_s() (or feenableexcept() under Linux), prior to calling the parse function and then restoring its state afterwards.\n\nIt may be better for the library to handle this automatically.  This could be done by either:\n1. Disabling the exception by calling _controlfp_s()/feenableexcept(), probably on entry to, and exit from, parse().\n2. Preventing the exception by checking the magnitude of float_val before executing the above line to ensure it is capable of fitting in a signed 64 bit integer and if not, keep it as a float_val as is already done in the event of loss of precision.\n3. Implementing some other means of checking for loss of precision that does not result in a CVTTSD2SI  instruction.\n\nIf the decision were taken to leave it to the library user to implement their own controls then this should be clearly spelled out in the documentation as this behavior does not seem to be well known and is definitely not expected.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/180", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/180/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/180/events", "html_url": "https://github.com/nlohmann/json/issues/180", "id": 126476188, "node_id": "MDU6SXNzdWUxMjY0NzYxODg=", "number": 180, "title": "Unused variables in catch", "user": {"login": "gregmarr", "id": 8569738, "node_id": "MDQ6VXNlcjg1Njk3Mzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/8569738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gregmarr", "html_url": "https://github.com/gregmarr", "followers_url": "https://api.github.com/users/gregmarr/followers", "following_url": "https://api.github.com/users/gregmarr/following{/other_user}", "gists_url": "https://api.github.com/users/gregmarr/gists{/gist_id}", "starred_url": "https://api.github.com/users/gregmarr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gregmarr/subscriptions", "organizations_url": "https://api.github.com/users/gregmarr/orgs", "repos_url": "https://api.github.com/users/gregmarr/repos", "events_url": "https://api.github.com/users/gregmarr/events{/privacy}", "received_events_url": "https://api.github.com/users/gregmarr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/2", "html_url": "https://github.com/nlohmann/json/milestone/2", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/2/labels", "id": 1479859, "node_id": "MDk6TWlsZXN0b25lMTQ3OTg1OQ==", "number": 2, "title": "Release 1.1.0", "description": "", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 19, "state": "closed", "created_at": "2016-01-01T17:36:30Z", "updated_at": "2016-01-26T05:26:42Z", "due_on": "2016-01-23T08:00:00Z", "closed_at": "2016-01-26T05:26:42Z"}, "comments": 1, "created_at": "2016-01-13T17:56:06Z", "updated_at": "2016-01-13T19:59:44Z", "closed_at": "2016-01-13T18:19:40Z", "author_association": "CONTRIBUTOR", "body": "This causes warnings about unused parameters or variables on MSVC.\n\n[patch.diff.txt](https://github.com/nlohmann/json/files/89291/patch.diff.txt)\n\n```\n@@ -2645,7 +2645,7 @@ class basic_json\n                 assert(m_value.array != nullptr);\n                 return m_value.array->at(idx);\n             }\n-            catch (std::out_of_range& e)\n+            catch (std::out_of_range& )\n             {\n                 // create better exception explanation\n                 throw std::out_of_range(\"array index \" + std::to_string(idx) + \" is out of range\");\n@@ -2689,7 +2689,7 @@ class basic_json\n                 assert(m_value.array != nullptr);\n                 return m_value.array->at(idx);\n             }\n-            catch (std::out_of_range& e)\n+            catch (std::out_of_range& )\n             {\n                 // create better exception explanation\n                 throw std::out_of_range(\"array index \" + std::to_string(idx) + \" is out of range\");\n@@ -2737,7 +2737,7 @@ class basic_json\n                 assert(m_value.object != nullptr);\n                 return m_value.object->at(key);\n             }\n-            catch (std::out_of_range& e)\n+            catch (std::out_of_range& )\n             {\n                 // create better exception explanation\n                 throw std::out_of_range(\"key '\" + key + \"' not found\");\n@@ -2785,7 +2785,7 @@ class basic_json\n                 assert(m_value.object != nullptr);\n                 return m_value.object->at(key);\n             }\n-            catch (std::out_of_range& e)\n+            catch (std::out_of_range& )\n             {\n                 // create better exception explanation\n                 throw std::out_of_range(\"key '\" + key + \"' not found\");\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/179", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/179/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/179/events", "html_url": "https://github.com/nlohmann/json/issues/179", "id": 126467168, "node_id": "MDU6SXNzdWUxMjY0NjcxNjg=", "number": 179, "title": "Typo in documentation", "user": {"login": "gregmarr", "id": 8569738, "node_id": "MDQ6VXNlcjg1Njk3Mzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/8569738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gregmarr", "html_url": "https://github.com/gregmarr", "followers_url": "https://api.github.com/users/gregmarr/followers", "following_url": "https://api.github.com/users/gregmarr/following{/other_user}", "gists_url": "https://api.github.com/users/gregmarr/gists{/gist_id}", "starred_url": "https://api.github.com/users/gregmarr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gregmarr/subscriptions", "organizations_url": "https://api.github.com/users/gregmarr/orgs", "repos_url": "https://api.github.com/users/gregmarr/repos", "events_url": "https://api.github.com/users/gregmarr/events{/privacy}", "received_events_url": "https://api.github.com/users/gregmarr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/2", "html_url": "https://github.com/nlohmann/json/milestone/2", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/2/labels", "id": 1479859, "node_id": "MDk6TWlsZXN0b25lMTQ3OTg1OQ==", "number": 2, "title": "Release 1.1.0", "description": "", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 19, "state": "closed", "created_at": "2016-01-01T17:36:30Z", "updated_at": "2016-01-26T05:26:42Z", "due_on": "2016-01-23T08:00:00Z", "closed_at": "2016-01-26T05:26:42Z"}, "comments": 1, "created_at": "2016-01-13T17:10:05Z", "updated_at": "2016-01-13T19:59:51Z", "closed_at": "2016-01-13T18:14:40Z", "author_association": "CONTRIBUTOR", "body": "Line 1139, integer is misspelled as interger.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/178", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/178/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/178/events", "html_url": "https://github.com/nlohmann/json/issues/178", "id": 126465308, "node_id": "MDU6SXNzdWUxMjY0NjUzMDg=", "number": 178, "title": "Integer conversion to unsigned", "user": {"login": "Furcube", "id": 5106643, "node_id": "MDQ6VXNlcjUxMDY2NDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/5106643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Furcube", "html_url": "https://github.com/Furcube", "followers_url": "https://api.github.com/users/Furcube/followers", "following_url": "https://api.github.com/users/Furcube/following{/other_user}", "gists_url": "https://api.github.com/users/Furcube/gists{/gist_id}", "starred_url": "https://api.github.com/users/Furcube/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Furcube/subscriptions", "organizations_url": "https://api.github.com/users/Furcube/orgs", "repos_url": "https://api.github.com/users/Furcube/repos", "events_url": "https://api.github.com/users/Furcube/events{/privacy}", "received_events_url": "https://api.github.com/users/Furcube/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/3", "html_url": "https://github.com/nlohmann/json/milestone/3", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/3/labels", "id": 1510937, "node_id": "MDk6TWlsZXN0b25lMTUxMDkzNw==", "number": 3, "title": "Release 2.0.0", "description": "This release adds several features such as JSON Pointers, JSON Patch, or support for 64 bit unsigned integers. Furthermore, several (subtle) bugs have been fixed.\r\n\r\nAs `noexcept` and `constexpr` specifier have been added to several functions, the public API has effectively been changed in a (potential) non-backwards compatible manner. As we adhere to [Semantic Versioning](http://semver.org), this calls for a new major version, so say hello to 2\ufe0f\u20e3.0\ufe0f\u20e3.0\ufe0f\u20e3.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 34, "state": "closed", "created_at": "2016-01-17T12:14:39Z", "updated_at": "2016-06-23T22:53:19Z", "due_on": "2016-06-23T07:00:00Z", "closed_at": "2016-06-23T22:53:19Z"}, "comments": 22, "created_at": "2016-01-13T17:00:51Z", "updated_at": "2016-01-26T18:52:33Z", "closed_at": "2016-01-26T18:52:33Z", "author_association": "NONE", "body": "It is possible to assign negative json value to unsigned variable.\n\nThis is a possible patch\n\n``` c++\ndiff --git a/src/json.hpp b/src/json.hpp\nindex edda8ed..a8c85e5 100644\n--- a/src/json.hpp\n+++ b/src/json.hpp\n@@ -2316,7 +2316,12 @@ class basic_json\n         {\n             case value_t::number_integer:\n             {\n-                return static_cast<T>(m_value.number_integer);\n+                auto res = m_value.number_integer;\n+                if(std::is_unsigned<T>::value && res < 0) {\n+                    throw std::domain_error(\"can't assign negative value to unsigned type\");\n+                } else {\n+                    return static_cast<T>(res);\n+               }\n             }\n\n             case value_t::number_float:\n\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/177", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/177/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/177/events", "html_url": "https://github.com/nlohmann/json/issues/177", "id": 126280355, "node_id": "MDU6SXNzdWUxMjYyODAzNTU=", "number": 177, "title": "JSON performance benchmark comparision", "user": {"login": "xor-gate", "id": 1050166, "node_id": "MDQ6VXNlcjEwNTAxNjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1050166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xor-gate", "html_url": "https://github.com/xor-gate", "followers_url": "https://api.github.com/users/xor-gate/followers", "following_url": "https://api.github.com/users/xor-gate/following{/other_user}", "gists_url": "https://api.github.com/users/xor-gate/gists{/gist_id}", "starred_url": "https://api.github.com/users/xor-gate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xor-gate/subscriptions", "organizations_url": "https://api.github.com/users/xor-gate/orgs", "repos_url": "https://api.github.com/users/xor-gate/repos", "events_url": "https://api.github.com/users/xor-gate/events{/privacy}", "received_events_url": "https://api.github.com/users/xor-gate/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/2", "html_url": "https://github.com/nlohmann/json/milestone/2", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/2/labels", "id": 1479859, "node_id": "MDk6TWlsZXN0b25lMTQ3OTg1OQ==", "number": 2, "title": "Release 1.1.0", "description": "", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 19, "state": "closed", "created_at": "2016-01-01T17:36:30Z", "updated_at": "2016-01-26T05:26:42Z", "due_on": "2016-01-23T08:00:00Z", "closed_at": "2016-01-26T05:26:42Z"}, "comments": 8, "created_at": "2016-01-12T21:28:10Z", "updated_at": "2016-11-13T22:37:59Z", "closed_at": "2016-01-22T19:21:53Z", "author_association": "NONE", "body": "I would be nice to see how well your JSON library compares with others:\nhttps://github.com/miloyip/nativejson-benchmark\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/176", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/176/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/176/events", "html_url": "https://github.com/nlohmann/json/issues/176", "id": 126271494, "node_id": "MDU6SXNzdWUxMjYyNzE0OTQ=", "number": 176, "title": "map string string fails to compile", "user": {"login": "matspetter", "id": 703136, "node_id": "MDQ6VXNlcjcwMzEzNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/703136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matspetter", "html_url": "https://github.com/matspetter", "followers_url": "https://api.github.com/users/matspetter/followers", "following_url": "https://api.github.com/users/matspetter/following{/other_user}", "gists_url": "https://api.github.com/users/matspetter/gists{/gist_id}", "starred_url": "https://api.github.com/users/matspetter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matspetter/subscriptions", "organizations_url": "https://api.github.com/users/matspetter/orgs", "repos_url": "https://api.github.com/users/matspetter/repos", "events_url": "https://api.github.com/users/matspetter/events{/privacy}", "received_events_url": "https://api.github.com/users/matspetter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-01-12T20:44:54Z", "updated_at": "2016-02-16T21:05:38Z", "closed_at": "2016-02-16T21:05:38Z", "author_association": "NONE", "body": "I fail to compile this piece of code:\n\n```\nusing namespace nlohmann;\nusing maptype = std::map<std::string, std::string>;\n\nmaptype t;\njson s=t; // this works\ns.get<maptype>(); // this line fails\n// if I change to map<string,int> then it compiles\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/175", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/175/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/175/events", "html_url": "https://github.com/nlohmann/json/issues/175", "id": 125924418, "node_id": "MDU6SXNzdWUxMjU5MjQ0MTg=", "number": 175, "title": "Since re2c is often ignored in pull requests, it may make sense to make a contributing.md file", "user": {"login": "whackashoe", "id": 855581, "node_id": "MDQ6VXNlcjg1NTU4MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/855581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whackashoe", "html_url": "https://github.com/whackashoe", "followers_url": "https://api.github.com/users/whackashoe/followers", "following_url": "https://api.github.com/users/whackashoe/following{/other_user}", "gists_url": "https://api.github.com/users/whackashoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/whackashoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whackashoe/subscriptions", "organizations_url": "https://api.github.com/users/whackashoe/orgs", "repos_url": "https://api.github.com/users/whackashoe/repos", "events_url": "https://api.github.com/users/whackashoe/events{/privacy}", "received_events_url": "https://api.github.com/users/whackashoe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/2", "html_url": "https://github.com/nlohmann/json/milestone/2", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/2/labels", "id": 1479859, "node_id": "MDk6TWlsZXN0b25lMTQ3OTg1OQ==", "number": 2, "title": "Release 1.1.0", "description": "", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 19, "state": "closed", "created_at": "2016-01-01T17:36:30Z", "updated_at": "2016-01-26T05:26:42Z", "due_on": "2016-01-23T08:00:00Z", "closed_at": "2016-01-26T05:26:42Z"}, "comments": 6, "created_at": "2016-01-11T11:34:56Z", "updated_at": "2016-11-13T22:37:59Z", "closed_at": "2016-01-20T20:20:59Z", "author_association": "CONTRIBUTOR", "body": "Would save people a bit of time, plus could be useful for keeping code the same style and such too. \n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/174", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/174/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/174/events", "html_url": "https://github.com/nlohmann/json/issues/174", "id": 125608432, "node_id": "MDU6SXNzdWUxMjU2MDg0MzI=", "number": 174, "title": "In basic_json::basic_json(const CompatibleArrayType& val), the requirement of CompatibleArrayType is not strict enough.", "user": {"login": "mysyljr", "id": 3873706, "node_id": "MDQ6VXNlcjM4NzM3MDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3873706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mysyljr", "html_url": "https://github.com/mysyljr", "followers_url": "https://api.github.com/users/mysyljr/followers", "following_url": "https://api.github.com/users/mysyljr/following{/other_user}", "gists_url": "https://api.github.com/users/mysyljr/gists{/gist_id}", "starred_url": "https://api.github.com/users/mysyljr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mysyljr/subscriptions", "organizations_url": "https://api.github.com/users/mysyljr/orgs", "repos_url": "https://api.github.com/users/mysyljr/repos", "events_url": "https://api.github.com/users/mysyljr/events{/privacy}", "received_events_url": "https://api.github.com/users/mysyljr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-01-08T13:02:20Z", "updated_at": "2016-11-24T21:49:56Z", "closed_at": "2016-02-02T20:08:39Z", "author_association": "NONE", "body": "This is a question Ralated to #167 : \nIn basic_json::basic_json(const CompatibleArrayType& val), the requirement of CompatibleArrayType is not strict enough. \n\n``` c++\ntemplate <class CompatibleArrayType, typename\n              std::enable_if<\n                  not std::is_same<CompatibleArrayType, typename basic_json_t::iterator>::value and\n                  not std::is_same<CompatibleArrayType, typename basic_json_t::const_iterator>::value and\n                  not std::is_same<CompatibleArrayType, typename basic_json_t::reverse_iterator>::value and\n                  not std::is_same<CompatibleArrayType, typename basic_json_t::const_reverse_iterator>::value and\n                  not std::is_same<CompatibleArrayType, typename array_t::iterator>::value and\n                  not std::is_same<CompatibleArrayType, typename array_t::const_iterator>::value and\n                  std::is_constructible<basic_json, typename CompatibleArrayType::value_type>::value, int>::type\n              = 0>\n    basic_json(const CompatibleArrayType& val)\n        : m_type(value_t::array)\n    {\n        using std::begin;\n        using std::end;\n        m_value.array = create<array_t>(begin(val), end(val));\n    }\n```\n\nTemplate constructor of basic_json_t above can receive any type that has a type member value_type which can be used as the only parameter in one of basic_json_t's constructors and regard that type as a CompatibleArrayType.\nI think the scope of the target types is too much wide, though it excludes some of the types already meet the requirement but are not CompatibleArrayType, still not fine with 3rd party types. \n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/173", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/173/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/173/events", "html_url": "https://github.com/nlohmann/json/issues/173", "id": 125122069, "node_id": "MDU6SXNzdWUxMjUxMjIwNjk=", "number": 173, "title": "Question about exceptions", "user": {"login": "dummy0stud", "id": 14323641, "node_id": "MDQ6VXNlcjE0MzIzNjQx", "avatar_url": "https://avatars3.githubusercontent.com/u/14323641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dummy0stud", "html_url": "https://github.com/dummy0stud", "followers_url": "https://api.github.com/users/dummy0stud/followers", "following_url": "https://api.github.com/users/dummy0stud/following{/other_user}", "gists_url": "https://api.github.com/users/dummy0stud/gists{/gist_id}", "starred_url": "https://api.github.com/users/dummy0stud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dummy0stud/subscriptions", "organizations_url": "https://api.github.com/users/dummy0stud/orgs", "repos_url": "https://api.github.com/users/dummy0stud/repos", "events_url": "https://api.github.com/users/dummy0stud/events{/privacy}", "received_events_url": "https://api.github.com/users/dummy0stud/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-01-06T06:39:04Z", "updated_at": "2017-03-16T17:15:43Z", "closed_at": "2016-01-10T19:57:04Z", "author_association": "NONE", "body": "There is any possible way of using this lib without exceptions, or it always throws?\n\nIt would be nice something like:\n\n```\njson j =R\"({,})\"_json;\nstd::cout << j.is_parsed_sucess();\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/172", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/172/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/172/events", "html_url": "https://github.com/nlohmann/json/issues/172", "id": 124855616, "node_id": "MDU6SXNzdWUxMjQ4NTU2MTY=", "number": 172, "title": "Android?", "user": {"login": "EvilPudding", "id": 7356051, "node_id": "MDQ6VXNlcjczNTYwNTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/7356051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EvilPudding", "html_url": "https://github.com/EvilPudding", "followers_url": "https://api.github.com/users/EvilPudding/followers", "following_url": "https://api.github.com/users/EvilPudding/following{/other_user}", "gists_url": "https://api.github.com/users/EvilPudding/gists{/gist_id}", "starred_url": "https://api.github.com/users/EvilPudding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EvilPudding/subscriptions", "organizations_url": "https://api.github.com/users/EvilPudding/orgs", "repos_url": "https://api.github.com/users/EvilPudding/repos", "events_url": "https://api.github.com/users/EvilPudding/events{/privacy}", "received_events_url": "https://api.github.com/users/EvilPudding/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382449225, "node_id": "MDU6TGFiZWwzODI0NDkyMjU=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20android", "name": "platform: android", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-01-04T22:38:33Z", "updated_at": "2016-05-25T17:57:18Z", "closed_at": "2016-01-04T23:13:59Z", "author_association": "NONE", "body": "Is this supposed to work on android with NDK? I really need it to, but I'm getting so many errors that I'm getting scared, because I have very close deadline.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/171", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/171/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/171/events", "html_url": "https://github.com/nlohmann/json/issues/171", "id": 124764245, "node_id": "MDU6SXNzdWUxMjQ3NjQyNDU=", "number": 171, "title": "Cannot index by key of type static constexpr const char*", "user": {"login": "poskadesign", "id": 9307795, "node_id": "MDQ6VXNlcjkzMDc3OTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/9307795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poskadesign", "html_url": "https://github.com/poskadesign", "followers_url": "https://api.github.com/users/poskadesign/followers", "following_url": "https://api.github.com/users/poskadesign/following{/other_user}", "gists_url": "https://api.github.com/users/poskadesign/gists{/gist_id}", "starred_url": "https://api.github.com/users/poskadesign/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poskadesign/subscriptions", "organizations_url": "https://api.github.com/users/poskadesign/orgs", "repos_url": "https://api.github.com/users/poskadesign/repos", "events_url": "https://api.github.com/users/poskadesign/events{/privacy}", "received_events_url": "https://api.github.com/users/poskadesign/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/2", "html_url": "https://github.com/nlohmann/json/milestone/2", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/2/labels", "id": 1479859, "node_id": "MDk6TWlsZXN0b25lMTQ3OTg1OQ==", "number": 2, "title": "Release 1.1.0", "description": "", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 19, "state": "closed", "created_at": "2016-01-01T17:36:30Z", "updated_at": "2016-01-26T05:26:42Z", "due_on": "2016-01-23T08:00:00Z", "closed_at": "2016-01-26T05:26:42Z"}, "comments": 12, "created_at": "2016-01-04T14:03:54Z", "updated_at": "2017-07-08T11:11:31Z", "closed_at": "2016-01-24T09:47:26Z", "author_association": "NONE", "body": "This will not compile, error: use of overloaded operator '[]' is ambiguous (with operand types 'json' (aka 'basic_json<>') and 'const char *const'). Code:\r\n\r\n```cpp\r\nstatic constexpr const char\\* _VAR1 = \"MyKey\";\r\nvoid foo() {\r\n    nlohmann::json j;\r\n    j[_VAR1] = 10;\r\n}\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/168", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/168/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/168/events", "html_url": "https://github.com/nlohmann/json/issues/168", "id": 124548459, "node_id": "MDU6SXNzdWUxMjQ1NDg0NTk=", "number": 168, "title": "Add assertions", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/2", "html_url": "https://github.com/nlohmann/json/milestone/2", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/2/labels", "id": 1479859, "node_id": "MDk6TWlsZXN0b25lMTQ3OTg1OQ==", "number": 2, "title": "Release 1.1.0", "description": "", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 19, "state": "closed", "created_at": "2016-01-01T17:36:30Z", "updated_at": "2016-01-26T05:26:42Z", "due_on": "2016-01-23T08:00:00Z", "closed_at": "2016-01-26T05:26:42Z"}, "comments": 3, "created_at": "2016-01-01T15:45:19Z", "updated_at": "2016-11-13T22:37:59Z", "closed_at": "2016-01-13T20:09:10Z", "author_association": "OWNER", "body": "As proposed on [Reddit](https://www.reddit.com/r/cpp/comments/3yiw5g/json_for_modern_c_version_100/cyi91og?context=3), the code should be enriched with assertions to document and check the invariants of the functions.\n"}]