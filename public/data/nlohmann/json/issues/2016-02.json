[{"url": "https://api.github.com/repos/nlohmann/json/issues/217", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/217/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/217/events", "html_url": "https://github.com/nlohmann/json/issues/217", "id": 137374034, "node_id": "MDU6SXNzdWUxMzczNzQwMzQ=", "number": 217, "title": "Wrong link in the README.md", "user": {"login": "Themercee", "id": 6720140, "node_id": "MDQ6VXNlcjY3MjAxNDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6720140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Themercee", "html_url": "https://github.com/Themercee", "followers_url": "https://api.github.com/users/Themercee/followers", "following_url": "https://api.github.com/users/Themercee/following{/other_user}", "gists_url": "https://api.github.com/users/Themercee/gists{/gist_id}", "starred_url": "https://api.github.com/users/Themercee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Themercee/subscriptions", "organizations_url": "https://api.github.com/users/Themercee/orgs", "repos_url": "https://api.github.com/users/Themercee/repos", "events_url": "https://api.github.com/users/Themercee/events{/privacy}", "received_events_url": "https://api.github.com/users/Themercee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-29T21:03:11Z", "updated_at": "2016-03-04T06:30:26Z", "closed_at": "2016-03-04T06:30:16Z", "author_association": "NONE", "body": "Hi,\nnot a big deal, but there is a link in the readme.md that is not working, near the \"Serious testing\".\n\nNot working --> https://github.com/nlohmann/json/blob/master/test/json_unit.cc\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/216", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/216/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/216/events", "html_url": "https://github.com/nlohmann/json/issues/216", "id": 137363154, "node_id": "MDU6SXNzdWUxMzczNjMxNTQ=", "number": 216, "title": "Wide character strings not supported", "user": {"login": "kalumekenge", "id": 17554986, "node_id": "MDQ6VXNlcjE3NTU0OTg2", "avatar_url": "https://avatars3.githubusercontent.com/u/17554986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kalumekenge", "html_url": "https://github.com/kalumekenge", "followers_url": "https://api.github.com/users/kalumekenge/followers", "following_url": "https://api.github.com/users/kalumekenge/following{/other_user}", "gists_url": "https://api.github.com/users/kalumekenge/gists{/gist_id}", "starred_url": "https://api.github.com/users/kalumekenge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kalumekenge/subscriptions", "organizations_url": "https://api.github.com/users/kalumekenge/orgs", "repos_url": "https://api.github.com/users/kalumekenge/repos", "events_url": "https://api.github.com/users/kalumekenge/events{/privacy}", "received_events_url": "https://api.github.com/users/kalumekenge/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-29T20:28:21Z", "updated_at": "2016-04-10T14:26:50Z", "closed_at": "2016-04-10T14:26:50Z", "author_association": "NONE", "body": "```\n    std::wstring s1 = LR\"({\n  \"pi\": 3.141,\n  \"happy\": true,\n  \"name\": \"Niels\",\n  \"nothing\": null,\n  \"answer\": {\n    \"everything\": 42\n  },\n  \"list\": [1, 0, 2],\n  \"object\": {\n    \"currency\": \"USD\",\n    \"value\": 42.99\n  }\n})\";\n```\n\n```\nauto p0 = json::parse(s1);\nauto p1 = p0.dump();\nstd::wcout << p1 << std::endl;\n```\n\nVS 2015 Community Edition\n error C2665: 'nlohmann::basic_jsonstd::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator::parse': none of the 3 overloads could convert all the argument types\nwhile trying to match the argument list '(std::wstring)'\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/214", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/214/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/214/events", "html_url": "https://github.com/nlohmann/json/issues/214", "id": 136950988, "node_id": "MDU6SXNzdWUxMzY5NTA5ODg=", "number": 214, "title": "Memory allocations using range-based for loops", "user": {"login": "habemus-papadum", "id": 1161604, "node_id": "MDQ6VXNlcjExNjE2MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1161604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/habemus-papadum", "html_url": "https://github.com/habemus-papadum", "followers_url": "https://api.github.com/users/habemus-papadum/followers", "following_url": "https://api.github.com/users/habemus-papadum/following{/other_user}", "gists_url": "https://api.github.com/users/habemus-papadum/gists{/gist_id}", "starred_url": "https://api.github.com/users/habemus-papadum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/habemus-papadum/subscriptions", "organizations_url": "https://api.github.com/users/habemus-papadum/orgs", "repos_url": "https://api.github.com/users/habemus-papadum/repos", "events_url": "https://api.github.com/users/habemus-papadum/events{/privacy}", "received_events_url": "https://api.github.com/users/habemus-papadum/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-27T18:16:23Z", "updated_at": "2016-03-06T19:03:15Z", "closed_at": "2016-03-06T19:03:15Z", "author_association": "NONE", "body": "In the Readme, the following example is provided:\n\n```\nfor (auto element : j) {\n  std::cout << element << '\\n';\n}\n```\n\nDoes this end up creating a copy of each array element during each iteration?\n\nAre \n\n```\nfor (const auto &element : j) {\n  std::cout << element << '\\n';\n}\n```\n\nand \n\n```\nfor (auto &element : j) {\n  element[\"a\"]=...;\n}\n```\n\nbetter alternatives or is the version in the readme the optimal usage for all scenarios?\n\n(In some sense this is just a basic c++ question.  I don't really know how ranged for loop work in c++, or how to actually check what is happening in each of the scenarios, but in any case I am specifically curious about it works for basic_json's implementation)\n\nThanks!\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/211", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/211/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/211/events", "html_url": "https://github.com/nlohmann/json/issues/211", "id": 135055075, "node_id": "MDU6SXNzdWUxMzUwNTUwNzU=", "number": 211, "title": "would you like to support gcc 4.8.1? ", "user": {"login": "abc100m", "id": 4769764, "node_id": "MDQ6VXNlcjQ3Njk3NjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4769764?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abc100m", "html_url": "https://github.com/abc100m", "followers_url": "https://api.github.com/users/abc100m/followers", "following_url": "https://api.github.com/users/abc100m/following{/other_user}", "gists_url": "https://api.github.com/users/abc100m/gists{/gist_id}", "starred_url": "https://api.github.com/users/abc100m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abc100m/subscriptions", "organizations_url": "https://api.github.com/users/abc100m/orgs", "repos_url": "https://api.github.com/users/abc100m/repos", "events_url": "https://api.github.com/users/abc100m/events{/privacy}", "received_events_url": "https://api.github.com/users/abc100m/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-02-20T09:46:25Z", "updated_at": "2016-03-30T17:23:57Z", "closed_at": "2016-03-30T17:23:57Z", "author_association": "NONE", "body": "our machine which installed centos has gcc 4.8.1 installed, and it's hardly to upgrade to gcc 4.9.  so, would you like to have a work round to support for gcc 4.8.1?\n\nfor example, work round for bug 55817 of  gcc 4.8 :\n\n``` cpp\n/*\n        result.m_it.array_iterator = m_value.array->insert(pos.m_it.array_iterator, ilist);\n*/\n        #if __GNUC__ == 4 && __GNUC_MINOR__ == 8\n            auto insert_pos = std::distance(m_value.array->begin(), pos.m_it.array_iterator);\n            m_value.array->insert(pos.m_it.array_iterator, ilist);\n            result.m_it.array_iterator = m_value.array->begin() + insert_pos;\n        #else\n            result.m_it.array_iterator = m_value.array->insert(pos.m_it.array_iterator, ilist);\n        #endif\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/210", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/210/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/210/events", "html_url": "https://github.com/nlohmann/json/issues/210", "id": 134927583, "node_id": "MDU6SXNzdWUxMzQ5Mjc1ODM=", "number": 210, "title": "Reading concatenated json's from an istream", "user": {"login": "habemus-papadum", "id": 1161604, "node_id": "MDQ6VXNlcjExNjE2MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1161604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/habemus-papadum", "html_url": "https://github.com/habemus-papadum", "followers_url": "https://api.github.com/users/habemus-papadum/followers", "following_url": "https://api.github.com/users/habemus-papadum/following{/other_user}", "gists_url": "https://api.github.com/users/habemus-papadum/gists{/gist_id}", "starred_url": "https://api.github.com/users/habemus-papadum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/habemus-papadum/subscriptions", "organizations_url": "https://api.github.com/users/habemus-papadum/orgs", "repos_url": "https://api.github.com/users/habemus-papadum/repos", "events_url": "https://api.github.com/users/habemus-papadum/events{/privacy}", "received_events_url": "https://api.github.com/users/habemus-papadum/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-02-19T17:41:01Z", "updated_at": "2016-02-22T07:54:09Z", "closed_at": "2016-02-22T07:54:09Z", "author_association": "NONE", "body": "Hi, \nYour library is great (and because I am lazy about being lazy, I've typed nlohmann::json so many times that I feel like I practically know you)\n\nI have a file of multiple concatenated, pretty printed json objects that I want to parse.  Is there a way with the current library to split a string in individual json which than can be dealt with as usual (of course, any other reasonable way of skinning the same cat would be appreciated.)  Otherwise, I've seen json PCRE regexes that might also do the trick.   Do think that is the way to go?\n\nThanks!   \n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/204", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/204/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/204/events", "html_url": "https://github.com/nlohmann/json/issues/204", "id": 132649860, "node_id": "MDU6SXNzdWUxMzI2NDk4NjA=", "number": 204, "title": "Conflicting typedef of ssize_t on Windows 32 bit when using Boost.Python", "user": {"login": "phogy", "id": 653209, "node_id": "MDQ6VXNlcjY1MzIwOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/653209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phogy", "html_url": "https://github.com/phogy", "followers_url": "https://api.github.com/users/phogy/followers", "following_url": "https://api.github.com/users/phogy/following{/other_user}", "gists_url": "https://api.github.com/users/phogy/gists{/gist_id}", "starred_url": "https://api.github.com/users/phogy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phogy/subscriptions", "organizations_url": "https://api.github.com/users/phogy/orgs", "repos_url": "https://api.github.com/users/phogy/repos", "events_url": "https://api.github.com/users/phogy/events{/privacy}", "received_events_url": "https://api.github.com/users/phogy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/3", "html_url": "https://github.com/nlohmann/json/milestone/3", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/3/labels", "id": 1510937, "node_id": "MDk6TWlsZXN0b25lMTUxMDkzNw==", "number": 3, "title": "Release 2.0.0", "description": "This release adds several features such as JSON Pointers, JSON Patch, or support for 64 bit unsigned integers. Furthermore, several (subtle) bugs have been fixed.\r\n\r\nAs `noexcept` and `constexpr` specifier have been added to several functions, the public API has effectively been changed in a (potential) non-backwards compatible manner. As we adhere to [Semantic Versioning](http://semver.org), this calls for a new major version, so say hello to 2\ufe0f\u20e3.0\ufe0f\u20e3.0\ufe0f\u20e3.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 34, "state": "closed", "created_at": "2016-01-17T12:14:39Z", "updated_at": "2016-06-23T22:53:19Z", "due_on": "2016-06-23T07:00:00Z", "closed_at": "2016-06-23T22:53:19Z"}, "comments": 3, "created_at": "2016-02-10T09:42:24Z", "updated_at": "2016-02-11T17:01:17Z", "closed_at": "2016-02-10T20:41:56Z", "author_association": "NONE", "body": "I'm currently evaluating your JSON library for use in a project that also uses Boost.Python to expose an  API to the app as a Python class. I'm compiling with Python 2.7.11 and Boost.Python in turn includes its `pyconfig.h`, which typedefs `ssize_t` as an `int`. \nI'm not entirely sure whether Python or your hpp is correct here but your inclusion of `basetsd.h` and consequtive `using` definition of `ssize_t` to its `SSIZE_T`, attempts to redefine it as a `long`. This is during Windows 32 bit compilation on Visual Studio 2015.\n\n`json\\src\\json.hpp(53): error C2371: 'ssize_t': redefinition; different basic types`\n\nThanks in advance for any help or comments about this!\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/203", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/203/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/203/events", "html_url": "https://github.com/nlohmann/json/issues/203", "id": 131848347, "node_id": "MDU6SXNzdWUxMzE4NDgzNDc=", "number": 203, "title": "Inconsistency between operator[] and push_back", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/3", "html_url": "https://github.com/nlohmann/json/milestone/3", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/3/labels", "id": 1510937, "node_id": "MDk6TWlsZXN0b25lMTUxMDkzNw==", "number": 3, "title": "Release 2.0.0", "description": "This release adds several features such as JSON Pointers, JSON Patch, or support for 64 bit unsigned integers. Furthermore, several (subtle) bugs have been fixed.\r\n\r\nAs `noexcept` and `constexpr` specifier have been added to several functions, the public API has effectively been changed in a (potential) non-backwards compatible manner. As we adhere to [Semantic Versioning](http://semver.org), this calls for a new major version, so say hello to 2\ufe0f\u20e3.0\ufe0f\u20e3.0\ufe0f\u20e3.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 34, "state": "closed", "created_at": "2016-01-17T12:14:39Z", "updated_at": "2016-06-23T22:53:19Z", "due_on": "2016-06-23T07:00:00Z", "closed_at": "2016-06-23T22:53:19Z"}, "comments": 2, "created_at": "2016-02-06T11:52:12Z", "updated_at": "2016-02-07T08:51:44Z", "closed_at": "2016-02-07T08:51:36Z", "author_association": "OWNER", "body": "# Situation\n\nWhen `operator[]` is called on a null value with a `string_t` argument, the value is silently converted to an object. When `operator[]` is called on a null value with an integer argument, an exception is thrown.\n\nThis feels inconsistent compared to `push_back`: When `push_back` is called on a null value, the value is silently converted to an object (if the argument was a `string_t`/`json`-pair) or an array (if the argument was a `json` value).\n# Proposal\n\nI would propose changing `operator[]` to _always_ convert a null value to an array. Thereby, the following code would be possible:\n\n``` cpp\njson j;\nj[2] = 17;\nstd::cout << j << '\\n';\n```\n\nAnd the output would be `[null,null,17]`.\n# Rationale\n\nThis would then behave exactly like the following code:\n\n``` cpp\njson j = json::array();\nj[2] = 17;\nstd::cout << j << '\\n';\n```\n\nThis code already works as described: Calling `operator[]` on an array, but with an integer argument out of bounds extends the array accordingly with null values.\n\nWhat do you think?\n"}]