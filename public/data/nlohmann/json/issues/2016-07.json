[{"url": "https://api.github.com/repos/nlohmann/json/issues/286", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/286/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/286/events", "html_url": "https://github.com/nlohmann/json/issues/286", "id": 167311770, "node_id": "MDU6SXNzdWUxNjczMTE3NzA=", "number": 286, "title": "can function dump()  return string in the order I push in the json object ?", "user": {"login": "zyinter2008", "id": 19711705, "node_id": "MDQ6VXNlcjE5NzExNzA1", "avatar_url": "https://avatars0.githubusercontent.com/u/19711705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zyinter2008", "html_url": "https://github.com/zyinter2008", "followers_url": "https://api.github.com/users/zyinter2008/followers", "following_url": "https://api.github.com/users/zyinter2008/following{/other_user}", "gists_url": "https://api.github.com/users/zyinter2008/gists{/gist_id}", "starred_url": "https://api.github.com/users/zyinter2008/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zyinter2008/subscriptions", "organizations_url": "https://api.github.com/users/zyinter2008/orgs", "repos_url": "https://api.github.com/users/zyinter2008/repos", "events_url": "https://api.github.com/users/zyinter2008/events{/privacy}", "received_events_url": "https://api.github.com/users/zyinter2008/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-07-25T08:32:07Z", "updated_at": "2018-01-15T09:52:41Z", "closed_at": "2016-07-25T11:43:51Z", "author_association": "NONE", "body": "the program like this:\n    json obj = { {\"result\", \"OK\"}, {\"model\", \"AAA\" } };\n    string str = obj.dump();\nwhich i want get { {\"result\", \"OK\"}, {\"model\", \"AAA\" } }, but it always return {  {\"model\", \"AAA\" }, {\"result\", \"OK\"} }\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/285", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/285/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/285/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/285/events", "html_url": "https://github.com/nlohmann/json/issues/285", "id": 167257816, "node_id": "MDU6SXNzdWUxNjcyNTc4MTY=", "number": 285, "title": "Error on the Mac: Undefined symbols for architecture x86_64", "user": {"login": "a-x-", "id": 6201068, "node_id": "MDQ6VXNlcjYyMDEwNjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/6201068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a-x-", "html_url": "https://github.com/a-x-", "followers_url": "https://api.github.com/users/a-x-/followers", "following_url": "https://api.github.com/users/a-x-/following{/other_user}", "gists_url": "https://api.github.com/users/a-x-/gists{/gist_id}", "starred_url": "https://api.github.com/users/a-x-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a-x-/subscriptions", "organizations_url": "https://api.github.com/users/a-x-/orgs", "repos_url": "https://api.github.com/users/a-x-/repos", "events_url": "https://api.github.com/users/a-x-/events{/privacy}", "received_events_url": "https://api.github.com/users/a-x-/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-07-24T22:23:00Z", "updated_at": "2017-11-30T05:58:07Z", "closed_at": "2016-07-25T11:43:36Z", "author_association": "NONE", "body": "I installed json with brew (brew tap nlohmann/json && brew install nlohmann_json).\nthen i wrote hello world:\n\n``` cpp\n#include \"json.hpp\"\nusing json = nlohmann::json;\n    // create object from string literal\n    auto j3 = json::parse(\"{ \\\"happy\\\": true, \\\"pi\\\": 3.141 }\");\n```\n\nfinnaly i ran clang: `clang -std=c++11 -O3 compare-vectors.cpp -o compare-vectors`\n\n```\nUndefined symbols for architecture x86_64:\n  \"std::__1::__vector_base_common<true>::__throw_length_error() const\", referenced from:\n      void std::__1::vector<nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long long, unsigned long long, double, std::__1::allocator>, std::__1::allocator<nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long long, unsigned long long, double, std::__1::allocator> > >::__push_back_slow_path<nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long long, unsigned long long, double, std::__1::allocator> >(nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long long, unsigned long long, double, std::__1::allocator>&&) in compare-vectors-480e6b.o\n...\n      ...\nld: symbol(s) not found for architecture x86_64\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\n```\n\n---\n\nApple LLVM version 7.3.0 (clang-703.0.31)\nTarget: x86_64-apple-darwin15.5.0\nThread model: posix\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/284", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/284/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/284/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/284/events", "html_url": "https://github.com/nlohmann/json/issues/284", "id": 166854094, "node_id": "MDU6SXNzdWUxNjY4NTQwOTQ=", "number": 284, "title": "[question]: macro to disable floating point support", "user": {"login": "rianquinn", "id": 5932003, "node_id": "MDQ6VXNlcjU5MzIwMDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5932003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rianquinn", "html_url": "https://github.com/rianquinn", "followers_url": "https://api.github.com/users/rianquinn/followers", "following_url": "https://api.github.com/users/rianquinn/following{/other_user}", "gists_url": "https://api.github.com/users/rianquinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/rianquinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rianquinn/subscriptions", "organizations_url": "https://api.github.com/users/rianquinn/orgs", "repos_url": "https://api.github.com/users/rianquinn/repos", "events_url": "https://api.github.com/users/rianquinn/events{/privacy}", "received_events_url": "https://api.github.com/users/rianquinn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-07-21T15:50:33Z", "updated_at": "2016-11-13T22:37:59Z", "closed_at": "2016-08-10T21:09:11Z", "author_association": "NONE", "body": "We are interested in using JSON in our [Bareflank](https://github.com/Bareflank/hypervisor) Hypervisor for both comms and configuration files, and would love to use this implementation. Kernel / Hypervisor code however should not use double / float as these data types can generate exceptions that cannot be handled well inside the kernel. \n\nIt appears that you already support signed / unsigned integers. Would you be interested in a patch that disables (likely via a macro of some sort) double / float completely to support people interested in using this library in non-userspace code?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/283", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/283/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/283/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/283/events", "html_url": "https://github.com/nlohmann/json/issues/283", "id": 166710747, "node_id": "MDU6SXNzdWUxNjY3MTA3NDc=", "number": 283, "title": "value() does not work with _json_pointer types", "user": {"login": "clwill", "id": 1330725, "node_id": "MDQ6VXNlcjEzMzA3MjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1330725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clwill", "html_url": "https://github.com/clwill", "followers_url": "https://api.github.com/users/clwill/followers", "following_url": "https://api.github.com/users/clwill/following{/other_user}", "gists_url": "https://api.github.com/users/clwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/clwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clwill/subscriptions", "organizations_url": "https://api.github.com/users/clwill/orgs", "repos_url": "https://api.github.com/users/clwill/repos", "events_url": "https://api.github.com/users/clwill/events{/privacy}", "received_events_url": "https://api.github.com/users/clwill/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/7", "html_url": "https://github.com/nlohmann/json/milestone/7", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/7/labels", "id": 1853616, "node_id": "MDk6TWlsZXN0b25lMTg1MzYxNg==", "number": 7, "title": "Release 2.0.2", "description": "The next release if backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2016-06-28T20:19:10Z", "updated_at": "2016-07-31T11:41:43Z", "due_on": "2016-07-30T07:00:00Z", "closed_at": "2016-07-31T11:41:43Z"}, "comments": 4, "created_at": "2016-07-21T00:13:45Z", "updated_at": "2016-11-13T22:37:59Z", "closed_at": "2016-07-24T09:18:19Z", "author_association": "NONE", "body": "It would be great if value(), which supports default values, worked like at() which can handle _json_pointer types.\n\nThis would allow the handling of nested objects, and still be robust to missing elements.\n\nTo wit:\n\n``` cpp\n#include <json.hpp>\n\nusing json = nlohmann::json;\n\nint main()\n{\n    json j =\n    {\n        {\"object\", {{\"key1\", 1}, {\"key2\", 2}}},\n    };\n\n    int at_integer = j.at(\"/object/key2\"_json_pointer);\n    int val_integer = j.value(\"/object/key2\"_json_pointer, 0);\n\n    std::cout << std::boolalpha << at_integer << \" \" << val_integer\n              << \" \" << (at_integer == val_integer) << \"\\n\";\n}\n```\n\nThis code produces the output:\n\n```\n2 0 false\n```\n\nWould be nice if it was `2 2 true`.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/282", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/282/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/282/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/282/events", "html_url": "https://github.com/nlohmann/json/issues/282", "id": 165781733, "node_id": "MDU6SXNzdWUxNjU3ODE3MzM=", "number": 282, "title": "Build error for std::int64", "user": {"login": "felipezacani", "id": 6606367, "node_id": "MDQ6VXNlcjY2MDYzNjc=", "avatar_url": "https://avatars0.githubusercontent.com/u/6606367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felipezacani", "html_url": "https://github.com/felipezacani", "followers_url": "https://api.github.com/users/felipezacani/followers", "following_url": "https://api.github.com/users/felipezacani/following{/other_user}", "gists_url": "https://api.github.com/users/felipezacani/gists{/gist_id}", "starred_url": "https://api.github.com/users/felipezacani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felipezacani/subscriptions", "organizations_url": "https://api.github.com/users/felipezacani/orgs", "repos_url": "https://api.github.com/users/felipezacani/repos", "events_url": "https://api.github.com/users/felipezacani/events{/privacy}", "received_events_url": "https://api.github.com/users/felipezacani/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/7", "html_url": "https://github.com/nlohmann/json/milestone/7", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/7/labels", "id": 1853616, "node_id": "MDk6TWlsZXN0b25lMTg1MzYxNg==", "number": 7, "title": "Release 2.0.2", "description": "The next release if backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2016-06-28T20:19:10Z", "updated_at": "2016-07-31T11:41:43Z", "due_on": "2016-07-30T07:00:00Z", "closed_at": "2016-07-31T11:41:43Z"}, "comments": 3, "created_at": "2016-07-15T13:01:22Z", "updated_at": "2016-07-15T17:50:00Z", "closed_at": "2016-07-15T17:44:24Z", "author_association": "NONE", "body": "When building on Windows with clang, clang defaults to Visual Studio (Windows SDK) headers. There is no int64 defined inside the std namespace. \n\nAs specified in http://en.cppreference.com/w/cpp/types/integer, those int64 types (lines 209 and 210) are not defined in std, but open in cstdint.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/281", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/281/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/281/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/281/events", "html_url": "https://github.com/nlohmann/json/issues/281", "id": 165275683, "node_id": "MDU6SXNzdWUxNjUyNzU2ODM=", "number": 281, "title": "strings can't be accessed after dump()->parse() - type is lost", "user": {"login": "guygman", "id": 20042886, "node_id": "MDQ6VXNlcjIwMDQyODg2", "avatar_url": "https://avatars0.githubusercontent.com/u/20042886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guygman", "html_url": "https://github.com/guygman", "followers_url": "https://api.github.com/users/guygman/followers", "following_url": "https://api.github.com/users/guygman/following{/other_user}", "gists_url": "https://api.github.com/users/guygman/gists{/gist_id}", "starred_url": "https://api.github.com/users/guygman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guygman/subscriptions", "organizations_url": "https://api.github.com/users/guygman/orgs", "repos_url": "https://api.github.com/users/guygman/repos", "events_url": "https://api.github.com/users/guygman/events{/privacy}", "received_events_url": "https://api.github.com/users/guygman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-13T09:23:34Z", "updated_at": "2016-07-13T16:51:50Z", "closed_at": "2016-07-13T16:51:50Z", "author_association": "NONE", "body": "Hi,\n\nstrangely, this code doesn't work and I can't find out what I'm doing wrong.... \n\nnlohmann::json out;\nout[accessTokenField] = (const string&)accessToken;   // key and value std::strings\nstd::string tmp1 = out[accessTokenField]; // this works\nstd::string dump = out.dump(); // 'dump' is - {\"accessToken\": \"b9c6f71f-0a10-4025-9628\"}\nnlohmann::json in;\nin.parse(dump);\nstd::string tmp2 = in[accessTokenField]; // this fails!! error message- \"type must be string, but is null\"\n\nupdate: using the static json::parse method works fine-\n.\n.\nnlohmann::json in;\nin = nlohmann::json::parse(dump);\nstd::string tmp2 = in[accessTokenField];\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/280", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/280/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/280/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/280/events", "html_url": "https://github.com/nlohmann/json/issues/280", "id": 165081058, "node_id": "MDU6SXNzdWUxNjUwODEwNTg=", "number": 280, "title": "Easy serialization of classes", "user": {"login": "jonasseglare", "id": 5850088, "node_id": "MDQ6VXNlcjU4NTAwODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/5850088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonasseglare", "html_url": "https://github.com/jonasseglare", "followers_url": "https://api.github.com/users/jonasseglare/followers", "following_url": "https://api.github.com/users/jonasseglare/following{/other_user}", "gists_url": "https://api.github.com/users/jonasseglare/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonasseglare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonasseglare/subscriptions", "organizations_url": "https://api.github.com/users/jonasseglare/orgs", "repos_url": "https://api.github.com/users/jonasseglare/repos", "events_url": "https://api.github.com/users/jonasseglare/events{/privacy}", "received_events_url": "https://api.github.com/users/jonasseglare/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-12T13:31:30Z", "updated_at": "2017-01-27T05:25:24Z", "closed_at": "2016-07-20T19:12:05Z", "author_association": "NONE", "body": "I am currently using msgpack to serialize my objects in C++, but the msgpack is not human readable, so I am looking at using JSON. The msgpack-c++ library has a very neat macro called `MSGPACK_DEFINE` which, in one line, adds msgpack serialization to a class, so that it can be serialized/deserialized to the msgpack format. See example here: https://github.com/msgpack/msgpack-c/wiki/v1_1_cpp_adaptor#intrusive-approach\n\n``` C++\n#include <msgpack.hpp>\n\nstruct your_class {\n    int a;\n    std::string b;\n    MSGPACK_DEFINE(a, b);\n};\n```\n\nDoes this JSON library feature a similar functionality? It would be very useful.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/278", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/278/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/278/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/278/events", "html_url": "https://github.com/nlohmann/json/issues/278", "id": 164054159, "node_id": "MDU6SXNzdWUxNjQwNTQxNTk=", "number": 278, "title": "Do not throw exception when default_value's type does not match the actual type", "user": {"login": "cezheng", "id": 2549967, "node_id": "MDQ6VXNlcjI1NDk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2549967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cezheng", "html_url": "https://github.com/cezheng", "followers_url": "https://api.github.com/users/cezheng/followers", "following_url": "https://api.github.com/users/cezheng/following{/other_user}", "gists_url": "https://api.github.com/users/cezheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/cezheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cezheng/subscriptions", "organizations_url": "https://api.github.com/users/cezheng/orgs", "repos_url": "https://api.github.com/users/cezheng/repos", "events_url": "https://api.github.com/users/cezheng/events{/privacy}", "received_events_url": "https://api.github.com/users/cezheng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 304694104, "node_id": "MDU6TGFiZWwzMDQ2OTQxMDQ=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20please%20discuss", "name": "state: please discuss", "color": "fbca04", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 44, "created_at": "2016-07-06T11:23:05Z", "updated_at": "2018-02-08T23:20:34Z", "closed_at": "2017-12-07T14:57:34Z", "author_association": "NONE", "body": "Thanks for this great library. I have been quite happy about almost every aspect of the library, except one point about the `value` method on object.\n\nConsider this sample code.\n\n``` cpp\nint main() {\n  nlohmann::json j = { {\"b\", nullptr}};\n  std::string result = j.value(\"b\", \"1\"); // std::domain_error: type must be string, but is null\n  return 0;\n}\n```\n\nWhen I'm using `value` to specify a default value of a key, I pretty much don't care about whether it exists or not, whether it is a valid value or not. It's pretty much like, if it failed to fetch a value of a specific type, then return the default_value I specified.\n\nSo I'm thinking about changing the following method: \nhttps://github.com/nlohmann/json/blob/develop/src/json.hpp#L3653\n\nto something like this:\n\n``` cpp\n    template <class ValueType, typename\n              std::enable_if<\n                  std::is_convertible<basic_json_t, ValueType>::value\n                  , int>::type = 0>\n    ValueType value(const typename object_t::key_type& key, ValueType default_value) const\n    {\n        // at only works for objects\n        if (is_object())\n        {\n            // if key is found, return value and given default value otherwise\n            const auto it = find(key);\n            if (it != end())\n            {\n                try\n                {\n                    return *it;\n                }\n                catch (...)\n                {\n                    // if some kind of exception occurred, return default value\n                    return default_value;\n                }\n            }\n            else\n            {\n                return default_value;\n            }\n        }\n        else\n        {\n            throw std::domain_error(\"cannot use value() with \" + type_name());\n        }\n    }\n```\n\nWhich I think will make the `value` method a lot easier to use. What do you think? @nlohmann \n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/277", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/277/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/277/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/277/events", "html_url": "https://github.com/nlohmann/json/issues/277", "id": 163745934, "node_id": "MDU6SXNzdWUxNjM3NDU5MzQ=", "number": 277, "title": "recursive data structures", "user": {"login": "froatsnook", "id": 10405574, "node_id": "MDQ6VXNlcjEwNDA1NTc0", "avatar_url": "https://avatars2.githubusercontent.com/u/10405574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froatsnook", "html_url": "https://github.com/froatsnook", "followers_url": "https://api.github.com/users/froatsnook/followers", "following_url": "https://api.github.com/users/froatsnook/following{/other_user}", "gists_url": "https://api.github.com/users/froatsnook/gists{/gist_id}", "starred_url": "https://api.github.com/users/froatsnook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froatsnook/subscriptions", "organizations_url": "https://api.github.com/users/froatsnook/orgs", "repos_url": "https://api.github.com/users/froatsnook/repos", "events_url": "https://api.github.com/users/froatsnook/events{/privacy}", "received_events_url": "https://api.github.com/users/froatsnook/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-07-04T21:51:20Z", "updated_at": "2016-07-06T14:30:50Z", "closed_at": "2016-07-05T04:19:17Z", "author_association": "NONE", "body": "Hi, thanks for the great library :). I had a gotcha when working with a recursive data structure.\n\n``` c++\nusing namespace std;\nusing namespace nlohmann;\nint main() {\n    string text = \"{\\\"A\\\":{\\\"id\\\":1,\\\"children\\\":{\\\"B\\\":{\\\"id\\\":2,\\\"children\\\":{\\\"C\\\":{\\\"id\\\":3,\\\"children\\\":{}}}}}}}\";\n    json data = json::parse(text);\n\n    json& curr = data;\n    curr = curr[\"A\"][\"children\"];\n\n    cout << \"curr=\" << curr.dump() << std::endl; // { B: ... } OK\n    cout << \"data=\" << data.dump() << std::endl; // { B: ... } expected { A: ... }\n}\n```\n\nI was able to work around this using a pointer:\n\n``` c++\n    string text = \"{\\\"A\\\":{\\\"id\\\":1,\\\"children\\\":{\\\"B\\\":{\\\"id\\\":2,\\\"children\\\":{\\\"C\\\":{\\\"id\\\":3,\\\"children\\\":{}}}}}}}\";\n    json data = json::parse(text);\n\n    json* curr = &data;\n    curr = &curr->operator[](\"A\").operator[](\"children\");\n\n    cout << \"curr=\" << curr->dump() << std::endl; // { B: ... } OK\n    cout << \"data=\" << data.dump() << std::endl; // { A: ... } OK\n```\n\nIs there a better way to work with `json` in this way?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/276", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/276/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/276/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/276/events", "html_url": "https://github.com/nlohmann/json/issues/276", "id": 163419027, "node_id": "MDU6SXNzdWUxNjM0MTkwMjc=", "number": 276, "title": "Cannot convert from 'json' to 'char'", "user": {"login": "DPD85", "id": 1238383, "node_id": "MDQ6VXNlcjEyMzgzODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1238383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DPD85", "html_url": "https://github.com/DPD85", "followers_url": "https://api.github.com/users/DPD85/followers", "following_url": "https://api.github.com/users/DPD85/following{/other_user}", "gists_url": "https://api.github.com/users/DPD85/gists{/gist_id}", "starred_url": "https://api.github.com/users/DPD85/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DPD85/subscriptions", "organizations_url": "https://api.github.com/users/DPD85/orgs", "repos_url": "https://api.github.com/users/DPD85/repos", "events_url": "https://api.github.com/users/DPD85/events{/privacy}", "received_events_url": "https://api.github.com/users/DPD85/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}, {"id": 344572510, "node_id": "MDU6TGFiZWwzNDQ1NzI1MTA=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20help%20needed", "name": "state: help needed", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-07-01T15:25:27Z", "updated_at": "2018-04-12T12:49:22Z", "closed_at": "2016-11-02T16:24:28Z", "author_association": "NONE", "body": "I'm not sure if this is an issue,\nbut it's not possible to assign a json object to a variable of type char.\nWith all other integral types it works, only the char type makes error.\n\nExample:\n\n``` cpp\n    json j;\n    j = 'B'; // ok, store a value as type number_integer\n    char b = j; // compiler error: cannot convert from 'json' to 'char'\n```\n"}]