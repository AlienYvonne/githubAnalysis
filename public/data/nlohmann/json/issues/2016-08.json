[{"url": "https://api.github.com/repos/nlohmann/json/issues/301", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/301/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/301/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/301/events", "html_url": "https://github.com/nlohmann/json/issues/301", "id": 173597630, "node_id": "MDU6SXNzdWUxNzM1OTc2MzA=", "number": 301, "title": "Exception line", "user": {"login": "loustak", "id": 11078371, "node_id": "MDQ6VXNlcjExMDc4Mzcx", "avatar_url": "https://avatars2.githubusercontent.com/u/11078371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/loustak", "html_url": "https://github.com/loustak", "followers_url": "https://api.github.com/users/loustak/followers", "following_url": "https://api.github.com/users/loustak/following{/other_user}", "gists_url": "https://api.github.com/users/loustak/gists{/gist_id}", "starred_url": "https://api.github.com/users/loustak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/loustak/subscriptions", "organizations_url": "https://api.github.com/users/loustak/orgs", "repos_url": "https://api.github.com/users/loustak/repos", "events_url": "https://api.github.com/users/loustak/events{/privacy}", "received_events_url": "https://api.github.com/users/loustak/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 10, "created_at": "2016-08-27T14:05:44Z", "updated_at": "2017-03-12T20:01:09Z", "closed_at": "2017-03-12T20:01:08Z", "author_association": "NONE", "body": "Hello,\nit's not an issue but since I found no place to post my question I put it here.\nSo my question is, is it possible to get the line where the exception was throw in the file ?\nFor exemple in this file:\n`{\n    \"none\" {\n        \"name\": \"holaaaaa\"\n    }\n}`\nI would like the exception to return 2 for exemple.\nThanks.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/299", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/299/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/299/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/299/events", "html_url": "https://github.com/nlohmann/json/issues/299", "id": 173037429, "node_id": "MDU6SXNzdWUxNzMwMzc0Mjk=", "number": 299, "title": "Coverity scan fails", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/13", "html_url": "https://github.com/nlohmann/json/milestone/13", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/13/labels", "id": 2110088, "node_id": "MDk6TWlsZXN0b25lMjExMDA4OA==", "number": 13, "title": "Release 2.0.8", "description": "The next release if backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2016-11-02T16:36:13Z", "updated_at": "2016-12-02T19:10:24Z", "due_on": "2016-12-02T08:00:00Z", "closed_at": "2016-12-02T19:10:24Z"}, "comments": 3, "created_at": "2016-08-24T19:28:30Z", "updated_at": "2016-11-24T20:56:48Z", "closed_at": "2016-11-24T20:56:47Z", "author_association": "OWNER", "body": "The recent [coverity scan build](https://travis-ci.org/nlohmann/json/jobs/154004878#L558) failed:\n\n```\n[WARNING] No files were emitted. This may be due to a problem with your configuration\nor because no files were actually compiled by your build command.\nPlease make sure you have configured the compilers actually used in the compilation.\n For more details, please look at: \n```\n\nI can reproduce the error locally, but the log file gives no information on the error. The only change made since previous successful builds was the split of the unit tests into several compilation units.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/298", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/298/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/298/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/298/events", "html_url": "https://github.com/nlohmann/json/issues/298", "id": 172689394, "node_id": "MDU6SXNzdWUxNzI2ODkzOTQ=", "number": 298, "title": "Document the best way to serialize/deserialize user defined types to json", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/4", "html_url": "https://github.com/nlohmann/json/milestone/4", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/4/labels", "id": 1836706, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwNg==", "number": 4, "title": "Release 2.1.0", "description": "The next release if new, backwards compatible functionality is introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 10, "state": "closed", "created_at": "2016-06-19T16:06:39Z", "updated_at": "2017-01-28T17:45:05Z", "due_on": "2017-01-28T08:00:00Z", "closed_at": "2017-01-28T17:45:05Z"}, "comments": 9, "created_at": "2016-08-23T12:45:30Z", "updated_at": "2017-01-27T07:19:57Z", "closed_at": "2017-01-27T07:19:57Z", "author_association": "NONE", "body": "It would be nice to add an example to the documentation about the best ways to make an user defined type serializable/deserializable to json. For example, given:\n\n``` c++\nstruct point {\n  float x[3];\n};\n\njson v = point{{0., 1., 2.}};\nassert(v.is_array());\nassert(v[0] == 0.0 and v[1] == 1.0 and v[2] == 2.0);\n\npoint p = v; \nassert(p.x[0] == 0.0 and p.x[1] == 1.0 and p.x[2] == 2.0);\n```\n- Is it possible to make json serialization/deserialization without modifying `point` itself?\n- Are there any customization points to allow this?\n\nFor example, to serialize `point` I think it should probably be enough to:\n- define non-member non-friend `begin` and `end` functions that are found by ADL. \n- have [this `basic_json` array constructor](https://github.com/nlohmann/json/blob/develop/src/json.hpp#L1242) use `decltype(begin(std::declval<point>()))`, `decltype(end(std::declval<point>()))` to find the iterator types, and `std::iterator_traits<T>` to find the rest of the required types (instead of `typename T::value_type`) .\n\nSuch that adding:\n\n``` c++\nfloat*       begin(point& p)       { return p.x; }\nfloat const* begin(point const& p) { return p.x; }\nfloat*       end(point& p)       { return p.x + 3; }\nfloat const* end(point const& p) { return p.x + 3; }\n```\n\nto `point`'s namespace should be enough to get it to work. Right now it fails because (for some reason), point is required to have `iterator`, `const_iterator`, and `value_type` type members. But since those can be obtained from point iterators by using `std::iterator_traits<decltype(begin(std::declval<point>()))>` they are not really necessary.\n\nFor other types that are not arrays maybe a couple of customization points could be added (or documented). That way it will be enough to add `to_json`/`from_json` overloads to the types namespace to allow them being found by argument dependent lookup.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/297", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/297/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/297/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/297/events", "html_url": "https://github.com/nlohmann/json/issues/297", "id": 172069443, "node_id": "MDU6SXNzdWUxNzIwNjk0NDM=", "number": 297, "title": "Add StringView template typename to basic_json", "user": {"login": "dv1", "id": 335064, "node_id": "MDQ6VXNlcjMzNTA2NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/335064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dv1", "html_url": "https://github.com/dv1", "followers_url": "https://api.github.com/users/dv1/followers", "following_url": "https://api.github.com/users/dv1/following{/other_user}", "gists_url": "https://api.github.com/users/dv1/gists{/gist_id}", "starred_url": "https://api.github.com/users/dv1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dv1/subscriptions", "organizations_url": "https://api.github.com/users/dv1/orgs", "repos_url": "https://api.github.com/users/dv1/repos", "events_url": "https://api.github.com/users/dv1/events{/privacy}", "received_events_url": "https://api.github.com/users/dv1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 304694104, "node_id": "MDU6TGFiZWwzMDQ2OTQxMDQ=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20please%20discuss", "name": "state: please discuss", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-19T07:17:14Z", "updated_at": "2017-01-02T16:35:58Z", "closed_at": "2017-01-02T16:35:58Z", "author_association": "NONE", "body": "Currently, basic_json expects one string type, which is used for everything - arguments, temporary strings, etc. This may be inefficient if data is available as some sort of a \"string view\". For example, if a C API offers a const char\\* value and a length integer, then it is possible to wrap these in a boost::string_ref instance. Since the JSON parser does not modify the source string, it would be possible to allow for specifying something like boost::string_ref as a \"StringView\" template typename, and std::string as a \"String\" type, which is then used internally.\n\nThe net gain is that a copy is avoided. In the example mentioned above, I have to create a temporary std::string and do a copy of the source string. With a StringView typename, I could avoid that copy.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/296", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/296/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/296/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/296/events", "html_url": "https://github.com/nlohmann/json/issues/296", "id": 171711843, "node_id": "MDU6SXNzdWUxNzE3MTE4NDM=", "number": 296, "title": "[Improvement] Add option to remove exceptions", "user": {"login": "marsh0", "id": 6899464, "node_id": "MDQ6VXNlcjY4OTk0NjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/6899464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marsh0", "html_url": "https://github.com/marsh0", "followers_url": "https://api.github.com/users/marsh0/followers", "following_url": "https://api.github.com/users/marsh0/following{/other_user}", "gists_url": "https://api.github.com/users/marsh0/gists{/gist_id}", "starred_url": "https://api.github.com/users/marsh0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marsh0/subscriptions", "organizations_url": "https://api.github.com/users/marsh0/orgs", "repos_url": "https://api.github.com/users/marsh0/repos", "events_url": "https://api.github.com/users/marsh0/events{/privacy}", "received_events_url": "https://api.github.com/users/marsh0/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/4", "html_url": "https://github.com/nlohmann/json/milestone/4", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/4/labels", "id": 1836706, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwNg==", "number": 4, "title": "Release 2.1.0", "description": "The next release if new, backwards compatible functionality is introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 10, "state": "closed", "created_at": "2016-06-19T16:06:39Z", "updated_at": "2017-01-28T17:45:05Z", "due_on": "2017-01-28T08:00:00Z", "closed_at": "2017-01-28T17:45:05Z"}, "comments": 10, "created_at": "2016-08-17T17:14:31Z", "updated_at": "2017-01-18T19:44:12Z", "closed_at": "2017-01-18T19:44:12Z", "author_association": "NONE", "body": "It would be nice to have the option to compile without exceptions for use on platforms where exceptions cannot be enabled., such as consoles etc. \n\nMainly for the reasons listed here: http://programmers.stackexchange.com/questions/113479/are-there-any-real-world-cases-for-c-without-exceptions\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/295", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/295/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/295/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/295/events", "html_url": "https://github.com/nlohmann/json/issues/295", "id": 171499375, "node_id": "MDU6SXNzdWUxNzE0OTkzNzU=", "number": 295, "title": "warning C4706: assignment within conditional expression", "user": {"login": "marsh0", "id": 6899464, "node_id": "MDQ6VXNlcjY4OTk0NjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/6899464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marsh0", "html_url": "https://github.com/marsh0", "followers_url": "https://api.github.com/users/marsh0/followers", "following_url": "https://api.github.com/users/marsh0/following{/other_user}", "gists_url": "https://api.github.com/users/marsh0/gists{/gist_id}", "starred_url": "https://api.github.com/users/marsh0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marsh0/subscriptions", "organizations_url": "https://api.github.com/users/marsh0/orgs", "repos_url": "https://api.github.com/users/marsh0/repos", "events_url": "https://api.github.com/users/marsh0/events{/privacy}", "received_events_url": "https://api.github.com/users/marsh0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/8", "html_url": "https://github.com/nlohmann/json/milestone/8", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/8/labels", "id": 1913911, "node_id": "MDk6TWlsZXN0b25lMTkxMzkxMQ==", "number": 8, "title": "Release 2.0.3", "description": "The next release if backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "closed", "created_at": "2016-07-31T11:42:07Z", "updated_at": "2016-08-31T19:37:57Z", "due_on": "2016-08-31T07:00:00Z", "closed_at": "2016-08-31T19:37:57Z"}, "comments": 12, "created_at": "2016-08-16T19:37:33Z", "updated_at": "2017-10-02T15:13:43Z", "closed_at": "2016-08-18T21:06:59Z", "author_association": "NONE", "body": "There is a few lines like:\n\n```\nif (keep and (not callback or (keep = callback(depth++, parse_event_t::object_start, result))))\n```\n\nThat are causing warnings and make projects that treat warnings as errors unable to compile without fixing it or disabling warnings in the code. \n\nMicrosoft Visual Studio Compiler 2015\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/294", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/294/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/294/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/294/events", "html_url": "https://github.com/nlohmann/json/issues/294", "id": 171465238, "node_id": "MDU6SXNzdWUxNzE0NjUyMzg=", "number": 294, "title": "Strip comments / Minify", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-16T16:54:57Z", "updated_at": "2016-11-20T12:25:44Z", "closed_at": "2016-08-16T20:26:22Z", "author_association": "NONE", "body": "While comments are not part of JSON, some people (particularly those writting JSON files by hand sometimes add comments to them). That makes those files not JSON anymore. The typical solution when one wants to process one of those files as JSON is to \"minify\" them first.\n\nIs it possible to strip comments / minify json files before parsing them as json?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/293", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/293/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/293/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/293/events", "html_url": "https://github.com/nlohmann/json/issues/293", "id": 171357254, "node_id": "MDU6SXNzdWUxNzEzNTcyNTQ=", "number": 293, "title": "Q: Is it possible to build json tree from already UTF8 encoded values?", "user": {"login": "clarkk", "id": 1913916, "node_id": "MDQ6VXNlcjE5MTM5MTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1913916?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarkk", "html_url": "https://github.com/clarkk", "followers_url": "https://api.github.com/users/clarkk/followers", "following_url": "https://api.github.com/users/clarkk/following{/other_user}", "gists_url": "https://api.github.com/users/clarkk/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarkk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarkk/subscriptions", "organizations_url": "https://api.github.com/users/clarkk/orgs", "repos_url": "https://api.github.com/users/clarkk/repos", "events_url": "https://api.github.com/users/clarkk/events{/privacy}", "received_events_url": "https://api.github.com/users/clarkk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-16T08:54:18Z", "updated_at": "2016-08-18T21:17:57Z", "closed_at": "2016-08-18T21:17:57Z", "author_association": "NONE", "body": "Is it possible to build a JSON tree from already UTF8 encoded strings?\n\neg\n`utf8 encoded string with \u00c3\u00a6\u00c3\u00b8\u00c3\u00a5`\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/292", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/292/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/292/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/292/events", "html_url": "https://github.com/nlohmann/json/issues/292", "id": 170763664, "node_id": "MDU6SXNzdWUxNzA3NjM2NjQ=", "number": 292, "title": "Equality operator results in array when assigned object", "user": {"login": "adamierymenko", "id": 591635, "node_id": "MDQ6VXNlcjU5MTYzNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/591635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamierymenko", "html_url": "https://github.com/adamierymenko", "followers_url": "https://api.github.com/users/adamierymenko/followers", "following_url": "https://api.github.com/users/adamierymenko/following{/other_user}", "gists_url": "https://api.github.com/users/adamierymenko/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamierymenko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamierymenko/subscriptions", "organizations_url": "https://api.github.com/users/adamierymenko/orgs", "repos_url": "https://api.github.com/users/adamierymenko/repos", "events_url": "https://api.github.com/users/adamierymenko/events{/privacy}", "received_events_url": "https://api.github.com/users/adamierymenko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-11T22:38:58Z", "updated_at": "2016-08-12T05:02:17Z", "closed_at": "2016-08-11T22:45:12Z", "author_association": "NONE", "body": "`an_object = an_object;`\n\nAfterwords `an_object` is an _array_ not an object. Easy to test.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/291", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/291/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/291/events", "html_url": "https://github.com/nlohmann/json/issues/291", "id": 170682829, "node_id": "MDU6SXNzdWUxNzA2ODI4Mjk=", "number": 291, "title": "Support for integers not from the range [-(2**53)+1, (2**53)-1] in parser", "user": {"login": "antonovvk", "id": 442904, "node_id": "MDQ6VXNlcjQ0MjkwNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/442904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antonovvk", "html_url": "https://github.com/antonovvk", "followers_url": "https://api.github.com/users/antonovvk/followers", "following_url": "https://api.github.com/users/antonovvk/following{/other_user}", "gists_url": "https://api.github.com/users/antonovvk/gists{/gist_id}", "starred_url": "https://api.github.com/users/antonovvk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antonovvk/subscriptions", "organizations_url": "https://api.github.com/users/antonovvk/orgs", "repos_url": "https://api.github.com/users/antonovvk/repos", "events_url": "https://api.github.com/users/antonovvk/events{/privacy}", "received_events_url": "https://api.github.com/users/antonovvk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-11T16:03:05Z", "updated_at": "2016-08-11T18:20:15Z", "closed_at": "2016-08-11T16:18:59Z", "author_association": "NONE", "body": "Currently the test below fails:\n\n``` C++\nTEST(WTF, BigInteger)  {\n    nlohmann::json val = -3383556239975101330LL;\n    val = nlohmann::json::parse(val.dump());\n    EXPECT_EQ(-3383556239975101330, val.get<int64_t>());\n}\n```\n\nAnd this is the internal inconsistency.\nAs far as I know, RFC does not require JSON integers to be in any range.\nI think that internal consistency is more important than possible non-interoperability with third-party JSON parsers.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/290", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/290/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/290/events", "html_url": "https://github.com/nlohmann/json/issues/290", "id": 170161014, "node_id": "MDU6SXNzdWUxNzAxNjEwMTQ=", "number": 290, "title": "Support for iterator-range parsing", "user": {"login": "theodelrieu", "id": 15652306, "node_id": "MDQ6VXNlcjE1NjUyMzA2", "avatar_url": "https://avatars1.githubusercontent.com/u/15652306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theodelrieu", "html_url": "https://github.com/theodelrieu", "followers_url": "https://api.github.com/users/theodelrieu/followers", "following_url": "https://api.github.com/users/theodelrieu/following{/other_user}", "gists_url": "https://api.github.com/users/theodelrieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/theodelrieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theodelrieu/subscriptions", "organizations_url": "https://api.github.com/users/theodelrieu/orgs", "repos_url": "https://api.github.com/users/theodelrieu/repos", "events_url": "https://api.github.com/users/theodelrieu/events{/privacy}", "received_events_url": "https://api.github.com/users/theodelrieu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/8", "html_url": "https://github.com/nlohmann/json/milestone/8", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/8/labels", "id": 1913911, "node_id": "MDk6TWlsZXN0b25lMTkxMzkxMQ==", "number": 8, "title": "Release 2.0.3", "description": "The next release if backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "closed", "created_at": "2016-07-31T11:42:07Z", "updated_at": "2016-08-31T19:37:57Z", "due_on": "2016-08-31T07:00:00Z", "closed_at": "2016-08-31T19:37:57Z"}, "comments": 53, "created_at": "2016-08-09T13:06:43Z", "updated_at": "2016-11-13T22:37:59Z", "closed_at": "2016-08-31T18:28:23Z", "author_association": "CONTRIBUTOR", "body": "Hi, it would be handy to add an overload to the `parse` method.\n\nIn my code, I deal a lot with `vector<uint8_t>` when communicating with my server.\nHowever I sometimes have to send JSON, and I must convert the buffer to a `std::string`, which is unfortunate.\n\nI know I could typedef basic_json and use `std::basic_string<uint8_t>` as `StringType`.\nHowever, other parts of the code uses the `std::string` version, and I don't want to patch the whole code because of that.\n\nWe could add this overload to `parse`, which will behave like `std::string` iterator constructor:\n\n``` cpp\ntemplate<typename InputIterator>\nstatic basic_json parse(InputIterator begin, InputIterator end, parser_callback_t cb = nullptr);\n\n// user code\n\nauto buffer = receive_bytes();\nauto json = json::parse(buffer.begin(), buffer.end());\n```\n\nWhat are your thoughts on that ?\nIf you agree with the idea, I can take care of the PR.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/289", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/289/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/289/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/289/events", "html_url": "https://github.com/nlohmann/json/issues/289", "id": 170123740, "node_id": "MDU6SXNzdWUxNzAxMjM3NDA=", "number": 289, "title": "Horribly inconsistent behavior between const/non-const reference in operator [] ()", "user": {"login": "kawing-chiu", "id": 5235260, "node_id": "MDQ6VXNlcjUyMzUyNjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5235260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kawing-chiu", "html_url": "https://github.com/kawing-chiu", "followers_url": "https://api.github.com/users/kawing-chiu/followers", "following_url": "https://api.github.com/users/kawing-chiu/following{/other_user}", "gists_url": "https://api.github.com/users/kawing-chiu/gists{/gist_id}", "starred_url": "https://api.github.com/users/kawing-chiu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kawing-chiu/subscriptions", "organizations_url": "https://api.github.com/users/kawing-chiu/orgs", "repos_url": "https://api.github.com/users/kawing-chiu/repos", "events_url": "https://api.github.com/users/kawing-chiu/events{/privacy}", "received_events_url": "https://api.github.com/users/kawing-chiu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/8", "html_url": "https://github.com/nlohmann/json/milestone/8", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/8/labels", "id": 1913911, "node_id": "MDk6TWlsZXN0b25lMTkxMzkxMQ==", "number": 8, "title": "Release 2.0.3", "description": "The next release if backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "closed", "created_at": "2016-07-31T11:42:07Z", "updated_at": "2016-08-31T19:37:57Z", "due_on": "2016-08-31T07:00:00Z", "closed_at": "2016-08-31T19:37:57Z"}, "comments": 29, "created_at": "2016-08-09T09:40:53Z", "updated_at": "2017-01-20T14:03:53Z", "closed_at": "2016-08-31T18:31:15Z", "author_association": "NONE", "body": "Things like \n\n``` cpp\nstd::string tag;\ntry {\n    tag = json[\"tag\"];\n} catch (const std::domain_error &e) {\n    //  handle it\n}\n```\n\nworks nicely and as expected. However, if `json` is a const reference, the above code will fail by **assertion**. Why is it designed like so? Shouldn't it be better and more consistent to at least throw a `domain_error` instead of fail by assertion? It took me more than one hour to debug this issue when I pass the above json by const reference to another function to extract data...\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/288", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/288/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/288/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/288/events", "html_url": "https://github.com/nlohmann/json/issues/288", "id": 169316509, "node_id": "MDU6SXNzdWUxNjkzMTY1MDk=", "number": 288, "title": "Silently get numbers into smaller types", "user": {"login": "vladimirgamalyan", "id": 12879954, "node_id": "MDQ6VXNlcjEyODc5OTU0", "avatar_url": "https://avatars0.githubusercontent.com/u/12879954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vladimirgamalyan", "html_url": "https://github.com/vladimirgamalyan", "followers_url": "https://api.github.com/users/vladimirgamalyan/followers", "following_url": "https://api.github.com/users/vladimirgamalyan/following{/other_user}", "gists_url": "https://api.github.com/users/vladimirgamalyan/gists{/gist_id}", "starred_url": "https://api.github.com/users/vladimirgamalyan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vladimirgamalyan/subscriptions", "organizations_url": "https://api.github.com/users/vladimirgamalyan/orgs", "repos_url": "https://api.github.com/users/vladimirgamalyan/repos", "events_url": "https://api.github.com/users/vladimirgamalyan/events{/privacy}", "received_events_url": "https://api.github.com/users/vladimirgamalyan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-08-04T08:14:54Z", "updated_at": "2016-08-05T05:17:00Z", "closed_at": "2016-08-04T18:28:06Z", "author_association": "NONE", "body": "This code:\n\n``` cpp\n    json j = { { \"foo\", 65536 } };\n    int16_t v = j[\"foo\"].get<int16_t>();\n    std::cout << v << \"\\n\";\n```\n\nprints\n\n```\n0\n```\n\nProbably, it would be better, if `get` thrown some exception (maybe `std::out_of_range`).\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/287", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/287/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/287/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/287/events", "html_url": "https://github.com/nlohmann/json/issues/287", "id": 168920168, "node_id": "MDU6SXNzdWUxNjg5MjAxNjg=", "number": 287, "title": "Incorrect parsing of large int64_t numbers", "user": {"login": "mariobadr", "id": 5625409, "node_id": "MDQ6VXNlcjU2MjU0MDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5625409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mariobadr", "html_url": "https://github.com/mariobadr", "followers_url": "https://api.github.com/users/mariobadr/followers", "following_url": "https://api.github.com/users/mariobadr/following{/other_user}", "gists_url": "https://api.github.com/users/mariobadr/gists{/gist_id}", "starred_url": "https://api.github.com/users/mariobadr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mariobadr/subscriptions", "organizations_url": "https://api.github.com/users/mariobadr/orgs", "repos_url": "https://api.github.com/users/mariobadr/repos", "events_url": "https://api.github.com/users/mariobadr/events{/privacy}", "received_events_url": "https://api.github.com/users/mariobadr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-02T15:47:00Z", "updated_at": "2016-08-02T19:17:23Z", "closed_at": "2016-08-02T15:56:34Z", "author_association": "NONE", "body": "Hello,\n\nI use dynamic instrumentation to gather information about a program, and then output it using your json library to a file. When I parse the file into a different application using your library, I get different values. Below is a minimal example:\n\n**_main.cpp_**\n\n```\n#include <fstream>\n#include <iostream>\n\n#include \"json.hpp\"\n\nint main(int argc, char** argv) {\n  using json = nlohmann::json;\n\n  if(argc != 2) {\n    return 0;\n  }\n\n  std::ifstream stream(argv[1]);\n  json j;\n  stream >> j;\n\n  std::cout << j[\"id\"] << \"\\n\";\n\n  return 0;\n}\n```\n\n**_test.json_**\n`\n{\n  \"call\": \"pthread_mutex_lock\",\n  \"id\": 8492065431569638403,\n  \"object\": 139898772169632\n}\n`\n\n_**Output**_\n`8492065431569638400`\n\nThe documentation states that numbers are stored in int64_t, and that the maximum value allowed is 9223372036854775807. The above value is less than that number, so I'm not sure what the problem is. Thanks.\n\nEdit: I am using version 1.1.0\n"}]