[{"url": "https://api.github.com/repos/nlohmann/json/issues/347", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/347/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/347/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/347/events", "html_url": "https://github.com/nlohmann/json/issues/347", "id": 186164033, "node_id": "MDU6SXNzdWUxODYxNjQwMzM=", "number": 347, "title": "Is it possible to stream data through the json parser without storing everything in memory?", "user": {"login": "anden259", "id": 8613540, "node_id": "MDQ6VXNlcjg2MTM1NDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/8613540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anden259", "html_url": "https://github.com/anden259", "followers_url": "https://api.github.com/users/anden259/followers", "following_url": "https://api.github.com/users/anden259/following{/other_user}", "gists_url": "https://api.github.com/users/anden259/gists{/gist_id}", "starred_url": "https://api.github.com/users/anden259/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anden259/subscriptions", "organizations_url": "https://api.github.com/users/anden259/orgs", "repos_url": "https://api.github.com/users/anden259/repos", "events_url": "https://api.github.com/users/anden259/events{/privacy}", "received_events_url": "https://api.github.com/users/anden259/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-10-30T21:01:28Z", "updated_at": "2016-11-14T14:07:14Z", "closed_at": "2016-11-14T14:07:14Z", "author_association": "NONE", "body": "Is it possible to stream data through the json parser without storing everything in memory?\n\nLets say I have a json file that is 10 GB, is it possible to stream that through the parser without storing it in memory?\n\nSomething like:\nfile stream >> json deserialze >> data stream\n\nand the reverse:\ndata stream >> json serialize >> json string stream\n\nIs that possible with this library?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/346", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/346/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/346/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/346/events", "html_url": "https://github.com/nlohmann/json/issues/346", "id": 186088353, "node_id": "MDU6SXNzdWUxODYwODgzNTM=", "number": 346, "title": "pure virtual conversion operator", "user": {"login": "lzheng5", "id": 6733899, "node_id": "MDQ6VXNlcjY3MzM4OTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/6733899?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lzheng5", "html_url": "https://github.com/lzheng5", "followers_url": "https://api.github.com/users/lzheng5/followers", "following_url": "https://api.github.com/users/lzheng5/following{/other_user}", "gists_url": "https://api.github.com/users/lzheng5/gists{/gist_id}", "starred_url": "https://api.github.com/users/lzheng5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lzheng5/subscriptions", "organizations_url": "https://api.github.com/users/lzheng5/orgs", "repos_url": "https://api.github.com/users/lzheng5/repos", "events_url": "https://api.github.com/users/lzheng5/events{/privacy}", "received_events_url": "https://api.github.com/users/lzheng5/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-10-29T16:48:56Z", "updated_at": "2016-11-08T07:10:23Z", "closed_at": "2016-11-08T07:10:16Z", "author_association": "NONE", "body": "Consider the following code.\n\n``` cpp\nclass ToJsonBase\n{\nprotected:\n  std::string b;\n\npublic:\n  ToJsonBase(const std::string& ab) : b(ab){}\n\n  virtual operator json() = 0;\n};\n\nclass ToJson : public ToJsonBase\n{\n  std::string d;\n\npublic:\n  ToJson(const std::string& ad)\n    :ToJsonBase(\"Base String\"), d(ad){}\n  operator json()\n  {\n    json j;\n    j[\"base\"] = b;\n    j[\"derived\"] = d;\n    return j;\n  }\n};\n\nint main()\n{\n  ToJsonBase* p = new ToJson(\"derived string\");\n  json j = (json)*p; // error here\n}\n\n```\n\nWhen you have the conversion operator as a pure virtual function, it will give me the following error.\n\n```\nIn file included from /usr/include/c++/6.1.1/bits/uniform_int_dist.h:35:0,\n                 from /usr/include/c++/6.1.1/bits/stl_algo.h:66,\n                 from /usr/include/c++/6.1.1/algorithm:62,\n                 from /home/lzheng5/Dropbox/home/ncsu/Spring2016/ECE484/IotFaceRec/./include/net/json.hpp:32,\n                 from /home/lzheng5/Dropbox/home/ncsu/Spring2016/ECE484/IotFaceRec/tools/json-test/main.cpp:1:\n/usr/include/c++/6.1.1/limits: In instantiation of \u2018struct std::numeric_limits<ToJsonBase>\u2019:\n/home/lzheng5/Dropbox/home/ncsu/Spring2016/ECE484/IotFaceRec/./include/net/json.hpp:1418:94:   required by substitution of \u2018template<class CompatibleNumberIntegerType, typename std::enable_if<((std::is_constructible<long long int, CompatibleNumberIntegerType>::value && std::numeric_limits<_Tp>::is_integer) && std::numeric_limits<_Tp>::is_signed), CompatibleNumberIntegerType>::type <anonymous> > nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::basic_json(CompatibleNumberIntegerType) [with CompatibleNumberIntegerType = ToJsonBase; typename std::enable_if<((std::is_constructible<long long int, CompatibleNumberIntegerType>::value && std::numeric_limits<_Tp>::is_integer) && std::numeric_limits<_Tp>::is_signed), CompatibleNumberIntegerType>::type <anonymous> = <missing>]\u2019\n/home/lzheng5/Dropbox/home/ncsu/Spring2016/ECE484/IotFaceRec/tools/json-test/main.cpp:78:16:   required from here\n/usr/include/c++/6.1.1/limits:320:7: error: invalid abstract return type \u2018ToJsonBase\u2019\n       min() _GLIBCXX_USE_NOEXCEPT { return _Tp(); }\n       ^~~\n/home/lzheng5/Dropbox/home/ncsu/Spring2016/ECE484/IotFaceRec/tools/json-test/main.cpp:11:7: note:   because the following virtual functions are pure within \u2018ToJsonBase\u2019:\n class ToJsonBase\n       ^~~~~~~~~~\n/home/lzheng5/Dropbox/home/ncsu/Spring2016/ECE484/IotFaceRec/tools/json-test/main.cpp:19:11: note:  virtual ToJsonBase::operator nlohmann::json()\n   virtual operator json() = 0;\n           ^~~~~~~~\nIn file included from /usr/include/c++/6.1.1/bits/uniform_int_dist.h:35:0,\n                 from /usr/include/c++/6.1.1/bits/stl_algo.h:66,\n                 from /usr/include/c++/6.1.1/algorithm:62,\n                 from /home/lzheng5/Dropbox/home/ncsu/Spring2016/ECE484/IotFaceRec/./include/net/json.hpp:32,\n                 from /home/lzheng5/Dropbox/home/ncsu/Spring2016/ECE484/IotFaceRec/tools/json-test/main.cpp:1:\n/usr/include/c++/6.1.1/limits:324:7: error: invalid abstract return type \u2018ToJsonBase\u2019\n       max() _GLIBCXX_USE_NOEXCEPT { return _Tp(); }\n       ^~~\n/usr/include/c++/6.1.1/limits:330:7: error: invalid abstract return type \u2018ToJsonBase\u2019\n       lowest() noexcept { return _Tp(); }\n       ^~~~~~\n/usr/include/c++/6.1.1/limits:336:7: error: invalid abstract return type \u2018ToJsonBase\u2019\n       epsilon() _GLIBCXX_USE_NOEXCEPT { return _Tp(); }\n       ^~~~~~~\n/usr/include/c++/6.1.1/limits:340:7: error: invalid abstract return type \u2018ToJsonBase\u2019\n       round_error() _GLIBCXX_USE_NOEXCEPT { return _Tp(); }\n       ^~~~~~~~~~~\n/usr/include/c++/6.1.1/limits:344:7: error: invalid abstract return type \u2018ToJsonBase\u2019\n       infinity() _GLIBCXX_USE_NOEXCEPT { return _Tp(); }\n       ^~~~~~~~\n/usr/include/c++/6.1.1/limits:349:7: error: invalid abstract return type \u2018ToJsonBase\u2019\n       quiet_NaN() _GLIBCXX_USE_NOEXCEPT { return _Tp(); }\n       ^~~~~~~~~\n/usr/include/c++/6.1.1/limits:354:7: error: invalid abstract return type \u2018ToJsonBase\u2019\n       signaling_NaN() _GLIBCXX_USE_NOEXCEPT { return _Tp(); }\n       ^~~~~~~~~~~~~\n/usr/include/c++/6.1.1/limits:360:7: error: invalid abstract return type \u2018ToJsonBase\u2019\n       denorm_min() _GLIBCXX_USE_NOEXCEPT { return _Tp(); }\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/345", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/345/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/345/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/345/events", "html_url": "https://github.com/nlohmann/json/issues/345", "id": 186049265, "node_id": "MDU6SXNzdWUxODYwNDkyNjU=", "number": 345, "title": "Floating point precision lost", "user": {"login": "nickvkaam", "id": 8651871, "node_id": "MDQ6VXNlcjg2NTE4NzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/8651871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickvkaam", "html_url": "https://github.com/nickvkaam", "followers_url": "https://api.github.com/users/nickvkaam/followers", "following_url": "https://api.github.com/users/nickvkaam/following{/other_user}", "gists_url": "https://api.github.com/users/nickvkaam/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickvkaam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickvkaam/subscriptions", "organizations_url": "https://api.github.com/users/nickvkaam/orgs", "repos_url": "https://api.github.com/users/nickvkaam/repos", "events_url": "https://api.github.com/users/nickvkaam/events{/privacy}", "received_events_url": "https://api.github.com/users/nickvkaam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-29T00:42:59Z", "updated_at": "2016-11-11T18:39:13Z", "closed_at": "2016-11-11T18:39:13Z", "author_association": "NONE", "body": "Input:\n\n```\njson data;\ndata[\"number\"] = 11.4f;\n```\n\noutput:\n\n`std::string dataString = data.dump();`\n\nresult:\n\n```\n{\n    \"number\": 11.3999996185303\n}\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/344", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/344/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/344/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/344/events", "html_url": "https://github.com/nlohmann/json/issues/344", "id": 185444832, "node_id": "MDU6SXNzdWUxODU0NDQ4MzI=", "number": 344, "title": "Check \"Parsing JSON is a Minefield\"", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/12", "html_url": "https://github.com/nlohmann/json/milestone/12", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/12/labels", "id": 2071838, "node_id": "MDk6TWlsZXN0b25lMjA3MTgzOA==", "number": 12, "title": "Release 2.0.7", "description": "The next release if backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior.\r\n", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "closed", "created_at": "2016-10-15T14:53:41Z", "updated_at": "2016-11-02T19:58:08Z", "due_on": "2016-11-02T07:00:00Z", "closed_at": "2016-11-02T19:58:08Z"}, "comments": 5, "created_at": "2016-10-26T16:28:59Z", "updated_at": "2016-11-02T16:04:15Z", "closed_at": "2016-11-02T16:04:15Z", "author_association": "OWNER", "body": "http://seriot.ch/parsing_json.html describes a lot of potential issues. We should have a look whether the library is affected.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/343", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/343/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/343/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/343/events", "html_url": "https://github.com/nlohmann/json/issues/343", "id": 185366143, "node_id": "MDU6SXNzdWUxODUzNjYxNDM=", "number": 343, "title": "feature wish: JSONPath", "user": {"login": "tesch1", "id": 322607, "node_id": "MDQ6VXNlcjMyMjYwNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/322607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesch1", "html_url": "https://github.com/tesch1", "followers_url": "https://api.github.com/users/tesch1/followers", "following_url": "https://api.github.com/users/tesch1/following{/other_user}", "gists_url": "https://api.github.com/users/tesch1/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesch1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesch1/subscriptions", "organizations_url": "https://api.github.com/users/tesch1/orgs", "repos_url": "https://api.github.com/users/tesch1/repos", "events_url": "https://api.github.com/users/tesch1/events{/privacy}", "received_events_url": "https://api.github.com/users/tesch1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 344572510, "node_id": "MDU6TGFiZWwzNDQ1NzI1MTA=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20help%20needed", "name": "state: help needed", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-10-26T11:24:03Z", "updated_at": "2017-03-28T21:56:34Z", "closed_at": "2017-03-28T21:56:34Z", "author_association": "NONE", "body": "A simple query() function would be a fantastic addition.  Maybe it's totally out of scope for this project, but searching the issues didn't turn up any discussion, so maybe this issue is just a place to say it wont be done :)\n\nSome related refs:\nhttp://goessner.net/articles/JsonPath/\nhttps://chromium.googlesource.com/external/mozc/+/master/src/net/jsonpath.cc\nhttps://www.genivia.com/doc/xml-rpc-json/html/\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/342", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/342/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/342/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/342/events", "html_url": "https://github.com/nlohmann/json/issues/342", "id": 184679292, "node_id": "MDU6SXNzdWUxODQ2NzkyOTI=", "number": 342, "title": "Allow hex numbers", "user": {"login": "ianmccul", "id": 8558554, "node_id": "MDQ6VXNlcjg1NTg1NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/8558554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianmccul", "html_url": "https://github.com/ianmccul", "followers_url": "https://api.github.com/users/ianmccul/followers", "following_url": "https://api.github.com/users/ianmccul/following{/other_user}", "gists_url": "https://api.github.com/users/ianmccul/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianmccul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianmccul/subscriptions", "organizations_url": "https://api.github.com/users/ianmccul/orgs", "repos_url": "https://api.github.com/users/ianmccul/repos", "events_url": "https://api.github.com/users/ianmccul/events{/privacy}", "received_events_url": "https://api.github.com/users/ianmccul/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-23T09:08:26Z", "updated_at": "2016-10-23T12:43:07Z", "closed_at": "2016-10-23T12:43:07Z", "author_association": "NONE", "body": "Allowing hexadecimal numbers for integer constants would be very useful.  This would be a JSON extension, but as far as I can tell it wouldn't change the interpretation of any valid JSON syntax, just allow correctly parsing a format that is currently invalid.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/341", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/341/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/341/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/341/events", "html_url": "https://github.com/nlohmann/json/issues/341", "id": 184627626, "node_id": "MDU6SXNzdWUxODQ2Mjc2MjY=", "number": 341, "title": "Convert strings to numbers", "user": {"login": "oysteinmyrmo", "id": 6507833, "node_id": "MDQ6VXNlcjY1MDc4MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/6507833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oysteinmyrmo", "html_url": "https://github.com/oysteinmyrmo", "followers_url": "https://api.github.com/users/oysteinmyrmo/followers", "following_url": "https://api.github.com/users/oysteinmyrmo/following{/other_user}", "gists_url": "https://api.github.com/users/oysteinmyrmo/gists{/gist_id}", "starred_url": "https://api.github.com/users/oysteinmyrmo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oysteinmyrmo/subscriptions", "organizations_url": "https://api.github.com/users/oysteinmyrmo/orgs", "repos_url": "https://api.github.com/users/oysteinmyrmo/repos", "events_url": "https://api.github.com/users/oysteinmyrmo/events{/privacy}", "received_events_url": "https://api.github.com/users/oysteinmyrmo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-22T12:26:47Z", "updated_at": "2016-11-13T22:37:59Z", "closed_at": "2016-10-22T16:42:11Z", "author_association": "NONE", "body": "I am using the json library to parse a text file containing json data to insert into an SQLite database. Parsing the file works fine, but everything is stored as strings because the data originates from a Wordpress database on a Wordpress server which gives all the contents as strings because PHP. I can of course read all data  as strings and then convert the data to numbers myself (data types are known), but I just wanted to check if there is some built-in functionality for this in the library.\n\nAs an example, consider the following json file fetched from the Wordpress server:\n\n``` js\n{\n    \"my_table\": [\n        {\n            \"id\": \"1\",\n            \"name\": \"foo\"\n        },\n        {\n            \"id\": \"2\",\n            \"name\": \"bar\"\n        }\n    ]\n}\n```\n\nIn C++ I would like to parse like this:\n\n``` cpp\nstd::string fileContents = getFileContents(); // We get the data somehow\njson dbData = json::parse(fileContents);\n\njson tableData = dbData[\"my_table\"];\nfor (json j : tableData)\n{\n    // This will fail because PHP gives quoted numbers and j[\"id\"] is thus a string.\n    // Can the library do this conversion in some way, or must it be done manually?\n    int id = j[\"id\"];\n\n    // This works fine, but it causes some overhead (not really important though).\n    // Besides, it is not pretty and kinda bloated. It will also have to handle possible\n    // null values in some way.\n    std::string sId = j[\"id\"];\n    int nId = std::stoi(sId);\n\n    // This is fine, of course.\n    std::string name = j[\"name\"];\n\n    // Run some SQLite queries with the data.\n}\n```\n\nIt is of course also possible to fix this on the server side, but as far as I have been able to figure out it is rather painful and I would like to stay clear of PHP if possible.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/340", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/340/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/340/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/340/events", "html_url": "https://github.com/nlohmann/json/issues/340", "id": 184405803, "node_id": "MDU6SXNzdWUxODQ0MDU4MDM=", "number": 340, "title": "\"\"-operators ignore the length parameter", "user": {"login": "bisqwit", "id": 39278, "node_id": "MDQ6VXNlcjM5Mjc4", "avatar_url": "https://avatars0.githubusercontent.com/u/39278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bisqwit", "html_url": "https://github.com/bisqwit", "followers_url": "https://api.github.com/users/bisqwit/followers", "following_url": "https://api.github.com/users/bisqwit/following{/other_user}", "gists_url": "https://api.github.com/users/bisqwit/gists{/gist_id}", "starred_url": "https://api.github.com/users/bisqwit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bisqwit/subscriptions", "organizations_url": "https://api.github.com/users/bisqwit/orgs", "repos_url": "https://api.github.com/users/bisqwit/repos", "events_url": "https://api.github.com/users/bisqwit/events{/privacy}", "received_events_url": "https://api.github.com/users/bisqwit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/12", "html_url": "https://github.com/nlohmann/json/milestone/12", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/12/labels", "id": 2071838, "node_id": "MDk6TWlsZXN0b25lMjA3MTgzOA==", "number": 12, "title": "Release 2.0.7", "description": "The next release if backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior.\r\n", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "closed", "created_at": "2016-10-15T14:53:41Z", "updated_at": "2016-11-02T19:58:08Z", "due_on": "2016-11-02T07:00:00Z", "closed_at": "2016-11-02T19:58:08Z"}, "comments": 1, "created_at": "2016-10-21T06:01:22Z", "updated_at": "2016-11-13T22:37:59Z", "closed_at": "2016-10-22T18:57:03Z", "author_association": "NONE", "body": "The operator\"\"_json() and operator\"\"_json_pointer() seem to be ignoring the length parameter generated by the compiler. While this works, the string constant will be used to construct a std::string at least in json_pointer(), and it would be slightly more efficient to pass the length parameter to the std::string constructor, so it does not need to do a strlen-operation to determine how much space to allocate for the string.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/339", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/339/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/339/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/339/events", "html_url": "https://github.com/nlohmann/json/issues/339", "id": 184263130, "node_id": "MDU6SXNzdWUxODQyNjMxMzA=", "number": 339, "title": "JSON into std::tuple", "user": {"login": "ibitton", "id": 5803288, "node_id": "MDQ6VXNlcjU4MDMyODg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5803288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibitton", "html_url": "https://github.com/ibitton", "followers_url": "https://api.github.com/users/ibitton/followers", "following_url": "https://api.github.com/users/ibitton/following{/other_user}", "gists_url": "https://api.github.com/users/ibitton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibitton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibitton/subscriptions", "organizations_url": "https://api.github.com/users/ibitton/orgs", "repos_url": "https://api.github.com/users/ibitton/repos", "events_url": "https://api.github.com/users/ibitton/events{/privacy}", "received_events_url": "https://api.github.com/users/ibitton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-20T15:32:01Z", "updated_at": "2016-10-20T20:49:51Z", "closed_at": "2016-10-20T20:49:51Z", "author_association": "NONE", "body": "I've visited previous issues mentioning tuple/user-defined types/etc and I thought it would be awesome if I could do something like this:\n`json myJSON;`\n`myJSON[\"stringKey\"] = \"stringVal\";`\n`myJSON[\"intKey\"] = 5;`\n`myJSON[\"customKey\"] = myCustomObj; //this is not really needed for my use case`\n`auto myTuple = myJSON.get<tuple<string, int, MyType /* again, not super necessary */>();`\nI'm not 100% sure this is the right way about it, but I think my objective is clear: have a way to store/retrieve (serialize/deserialize) a dictionary/map with custom types and then get those types back automagically.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/335", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/335/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/335/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/335/events", "html_url": "https://github.com/nlohmann/json/issues/335", "id": 183232447, "node_id": "MDU6SXNzdWUxODMyMzI0NDc=", "number": 335, "title": "JSON into vector", "user": {"login": "Lerian715", "id": 22860803, "node_id": "MDQ6VXNlcjIyODYwODAz", "avatar_url": "https://avatars3.githubusercontent.com/u/22860803?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lerian715", "html_url": "https://github.com/Lerian715", "followers_url": "https://api.github.com/users/Lerian715/followers", "following_url": "https://api.github.com/users/Lerian715/following{/other_user}", "gists_url": "https://api.github.com/users/Lerian715/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lerian715/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lerian715/subscriptions", "organizations_url": "https://api.github.com/users/Lerian715/orgs", "repos_url": "https://api.github.com/users/Lerian715/repos", "events_url": "https://api.github.com/users/Lerian715/events{/privacy}", "received_events_url": "https://api.github.com/users/Lerian715/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-10-15T20:54:00Z", "updated_at": "2016-10-23T21:13:21Z", "closed_at": "2016-10-23T21:13:21Z", "author_association": "NONE", "body": "Hi!\nIs it possible to convert directly stream into vector? For eg.\nload file with JSON >> create vector on this data\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/333", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/333/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/333/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/333/events", "html_url": "https://github.com/nlohmann/json/issues/333", "id": 183207007, "node_id": "MDU6SXNzdWUxODMyMDcwMDc=", "number": 333, "title": "How to handle json files?", "user": {"login": "himanshub16", "id": 14041572, "node_id": "MDQ6VXNlcjE0MDQxNTcy", "avatar_url": "https://avatars0.githubusercontent.com/u/14041572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/himanshub16", "html_url": "https://github.com/himanshub16", "followers_url": "https://api.github.com/users/himanshub16/followers", "following_url": "https://api.github.com/users/himanshub16/following{/other_user}", "gists_url": "https://api.github.com/users/himanshub16/gists{/gist_id}", "starred_url": "https://api.github.com/users/himanshub16/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/himanshub16/subscriptions", "organizations_url": "https://api.github.com/users/himanshub16/orgs", "repos_url": "https://api.github.com/users/himanshub16/repos", "events_url": "https://api.github.com/users/himanshub16/events{/privacy}", "received_events_url": "https://api.github.com/users/himanshub16/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-15T12:24:13Z", "updated_at": "2016-10-15T12:39:56Z", "closed_at": "2016-10-15T12:39:16Z", "author_association": "NONE", "body": "I tried handling files, but it lead to runtime errors. Could you please help me figure out the bug?\n\n`#include <iostream>`\n`#include <fstream>`\n`#include \"json.hpp\"`\n\n`using json = nlohmann::json;`\n`using namespace std;`\n`int main()`\n`{`\n `ifstream file (\"data.json\", ios::in | ios::ate);`\n`if (!file.is_open()) return 1;`\n`    `\n`     streampos size = file.tellg(); `\n`     file.seekg(0, ios::beg);`\n`     char *memblock = new char[size]; `\n`     file.read(memblock, size); `\n`     file.close();`\n\n`json data = json::parse(memblock);`\n`     `\n`     // another approach `\n`     string s = memblock;`\n`     json data = json::parse(s); `\n`    // or  `\n`     json data = json::parse(s.c_str()); `\n` ...`\n\nAll three methods to initialize json give runtime error : \n`terminate called after throwing an instance of 'std::invalid_argument'\n  what():  parse error - unexpected number literal; expected string literal\n[1]    8754 abort (core dumped)  ./a.out\n`\n\nThe json file is \n`{ 1 : { \"name\": \"himanshu\" }, 2 : { \"name\":\"shekhar\" } }`\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/332", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/332/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/332/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/332/events", "html_url": "https://github.com/nlohmann/json/issues/332", "id": 183147204, "node_id": "MDU6SXNzdWUxODMxNDcyMDQ=", "number": 332, "title": "This file requires compiler and library support ....", "user": {"login": "vertisan", "id": 7668637, "node_id": "MDQ6VXNlcjc2Njg2Mzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7668637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vertisan", "html_url": "https://github.com/vertisan", "followers_url": "https://api.github.com/users/vertisan/followers", "following_url": "https://api.github.com/users/vertisan/following{/other_user}", "gists_url": "https://api.github.com/users/vertisan/gists{/gist_id}", "starred_url": "https://api.github.com/users/vertisan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vertisan/subscriptions", "organizations_url": "https://api.github.com/users/vertisan/orgs", "repos_url": "https://api.github.com/users/vertisan/repos", "events_url": "https://api.github.com/users/vertisan/events{/privacy}", "received_events_url": "https://api.github.com/users/vertisan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-10-14T20:49:53Z", "updated_at": "2016-10-15T10:41:22Z", "closed_at": "2016-10-15T10:41:22Z", "author_association": "NONE", "body": "Hi,\nI trying to use your library but when I trying to compile example I getting error:\n`error This file requires compiler and library support for the \\\nISO C++ 2011 standard. This support is currently experimental, and must be \\\nenabled with the -std=c++11 or -std=gnu++11 compiler options.`\nI'm using Dev C++ 5.11. I setted language standard into ISO C++ 11 but I getting still the same error.\nWhat is bad?\n\nWindows 10 Home x64\nDev C++ 5.11\nTDM-GCC 4.9.2 64-bit Release\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/331", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/331/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/331/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/331/events", "html_url": "https://github.com/nlohmann/json/issues/331", "id": 183130194, "node_id": "MDU6SXNzdWUxODMxMzAxOTQ=", "number": 331, "title": "Installing with Homebrew on Mac Errors (El Capitan)", "user": {"login": "jsuit", "id": 1467906, "node_id": "MDQ6VXNlcjE0Njc5MDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1467906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsuit", "html_url": "https://github.com/jsuit", "followers_url": "https://api.github.com/users/jsuit/followers", "following_url": "https://api.github.com/users/jsuit/following{/other_user}", "gists_url": "https://api.github.com/users/jsuit/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsuit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsuit/subscriptions", "organizations_url": "https://api.github.com/users/jsuit/orgs", "repos_url": "https://api.github.com/users/jsuit/repos", "events_url": "https://api.github.com/users/jsuit/events{/privacy}", "received_events_url": "https://api.github.com/users/jsuit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-14T19:19:24Z", "updated_at": "2016-10-23T07:03:29Z", "closed_at": "2016-10-23T00:14:07Z", "author_association": "NONE", "body": "I install with homebrew as readme said. But when I insert #include \"json.hpp\" into the top of my file, I get a long list of errors when I try to compile:\n\nIn file included from twitterClient.cpp:2:\n/usr/local/include/json.hpp:118:12: error: unknown type name 'constexpr'\n    static constexpr bool value = sizeof(test<T>(0)) == 1;\n\n/usr/local/include/json.hpp:118:22: error: expected member name or ';' after\n      declaration specifiers\n    static constexpr bool value = sizeof(test<T>(0)) == 1;\n\n/usr/local/include/json.hpp:391:21: error: a space is required between\n      consecutive right angle brackets (use '> >')\n          basic_json>>>;\n                    ^\n/usr/local/include/json.hpp:437:67: error: a space is required between\n      consecutive right angle brackets (use '> >')\n    using array_t = ArrayType<basic_json, AllocatorType<basic_json>>;\n                                                                  ^\n/usr/local/include/json.hpp:752:16: error: ISO C++ forbids forward references to\n      'enum' types\n    enum class value_t : uint8_t\n               ^\n/usr/local/include/json.hpp:753:5: error: expected '(' for function-style cast\n      or type construction\n    {\n    ^\n/usr/local/include/json.hpp:831:32: error: expected ';' at end of declaration\n      list\n        json_value(boolean_t v) noexcept : boolean(v) {}\n                               ^\n/usr/local/include/json.hpp:942:16: error: ISO C++ forbids forward references to\n      'enum' types\n    enum class parse_event_t : uint8_t\n               ^\n/usr/local/include/json.hpp:943:5: error: expected '(' for function-style cast\n      or type construction\n    {\n    ^\n/usr/local/include/json.hpp:1087:41: error: expected ';' at end of declaration\n      list\n    basic_json(std::nullptr_t = nullptr) noexcept\n                                        ^\n/usr/local/include/json.hpp:2986:38: error: too many arguments provided to\n      function-like macro invocation\n            or std::is_same<array_t, pointee_t>::value\n                                     ^\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/__config:596:9: note: \n      macro 'static_assert' defined here\n# define static_assert(__b, __m) \\\n\n....\n\nWhat is giving me these errors\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/330", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/330/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/330/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/330/events", "html_url": "https://github.com/nlohmann/json/issues/330", "id": 183116112, "node_id": "MDU6SXNzdWUxODMxMTYxMTI=", "number": 330, "title": "UTF-8/Unicode escape and dump", "user": {"login": "esproof", "id": 18564826, "node_id": "MDQ6VXNlcjE4NTY0ODI2", "avatar_url": "https://avatars2.githubusercontent.com/u/18564826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esproof", "html_url": "https://github.com/esproof", "followers_url": "https://api.github.com/users/esproof/followers", "following_url": "https://api.github.com/users/esproof/following{/other_user}", "gists_url": "https://api.github.com/users/esproof/gists{/gist_id}", "starred_url": "https://api.github.com/users/esproof/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esproof/subscriptions", "organizations_url": "https://api.github.com/users/esproof/orgs", "repos_url": "https://api.github.com/users/esproof/repos", "events_url": "https://api.github.com/users/esproof/events{/privacy}", "received_events_url": "https://api.github.com/users/esproof/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 2, "created_at": "2016-10-14T18:12:26Z", "updated_at": "2017-07-12T05:59:53Z", "closed_at": "2017-07-12T05:59:53Z", "author_association": "NONE", "body": "## example:\r\n\r\n```cpp\r\njson js = json::parse(R\"({ \"escaped\" : \"\\u6211\\u662f\\u4e2d\\u56fd\\u4eba\" })\");\r\nstd::cout << js.dump() << std::endl;\r\n```\r\n\r\nresult (as utf-8): \r\n`{\"escaped\":\"\u6211\u662f\u4e2d\u56fd\u4eba\"}`\r\n### question:\r\n\r\nHow can I get the same result as the entered string?\r\nsuch as: \r\n`{\"escaped\":\"\\u6211\\u662f\\u4e2d\\u56fd\\u4eba\"}`\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/329", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/329/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/329/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/329/events", "html_url": "https://github.com/nlohmann/json/issues/329", "id": 182672472, "node_id": "MDU6SXNzdWUxODI2NzI0NzI=", "number": 329, "title": "Serialized value not always can be parsed.", "user": {"login": "vitalybuka", "id": 1531415, "node_id": "MDQ6VXNlcjE1MzE0MTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1531415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vitalybuka", "html_url": "https://github.com/vitalybuka", "followers_url": "https://api.github.com/users/vitalybuka/followers", "following_url": "https://api.github.com/users/vitalybuka/following{/other_user}", "gists_url": "https://api.github.com/users/vitalybuka/gists{/gist_id}", "starred_url": "https://api.github.com/users/vitalybuka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vitalybuka/subscriptions", "organizations_url": "https://api.github.com/users/vitalybuka/orgs", "repos_url": "https://api.github.com/users/vitalybuka/repos", "events_url": "https://api.github.com/users/vitalybuka/events{/privacy}", "received_events_url": "https://api.github.com/users/vitalybuka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 6, "created_at": "2016-10-13T01:21:52Z", "updated_at": "2017-03-12T18:11:41Z", "closed_at": "2017-03-12T18:11:41Z", "author_association": "NONE", "body": "I assume that if value was parsed without exception it should be serializable and parsables again.\n\n``` cpp\n    std::stringstream s;\n    s << json::parse(\"22e2222\");  // I'd expect exception here\n    try {\n      auto j2 = json::parse(s.str()); \n    } catch (const std::invalid_argument&) { \n      std::cerr << std::string{data, data + size} << \" -> \"\n      << s.str() << \"\\n\";\n      assert(0);\n    }\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/328", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/328/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/328/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/328/events", "html_url": "https://github.com/nlohmann/json/issues/328", "id": 182565175, "node_id": "MDU6SXNzdWUxODI1NjUxNzU=", "number": 328, "title": "Add a customization point for user-defined types", "user": {"login": "theodelrieu", "id": 15652306, "node_id": "MDQ6VXNlcjE1NjUyMzA2", "avatar_url": "https://avatars1.githubusercontent.com/u/15652306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theodelrieu", "html_url": "https://github.com/theodelrieu", "followers_url": "https://api.github.com/users/theodelrieu/followers", "following_url": "https://api.github.com/users/theodelrieu/following{/other_user}", "gists_url": "https://api.github.com/users/theodelrieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/theodelrieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theodelrieu/subscriptions", "organizations_url": "https://api.github.com/users/theodelrieu/orgs", "repos_url": "https://api.github.com/users/theodelrieu/repos", "events_url": "https://api.github.com/users/theodelrieu/events{/privacy}", "received_events_url": "https://api.github.com/users/theodelrieu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/4", "html_url": "https://github.com/nlohmann/json/milestone/4", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/4/labels", "id": 1836706, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwNg==", "number": 4, "title": "Release 2.1.0", "description": "The next release if new, backwards compatible functionality is introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 10, "state": "closed", "created_at": "2016-06-19T16:06:39Z", "updated_at": "2017-01-28T17:45:05Z", "due_on": "2017-01-28T08:00:00Z", "closed_at": "2017-01-28T17:45:05Z"}, "comments": 30, "created_at": "2016-10-12T16:00:25Z", "updated_at": "2017-01-27T05:24:10Z", "closed_at": "2017-01-27T05:24:10Z", "author_association": "CONTRIBUTOR", "body": "Hi, I think it would be a cool addition to the library if there was a way to specify a conversion method, from a type to `basic_json`, which would be called by the lib.\n\nHere a sample code of the behaviour I'm thinking about:\n\n``` cpp\n// library code\ntemplate <typename UserDefinedType>\nstruct json_traits;\n\n// user code\ntemplate <>\nstruct json_traits<MyType>\n{\n  static basic_json convert(MyType const& val)\n  {\n    return {{\"first_row\", val.first_row}, {\"some_value\", 42}};\n  }\n};\n```\n\nThere could also be a conversion method when `get` is called\n\n``` cpp\nauto obj = json::parse(buffer);\nauto val = obj[\"user_defined_type_value\"].get<MyType>();\n```\n\nThese are just thoughts for now, but that would remove a LOT of boilerplate in my code.\nPlus, this would add some compile-time checks (if the struct is not defined for example)\nWhat's your opinion on that?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/326", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/326/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/326/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/326/events", "html_url": "https://github.com/nlohmann/json/issues/326", "id": 182217269, "node_id": "MDU6SXNzdWUxODIyMTcyNjk=", "number": 326, "title": "Segmentation fault on saving json to file", "user": {"login": "j-o-d-o", "id": 15958535, "node_id": "MDQ6VXNlcjE1OTU4NTM1", "avatar_url": "https://avatars0.githubusercontent.com/u/15958535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j-o-d-o", "html_url": "https://github.com/j-o-d-o", "followers_url": "https://api.github.com/users/j-o-d-o/followers", "following_url": "https://api.github.com/users/j-o-d-o/following{/other_user}", "gists_url": "https://api.github.com/users/j-o-d-o/gists{/gist_id}", "starred_url": "https://api.github.com/users/j-o-d-o/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j-o-d-o/subscriptions", "organizations_url": "https://api.github.com/users/j-o-d-o/orgs", "repos_url": "https://api.github.com/users/j-o-d-o/repos", "events_url": "https://api.github.com/users/j-o-d-o/events{/privacy}", "received_events_url": "https://api.github.com/users/j-o-d-o/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-10-11T09:31:57Z", "updated_at": "2016-10-25T11:25:34Z", "closed_at": "2016-10-11T10:57:43Z", "author_association": "NONE", "body": "I get a segmentation fault when saving a json data object to a file like this:\n\n``` cpp\n#include <iostream>\n#include <fstream>\n#include \"json.hpp\"\n\nbool SaveToFile(nlohmann::json data) {\n    std::ofstream jsonFile;\n\n    jsonFile.open(\"testFile.json\" , std::ofstream::out | std::ofstream::trunc);\n    jsonFile << data;\n    jsonFile.close();\n\n    return true;\n}\n\nint main() {\n    std::cout << \"========== Start Application ===========\" << std::endl;\n\n    return 0;\n}\n```\n\nThe problem is, I cant even debug anything. Because even if I don't use the function I get the segmentation fault. \nWhen changing: `jsonFile << data;` to `jsonFile << \"Test String\";`, I dont get any errors.\n\nI am using Visual GDB with gcc 4.9.2 (from here: http://gnutoolchains.com/raspberry/).\n\nPlease ask if any other information or clarification is needed!\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/325", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/325/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/325/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/325/events", "html_url": "https://github.com/nlohmann/json/issues/325", "id": 181890770, "node_id": "MDU6SXNzdWUxODE4OTA3NzA=", "number": 325, "title": "parse error - unexpected <uninitialized> with 2.0.5", "user": {"login": "alvarolb", "id": 1141353, "node_id": "MDQ6VXNlcjExNDEzNTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1141353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alvarolb", "html_url": "https://github.com/alvarolb", "followers_url": "https://api.github.com/users/alvarolb/followers", "following_url": "https://api.github.com/users/alvarolb/following{/other_user}", "gists_url": "https://api.github.com/users/alvarolb/gists{/gist_id}", "starred_url": "https://api.github.com/users/alvarolb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alvarolb/subscriptions", "organizations_url": "https://api.github.com/users/alvarolb/orgs", "repos_url": "https://api.github.com/users/alvarolb/repos", "events_url": "https://api.github.com/users/alvarolb/events{/privacy}", "received_events_url": "https://api.github.com/users/alvarolb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-10-09T14:48:54Z", "updated_at": "2016-10-10T18:07:10Z", "closed_at": "2016-10-10T18:05:45Z", "author_association": "NONE", "body": "Hi,\n\nI have been using this library for a long time now. Today, after updating to 2.05, my program started to crash while parsing a simple JSON file. Here is the sample json:\n\n``` json\n{\n    \"http_server\" : {\n      \"address\" : \"0.0.0.0\",\n      \"port\" : \"8080\",\n      \"hosts\" : [\n        {\n            \"host\": \"*\",\n            \"type\":\"rest\"\n        }\n      ]\n    },\n\n    \"thing_server\" : {\n      \"address\" : \"0.0.0.0\",\n      \"port\" : \"25200\"\n    },\n\n    \"database\" : {\n        \"type\" : \"mongodb\",\n        \"mongodb\" : {\n            \"host\" : \"localhost\",\n            \"password\" : \"\"\n        }\n    },\n\n    \"buckets\" : {\n        \"storage\" : {\n            \"type\" : \"mongodb\",\n            \"mongodb\" : {\n                \"host\" : \"localhost\",\n                \"password\" : \"\",\n                \"database\" : \"thinger_data\",\n                \"table\" : \"buckets_data\"\n            }\n        },\n        \"export\" : {\n            \"type\" : \"filesystem\",\n            \"filesystem\" : {\n                \"export_path\": \"/Users/alvarolb/Desktop/buckets_exports\"\n            }\n        }\n    },\n\n    \"log\" : {\n        \"enabled\" : true,\n        \"level\" : \"debug\",\n        \"output\" : {\n            \"file\" : {\n                \"enabled\" : false,\n                \"flush\" : false\n            },\n            \"clog\" : {\n                \"enabled\" : true\n            }\n        }\n    },\n\n    \"accounts\" : {\n      \"invalid_usernames\" : [\"admin\", \"moderator\", \"administrator\", \"mod\", \"sys\", \"system\", \"community\", \"info\", \"you\", \"name\", \"me\", \"username\", \"user\", \"nickname\", \"thinger\", \"root\"],\n      \"invalid_email_domains\" : [\"mailinator.com\"],\n      \"required_email_domains\" : [],\n      \"require_email_verification\": true,\n      \"min_password_length\" : 6\n    }\n}\n```\n\nThe code is something like:\n\n``` cpp\nstd::ifstream file(\"config.json\");\nstd::string json_config_str((std::istreambuf_iterator<char>(file)), std::istreambuf_iterator<char>());\nfile.close();\nnlohmann::json config = nlohmann::json::parse(json_config_str);\n```\n\nThe error given is:\n`libc++abi.dylib: terminating with uncaught exception of type std::invalid_argument: parse error - unexpected <uninitialized>\n`\n\nI have tested the same code with 2.04, and 2.03, and I am still getting the same error. Meanwhile, I have switch back to 2.02 that was working fine with this file. I have tested that the JSON is valid also.\n\nThanks for your support and your awesome work!\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/323", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/323/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/323/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/323/events", "html_url": "https://github.com/nlohmann/json/issues/323", "id": 181556121, "node_id": "MDU6SXNzdWUxODE1NTYxMjE=", "number": 323, "title": "Add nested object capability to pointers", "user": {"login": "clwill", "id": 1330725, "node_id": "MDQ6VXNlcjEzMzA3MjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1330725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clwill", "html_url": "https://github.com/clwill", "followers_url": "https://api.github.com/users/clwill/followers", "following_url": "https://api.github.com/users/clwill/following{/other_user}", "gists_url": "https://api.github.com/users/clwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/clwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clwill/subscriptions", "organizations_url": "https://api.github.com/users/clwill/orgs", "repos_url": "https://api.github.com/users/clwill/repos", "events_url": "https://api.github.com/users/clwill/events{/privacy}", "received_events_url": "https://api.github.com/users/clwill/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/11", "html_url": "https://github.com/nlohmann/json/milestone/11", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/11/labels", "id": 2005208, "node_id": "MDk6TWlsZXN0b25lMjAwNTIwOA==", "number": 11, "title": "Release 2.0.6", "description": "The next release if backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 7, "state": "closed", "created_at": "2016-09-14T21:13:16Z", "updated_at": "2016-10-15T14:53:31Z", "due_on": "2016-10-15T07:00:00Z", "closed_at": "2016-10-15T14:53:31Z"}, "comments": 14, "created_at": "2016-10-07T00:17:48Z", "updated_at": "2016-11-13T22:37:59Z", "closed_at": "2016-10-12T19:59:36Z", "author_association": "NONE", "body": "You currently can create a new object with\n\n``` cpp\nj[\"this\"][\"that\"] = 27;\n```\n\nand if `this` and/or `that` don't exist, it's all good, it creates `this` as an object and puts `that` in it.\n\nBut if you use pointers (e.g. `\"/this/that\"`) it throws an exception if `this` doesn't exist.\n\nFor example:\n\n``` cpp\nj.at(\"/this/that\"_json_pointer) = 27;\n```\n\nwould be nice.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/322", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/322/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/322/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/322/events", "html_url": "https://github.com/nlohmann/json/issues/322", "id": 180935386, "node_id": "MDU6SXNzdWUxODA5MzUzODY=", "number": 322, "title": "Fix usage examples' comments for std::multiset", "user": {"login": "vasild", "id": 266751, "node_id": "MDQ6VXNlcjI2Njc1MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/266751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vasild", "html_url": "https://github.com/vasild", "followers_url": "https://api.github.com/users/vasild/followers", "following_url": "https://api.github.com/users/vasild/following{/other_user}", "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}", "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vasild/subscriptions", "organizations_url": "https://api.github.com/users/vasild/orgs", "repos_url": "https://api.github.com/users/vasild/repos", "events_url": "https://api.github.com/users/vasild/events{/privacy}", "received_events_url": "https://api.github.com/users/vasild/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/11", "html_url": "https://github.com/nlohmann/json/milestone/11", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/11/labels", "id": 2005208, "node_id": "MDk6TWlsZXN0b25lMjAwNTIwOA==", "number": 11, "title": "Release 2.0.6", "description": "The next release if backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 7, "state": "closed", "created_at": "2016-09-14T21:13:16Z", "updated_at": "2016-10-15T14:53:31Z", "due_on": "2016-10-15T07:00:00Z", "closed_at": "2016-10-15T14:53:31Z"}, "comments": 1, "created_at": "2016-10-04T16:01:44Z", "updated_at": "2016-10-07T07:17:07Z", "closed_at": "2016-10-06T20:39:50Z", "author_association": "CONTRIBUTOR", "body": "I guess an issue is not necessary for this trivial fixup, but nevertheless I follow what's written in .github/CONTRIBUTING.md.\n\nThe pull request is in https://github.com/nlohmann/json/pull/321\n"}]