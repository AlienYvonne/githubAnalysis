[{"url": "https://api.github.com/repos/nlohmann/json/issues/440", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/440/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/440/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/440/events", "html_url": "https://github.com/nlohmann/json/issues/440", "id": 204190544, "node_id": "MDU6SXNzdWUyMDQxOTA1NDQ=", "number": 440, "title": "json::value(const json_pointer&, ValueType) requires exceptions to return the default value.", "user": {"login": "rupertsteel", "id": 541398, "node_id": "MDQ6VXNlcjU0MTM5OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/541398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rupertsteel", "html_url": "https://github.com/rupertsteel", "followers_url": "https://api.github.com/users/rupertsteel/followers", "following_url": "https://api.github.com/users/rupertsteel/following{/other_user}", "gists_url": "https://api.github.com/users/rupertsteel/gists{/gist_id}", "starred_url": "https://api.github.com/users/rupertsteel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rupertsteel/subscriptions", "organizations_url": "https://api.github.com/users/rupertsteel/orgs", "repos_url": "https://api.github.com/users/rupertsteel/repos", "events_url": "https://api.github.com/users/rupertsteel/events{/privacy}", "received_events_url": "https://api.github.com/users/rupertsteel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}, {"id": 344572510, "node_id": "MDU6TGFiZWwzNDQ1NzI1MTA=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20help%20needed", "name": "state: help needed", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-01-31T02:41:03Z", "updated_at": "2017-03-28T23:03:54Z", "closed_at": "2017-03-28T23:03:54Z", "author_association": "NONE", "body": "json::value(const json_pointer&, ValueType) is defined as:\r\n```c++\r\ntemplate<class ValueType, typename std::enable_if<\r\n             std::is_convertible<basic_json_t, ValueType>::value, int>::type = 0>\r\nValueType value(const json_pointer& ptr, ValueType default_value) const\r\n{\r\n    // at only works for objects\r\n    if (is_object())\r\n    {\r\n        // if pointer resolves a value, return it or use default value\r\n        JSON_TRY\r\n        {\r\n            return ptr.get_checked(this);\r\n        }\r\n        JSON_CATCH (std::out_of_range&)\r\n        {\r\n            return default_value;\r\n        }\r\n    }\r\n\r\n    JSON_THROW(std::domain_error(\"cannot use value() with \" + type_name()));\r\n}\r\n```\r\n\r\nIf exceptions are disabled, `JSON_TRY` turns into `if (true)` and `JSON_CATCH` turns into `if (false)`, this means that the default value will never be returned if exceptions are turned off."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/438", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/438/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/438/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/438/events", "html_url": "https://github.com/nlohmann/json/issues/438", "id": 203782687, "node_id": "MDU6SXNzdWUyMDM3ODI2ODc=", "number": 438, "title": "Parsing multiple JSON objects from a string or stream", "user": {"login": "szikra", "id": 8597510, "node_id": "MDQ6VXNlcjg1OTc1MTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/8597510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/szikra", "html_url": "https://github.com/szikra", "followers_url": "https://api.github.com/users/szikra/followers", "following_url": "https://api.github.com/users/szikra/following{/other_user}", "gists_url": "https://api.github.com/users/szikra/gists{/gist_id}", "starred_url": "https://api.github.com/users/szikra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/szikra/subscriptions", "organizations_url": "https://api.github.com/users/szikra/orgs", "repos_url": "https://api.github.com/users/szikra/repos", "events_url": "https://api.github.com/users/szikra/events{/privacy}", "received_events_url": "https://api.github.com/users/szikra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-28T02:39:53Z", "updated_at": "2017-01-28T09:22:25Z", "closed_at": "2017-01-28T09:11:57Z", "author_association": "NONE", "body": "Hi, I just started using your library, so far I like your design, but I run into this problem. \r\n\r\nExample input (received from TCP socket):\r\n\r\n> {\"data\":[164,227,155,136],\"dir\":\"rx\"}{\"data\":[249,88,104,174],\"dir\":\"rx\"}{\"data\":[148,105,74,58],\"dir\":\"rx\"}\r\n\r\nCode fragment:\r\n```\r\n        string smsg((char*)buff, len);\r\n        if (debuglevel_&1) cout << \"Raw data Str: \" << smsg << endl;\r\n        json jmsg = json::parse(smsg);\r\n```\r\n\r\nAlternative code:\r\n```\r\n        stringstream ss;\r\n        ss<<smsg;\r\n        while (! ss.eof()) {\r\n            json jmsg;\r\n            ss >> jmsg;\r\n```\r\n\r\nOutput:\r\n\r\n> parse error - unexpected '{'; expected end of input\r\n\r\n\r\nExpected result:\r\nI would like to be able to parse multiple concatenated JSON strings.\r\n\r\nA possible implementation could be if the result were an array of json objects. like \u2018[{\u2026},{\u2026},{\u2026}]\u2019\r\nThis could be achieved by replacing \u2018}{\u2018 with \u2018},{\u2018 and inserting a \u2018[\u2018 and a \u2018]\u2019 at the beginning and ending of the string. (My current workaround.) But this is not a very robust implementation, would need to replace all possible \u2018}\\r\\n{\u2018 \u2026 variant, not to mention strings containing \u201c}{\u201d. Also not very efficient, needs to pseudo pre parse the input. (It would help somewhat if json could accept whitespace* separated objects in arrays not requiring comma, though that would not be valid JSON. This could be a relaxed parsing, instead of strict.)\r\n\r\nSecond possible implementation (preferred IMHO) for the parsing to be resumable. Meaning extract one JSON object from a stream, leave the read position and start from there the next time. Or in case if it\u2019s a string provide a method to query how much characters were processed, so that part can be \u201cremoved\u201d from the input string and the rest can be parsed again. (Like: `string smsg ((char*)&buff[position], len-position); \u2026 position+=jmsg.??`)\r\n\r\nI have found these related issues:\r\n#367\r\n#210  \r\nThe suggested workaround here (counting matching \u2018{\u2018 \u2019}\u2019 would not work if any string inside the JSON contained non matching \u2018{\u2018,\u2019}\u2019 characters like \"{\\\"test3\\\":\\\"}\\\"}\").\r\n\r\nThank you for all your work and efforts.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/437", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/437/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/437/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/437/events", "html_url": "https://github.com/nlohmann/json/issues/437", "id": 203662420, "node_id": "MDU6SXNzdWUyMDM2NjI0MjA=", "number": 437, "title": "Use-of-uninitialized-value (OSS-Fuzz issue 477)", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-01-27T15:25:14Z", "updated_at": "2017-01-28T09:09:06Z", "closed_at": "2017-01-28T09:09:06Z", "author_association": "OWNER", "body": "```\r\nDetailed report: https://clusterfuzz-external.appspot.com/testcase?key=5830738947604480\r\n\r\nProject: json\r\nFuzzer: libFuzzer_json_parse_afl_fuzzer\r\nFuzz target binary: parse_afl_fuzzer\r\nJob Type: libfuzzer_msan_json\r\nPlatform Id: linux\r\n\r\nCrash Type: Use-of-uninitialized-value\r\nCrash Address: \r\nCrash State:\r\n__gxx_personality_v0\r\n_Unwind_RaiseException\r\n__cxa_throw\r\n\r\nSanitizer: memory (MSAN)\r\n\r\nRecommended Security Severity: Medium\r\n\r\nRegressed: https://clusterfuzz-external.appspot.com/revisions?job=libfuzzer_msan_json&range=201701270147:201701270541\r\n\r\nMinimized Testcase (0.05 Kb):\r\nDownload: https://clusterfuzz-external.appspot.com/download/AMIfv97uPDkobmdCxNESfNAohSeKQ8tsx1Ni5ug5EFQiWitRVK0y8ZnwzVJbr_pYJ3F_AivTjP2p-JUbq4W_VLT5OHU9WofkuRuvvVW-MPD61NHqyu24muu3Q9JHinl8GLO7_btgUfOV8iG5SPQGnGexHBjzCyrYGTlLsZKZbf2VkqpROCpySlZngCslMz3osZixYVsySBUr0oWEUL4jUeEhM-fb_HCXufyiUTGG8rAYPGvMA5tEthCSO-s0d10q_HJWFuYcZeYGIjgcXWf2z06h_0_jCoN-YZv-aJi97KGchkJwsLfE4a0POiWJtChJCnu0OYSKSQbE4IUMafDxz-2FwzQiLkBRH3rxYJbNpoj_YjbUdrndvdTmWOiV-moaPHKUAz0VxyZT?testcase_id=5830738947604480\r\n{\"(V[V[\":8,\"[\":8,\"V[\":8,\"[V[\":8,\"VV[\":8,\"[V[\":8,\"V[[[\"\r\n\r\n\r\nIssue filed automatically.\r\n\r\nSee https://github.com/google/oss-fuzz/blob/master/docs/reproducing.md for more information.\r\n\r\nThis bug is subject to a 90 day disclosure deadline. If 90 days elapse\r\nwithout an upstream patch, then the bug report will automatically\r\nbecome visible to the public.\r\n```\r\n\r\nInput: `{\"(V[V[\":8,\"[\":8,\"V[\":8,\"[V[\":8,\"VV[\":8,\"[V[\":8,\"V[[[\"`\r\n\r\n```\r\n==1==WARNING: MemorySanitizer: use-of-uninitialized-value\r\n#0 0xf1859f in __gxx_personality_v0 /src/llvm/projects/libcxxabi/src/cxa_personality.cpp:947:22\r\n#1 0x7f25b9f5c262 in _Unwind_RaiseException\r\n#2 0xf1ba09 in __cxa_throw /src/llvm/projects/libcxxabi/src/cxa_exception.cpp:222:5\r\n#3 0xcf9473 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::parser::expect(nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::lexer::token_type) const /src/json/src/json.hpp:11281:17\r\n#4 0xceba4f in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::parser::parse_internal(bool) /src/json/src/json.hpp:11134:25\r\n#5 0xce4f50 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::parser::parse() /src/json/src/json.hpp:11060:33\r\n#6 0xca1986 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer> nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::parse<unsigned char const*, 0>(unsigned char const*, unsigned char const*, std::__1::function<bool (int, nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::parse_event_t, nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>&)>) /src/json/src/json.hpp:6461:40\r\n#7 0xc9b2dc in LLVMFuzzerTestOneInput /src/json/test/src/fuzzer-parse_json.cpp:34:19\r\n#8 0x784e36 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:550:13\r\n#9 0x788aef in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:501:3\r\n``"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/436", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/436/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/436/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/436/events", "html_url": "https://github.com/nlohmann/json/issues/436", "id": 202897120, "node_id": "MDU6SXNzdWUyMDI4OTcxMjA=", "number": 436, "title": "add `reserve` function for array to reserve memory before adding json values into it", "user": {"login": "fnc12", "id": 6009640, "node_id": "MDQ6VXNlcjYwMDk2NDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/6009640?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fnc12", "html_url": "https://github.com/fnc12", "followers_url": "https://api.github.com/users/fnc12/followers", "following_url": "https://api.github.com/users/fnc12/following{/other_user}", "gists_url": "https://api.github.com/users/fnc12/gists{/gist_id}", "starred_url": "https://api.github.com/users/fnc12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fnc12/subscriptions", "organizations_url": "https://api.github.com/users/fnc12/orgs", "repos_url": "https://api.github.com/users/fnc12/repos", "events_url": "https://api.github.com/users/fnc12/events{/privacy}", "received_events_url": "https://api.github.com/users/fnc12/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-01-24T18:13:03Z", "updated_at": "2017-01-25T21:18:43Z", "closed_at": "2017-01-25T03:57:38Z", "author_association": "NONE", "body": "`std::vector` has a very useful `reserve` function that is used to preallocate memory for future `push_back`s. It reduces `push_back` time in case if a number of items is high. So it would be useful to add this function to `basic_json` for array `reserve`"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/434", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/434/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/434/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/434/events", "html_url": "https://github.com/nlohmann/json/issues/434", "id": 202409261, "node_id": "MDU6SXNzdWUyMDI0MDkyNjE=", "number": 434, "title": "Typo in examples page", "user": {"login": "EnricoBilla", "id": 25234601, "node_id": "MDQ6VXNlcjI1MjM0NjAx", "avatar_url": "https://avatars1.githubusercontent.com/u/25234601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EnricoBilla", "html_url": "https://github.com/EnricoBilla", "followers_url": "https://api.github.com/users/EnricoBilla/followers", "following_url": "https://api.github.com/users/EnricoBilla/following{/other_user}", "gists_url": "https://api.github.com/users/EnricoBilla/gists{/gist_id}", "starred_url": "https://api.github.com/users/EnricoBilla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EnricoBilla/subscriptions", "organizations_url": "https://api.github.com/users/EnricoBilla/orgs", "repos_url": "https://api.github.com/users/EnricoBilla/repos", "events_url": "https://api.github.com/users/EnricoBilla/events{/privacy}", "received_events_url": "https://api.github.com/users/EnricoBilla/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/4", "html_url": "https://github.com/nlohmann/json/milestone/4", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/4/labels", "id": 1836706, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwNg==", "number": 4, "title": "Release 2.1.0", "description": "The next release if new, backwards compatible functionality is introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 10, "state": "closed", "created_at": "2016-06-19T16:06:39Z", "updated_at": "2017-01-28T17:45:05Z", "due_on": "2017-01-28T08:00:00Z", "closed_at": "2017-01-28T17:45:05Z"}, "comments": 0, "created_at": "2017-01-22T20:56:20Z", "updated_at": "2017-01-27T17:51:01Z", "closed_at": "2017-01-27T17:51:01Z", "author_association": "NONE", "body": "I found you wrote \"il cativo\" instead of \"il cattivo\" in line 11 of this page ( http://nlohmann.github.io/json/classnlohmann_1_1basic__json_a652414dd930cb3af3b6f454cc535a23e.html )\r\n\r\nIt's not a great issue xD"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/433", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/433/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/433/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/433/events", "html_url": "https://github.com/nlohmann/json/issues/433", "id": 202285482, "node_id": "MDU6SXNzdWUyMDIyODU0ODI=", "number": 433, "title": "avoid malformed json", "user": {"login": "whitecloud-sas", "id": 19811482, "node_id": "MDQ6VXNlcjE5ODExNDgy", "avatar_url": "https://avatars1.githubusercontent.com/u/19811482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whitecloud-sas", "html_url": "https://github.com/whitecloud-sas", "followers_url": "https://api.github.com/users/whitecloud-sas/followers", "following_url": "https://api.github.com/users/whitecloud-sas/following{/other_user}", "gists_url": "https://api.github.com/users/whitecloud-sas/gists{/gist_id}", "starred_url": "https://api.github.com/users/whitecloud-sas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whitecloud-sas/subscriptions", "organizations_url": "https://api.github.com/users/whitecloud-sas/orgs", "repos_url": "https://api.github.com/users/whitecloud-sas/repos", "events_url": "https://api.github.com/users/whitecloud-sas/events{/privacy}", "received_events_url": "https://api.github.com/users/whitecloud-sas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-01-21T02:42:08Z", "updated_at": "2017-01-24T14:45:56Z", "closed_at": "2017-01-24T14:45:56Z", "author_association": "NONE", "body": "Hello!\r\n\r\nif I deliver a malformed string like {\"key1\":\"val1\", \"key.... it crashes at json j_complete = json::parse(v_string); line, exists something to check this before parse? thanks!"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/432", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/432/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/432/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/432/events", "html_url": "https://github.com/nlohmann/json/issues/432", "id": 202130930, "node_id": "MDU6SXNzdWUyMDIxMzA5MzA=", "number": 432, "title": "How to add json objects to a map?", "user": {"login": "davidshen84", "id": 65741, "node_id": "MDQ6VXNlcjY1NzQx", "avatar_url": "https://avatars0.githubusercontent.com/u/65741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidshen84", "html_url": "https://github.com/davidshen84", "followers_url": "https://api.github.com/users/davidshen84/followers", "following_url": "https://api.github.com/users/davidshen84/following{/other_user}", "gists_url": "https://api.github.com/users/davidshen84/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidshen84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidshen84/subscriptions", "organizations_url": "https://api.github.com/users/davidshen84/orgs", "repos_url": "https://api.github.com/users/davidshen84/repos", "events_url": "https://api.github.com/users/davidshen84/events{/privacy}", "received_events_url": "https://api.github.com/users/davidshen84/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-01-20T12:38:53Z", "updated_at": "2017-01-22T08:13:44Z", "closed_at": "2017-01-22T08:13:44Z", "author_association": "NONE", "body": "I have an array of json objects.\r\n\r\n    \uff3b{id: 1...},\r\n         {id: 2...}\r\n         ....\r\n      ]\r\n\r\nI want to put each of them into a map<string, ?> for easy look up.\r\n\r\nBut I have no idea what to use for **?**.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/431", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/431/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/431/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/431/events", "html_url": "https://github.com/nlohmann/json/issues/431", "id": 202059999, "node_id": "MDU6SXNzdWUyMDIwNTk5OTk=", "number": 431, "title": "create json instance from raw json (unsigned char*)", "user": {"login": "CheyenneForbes", "id": 8251976, "node_id": "MDQ6VXNlcjgyNTE5NzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/8251976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CheyenneForbes", "html_url": "https://github.com/CheyenneForbes", "followers_url": "https://api.github.com/users/CheyenneForbes/followers", "following_url": "https://api.github.com/users/CheyenneForbes/following{/other_user}", "gists_url": "https://api.github.com/users/CheyenneForbes/gists{/gist_id}", "starred_url": "https://api.github.com/users/CheyenneForbes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CheyenneForbes/subscriptions", "organizations_url": "https://api.github.com/users/CheyenneForbes/orgs", "repos_url": "https://api.github.com/users/CheyenneForbes/repos", "events_url": "https://api.github.com/users/CheyenneForbes/events{/privacy}", "received_events_url": "https://api.github.com/users/CheyenneForbes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-01-20T06:12:11Z", "updated_at": "2017-01-23T09:56:48Z", "closed_at": "2017-01-23T09:54:59Z", "author_association": "NONE", "body": "I cant get nor set values if I try :\r\n```cpp\r\nbasic_ostream BOS = get_json_from_server(); // the json response from a server\r\njson BOS_json = BOS;\r\n```\r\nIf I am doing something wrong, whats the right way to create a json instance from raw json received from a webserver as basic_ostream?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/429", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/429/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/429/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/429/events", "html_url": "https://github.com/nlohmann/json/issues/429", "id": 200882052, "node_id": "MDU6SXNzdWUyMDA4ODIwNTI=", "number": 429, "title": "Getting std::invalid_argument: stream error when following example", "user": {"login": "aharbis", "id": 20443310, "node_id": "MDQ6VXNlcjIwNDQzMzEw", "avatar_url": "https://avatars2.githubusercontent.com/u/20443310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aharbis", "html_url": "https://github.com/aharbis", "followers_url": "https://api.github.com/users/aharbis/followers", "following_url": "https://api.github.com/users/aharbis/following{/other_user}", "gists_url": "https://api.github.com/users/aharbis/gists{/gist_id}", "starred_url": "https://api.github.com/users/aharbis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aharbis/subscriptions", "organizations_url": "https://api.github.com/users/aharbis/orgs", "repos_url": "https://api.github.com/users/aharbis/repos", "events_url": "https://api.github.com/users/aharbis/events{/privacy}", "received_events_url": "https://api.github.com/users/aharbis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-01-15T17:33:50Z", "updated_at": "2017-01-16T08:12:16Z", "closed_at": "2017-01-15T19:17:42Z", "author_association": "NONE", "body": "I'm new to the library, but following the example on the base README:\r\n```cpp\r\n// read a JSON file\r\nstd::ifstream i(\"file.json\");\r\njson j;\r\ni >> j;\r\n```\r\nI'm getting the following error:\r\n```\r\nlibc++abi.dylib: terminating with uncaught exception of type std::invalid_argument: stream error\r\nAbort trap: 6\r\n```\r\nMy code is as follows:\r\n```cpp\r\n#include \"json.hpp\"\r\nusing json = nlohmann::json;\r\n\r\njson json_obj;\r\n\r\nstd::ifstream input_json(\"./test/json/TestItems.json\");\r\n\r\nif (input_json.is_open())\r\n{\r\n    while (getline(input_json, line))\r\n    {\r\n        std::cout << line << std::endl;\r\n    }\r\n    input_json >> json_obj; // this line seems to cause the exception\r\n    input_json.close();\r\n}\r\nelse std::cout << \"Unable to load file.\" << std::endl;\r\n```\r\nI've verified that `input_file` is ok, since I can iterate through the lines and print them out in the `while` loop. As soon as I add `input_json >> json_obj` I get the above exception.\r\n\r\nAm I doing something wrong? Haven't been able to find any doc that says this shouldn't work."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/428", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/428/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/428/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/428/events", "html_url": "https://github.com/nlohmann/json/issues/428", "id": 200839426, "node_id": "MDU6SXNzdWUyMDA4Mzk0MjY=", "number": 428, "title": "is it possible merge two json object", "user": {"login": "itviewer", "id": 1397840, "node_id": "MDQ6VXNlcjEzOTc4NDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1397840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/itviewer", "html_url": "https://github.com/itviewer", "followers_url": "https://api.github.com/users/itviewer/followers", "following_url": "https://api.github.com/users/itviewer/following{/other_user}", "gists_url": "https://api.github.com/users/itviewer/gists{/gist_id}", "starred_url": "https://api.github.com/users/itviewer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/itviewer/subscriptions", "organizations_url": "https://api.github.com/users/itviewer/orgs", "repos_url": "https://api.github.com/users/itviewer/repos", "events_url": "https://api.github.com/users/itviewer/events{/privacy}", "received_events_url": "https://api.github.com/users/itviewer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 14, "created_at": "2017-01-15T00:38:32Z", "updated_at": "2017-07-03T07:46:08Z", "closed_at": "2017-04-22T07:59:14Z", "author_association": "NONE", "body": "some function like this \r\njson1.join(json2) or\r\njson1.merge(json2) or\r\njson1 += json2 "}, {"url": "https://api.github.com/repos/nlohmann/json/issues/427", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/427/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/427/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/427/events", "html_url": "https://github.com/nlohmann/json/issues/427", "id": 200658035, "node_id": "MDU6SXNzdWUyMDA2NTgwMzU=", "number": 427, "title": "Forward declare-only header?", "user": {"login": "mcourteaux", "id": 845012, "node_id": "MDQ6VXNlcjg0NTAxMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/845012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcourteaux", "html_url": "https://github.com/mcourteaux", "followers_url": "https://api.github.com/users/mcourteaux/followers", "following_url": "https://api.github.com/users/mcourteaux/following{/other_user}", "gists_url": "https://api.github.com/users/mcourteaux/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcourteaux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcourteaux/subscriptions", "organizations_url": "https://api.github.com/users/mcourteaux/orgs", "repos_url": "https://api.github.com/users/mcourteaux/repos", "events_url": "https://api.github.com/users/mcourteaux/events{/privacy}", "received_events_url": "https://api.github.com/users/mcourteaux/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-13T15:31:10Z", "updated_at": "2017-01-13T15:36:57Z", "closed_at": "2017-01-13T15:33:29Z", "author_association": "NONE", "body": "Would it be possible to provide a header meant for forward declaring only? This would save roughly 10k lines of code for all the compilation units that do not really need the details of json but just a pointer/reference or the size of the `nlohmann::json` class.\r\n\r\nThen we could do in header files:\r\n\r\n```cpp\r\n#include <json_fd.hpp>\r\n\r\nnlohmann::json *json_ptr;\r\n```\r\n\r\nThis would allow me to speed up compilation of my project quite a bit, as I use your json project here and there, but turns out to be included in a large portion of the compilation units."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/425", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/425/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/425/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/425/events", "html_url": "https://github.com/nlohmann/json/issues/425", "id": 200266367, "node_id": "MDU6SXNzdWUyMDAyNjYzNjc=", "number": 425, "title": "Implicit conversion from array to object", "user": {"login": "hxingpax", "id": 18188038, "node_id": "MDQ6VXNlcjE4MTg4MDM4", "avatar_url": "https://avatars2.githubusercontent.com/u/18188038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hxingpax", "html_url": "https://github.com/hxingpax", "followers_url": "https://api.github.com/users/hxingpax/followers", "following_url": "https://api.github.com/users/hxingpax/following{/other_user}", "gists_url": "https://api.github.com/users/hxingpax/gists{/gist_id}", "starred_url": "https://api.github.com/users/hxingpax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hxingpax/subscriptions", "organizations_url": "https://api.github.com/users/hxingpax/orgs", "repos_url": "https://api.github.com/users/hxingpax/repos", "events_url": "https://api.github.com/users/hxingpax/events{/privacy}", "received_events_url": "https://api.github.com/users/hxingpax/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-01-12T02:57:20Z", "updated_at": "2017-01-12T20:29:36Z", "closed_at": "2017-01-12T20:29:36Z", "author_association": "NONE", "body": "In the README I saw:\r\n```cpp\r\n// a way to express an _array_ of key/value pairs [[\"currency\", \"USD\"], [\"value\", 42.99]]\r\njson array_not_object = { json::array({\"currency\", \"USD\"}), json::array({\"value\", 42.99}) };\r\n```\r\n\r\nBut  on my Ubuntu 1604 with gcc 5.4 I got `\"{\"currency\":\"USD\",\"value\":42.99}\"`\r\n\r\nAfter I change \"value\" into a numeric, e.g.\r\n```cpp\r\njson array_not_object = { json::array({\"currency\", \"USD\"}), json::array({4, 42.99}) };\r\n```\r\nI got `\"[[\"currency\",\"USD\"],[4,42.99]]\"`\r\n\r\nIs this a bug? or feature?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/424", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/424/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/424/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/424/events", "html_url": "https://github.com/nlohmann/json/issues/424", "id": 199577652, "node_id": "MDU6SXNzdWUxOTk1Nzc2NTI=", "number": 424, "title": "Automatic ordered JSON", "user": {"login": "MilowB", "id": 16907876, "node_id": "MDQ6VXNlcjE2OTA3ODc2", "avatar_url": "https://avatars0.githubusercontent.com/u/16907876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MilowB", "html_url": "https://github.com/MilowB", "followers_url": "https://api.github.com/users/MilowB/followers", "following_url": "https://api.github.com/users/MilowB/following{/other_user}", "gists_url": "https://api.github.com/users/MilowB/gists{/gist_id}", "starred_url": "https://api.github.com/users/MilowB/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MilowB/subscriptions", "organizations_url": "https://api.github.com/users/MilowB/orgs", "repos_url": "https://api.github.com/users/MilowB/repos", "events_url": "https://api.github.com/users/MilowB/events{/privacy}", "received_events_url": "https://api.github.com/users/MilowB/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-01-09T15:20:52Z", "updated_at": "2017-01-12T10:55:20Z", "closed_at": "2017-01-09T15:54:56Z", "author_association": "NONE", "body": "Hi,\r\n\r\nJson is automatically sorted by an alphabetic order. I don't find any information about that in your readme. Is there a way to avoid  sorting ?\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/422", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/422/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/422/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/422/events", "html_url": "https://github.com/nlohmann/json/issues/422", "id": 199415614, "node_id": "MDU6SXNzdWUxOTk0MTU2MTQ=", "number": 422, "title": "error C4996: 'strerror' when reading file", "user": {"login": "nours59", "id": 11527584, "node_id": "MDQ6VXNlcjExNTI3NTg0", "avatar_url": "https://avatars2.githubusercontent.com/u/11527584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nours59", "html_url": "https://github.com/nours59", "followers_url": "https://api.github.com/users/nours59/followers", "following_url": "https://api.github.com/users/nours59/following{/other_user}", "gists_url": "https://api.github.com/users/nours59/gists{/gist_id}", "starred_url": "https://api.github.com/users/nours59/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nours59/subscriptions", "organizations_url": "https://api.github.com/users/nours59/orgs", "repos_url": "https://api.github.com/users/nours59/repos", "events_url": "https://api.github.com/users/nours59/events{/privacy}", "received_events_url": "https://api.github.com/users/nours59/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}, {"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-01-08T10:58:22Z", "updated_at": "2017-01-08T11:50:32Z", "closed_at": "2017-01-08T11:50:10Z", "author_association": "NONE", "body": "Hello (sorry for my english...),\r\n\r\nI have an error when reading file,with this code :\r\n`\tstd::ifstream i(fileName);\r\n\tnlohmann::json j;\r\n\ti >> j;\r\n\tstd::cout << j;\r\n`\r\nhere is the error message:\r\n`warning C4996: 'strerror': This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.`\r\n\r\nI'm on Visual Studio 2017, and to avoid this message i have to disable SDL Check, so compiler consider it as simple warning, but i think this issue should be revised\r\n\r\nMany thanks in advance"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/421", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/421/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/421/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/421/events", "html_url": "https://github.com/nlohmann/json/issues/421", "id": 199335026, "node_id": "MDU6SXNzdWUxOTkzMzUwMjY=", "number": 421, "title": "Get an error - JSON pointer must be empty or begin with '/'", "user": {"login": "ORESoftware", "id": 11139560, "node_id": "MDQ6VXNlcjExMTM5NTYw", "avatar_url": "https://avatars1.githubusercontent.com/u/11139560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ORESoftware", "html_url": "https://github.com/ORESoftware", "followers_url": "https://api.github.com/users/ORESoftware/followers", "following_url": "https://api.github.com/users/ORESoftware/following{/other_user}", "gists_url": "https://api.github.com/users/ORESoftware/gists{/gist_id}", "starred_url": "https://api.github.com/users/ORESoftware/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ORESoftware/subscriptions", "organizations_url": "https://api.github.com/users/ORESoftware/orgs", "repos_url": "https://api.github.com/users/ORESoftware/repos", "events_url": "https://api.github.com/users/ORESoftware/events{/privacy}", "received_events_url": "https://api.github.com/users/ORESoftware/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-07T02:33:58Z", "updated_at": "2017-01-07T09:31:58Z", "closed_at": "2017-01-07T03:36:47Z", "author_association": "NONE", "body": "I am a C/C++ newb so bear with me\r\n\r\nI get this error:\r\n\r\n```\r\n../json.hpp:11286:87: error: exception handling disabled, use -fexceptions to enable\r\n                 throw std::domain_error(\"JSON pointer must be empty or begin with '/'\");\r\n```\r\n\r\nI am trying to create Node.js Addon - I included this project like so:\r\n\r\n`#include \"json.hpp\"`\r\n\r\nHere is the binding.gyp file I used:\r\n\r\n```\r\n{\r\n  \"targets\": [\r\n    {\r\n      \"target_name\": \"hello\",\r\n      \"sources\": [ \"hello.cpp\" ],\r\n      \"include_dirs\": [\r\n        \"<!(node -e \\\"require('nan')\\\")\"\r\n      ],\r\n      \"cflags\": [\r\n        \"-std=c++11\"\r\n      ]\r\n    }\r\n  ]\r\n}\r\n\r\n```\r\nI think that's where I need to add the std=c++11 call\r\n\r\nAny idea what the error might be about? Sorry don't know how to debug this at all\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/420", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/420/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/420/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/420/events", "html_url": "https://github.com/nlohmann/json/issues/420", "id": 199245797, "node_id": "MDU6SXNzdWUxOTkyNDU3OTc=", "number": 420, "title": "Is it possible to turn this into a shared library?", "user": {"login": "RPGillespie6", "id": 9853156, "node_id": "MDQ6VXNlcjk4NTMxNTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9853156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RPGillespie6", "html_url": "https://github.com/RPGillespie6", "followers_url": "https://api.github.com/users/RPGillespie6/followers", "following_url": "https://api.github.com/users/RPGillespie6/following{/other_user}", "gists_url": "https://api.github.com/users/RPGillespie6/gists{/gist_id}", "starred_url": "https://api.github.com/users/RPGillespie6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RPGillespie6/subscriptions", "organizations_url": "https://api.github.com/users/RPGillespie6/orgs", "repos_url": "https://api.github.com/users/RPGillespie6/repos", "events_url": "https://api.github.com/users/RPGillespie6/events{/privacy}", "received_events_url": "https://api.github.com/users/RPGillespie6/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-01-06T17:28:46Z", "updated_at": "2017-06-06T18:32:08Z", "closed_at": "2017-06-06T18:32:08Z", "author_association": "NONE", "body": "I'm really liking this library. \r\n\r\nHowever, my use case is in an embedded ARM environment with limited flash storage. Every time I include this library in an app, it increases the size of the app by ~50KB after stripping. \r\n\r\nIs there a way to turn this `.hpp` into a `.so` so that I don't have to pay 50KB per app? I was thinking I could just include it into a `.cpp` file and turn *that* into a `.so`, but then I still need a header file that exposes the public APIs."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/419", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/419/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/419/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/419/events", "html_url": "https://github.com/nlohmann/json/issues/419", "id": 199179917, "node_id": "MDU6SXNzdWUxOTkxNzk5MTc=", "number": 419, "title": "size parameter for parse()", "user": {"login": "user1095108", "id": 8299348, "node_id": "MDQ6VXNlcjgyOTkzNDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8299348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/user1095108", "html_url": "https://github.com/user1095108", "followers_url": "https://api.github.com/users/user1095108/followers", "following_url": "https://api.github.com/users/user1095108/following{/other_user}", "gists_url": "https://api.github.com/users/user1095108/gists{/gist_id}", "starred_url": "https://api.github.com/users/user1095108/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/user1095108/subscriptions", "organizations_url": "https://api.github.com/users/user1095108/orgs", "repos_url": "https://api.github.com/users/user1095108/repos", "events_url": "https://api.github.com/users/user1095108/events{/privacy}", "received_events_url": "https://api.github.com/users/user1095108/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2017-01-06T11:42:46Z", "updated_at": "2017-01-09T12:28:07Z", "closed_at": "2017-01-06T19:29:36Z", "author_association": "NONE", "body": "to save one call to strlen(), I think such a parse() function should be provided. A similar parse for char array, with size deduced is already provided."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/418", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/418/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/418/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/418/events", "html_url": "https://github.com/nlohmann/json/issues/418", "id": 199111015, "node_id": "MDU6SXNzdWUxOTkxMTEwMTU=", "number": 418, "title": "Further thoughts on performance improvements", "user": {"login": "TurpentineDistillery", "id": 23583218, "node_id": "MDQ6VXNlcjIzNTgzMjE4", "avatar_url": "https://avatars0.githubusercontent.com/u/23583218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TurpentineDistillery", "html_url": "https://github.com/TurpentineDistillery", "followers_url": "https://api.github.com/users/TurpentineDistillery/followers", "following_url": "https://api.github.com/users/TurpentineDistillery/following{/other_user}", "gists_url": "https://api.github.com/users/TurpentineDistillery/gists{/gist_id}", "starred_url": "https://api.github.com/users/TurpentineDistillery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TurpentineDistillery/subscriptions", "organizations_url": "https://api.github.com/users/TurpentineDistillery/orgs", "repos_url": "https://api.github.com/users/TurpentineDistillery/repos", "events_url": "https://api.github.com/users/TurpentineDistillery/events{/privacy}", "received_events_url": "https://api.github.com/users/TurpentineDistillery/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-01-06T02:37:13Z", "updated_at": "2017-08-15T18:58:26Z", "closed_at": "2017-08-15T18:58:26Z", "author_association": "NONE", "body": "My analysis of the performance bottlenecks showed that passthrough (non-instantiating) parsing performance is comparable to that of `wc` (i.e. near-perfect), and the major bottleneck is the usual bane of performant programming - `malloc`s and `free`s of many small objects. Can this be improved without resorting to custom allocators game? I think so. The performance becomes an issue when there are many json records to parse. In real-world scenarios the records will have the same schema - just the values that are different. Under this assumption, if we have an old json object that is no longer needed, it can be reused to update the values within, rather than let it expire, `free`ing the contents, and then allocate everything de-novo in a new `json`. This would entail having a function like `json::parse(istream& istr, json& dest)` that would take an existing record and reuse the existing fields where possible, making allocations only when necessary (longer strings, longer arrays, keys in maps that are absent in the old object, etc)."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/417", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/417/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/417/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/417/events", "html_url": "https://github.com/nlohmann/json/issues/417", "id": 198693845, "node_id": "MDU6SXNzdWUxOTg2OTM4NDU=", "number": 417, "title": "json.hpp forcibly defines GCC_VERSION", "user": {"login": "polesapart", "id": 991617, "node_id": "MDQ6VXNlcjk5MTYxNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/991617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/polesapart", "html_url": "https://github.com/polesapart", "followers_url": "https://api.github.com/users/polesapart/followers", "following_url": "https://api.github.com/users/polesapart/following{/other_user}", "gists_url": "https://api.github.com/users/polesapart/gists{/gist_id}", "starred_url": "https://api.github.com/users/polesapart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/polesapart/subscriptions", "organizations_url": "https://api.github.com/users/polesapart/orgs", "repos_url": "https://api.github.com/users/polesapart/repos", "events_url": "https://api.github.com/users/polesapart/events{/privacy}", "received_events_url": "https://api.github.com/users/polesapart/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/4", "html_url": "https://github.com/nlohmann/json/milestone/4", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/4/labels", "id": 1836706, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwNg==", "number": 4, "title": "Release 2.1.0", "description": "The next release if new, backwards compatible functionality is introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 10, "state": "closed", "created_at": "2016-06-19T16:06:39Z", "updated_at": "2017-01-28T17:45:05Z", "due_on": "2017-01-28T08:00:00Z", "closed_at": "2017-01-28T17:45:05Z"}, "comments": 3, "created_at": "2017-01-04T12:11:08Z", "updated_at": "2017-01-24T14:24:38Z", "closed_at": "2017-01-04T18:33:45Z", "author_association": "NONE", "body": "While json.hpp defines CLANG_VERSION & GCC_VERSION where appropriate:\r\n\r\n    // exclude unsupported compilers\r\n    #if defined(__clang__)\r\n        #define CLANG_VERSION (__clang_major__ * 10000 + __clang_minor__ * 100 +     __clang_patchlevel__)\r\n        #if CLANG_VERSION < 30400\r\n            #error \"unsupported Clang version - see https://github.com/nlohmann/json#supported-compilers\"\r\n        #endif\r\n    #elif defined(__GNUC__)\r\n        #define GCC_VERSION (__GNUC__ * 10000 + __GNUC_MINOR__ * 100 +     __GNUC_PATCHLEVEL__)\r\n        #if GCC_VERSION < 40900\r\n            #error \"unsupported GCC version - see https://github.com/nlohmann/json#supported-compilers\"\r\n        #endif\r\n    #endif\r\n    \r\n\r\nIt fails to take a few facts into account:\r\n\r\n1) At least GCC_VERSION is used elsewhere (several open source projects such as python, mysql, etc). Leaking it leads to errors such as this: `components/third_party/json.hpp:66:0: error: GCC_VERSION\" redefined [-Werror]`\r\n2) The macro is only used on the spot, so it seems like a better use would be something like that:\r\n   \r\n        #elif defined(__GNUC__)\r\n            #define JSGCC_VERSION (__GNUC__ * 10000 + __GNUC_MINOR__ * 100 +     __GNUC_PATCHLEVEL__)\r\n           #if JSGCC_VERSION < 40900\r\n           ...\r\n           #undef JSGCC_VERSION\r\n       #endif /* defined __GNUC__ */\r\n   \r\nOr something.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/416", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/416/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/416/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/416/events", "html_url": "https://github.com/nlohmann/json/issues/416", "id": 198582364, "node_id": "MDU6SXNzdWUxOTg1ODIzNjQ=", "number": 416, "title": "Use-of-uninitialized-value (OSS-Fuzz issue 377)", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 571470316, "node_id": "MDU6TGFiZWw1NzE0NzAzMTY=", "url": "https://api.github.com/repos/nlohmann/json/labels/aspect:%20binary%20formats", "name": "aspect: binary formats", "color": "5319e7", "default": false}, {"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/4", "html_url": "https://github.com/nlohmann/json/milestone/4", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/4/labels", "id": 1836706, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwNg==", "number": 4, "title": "Release 2.1.0", "description": "The next release if new, backwards compatible functionality is introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 10, "state": "closed", "created_at": "2016-06-19T16:06:39Z", "updated_at": "2017-01-28T17:45:05Z", "due_on": "2017-01-28T08:00:00Z", "closed_at": "2017-01-28T17:45:05Z"}, "comments": 2, "created_at": "2017-01-03T22:10:39Z", "updated_at": "2017-03-28T22:00:53Z", "closed_at": "2017-01-04T08:12:22Z", "author_association": "OWNER", "body": "The library is continuously fuzz tested by [Google's OSS-Fuzz](https://github.com/google/oss-fuzz). Today, an error was reported:\r\n\r\n```\r\nDetailed report: https://clusterfuzz-external.appspot.com/testcase?key=6051806467588096\r\n\r\nProject: json\r\nFuzzer: libFuzzer_json_fuzzer-parse_cbor\r\nFuzz target binary: fuzzer-parse_cbor\r\nJob Type: libfuzzer_msan_json\r\nPlatform Id: linux\r\n\r\nCrash Type: Use-of-uninitialized-value\r\nCrash Address: \r\nCrash State:\r\nnlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<cha\r\nnlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<cha\r\nnlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<cha\r\n\r\nRecommended Security Severity: Medium\r\n\r\n\r\nMinimized Testcase (0.05 Kb): https://clusterfuzz-external.appspot.com/download/AMIfv95JewdvXub-dTQH2ZJcTO9CU1JJuX0z2r_ayy2dkqW9dUli-j_DKzAnncumcPUGCJ7--lDX9C92a8r84smAF_9TvgQTWcLL3LnxtCbsPjKoSb9v_Hh2nOyGk3rHxMO68Q8Zl5O3wK4MwnCJjWuNL9YK6ENt_eni6z1IKVRVmS3SMQfYIaQlIngHVtCTesM2IoLdwyADpKlFlotYeVVffhtYs4cF8Dku3lmDj-vjLRDZ5YOF4TfEsBva4-tUMtLbfcxoDXk4NmTkld2cFhD6x9qrwJ8EVlOgz7QvaWxfXYp8prFPZbLVgmYzt33nqSopzQobs8qaFjUhbJ4m3ptfoEeQMvpbZFzND2OF39qFmgbTG4LZ-LAyyEcd6puze-HTurgzL_3S?testcase_id=6051806467588096\r\n\r\nIssue filed automatically.\r\n\r\nSee https://github.com/google/oss-fuzz/blob/master/docs/reproducing.md for more information.\r\n\r\nThis bug is subject to a 90 day disclosure deadline. If 90 days elapse\r\nwithout an upstream patch, then the bug report will automatically\r\nbecome visible to the public.\r\n```\r\n\r\n- [fuzz-3-json_fuzzer-parse_cbor.zip](https://github.com/nlohmann/json/files/683353/fuzz-3-json_fuzzer-parse_cbor.zip)\r\n\r\n\r\n```\r\n#0 0x4c5699 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::basic_json(double) /src/json/src/json.hpp:1515:13\r\n#1 0x4c59a7 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::basic_json<float, void>(float) /src/json/src/json.hpp:1559:11\r\n#2 0x4b9330 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7557:24\r\n#3 0x4b4be6 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7430:39\r\n#4 0x4b4be6 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7430:39\r\n#5 0x4b4be6 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7430:39\r\n#6 0x4b4be6 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7430:39\r\n#7 0x4b4be6 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7430:39\r\n#8 0x4b4be6 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7430:39\r\n#9 0x4b4be6 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7430:39\r\n#10 0x4b4be6 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7430:39\r\n#11 0x4b4be6 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7430:39\r\n#12 0x4b4be6 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7430:39\r\n#13 0x4b4be6 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7430:39\r\n#14 0x4b4be6 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7430:39\r\n#15 0x4b2505 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7335:38\r\n#16 0x495ecf in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&) /src/json/src/json.hpp:7690:16\r\n#17 0x494932 in LLVMFuzzerTestOneInput /src/json/test/src/fuzzer-parse_cbor.cpp:34:19\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/414", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/414/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/414/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/414/events", "html_url": "https://github.com/nlohmann/json/issues/414", "id": 198386829, "node_id": "MDU6SXNzdWUxOTgzODY4Mjk=", "number": 414, "title": "comparing to 0 literal", "user": {"login": "stanmihai4", "id": 24882696, "node_id": "MDQ6VXNlcjI0ODgyNjk2", "avatar_url": "https://avatars2.githubusercontent.com/u/24882696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stanmihai4", "html_url": "https://github.com/stanmihai4", "followers_url": "https://api.github.com/users/stanmihai4/followers", "following_url": "https://api.github.com/users/stanmihai4/following{/other_user}", "gists_url": "https://api.github.com/users/stanmihai4/gists{/gist_id}", "starred_url": "https://api.github.com/users/stanmihai4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stanmihai4/subscriptions", "organizations_url": "https://api.github.com/users/stanmihai4/orgs", "repos_url": "https://api.github.com/users/stanmihai4/repos", "events_url": "https://api.github.com/users/stanmihai4/events{/privacy}", "received_events_url": "https://api.github.com/users/stanmihai4/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/18", "html_url": "https://github.com/nlohmann/json/milestone/18", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/18/labels", "id": 2298442, "node_id": "MDk6TWlsZXN0b25lMjI5ODQ0Mg==", "number": 18, "title": "Release 2.1.1", "description": "The next release if backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 19, "state": "closed", "created_at": "2017-02-03T17:22:21Z", "updated_at": "2017-02-25T16:10:15Z", "due_on": "2017-02-25T08:00:00Z", "closed_at": "2017-02-25T16:10:15Z"}, "comments": 8, "created_at": "2017-01-02T22:28:46Z", "updated_at": "2017-02-16T08:04:26Z", "closed_at": "2017-02-16T08:01:30Z", "author_association": "NONE", "body": "Hello,\r\n\r\nComparing to the 0 literal results calls `operator==(const_reference v, std::nullptr_t)` since converting to a standard type is preferred to a custom one (json).\r\n\r\n```cpp\r\n// don't let catch decompose the expression\r\nCHECK((json(0) == 0));\r\nCHECK((0 == json(0)));\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/413", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/413/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/413/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/413/events", "html_url": "https://github.com/nlohmann/json/issues/413", "id": 198311204, "node_id": "MDU6SXNzdWUxOTgzMTEyMDQ=", "number": 413, "title": "Single char converted to ASCII code instead of string", "user": {"login": "sulliwane", "id": 1733686, "node_id": "MDQ6VXNlcjE3MzM2ODY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1733686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sulliwane", "html_url": "https://github.com/sulliwane", "followers_url": "https://api.github.com/users/sulliwane/followers", "following_url": "https://api.github.com/users/sulliwane/following{/other_user}", "gists_url": "https://api.github.com/users/sulliwane/gists{/gist_id}", "starred_url": "https://api.github.com/users/sulliwane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sulliwane/subscriptions", "organizations_url": "https://api.github.com/users/sulliwane/orgs", "repos_url": "https://api.github.com/users/sulliwane/repos", "events_url": "https://api.github.com/users/sulliwane/events{/privacy}", "received_events_url": "https://api.github.com/users/sulliwane/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-01-02T09:26:16Z", "updated_at": "2017-01-03T08:29:52Z", "closed_at": "2017-01-03T00:22:04Z", "author_association": "NONE", "body": "Hello,\r\n\r\nI'm getting two types of data in a api callback function:\r\n```cpp\r\ntypedef char type1;\r\ntypedef char type2[16];\r\n```\r\nand here is my function:\r\n```cpp\r\nvoid spi::OnCallback(Message *message) {\r\n  json data = json({});\r\n  \r\n  data[\"type1\"] = message->type1;  // message.type1 === 'A'\r\n  data[\"type2\"] = message->type2; // message.type2 === 'a string'\r\n\r\n  DEBUG(data.dump());\r\n// data.type1 === 60\r\n// data.type2 === 'a string'\r\n};\r\n```\r\nType2 is recognized as a string by the json lib, but it seems type1 being a single char is converted to the equivalent ASCII number. I'm a correct? So right now I handle this by explicitly converting the single char to a string like this: \r\n```cpp\r\ndata[\"type1\"] = std::string(1, message->type1);\r\n```\r\nBut this is not really convenient. Any idea on how to better handle this single char case, so that it's implicitly converted to a string by the library?\r\n\r\nMany thanks for your help!\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/412", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/412/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/412/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/412/events", "html_url": "https://github.com/nlohmann/json/issues/412", "id": 198267266, "node_id": "MDU6SXNzdWUxOTgyNjcyNjY=", "number": 412, "title": "Heap-buffer-overflow (OSS-Fuzz issue 367)", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 571470316, "node_id": "MDU6TGFiZWw1NzE0NzAzMTY=", "url": "https://api.github.com/repos/nlohmann/json/labels/aspect:%20binary%20formats", "name": "aspect: binary formats", "color": "5319e7", "default": false}, {"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/15", "html_url": "https://github.com/nlohmann/json/milestone/15", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/15/labels", "id": 2201571, "node_id": "MDk6TWlsZXN0b25lMjIwMTU3MQ==", "number": 15, "title": "Release 2.0.10", "description": "The next release if backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 11, "state": "closed", "created_at": "2016-12-16T20:36:52Z", "updated_at": "2017-01-02T16:30:29Z", "due_on": "2017-01-02T08:00:00Z", "closed_at": "2017-01-02T15:58:51Z"}, "comments": 1, "created_at": "2017-01-01T13:26:54Z", "updated_at": "2017-03-28T22:00:49Z", "closed_at": "2017-01-02T08:03:41Z", "author_association": "OWNER", "body": "```\r\nDetailed report: https://clusterfuzz-external.appspot.com/testcase?key=6541936374579200\r\n\r\nProject: json\r\nFuzzer: libFuzzer_json_fuzzer-parse_cbor\r\nFuzz target binary: fuzzer-parse_cbor\r\nJob Type: libfuzzer_asan_json\r\nPlatform Id: linux\r\n\r\nCrash Type: Heap-buffer-overflow READ 1\r\nCrash Address: 0x60d0000004d8\r\nCrash State:\r\nnlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<cha\r\nnlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<cha\r\nnlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<cha\r\n\r\nRecommended Security Severity: Medium\r\n\r\nRegressed: https://clusterfuzz-external.appspot.com/revisions?job=libfuzzer_asan_json&range=201612280923:201612281110\r\n\r\nMinimized Testcase (0.13 Kb): https://clusterfuzz-external.appspot.com/download/AMIfv9662WCaMqPQr9f_huKoZWqDy6Qn7oJb7-csZwN-cxWh1PIBkymo9X7gg1WMkAodGEnx_KUFobrGGthMmyUfXE33PSi3l8GULrWI8zioF2hC_bzhxyORUtGqPE0jak4Hr7i1OJ8gg8iVFeAThvCaRzHjjLIWMl8uxv0HP9yUF2_ldtjxyh9vGZHdRSNbPXvfMGdYhFxpXH6Tl2tZ2EG-NpsB8xTAtod-6sh_P42Lut50954D2B1qzZnP6tC_uOfgV3WTd1Q5iyIWvHDHLEmt810RhuDE-mNVB9ueMTObG0BxN_tyhnwTqaWGzSE6rhl4k5CN5ABrzbz4AfnXnJhE1RNVONchtXT6yQB49IL9aAfY7edE3SuPFMlcgf45a9hxICAxqXOA?testcase_id=6541936374579200\r\n\r\nIssue filed automatically.\r\n\r\nSee https://github.com/google/oss-fuzz/blob/master/docs/reproducing.md for more information.\r\n\r\nThis bug is subject to a 90 day disclosure deadline. If 90 days elapse\r\nwithout an upstream patch, then the bug report will automatically\r\nbecome visible to the public.\r\n```\r\n\r\nInput:\r\n\r\n```\r\nab98 9898 9898 9898 9898 9898 9800 0000\r\n60ab 9898 9898 9898 9898 9898 9800 0000\r\n6060 6060 6060 6060 6060 6060 6060 6060\r\n6060 6060 6060 6060 6060 6060 6060 6060\r\n6060 6060 6060 6060 6060 6060 6060 6060\r\n6060 6060 6060 a09f 9f97 6060 6060 6060\r\n6060 6060 6060 6060 6060 6060 6060 6060\r\n6060 6060 6060 6060 6060 6060 6060 6060\r\n6060 6060 6060 6060 \r\n```\r\n\r\n[fuzz-3-json_fuzzer-parse_cbor-2.zip](https://github.com/nlohmann/json/files/680001/fuzz-3-json_fuzzer-parse_cbor-2.zip)\r\n\r\n```\r\n==1==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60d0000004d8 at pc 0x00000051fd6a bp 0x7ffceb681150 sp 0x7ffceb681148\r\nREAD of size 1 at 0x60d0000004d8 thread T0\r\nSCARINESS: 12 (1-byte-read-heap-buffer-overflow)\r\n#0 0x51fd69 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7421:24\r\n#1 0x51fd99 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7423:38\r\n#2 0x51f3b9 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7377:38\r\n#3 0x51f3b9 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7377:38\r\n#4 0x51f3b9 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7377:38\r\n#5 0x51f3b9 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7377:38\r\n#6 0x51f3b9 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7377:38\r\n#7 0x520080 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7460:39\r\n#8 0x51f3b9 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7377:38\r\n#9 0x51f3b9 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7377:38\r\n#10 0x51f3b9 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7377:38\r\n#11 0x51f3b9 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7377:38\r\n#12 0x51f3b9 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7377:38\r\n#13 0x51f3b9 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7377:38\r\n#14 0x520080 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7460:39\r\n#15 0x511bbc in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&) /src/json/src/json.hpp:7720:16\r\n#16 0x51107e in LLVMFuzzerTestOneInput /src/json/./test/src/fuzzer-parse_cbor.cpp:34:19\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/411", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/411/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/411/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/411/events", "html_url": "https://github.com/nlohmann/json/issues/411", "id": 198267208, "node_id": "MDU6SXNzdWUxOTgyNjcyMDg=", "number": 411, "title": "Heap-buffer-overflow (OSS-Fuzz issue 366)", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 571470316, "node_id": "MDU6TGFiZWw1NzE0NzAzMTY=", "url": "https://api.github.com/repos/nlohmann/json/labels/aspect:%20binary%20formats", "name": "aspect: binary formats", "color": "5319e7", "default": false}, {"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/15", "html_url": "https://github.com/nlohmann/json/milestone/15", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/15/labels", "id": 2201571, "node_id": "MDk6TWlsZXN0b25lMjIwMTU3MQ==", "number": 15, "title": "Release 2.0.10", "description": "The next release if backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 11, "state": "closed", "created_at": "2016-12-16T20:36:52Z", "updated_at": "2017-01-02T16:30:29Z", "due_on": "2017-01-02T08:00:00Z", "closed_at": "2017-01-02T15:58:51Z"}, "comments": 1, "created_at": "2017-01-01T13:24:34Z", "updated_at": "2017-03-28T22:00:45Z", "closed_at": "2017-01-02T08:03:19Z", "author_association": "OWNER", "body": "```\r\nDetailed report: https://clusterfuzz-external.appspot.com/testcase?key=6389881328631808\r\n\r\nProject: json\r\nFuzzer: libFuzzer_json_fuzzer-parse_cbor\r\nFuzz target binary: fuzzer-parse_cbor\r\nJob Type: libfuzzer_asan_json\r\nPlatform Id: linux\r\n\r\nCrash Type: Heap-buffer-overflow READ 1\r\nCrash Address: 0x6020000000d1\r\nCrash State:\r\nnlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<cha\r\nnlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<cha\r\n_start\r\n\r\nRecommended Security Severity: Medium\r\n\r\nRegressed: https://clusterfuzz-external.appspot.com/revisions?job=libfuzzer_asan_json&range=201612280923:201612281110\r\n\r\nMinimized Testcase (0.00 Kb):\r\nDownload: https://clusterfuzz-external.appspot.com/download/AMIfv966Em_K8UOgnsngPWgxZ8qsH_julqkD3HcQfMo22dZ-YX0xGwy1yx2sr_OWR_Es6N15TRNpcNbERPUaO2yfCwmUMx4o6jlF_uJWXM0fnjTXqSCIVEx3KC4oSwOsIIPdcjeMNH9wQlzBEcZtR9M46kWc1fjDdyxEqi9ieUgrZFVBstgA1KqwVRjJ4B_Lspp3tKNyanvYdZYu_A74yUANK8XeW1ClnMzrkOQ_u7hfH7s1DHiH6i4TzrYrY0EKB9xZqYctrUf4V9yKKW1zmlUda0ZSMA4Inv0iWS7ox13NZgJMPdG3Yw9PWQxuiHjjfjKfLCjy5ZsD1DYPDzOVu1KRZkWlRiG4AMz64raXrrOMWg2ThjXWhMWBhrV9J1-uTWlWR1bkulo_?testcase_id=6389881328631808\r\n\u007f\r\n\r\n\r\nIssue filed automatically.\r\n\r\nSee https://github.com/google/oss-fuzz/blob/master/docs/reproducing.md for more information.\r\n\r\nThis bug is subject to a 90 day disclosure deadline. If 90 days elapse\r\nwithout an upstream patch, then the bug report will automatically\r\nbecome visible to the public.\r\n```\r\n\r\nInput: `0x7f`\r\n\r\n```\r\n=================================================================\r\n==1==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000000d1 at pc 0x00000051e97f bp 0x7fffed42a3f0 sp 0x7fffed42a3e8\r\nREAD of size 1 at 0x6020000000d1 thread T0\r\nSCARINESS: 12 (1-byte-read-heap-buffer-overflow)\r\n#0 0x51e97e in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7325:24\r\n#1 0x511bbc in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator>::from_cbor(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&) /src/json/src/json.hpp:7720:16\r\n#2 0x51107e in LLVMFuzzerTestOneInput /src/json/./test/src/fuzzer-parse_cbor.cpp:34:19\r\n#3 0x5c8878 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:541:13\r\n#4 0x5c95d4 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:492:3\r\n#5 0x559eb7 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:267:6\r\n#6 0x562023 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:485:9\r\n#7 0x558318 in main /src/libfuzzer/FuzzerMain.cpp:20:10\r\n#8 0x7f2164b0182f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n#9 0x41b978 in _start (/mnt/scratch0/clusterfuzz/slave-bot/builds/clusterfuzz-builds_json_26b1464c0c18fac23c49bf26ed996090f90e682a/revisions/fuzzer-parse_cbor+0x41b978)\r\n```"}]