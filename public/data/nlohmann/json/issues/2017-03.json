[{"url": "https://api.github.com/repos/nlohmann/json/issues/543", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/543/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/543/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/543/events", "html_url": "https://github.com/nlohmann/json/issues/543", "id": 218456584, "node_id": "MDU6SXNzdWUyMTg0NTY1ODQ=", "number": 543, "title": "Head Elements Sorting", "user": {"login": "Kostya1", "id": 2563070, "node_id": "MDQ6VXNlcjI1NjMwNzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2563070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kostya1", "html_url": "https://github.com/Kostya1", "followers_url": "https://api.github.com/users/Kostya1/followers", "following_url": "https://api.github.com/users/Kostya1/following{/other_user}", "gists_url": "https://api.github.com/users/Kostya1/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kostya1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kostya1/subscriptions", "organizations_url": "https://api.github.com/users/Kostya1/orgs", "repos_url": "https://api.github.com/users/Kostya1/repos", "events_url": "https://api.github.com/users/Kostya1/events{/privacy}", "received_events_url": "https://api.github.com/users/Kostya1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-31T10:04:31Z", "updated_at": "2017-03-31T23:06:48Z", "closed_at": "2017-03-31T23:06:48Z", "author_association": "NONE", "body": "I need to make a json from iarray. I'm doing it like you in your example\r\n\r\n json j;\r\n \r\nj[\"pi\"] = 3.141;\r\n \r\nj[\"happy\"] = true;\r\n\r\n \r\nSo, result json in this example will be:\r\n \r\n{\r\n\"happy\": true,\r\n\"pi\": 3.141\r\n}\r\n \r\nThe keys are sorted alphabetically. But I need \r\nBut I want make json like this\r\n\r\n{ \r\n\"pi\": 3.141, \r\n\"happy\": true\r\n}\r\n\r\nHow can I make the keys in the same order as I add them?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/542", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/542/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/542/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/542/events", "html_url": "https://github.com/nlohmann/json/issues/542", "id": 218445080, "node_id": "MDU6SXNzdWUyMTg0NDUwODA=", "number": 542, "title": "Duplicate symbols error happens while to_json/from_json method implemented inside entity definition header file", "user": {"login": "woodywu", "id": 3216210, "node_id": "MDQ6VXNlcjMyMTYyMTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/3216210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/woodywu", "html_url": "https://github.com/woodywu", "followers_url": "https://api.github.com/users/woodywu/followers", "following_url": "https://api.github.com/users/woodywu/following{/other_user}", "gists_url": "https://api.github.com/users/woodywu/gists{/gist_id}", "starred_url": "https://api.github.com/users/woodywu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/woodywu/subscriptions", "organizations_url": "https://api.github.com/users/woodywu/orgs", "repos_url": "https://api.github.com/users/woodywu/repos", "events_url": "https://api.github.com/users/woodywu/events{/privacy}", "received_events_url": "https://api.github.com/users/woodywu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-31T09:19:44Z", "updated_at": "2017-04-07T19:29:55Z", "closed_at": "2017-03-31T10:17:31Z", "author_association": "NONE", "body": "Can't upload the project file, so I try my best to make this clear...\r\n\r\nI implemented the to_json/from_json methods inside the entity definition header file. Suppose the file called A.h, and include this file inside the main.cpp source file. I have another source file called B.h, it does nothing but include A.h and define a class called B. When I compile the whole project, I got a duplicate symbols error.\r\n\r\n`1>ConsoleApplication10.obj : error LNK2005: \"void __cdecl from_json(class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> const &,class A &)\" (?from_json@@YAXABV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@AAVA@@@Z) \u5df2\u7ecf\u5728 B.obj \u4e2d\u5b9a\u4e49\r\n1>ConsoleApplication10.obj : error LNK2005: \"void __cdecl to_json(class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> &,class A const &)\" (?to_json@@YAXAAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@ABVA@@@Z) \u5df2\u7ecf\u5728 B.obj \u4e2d\u5b9a\u4e49\r\n1>D:\\Documents\\Visual Studio 2015\\Projects\\ConsoleApplication10\\Debug\\ConsoleApplication10.exe : fatal error LNK1169: \u627e\u5230\u4e00\u4e2a\u6216\u591a\u4e2a\u591a\u91cd\u5b9a\u4e49\u7684\u7b26\u53f7`\r\n\r\nAnd I solved this by set to_json/from_json as static methods. But, according to the tutorial, I don't have to do this. I don't know if this is a document error, or I use this in a wrong way.\r\n\r\nSorry for my poor English...\r\n\r\nA.h \r\n\r\n```cpp\r\n#pragma once\r\n\r\n#include \"json.hpp\"\r\n\r\nusing json = nlohmann::json;\r\n\r\n\r\nclass A\r\n{};\r\n\r\nvoid to_json(json& j, const A& val) {\r\n}\r\n\r\nvoid from_json(const json& j, A& val) {\r\n}\r\n```\r\n\r\nB.h\r\n\r\n```cpp\r\n#pragma once\r\n\r\n#include \"A.h\"\r\n\r\nclass B\r\n{\r\npublic:\r\n\tB();\r\n\t~B();\r\n};\r\n```\r\n\r\nB.cpp\r\n\r\n```cpp\r\n#include \"stdafx.h\"\r\n#include \"B.h\"\r\n\r\n\r\nB::B()\r\n{\r\n}\r\n\r\n\r\nB::~B()\r\n{\r\n}\r\n```\r\n\r\nmain file\r\n```cpp\r\n#include \"stdafx.h\"\r\n\r\n#include \"A.h\"\r\n\r\nusing json = nlohmann::json;\r\n\r\nint main()\r\n{\r\n\tjson _ = A();\r\n\r\n    return 0;\r\n}\r\n```\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/541", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/541/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/541/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/541/events", "html_url": "https://github.com/nlohmann/json/issues/541", "id": 218419612, "node_id": "MDU6SXNzdWUyMTg0MTk2MTI=", "number": 541, "title": "consider adding a bool json::is_valid(std::string const&) non-member function", "user": {"login": "user1095108", "id": 8299348, "node_id": "MDQ6VXNlcjgyOTkzNDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8299348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/user1095108", "html_url": "https://github.com/user1095108", "followers_url": "https://api.github.com/users/user1095108/followers", "following_url": "https://api.github.com/users/user1095108/following{/other_user}", "gists_url": "https://api.github.com/users/user1095108/gists{/gist_id}", "starred_url": "https://api.github.com/users/user1095108/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/user1095108/subscriptions", "organizations_url": "https://api.github.com/users/user1095108/orgs", "repos_url": "https://api.github.com/users/user1095108/repos", "events_url": "https://api.github.com/users/user1095108/events{/privacy}", "received_events_url": "https://api.github.com/users/user1095108/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-31T07:28:02Z", "updated_at": "2017-03-31T07:58:52Z", "closed_at": "2017-03-31T07:58:42Z", "author_association": "NONE", "body": "Consider this scenario. An arbitrary string is provided to an app. The string is supposed to contain valid json, but the app has no way of knowing this. It tries to parse the json with json::parse(), but exceptions are disabled. This means, if the json is not valid, std::abort() will be called and the app will abort and there is no way to prevent this from happening."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/539", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/539/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/539/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/539/events", "html_url": "https://github.com/nlohmann/json/issues/539", "id": 218136956, "node_id": "MDU6SXNzdWUyMTgxMzY5NTY=", "number": 539, "title": "Help request", "user": {"login": "abdessattar", "id": 14142064, "node_id": "MDQ6VXNlcjE0MTQyMDY0", "avatar_url": "https://avatars3.githubusercontent.com/u/14142064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abdessattar", "html_url": "https://github.com/abdessattar", "followers_url": "https://api.github.com/users/abdessattar/followers", "following_url": "https://api.github.com/users/abdessattar/following{/other_user}", "gists_url": "https://api.github.com/users/abdessattar/gists{/gist_id}", "starred_url": "https://api.github.com/users/abdessattar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abdessattar/subscriptions", "organizations_url": "https://api.github.com/users/abdessattar/orgs", "repos_url": "https://api.github.com/users/abdessattar/repos", "events_url": "https://api.github.com/users/abdessattar/events{/privacy}", "received_events_url": "https://api.github.com/users/abdessattar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2017-03-30T09:36:38Z", "updated_at": "2017-04-07T19:29:55Z", "closed_at": "2017-03-31T23:06:59Z", "author_association": "NONE", "body": "Hello,\r\nI want to thank you for the important advice. I get what I want but with simple class.\r\nWhen I tried your solution with singleton and other specific classes. I got this error \"C2338   could not find to _json() method in T's namespace \".\r\nReally, I need your help for advancing as soon as possible.\r\nthank you in advance,\r\nBest regards,"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/538", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/538/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/538/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/538/events", "html_url": "https://github.com/nlohmann/json/issues/538", "id": 218099754, "node_id": "MDU6SXNzdWUyMTgwOTk3NTQ=", "number": 538, "title": "How to deal with missing keys in `from_json`?", "user": {"login": "dneise", "id": 8200858, "node_id": "MDQ6VXNlcjgyMDA4NTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/8200858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dneise", "html_url": "https://github.com/dneise", "followers_url": "https://api.github.com/users/dneise/followers", "following_url": "https://api.github.com/users/dneise/following{/other_user}", "gists_url": "https://api.github.com/users/dneise/gists{/gist_id}", "starred_url": "https://api.github.com/users/dneise/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dneise/subscriptions", "organizations_url": "https://api.github.com/users/dneise/orgs", "repos_url": "https://api.github.com/users/dneise/repos", "events_url": "https://api.github.com/users/dneise/events{/privacy}", "received_events_url": "https://api.github.com/users/dneise/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 6, "created_at": "2017-03-30T07:03:15Z", "updated_at": "2017-03-30T15:40:36Z", "closed_at": "2017-03-30T15:39:14Z", "author_association": "NONE", "body": "I am following this example: https://github.com/nlohmann/json#basic-usage\r\n\r\nWhen there is a key missing in the json, inside `from_json`, I expected to get an exception, but I just get a core_dump. \r\nI would like to avoid writing a lot of boilerplate to check for the existence of keys and type of  values myself.\r\nI am mostly a python guy and am used to the try..catch style of doing things. This awesome library looked like it supports this style in this case.\r\n\r\nMy own type looks like this, lives inside namespace `Lid`:\r\n\r\n    struct MotorReport\r\n    {\r\n        int8_t motor_id;\r\n        int32_t duration_in_ms;\r\n        int8_t stop_reason;\r\n        std::vector<int> current;\r\n        std::vector<int> position;\r\n    };\r\n\r\n    void to_json(nlohmann::json& j, const MotorReport& r) {\r\n        j = nlohmann::json{\r\n            {\"motor_id\", r.motor_id},\r\n            {\"duration[ms]\", r.duration_in_ms},\r\n            {\"motor_stop_reason\", {\r\n                {\"motor_stop_id\", r.stop_reason}\r\n            }},\r\n            {\"current\", r.current},\r\n            {\"position\", r.position}\r\n        };\r\n    }\r\n\r\n    void from_json(const nlohmann::json& j, MotorReport& r) {\r\n        r.motor_id = j[\"motor_id\"];\r\n        r.duration_in_ms = j[\"duration[ms]\"];\r\n        r.stop_reason = j[\"motor_stop_reason\"][\"motor_stop_id\"];\r\n        r.current = j[\"current\"].get<std::vector<int> >();\r\n        r.position = j[\"position\"].get<std::vector<int> >();\r\n    }\r\n\r\nwhen the json is complete, `from_json` nicely works.\r\n\r\n    json j = R\"(\r\n         {\r\n              \"motor_id\":1,\r\n              \"duration[ms]\":4129,\r\n              \"motor_stop_reason\":{\r\n                  \"motor_stop_name\":\"User Interupt\",\r\n                  \"motor_stop_id\":5\r\n              },\r\n              \"current\":[\r\n                  468,181,181,188,219,222,223,223,224,222,220,218,218,218,\r\n                  217,214,212,210,209,210,210,208,206,206,206\r\n              ],\r\n              \"position\":[\r\n                  37,37,37,37,36,37,37,37,37,37,36,37,37,\r\n                  37,37,37,37,37,37,37,37,36,37,37,37\r\n              ]\r\n          }\r\n    )\"_json;\r\n\r\n    Lid::MotorReport mr = j;\r\n\r\nWhen I leave out a necessary key, e.g. `motor_id` like this, I expected to get a `std::domain_error` or so.\r\nSo I tested this:\r\n\r\n    json j3 = R\"(\r\n         {\r\n              \"duration[ms]\":4129,\r\n              \"motor_stop_reason\":{\r\n                  \"motor_stop_name\":\"User Interupt\",\r\n                  \"motor_stop_id\":5\r\n              },\r\n              \"current\":[\r\n                  468,181,181,188,219,222,223,223,224,222,220,218,218,218,\r\n                  217,214,212,210,209,210,210,208,206,206,206\r\n              ],\r\n              \"position\":[\r\n                  37,37,37,37,36,37,37,37,37,37,36,37,37,\r\n                  37,37,37,37,37,37,37,37,36,37,37,37\r\n              ]\r\n          }\r\n    )\"_json;\r\n\r\n    Lid::MotorReport mr3 = j3;\r\n\r\nBut I get a core dump instead:\r\n\r\n    test_json3: json.hpp:4010: const value_type& nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::operator[](T*) const [with T = const char; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::adl_serializer; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::const_reference = const nlohmann::basic_json<>&; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::value_type = nlohmann::basic_json<>]: Assertion `m_value.object->find(key) != m_value.object->end()' failed.\r\n    Aborted (core dumped)\r\n\r\n--- \r\n\r\nJust to be sure if exception work at all. When trying to access the missing key outside `from_json` I get a nice exception. So this:\r\n\r\n    try{\r\n        int myint = j3[\"motor_id\"];\r\n    }\r\n    catch(...){\r\n        std::clog << boost::current_exception_diagnostic_information() << std::endl;\r\n    }\r\n\r\n\r\nLeads to this:\r\n\r\n    Dynamic exception type: std::domain_error\r\n    std::exception::what: type must be number, but is null\r\n\r\n----\r\n\r\nI tried putting the same `try{  }catch(...){}` into `from_json`, but I still got a core dump and no nice exception I can catch.\r\n\r\nSo after this long text comes the question: What is your canonical way of dealing with missing keys inside `from_json`\r\n\r\nThanks a lot for the awesome work.\r\n\r\n----\r\n\r\nplatform \tUbuntu 16.04 LTS\r\ngcc version 5.3.1 20160413 (Ubuntu 5.3.1-14ubuntu2.1) \r\nUsing the single header `json.hpp v.2.1.1`\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/537", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/537/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/537/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/537/events", "html_url": "https://github.com/nlohmann/json/issues/537", "id": 217461799, "node_id": "MDU6SXNzdWUyMTc0NjE3OTk=", "number": 537, "title": "recursive from_msgpack implementation will stack overflow", "user": {"login": "xgzeng", "id": 230203, "node_id": "MDQ6VXNlcjIzMDIwMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/230203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xgzeng", "html_url": "https://github.com/xgzeng", "followers_url": "https://api.github.com/users/xgzeng/followers", "following_url": "https://api.github.com/users/xgzeng/following{/other_user}", "gists_url": "https://api.github.com/users/xgzeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/xgzeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xgzeng/subscriptions", "organizations_url": "https://api.github.com/users/xgzeng/orgs", "repos_url": "https://api.github.com/users/xgzeng/repos", "events_url": "https://api.github.com/users/xgzeng/events{/privacy}", "received_events_url": "https://api.github.com/users/xgzeng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 571470316, "node_id": "MDU6TGFiZWw1NzE0NzAzMTY=", "url": "https://api.github.com/repos/nlohmann/json/labels/aspect:%20binary%20formats", "name": "aspect: binary formats", "color": "5319e7", "default": false}, {"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-28T06:38:46Z", "updated_at": "2017-03-28T21:59:34Z", "closed_at": "2017-03-28T21:46:19Z", "author_association": "NONE", "body": "`from_msgpack` function(etc) parses data recursively, which will cause stack overflow when process deep nested structure. \r\nIt will be DOS vulnerabilities, if we use library to process data from outside.\r\n\r\nFollowing is example code to generate malicious data. `msgpack_pack_array` is not shown here.\r\n```cpp\r\nfor (int i = 0; i < 10000; ++i) {\r\n    msgpack_pack_array(buffer, 1);\r\n}\r\nmsgpack_pack_array(buffer, 0);\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/531", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/531/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/531/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/531/events", "html_url": "https://github.com/nlohmann/json/issues/531", "id": 216504916, "node_id": "MDU6SXNzdWUyMTY1MDQ5MTY=", "number": 531, "title": "Exception objects must be nothrow copy constructible (ERR60-CPP)", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 4, "created_at": "2017-03-23T17:12:26Z", "updated_at": "2017-04-07T19:29:55Z", "closed_at": "2017-03-26T10:54:58Z", "author_association": "OWNER", "body": "The SEI CERT C++ Coding Standard states in ERR60-CPP:\r\n\r\n> If the copy constructor for the exception object type throws during the copy initialization, std::terminate() is called, which can result in undefined behavior.\r\n\r\nThe user-defined exceptions all base on `detail::exception` which has a `std::string` member. The exceptions have to be refactored to satisfy `std::is_nothrow_copy_constructible`."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/529", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/529/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/529/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/529/events", "html_url": "https://github.com/nlohmann/json/issues/529", "id": 216407939, "node_id": "MDU6SXNzdWUyMTY0MDc5Mzk=", "number": 529, "title": "Support for multiple root elements", "user": {"login": "alexculea", "id": 16594531, "node_id": "MDQ6VXNlcjE2NTk0NTMx", "avatar_url": "https://avatars0.githubusercontent.com/u/16594531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexculea", "html_url": "https://github.com/alexculea", "followers_url": "https://api.github.com/users/alexculea/followers", "following_url": "https://api.github.com/users/alexculea/following{/other_user}", "gists_url": "https://api.github.com/users/alexculea/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexculea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexculea/subscriptions", "organizations_url": "https://api.github.com/users/alexculea/orgs", "repos_url": "https://api.github.com/users/alexculea/repos", "events_url": "https://api.github.com/users/alexculea/events{/privacy}", "received_events_url": "https://api.github.com/users/alexculea/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-03-23T12:14:12Z", "updated_at": "2017-05-21T13:07:16Z", "closed_at": "2017-03-28T23:05:31Z", "author_association": "NONE", "body": "I've been using the library for a very short time, so please excuse me if I'm coming out of the context of previous discussions (or might've missed some important aspect).\r\n\r\nTaking note of the contribution guidelines in regards to the JSON standard conformation, this is a proposition to start discussing if supporting multiple root elements could be considered for this great project.\r\n\r\n### The problem:\r\nThe constraint of having a single root element per document adds the necessity for JSON-generator programs to consider previously generated data when adding new entries. Consider the following scenario: a program takes performance samples every n-secs and dumps them to the filesystem. To provide valid JSON output, the program has look at the previously generated data, adding commas, re-align '}'s or ']'s and so forth. Imagine how this scales when a short time, say 1 second, is used to store the dumps on a relatively busy system. Not good. The alternative: generate a file per sample but that doesn't scale either.\r\n\r\n### What do the standards say?\r\n[rfc4627](https://tools.ietf.org/html/rfc4627), says that \"A JSON text is a serialized object or array.\" (paragraph 2) which enforces the current implementations to look at everything being enclosed in root object {} or array [].\r\n\r\n### How about the real world?\r\nAlthough, the same rfc4627 says that generators MUST conform to the grammar (see chapter 5 Generators) I've seen implementations that do not respect this, understandably IMHO because of the trouble of parsing back the old data. Two examples I can think of right now are: GlusterFS 3.8 (diagnostics.stats-dump-interval) and WinstonJS.\r\n\r\n### What could be done?\r\nI think some sort of flag could be implemented in the library to allow multiple root elements, thus solving the said dilemma.  I'm not sure of the implementation details at the this time but would appreciate the contributors feedback on the matter.\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/528", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/528/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/528/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/528/events", "html_url": "https://github.com/nlohmann/json/issues/528", "id": 215817747, "node_id": "MDU6SXNzdWUyMTU4MTc3NDc=", "number": 528, "title": "Port has_shape from dropbox/json11", "user": {"login": "berkus", "id": 80306, "node_id": "MDQ6VXNlcjgwMzA2", "avatar_url": "https://avatars3.githubusercontent.com/u/80306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berkus", "html_url": "https://github.com/berkus", "followers_url": "https://api.github.com/users/berkus/followers", "following_url": "https://api.github.com/users/berkus/following{/other_user}", "gists_url": "https://api.github.com/users/berkus/gists{/gist_id}", "starred_url": "https://api.github.com/users/berkus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berkus/subscriptions", "organizations_url": "https://api.github.com/users/berkus/orgs", "repos_url": "https://api.github.com/users/berkus/repos", "events_url": "https://api.github.com/users/berkus/events{/privacy}", "received_events_url": "https://api.github.com/users/berkus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-03-21T17:25:27Z", "updated_at": "2017-04-09T14:49:30Z", "closed_at": "2017-04-09T14:49:26Z", "author_association": "CONTRIBUTOR", "body": "It has a very nice utility function, which I ported to nlohmann/json for myself, but would be nice to have it as part of the class:\r\n\r\n```cpp\r\n#pragma once\r\n\r\n#include <json.hpp>\r\n\r\n/* has_shape(json, types)\r\n *\r\n * Return true if this is a JSON object and, for each item in types, has a field of\r\n * the given type. If not, return false and set err to a descriptive message.\r\n *                                        ^^^ feel free to adjust the return to your error model, but this one is handy\r\n */\r\nusing shape_t = std::initializer_list<std::pair<std::string, nlohmann::json::value_t>>;\r\n\r\nbool has_shape(nlohmann::json const& js, shape_t const& shape, std::string& err)\r\n{\r\n    if (!js.is_object()) {\r\n        err = \"expected JSON object, got \" + js.dump();\r\n        return false;\r\n    }\r\n\r\n    for (auto & item : shape) {\r\n        if (js[item.first].type() != item.second) {\r\n            err = \"bad type for \" + item.first + \" in \" + js.dump();\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/527", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/527/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/527/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/527/events", "html_url": "https://github.com/nlohmann/json/issues/527", "id": 215616228, "node_id": "MDU6SXNzdWUyMTU2MTYyMjg=", "number": 527, "title": "dump_float: truncation from ptrdiff_t to long", "user": {"login": "ftillier", "id": 15254344, "node_id": "MDQ6VXNlcjE1MjU0MzQ0", "avatar_url": "https://avatars2.githubusercontent.com/u/15254344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftillier", "html_url": "https://github.com/ftillier", "followers_url": "https://api.github.com/users/ftillier/followers", "following_url": "https://api.github.com/users/ftillier/following{/other_user}", "gists_url": "https://api.github.com/users/ftillier/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftillier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftillier/subscriptions", "organizations_url": "https://api.github.com/users/ftillier/orgs", "repos_url": "https://api.github.com/users/ftillier/repos", "events_url": "https://api.github.com/users/ftillier/events{/privacy}", "received_events_url": "https://api.github.com/users/ftillier/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 9, "created_at": "2017-03-21T03:06:31Z", "updated_at": "2017-03-23T00:32:01Z", "closed_at": "2017-03-23T00:32:01Z", "author_association": "NONE", "body": "Building with VisualStudio 2017, using /W4 and /Wx, I get the following:\r\n```1>json.hpp(6946): warning C4244: '=': conversion from 'std::_Array_iterator<_Ty,64>::difference_type' to 'long', possible loss of data```\r\n\r\nOn Windows, long is always 32-bits.  Declaring 'len' as std::ptrdiff_t fixes the issue.\r\n\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/525", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/525/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/525/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/525/events", "html_url": "https://github.com/nlohmann/json/issues/525", "id": 215341786, "node_id": "MDU6SXNzdWUyMTUzNDE3ODY=", "number": 525, "title": "Make exception base class visible in basic_json", "user": {"login": "krzysztofwos", "id": 795525, "node_id": "MDQ6VXNlcjc5NTUyNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/795525?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krzysztofwos", "html_url": "https://github.com/krzysztofwos", "followers_url": "https://api.github.com/users/krzysztofwos/followers", "following_url": "https://api.github.com/users/krzysztofwos/following{/other_user}", "gists_url": "https://api.github.com/users/krzysztofwos/gists{/gist_id}", "starred_url": "https://api.github.com/users/krzysztofwos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krzysztofwos/subscriptions", "organizations_url": "https://api.github.com/users/krzysztofwos/orgs", "repos_url": "https://api.github.com/users/krzysztofwos/repos", "events_url": "https://api.github.com/users/krzysztofwos/events{/privacy}", "received_events_url": "https://api.github.com/users/krzysztofwos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 1, "created_at": "2017-03-20T06:55:36Z", "updated_at": "2017-03-22T06:52:06Z", "closed_at": "2017-03-22T06:52:03Z", "author_association": "CONTRIBUTOR", "body": "Let's make the base class of exceptions visible in`basic_json`, along `parse_error` and others. The reason why I think it is useful is that often one wants to catch all exceptions related to a library in order to guarantee that they cannot escape module boundary. It also makes the code future-proof if new exception types are added. Of course, this can be done right now by simply catching `nlohmann::detail::exception`.\r\n\r\n@nlohmann on a personal note, I'm sorry this comes after you've merged user-defined exceptions feature branch. I was traveling for the last couple of months and I did not pay attention. Sorry!"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/524", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/524/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/524/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/524/events", "html_url": "https://github.com/nlohmann/json/issues/524", "id": 215287775, "node_id": "MDU6SXNzdWUyMTUyODc3NzU=", "number": 524, "title": "msgpack unit test failures on ppc64 arch", "user": {"login": "dkopecek", "id": 1353140, "node_id": "MDQ6VXNlcjEzNTMxNDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1353140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkopecek", "html_url": "https://github.com/dkopecek", "followers_url": "https://api.github.com/users/dkopecek/followers", "following_url": "https://api.github.com/users/dkopecek/following{/other_user}", "gists_url": "https://api.github.com/users/dkopecek/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkopecek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkopecek/subscriptions", "organizations_url": "https://api.github.com/users/dkopecek/orgs", "repos_url": "https://api.github.com/users/dkopecek/repos", "events_url": "https://api.github.com/users/dkopecek/events{/privacy}", "received_events_url": "https://api.github.com/users/dkopecek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 571470316, "node_id": "MDU6TGFiZWw1NzE0NzAzMTY=", "url": "https://api.github.com/repos/nlohmann/json/labels/aspect:%20binary%20formats", "name": "aspect: binary formats", "color": "5319e7", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}, {"id": 344572510, "node_id": "MDU6TGFiZWwzNDQ1NzI1MTA=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20help%20needed", "name": "state: help needed", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 45, "created_at": "2017-03-19T19:27:56Z", "updated_at": "2017-07-09T14:57:38Z", "closed_at": "2017-07-09T14:57:38Z", "author_association": "CONTRIBUTOR", "body": "Hi, I was trying to build[1] the newest release on multiple architectures (Fedora build architectures). There seems to be some msgpack related unit test failure on ppc64. See the attached build log:\r\n\r\n[json-ppc64-build.log.txt](https://github.com/nlohmann/json/files/853472/json-ppc64-build.log.txt)\r\n\r\n[1] https://koji.fedoraproject.org/koji/taskinfo?taskID=18476755"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/523", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/523/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/523/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/523/events", "html_url": "https://github.com/nlohmann/json/issues/523", "id": 215255795, "node_id": "MDU6SXNzdWUyMTUyNTU3OTU=", "number": 523, "title": "How about split the implementation out, and only leave the interface?", "user": {"login": "lygstate", "id": 121040, "node_id": "MDQ6VXNlcjEyMTA0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/121040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lygstate", "html_url": "https://github.com/lygstate", "followers_url": "https://api.github.com/users/lygstate/followers", "following_url": "https://api.github.com/users/lygstate/following{/other_user}", "gists_url": "https://api.github.com/users/lygstate/gists{/gist_id}", "starred_url": "https://api.github.com/users/lygstate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lygstate/subscriptions", "organizations_url": "https://api.github.com/users/lygstate/orgs", "repos_url": "https://api.github.com/users/lygstate/repos", "events_url": "https://api.github.com/users/lygstate/events{/privacy}", "received_events_url": "https://api.github.com/users/lygstate/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-19T10:48:52Z", "updated_at": "2017-03-19T14:53:56Z", "closed_at": "2017-03-19T14:52:11Z", "author_association": "NONE", "body": "Currently, all the codes are in header file, there is advantange for simplicity to use, but also means slow compling speed."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/522", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/522/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/522/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/522/events", "html_url": "https://github.com/nlohmann/json/issues/522", "id": 215199903, "node_id": "MDU6SXNzdWUyMTUxOTk5MDM=", "number": 522, "title": "VC++2017 not enough actual parameters for macro 'max'", "user": {"login": "pavel-pimenov", "id": 920705, "node_id": "MDQ6VXNlcjkyMDcwNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/920705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pavel-pimenov", "html_url": "https://github.com/pavel-pimenov", "followers_url": "https://api.github.com/users/pavel-pimenov/followers", "following_url": "https://api.github.com/users/pavel-pimenov/following{/other_user}", "gists_url": "https://api.github.com/users/pavel-pimenov/gists{/gist_id}", "starred_url": "https://api.github.com/users/pavel-pimenov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pavel-pimenov/subscriptions", "organizations_url": "https://api.github.com/users/pavel-pimenov/orgs", "repos_url": "https://api.github.com/users/pavel-pimenov/repos", "events_url": "https://api.github.com/users/pavel-pimenov/events{/privacy}", "received_events_url": "https://api.github.com/users/pavel-pimenov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-18T15:07:04Z", "updated_at": "2017-03-18T15:11:46Z", "closed_at": "2017-03-18T15:11:46Z", "author_association": "NONE", "body": "VC++2017\r\n\r\n![default](https://cloud.githubusercontent.com/assets/920705/24073246/98e3f4a8-0c05-11e7-8e6f-8f82dbbe44e2.png)\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/521", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/521/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/521/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/521/events", "html_url": "https://github.com/nlohmann/json/issues/521", "id": 215186269, "node_id": "MDU6SXNzdWUyMTUxODYyNjk=", "number": 521, "title": "crash on empty ifstream", "user": {"login": "Chrjstoph", "id": 6479196, "node_id": "MDQ6VXNlcjY0NzkxOTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6479196?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Chrjstoph", "html_url": "https://github.com/Chrjstoph", "followers_url": "https://api.github.com/users/Chrjstoph/followers", "following_url": "https://api.github.com/users/Chrjstoph/following{/other_user}", "gists_url": "https://api.github.com/users/Chrjstoph/gists{/gist_id}", "starred_url": "https://api.github.com/users/Chrjstoph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Chrjstoph/subscriptions", "organizations_url": "https://api.github.com/users/Chrjstoph/orgs", "repos_url": "https://api.github.com/users/Chrjstoph/repos", "events_url": "https://api.github.com/users/Chrjstoph/events{/privacy}", "received_events_url": "https://api.github.com/users/Chrjstoph/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-18T11:17:42Z", "updated_at": "2017-03-18T12:08:54Z", "closed_at": "2017-03-18T12:08:54Z", "author_association": "NONE", "body": "\r\nif file is empty, parsing crashes."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/520", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/520/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/520/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/520/events", "html_url": "https://github.com/nlohmann/json/issues/520", "id": 215130051, "node_id": "MDU6SXNzdWUyMTUxMzAwNTE=", "number": 520, "title": "Suggestion: Support tabs for indentation when serializing to stream.", "user": {"login": "timmcd69", "id": 12360052, "node_id": "MDQ6VXNlcjEyMzYwMDUy", "avatar_url": "https://avatars0.githubusercontent.com/u/12360052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timmcd69", "html_url": "https://github.com/timmcd69", "followers_url": "https://api.github.com/users/timmcd69/followers", "following_url": "https://api.github.com/users/timmcd69/following{/other_user}", "gists_url": "https://api.github.com/users/timmcd69/gists{/gist_id}", "starred_url": "https://api.github.com/users/timmcd69/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timmcd69/subscriptions", "organizations_url": "https://api.github.com/users/timmcd69/orgs", "repos_url": "https://api.github.com/users/timmcd69/repos", "events_url": "https://api.github.com/users/timmcd69/events{/privacy}", "received_events_url": "https://api.github.com/users/timmcd69/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 1, "created_at": "2017-03-17T21:45:18Z", "updated_at": "2017-05-07T19:04:31Z", "closed_at": "2017-05-07T19:04:31Z", "author_association": "NONE", "body": "With very slight modification to json.hpp, it can support setting the fill char on the output stream to '\\t', and then using this fill char as the indent char instead of space.  It works well, for example:\r\n\r\nnlohman::json jsonval(...);\r\nstd::ofstream ofs(path);\r\nofs << std::setfill('\\t') << std::setw(1) << jsonval;\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/519", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/519/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/519/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/519/events", "html_url": "https://github.com/nlohmann/json/issues/519", "id": 215124349, "node_id": "MDU6SXNzdWUyMTUxMjQzNDk=", "number": 519, "title": "Abrt in get_number (OSS-Fuzz 885)", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 1, "created_at": "2017-03-17T21:15:51Z", "updated_at": "2017-04-07T19:29:55Z", "closed_at": "2017-03-19T07:36:34Z", "author_association": "OWNER", "body": "```\r\nDetailed report: https://oss-fuzz.com/testcase?key=5393597081845760\r\n\r\nProject: json\r\nFuzzer: afl_json_parse_afl_fuzzer\r\nFuzz target binary: parse_afl_fuzzer\r\nJob Type: afl_asan_json\r\nPlatform Id: linux\r\n\r\nCrash Type: Abrt on unknown address 0x000000000001\r\nCrash Address: \r\nCrash State:\r\n  demangling_terminate_handler\r\n  std::__terminate\r\n  __cxa_throw\r\n  \r\nSanitizer: address (ASAN)\r\n\r\nReproducer Testcase: https://oss-fuzz.com/download/AMIfv97XDciMKr6_PypKy2kipdV1daNithj1enT67JgrprThT6JplCYIZtFZ_TCtBzO3zFNgwRZ8Xsg_Khn28ZYzwrJM5vUfpMLfjfnPjFvWGhUMH_ancyg7Inp7syPVn2pDxjmw4t3DTXkRZP1mxbG3arN7EiqS0C6zWNLGddHBz6ZFYmK7zG9c8Pm6jwsT-L6skXi5wgExIdnnf1DsXigBg9qu2rrS7PTgIfJtujTmJj8QxaHSvcdDpvId4OMhnPsip3AFZ4buiJMmxVFXvCH_HkalErQyMLzyMKRtGbYVnD8hQSy3e-uSfoilQDwT-VAbHZdrHIua195E9Sxo6htAZ49uLdIooFBrDOT0enP1Bltl60tx1dO-bobiGxbrPPE5vsqrb0eiG7ArC3_BlWWj0v3aOn-PfJwyOlzdWwbzrikZYSm5PT8?testcase_id=5393597081845760\r\n\r\n\r\nIssue filed automatically.\r\n\r\nSee https://github.com/google/oss-fuzz/blob/master/docs/reproducing.md for more information.\r\n\r\nThis bug is subject to a 90 day disclosure deadline. If 90 days elapse\r\nwithout an upstream patch, then the bug report will automatically\r\nbecome visible to the public.\r\n```\r\n\r\n```\r\n\tSCARINESS: 10 (signal)\r\n#0 0x7f73f22e2417 in gsignal\r\n#1 0x7f73f22e4019 in abort\r\n#2 0x583436 in abort_message\r\n#3 0x584c65 in demangling_terminate_handler()\r\n#4 0x5832d5 in std::__terminate(void (*)())\r\n#5 0x5847d6 in __cxa_throw\r\n#6 0x524dfd in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::lexer::get_number(nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>&, nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::lexer::token_type) const /src/json/src/json.hpp:11871:21\r\n#7 0x51b119 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::parser::parse_internal(bool) /src/json/src/json.hpp:12146:29\r\n#8 0x51be3a in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::parser::parse_internal(bool) /src/json/src/json.hpp:12092:38\r\n#9 0x51a67f in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::parser::parse() /src/json/src/json.hpp:11953:33\r\n#10 0x5132ec in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer> nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::parse<unsigned char const*, 0>(unsigned char const*, unsigned char const*, std::__1::function<bool (int, nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::parse_event_t, nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>&)>) /src/json/src/json.hpp:7244:40\r\n#11 0x512a40 in LLVMFuzzerTestOneInput /src/json/test/src/fuzzer-parse_json.cpp:34:19\r\n#12 0x512333 in main /src/libfuzzer/afl/afl_driver.cpp:287:7\r\n#13 0x7f73f22cd82f in __libc_start_main\r\n#14 0x41b5d8 in _start\r\n```\r\n\r\n[clusterfuzz-testcase-5393597081845760.zip](https://github.com/nlohmann/json/files/851788/clusterfuzz-testcase-5393597081845760.zip)\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/518", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/518/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/518/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/518/events", "html_url": "https://github.com/nlohmann/json/issues/518", "id": 215123550, "node_id": "MDU6SXNzdWUyMTUxMjM1NTA=", "number": 518, "title": "Abrt on unknown address (OSS-Fuzz 884)", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 571470316, "node_id": "MDU6TGFiZWw1NzE0NzAzMTY=", "url": "https://api.github.com/repos/nlohmann/json/labels/aspect:%20binary%20formats", "name": "aspect: binary formats", "color": "5319e7", "default": false}, {"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 1, "created_at": "2017-03-17T21:11:54Z", "updated_at": "2017-04-07T19:29:55Z", "closed_at": "2017-03-19T07:36:34Z", "author_association": "OWNER", "body": "```\r\nDetailed report: https://oss-fuzz.com/testcase?key=5315478471835648\r\n\r\nProject: json\r\nFuzzer: afl_json_parse_msgpack_fuzzer\r\nFuzz target binary: parse_msgpack_fuzzer\r\nJob Type: afl_asan_json\r\nPlatform Id: linux\r\n\r\nCrash Type: Abrt on unknown address 0x000000000001\r\nCrash Address: \r\nCrash State:\r\n  _start\r\n  \r\nSanitizer: address (ASAN)\r\n\r\nReproducer Testcase: https://oss-fuzz.com/download/AMIfv96fkf9AwXKy-wXbV61t7B0JC38mg5zA4-rUOl-zRwncgV-WS83ugg7RnDc0TfzXL31HJbzmOk_qUOXy3YNOKytZU_avhvk8gH6o0GGeRczjdEO8DEwn2ha8HFU09-9Fw-Hh9ekhRlfTNOmIsSnleZYWEymX-eldkHDGnjwJyh4UDaQEcWgFtYb7kkssT4H-uA42bQpkauB4PsOG6NECCcpstleKoNAMMBPrsIiicvKPtn8CGF6SuilJXlkzZ3zAUwGdYA00m6ibSBMffRlbRjOKNq0T3rkW6r3cGn2mEOj2WQ_c4kzGvOZOXtgUA3F8bCLAXeBdSX2m6l2dcH5dS26wuHE3ZDDxpEYAXNxS0eiWPbeIlOPFwmTDhovUqXV7WEn8_mgvj4XjQC-6CakOaIBB9hawxcNBsArk4ZGi5U-ljMdW7jM?testcase_id=5315478471835648\r\n\r\n\r\nIssue filed automatically.\r\n\r\nSee https://github.com/google/oss-fuzz/blob/master/docs/reproducing.md for more information.\r\n\r\nThis bug is subject to a 90 day disclosure deadline. If 90 days elapse\r\nwithout an upstream patch, then the bug report will automatically\r\nbecome visible to the public.\r\n```\r\n\r\n```\r\n[Environment] ASAN_OPTIONS = redzone=32:handle_sigill=1:strict_string_check=1:allocator_release_to_os_interval_ms=500:strict_memcmp=1:detect_container_overflow=1:coverage=0:allocator_may_return_null=1:use_sigaltstack=1:detect_stack_use_after_return=1:alloc_dealloc_mismatch=0:detect_leaks=1:print_scariness=1:strip_path_prefix=/workspace/:max_uar_stack_size_log=16:handle_abort=1:check_malloc_usable_size=0:quarantine_size_mb=10:detect_odr_violation=0:symbolize=0:handle_segv=1:fast_unwind_on_fatal=0\r\n[Environment] LSAN_OPTIONS = symbolize=1:external_symbolizer_path=/mnt/scratch0/clusterfuzz/scripts/linux/llvm-symbolizer\r\nparse_msgpack_fuzzer: src/fuzzer-parse_msgpack.cpp:45: int LLVMFuzzerTestOneInput(const uint8_t *, size_t): Assertion `j1 == j2 failed.\r\nASAN:DEADLYSIGNAL\r\n=================================================================\r\n==1==ERROR: AddressSanitizer: ABRT on unknown address 0x000000000001 (pc 0x7f1ba631e418 bp 0x0000005b6a80 sp 0x7ffc3cb95148 T0)\r\nSCARINESS: 10 (signal)\r\n#0 0x7f1ba631e417 in gsignal\r\n#1 0x7f1ba6320019 in abort\r\n#2 0x7f1ba6316bd6 in libc.so.6\r\n#3 0x7f1ba6316c81 in __assert_fail\r\n#4 0x512b27 in LLVMFuzzerTestOneInput /src/json/test/src/fuzzer-parse_msgpack.cpp:45:13\r\n#5 0x5122e3 in main /src/libfuzzer/afl/afl_driver.cpp:287:7\r\n#6 0x7f1ba630982f in __libc_start_main\r\n#7 0x41b588 in _start\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: ABRT (/lib/x86_64-linux-gnu/libc.so.6+0x35417)\r\n==1==ABORTING\r\n```\r\n\r\n[clusterfuzz-testcase-5315478471835648.zip](https://github.com/nlohmann/json/files/851783/clusterfuzz-testcase-5315478471835648.zip)\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/517", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/517/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/517/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/517/events", "html_url": "https://github.com/nlohmann/json/issues/517", "id": 215122943, "node_id": "MDU6SXNzdWUyMTUxMjI5NDM=", "number": 517, "title": "Stack-overflow (OSS-Fuzz 869)", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 571470316, "node_id": "MDU6TGFiZWw1NzE0NzAzMTY=", "url": "https://api.github.com/repos/nlohmann/json/labels/aspect:%20binary%20formats", "name": "aspect: binary formats", "color": "5319e7", "default": false}, {"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-17T21:09:07Z", "updated_at": "2017-05-07T09:38:40Z", "closed_at": "2017-05-07T09:38:40Z", "author_association": "OWNER", "body": "```\r\nDetailed report: https://oss-fuzz.com/testcase?key=5116967767769088\r\n\r\nProject: json\r\nFuzzer: libFuzzer_json_parse_cbor_fuzzer\r\nJob Type: libfuzzer_asan_json\r\nPlatform Id: linux\r\n\r\nCrash Type: Stack-overflow\r\nCrash Address: 0x7ffc0dea4b58\r\nCrash State:\r\n  nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<cha\r\n  \r\nSanitizer: address (ASAN)\r\n\r\nRegressed: https://oss-fuzz.com/revisions?job=libfuzzer_asan_json&range=201701031958:201701032147\r\n\r\nReproducer Testcase: https://oss-fuzz.com/download/AMIfv95GDH2Mys_drMGzg9fUR7UPBBqUF_LhjJm-rgKw6x-oTwvsux765EavyU1j3OwyrVWiw_gW8F_Ia6rk-diY-dnPJ2rD592wN1mKQoik0vlg1QtZCaI2yCI5uBCQuaf1PBLkLbIsMQtTywZ5nmE_AZlrvhk2Mye_GJ4oM8wNGSM96vFsgM_IpJ8RXU_sE1htQ639Zyj55qzACG-LDlRAXFeA-Pxd9X2Os5u259dzhhjmH6eqLlXItedTywfMtygaPkYlc4R05g78-SwjpAyOv0BNR4dx2jkcD9xHXNjjAY-232t-qf9oWf2T66QqT_FoMbm9qtBf1FAI8H6Af4e9PUMVB2xjPOIe8uCQh50tqv58mnKY41ZAwOcstJChSYmBAAFsUSnV?testcase_id=5116967767769088\r\n\r\n\r\nIssue filed automatically.\r\n\r\nSee https://github.com/google/oss-fuzz/blob/master/docs/reproducing.md for more information.\r\n\r\nThis bug is subject to a 90 day disclosure deadline. If 90 days elapse\r\nwithout an upstream patch, then the bug report will automatically\r\nbecome visible to the public.\r\n```\r\n\r\n[clusterfuzz-testcase-5116967767769088.zip](https://github.com/nlohmann/json/files/851775/clusterfuzz-testcase-5116967767769088.zip)\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/516", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/516/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/516/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/516/events", "html_url": "https://github.com/nlohmann/json/issues/516", "id": 215122240, "node_id": "MDU6SXNzdWUyMTUxMjIyNDA=", "number": 516, "title": "Assertion error (OSS-Fuzz 868)", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 571470316, "node_id": "MDU6TGFiZWw1NzE0NzAzMTY=", "url": "https://api.github.com/repos/nlohmann/json/labels/aspect:%20binary%20formats", "name": "aspect: binary formats", "color": "5319e7", "default": false}, {"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 1, "created_at": "2017-03-17T21:05:55Z", "updated_at": "2017-04-07T19:29:55Z", "closed_at": "2017-03-19T07:36:34Z", "author_association": "OWNER", "body": "```\r\nDetailed report: https://oss-fuzz.com/testcase?key=4821044789510144\r\n\r\nProject: json\r\nFuzzer: libFuzzer_json_parse_msgpack_fuzzer\r\nFuzz target binary: parse_msgpack_fuzzer\r\nJob Type: libfuzzer_ubsan_json\r\nPlatform Id: linux\r\n\r\nCrash Type: ASSERT\r\nCrash Address: \r\nCrash State:\r\nj1 == j2\r\n\r\nSanitizer: undefined (UBSAN)\r\n\r\nRegressed: https://oss-fuzz.com/revisions?job=libfuzzer_ubsan_json&range=201703121620:201703131620\r\n\r\nReproducer Testcase: https://oss-fuzz.com/download/AMIfv95r3siDN2ltToQ5vN36W9lve3Ln8EXjFiROzufTiDX1Y4GYkxsXvg5nIbXABtyUXl4dfW-Fn_pmbCc_1r3VfsyfzpeEp0MTaFe3oIQTKSt7YgrLUVxGZmR8fB1C6MIUA4DyNVwsjf1HC4arVV-O5g31YbYleidY5uzC8KQilSkYNIjQYdDmaUJUKfHe5zig5uS6gevOeIW3RIcIMrAjJgf7Uoz03CxVxO1CYhmrJuoAx4JZOeAWmRE0u8UCa9XHLrm_l1kei87ufEplTIOYlXFGDzxcMtM0UqIHY4WW5XWjHGp_QnZSLMNDBeqGIhlCpMcUuEETwU0Yqo0PJnZAwG2EkmvPJVADA28pdK1WuxyZdGaPvlG8nzFf40TQ8J80h7M67Ouh?testcase_id=4821044789510144\r\n\r\n\r\nIssue filed automatically.\r\n\r\nSee https://github.com/google/oss-fuzz/blob/master/docs/reproducing.md for more information.\r\n\r\nThis bug is subject to a 90 day disclosure deadline. If 90 days elapse\r\nwithout an upstream patch, then the bug report will automatically\r\nbecome visible to the public.\r\n```\r\n\r\n```\r\nRunning command: /mnt/scratch0/clusterfuzz/slave-bot/builds/clusterfuzz-builds_json_3dc7f07cae4ab217c21b70d40f93a3acccc6b431/revisions/parse_msgpack_fuzzer -runs=100 -rss_limit_mb=2048 -timeout=25 /fuzz-3-json_parse_msgpack_fuzzer\r\nWARNING: Failed to find function \"__sanitizer_print_stack_trace\".\r\nINFO: Seed: 3357778421\r\nINFO: Loaded 1 modules (824 guards): [0x7399b0, 0x73a690),\r\n/mnt/scratch0/clusterfuzz/slave-bot/builds/clusterfuzz-builds_json_3dc7f07cae4ab217c21b70d40f93a3acccc6b431/revisions/parse_msgpack_fuzzer: Running 1 inputs 100 time(s) each.\r\nRunning: /fuzz-3-json_parse_msgpack_fuzzer\r\nparse_msgpack_fuzzer: src/fuzzer-parse_msgpack.cpp:45: int LLVMFuzzerTestOneInput(const uint8_t *, size_t): Assertion `j1 == j2 failed.\r\n==1== ERROR: libFuzzer: deadly signal\r\nNOTE: libFuzzer has rudimentary signal handlers.\r\nCombine libFuzzer with AddressSanitizer or similar for better crash reports.\r\nSUMMARY: libFuzzer: deadly signal\r\n```\r\n\r\n[clusterfuzz-testcase-4821044789510144.zip](https://github.com/nlohmann/json/files/851767/clusterfuzz-testcase-4821044789510144.zip)\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/515", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/515/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/515/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/515/events", "html_url": "https://github.com/nlohmann/json/issues/515", "id": 215040319, "node_id": "MDU6SXNzdWUyMTUwNDAzMTk=", "number": 515, "title": "NaN to json and back", "user": {"login": "martukas", "id": 1972005, "node_id": "MDQ6VXNlcjE5NzIwMDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1972005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martukas", "html_url": "https://github.com/martukas", "followers_url": "https://api.github.com/users/martukas/followers", "following_url": "https://api.github.com/users/martukas/following{/other_user}", "gists_url": "https://api.github.com/users/martukas/gists{/gist_id}", "starred_url": "https://api.github.com/users/martukas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martukas/subscriptions", "organizations_url": "https://api.github.com/users/martukas/orgs", "repos_url": "https://api.github.com/users/martukas/repos", "events_url": "https://api.github.com/users/martukas/events{/privacy}", "received_events_url": "https://api.github.com/users/martukas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-17T15:38:45Z", "updated_at": "2017-03-28T08:49:41Z", "closed_at": "2017-03-28T08:49:41Z", "author_association": "NONE", "body": "  double val = std::numeric_limits<double>::quiet_NaN();\r\n  DBG << \"val=\" << val;\r\n  json j = val;\r\n  DBG << \"j=\" << j.dump();\r\n  val = j;\r\n  DBG << \"val=\" << val;\r\n\r\ngoes like this:\r\n\r\nval=nan\r\nj=null\r\nterminate called after throwing an instance of 'std::domain_error'\r\n  what():  type must be number, but is null\r\n\r\nCould this not be behave nicer?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/514", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/514/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/514/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/514/events", "html_url": "https://github.com/nlohmann/json/issues/514", "id": 215013101, "node_id": "MDU6SXNzdWUyMTUwMTMxMDE=", "number": 514, "title": "Comparison of NaN", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 6, "created_at": "2017-03-17T14:05:44Z", "updated_at": "2017-03-28T21:25:16Z", "closed_at": "2017-03-28T21:25:16Z", "author_association": "OWNER", "body": "JSON values can store double precision floating-point numbers, including NaN. This is a problem when we compare two JSON values `j1` and `j2`, because `j1 == j2` ultimately returns `j1.m_value.number_float == j2.m_value.number_float`. The latter returns false for NaN, so two JSON values which are bitwise equal are treated unequal because of this.\r\n\r\nWould it be a good idea to change the semantics of `==` in this regard to evaluate `json(NAN) == json(NAN)` to true? What do you think?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/513", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/513/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/513/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/513/events", "html_url": "https://github.com/nlohmann/json/issues/513", "id": 214970236, "node_id": "MDU6SXNzdWUyMTQ5NzAyMzY=", "number": 513, "title": "why it's not possible to serialize c++11 enums directly", "user": {"login": "ivankarpey", "id": 1046820, "node_id": "MDQ6VXNlcjEwNDY4MjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1046820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivankarpey", "html_url": "https://github.com/ivankarpey", "followers_url": "https://api.github.com/users/ivankarpey/followers", "following_url": "https://api.github.com/users/ivankarpey/following{/other_user}", "gists_url": "https://api.github.com/users/ivankarpey/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivankarpey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivankarpey/subscriptions", "organizations_url": "https://api.github.com/users/ivankarpey/orgs", "repos_url": "https://api.github.com/users/ivankarpey/repos", "events_url": "https://api.github.com/users/ivankarpey/events{/privacy}", "received_events_url": "https://api.github.com/users/ivankarpey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 4, "created_at": "2017-03-17T10:56:45Z", "updated_at": "2017-04-04T08:37:15Z", "closed_at": "2017-04-03T20:14:00Z", "author_association": "NONE", "body": "`enum class Colors: short{ Red = 0, Green, Blue}`\r\n\r\nwhen trying to restore it like\r\n\r\n`Colors c = json[\"color\"].get<Colors>()` it's fails with \r\n\r\n> tools/libs/json.h:862:17: \u001b[Kerror: static assertion failed: could not find from_json() method in T's namespace "}, {"url": "https://api.github.com/repos/nlohmann/json/issues/512", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/512/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/512/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/512/events", "html_url": "https://github.com/nlohmann/json/issues/512", "id": 214949161, "node_id": "MDU6SXNzdWUyMTQ5NDkxNjE=", "number": 512, "title": "clang compile error: use of overloaded operator '<=' is ambiguous   with (nlohmann::json{{\"a\", 5}})[\"a\"] <= 10", "user": {"login": "ajneu", "id": 11367585, "node_id": "MDQ6VXNlcjExMzY3NTg1", "avatar_url": "https://avatars1.githubusercontent.com/u/11367585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajneu", "html_url": "https://github.com/ajneu", "followers_url": "https://api.github.com/users/ajneu/followers", "following_url": "https://api.github.com/users/ajneu/following{/other_user}", "gists_url": "https://api.github.com/users/ajneu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajneu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajneu/subscriptions", "organizations_url": "https://api.github.com/users/ajneu/orgs", "repos_url": "https://api.github.com/users/ajneu/repos", "events_url": "https://api.github.com/users/ajneu/events{/privacy}", "received_events_url": "https://api.github.com/users/ajneu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 2, "created_at": "2017-03-17T09:25:37Z", "updated_at": "2017-04-07T14:31:34Z", "closed_at": "2017-04-07T14:31:29Z", "author_association": "NONE", "body": "Hi,\r\n\r\ntry compile the following code with clang: `clang++-3.9 -std=c++14 -o go main.cpp`\r\n\r\n```cpp\r\n// clang++-3.9 -std=c++14 -o go main.cpp\r\n\r\n#include \"json.hpp\"\r\n\r\nusing json = nlohmann::json;\r\n\r\nint main()\r\n{\r\n    json j;\r\n    j[\"a\"] = 5;\r\n\r\n    if (j[\"a\"] <= 10) {\r\n        std::cout << \"yip:  5 <= 10  !!\" << std::endl;\r\n    }\r\n    return 0;\r\n}\r\n```\r\n\r\nWe get the following compile error:\r\n```cpp\r\nmain2.cpp:10:16: error: use of overloaded operator '<=' is ambiguous (with operand types 'value_type' (aka 'nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char>,\r\n      bool, long, unsigned long, double, std::allocator, adl_serializer>') and 'int')\r\n    if (j[\"a\"] <= 10) {\r\n        ~~~~~~ ^  ~~\r\n./json.hpp:6161:17: note: candidate function\r\n    friend bool operator<=(const_reference lhs, const_reference rhs) noexcept\r\n                ^\r\nmain2.cpp:10:16: note: built-in candidate operator<=(long long, int)\r\n    if (j[\"a\"] <= 10) {\r\n               ^\r\nmain2.cpp:10:16: note: built-in candidate operator<=(__float128, int)\r\nmain2.cpp:10:16: note: built-in candidate operator<=(unsigned long, int)\r\nmain2.cpp:10:16: note: built-in candidate operator<=(unsigned int, int)\r\nmain2.cpp:10:16: note: built-in candidate operator<=(long double, int)\r\nmain2.cpp:10:16: note: built-in candidate operator<=(int, int)\r\nmain2.cpp:10:16: note: built-in candidate operator<=(unsigned long long, int)\r\nmain2.cpp:10:16: note: built-in candidate operator<=(__int128, int)\r\nmain2.cpp:10:16: note: built-in candidate operator<=(double, int)\r\nmain2.cpp:10:16: note: built-in candidate operator<=(long, int)\r\nmain2.cpp:10:16: note: built-in candidate operator<=(unsigned __int128, int)\r\n... etc.\r\n1 error generated.\r\n```\r\n.\r\n.\r\n.\r\n\r\nBut in comparision: `operator==` compiles fine:\r\n```cpp\r\n// clang++-3.9 -std=c++14 -o go main.cpp\r\n\r\n#include \"json.hpp\"\r\n\r\nusing json = nlohmann::json;\r\n\r\nint main()\r\n{\r\n    json j;\r\n    j[\"a\"] = 5;\r\n\r\n    if (j[\"a\"] == 5) {\r\n        std::cout << \"yip:  5 == 5  !!\" << std::endl;\r\n    }\r\n    return 0;\r\n}\r\n```\r\n\r\n.\r\n.\r\n.\r\n\r\n\r\nChecking the code we see, that `operator==`, has the following [bool operator==(const_reference lhs, const ScalarType rhs)](https://github.com/nlohmann/json/blob/2d474b527323315555eba618582f88c5eed7487c/src/json.hpp#L6171)\r\n\r\nbut `operator<=`, `operator<`, `operator>=` and `operator>` do not have similar functions handling **scalar**.\r\n\r\nUltimately I would like to see the following compile under clang:\r\n```cpp\r\n// clang++-3.9 -std=c++14 -o go main.cpp\r\n\r\n#include <cassert>\r\n#include <cstdint>\r\n#include \"json.hpp\"\r\n\r\nusing json = nlohmann::json;\r\n\r\n#define CHECK_SCALAR(LHS, OP, RHS, RES)                 \\\r\n    assert((LHS OP static_cast<  int8_t>(RHS)) == RES); \\\r\n    assert((LHS OP static_cast< uint8_t>(RHS)) == RES); \\\r\n    assert((LHS OP static_cast< int16_t>(RHS)) == RES); \\\r\n    assert((LHS OP static_cast<uint16_t>(RHS)) == RES); \\\r\n    assert((LHS OP static_cast< int32_t>(RHS)) == RES); \\\r\n    assert((LHS OP static_cast<uint32_t>(RHS)) == RES); \\\r\n    assert((LHS OP static_cast< int64_t>(RHS)) == RES); \\\r\n    assert((LHS OP static_cast<uint64_t>(RHS)) == RES); \\\r\n    assert((LHS OP static_cast<float   >(RHS)) == RES); \\\r\n    assert((LHS OP static_cast<double  >(RHS)) == RES);\r\n    \r\n\r\nint main()\r\n{\r\n    json j;\r\n    j[\"a\"] = 5;\r\n\r\n    // json op scalar\r\n    CHECK_SCALAR(j[\"a\"], ==, 5,  true); // all good!\r\n    CHECK_SCALAR(j[\"a\"], !=, 4,  true); // all good!\r\n\r\n    CHECK_SCALAR(j[\"a\"], <=, 7,  true); // clang compile error\r\n    CHECK_SCALAR(j[\"a\"], < , 7,  true); // clang compile error\r\n    CHECK_SCALAR(j[\"a\"], >=, 3,  true); // clang compile error\r\n    CHECK_SCALAR(j[\"a\"], > , 3,  true); // clang compile error\r\n\r\n\r\n    CHECK_SCALAR(j[\"a\"], <=, 4,  false); // clang compile error\r\n    CHECK_SCALAR(j[\"a\"], < , 4,  false); // clang compile error\r\n    CHECK_SCALAR(j[\"a\"], >=, 6,  false); // clang compile error\r\n    CHECK_SCALAR(j[\"a\"], > , 6,  false); // clang compile error\r\n\r\n\r\n    \r\n    // scalar op json\r\n    CHECK_SCALAR(5, ==, j[\"a\"],  true); // all good!\r\n    CHECK_SCALAR(4, !=, j[\"a\"],  true); // all good!\r\n\r\n    CHECK_SCALAR(7, >=, j[\"a\"],  true); // clang compile error\r\n    CHECK_SCALAR(7, > , j[\"a\"],  true); // clang compile error\r\n    CHECK_SCALAR(3, <=, j[\"a\"],  true); // clang compile error\r\n    CHECK_SCALAR(3, < , j[\"a\"],  true); // clang compile error\r\n\r\n    CHECK_SCALAR(4, >=, j[\"a\"],  false); // clang compile error\r\n    CHECK_SCALAR(4, > , j[\"a\"],  false); // clang compile error\r\n    CHECK_SCALAR(6, <=, j[\"a\"],  false); // clang compile error\r\n    CHECK_SCALAR(6, < , j[\"a\"],  false); // clang compile error\r\n    \r\n    return 0;\r\n}\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/511", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/511/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/511/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/511/events", "html_url": "https://github.com/nlohmann/json/issues/511", "id": 214885860, "node_id": "MDU6SXNzdWUyMTQ4ODU4NjA=", "number": 511, "title": "Why not also look inside the type for (static) to_json and from_json funtions?", "user": {"login": "JoveToo", "id": 18113628, "node_id": "MDQ6VXNlcjE4MTEzNjI4", "avatar_url": "https://avatars0.githubusercontent.com/u/18113628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoveToo", "html_url": "https://github.com/JoveToo", "followers_url": "https://api.github.com/users/JoveToo/followers", "following_url": "https://api.github.com/users/JoveToo/following{/other_user}", "gists_url": "https://api.github.com/users/JoveToo/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoveToo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoveToo/subscriptions", "organizations_url": "https://api.github.com/users/JoveToo/orgs", "repos_url": "https://api.github.com/users/JoveToo/repos", "events_url": "https://api.github.com/users/JoveToo/events{/privacy}", "received_events_url": "https://api.github.com/users/JoveToo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 23, "created_at": "2017-03-17T01:43:58Z", "updated_at": "2017-11-01T10:16:01Z", "closed_at": "2017-11-01T10:16:01Z", "author_association": "NONE", "body": "My knowledge of template magic is limited, so I'm probably missing something :).\r\n\r\nStatic member functions can access private and protected members.\r\n\r\n```C++\r\nclass Type {\r\n  ...\r\npublic:\r\n    static void to_json(json &j, const Type &p) {...};\r\n    static void from_json(json &j, Type &p) {...};\r\n}\r\n```\r\n\r\nThe main reason I see to declare these functions outside the scope of `Type` is to allow to separate serialization completely, which isn't possible because you always need the friends declaration, have getters/setters for all your internal variables or worse, have everything public.\r\n\r\nI would even look inside `Type` for a serializer for `std::shared_ptr<Type>`.\r\n\r\nIn case a practical example helps, I am trying to serialize a `template<Type>` that contains map of `std::shared_ptr<Type>`.\r\n\r\n```C++\r\n\r\n// T::ptr_type is a typedef for std::shared_ptr<T>\r\ntemplate<typename T>\r\nclass Resolvable\r\n{\r\npublic:\r\n\ttypedef \tT\tref_type;\r\n\tResolvable() {};\r\n\tResolvable(ref_type r) : mReference(r) {};\r\n\r\n\tref_type &Reference() {return mReference; };\r\n\r\nprotected:\r\n\tref_type mReference;\r\n};\r\n\r\ntemplate<typename T>\r\nclass Resolver {\r\npublic:\r\n\tResolver()\r\n\t{\r\n\t\t// force T to be of Resolvable\r\n\t\t(void)static_cast<Resolvable<typename T::ref_type>*>((T*)0);\r\n\t}\r\n\r\n\ttypename T::ptr_type &resolve(const typename T::ref_type &r)\r\n\t{\r\n\t\treturn mEntries.at(r);\r\n\t}\r\n\r\n\ttypename T::ref_type add(const typename T::ptr_type t)\r\n\t{\r\n\t\ttypename T::ref_type r = static_cast<Resolvable<typename T::ref_type>*>(t.get())->Reference();\r\n\t\tif (mEntries.find(r) != mEntries.end())\r\n\t\t\tthrow std::runtime_error(\"Duplicate entry \" + std::to_string(r) + \".\");\r\n\r\n\t\tmEntries[r] = t;\r\n\r\n\t\treturn r;\r\n\t}\r\n\r\n\tvoid remove(const typename T::ref_type r)\r\n\t{\r\n\t\tmEntries.erase(r);\r\n\t}\r\n\r\n\tstatic void to_json(json &j, const Resolver<T> &resolver)\r\n\t{\r\n\t\tfor(const std::pair<typename T::ref_type, typename T::ptr_type> &entry: resolver.mEntries)\r\n\t\t{\r\n\t\t\tj.push_back(*(entry.second));\r\n\t\t}\r\n\t};\r\n\r\n\tstatic void from_json(json &j, Resolver<T> &resolver)\r\n\t{\r\n\t\tfor (json &e : j)\r\n\t\t{\r\n\t\t\ttypename T::ptr_type ptr = std::make_shared<T>();\r\n\t\t\tT::from_json(e, *ptr);\r\n\t\t\tresolver.add(ptr);\r\n\t\t}\r\n\t};\r\n\r\nprivate:\r\n\tstd::map<typename T::ref_type, typename T::ptr_type>\tmEntries;\r\n};\r\n```\r\n\r\nThe problem lies in the `Resolver::from_json` function: I can't find a way to express `T::from_json(e, *ptr);` in another way. If I do `(*ptr) = e;`, `*ptr = e.get<T>()` or `::from_json(e, *ptr);`, it can't find the serialization function (and I run out of alternatives).\r\n\r\nI have it all working by using static member functions and declaring external helpers that forward to the static ones. It works, it probably all gets optimized away, but it requires a lot of useless code.\r\n\r\nIf the serializer would check for those functions in the type, none of it would be necessary.\r\n\r\nI realize there are probably other good solutions for my problem here (feel free to suggest them) but the static member function seems so simple a solution (for my problem at least) that I had to ask why this is not supported.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/509", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/509/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/509/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/509/events", "html_url": "https://github.com/nlohmann/json/issues/509", "id": 214776630, "node_id": "MDU6SXNzdWUyMTQ3NzY2MzA=", "number": 509, "title": "Parser issues", "user": {"login": "berkus", "id": 80306, "node_id": "MDQ6VXNlcjgwMzA2", "avatar_url": "https://avatars3.githubusercontent.com/u/80306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berkus", "html_url": "https://github.com/berkus", "followers_url": "https://api.github.com/users/berkus/followers", "following_url": "https://api.github.com/users/berkus/following{/other_user}", "gists_url": "https://api.github.com/users/berkus/gists{/gist_id}", "starred_url": "https://api.github.com/users/berkus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berkus/subscriptions", "organizations_url": "https://api.github.com/users/berkus/orgs", "repos_url": "https://api.github.com/users/berkus/repos", "events_url": "https://api.github.com/users/berkus/events{/privacy}", "received_events_url": "https://api.github.com/users/berkus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 6, "created_at": "2017-03-16T17:14:16Z", "updated_at": "2017-05-13T17:57:19Z", "closed_at": "2017-05-13T17:57:19Z", "author_association": "CONTRIBUTOR", "body": "on a following json `{\"body\": \"text\\v\"}`\r\nit gives\r\n`parse error at 10: parse error - unexpected '\"'`\r\n\r\ndropbox/json11 gives:\r\n\r\n`unescaped (11) in string`\r\n\r\nwhich is correct (this is an unescaped vertical tab, disallowed by JSON std)"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/507", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/507/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/507/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/507/events", "html_url": "https://github.com/nlohmann/json/issues/507", "id": 214399574, "node_id": "MDU6SXNzdWUyMTQzOTk1NzQ=", "number": 507, "title": "I may not understand", "user": {"login": "TParis", "id": 1389981, "node_id": "MDQ6VXNlcjEzODk5ODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1389981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TParis", "html_url": "https://github.com/TParis", "followers_url": "https://api.github.com/users/TParis/followers", "following_url": "https://api.github.com/users/TParis/following{/other_user}", "gists_url": "https://api.github.com/users/TParis/gists{/gist_id}", "starred_url": "https://api.github.com/users/TParis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TParis/subscriptions", "organizations_url": "https://api.github.com/users/TParis/orgs", "repos_url": "https://api.github.com/users/TParis/repos", "events_url": "https://api.github.com/users/TParis/events{/privacy}", "received_events_url": "https://api.github.com/users/TParis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 26, "created_at": "2017-03-15T14:06:16Z", "updated_at": "2017-03-16T17:31:51Z", "closed_at": "2017-03-16T17:31:12Z", "author_association": "NONE", "body": "Hello, I'm new to C++.\r\n\r\nI'm using Baylor's GNU licensed socket example to pull from omdbapi.com a JSON object with information about movies.  This is for a non-academic class and it's a side project just to keep me busy while the class goes over the basics.\r\n\r\nI have a std::string JSON and it has the value of:\r\n\r\n{\"Title\":\"Star Trek Beyond\",\"Year\":\"2016\",\"Rated\":\"PG-13\",\"Released\":\"22 Jul 2016\",\"Runtime\":\"122 min\",\"Genre\":\"Action, Adventure, Sci-Fi\",\"Director\":\"Justin Lin\",\"Writer\":\"Simon Pegg, Doug Jung, Gene Roddenberry (based upon \\\"Star Trek\\\" created by)\",\"Actors\":\"Chris Pine, Zachary Quinto, Karl Urban, Zoe Saldana\",\"Plot\":\"The USS Enterprise crew explores the furthest reaches of uncharted space, where they encounter a new ruthless enemy who puts them and everything the Federation stands for to the test.\",\"Language\":\"English\",\"Country\":\"USA, Hong Kong, China\",\"Awards\":\"Nominated for 1 Oscar. Another 1 win & 17 nominations.\",\"Poster\":\"https://images-na.ssl-images-amazon.com/images/M/MV5BODgzN2E1YjctODg5Yi00YzYwLWJjZjAtNDg2MGE2Y2MyYjBmXkEyXkFqcGdeQXVyNjM1MTQ0NTQ@._V1_SX300.jpg\",\"Metascore\":\"68\",\"imdbRating\":\"7.1\",\"imdbVotes\":\"154,036\",\"imdbID\":\"tt2660888\",\"Type\":\"movie\",\"Response\":\"True\"}\r\n\r\nThis is my code:\r\n\r\n        string amazonData = getAmazonData(\"Star Trek Beyond\");\r\n\tstring JSON = isolateJSON(&amazonData);\r\n\ttry {\r\n\t\tmovieObject = json::parse(JSON);\r\n\t}\r\n\tcatch (exception& e) {\r\n\t\tprintf(\"%s\\n\", e.what());\r\n\t}\r\n\r\nVS has highlighted the json::parse and said \"parse    no instance of overloaded function\".  It appears to accept std::string so I'm not sure what the issue is.\r\n\r\nAny help is appreciated."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/506", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/506/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/506/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/506/events", "html_url": "https://github.com/nlohmann/json/issues/506", "id": 213998548, "node_id": "MDU6SXNzdWUyMTM5OTg1NDg=", "number": 506, "title": "VS2017 min / max problem for 2.1.1", "user": {"login": "meox", "id": 852548, "node_id": "MDQ6VXNlcjg1MjU0OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/852548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meox", "html_url": "https://github.com/meox", "followers_url": "https://api.github.com/users/meox/followers", "following_url": "https://api.github.com/users/meox/following{/other_user}", "gists_url": "https://api.github.com/users/meox/gists{/gist_id}", "starred_url": "https://api.github.com/users/meox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meox/subscriptions", "organizations_url": "https://api.github.com/users/meox/orgs", "repos_url": "https://api.github.com/users/meox/repos", "events_url": "https://api.github.com/users/meox/events{/privacy}", "received_events_url": "https://api.github.com/users/meox/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 8, "created_at": "2017-03-14T08:26:16Z", "updated_at": "2017-03-14T20:15:49Z", "closed_at": "2017-03-14T20:15:41Z", "author_association": "NONE", "body": "In order to avoid some problem with VS2017 I've put this line in my json.hpp 2.1.1\r\n\r\n> #ifdef WIN32\r\n> #define NOMINMAX\r\n> #undef min\r\n>  #undef max\r\n> #endif\r\njust after #define NLOHMANN_JOSN_HPP\r\n\r\nI don't know how to fix it properly\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/505", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/505/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/505/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/505/events", "html_url": "https://github.com/nlohmann/json/issues/505", "id": 213884526, "node_id": "MDU6SXNzdWUyMTM4ODQ1MjY=", "number": 505, "title": "CBOR/MessagePack is not read until the end", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 571470316, "node_id": "MDU6TGFiZWw1NzE0NzAzMTY=", "url": "https://api.github.com/repos/nlohmann/json/labels/aspect:%20binary%20formats", "name": "aspect: binary formats", "color": "5319e7", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 3, "created_at": "2017-03-13T20:16:26Z", "updated_at": "2017-08-16T19:53:06Z", "closed_at": "2017-08-16T19:53:06Z", "author_association": "OWNER", "body": "When reading a binary vector like `0xf9, 0xff, 0xff, 0x4a` and interpret it as CBOR, the first three bytes are a half-precision floating-point number (NaN, see #504). The parser will return this number and won't read the last byte.\r\n\r\nExample program:\r\n\r\n```cpp\r\n#include \"json.hpp\"\r\n\r\nusing json = nlohmann::json;\r\n\r\nint main()\r\n{\r\n    std::vector<uint8_t> vec = {0xf9, 0xff, 0xff, 0x4a};\r\n    std::cerr << json::from_cbor(vec) << std::endl;\r\n}\r\n```\r\n\r\nI would like to discuss how to cope with such a situation:\r\n- Leave it as is?\r\n- Throw an exception indicating the vector has not been read completely?\r\n- Continue parsing at this value if the function is called another time. (OK, maybe not exactly this function, but maybe a streaming function.)\r\n\r\nRelated to #477 #367."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/504", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/504/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/504/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/504/events", "html_url": "https://github.com/nlohmann/json/issues/504", "id": 213880800, "node_id": "MDU6SXNzdWUyMTM4ODA4MDA=", "number": 504, "title": "Assertion error (OSS-Fuzz 856)", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 571470316, "node_id": "MDU6TGFiZWw1NzE0NzAzMTY=", "url": "https://api.github.com/repos/nlohmann/json/labels/aspect:%20binary%20formats", "name": "aspect: binary formats", "color": "5319e7", "default": false}, {"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 4, "created_at": "2017-03-13T20:01:26Z", "updated_at": "2017-03-28T22:01:18Z", "closed_at": "2017-03-14T20:05:51Z", "author_association": "OWNER", "body": "```\r\nDetailed report: https://oss-fuzz.com/testcase?key=4910609957126144\r\n\r\nProject: json\r\nFuzzer: libFuzzer_json_parse_cbor_fuzzer\r\nFuzz target binary: parse_cbor_fuzzer\r\nJob Type: libfuzzer_asan_json\r\nPlatform Id: linux\r\n\r\nCrash Type: ASSERT\r\nCrash Address: \r\nCrash State:\r\nj1 == j2\r\n_start\r\n\r\nSanitizer: address (ASAN)\r\n\r\nRegressed: https://oss-fuzz.com/revisions?job=libfuzzer_asan_json&range=201703121620:201703131620\r\n\r\nReproducer Testcase: https://oss-fuzz.com/download/AMIfv94QnsU7rQn_6EMKIf1tY03A70fJNBE4s4pBAttVwxsQ--RcPxWkO5KLsQSF6wLETaBEwAFcuKUOd7z6fih_queH7WUrk4Ksrco2ueyrGzfjOG7vn2EDXrSTD8rKizXF9KK5ukS1_3o1IhMvnGnNWNcnMRa4G5YTyfony4huGgLWvUFU5y70NJlQVaTZu6DrMCucs2XSD7JpwiI8QPqeO7fk_z9FbyrJ7rgey0uad0KvAev2R182E6W6jPQa1Uf8wm1gRcgWpxTOHZqw2AGWLaGNIKBFg4a90P-TJV5FaBM-ZEh1wfFIBctpJbAGZNUy1HS1aFhlQer7b5uHeeJeht17gHp1sGIFKs-A5H-T0gWHEmmZQeYyXetNt4ZnZP7hHXPqtwo4?testcase_id=4910609957126144\r\n\r\n\r\nIssue filed automatically.\r\n\r\nSee https://github.com/google/oss-fuzz/blob/master/docs/reproducing.md for more information.\r\n\r\nThis bug is subject to a 90 day disclosure deadline. If 90 days elapse\r\nwithout an upstream patch, then the bug report will automatically\r\nbecome visible to the public.\r\n```\r\n\r\nInput: `0xf9, 0xff, 0xff, 0x4a, 0x3a, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x37, 0x02, 0x38`\r\n\r\nExample program:\r\n\r\n```cpp\r\n#include \"json.hpp\"\r\n\r\nusing json = nlohmann::json;\r\n\r\nint main()\r\n{\r\n    std::vector<uint8_t> vec = {0xf9, 0xff, 0xff, 0x4a, 0x3a, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x37, 0x02, 0x38};\r\n    std::cout << json::from_cbor(vec);\r\n}\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/503", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/503/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/503/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/503/events", "html_url": "https://github.com/nlohmann/json/issues/503", "id": 213868188, "node_id": "MDU6SXNzdWUyMTM4NjgxODg=", "number": 503, "title": "Return position in parse error exceptions", "user": {"login": "qwertymodo", "id": 5988870, "node_id": "MDQ6VXNlcjU5ODg4NzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5988870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qwertymodo", "html_url": "https://github.com/qwertymodo", "followers_url": "https://api.github.com/users/qwertymodo/followers", "following_url": "https://api.github.com/users/qwertymodo/following{/other_user}", "gists_url": "https://api.github.com/users/qwertymodo/gists{/gist_id}", "starred_url": "https://api.github.com/users/qwertymodo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qwertymodo/subscriptions", "organizations_url": "https://api.github.com/users/qwertymodo/orgs", "repos_url": "https://api.github.com/users/qwertymodo/repos", "events_url": "https://api.github.com/users/qwertymodo/events{/privacy}", "received_events_url": "https://api.github.com/users/qwertymodo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-13T19:11:20Z", "updated_at": "2017-03-13T19:58:32Z", "closed_at": "2017-03-13T19:58:32Z", "author_association": "NONE", "body": "When a parsing error is encountered, an exception is thrown from parser::expect() indicating the expected token, but not the current parsing position, making it difficult to track down the offending syntax error.  It would be nice if the current position (in line and column, if possible) could also be included in the error message."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/502", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/502/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/502/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/502/events", "html_url": "https://github.com/nlohmann/json/issues/502", "id": 213817988, "node_id": "MDU6SXNzdWUyMTM4MTc5ODg=", "number": 502, "title": "conversion from/to C array is not supported", "user": {"login": "theodelrieu", "id": 15652306, "node_id": "MDQ6VXNlcjE1NjUyMzA2", "avatar_url": "https://avatars1.githubusercontent.com/u/15652306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theodelrieu", "html_url": "https://github.com/theodelrieu", "followers_url": "https://api.github.com/users/theodelrieu/followers", "following_url": "https://api.github.com/users/theodelrieu/following{/other_user}", "gists_url": "https://api.github.com/users/theodelrieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/theodelrieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theodelrieu/subscriptions", "organizations_url": "https://api.github.com/users/theodelrieu/orgs", "repos_url": "https://api.github.com/users/theodelrieu/repos", "events_url": "https://api.github.com/users/theodelrieu/events{/privacy}", "received_events_url": "https://api.github.com/users/theodelrieu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 6, "created_at": "2017-03-13T16:15:03Z", "updated_at": "2017-03-16T18:00:59Z", "closed_at": "2017-03-16T18:00:59Z", "author_association": "CONTRIBUTOR", "body": "I just realized I forgot to add the overloads for C arrays.\r\n\r\nI don't remember if they were there before (I'm quite sure there was no tests, I would have seen it).\r\n\r\nI think we should add this missing feature"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/501", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/501/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/501/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/501/events", "html_url": "https://github.com/nlohmann/json/issues/501", "id": 213776387, "node_id": "MDU6SXNzdWUyMTM3NzYzODc=", "number": 501, "title": "error C2338: could not find to_json() method in T's namespace", "user": {"login": "iMiamasJohano", "id": 10190342, "node_id": "MDQ6VXNlcjEwMTkwMzQy", "avatar_url": "https://avatars1.githubusercontent.com/u/10190342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iMiamasJohano", "html_url": "https://github.com/iMiamasJohano", "followers_url": "https://api.github.com/users/iMiamasJohano/followers", "following_url": "https://api.github.com/users/iMiamasJohano/following{/other_user}", "gists_url": "https://api.github.com/users/iMiamasJohano/gists{/gist_id}", "starred_url": "https://api.github.com/users/iMiamasJohano/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iMiamasJohano/subscriptions", "organizations_url": "https://api.github.com/users/iMiamasJohano/orgs", "repos_url": "https://api.github.com/users/iMiamasJohano/repos", "events_url": "https://api.github.com/users/iMiamasJohano/events{/privacy}", "received_events_url": "https://api.github.com/users/iMiamasJohano/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2017-03-13T14:04:58Z", "updated_at": "2017-11-24T17:53:27Z", "closed_at": "2017-03-14T05:43:38Z", "author_association": "NONE", "body": "in vs2015 compile \r\njson.hpp(1038): error C2338: could not find to_json() method in T's namespace"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/500", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/500/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/500/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/500/events", "html_url": "https://github.com/nlohmann/json/issues/500", "id": 213765659, "node_id": "MDU6SXNzdWUyMTM3NjU2NTk=", "number": 500, "title": "Test suite fails in en_GB.UTF-8", "user": {"login": "mikecrowe", "id": 93615, "node_id": "MDQ6VXNlcjkzNjE1", "avatar_url": "https://avatars1.githubusercontent.com/u/93615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikecrowe", "html_url": "https://github.com/mikecrowe", "followers_url": "https://api.github.com/users/mikecrowe/followers", "following_url": "https://api.github.com/users/mikecrowe/following{/other_user}", "gists_url": "https://api.github.com/users/mikecrowe/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikecrowe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikecrowe/subscriptions", "organizations_url": "https://api.github.com/users/mikecrowe/orgs", "repos_url": "https://api.github.com/users/mikecrowe/repos", "events_url": "https://api.github.com/users/mikecrowe/events{/privacy}", "received_events_url": "https://api.github.com/users/mikecrowe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 6, "created_at": "2017-03-13T13:26:38Z", "updated_at": "2017-03-14T15:14:40Z", "closed_at": "2017-03-14T15:14:40Z", "author_association": "NONE", "body": "As requested in https://github.com/nlohmann/json/issues/492#issuecomment-285428706 , the test suite appears to fail for me under Debian 9 (Stretch) amd64:\r\n\r\n```\r\n$ git rev-parse HEAD\r\nc5cf32e34d19573e2fefde373ca7a48bdae52be3\r\n$ locale\r\nLANG=en_GB.UTF-8\r\nLANGUAGE=en_GB:en\r\nLC_CTYPE=\"en_GB.UTF-8\"\r\nLC_NUMERIC=en_GB.utf8\r\nLC_TIME=en_GB.utf8\r\nLC_COLLATE=\"en_GB.UTF-8\"\r\nLC_MONETARY=en_GB.utf8\r\nLC_MESSAGES=\"en_GB.UTF-8\"\r\nLC_PAPER=en_GB.utf8\r\nLC_NAME=\"en_GB.UTF-8\"\r\nLC_ADDRESS=\"en_GB.UTF-8\"\r\nLC_TELEPHONE=\"en_GB.UTF-8\"\r\nLC_MEASUREMENT=en_GB.utf8\r\nLC_IDENTIFICATION=\"en_GB.UTF-8\"\r\nLC_ALL=\r\n$ mkdir build && cd build && cmake ..\r\n$ make -j8 && make -j8 test\r\n$ cat Testing/Temporary/LastTest.log\r\nStart testing: Mar 13 12:26 GMT\r\n----------------------------------------------------------\r\n1/2 Testing: json_unit_default\r\n1/2 Test: json_unit_default\r\nCommand: \"/home/mac/git/json/build/test/json_unit\"\r\nDirectory: /home/mac/git/json\r\n\"json_unit_default\" start time: Mar 13 12:26 GMT\r\nOutput:\r\n----------------------------------------------------------\r\n\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\njson_unit is a Catch v1.8.1 host application.\r\nRun with -? for options\r\n\r\n-------------------------------------------------------------------------------\r\nregression tests\r\n  issue #378 - locale-independent num-to-str\r\n-------------------------------------------------------------------------------\r\n/home/mac/git/json/test/src/unit-regression.cpp:459\r\n...............................................................................\r\n\r\n/home/mac/git/json/test/src/unit-regression.cpp:469: FAILED:\r\n  CHECK( strcmp(buf.data(), \"12345,67\") == 0 )\r\nwith expansion:\r\n  2 == 0\r\n\r\n-------------------------------------------------------------------------------\r\nregression tests\r\n  issue #379 - locale-independent str-to-num\r\n-------------------------------------------------------------------------------\r\n/home/mac/git/json/test/src/unit-regression.cpp:479\r\n...............................................................................\r\n\r\n/home/mac/git/json/test/src/unit-regression.cpp:488: FAILED:\r\n  CHECK( std::strtod(\"3,14\", nullptr) == 3.14 )\r\nwith expansion:\r\n  3.0 == 3.14\r\n\r\n/home/mac/git/json/test/src/unit-regression.cpp:491: FAILED:\r\n  CHECK( std::strtod(\"3.14\", nullptr) == 3 )\r\nwith expansion:\r\n  3.14 == 3\r\n\r\n===============================================================================\r\ntest cases:      49 |      48 passed | 1 failed\r\nassertions: 2305788 | 2305785 passed | 3 failed\r\n\r\n<end of output>\r\nTest time =   6.12 sec\r\n----------------------------------------------------------\r\nTest Failed.\r\n\"json_unit_default\" end time: Mar 13 12:26 GMT\r\n\"json_unit_default\" time elapsed: 00:00:06\r\n----------------------------------------------------------\r\n2/2 Testing: json_unit_all\r\n2/2 Test: json_unit_all\r\nCommand: \"/home/mac/git/json/build/test/json_unit\" \"*\"\r\nDirectory: /home/mac/git/json\r\n\"json_unit_all\" start time: Mar 13 12:26 GMT\r\nOutput:\r\n----------------------------------------------------------\r\n\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\njson_unit is a Catch v1.8.1 host application.\r\nRun with -? for options\r\n\r\n-------------------------------------------------------------------------------\r\nregression tests\r\n  issue #378 - locale-independent num-to-str\r\n-------------------------------------------------------------------------------\r\n/home/mac/git/json/test/src/unit-regression.cpp:459\r\n...............................................................................\r\n\r\n/home/mac/git/json/test/src/unit-regression.cpp:469: FAILED:\r\n  CHECK( strcmp(buf.data(), \"12345,67\") == 0 )\r\nwith expansion:\r\n  2 == 0\r\n\r\n-------------------------------------------------------------------------------\r\nregression tests\r\n  issue #379 - locale-independent str-to-num\r\n-------------------------------------------------------------------------------\r\n/home/mac/git/json/test/src/unit-regression.cpp:479\r\n...............................................................................\r\n\r\n/home/mac/git/json/test/src/unit-regression.cpp:488: FAILED:\r\n  CHECK( std::strtod(\"3,14\", nullptr) == 3.14 )\r\nwith expansion:\r\n  3.0 == 3.14\r\n\r\n/home/mac/git/json/test/src/unit-regression.cpp:491: FAILED:\r\n  CHECK( std::strtod(\"3.14\", nullptr) == 3 )\r\nwith expansion:\r\n  3.14 == 3\r\n\r\n===============================================================================\r\ntest cases:       53 |       52 passed | 1 failed\r\nassertions: 11202857 | 11202854 passed | 3 failed\r\n\r\n<end of output>\r\nTest time =  47.87 sec\r\n----------------------------------------------------------\r\nTest Failed.\r\n\"json_unit_all\" end time: Mar 13 12:27 GMT\r\n\"json_unit_all\" time elapsed: 00:00:47\r\n----------------------------------------------------------\r\n\r\nEnd testing: Mar 13 12:27 GMT\r\n```\r\n\r\nI've tried using a French locale and that doesn't seem to help. I must be doing something wrong, but I've no idea what!"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/499", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/499/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/499/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/499/events", "html_url": "https://github.com/nlohmann/json/issues/499", "id": 213594238, "node_id": "MDU6SXNzdWUyMTM1OTQyMzg=", "number": 499, "title": "cannot use operator[] with number", "user": {"login": "brainmixxx", "id": 10322900, "node_id": "MDQ6VXNlcjEwMzIyOTAw", "avatar_url": "https://avatars0.githubusercontent.com/u/10322900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brainmixxx", "html_url": "https://github.com/brainmixxx", "followers_url": "https://api.github.com/users/brainmixxx/followers", "following_url": "https://api.github.com/users/brainmixxx/following{/other_user}", "gists_url": "https://api.github.com/users/brainmixxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/brainmixxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brainmixxx/subscriptions", "organizations_url": "https://api.github.com/users/brainmixxx/orgs", "repos_url": "https://api.github.com/users/brainmixxx/repos", "events_url": "https://api.github.com/users/brainmixxx/events{/privacy}", "received_events_url": "https://api.github.com/users/brainmixxx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-03-12T09:50:04Z", "updated_at": "2017-03-12T19:28:19Z", "closed_at": "2017-03-12T19:28:15Z", "author_association": "NONE", "body": "Hello, I have unfortunately a problem with which I come no further:\r\n\r\nI have data in the form of a list of multiple objects and I want to create json :: array's from it.\r\n\r\nInput:\r\n`{\r\n\t\"candles\":[\r\n\t\t{\r\n\t\t\t\"close\":\"470.0380\",\r\n\t\t\t\"epoch\":1489306680,\r\n\t\t\t\"high\":\"470.0954\",\r\n\t\t\t\"low\":\"469.8577\",\r\n\t\t\t\"open\":\"469.8577\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"close\":\"469.3634\",\r\n\t\t\t\"epoch\":1489306740,\r\n\t\t\t\"high\":\"470.0012\",\r\n\t\t\t\"low\":\"469.2554\",\r\n\t\t\t\"open\":\"470.0012\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"close\":\"469.4181\",\r\n\t\t\t\"epoch\":1489306800,\r\n\t\t\t\"high\":\"469.6009\",\r\n\t\t\t\"low\":\"469.1578\",\r\n\t\t\t\"open\":\"469.3178\"\r\n\t\t}\r\n\t],\r\n\t\"echo_req\":\r\n\t{\r\n\t\t\"count\":3,\r\n\t\t\"end\":\"latest\",\r\n\t\t\"style\":\"candles\",\r\n\t\t\"ticks_history\":\"R_50\"\r\n\t},\r\n\t\"msg_type\":\"candles\"\r\n}`\r\n\r\nI would like the following output:\r\n`{ \r\n\t\"open\": {12, 21, 1},\r\n\t\"low\": {23, 32, 2},\r\n\t\"high\": {34, 43, 3}\r\n}`\r\n\r\nMy approach is as follows:\r\n`json jCandles = {\r\n\t\t{\"open\", json::array()},\r\n\t\t{\"high\", json::array()},\r\n\t\t{\"low\", json::array()}\r\n\t\t};\r\nfor (unsigned int i = 0; i != jObj[\"candles\"].size(); ++i) {\r\n\tjCandles[\"open\"] += jObj[\"candles\"][1][\"open\"];\r\n}`\r\n\r\ni get following error:\r\n\r\n`terminate called after throwing an instance of 'std::domain_error'\r\n  what():  cannot use operator[] with number`\r\n\r\nand with `jCandles[\"open\"].push_back(jObj[\"candles\"][1][\"open\"]);`\r\nit says cannot use push_back() with number\r\n\r\nI do not know how to handle the error. Can someone help me?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/498", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/498/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/498/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/498/events", "html_url": "https://github.com/nlohmann/json/issues/498", "id": 213534687, "node_id": "MDU6SXNzdWUyMTM1MzQ2ODc=", "number": 498, "title": "consider using __cpp_exceptions and/or __EXCEPTIONS to disable/enable exception support", "user": {"login": "user1095108", "id": 8299348, "node_id": "MDQ6VXNlcjgyOTkzNDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8299348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/user1095108", "html_url": "https://github.com/user1095108", "followers_url": "https://api.github.com/users/user1095108/followers", "following_url": "https://api.github.com/users/user1095108/following{/other_user}", "gists_url": "https://api.github.com/users/user1095108/gists{/gist_id}", "starred_url": "https://api.github.com/users/user1095108/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/user1095108/subscriptions", "organizations_url": "https://api.github.com/users/user1095108/orgs", "repos_url": "https://api.github.com/users/user1095108/repos", "events_url": "https://api.github.com/users/user1095108/events{/privacy}", "received_events_url": "https://api.github.com/users/user1095108/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 21, "created_at": "2017-03-11T15:20:33Z", "updated_at": "2017-03-12T10:50:55Z", "closed_at": "2017-03-12T10:50:55Z", "author_association": "NONE", "body": "It is much more user-friendly if exception support is automatically detected.\r\n\r\nresources:\r\nhttps://gcc.gnu.org/onlinedocs/libstdc++/manual/using_exceptions.html\r\nhttp://en.cppreference.com/w/cpp/experimental/feature_test\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/497", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/497/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/497/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/497/events", "html_url": "https://github.com/nlohmann/json/issues/497", "id": 213533070, "node_id": "MDU6SXNzdWUyMTM1MzMwNzA=", "number": 497, "title": "Stack-overflow (OSS-Fuzz issue 814)", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 571470316, "node_id": "MDU6TGFiZWw1NzE0NzAzMTY=", "url": "https://api.github.com/repos/nlohmann/json/labels/aspect:%20binary%20formats", "name": "aspect: binary formats", "color": "5319e7", "default": false}, {"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 3, "created_at": "2017-03-11T14:52:08Z", "updated_at": "2017-03-28T22:00:58Z", "closed_at": "2017-03-14T20:16:52Z", "author_association": "OWNER", "body": "```\r\nDetailed report: https://oss-fuzz.com/testcase?key=5089762371174400\r\n\r\nProject: json\r\nFuzzer: libFuzzer_json_parse_msgpack_fuzzer\r\nJob Type: libfuzzer_asan_json\r\nPlatform Id: linux\r\n\r\nCrash Type: Stack-overflow\r\nCrash Address: 0x7ffd1f45dfe8\r\nCrash State:\r\nnlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<cha\r\n\r\nSanitizer: address (ASAN)\r\n\r\nRegressed: https://oss-fuzz.com/revisions?job=libfuzzer_asan_json&range=201701031958:201701032147\r\n\r\nReproducer Testcase: https://oss-fuzz.com/download/AMIfv94a4ny2w2F6ZCWYdf0DJCJ2xddDzyets2BdJ8Vv1zkAhsBzwDNiuhh0HE5OrlUDyXvPHaXMdX-nVX5UPRE0k2UiSLm0wanWa_PJyE-enR0BNnzFCKTAGl_DZCLis2TJAPb2kkeXS8SbBpCZzYs4EfKhZdnvClexaherh8x4Izejcny_NdIoDj2uIhuHfcYoLbiJ3ufROAxvrQvv9rdfHBhrD8W4hstZURSrluZ2HGyp6Y_V5qRCmo2trHJQcQXFHC56kXG3G-3bQW2uYTsH5EpZrdvaKTHV2kEU2Ii4N__VRx5tkE973yvuxqFpbSmeDjSoc5lgoGQbouKZYC-s6zE4-hk-RrhMR0HsoQKYqBudibaOiyhXFHdsc-5gZd8Y-bSbqbex?testcase_id=5089762371174400\r\n\r\n\r\nIssue filed automatically.\r\n\r\nSee https://github.com/google/oss-fuzz/blob/master/docs/reproducing.md for more information.\r\n\r\nThis bug is subject to a 90 day disclosure deadline. If 90 days elapse\r\nwithout an upstream patch, then the bug report will automatically\r\nbecome visible to the public.\r\n```\r\n\r\n```\r\nRunning command: /mnt/scratch0/clusterfuzz/slave-bot/builds/clusterfuzz-builds_json_26b1464c0c18fac23c49bf26ed996090f90e682a/revisions/parse_msgpack_fuzzer -runs=100 -rss_limit_mb=2048 -timeout=25 /crash-abc78a0e60f0f96eaa89c296d760990b071d1fbb\r\nINFO: Seed: 1681694814\r\nINFO: Loaded 1 modules (740 guards): [0x89c370, 0x89cf00),\r\n/mnt/scratch0/clusterfuzz/slave-bot/builds/clusterfuzz-builds_json_26b1464c0c18fac23c49bf26ed996090f90e682a/revisions/parse_msgpack_fuzzer: Running 1 inputs 100 time(s) each.\r\nRunning: /crash-abc78a0e60f0f96eaa89c296d760990b071d1fbb\r\nASAN:DEADLYSIGNAL\r\n=================================================================\r\n==1==ERROR: AddressSanitizer: stack-overflow on address 0x7ffd1f45dfe8 (pc 0x00000050e995 bp 0x7ffd1f45e850 sp 0x7ffd1f45dff0 T0)\r\nSCARINESS: 10 (stack-overflow)\r\n#0 0x50e994 in __sanitizer::StackTrace::StackTrace(unsigned long const*, unsigned int) /src/llvm/projects/compiler-rt/lib/sanitizer_common/sanitizer_stacktrace.h:50\r\n#1 0x50e994 in __sanitizer::BufferedStackTrace::BufferedStackTrace() /src/llvm/projects/compiler-rt/lib/sanitizer_common/sanitizer_stacktrace.h:94\r\n#2 0x50e994 in operator new(unsigned long) _asan_rtl_\r\n#3 0x58e4a0 in __allocate /usr/local/include/c++/v1/new:227:10\r\n#4 0x58e4a0 in allocate /usr/local/include/c++/v1/memory:1771\r\n#5 0x58e4a0 in std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer> > > >* nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::create<std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer> > > >>() /src/json/src/json.hpp:1622\r\n#6 0x58e2a6 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::json_value::json_value(nlohmann::detail::value_t) /src/json/src/json.hpp:1690:30\r\n#7 0x58a5f7 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::basic_json(nlohmann::detail::value_t) /src/json/src/json.hpp:1906:31\r\n#8 0x588432 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7758:37\r\n#9 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#10 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#11 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#12 0x589511 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7940:39\r\n#13 0x588613 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7773:38\r\n#14 0x5894ed in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7939:43\r\n#15 0x588613 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7773:38\r\n#16 0x588613 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7773:38\r\n#17 0x588613 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7773:38\r\n#18 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#19 0x588501 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7763:35\r\n#20 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#21 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#22 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#23 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#24 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#25 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#26 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#27 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#28 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#29 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#30 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#31 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#32 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#33 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#34 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#35 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#36 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#37 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#38 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#39 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#40 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#41 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#42 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#43 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#44 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#45 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#46 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#47 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#48 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#49 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#50 0x588501 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7763:35\r\n#51 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#52 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#53 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#54 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#55 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#56 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#57 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#58 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#59 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#60 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#61 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#62 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#63 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#64 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#65 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#66 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#67 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#68 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#69 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#70 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#71 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#72 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#73 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#74 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#75 0x589511 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7940:39\r\n#76 0x588613 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7773:38\r\n#77 0x5894ed in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7939:43\r\n#78 0x588613 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7773:38\r\n#79 0x588613 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7773:38\r\n#80 0x588613 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7773:38\r\n#81 0x588613 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7773:38\r\n#82 0x588613 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7773:38\r\n#83 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#84 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#85 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#86 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#87 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#88 0x588501 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7763:35\r\n#89 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#90 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#91 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#92 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#93 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#94 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#95 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#96 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#97 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#98 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#99 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#100 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#101 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#102 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#103 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#104 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#105 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#106 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#107 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#108 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#109 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#110 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#111 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#112 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#113 0x589511 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7940:39\r\n#114 0x588613 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7773:38\r\n#115 0x5894ed in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7939:43\r\n#116 0x588613 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7773:38\r\n#117 0x588613 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7773:38\r\n#118 0x588613 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7773:38\r\n#119 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#120 0x588501 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7763:35\r\n#121 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#122 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#123 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#124 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#125 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#126 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#127 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#128 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#129 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#130 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#131 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#132 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#133 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#134 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#135 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#136 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#137 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#138 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#139 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#140 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#141 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#142 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#143 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#144 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#145 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#146 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#147 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#148 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#149 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#150 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#151 0x588501 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7763:35\r\n#152 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#153 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#154 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#155 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#156 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#157 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#158 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#159 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#160 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#161 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#162 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#163 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#164 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#165 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#166 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#167 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#168 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#169 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#170 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#171 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#172 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#173 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#174 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#175 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#176 0x589511 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7940:39\r\n#177 0x588613 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7773:38\r\n#178 0x5894ed in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7939:43\r\n#179 0x588613 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7773:38\r\n#180 0x588613 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7773:38\r\n#181 0x588613 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7773:38\r\n#182 0x588613 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7773:38\r\n#183 0x588613 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7773:38\r\n#184 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#185 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#186 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#187 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#188 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#189 0x588501 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7763:35\r\n#190 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#191 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#192 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#193 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#194 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#195 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#196 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#197 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#198 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#199 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#200 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#201 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#202 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#203 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#204 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#205 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#206 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#207 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#208 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#209 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#210 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#211 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#212 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#213 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#214 0x589511 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7940:39\r\n#215 0x588613 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7773:38\r\n#216 0x5894ed in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7939:43\r\n#217 0x588613 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7773:38\r\n#218 0x588613 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7773:38\r\n#219 0x588613 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7773:38\r\n#220 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#221 0x588501 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7763:35\r\n#222 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#223 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#224 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#225 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#226 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#227 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#228 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#229 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#230 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#231 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#232 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#233 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#234 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#235 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#236 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#237 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#238 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#239 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#240 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#241 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#242 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#243 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#244 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#245 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#246 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#247 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#248 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#249 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#250 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#251 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#252 0x588501 in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7763:35\r\n#253 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\n#254 0x5884da in nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer>::from_msgpack_internal(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, unsigned long&) /src/json/src/json.hpp:7762:39\r\nSUMMARY: AddressSanitizer: stack-overflow (/mnt/scratch0/clusterfuzz/slave-bot/builds/clusterfuzz-builds_json_26b1464c0c18fac23c49bf26ed996090f90e682a/revisions/parse_msgpack_fuzzer+0x50e994)\r\n==1==ABORTING\r\n```\r\n\r\n[clusterfuzz-testcase-5089762371174400.msgpack.zip](https://github.com/nlohmann/json/files/835851/clusterfuzz-testcase-5089762371174400.msgpack.zip)\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/495", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/495/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/495/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/495/events", "html_url": "https://github.com/nlohmann/json/issues/495", "id": 213513953, "node_id": "MDU6SXNzdWUyMTM1MTM5NTM=", "number": 495, "title": "Using in Unreal Engine - handling custom types conversion", "user": {"login": "FredyC", "id": 1096340, "node_id": "MDQ6VXNlcjEwOTYzNDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1096340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FredyC", "html_url": "https://github.com/FredyC", "followers_url": "https://api.github.com/users/FredyC/followers", "following_url": "https://api.github.com/users/FredyC/following{/other_user}", "gists_url": "https://api.github.com/users/FredyC/gists{/gist_id}", "starred_url": "https://api.github.com/users/FredyC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FredyC/subscriptions", "organizations_url": "https://api.github.com/users/FredyC/orgs", "repos_url": "https://api.github.com/users/FredyC/repos", "events_url": "https://api.github.com/users/FredyC/events{/privacy}", "received_events_url": "https://api.github.com/users/FredyC/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-03-11T07:48:54Z", "updated_at": "2017-03-11T14:16:50Z", "closed_at": "2017-03-11T14:16:50Z", "author_association": "NONE", "body": "Hi. I come from a JavaScript world where working with JSON is total breeze. We are currently working on a game using Unreal Engine 4 and we need to develop custom save system using JSON format so it can be read using Javascript somewhere else.\r\n\r\nI kinda like approach of this library as its syntax is similar to what I am used to from JS. Sadly me as total rookie to C++ I am struggling with this a lot. I would like to make some arbitrary conversions from Unreal types to ones supported by this library.\r\n\r\nFor example here is a [header file for FString type](https://gist.github.com/FredyC/1233977e2faa2d099cce7d15eab6693e#file-unrealstring-h-L61). Somewhere else I've found what I need to do for conversion to `std::string` so I've tried to add following\r\n\r\n```cpp\r\nnamespace nlohmann {\r\n\ttemplate <typename T>\r\n\tstruct adl_serializer<FString> {\r\n\t\tstatic void to_json(json& j, const FString value) {\r\n\t\t\tj = TCHAR_TO_UTF8(*value)\r\n\t\t}\r\n\t};\r\n}\r\n```\r\nHowever this is failing compilation with this error. I am totally clueless what that means. Can you please help?\r\n\r\n> error C3211: 'nlohmann::adl_serializer<FString,void>': explicit specialization is using partial specialization syntax, use template <> instead\r\n> note: see declaration of 'nlohmann::adl_serializer<FString,void>'"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/494", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/494/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/494/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/494/events", "html_url": "https://github.com/nlohmann/json/issues/494", "id": 213351598, "node_id": "MDU6SXNzdWUyMTMzNTE1OTg=", "number": 494, "title": "Conversion from vector<bool> to json fails to build", "user": {"login": "landler", "id": 1939378, "node_id": "MDQ6VXNlcjE5MzkzNzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1939378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/landler", "html_url": "https://github.com/landler", "followers_url": "https://api.github.com/users/landler/followers", "following_url": "https://api.github.com/users/landler/following{/other_user}", "gists_url": "https://api.github.com/users/landler/gists{/gist_id}", "starred_url": "https://api.github.com/users/landler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/landler/subscriptions", "organizations_url": "https://api.github.com/users/landler/orgs", "repos_url": "https://api.github.com/users/landler/repos", "events_url": "https://api.github.com/users/landler/events{/privacy}", "received_events_url": "https://api.github.com/users/landler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 8, "created_at": "2017-03-10T14:15:42Z", "updated_at": "2017-03-11T16:23:09Z", "closed_at": "2017-03-11T16:23:09Z", "author_association": "NONE", "body": "The following code:\r\n```cpp\r\n#include \"json.hpp\"\r\n#include <vector>\r\nusing nlohmann::json;\r\n\r\nint main() {\r\n\tstd::vector<bool> boolVector;\r\n\tjson j;\r\n\tj[\"bool_vector\"] = boolVector;\r\n};\r\n```\r\nFails to compile on os x (clang-800.0.42.1) when built like this:\r\n`clang++ -std=c++11 -c main.cpp`\r\n\r\nSubstituting vector with another container (like list) compiles ok.\r\n\r\nThis also compiles fine on a linux system (I don't have the version info available, will update if necessary).\r\n\r\nAm I missing some compiler params / something else or is this a problem with the library?\r\n\r\nThe full compilation error is below:\r\n```\r\nIn file included from main.cpp:1:\r\n./json.hpp:835:9: error: static_assert failed \"could not find to_json() method in T's namespace\"\r\n        static_assert(sizeof(BasicJsonType) == 0,\r\n        ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n./json.hpp:844:16: note: in instantiation of function template specialization 'nlohmann::detail::to_json_fn::call<nlohmann::basic_json<std::map, std::vector, std::__1::basic_string<char>, bool, long long,\r\n      unsigned long long, double, std::allocator, adl_serializer>, std::__1::__bit_const_reference<std::__1::vector<bool, std::__1::allocator<bool> > > >' requested here\r\n        return call(j, std::forward<T>(val), priority_tag<1> {});\r\n               ^\r\n./json.hpp:934:9: note: in instantiation of function template specialization 'nlohmann::detail::to_json_fn::operator()<nlohmann::basic_json<std::map, std::vector, std::__1::basic_string<char>, bool, long long,\r\n      unsigned long long, double, std::allocator, adl_serializer>, std::__1::__bit_const_reference<std::__1::vector<bool, std::__1::allocator<bool> > > >' requested here\r\n        ::nlohmann::to_json(j, std::forward<ValueType>(val));\r\n        ^\r\n./json.hpp:1998:28: note: in instantiation of function template specialization 'nlohmann::adl_serializer<std::__1::__bit_const_reference<std::__1::vector<bool, std::__1::allocator<bool> > >,\r\n      void>::to_json<nlohmann::basic_json<std::map, std::vector, std::__1::basic_string<char>, bool, long long, unsigned long long, double, std::allocator, adl_serializer>,\r\n      std::__1::__bit_const_reference<std::__1::vector<bool, std::__1::allocator<bool> > > >' requested here\r\n        JSONSerializer<U>::to_json(*this, std::forward<CompatibleType>(val));\r\n                           ^\r\n/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/memory:1740:31: note: in instantiation of function template specialization 'nlohmann::basic_json<std::map, std::vector, std::__1::basic_string<char>,\r\n      bool, long long, unsigned long long, double, std::allocator, adl_serializer>::basic_json<std::__1::__bit_const_reference<std::__1::vector<bool, std::__1::allocator<bool> > >,\r\n      std::__1::__bit_const_reference<std::__1::vector<bool, std::__1::allocator<bool> > >, 0>' requested here\r\n            ::new((void*)__p) _Up(_VSTD::forward<_Args>(__args)...);\r\n                              ^\r\n/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/memory:1656:18: note: in instantiation of function template specialization 'std::__1::allocator<nlohmann::basic_json<std::map, std::vector,\r\n      std::__1::basic_string<char>, bool, long long, unsigned long long, double, std::allocator, adl_serializer> >::construct<nlohmann::basic_json<std::map, std::vector, std::__1::basic_string<char>, bool, long\r\n      long, unsigned long long, double, std::allocator, adl_serializer>, std::__1::__bit_const_reference<std::__1::vector<bool, std::__1::allocator<bool> > > >' requested here\r\n            {__a.construct(__p, _VSTD::forward<_Args>(__args)...);}\r\n                 ^\r\n/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/memory:1502:14: note: (skipping 8 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)\r\n            {__construct(__has_construct<allocator_type, _Tp*, _Args...>(),\r\n             ^\r\n./json.hpp:829:16: note: in instantiation of function template specialization 'nlohmann::detail::to_json<nlohmann::basic_json<std::map, std::vector, std::__1::basic_string<char>, bool, long long, unsigned long\r\n      long, double, std::allocator, adl_serializer>, std::__1::vector<bool, std::__1::allocator<bool> >, 0>' requested here\r\n        return to_json(j, std::forward<T>(val));\r\n               ^\r\n./json.hpp:844:16: note: in instantiation of function template specialization 'nlohmann::detail::to_json_fn::call<nlohmann::basic_json<std::map, std::vector, std::__1::basic_string<char>, bool, long long,\r\n      unsigned long long, double, std::allocator, adl_serializer>, std::__1::vector<bool, std::__1::allocator<bool> > &>' requested here\r\n        return call(j, std::forward<T>(val), priority_tag<1> {});\r\n               ^\r\n./json.hpp:934:9: note: in instantiation of function template specialization 'nlohmann::detail::to_json_fn::operator()<nlohmann::basic_json<std::map, std::vector, std::__1::basic_string<char>, bool, long long,\r\n      unsigned long long, double, std::allocator, adl_serializer>, std::__1::vector<bool, std::__1::allocator<bool> > &>' requested here\r\n        ::nlohmann::to_json(j, std::forward<ValueType>(val));\r\n        ^\r\n./json.hpp:1998:28: note: in instantiation of function template specialization 'nlohmann::adl_serializer<std::__1::vector<bool, std::__1::allocator<bool> >, void>::to_json<nlohmann::basic_json<std::map,\r\n      std::vector, std::__1::basic_string<char>, bool, long long, unsigned long long, double, std::allocator, adl_serializer>, std::__1::vector<bool, std::__1::allocator<bool> > &>' requested here\r\n        JSONSerializer<U>::to_json(*this, std::forward<CompatibleType>(val));\r\n                           ^\r\nmain.cpp:8:21: note: in instantiation of function template specialization 'nlohmann::basic_json<std::map, std::vector, std::__1::basic_string<char>, bool, long long, unsigned long long, double, std::allocator,\r\n      adl_serializer>::basic_json<std::__1::vector<bool, std::__1::allocator<bool> > &, std::__1::vector<bool, std::__1::allocator<bool> >, 0>' requested here\r\n        j[\"bool_vector\"] = boolVector;\r\n                           ^\r\n1 error generated.\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/493", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/493/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/493/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/493/events", "html_url": "https://github.com/nlohmann/json/issues/493", "id": 213146912, "node_id": "MDU6SXNzdWUyMTMxNDY5MTI=", "number": 493, "title": "fill_line_buffer incorrectly tests m_stream for eof but not fail or bad bits", "user": {"login": "TestMonkey9000", "id": 26309815, "node_id": "MDQ6VXNlcjI2MzA5ODE1", "avatar_url": "https://avatars2.githubusercontent.com/u/26309815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TestMonkey9000", "html_url": "https://github.com/TestMonkey9000", "followers_url": "https://api.github.com/users/TestMonkey9000/followers", "following_url": "https://api.github.com/users/TestMonkey9000/following{/other_user}", "gists_url": "https://api.github.com/users/TestMonkey9000/gists{/gist_id}", "starred_url": "https://api.github.com/users/TestMonkey9000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TestMonkey9000/subscriptions", "organizations_url": "https://api.github.com/users/TestMonkey9000/orgs", "repos_url": "https://api.github.com/users/TestMonkey9000/repos", "events_url": "https://api.github.com/users/TestMonkey9000/events{/privacy}", "received_events_url": "https://api.github.com/users/TestMonkey9000/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 7, "created_at": "2017-03-09T19:56:01Z", "updated_at": "2017-03-14T22:08:48Z", "closed_at": "2017-03-14T22:08:48Z", "author_association": "NONE", "body": "If the json object is asked to parse from a stream, the stream must be valid otherwise the json object goes into an infinite loop.  The current code only tests for the end of file condition which assumes the incoming stream does not have the bad or fail bits set.  I think a more general approach is to test with good() rather than eof().\r\n```\r\n            // no stream is used or end of file is reached\r\n            if (m_stream == nullptr or m_stream->eof())\r\n```\r\nShould be:\r\n```\r\n            // no stream is used or end of file is reached\r\n            if (m_stream == nullptr or !m_stream->good())\r\n```\r\nThis will throw an exception if the stream is not open or has another issue rather than loop.\r\nTest code:\r\n```\r\n#include \"json.hpp\"\r\nusing json = nlohmann::json;\r\n\r\n#include <fstream>\r\n\r\nint main(int argc, char** argv)\r\n{\r\n\r\n   std::ifstream istr(\"non_existant_file\");\r\n   json j = json::parse(istr);\r\n   return 0;\r\n}\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/492", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/492/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/492/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/492/events", "html_url": "https://github.com/nlohmann/json/issues/492", "id": 213063709, "node_id": "MDU6SXNzdWUyMTMwNjM3MDk=", "number": 492, "title": "Compiling with _GLIBCXX_DEBUG yields iterator-comparison warnings during tests", "user": {"login": "mikecrowe", "id": 93615, "node_id": "MDQ6VXNlcjkzNjE1", "avatar_url": "https://avatars1.githubusercontent.com/u/93615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikecrowe", "html_url": "https://github.com/mikecrowe", "followers_url": "https://api.github.com/users/mikecrowe/followers", "following_url": "https://api.github.com/users/mikecrowe/following{/other_user}", "gists_url": "https://api.github.com/users/mikecrowe/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikecrowe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikecrowe/subscriptions", "organizations_url": "https://api.github.com/users/mikecrowe/orgs", "repos_url": "https://api.github.com/users/mikecrowe/repos", "events_url": "https://api.github.com/users/mikecrowe/events{/privacy}", "received_events_url": "https://api.github.com/users/mikecrowe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 6, "created_at": "2017-03-09T15:03:32Z", "updated_at": "2017-03-10T14:10:13Z", "closed_at": "2017-03-10T11:41:23Z", "author_association": "NONE", "body": "I've been suffering from some strange problems when compiling with GCC6 and -Og. So, I tried adding:\r\n\r\n `set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -D_GLIBCXX_DEBUG\")`\r\n\r\nto CMakeLists.txt with v2.1.0 in order to enable [libstdc++ debugging](https://gcc.gnu.org/onlinedocs/libstdc++/manual/debug_mode.html).\r\n\r\nWhen I do this and run \"make test\" I get various errors about iterator comparisons (note that this was using my host compiler so it's actually GCC4.9):\r\n\r\ne.g.:\r\n> ----------------------------------------------------------\r\n> /usr/include/c++/4.9/debug/safe_iterator.h:506:error: attempt to compare a \r\n>     past-the-end iterator to a singular iterator.\r\n>\r\n> Objects involved in the operation:\r\n> iterator \"lhs\" @ 0x0x7fff811b8670 {\r\n> type = N11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPN8nlohmann10basic_jsonINSt7__debug3mapENS5_6vectorESsblmdSaNS3_14adl_serializerEEENSt9__cxx19986vectorIS9_SaIS9_EEEEENS7_IS9_SD_EEEE (mutable\r\n iterator);\r\n  state = past-the-end;\r\n  references sequence with type 'NSt7__debug6vectorIN8nlohmann10basic_jsonINS_3mapES0_SsblmdSaNS1_14adl_serializerEEESaIS5_EEE' @ 0x0x234a4f0\r\n}\r\niterator \"rhs\" @ 0x0x7fff811b8600 {\r\ntype = N11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPN8nlohmann10basic_jsonINSt7__debug3mapENS5_6vectorESsblmdSaNS3_14adl_serializerEEENSt9__cxx19986vectorIS9_SaIS9_EEEEENS7_IS9_SD_EEEE (mutable\r\n iterator);\r\n  state = singular;\r\n  references sequence with type 'NSt7__debug6vectorIN8nlohmann10basic_jsonINS_3mapES0_SsblmdSaNS1_14adl_serializerEEESaIS5_EEE' @ 0x0x234a4f0\r\n}`"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/491", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/491/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/491/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/491/events", "html_url": "https://github.com/nlohmann/json/issues/491", "id": 212994366, "node_id": "MDU6SXNzdWUyMTI5OTQzNjY=", "number": 491, "title": "crapy interface", "user": {"login": "microcai", "id": 172208, "node_id": "MDQ6VXNlcjE3MjIwOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/172208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/microcai", "html_url": "https://github.com/microcai", "followers_url": "https://api.github.com/users/microcai/followers", "following_url": "https://api.github.com/users/microcai/following{/other_user}", "gists_url": "https://api.github.com/users/microcai/gists{/gist_id}", "starred_url": "https://api.github.com/users/microcai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/microcai/subscriptions", "organizations_url": "https://api.github.com/users/microcai/orgs", "repos_url": "https://api.github.com/users/microcai/repos", "events_url": "https://api.github.com/users/microcai/events{/privacy}", "received_events_url": "https://api.github.com/users/microcai/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-03-09T10:26:04Z", "updated_at": "2018-05-03T08:26:03Z", "closed_at": "2017-03-17T09:10:45Z", "author_association": "NONE", "body": "access non-exist node leads to ASSERT.\r\n\r\nno auto type convert, just throws.\r\n\r\nyou have to write  *LOTS OF* try /catch block, just to get a value\r\n that is stupid, that's not morden c++. it is just stupid JAVA style.\r\n\r\nYOU USE EXCEPTIONS WRONG. stupid.\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/490", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/490/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/490/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/490/events", "html_url": "https://github.com/nlohmann/json/issues/490", "id": 212918945, "node_id": "MDU6SXNzdWUyMTI5MTg5NDU=", "number": 490, "title": "Fix Visual Studo 2013 builds.", "user": {"login": "AraHaan", "id": 15173749, "node_id": "MDQ6VXNlcjE1MTczNzQ5", "avatar_url": "https://avatars0.githubusercontent.com/u/15173749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AraHaan", "html_url": "https://github.com/AraHaan", "followers_url": "https://api.github.com/users/AraHaan/followers", "following_url": "https://api.github.com/users/AraHaan/following{/other_user}", "gists_url": "https://api.github.com/users/AraHaan/gists{/gist_id}", "starred_url": "https://api.github.com/users/AraHaan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AraHaan/subscriptions", "organizations_url": "https://api.github.com/users/AraHaan/orgs", "repos_url": "https://api.github.com/users/AraHaan/repos", "events_url": "https://api.github.com/users/AraHaan/events{/privacy}", "received_events_url": "https://api.github.com/users/AraHaan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-09T02:38:33Z", "updated_at": "2017-03-09T07:27:25Z", "closed_at": "2017-03-09T07:27:25Z", "author_association": "NONE", "body": "Some projects use your library in Visual Studio 2013. However it tries to use ``constexpr`` and ``noexcept`` which makes it unable to work on that version of Visual Studio. There is got to be a way to know if the version of Visual Studio code wise has ``noexcept`` and ``constexpr``."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/489", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/489/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/489/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/489/events", "html_url": "https://github.com/nlohmann/json/issues/489", "id": 212800810, "node_id": "MDU6SXNzdWUyMTI4MDA4MTA=", "number": 489, "title": "Failed to compile with -D_GLIBCXX_PARALLEL", "user": {"login": "joy13975", "id": 6729737, "node_id": "MDQ6VXNlcjY3Mjk3Mzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/6729737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joy13975", "html_url": "https://github.com/joy13975", "followers_url": "https://api.github.com/users/joy13975/followers", "following_url": "https://api.github.com/users/joy13975/following{/other_user}", "gists_url": "https://api.github.com/users/joy13975/gists{/gist_id}", "starred_url": "https://api.github.com/users/joy13975/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joy13975/subscriptions", "organizations_url": "https://api.github.com/users/joy13975/orgs", "repos_url": "https://api.github.com/users/joy13975/repos", "events_url": "https://api.github.com/users/joy13975/events{/privacy}", "received_events_url": "https://api.github.com/users/joy13975/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 9, "created_at": "2017-03-08T17:24:42Z", "updated_at": "2017-03-13T13:39:10Z", "closed_at": "2017-03-13T13:39:10Z", "author_association": "NONE", "body": "Hello, \r\n\r\njson.hpp builds OK normally (even with -fopenmp) but would not build with gcc flags \"-D_GLIBCXX_PARALLEL\". I suspect this is because of different type rules in STL when parallel flag is on:\r\n\r\n\r\n```\r\ng++ -fdiagnostics-color=always -MMD -std=c++11 -fmax-errors=1 -O3  -fopenmp -D_GLIBCXX_PARALLEL  -I./jutil/src/  -o .obj/./core/Kabsch.o -c core/Kabsch.cpp\r\nIn file included from /usr/local/Cellar/gcc/6.1.0/include/c++/6.1.0/parallel/algo.h:47:0,\r\n                 from /usr/local/Cellar/gcc/6.1.0/include/c++/6.1.0/parallel/algorithm:37,\r\n                 from /usr/local/Cellar/gcc/6.1.0/include/c++/6.1.0/algorithm:65,\r\n                 from ./input/json.hpp:32,\r\n                 from ./input/JSONParser.hpp:4,\r\n                 from core/Kabsch.cpp:9:\r\n/usr/local/Cellar/gcc/6.1.0/include/c++/6.1.0/parallel/par_loop.h: In instantiation of '_Op __gnu_parallel::__for_each_template_random_access_ed(_RAIter, _RAIter, _Op, _Fu&, _Red, _Result, _Result&, typename std::iterator_traits<_Iter>::difference_type) [with _RAIter = const char*; _Op = __gnu_parallel::_Nothing; _Fu = __gnu_parallel::__accumulate_selector<const char*>; _Red = __gnu_parallel::__accumulate_binop_reduct<nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::parse(IteratorType, IteratorType, nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::parser_callback_t) [with IteratorType = const char*; typename std::enable_if<std::is_base_of<std::random_access_iterator_tag, typename std::iterator_traits<_InputIterator>::iterator_category>::value, int>::type <anonymous> = 0; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long long int; NumberUnsignedType = long long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::adl_serializer; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::parser_callback_t = std::function<bool(int, nlohmann::basic_json<>::parse_event_t, nlohmann::basic_json<>&)>]::<lambda(std::pair<bool, int>, const char&)> >; _Result = std::pair<bool, int>; typename std::iterator_traits<_Iter>::difference_type = long int]':\r\n/usr/local/Cellar/gcc/6.1.0/include/c++/6.1.0/parallel/numeric:99:49:   required from '_Tp std::__parallel::__accumulate_switch(_RAIter, _RAIter, _Tp, _BinaryOper, std::random_access_iterator_tag, __gnu_parallel::_Parallelism) [with _RAIter = const char*; _Tp = std::pair<bool, int>; _BinaryOper = nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::parse(IteratorType, IteratorType, nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::parser_callback_t) [with IteratorType = const char*; typename std::enable_if<std::is_base_of<std::random_access_iterator_tag, typename std::iterator_traits<_InputIterator>::iterator_category>::value, int>::type <anonymous> = 0; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long long int; NumberUnsignedType = long long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::adl_serializer; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::parser_callback_t = std::function<bool(int, nlohmann::basic_json<>::parse_event_t, nlohmann::basic_json<>&)>]::<lambda(std::pair<bool, int>, const char&)>]'\r\n/usr/local/Cellar/gcc/6.1.0/include/c++/6.1.0/parallel/numeric:160:33:   required from '_Tp std::__parallel::accumulate(_IIter, _IIter, _Tp, _BinaryOper) [with _IIter = const char*; _Tp = std::pair<bool, int>; _BinaryOper = nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::parse(IteratorType, IteratorType, nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::parser_callback_t) [with IteratorType = const char*; typename std::enable_if<std::is_base_of<std::random_access_iterator_tag, typename std::iterator_traits<_InputIterator>::iterator_category>::value, int>::type <anonymous> = 0; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long long int; NumberUnsignedType = long long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::adl_serializer; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::parser_callback_t = std::function<bool(int, nlohmann::basic_json<>::parse_event_t, nlohmann::basic_json<>&)>]::<lambda(std::pair<bool, int>, const char&)>]'\r\n./input/json.hpp:6461:9:   required from 'static nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer> nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::parse(IteratorType, IteratorType, nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::parser_callback_t) [with IteratorType = const char*; typename std::enable_if<std::is_base_of<std::random_access_iterator_tag, typename std::iterator_traits<_InputIterator>::iterator_category>::value, int>::type <anonymous> = 0; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long long int; NumberUnsignedType = long long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::adl_serializer; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::parser_callback_t = std::function<bool(int, nlohmann::basic_json<>::parse_event_t, nlohmann::basic_json<>&)>]'\r\n./input/json.hpp:12816:42:   required from here\r\n/usr/local/Cellar/gcc/6.1.0/include/c++/6.1.0/parallel/par_loop.h:102:17: error: no matching function for call to 'std::pair<bool, int>::pair(std::iterator_traits<const char*>::value_type)'\r\n      __reduct = new _Result(__f(__o, __begin + __start));\r\n```\r\n\r\nThis is on MacOSX 10.12.3 with Homebrew gcc 6.1.0.\r\nThe assertion at line 6461 was causing the problem. I found that if we follow http://stackoverflow.com/a/35008842/266378 more faithfully, e.g. by defining \r\n```cpp\r\ntemplate<class I>\r\nstatic bool is_contiguous(I first, I last)\r\n{ \r\n    bool test = true;\r\n    auto const n = std::distance(first, last);\r\n    for (int i = 0; i < n && test; ++i) {\r\n        test &= *(std::next(first, i)) == *(std::next(std::addressof(*first), i));\r\n    }        \r\n    return test;        \r\n}\r\n```\r\n\r\nand replacing the assertion by calling\r\n```cpp\r\nassert(is_contiguous(first, last));\r\n```\r\n\r\nthis error seems to go away. However I'm not an expert in STL so was hoping someone could verify this."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/488", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/488/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/488/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/488/events", "html_url": "https://github.com/nlohmann/json/issues/488", "id": 212489654, "node_id": "MDU6SXNzdWUyMTI0ODk2NTQ=", "number": 488, "title": "Input several field with the same name", "user": {"login": "CDitzel", "id": 22954412, "node_id": "MDQ6VXNlcjIyOTU0NDEy", "avatar_url": "https://avatars3.githubusercontent.com/u/22954412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDitzel", "html_url": "https://github.com/CDitzel", "followers_url": "https://api.github.com/users/CDitzel/followers", "following_url": "https://api.github.com/users/CDitzel/following{/other_user}", "gists_url": "https://api.github.com/users/CDitzel/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDitzel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDitzel/subscriptions", "organizations_url": "https://api.github.com/users/CDitzel/orgs", "repos_url": "https://api.github.com/users/CDitzel/repos", "events_url": "https://api.github.com/users/CDitzel/events{/privacy}", "received_events_url": "https://api.github.com/users/CDitzel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2017-03-07T16:42:38Z", "updated_at": "2017-03-08T14:17:02Z", "closed_at": "2017-03-08T14:17:02Z", "author_association": "NONE", "body": "How can I input more than one field with the same name, like often occuring in json files\r\n\r\n`// create an empty structure (null)\r\njson j;\r\n\r\n// add a number that is stored as double (note the implicit conversion of j to an object)\r\nj[\"pi\"] = 3.141;\r\n\r\n// add a second number that is stored as double (note the implicit conversion of j to an object)\r\nj[\"pi\"] = 3.14151;\r\n\r\n\r\nit seems as if the first is just overwritten. Am I missing something here?\r\n`"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/487", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/487/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/487/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/487/events", "html_url": "https://github.com/nlohmann/json/issues/487", "id": 212403576, "node_id": "MDU6SXNzdWUyMTI0MDM1NzY=", "number": 487, "title": "read in .json file yields strange sizes", "user": {"login": "CDitzel", "id": 22954412, "node_id": "MDQ6VXNlcjIyOTU0NDEy", "avatar_url": "https://avatars3.githubusercontent.com/u/22954412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDitzel", "html_url": "https://github.com/CDitzel", "followers_url": "https://api.github.com/users/CDitzel/followers", "following_url": "https://api.github.com/users/CDitzel/following{/other_user}", "gists_url": "https://api.github.com/users/CDitzel/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDitzel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDitzel/subscriptions", "organizations_url": "https://api.github.com/users/CDitzel/orgs", "repos_url": "https://api.github.com/users/CDitzel/repos", "events_url": "https://api.github.com/users/CDitzel/events{/privacy}", "received_events_url": "https://api.github.com/users/CDitzel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 23, "created_at": "2017-03-07T11:21:41Z", "updated_at": "2017-03-07T15:39:05Z", "closed_at": "2017-03-07T15:39:05Z", "author_association": "NONE", "body": "I am trying to read in an .json file into an json object via the overloaded >> operator\r\n\r\nI can also write it to another .json file with <<  which reproduces the same file, as expected.\r\n\r\nhowever, when I try to find out about the size of the json-container, it yields 3, although my file is quite big\r\n\r\n`  json input;\r\n  i >> input;\r\n std::cout << input.size()\r\n               << input\r\n               << std::endl;\r\n`\r\n\r\nit gives the correct content but the size is obviously wrong"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/486", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/486/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/486/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/486/events", "html_url": "https://github.com/nlohmann/json/issues/486", "id": 212333267, "node_id": "MDU6SXNzdWUyMTIzMzMyNjc=", "number": 486, "title": "json::value_t can't be a map's key type in VC++ 2015", "user": {"login": "Getfree", "id": 1877562, "node_id": "MDQ6VXNlcjE4Nzc1NjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1877562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Getfree", "html_url": "https://github.com/Getfree", "followers_url": "https://api.github.com/users/Getfree/followers", "following_url": "https://api.github.com/users/Getfree/following{/other_user}", "gists_url": "https://api.github.com/users/Getfree/gists{/gist_id}", "starred_url": "https://api.github.com/users/Getfree/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Getfree/subscriptions", "organizations_url": "https://api.github.com/users/Getfree/orgs", "repos_url": "https://api.github.com/users/Getfree/repos", "events_url": "https://api.github.com/users/Getfree/events{/privacy}", "received_events_url": "https://api.github.com/users/Getfree/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 11, "created_at": "2017-03-07T05:18:25Z", "updated_at": "2017-03-12T09:44:15Z", "closed_at": "2017-03-12T09:44:15Z", "author_association": "NONE", "body": "The following code does not compile in Visual Studio 2015, but compiles fine in GCC.\r\n\r\n\t#include <string>\r\n\t#include <map>\r\n\t#include <iostream>\r\n\t\r\n\t#include \"json.hpp\"\r\n\tusing JSON = nlohmann::json ;\r\n\t\r\n\tint main (){\r\n\t\tusing namespace std ;\r\n\t\t\r\n\t\tmap<JSON::value_t,string> jsonTypes ;\r\n\t\r\n\t\tjsonTypes[JSON::value_t::array] = \"array\" ;\r\n\t\r\n\t\tcout << jsonTypes[ JSON({\"val1\", 123, false}) ] << endl ;\r\n\t}\r\n\r\nWandbox: http://melpon.org/wandbox/permlink/Izdt8DW4UGpVQdUd"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/485", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/485/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/485/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/485/events", "html_url": "https://github.com/nlohmann/json/issues/485", "id": 212315379, "node_id": "MDU6SXNzdWUyMTIzMTUzNzk=", "number": 485, "title": "Using fifo_map", "user": {"login": "adah1972", "id": 2137834, "node_id": "MDQ6VXNlcjIxMzc4MzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/2137834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adah1972", "html_url": "https://github.com/adah1972", "followers_url": "https://api.github.com/users/adah1972/followers", "following_url": "https://api.github.com/users/adah1972/following{/other_user}", "gists_url": "https://api.github.com/users/adah1972/gists{/gist_id}", "starred_url": "https://api.github.com/users/adah1972/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adah1972/subscriptions", "organizations_url": "https://api.github.com/users/adah1972/orgs", "repos_url": "https://api.github.com/users/adah1972/repos", "events_url": "https://api.github.com/users/adah1972/events{/privacy}", "received_events_url": "https://api.github.com/users/adah1972/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 24, "created_at": "2017-03-07T02:51:49Z", "updated_at": "2017-11-14T23:17:20Z", "closed_at": "2017-11-14T23:17:08Z", "author_association": "NONE", "body": "The document says \"you can specialize the object type with containers like `tsl::ordered_map` or `nlohmann::fifo_map`\". I had a try with simple code like:\r\n\r\n```cpp\r\n#include \"fifo_map.hpp\"\r\n#include \"json.hpp\"\r\n\r\nusing json = nlohmann::basic_json<nlohmann::fifo_map>;\r\n\r\nint main()\r\n{\r\n    json j;\r\n}\r\n```\r\n\r\nIt fails the compilation noisily. Would you please fix the issue, and/or clarify in the document how this should be done?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/484", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/484/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/484/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/484/events", "html_url": "https://github.com/nlohmann/json/issues/484", "id": 212287398, "node_id": "MDU6SXNzdWUyMTIyODczOTg=", "number": 484, "title": "Cannot get float pointer for value stored as `0`", "user": {"login": "koemeet", "id": 1569156, "node_id": "MDQ6VXNlcjE1NjkxNTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1569156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koemeet", "html_url": "https://github.com/koemeet", "followers_url": "https://api.github.com/users/koemeet/followers", "following_url": "https://api.github.com/users/koemeet/following{/other_user}", "gists_url": "https://api.github.com/users/koemeet/gists{/gist_id}", "starred_url": "https://api.github.com/users/koemeet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koemeet/subscriptions", "organizations_url": "https://api.github.com/users/koemeet/orgs", "repos_url": "https://api.github.com/users/koemeet/repos", "events_url": "https://api.github.com/users/koemeet/events{/privacy}", "received_events_url": "https://api.github.com/users/koemeet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-06T23:51:40Z", "updated_at": "2017-03-11T08:35:17Z", "closed_at": "2017-03-11T08:35:10Z", "author_association": "CONTRIBUTOR", "body": "I am using a web service which doesn't return a floating point all the time. For example, `0` is used to represent `0.0`. Because this library needs `0.0` in order to parse it as a float I am having some issues with it. Right now I am unable to get a proper `float` pointer, simply because the `number_float` storage is not set. \r\n\r\nHow would I approach this, since the webservice cannot be changed in order to output `0` as `0.0`. I am using lots data that has this, so it would be nice if there was a good solution for this issue.\r\n\r\nAny ideas? \ud83d\ude04 \r\n\r\nMaybe it is a good idea to always store ints and float along side each other? "}, {"url": "https://api.github.com/repos/nlohmann/json/issues/483", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/483/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/483/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/483/events", "html_url": "https://github.com/nlohmann/json/issues/483", "id": 211710810, "node_id": "MDU6SXNzdWUyMTE3MTA4MTA=", "number": 483, "title": "byte string support", "user": {"login": "izvit", "id": 26156587, "node_id": "MDQ6VXNlcjI2MTU2NTg3", "avatar_url": "https://avatars0.githubusercontent.com/u/26156587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/izvit", "html_url": "https://github.com/izvit", "followers_url": "https://api.github.com/users/izvit/followers", "following_url": "https://api.github.com/users/izvit/following{/other_user}", "gists_url": "https://api.github.com/users/izvit/gists{/gist_id}", "starred_url": "https://api.github.com/users/izvit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/izvit/subscriptions", "organizations_url": "https://api.github.com/users/izvit/orgs", "repos_url": "https://api.github.com/users/izvit/repos", "events_url": "https://api.github.com/users/izvit/events{/privacy}", "received_events_url": "https://api.github.com/users/izvit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 571470316, "node_id": "MDU6TGFiZWw1NzE0NzAzMTY=", "url": "https://api.github.com/repos/nlohmann/json/labels/aspect:%20binary%20formats", "name": "aspect: binary formats", "color": "5319e7", "default": false}, {"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2017-03-03T14:58:22Z", "updated_at": "2017-03-28T21:59:34Z", "closed_at": "2017-03-14T17:31:48Z", "author_association": "NONE", "body": "I was wondering if there were any plans for supporting CBOR byte strings (RFC 7049 type 2)? "}, {"url": "https://api.github.com/repos/nlohmann/json/issues/482", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/482/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/482/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/482/events", "html_url": "https://github.com/nlohmann/json/issues/482", "id": 211693650, "node_id": "MDU6SXNzdWUyMTE2OTM2NTA=", "number": 482, "title": "For a header-only library you have to clone 214MB", "user": {"login": "frobware", "id": 943903, "node_id": "MDQ6VXNlcjk0MzkwMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/943903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frobware", "html_url": "https://github.com/frobware", "followers_url": "https://api.github.com/users/frobware/followers", "following_url": "https://api.github.com/users/frobware/following{/other_user}", "gists_url": "https://api.github.com/users/frobware/gists{/gist_id}", "starred_url": "https://api.github.com/users/frobware/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frobware/subscriptions", "organizations_url": "https://api.github.com/users/frobware/orgs", "repos_url": "https://api.github.com/users/frobware/repos", "events_url": "https://api.github.com/users/frobware/events{/privacy}", "received_events_url": "https://api.github.com/users/frobware/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-03T13:53:28Z", "updated_at": "2017-03-03T14:03:37Z", "closed_at": "2017-03-03T14:03:37Z", "author_association": "NONE", "body": "It would be nice if the tests and benchmark data could be separated from the include file. I just added this as a git submodule and discovered the clone is 214MB."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/481", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/481/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/481/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/481/events", "html_url": "https://github.com/nlohmann/json/issues/481", "id": 211185993, "node_id": "MDU6SXNzdWUyMTExODU5OTM=", "number": 481, "title": "https://github.com/nlohmann/json#execute-unit-tests", "user": {"login": "TedLyngmo", "id": 2361158, "node_id": "MDQ6VXNlcjIzNjExNTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2361158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TedLyngmo", "html_url": "https://github.com/TedLyngmo", "followers_url": "https://api.github.com/users/TedLyngmo/followers", "following_url": "https://api.github.com/users/TedLyngmo/following{/other_user}", "gists_url": "https://api.github.com/users/TedLyngmo/gists{/gist_id}", "starred_url": "https://api.github.com/users/TedLyngmo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TedLyngmo/subscriptions", "organizations_url": "https://api.github.com/users/TedLyngmo/orgs", "repos_url": "https://api.github.com/users/TedLyngmo/repos", "events_url": "https://api.github.com/users/TedLyngmo/events{/privacy}", "received_events_url": "https://api.github.com/users/TedLyngmo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-01T19:39:04Z", "updated_at": "2017-03-03T11:57:08Z", "closed_at": "2017-03-03T11:57:08Z", "author_association": "CONTRIBUTOR", "body": "Hi and thanks for a great lib!\r\n\r\nMinor detail - there's an extra \" in:\r\n\r\n ./test/json_unit \"*\"\"\r\n\r\n:-)"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/480", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/480/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/480/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/480/events", "html_url": "https://github.com/nlohmann/json/issues/480", "id": 211137267, "node_id": "MDU6SXNzdWUyMTExMzcyNjc=", "number": 480, "title": "Remove deprecated constructor basic_json(std::istream&)", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 3, "created_at": "2017-03-01T16:38:05Z", "updated_at": "2017-03-02T17:39:14Z", "closed_at": "2017-03-02T17:39:13Z", "author_association": "OWNER", "body": "Function\r\n\r\n```cpp\r\nexplicit basic_json(std::istream& i, const parser_callback_t cb = nullptr)\r\n```\r\n\r\nhas been deprecated since version 2.0.0 (June 24, 2016) to unify the interface of the library. Deprecation warnings were produced with GCC, Clang, and MSVC.\r\n\r\nTo create objects from an input stream, there remain the following possibilities:\r\n\r\n- with callback:\r\n  - `parse(std::istream& i, const parser_callback_t cb = nullptr)`\r\n- without callback\r\n  - `std::istream& operator<<(basic_json& j, std::istream& i)`\r\n  - `std::istream& operator>>(std::istream& i, basic_json& j)`\r\n\r\nThat is, code without callback `cb`\r\n\r\n```cpp\r\njson j(i);\r\n```\r\n\r\nmust be replaced by either\r\n\r\n```cpp\r\n// alternative 1\r\njson j = json::parse(i);\r\n\r\n// alternative 2\r\njson j;\r\nj << i;\r\n\r\n// alternative 3\r\njson j;\r\ni >> j;\r\n```\r\n\r\nCode with a callback function `cb`\r\n\r\n```cpp\r\njson j(i, cb);\r\n```\r\n\r\nmust be replaced by\r\n\r\n```cpp\r\njson j = json::parse(i, cb);\r\n```"}]