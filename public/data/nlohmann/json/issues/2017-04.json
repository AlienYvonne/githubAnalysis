[{"url": "https://api.github.com/repos/nlohmann/json/issues/571", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/571/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/571/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/571/events", "html_url": "https://github.com/nlohmann/json/issues/571", "id": 224702162, "node_id": "MDU6SXNzdWUyMjQ3MDIxNjI=", "number": 571, "title": "JSON.getLong produces inconsistent results", "user": {"login": "rajasuba", "id": 7858534, "node_id": "MDQ6VXNlcjc4NTg1MzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/7858534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rajasuba", "html_url": "https://github.com/rajasuba", "followers_url": "https://api.github.com/users/rajasuba/followers", "following_url": "https://api.github.com/users/rajasuba/following{/other_user}", "gists_url": "https://api.github.com/users/rajasuba/gists{/gist_id}", "starred_url": "https://api.github.com/users/rajasuba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rajasuba/subscriptions", "organizations_url": "https://api.github.com/users/rajasuba/orgs", "repos_url": "https://api.github.com/users/rajasuba/repos", "events_url": "https://api.github.com/users/rajasuba/events{/privacy}", "received_events_url": "https://api.github.com/users/rajasuba/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-27T07:58:54Z", "updated_at": "2017-04-27T08:02:27Z", "closed_at": "2017-04-27T08:02:20Z", "author_association": "NONE", "body": "Json.getLong produces inconsistent results. Here is the following sample snippet which produces different results across different machine with the same JDK version and same JSON jar\r\n\r\n            `String str = \"26315000000253009\";\r\n\t\tJSONObject json = new JSONObject();\r\n\t\tjson.put(\"key\", str);\r\n\t\t\r\n\t\tSystem.out.println(\"The value of json.get is  : \" +json.get(\"key\"));\r\n\t\tSystem.out.println(\"The value of json.getLong is : \"+json.getLong(\"key\"));\r\n\t\tSystem.out.println(\"The value of json.getString is : \"+json.getString(\"key\"));`\r\n\r\nDifferent results \r\n\r\n> \r\n> The value of json.get is : 26315000000253009 \r\n> The value of json.getLong is : 26315000000253008 \r\n> The value of json.getString is : 26315000000253009\r\n\r\n> \r\n> The value of json.get is : 26315000000253009 \r\n> The value of json.getLong is : 26315000000253009 \r\n> The value of json.getString is : 26315000000253009\r\n\r\n\r\n*JSON version * : 2.0 \r\n*MD5Sum value of Json jar* : 2f7f899f0766e65017744a4c4fc14d46\r\n*JDK Version * : 1.8.0_92\r\n\r\nWhat could be the reason for this inconsistent results? It would be great help if someone could help me know about this.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/570", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/570/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/570/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/570/events", "html_url": "https://github.com/nlohmann/json/issues/570", "id": 224566798, "node_id": "MDU6SXNzdWUyMjQ1NjY3OTg=", "number": 570, "title": "Request: Object.at() with default return value", "user": {"login": "Getfree", "id": 1877562, "node_id": "MDQ6VXNlcjE4Nzc1NjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1877562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Getfree", "html_url": "https://github.com/Getfree", "followers_url": "https://api.github.com/users/Getfree/followers", "following_url": "https://api.github.com/users/Getfree/following{/other_user}", "gists_url": "https://api.github.com/users/Getfree/gists{/gist_id}", "starred_url": "https://api.github.com/users/Getfree/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Getfree/subscriptions", "organizations_url": "https://api.github.com/users/Getfree/orgs", "repos_url": "https://api.github.com/users/Getfree/repos", "events_url": "https://api.github.com/users/Getfree/events{/privacy}", "received_events_url": "https://api.github.com/users/Getfree/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 6, "created_at": "2017-04-26T18:57:24Z", "updated_at": "2017-05-05T14:43:13Z", "closed_at": "2017-05-05T14:43:13Z", "author_association": "NONE", "body": "On many implementations of dictionary-like structures, we have an `at/get` method that works like this:\r\n`Object.at(\"key\",defaultValue)`\r\ni.e. if there's no key `\"key\"`, then this would return `defaultValue`.\r\n\r\nCould we have something similar in this library?\r\n\r\nHere is a possible implementation:\r\n\r\n\ttemplate<typename returnType>\r\n\treturnType at(const typename object_t::key_type& key, const returnType& _default){\r\n\t\tif( is_object() ){\r\n\t\t\tJSON_TRY{\r\n\t\t\t\treturn m_value.object->at(key) ;\r\n\t\t\t}\r\n\t\t\tJSON_CATCH( std::out_of_range& ){\r\n\t\t\t\treturn _default ;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tJSON_THROW(std::domain_error(\"cannot use at() with \" + type_name()));\r\n\t\t}\r\n\t}\r\n\r\nUsage example:\r\n\r\n    json js ;\r\n    js.at(\"key\", 5) ; // \"key\" is expected to hold something convertible to `int`, otherwise 5 is returned"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/569", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/569/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/569/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/569/events", "html_url": "https://github.com/nlohmann/json/issues/569", "id": 224023277, "node_id": "MDU6SXNzdWUyMjQwMjMyNzc=", "number": 569, "title": "Internal structure gets corrupted while parsing", "user": {"login": "sytelus", "id": 2096835, "node_id": "MDQ6VXNlcjIwOTY4MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2096835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sytelus", "html_url": "https://github.com/sytelus", "followers_url": "https://api.github.com/users/sytelus/followers", "following_url": "https://api.github.com/users/sytelus/following{/other_user}", "gists_url": "https://api.github.com/users/sytelus/gists{/gist_id}", "starred_url": "https://api.github.com/users/sytelus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sytelus/subscriptions", "organizations_url": "https://api.github.com/users/sytelus/orgs", "repos_url": "https://api.github.com/users/sytelus/repos", "events_url": "https://api.github.com/users/sytelus/events{/privacy}", "received_events_url": "https://api.github.com/users/sytelus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-04-25T05:12:17Z", "updated_at": "2017-07-07T19:42:00Z", "closed_at": "2017-04-25T18:06:15Z", "author_association": "NONE", "body": "I've two json files. One is stored using ASCII encoding and other is stored using UTF-8 encoding without BOM (using Notepad++'s encoding feature). When I load the UTF-8 file using json.hpp, its internal structure looks corrupted (very large array sizes) and you will see crash trying to read any of elements. The ASCII encoding seems to work fine. However the thing is that there are non-ASCII chars in the content.\r\n\r\nAttached is the very small json file I'm trying to read.\r\n\r\n[settings.zip](https://github.com/nlohmann/json/files/953931/settings.zip)\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/568", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/568/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/568/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/568/events", "html_url": "https://github.com/nlohmann/json/issues/568", "id": 223917800, "node_id": "MDU6SXNzdWUyMjM5MTc4MDA=", "number": 568, "title": "create template <typename Iter> basic_json from_cbor(Iter begin, Iter end)", "user": {"login": "a-pushkin", "id": 3924653, "node_id": "MDQ6VXNlcjM5MjQ2NTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3924653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a-pushkin", "html_url": "https://github.com/a-pushkin", "followers_url": "https://api.github.com/users/a-pushkin/followers", "following_url": "https://api.github.com/users/a-pushkin/following{/other_user}", "gists_url": "https://api.github.com/users/a-pushkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/a-pushkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a-pushkin/subscriptions", "organizations_url": "https://api.github.com/users/a-pushkin/orgs", "repos_url": "https://api.github.com/users/a-pushkin/repos", "events_url": "https://api.github.com/users/a-pushkin/events{/privacy}", "received_events_url": "https://api.github.com/users/a-pushkin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 571470316, "node_id": "MDU6TGFiZWw1NzE0NzAzMTY=", "url": "https://api.github.com/repos/nlohmann/json/labels/aspect:%20binary%20formats", "name": "aspect: binary formats", "color": "5319e7", "default": false}, {"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-24T18:54:55Z", "updated_at": "2017-04-24T19:11:42Z", "closed_at": "2017-04-24T19:11:33Z", "author_association": "NONE", "body": "It would be nice to be able to parse data form existing buffers (including std::array, C array, etc) without having to make a copy into a std::vector<uint8_t>"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/567", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/567/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/567/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/567/events", "html_url": "https://github.com/nlohmann/json/issues/567", "id": 223468430, "node_id": "MDU6SXNzdWUyMjM0Njg0MzA=", "number": 567, "title": "Need to improve ignores..", "user": {"login": "CalielOfSeptem", "id": 3701133, "node_id": "MDQ6VXNlcjM3MDExMzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3701133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CalielOfSeptem", "html_url": "https://github.com/CalielOfSeptem", "followers_url": "https://api.github.com/users/CalielOfSeptem/followers", "following_url": "https://api.github.com/users/CalielOfSeptem/following{/other_user}", "gists_url": "https://api.github.com/users/CalielOfSeptem/gists{/gist_id}", "starred_url": "https://api.github.com/users/CalielOfSeptem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CalielOfSeptem/subscriptions", "organizations_url": "https://api.github.com/users/CalielOfSeptem/orgs", "repos_url": "https://api.github.com/users/CalielOfSeptem/repos", "events_url": "https://api.github.com/users/CalielOfSeptem/events{/privacy}", "received_events_url": "https://api.github.com/users/CalielOfSeptem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-21T18:59:22Z", "updated_at": "2017-04-21T19:00:44Z", "closed_at": "2017-04-21T19:00:44Z", "author_association": "NONE", "body": "I love this project.. but why does it take 133.06 MiB?  Appears to be a short coming of your github ignore file.\r\n```\r\nken@ken-VirtualBox:~/git-repos/septemmud$ git submodule add https://github.com/nlohmann/json.git\r\nCloning into 'json'...\r\nremote: Counting objects: 31983, done.\r\nremote: Compressing objects: 100% (52/52), done.\r\nremote: Total 31983 (delta 21), reused 0 (delta 0), pack-reused 31929\r\nReceiving objects: 100% (31983/31983), 133.06 MiB | 533.00 KiB/s, done.\r\nResolving deltas: 100% (26702/26702), done.\r\nChecking connectivity... done.\r\nken@ken-VirtualBox:~/git-repos/septemmud$ \r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/566", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/566/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/566/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/566/events", "html_url": "https://github.com/nlohmann/json/issues/566", "id": 223183255, "node_id": "MDU6SXNzdWUyMjMxODMyNTU=", "number": 566, "title": "Conan.io", "user": {"login": "Pancir", "id": 15084196, "node_id": "MDQ6VXNlcjE1MDg0MTk2", "avatar_url": "https://avatars3.githubusercontent.com/u/15084196?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pancir", "html_url": "https://github.com/Pancir", "followers_url": "https://api.github.com/users/Pancir/followers", "following_url": "https://api.github.com/users/Pancir/following{/other_user}", "gists_url": "https://api.github.com/users/Pancir/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pancir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pancir/subscriptions", "organizations_url": "https://api.github.com/users/Pancir/orgs", "repos_url": "https://api.github.com/users/Pancir/repos", "events_url": "https://api.github.com/users/Pancir/events{/privacy}", "received_events_url": "https://api.github.com/users/Pancir/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 17, "created_at": "2017-04-20T20:05:04Z", "updated_at": "2017-06-17T11:08:42Z", "closed_at": "2017-06-17T09:20:33Z", "author_association": "NONE", "body": "Hello guys I think it would be a good idea to make the library to be available through the conan. https://www.conan.io/\r\nI could do it without your help but it is the better way when the developers is responsible for it themselves.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/565", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/565/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/565/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/565/events", "html_url": "https://github.com/nlohmann/json/issues/565", "id": 222980856, "node_id": "MDU6SXNzdWUyMjI5ODA4NTY=", "number": 565, "title": "contradictory documentation regarding json::find", "user": {"login": "Fytch", "id": 10600373, "node_id": "MDQ6VXNlcjEwNjAwMzcz", "avatar_url": "https://avatars1.githubusercontent.com/u/10600373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Fytch", "html_url": "https://github.com/Fytch", "followers_url": "https://api.github.com/users/Fytch/followers", "following_url": "https://api.github.com/users/Fytch/following{/other_user}", "gists_url": "https://api.github.com/users/Fytch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Fytch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Fytch/subscriptions", "organizations_url": "https://api.github.com/users/Fytch/orgs", "repos_url": "https://api.github.com/users/Fytch/repos", "events_url": "https://api.github.com/users/Fytch/events{/privacy}", "received_events_url": "https://api.github.com/users/Fytch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 1, "created_at": "2017-04-20T07:59:50Z", "updated_at": "2017-04-23T19:46:52Z", "closed_at": "2017-04-23T19:46:46Z", "author_association": "NONE", "body": "Consider the table [Container function overview](https://nlohmann.github.io/json/index.html). It states that `json::find` will always return `json::end()` for objects. Likewise ought `json::count` to return 0. However, the [source code](https://github.com/nlohmann/json/blob/v2.1.1/src/json.hpp#L4585) makes it very clear, that said information pertains to any JSON value type **but** objects. My guess is that both remarks *(returns `end()`)* and *(returns `0`)* are supposed to be in the column 'array', not in the column 'object'. This assumption is supported by the fact that [another](https://nlohmann.github.io/json/classnlohmann_1_1basic__json_aeed33787bd362c7ead59a4ba945392db.html) [part](https://nlohmann.github.io/json/classnlohmann_1_1basic__json_a5261eba9637f59d17d6cab5f14ce5747.html) of the documentation also patently states that objects, not arrays, are the exception with respect to `json::find` and `json::count`."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/564", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/564/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/564/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/564/events", "html_url": "https://github.com/nlohmann/json/issues/564", "id": 222849319, "node_id": "MDU6SXNzdWUyMjI4NDkzMTk=", "number": 564, "title": "Unexpected '\\\"' in middle of array", "user": {"login": "nickvkaam", "id": 8651871, "node_id": "MDQ6VXNlcjg2NTE4NzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/8651871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickvkaam", "html_url": "https://github.com/nickvkaam", "followers_url": "https://api.github.com/users/nickvkaam/followers", "following_url": "https://api.github.com/users/nickvkaam/following{/other_user}", "gists_url": "https://api.github.com/users/nickvkaam/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickvkaam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickvkaam/subscriptions", "organizations_url": "https://api.github.com/users/nickvkaam/orgs", "repos_url": "https://api.github.com/users/nickvkaam/repos", "events_url": "https://api.github.com/users/nickvkaam/events{/privacy}", "received_events_url": "https://api.github.com/users/nickvkaam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-04-19T19:45:04Z", "updated_at": "2017-04-19T20:52:19Z", "closed_at": "2017-04-19T20:52:19Z", "author_association": "NONE", "body": "I'm trying to parse a string containing json, but it throws an error in the middle of an array of strings (it throws it at position 245). Any json lint tells me the json is correct.\r\n\r\n`{\"a\":[\"fRKEOtRT-etHJOG-lcpJs\",\"MGCHDafQ-LPEXCa-pCeKa\",\"VqjmMLkX-kUShAJ-mcVOp\",\"yuGaeMEF-dVuIMc-TOVt\",\"JdSUVsXx-WUwiIa-HMRH\",\"BkOjJqiu-TKweln-bPFCi\",\"GEkNLxVo-QnHWvT-IbHoc\",\"uKBPcJvW-MOVVpM-kyHrA\",\"iBAlBhsE-allRcH-uqVyK\",\"LwegSOiP-rgUozo-KnoPs\",\"JBxqhpmF-VLGdvg-cxGG\u00a6\",\"hFdrSaBY-eXmTXi-NxFnF\",\"jBfFVOMr-OOceYr-HxsKD\",\"WbQpuAjS-iuTQyq-ddblf\",\"jcSMtECx-LuNWfK-amqw\",\"FiRVJpCQ-MbCvVg-WerPS\",\"TTSDDSpI-slmIQR-frLlD\",\"EGptPBVe-ISUDM0-lrKQO\",\"HLImGoSu-EuxWNn-PPRum\",\"nWUhJxjV-rTQRUy-aMWhe\",\"TaqJPuWi-RMMJuN-xm0\",\"ekLfFogT-STNktZ-XW0I\",\"BDkNQNIG-AdswHQ-ulmdK\",\"FKlKOVEP-IKJhd\u00a6-eVMH\",\"bKmsUMWp-JCqXtu-Hdhaw\",\"emjvdmif-ITPENH-OytDK\",\"FnrqvslC-WqVUXy-vcBAO\",\"HSumNLLh-kLoqBT-TkuSS\",\"wJBfCwwj-JKmjFa-WCSAc\",\"tsOngmgX-jbEKHt-jvpUS\",\"EbBRCEPs-QStfKn-AGZsM\",\"JIhwKSGZ-TTmUgO-eJlT\u00a6\",\"vGeRUFPb-SXtdDP-hhbiJ\",\"uhqsMroN-oleCps-xwboT\",\"AnwMcNWw-aBtGsC-UPvSy\"],\"b\":\"VIbiLEW\u00a6-nIlfGi-HQFW\",\"c\":[\"QFAkxppA-PcIvtc-MQdGQ\"],\"d\":\"Vwoweowjawe\",\"e\":\"AEVsRDLK-obRNar-FrTn\",\"f\":\"\",\"g\":0,\"h\":0}`\r\n\r\nAny idea what's going on? Any help is appreciated :)\r\n\r\nKind regards,\r\n\r\nNick"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/563", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/563/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/563/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/563/events", "html_url": "https://github.com/nlohmann/json/issues/563", "id": 222814822, "node_id": "MDU6SXNzdWUyMjI4MTQ4MjI=", "number": 563, "title": "Support parse std::pair to Json object", "user": {"login": "nguoithichkhampha", "id": 1573602, "node_id": "MDQ6VXNlcjE1NzM2MDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1573602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nguoithichkhampha", "html_url": "https://github.com/nguoithichkhampha", "followers_url": "https://api.github.com/users/nguoithichkhampha/followers", "following_url": "https://api.github.com/users/nguoithichkhampha/following{/other_user}", "gists_url": "https://api.github.com/users/nguoithichkhampha/gists{/gist_id}", "starred_url": "https://api.github.com/users/nguoithichkhampha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nguoithichkhampha/subscriptions", "organizations_url": "https://api.github.com/users/nguoithichkhampha/orgs", "repos_url": "https://api.github.com/users/nguoithichkhampha/repos", "events_url": "https://api.github.com/users/nguoithichkhampha/events{/privacy}", "received_events_url": "https://api.github.com/users/nguoithichkhampha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 17, "created_at": "2017-04-19T17:38:43Z", "updated_at": "2017-08-22T21:06:12Z", "closed_at": "2017-05-04T14:34:04Z", "author_association": "NONE", "body": "Hi, I really interested with this library. But did you support parse a std::pair to Json object ?\r\nSomething like this:\r\n`std::pair<std::string,std::string>{\"test1\",\"value1\"}`\r\nwill have a json object: `{ \"test1\":\"value1\"}`"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/562", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/562/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/562/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/562/events", "html_url": "https://github.com/nlohmann/json/issues/562", "id": 222648967, "node_id": "MDU6SXNzdWUyMjI2NDg5Njc=", "number": 562, "title": "json and Microsoft Visual c++ Compiler Nov 2012 CTP", "user": {"login": "Kostya1", "id": 2563070, "node_id": "MDQ6VXNlcjI1NjMwNzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2563070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kostya1", "html_url": "https://github.com/Kostya1", "followers_url": "https://api.github.com/users/Kostya1/followers", "following_url": "https://api.github.com/users/Kostya1/following{/other_user}", "gists_url": "https://api.github.com/users/Kostya1/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kostya1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kostya1/subscriptions", "organizations_url": "https://api.github.com/users/Kostya1/orgs", "repos_url": "https://api.github.com/users/Kostya1/repos", "events_url": "https://api.github.com/users/Kostya1/events{/privacy}", "received_events_url": "https://api.github.com/users/Kostya1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-19T07:47:19Z", "updated_at": "2017-04-19T07:50:48Z", "closed_at": "2017-04-19T07:50:40Z", "author_association": "NONE", "body": "Hello! I use MSVS 2012 with Microsoft Visual c++ Compiler Nov 2012 CTP (C++11). And I cannot compile my project, because there are different mistakes in json.hpp (eg. \"C3646: 'noexcept': uknown override specifier\"). Is it possible to build your project in MSVS 2012 with C++11 compiler?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/561", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/561/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/561/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/561/events", "html_url": "https://github.com/nlohmann/json/issues/561", "id": 222591653, "node_id": "MDU6SXNzdWUyMjI1OTE2NTM=", "number": 561, "title": "from_json declaration order and exceptions", "user": {"login": "andrewbleonard", "id": 27749621, "node_id": "MDQ6VXNlcjI3NzQ5NjIx", "avatar_url": "https://avatars3.githubusercontent.com/u/27749621?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewbleonard", "html_url": "https://github.com/andrewbleonard", "followers_url": "https://api.github.com/users/andrewbleonard/followers", "following_url": "https://api.github.com/users/andrewbleonard/following{/other_user}", "gists_url": "https://api.github.com/users/andrewbleonard/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewbleonard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewbleonard/subscriptions", "organizations_url": "https://api.github.com/users/andrewbleonard/orgs", "repos_url": "https://api.github.com/users/andrewbleonard/repos", "events_url": "https://api.github.com/users/andrewbleonard/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewbleonard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 344572510, "node_id": "MDU6TGFiZWwzNDQ1NzI1MTA=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20help%20needed", "name": "state: help needed", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-04-19T01:38:09Z", "updated_at": "2017-10-27T14:40:09Z", "closed_at": "2017-10-27T14:40:09Z", "author_association": "NONE", "body": "I am running into an issue where if a from_json function I wrote does a conversion that uses another from_json function I wrote, whether or not I can catch exceptions from nlohmann::json depends on the order of the from_json functions.  Repro code below:\r\n\r\n```cpp\r\n#include <exception>\r\n#include <fstream>\r\n#include <iostream>\r\n\r\n#include \"json.hpp\"\r\n\r\nstruct A {\r\n    int value;\r\n};\r\n\r\nstruct B {\r\n    A a;\r\n};\r\n\r\nvoid from_json(const nlohmann::json& j, B& b) {\r\n    b.a = j.at(\"test\").get<A>();\r\n}\r\n\r\n// If this is moved before the from_json for B, I can catch the exception below\r\nvoid from_json(const nlohmann::json& j, A& a) {\r\n    a.value = j.at(\"value\").get<int>();\r\n}\r\n\r\nint main() {\r\n    try {\r\n        std::ifstream stream(\"test.json\");\r\n        nlohmann::json j;\r\n        stream >> j;\r\n        B b = j;\r\n    } catch (const std::exception& e) {\r\n        std::cerr << \"caught exception: \" << e.what() << std::endl;\r\n    }\r\n    return 0;\r\n}\r\n```\r\n\r\nMy test.json file is below:\r\n```cpp\r\n{\r\n    \"test\": {\r\n        \"value\": \"hello\"\r\n    }\r\n}\r\n```\r\n\r\nIn the above example, the output is:\r\n```\r\nlibc++abi.dylib: terminating with uncaught exception of type std::domain_error: type must be number, but is string\r\nAbort trap: 6\r\n```\r\n\r\nIf I switch the order of the from_json functions, the output is as expected:\r\n```\r\ncaught exception: type must be number, but is string\r\n```\r\n\r\nI am pretty new to C++11 and C++ exceptions, so sorry if the reason for this is obvious.\r\n\r\nMy platform/compiler is OSX 10.11.6 with AppleClang 8.0.0.8000042 and I tested this using json version 2.1.1."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/559", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/559/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/559/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/559/events", "html_url": "https://github.com/nlohmann/json/issues/559", "id": 222363335, "node_id": "MDU6SXNzdWUyMjIzNjMzMzU=", "number": 559, "title": "Tip: Don't upgrade to VS2017 if using json initializer list constructs", "user": {"login": "grasmanek94", "id": 595329, "node_id": "MDQ6VXNlcjU5NTMyOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/595329?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grasmanek94", "html_url": "https://github.com/grasmanek94", "followers_url": "https://api.github.com/users/grasmanek94/followers", "following_url": "https://api.github.com/users/grasmanek94/following{/other_user}", "gists_url": "https://api.github.com/users/grasmanek94/gists{/gist_id}", "starred_url": "https://api.github.com/users/grasmanek94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grasmanek94/subscriptions", "organizations_url": "https://api.github.com/users/grasmanek94/orgs", "repos_url": "https://api.github.com/users/grasmanek94/repos", "events_url": "https://api.github.com/users/grasmanek94/events{/privacy}", "received_events_url": "https://api.github.com/users/grasmanek94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-04-18T09:59:28Z", "updated_at": "2017-05-10T09:37:08Z", "closed_at": "2017-04-23T18:48:37Z", "author_association": "NONE", "body": "It will save you much hassle if you stick to VS2015:\r\n\r\nhttps://developercommunity.visualstudio.com/content/problem/45529/intellisense-stops-working-vs-package-server-crash.html\r\n\r\nIf someone can find a workaround for the crash please let me know.\r\n\r\nEdit: Maybe this is specific to Windows 7 x64 only, I'm investigating.\r\nEdit2: Confirmed on W10 x64 with VS2015 and VS2017 installed."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/558", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/558/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/558/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/558/events", "html_url": "https://github.com/nlohmann/json/issues/558", "id": 222264110, "node_id": "MDU6SXNzdWUyMjIyNjQxMTA=", "number": 558, "title": "parse error - unexpected end of input", "user": {"login": "alienzj", "id": 8847420, "node_id": "MDQ6VXNlcjg4NDc0MjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/8847420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alienzj", "html_url": "https://github.com/alienzj", "followers_url": "https://api.github.com/users/alienzj/followers", "following_url": "https://api.github.com/users/alienzj/following{/other_user}", "gists_url": "https://api.github.com/users/alienzj/gists{/gist_id}", "starred_url": "https://api.github.com/users/alienzj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alienzj/subscriptions", "organizations_url": "https://api.github.com/users/alienzj/orgs", "repos_url": "https://api.github.com/users/alienzj/repos", "events_url": "https://api.github.com/users/alienzj/events{/privacy}", "received_events_url": "https://api.github.com/users/alienzj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-04-18T00:01:35Z", "updated_at": "2017-04-20T16:28:01Z", "closed_at": "2017-04-20T16:28:01Z", "author_association": "NONE", "body": "```cpp\r\n#include <cpprest/http_client.h>\r\n#include <nlohmann/json.hpp>\r\n#include <iostream>\r\nint main() {\r\n\t web::uri_builder builder(\"http://xkcd.com/614/info.0.json\");   // first builder\r\n     // web::uri_builder builder(\"http://i.jandan.net/?oxwlxojflwblxbsapi=jandan.get_duan_comments?page=25\");   // second builder\r\n        web::http::client::http_client client(builder.to_uri());\r\n        nlohmann::json json = nlohmann::json::parse(client.request(web::http::methods::GET)\r\n                              .get().extract_string().get());\r\n        std::cout << json << std::endl;\r\n}\r\n```\r\nSecond builder can run.\r\nBut when run first builder, i will get:\r\nterminate called after throwing an instance of 'std::invalid_argument'\r\n  what():  parse error - unexpected end of input\r\n[1]    2056 abort (core dumped)  ./bin/xkcd_bot\r\n\r\nPlease help me! Thanks very much!"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/557", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/557/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/557/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/557/events", "html_url": "https://github.com/nlohmann/json/issues/557", "id": 222035877, "node_id": "MDU6SXNzdWUyMjIwMzU4Nzc=", "number": 557, "title": "Cant modify existing numbers inside a json object", "user": {"login": "AMScaglione", "id": 22486673, "node_id": "MDQ6VXNlcjIyNDg2Njcz", "avatar_url": "https://avatars1.githubusercontent.com/u/22486673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AMScaglione", "html_url": "https://github.com/AMScaglione", "followers_url": "https://api.github.com/users/AMScaglione/followers", "following_url": "https://api.github.com/users/AMScaglione/following{/other_user}", "gists_url": "https://api.github.com/users/AMScaglione/gists{/gist_id}", "starred_url": "https://api.github.com/users/AMScaglione/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AMScaglione/subscriptions", "organizations_url": "https://api.github.com/users/AMScaglione/orgs", "repos_url": "https://api.github.com/users/AMScaglione/repos", "events_url": "https://api.github.com/users/AMScaglione/events{/privacy}", "received_events_url": "https://api.github.com/users/AMScaglione/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-04-16T21:56:18Z", "updated_at": "2017-04-23T20:35:07Z", "closed_at": "2017-04-23T20:35:07Z", "author_association": "NONE", "body": "Say for example I have something like\r\n\r\n```cpp\r\njson j;\r\nj[\"num\"] = 0;\r\n```\r\n\r\nI can not do something like\r\n\r\n` j[\"num\"]  += 1; `\r\n\r\nas it gives me this error on runtime:\r\n\r\n```\r\nterminate called after throwing an instance of 'std::domain_error'\r\n  what():  cannot use push_back() with number\r\n```\r\n\r\nI tried simplifying it to \r\n\r\n`j[\"num\"] = j[\"num\"] + 1;`\r\n\r\nbut that gives me this error at compile time:\r\n`\r\nerror: no match for 'operator+' (operand types are 'nlohmann::basic_json<>::value_type {aka nlohmann::basic_json<>}' and 'int')|`"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/556", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/556/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/556/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/556/events", "html_url": "https://github.com/nlohmann/json/issues/556", "id": 221957079, "node_id": "MDU6SXNzdWUyMjE5NTcwNzk=", "number": 556, "title": "Minimal repository (current size very large)", "user": {"login": "tdegeus", "id": 7030445, "node_id": "MDQ6VXNlcjcwMzA0NDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7030445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tdegeus", "html_url": "https://github.com/tdegeus", "followers_url": "https://api.github.com/users/tdegeus/followers", "following_url": "https://api.github.com/users/tdegeus/following{/other_user}", "gists_url": "https://api.github.com/users/tdegeus/gists{/gist_id}", "starred_url": "https://api.github.com/users/tdegeus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tdegeus/subscriptions", "organizations_url": "https://api.github.com/users/tdegeus/orgs", "repos_url": "https://api.github.com/users/tdegeus/repos", "events_url": "https://api.github.com/users/tdegeus/events{/privacy}", "received_events_url": "https://api.github.com/users/tdegeus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-15T16:10:30Z", "updated_at": "2017-04-15T16:16:45Z", "closed_at": "2017-04-15T16:16:45Z", "author_association": "NONE", "body": "I want to use \"json\" as a submodule to my project, because:\r\n\r\n1.  I want to be transparent is ownership, to give credits where they are due.\r\n2.  To facilitate updating from source.\r\n\r\nHowever, the current repository is extremely large, due to the tests and benchmarks. This hinders again the distribution of my code. Therefore it would be great if a minimal repository can be maintained.\r\n\r\nThanks!\r\nTom"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/554", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/554/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/554/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/554/events", "html_url": "https://github.com/nlohmann/json/issues/554", "id": 221934051, "node_id": "MDU6SXNzdWUyMjE5MzQwNTE=", "number": 554, "title": "Better support for SAX style serialize and deserialize in new version?", "user": {"login": "11nk", "id": 17879300, "node_id": "MDQ6VXNlcjE3ODc5MzAw", "avatar_url": "https://avatars3.githubusercontent.com/u/17879300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/11nk", "html_url": "https://github.com/11nk", "followers_url": "https://api.github.com/users/11nk/followers", "following_url": "https://api.github.com/users/11nk/following{/other_user}", "gists_url": "https://api.github.com/users/11nk/gists{/gist_id}", "starred_url": "https://api.github.com/users/11nk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/11nk/subscriptions", "organizations_url": "https://api.github.com/users/11nk/orgs", "repos_url": "https://api.github.com/users/11nk/repos", "events_url": "https://api.github.com/users/11nk/events{/privacy}", "received_events_url": "https://api.github.com/users/11nk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-04-15T07:53:11Z", "updated_at": "2018-02-13T20:31:45Z", "closed_at": "2017-04-15T09:37:28Z", "author_association": "NONE", "body": "it is very useful to do a language binding , Currently we need iterate the object to create a temp cpp json object before serizalize to string . "}, {"url": "https://api.github.com/repos/nlohmann/json/issues/553", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/553/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/553/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/553/events", "html_url": "https://github.com/nlohmann/json/issues/553", "id": 221475394, "node_id": "MDU6SXNzdWUyMjE0NzUzOTQ=", "number": 553, "title": "Cannot convert from json array to std::array", "user": {"login": "wgtdkp", "id": 6128114, "node_id": "MDQ6VXNlcjYxMjgxMTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6128114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wgtdkp", "html_url": "https://github.com/wgtdkp", "followers_url": "https://api.github.com/users/wgtdkp/followers", "following_url": "https://api.github.com/users/wgtdkp/following{/other_user}", "gists_url": "https://api.github.com/users/wgtdkp/gists{/gist_id}", "starred_url": "https://api.github.com/users/wgtdkp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wgtdkp/subscriptions", "organizations_url": "https://api.github.com/users/wgtdkp/orgs", "repos_url": "https://api.github.com/users/wgtdkp/repos", "events_url": "https://api.github.com/users/wgtdkp/events{/privacy}", "received_events_url": "https://api.github.com/users/wgtdkp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 5, "created_at": "2017-04-13T06:57:56Z", "updated_at": "2017-06-19T15:35:04Z", "closed_at": "2017-06-19T15:35:04Z", "author_association": "NONE", "body": "Conversion from `std::array` to json array works well, but not in reverse.\r\n```c++\r\nstd::string r = R\"([1, 2, 3, 4])\";\r\nstd::array<int, 4> arr = json::parse(r);\r\n```\r\nclang++ gives compiling errors:\r\n```\r\n/usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/stl_iterator.h:661:20: error: \r\n      no member named 'insert' in 'std::array<int, 4>'\r\n        iter = container->insert(iter, std::move(__value));\r\n               ~~~~~~~~~  ^\r\n/usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/stl_algo.h:4175:12: note: \r\n      in instantiation of member function 'std::insert_iterator<std::array<int, 4> >::operator='\r\n      requested here\r\n        *__result = __unary_op(*__first);\r\n                  ^\r\n../../src/json.hpp:720:10: note: in instantiation of function template specialization\r\n      'std::transform<nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char>, bool,\r\n      long, unsigned long, double, std::allocator, adl_serializer>::iter_impl<const\r\n      nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char>, bool, long, unsigned\r\n      long, double, std::allocator, adl_serializer> >, std::insert_iterator<std::array<int, 4> >, (lambda\r\n      at ../../src/json.hpp:721:50)>' requested here\r\n    std::transform(j.begin(), j.end(),\r\n         ^\r\n../../src/json.hpp:804:5: note: in instantiation of function template specialization\r\n      'nlohmann::detail::from_json_array_impl<nlohmann::basic_json<std::map, std::vector,\r\n      std::__cxx11::basic_string<char>, bool, long, unsigned long, double, std::allocator,\r\n      adl_serializer>, std::array<int, 4> >' requested here\r\n    from_json_array_impl(j, arr, priority_tag<1> {});\r\n    ^\r\n../../src/json.hpp:902:16: note: in instantiation of function template specialization\r\n      'nlohmann::detail::from_json<nlohmann::basic_json<std::map, std::vector,\r\n      std::__cxx11::basic_string<char>, bool, long, unsigned long, double, std::allocator,\r\n      adl_serializer>, std::array<int, 4>, 0>' requested here\r\n        return from_json(j, val);\r\n               ^\r\n../../src/json.hpp:917:16: note: in instantiation of function template specialization\r\n      'nlohmann::detail::from_json_fn::call<nlohmann::basic_json<std::map, std::vector,\r\n      std::__cxx11::basic_string<char>, bool, long, unsigned long, double, std::allocator,\r\n      adl_serializer>, std::array<int, 4> >' requested here\r\n        return call(j, val, priority_tag<1> {});\r\n               ^\r\n../../src/json.hpp:964:9: note: in instantiation of function template specialization\r\n      'nlohmann::detail::from_json_fn::operator()<nlohmann::basic_json<std::map, std::vector,\r\n      std::__cxx11::basic_string<char>, bool, long, unsigned long, double, std::allocator,\r\n      adl_serializer>, std::array<int, 4> >' requested here\r\n        ::nlohmann::from_json(std::forward<BasicJsonType>(j), val);\r\n        ^\r\n../../src/json.hpp:3272:36: note: in instantiation of function template specialization\r\n      'nlohmann::adl_serializer<std::array<int, 4>, void>::from_json<const nlohmann::basic_json<std::map,\r\n      std::vector, std::__cxx11::basic_string<char>, bool, long, unsigned long, double, std::allocator,\r\n      adl_serializer> &, std::array<int, 4> >' requested here\r\n        JSONSerializer<ValueType>::from_json(*this, ret);\r\n                                   ^\r\n../../src/json.hpp:3530:16: note: in instantiation of function template specialization\r\n      'nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char>, bool, long, unsigned\r\n      long, double, std::allocator, adl_serializer>::get<std::array<int, 4>, std::array<int, 4>, 0>'\r\n      requested here\r\n        return get<ValueType>();\r\n               ^\r\narray.cc:8:28: note: in instantiation of function template specialization 'nlohmann::basic_json<std::map,\r\n      std::vector, std::__cxx11::basic_string<char>, bool, long, unsigned long, double, std::allocator,\r\n      adl_serializer>::operator array<std::array<int, 4>, 0>' requested here\r\n  std::array<int, 4> arr = json::parse(r);\r\n                           ^\r\n1 error generated.\r\n```\r\nIt seems we use `std::inserter` to transform json array to `std::array`, but `std::array` doesn't support insertion. \r\nIs it designed so?\r\nIt seems unreasonable if we can convert `std::array` to json array but cannot do the same in reverse(and this could be easily supported, isn't it?).\r\n\r\nMy environment:\r\n\r\n1. clang++ = 3.8.0\r\n2. ubuntu = 16.04\r\n3. linux kernel = 4.4.0\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/552", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/552/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/552/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/552/events", "html_url": "https://github.com/nlohmann/json/issues/552", "id": 221355114, "node_id": "MDU6SXNzdWUyMjEzNTUxMTQ=", "number": 552, "title": "Do not define an unnamed namespace in a header file (DCL59-CPP)", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-04-12T18:45:39Z", "updated_at": "2018-04-06T16:11:38Z", "closed_at": "2017-05-09T06:49:12Z", "author_association": "OWNER", "body": "The SEI CERT C++ Coding Standard states in DCL59-CPP:\r\n\r\n> Do not define an unnamed namespace in a header file. When an unnamed namespace is defined in a header file, it can lead to surprising results. Due to default internal linkage, each translation unit will define its own unique instance of members of the unnamed namespace that are ODR-used within that translation unit. This can cause unexpected results, bloat the resulting executable, or inadvertently trigger undefined behavior due to one-definition rule (ODR) violations.\r\n\r\nThe code currently has one unnamed namespace:\r\n\r\n```cpp\r\n/// namespace to hold default `to_json` / `from_json` functions\r\nnamespace\r\n{\r\nconstexpr const auto& to_json = detail::static_const<detail::to_json_fn>::value;\r\nconstexpr const auto& from_json = detail::static_const<detail::from_json_fn>::value;\r\n}\r\n```\r\n\r\nI am not sure whether the above problem exists. Maybe @theodelrieu has an idea why we need that namespace in the first place."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/551", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/551/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/551/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/551/events", "html_url": "https://github.com/nlohmann/json/issues/551", "id": 220366276, "node_id": "MDU6SXNzdWUyMjAzNjYyNzY=", "number": 551, "title": "Parse error on known good json file", "user": {"login": "AnthonyScaglione", "id": 24924849, "node_id": "MDQ6VXNlcjI0OTI0ODQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/24924849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AnthonyScaglione", "html_url": "https://github.com/AnthonyScaglione", "followers_url": "https://api.github.com/users/AnthonyScaglione/followers", "following_url": "https://api.github.com/users/AnthonyScaglione/following{/other_user}", "gists_url": "https://api.github.com/users/AnthonyScaglione/gists{/gist_id}", "starred_url": "https://api.github.com/users/AnthonyScaglione/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AnthonyScaglione/subscriptions", "organizations_url": "https://api.github.com/users/AnthonyScaglione/orgs", "repos_url": "https://api.github.com/users/AnthonyScaglione/repos", "events_url": "https://api.github.com/users/AnthonyScaglione/events{/privacy}", "received_events_url": "https://api.github.com/users/AnthonyScaglione/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-04-08T01:40:38Z", "updated_at": "2017-04-08T10:37:27Z", "closed_at": "2017-04-08T10:37:20Z", "author_association": "NONE", "body": "I am trying to test out this parser as I absolutely love the intuitive use of it, however I am having parse errors on a known (albeit huge) good json file.\r\n\r\nusing this code:\r\n\r\n```cpp\r\n#include <iostream>\r\n#include <json.hpp>\r\n#include <fstream>\r\n#include <iomanip>\r\nusing json = nlohmann::json;\r\nint main()\r\n{\r\n    //read json file\r\n    std::ifstream i(\"./rawjsondata/matches1.json\");\r\n    json j;\r\n    i >> j;\r\n    //write prettified json to another file\r\n    std::ofstream o(\"./prettyrawjsondata/prettymatches1.json\");\r\n    o << std::setw(4) << j << std::endl;\r\n}\r\n```\r\n\r\non [this json file](https://s3-us-west-1.amazonaws.com/riot-developer-portal/seed-data/matches1.json)\r\n\r\ngives this error:\r\n\r\n```\r\nterminate called after throwing an instance of 'nlohmann::detail::parse_error'\r\n  what():  [json.exception.parse_error.101] parse error at 9467564: parse error - unexpected '\"'\r\n```\r\n\r\nHowever, using a [quick online json viewer](http://www.jsoneditoronline.org/#/), it gets correctly parsed"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/550", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/550/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/550/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/550/events", "html_url": "https://github.com/nlohmann/json/issues/550", "id": 220284265, "node_id": "MDU6SXNzdWUyMjAyODQyNjU=", "number": 550, "title": "Warning on Intel compiler (icc 17)", "user": {"login": "mark-99", "id": 14183064, "node_id": "MDQ6VXNlcjE0MTgzMDY0", "avatar_url": "https://avatars1.githubusercontent.com/u/14183064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-99", "html_url": "https://github.com/mark-99", "followers_url": "https://api.github.com/users/mark-99/followers", "following_url": "https://api.github.com/users/mark-99/following{/other_user}", "gists_url": "https://api.github.com/users/mark-99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-99/subscriptions", "organizations_url": "https://api.github.com/users/mark-99/orgs", "repos_url": "https://api.github.com/users/mark-99/repos", "events_url": "https://api.github.com/users/mark-99/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-99/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 706237888, "node_id": "MDU6TGFiZWw3MDYyMzc4ODg=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20icc", "name": "platform: icc", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 16, "created_at": "2017-04-07T17:53:51Z", "updated_at": "2017-09-29T08:33:12Z", "closed_at": "2017-06-06T18:48:56Z", "author_association": "NONE", "body": "The warning below is generated when compiling with icc. I realise this is likely the compiler's fault, but perhaps there is a workaround which would make it work.\r\n\r\n*edit* Actually Intel seem to think it's a valid warning: https://software.intel.com/en-us/forums/intel-c-compiler/topic/596393\r\n\r\n---------------\r\nnlohmann-json/json/json.hpp(9024): error #597: \"nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::iter_impl<U>::operator nlohmann::basic_json<std::map, std::vector, std::string, bool, int64_t={long}, uint64_t={unsigned long}, double, std::allocator, nlohmann::adl_serializer>::iter_impl<const nlohmann::basic_json<std::map, std::vector, std::string, bool,\r\n          int64_t={long}, uint64_t={unsigned long}, double, std::allocator, nlohmann::adl_serializer>>() const [with ObjectType=std::map, ArrayType=std::vector, StringType=std::string, BooleanType=bool, NumberIntegerType=int64_t={long}, NumberUnsignedType=uint64_t={unsigned long}, NumberFloatType=double, AllocatorType=std::allocator, JSONSerializer=nlohmann::adl_serializer, U=const nlohmann::basic_json<std::map, std::vector, std::string, bool, int64_t={long}, uint64_t={unsigned long}, double,\r\n          std::allocator, nlohmann::adl_serializer>]\" will not be called for implicit or explicit conversions\r\n          operator const_iterator() const\r\n          ^\r\n          detected during instantiation of class \"nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::iter_impl<U> [with ObjectType=std::map, ArrayType=std::vector, StringType=std::string, BooleanType=bool, NumberIntegerType=int64_t={long}, NumberUnsignedType=uint64_t={unsigned long}, NumberFloatType=double, AllocatorType=std::allocator, JSONSerializer=nlohmann::adl_serializer, U=const\r\n                    nlohmann::basic_json<std::map, std::vector, std::string, bool, int64_t={long}, uint64_t={unsigned long}, double, std::allocator, nlohmann::adl_serializer>]\""}, {"url": "https://api.github.com/repos/nlohmann/json/issues/549", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/549/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/549/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/549/events", "html_url": "https://github.com/nlohmann/json/issues/549", "id": 219744251, "node_id": "MDU6SXNzdWUyMTk3NDQyNTE=", "number": 549, "title": "multiple versions of 'vsnprintf'", "user": {"login": "AMScaglione", "id": 22486673, "node_id": "MDQ6VXNlcjIyNDg2Njcz", "avatar_url": "https://avatars1.githubusercontent.com/u/22486673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AMScaglione", "html_url": "https://github.com/AMScaglione", "followers_url": "https://api.github.com/users/AMScaglione/followers", "following_url": "https://api.github.com/users/AMScaglione/following{/other_user}", "gists_url": "https://api.github.com/users/AMScaglione/gists{/gist_id}", "starred_url": "https://api.github.com/users/AMScaglione/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AMScaglione/subscriptions", "organizations_url": "https://api.github.com/users/AMScaglione/orgs", "repos_url": "https://api.github.com/users/AMScaglione/repos", "events_url": "https://api.github.com/users/AMScaglione/events{/privacy}", "received_events_url": "https://api.github.com/users/AMScaglione/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 486186748, "node_id": "MDU6TGFiZWw0ODYxODY3NDg=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20mingw", "name": "platform: mingw", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2017-04-05T23:26:56Z", "updated_at": "2017-04-09T08:49:27Z", "closed_at": "2017-04-09T08:49:27Z", "author_association": "NONE", "body": "When adding this into code::blocks, I am getting this error when I attempt to compile. I am honestly not sure where to begin with this one, as it has never happened before I included this\r\n\r\n[here's a screenshot of what is happening ](http://imgur.com/a/wpXTl)"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/548", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/548/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/548/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/548/events", "html_url": "https://github.com/nlohmann/json/issues/548", "id": 219727946, "node_id": "MDU6SXNzdWUyMTk3Mjc5NDY=", "number": 548, "title": "illegal indirection", "user": {"login": "jacobjz", "id": 17813116, "node_id": "MDQ6VXNlcjE3ODEzMTE2", "avatar_url": "https://avatars1.githubusercontent.com/u/17813116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jacobjz", "html_url": "https://github.com/jacobjz", "followers_url": "https://api.github.com/users/jacobjz/followers", "following_url": "https://api.github.com/users/jacobjz/following{/other_user}", "gists_url": "https://api.github.com/users/jacobjz/gists{/gist_id}", "starred_url": "https://api.github.com/users/jacobjz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jacobjz/subscriptions", "organizations_url": "https://api.github.com/users/jacobjz/orgs", "repos_url": "https://api.github.com/users/jacobjz/repos", "events_url": "https://api.github.com/users/jacobjz/events{/privacy}", "received_events_url": "https://api.github.com/users/jacobjz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2017-04-05T21:59:02Z", "updated_at": "2017-05-11T12:57:26Z", "closed_at": "2017-04-22T18:12:30Z", "author_association": "NONE", "body": "![image](https://cloud.githubusercontent.com/assets/17813116/24728803/cbba1bfa-1a5b-11e7-8399-17d974d81805.png)\r\nso i get this error :/\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/547", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/547/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/547/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/547/events", "html_url": "https://github.com/nlohmann/json/issues/547", "id": 219496372, "node_id": "MDU6SXNzdWUyMTk0OTYzNzI=", "number": 547, "title": "Ambiguous compare operators with clang-5.0", "user": {"login": "pboettch", "id": 442684, "node_id": "MDQ6VXNlcjQ0MjY4NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/442684?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pboettch", "html_url": "https://github.com/pboettch", "followers_url": "https://api.github.com/users/pboettch/followers", "following_url": "https://api.github.com/users/pboettch/following{/other_user}", "gists_url": "https://api.github.com/users/pboettch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pboettch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pboettch/subscriptions", "organizations_url": "https://api.github.com/users/pboettch/orgs", "repos_url": "https://api.github.com/users/pboettch/repos", "events_url": "https://api.github.com/users/pboettch/events{/privacy}", "received_events_url": "https://api.github.com/users/pboettch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-04-05T07:47:55Z", "updated_at": "2017-04-07T14:31:51Z", "closed_at": "2017-04-05T08:55:52Z", "author_association": "NONE", "body": "This code:\r\n\r\n```c++\r\nmsg[\"level\"] = -80;\r\nif (msg[\"level\"] < -115) {\r\n    ////\r\n}\r\n```\r\nGives me a bunch of \r\n\r\n`error: use of overloaded operator '>=' is ambiguous (with operand types 'int' and 'const value_type' (aka 'const nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer>'))`\r\n\r\nerrors when using clang-5.0 (5.0.0-svn294894-1) . Where with gcc 6.3 everything is fine, no moaning.\r\n\r\nI know that this version of clang is from the dev-tree (iiuc), but I'm creating this issue to see whether there is something to be done here or on clang's side? \r\n\r\n(I'm using 2.1.1 of this library).\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/546", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/546/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/546/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/546/events", "html_url": "https://github.com/nlohmann/json/issues/546", "id": 219299558, "node_id": "MDU6SXNzdWUyMTkyOTk1NTg=", "number": 546, "title": "Using tsl::ordered_map", "user": {"login": "arvidsson", "id": 1745762, "node_id": "MDQ6VXNlcjE3NDU3NjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1745762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arvidsson", "html_url": "https://github.com/arvidsson", "followers_url": "https://api.github.com/users/arvidsson/followers", "following_url": "https://api.github.com/users/arvidsson/following{/other_user}", "gists_url": "https://api.github.com/users/arvidsson/gists{/gist_id}", "starred_url": "https://api.github.com/users/arvidsson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arvidsson/subscriptions", "organizations_url": "https://api.github.com/users/arvidsson/orgs", "repos_url": "https://api.github.com/users/arvidsson/repos", "events_url": "https://api.github.com/users/arvidsson/events{/privacy}", "received_events_url": "https://api.github.com/users/arvidsson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-04-04T15:57:41Z", "updated_at": "2018-05-27T17:59:06Z", "closed_at": "2017-11-01T10:16:00Z", "author_association": "NONE", "body": "Hi!\r\n\r\nI'm using Visual Studio C++ 2017 and I get the following error when I try to use tsl::ordered_map with basic_json:\r\n\r\n'std::pair<Key,T>::second' uses undefined class 'nlohmann::basic_json<tsl::ordered_map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>'\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/544", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/544/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/544/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/544/events", "html_url": "https://github.com/nlohmann/json/issues/544", "id": 218691393, "node_id": "MDU6SXNzdWUyMTg2OTEzOTM=", "number": 544, "title": "Compiler support errors are inconvenient", "user": {"login": "1Hyena", "id": 3479475, "node_id": "MDQ6VXNlcjM0Nzk0NzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3479475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1Hyena", "html_url": "https://github.com/1Hyena", "followers_url": "https://api.github.com/users/1Hyena/followers", "following_url": "https://api.github.com/users/1Hyena/following{/other_user}", "gists_url": "https://api.github.com/users/1Hyena/gists{/gist_id}", "starred_url": "https://api.github.com/users/1Hyena/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1Hyena/subscriptions", "organizations_url": "https://api.github.com/users/1Hyena/orgs", "repos_url": "https://api.github.com/users/1Hyena/repos", "events_url": "https://api.github.com/users/1Hyena/events{/privacy}", "received_events_url": "https://api.github.com/users/1Hyena/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-01T12:00:13Z", "updated_at": "2017-04-01T12:52:02Z", "closed_at": "2017-04-01T12:52:02Z", "author_association": "NONE", "body": "Instead of whitelisting compilers you should blacklist them. What's the point of compiler whitelisting anyway? Shouldn't the code be portable in the first place?\r\nThis is my compiler:\r\ng++ (Ubuntu 4.8.5-2ubuntu1~14.04.1) 4.8.5\r\n\r\nI received the compiler error, I couldn't easily upgrade my compiler because seems that my system uses 4.8.5 by default and getting around it would have required me to change the Makefile of my project which I didn't want to do (to specifically call g++4.9 instead of just g++). So I changed the header file to this\r\n```\r\n// exclude unsupported compilers\r\n#if defined(__clang__)\r\n    #if (__clang_major__ * 10000 + __clang_minor__ * 100 + __clang_patchlevel__) < 30400\r\n        #error \"unsupported Clang version - see https://github.com/nlohmann/json#supported-compilers\"\r\n    #endif\r\n#elif defined(__GNUC__)\r\n    #if (__GNUC__ * 10000 + __GNUC_MINOR__ * 100 + __GNUC_PATCHLEVEL__) < 40800\r\n        #error \"unsupported GCC version - see https://github.com/nlohmann/json#supported-compilers\"\r\n    #endif\r\n#endif\r\n```\r\n\r\nand everything compiled just fine, I ran my program and it works. Not sure what the big issue is. Why wouldn't nlohmann::json compile correctly with g++ 4.8.5 ???\r\n\r\nFor the record, I use linux mint 17.1 (is it really obsolete already? I don't think so)."}]