[{"url": "https://api.github.com/repos/nlohmann/json/issues/599", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/599/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/599/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/599/events", "html_url": "https://github.com/nlohmann/json/issues/599", "id": 232672642, "node_id": "MDU6SXNzdWUyMzI2NzI2NDI=", "number": 599, "title": "Plugin system", "user": {"login": "an-kumar", "id": 13493636, "node_id": "MDQ6VXNlcjEzNDkzNjM2", "avatar_url": "https://avatars0.githubusercontent.com/u/13493636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/an-kumar", "html_url": "https://github.com/an-kumar", "followers_url": "https://api.github.com/users/an-kumar/followers", "following_url": "https://api.github.com/users/an-kumar/following{/other_user}", "gists_url": "https://api.github.com/users/an-kumar/gists{/gist_id}", "starred_url": "https://api.github.com/users/an-kumar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/an-kumar/subscriptions", "organizations_url": "https://api.github.com/users/an-kumar/orgs", "repos_url": "https://api.github.com/users/an-kumar/repos", "events_url": "https://api.github.com/users/an-kumar/events{/privacy}", "received_events_url": "https://api.github.com/users/an-kumar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-05-31T19:37:04Z", "updated_at": "2017-07-25T16:35:34Z", "closed_at": "2017-07-20T11:44:27Z", "author_association": "NONE", "body": "Many header-only libraries (for example, cimg) include 'plugin' systems, where people can add functionality to the class. It looks something like this:\r\n\r\n```cpp\r\nclass some_class\r\n{\r\n// normal code\r\n#ifdef PLUGIN\r\n#include PLUGIN\r\n#endif\r\n// more code\r\n};\r\n```\r\n\r\nCould we add something like this to this json library? I have some added functions that force me to maintain a version of json.hpp checked into my repo, but this makes it awkward to merge in updates to this repo."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/597", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/597/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/597/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/597/events", "html_url": "https://github.com/nlohmann/json/issues/597", "id": 232180607, "node_id": "MDU6SXNzdWUyMzIxODA2MDc=", "number": 597, "title": "Feature request: Comments", "user": {"login": "hunyadix", "id": 8447503, "node_id": "MDQ6VXNlcjg0NDc1MDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/8447503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hunyadix", "html_url": "https://github.com/hunyadix", "followers_url": "https://api.github.com/users/hunyadix/followers", "following_url": "https://api.github.com/users/hunyadix/following{/other_user}", "gists_url": "https://api.github.com/users/hunyadix/gists{/gist_id}", "starred_url": "https://api.github.com/users/hunyadix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hunyadix/subscriptions", "organizations_url": "https://api.github.com/users/hunyadix/orgs", "repos_url": "https://api.github.com/users/hunyadix/repos", "events_url": "https://api.github.com/users/hunyadix/events{/privacy}", "received_events_url": "https://api.github.com/users/hunyadix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-30T08:40:03Z", "updated_at": "2018-01-04T17:16:11Z", "closed_at": "2017-05-30T08:59:16Z", "author_association": "NONE", "body": "Many JSON parsers support the option to comment out fields. Is it possible to request such a feature in the nlohmann parser too?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/596", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/596/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/596/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/596/events", "html_url": "https://github.com/nlohmann/json/issues/596", "id": 231893154, "node_id": "MDU6SXNzdWUyMzE4OTMxNTQ=", "number": 596, "title": "Using custom types for scalars?", "user": {"login": "kyku", "id": 1067973, "node_id": "MDQ6VXNlcjEwNjc5NzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1067973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyku", "html_url": "https://github.com/kyku", "followers_url": "https://api.github.com/users/kyku/followers", "following_url": "https://api.github.com/users/kyku/following{/other_user}", "gists_url": "https://api.github.com/users/kyku/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyku/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyku/subscriptions", "organizations_url": "https://api.github.com/users/kyku/orgs", "repos_url": "https://api.github.com/users/kyku/repos", "events_url": "https://api.github.com/users/kyku/events{/privacy}", "received_events_url": "https://api.github.com/users/kyku/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-28T20:44:25Z", "updated_at": "2017-07-08T14:05:05Z", "closed_at": "2017-07-08T14:05:05Z", "author_association": "NONE", "body": "I'm serializing some decimal values from database into JSON. In order not to risk loosing precision of database data, I've implemented a C++ class for storing values in fixed decimal form. I'm trying to pass my class as NumberFloatType template parameter to basic_json but it looks like parsing of floating point values is hard coded in lexer::strtof overloads. Are there any \"customization points\" which could be used to support deserialization of strings into custom basic types like NumberFloatType?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/593", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/593/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/593/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/593/events", "html_url": "https://github.com/nlohmann/json/issues/593", "id": 231669019, "node_id": "MDU6SXNzdWUyMzE2NjkwMTk=", "number": 593, "title": "Issues with the arithmetic in iterator and reverse iterator", "user": {"login": "HenryRLee", "id": 4635853, "node_id": "MDQ6VXNlcjQ2MzU4NTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4635853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HenryRLee", "html_url": "https://github.com/HenryRLee", "followers_url": "https://api.github.com/users/HenryRLee/followers", "following_url": "https://api.github.com/users/HenryRLee/following{/other_user}", "gists_url": "https://api.github.com/users/HenryRLee/gists{/gist_id}", "starred_url": "https://api.github.com/users/HenryRLee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HenryRLee/subscriptions", "organizations_url": "https://api.github.com/users/HenryRLee/orgs", "repos_url": "https://api.github.com/users/HenryRLee/repos", "events_url": "https://api.github.com/users/HenryRLee/events{/privacy}", "received_events_url": "https://api.github.com/users/HenryRLee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 45, "created_at": "2017-05-26T16:04:06Z", "updated_at": "2017-10-28T10:33:34Z", "closed_at": "2017-10-28T10:33:34Z", "author_association": "CONTRIBUTOR", "body": "Hi, I just found that the iterator class hasn't override the `n + iterator` operator, which is a requirement in the [random access iterator](http://en.cppreference.com/w/cpp/concept/RandomAccessIterator) type.\r\n\r\nMore specifically, this operator is missing:\r\n```cpp\r\noperator+(difference_type, const iter_impl&);\r\n```\r\n\r\nThe failing code is:\r\n```cpp\r\njson j_object\r\nauto it = j_object.cbegin();\r\n1 + it; // error\r\n```\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/592", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/592/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/592/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/592/events", "html_url": "https://github.com/nlohmann/json/issues/592", "id": 230859247, "node_id": "MDU6SXNzdWUyMzA4NTkyNDc=", "number": 592, "title": "not enough examples", "user": {"login": "kenkit", "id": 1732471, "node_id": "MDQ6VXNlcjE3MzI0NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1732471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kenkit", "html_url": "https://github.com/kenkit", "followers_url": "https://api.github.com/users/kenkit/followers", "following_url": "https://api.github.com/users/kenkit/following{/other_user}", "gists_url": "https://api.github.com/users/kenkit/gists{/gist_id}", "starred_url": "https://api.github.com/users/kenkit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kenkit/subscriptions", "organizations_url": "https://api.github.com/users/kenkit/orgs", "repos_url": "https://api.github.com/users/kenkit/repos", "events_url": "https://api.github.com/users/kenkit/events{/privacy}", "received_events_url": "https://api.github.com/users/kenkit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2017-05-23T21:58:13Z", "updated_at": "2017-05-24T19:24:26Z", "closed_at": "2017-05-24T14:38:50Z", "author_association": "NONE", "body": "This is so far the ~~greatest c++ json library~~, nice work.\r\nHowever we don't have enough examples, I can't figure how to extract data from this simple string, I tried using the `.at()` but without success, please help with a working example.\r\n`[\"new message\",{\"username\":\"Someone\",\"message\":\"Hi\"}]`\r\nalso lets assume we have another like this\r\n`11 [\"new message\",{\"username\":\"Someone\",\"message\":\"Hi\"}]`\r\nhow would I parse such a string ?\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/591", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/591/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/591/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/591/events", "html_url": "https://github.com/nlohmann/json/issues/591", "id": 230458394, "node_id": "MDU6SXNzdWUyMzA0NTgzOTQ=", "number": 591, "title": "in-class initialization for type 'const T' is not yet implemented", "user": {"login": "chainke", "id": 6562279, "node_id": "MDQ6VXNlcjY1NjIyNzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6562279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chainke", "html_url": "https://github.com/chainke", "followers_url": "https://api.github.com/users/chainke/followers", "following_url": "https://api.github.com/users/chainke/following{/other_user}", "gists_url": "https://api.github.com/users/chainke/gists{/gist_id}", "starred_url": "https://api.github.com/users/chainke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chainke/subscriptions", "organizations_url": "https://api.github.com/users/chainke/orgs", "repos_url": "https://api.github.com/users/chainke/repos", "events_url": "https://api.github.com/users/chainke/events{/privacy}", "received_events_url": "https://api.github.com/users/chainke/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}, {"id": 304694104, "node_id": "MDU6TGFiZWwzMDQ2OTQxMDQ=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20please%20discuss", "name": "state: please discuss", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-05-22T16:58:11Z", "updated_at": "2017-07-12T14:18:35Z", "closed_at": "2017-07-12T14:18:35Z", "author_association": "NONE", "body": "Hey there,\r\nI have a problem when compiling a project using json.hpp.\r\nWhen I use Microsoft Visual Studio 2015 Update 3 on Windows7 everything worsk fine, but when I use Mircosoft Visual Studio 2017 on Windows 10, I get the following error:\r\n\r\n\r\n\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(887): error C4579: 'nlohmann::detail::static_const<nlohmann::detail::to_json_fn>::value': in-class initialization for type 'const T' is not yet implemented; static member will remain uninitialized at runtime but use in constant-expressions is supported\r\n2>        with\r\n2>        [\r\n2>            T=nlohmann::detail::to_json_fn\r\n2>        ]\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(898): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template \"nlohmann::detail::static_const<nlohmann::detail::to_json_fn>\".\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(887): error C2131: Ausdruck wurde nicht zu einer Konstanten ausgewertet.\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(887): note: Fehler wurde durch R\u00fcckgabe der Adresse eines tempor\u00e4ren Elements oder eines Verweises zu einem tempor\u00e4ren Element verursacht\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(887): error C2059: Syntaxfehler: \"=\"\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(887): error C4579: 'nlohmann::detail::static_const<nlohmann::detail::from_json_fn>::value': in-class initialization for type 'const T' is not yet implemented; static member will remain uninitialized at runtime but use in constant-expressions is supported\r\n2>        with\r\n2>        [\r\n2>            T=nlohmann::detail::from_json_fn\r\n2>        ]\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(899): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template \"nlohmann::detail::static_const<nlohmann::detail::from_json_fn>\".\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(6482): error C2784: \"_Ty *std::begin(_Ty (&)[_Size]) noexcept\": template-Argument f\u00fcr \"_Ty (&)[_Size]\" konnte nicht von \"add_rvalue_reference<const ContiguousContainer>::type\" hergeleitet werden.\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\INCLUDE\\xutility(1250): note: Siehe Deklaration von \"std::begin\"\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\INCLUDE\\type_traits(761): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template \"nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>\".\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\INCLUDE\\type_traits(790): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template \"std::is_nothrow_constructible<_Ty,nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer> &&>\".\r\n2>        with\r\n2>        [\r\n2>            _Ty=nlohmann::json\r\n2>        ]\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(12931): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template \"std::is_nothrow_move_constructible<nlohmann::json>\".\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(6482): error C2893: Funktionsvorlage \"unknown-type std::begin(const _Container &)\" konnte nicht spezialisiert werden\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(6482): note: Mit den folgenden Vorlagenargumenten:\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(6482): note: \"_Container=add_rvalue_reference<const ContiguousContainer>::type\"\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(6482): error C2893: Funktionsvorlage \"unknown-type std::begin(_Container &)\" konnte nicht spezialisiert werden\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(6482): note: Mit den folgenden Vorlagenargumenten:\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(6482): note: \"_Container=add_rvalue_reference<const ContiguousContainer>::type\"\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(6482): error C2784: \"const _Elem *std::begin(std::initializer_list<_Elem>) noexcept\": template-Argument f\u00fcr \"std::initializer_list<_Elem>\" konnte nicht von \"add_rvalue_reference<const ContiguousContainer>::type\" hergeleitet werden.\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\INCLUDE\\initializer_list(60): note: Siehe Deklaration von \"std::begin\"\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\Source\\EyeTrackingPlugin\\Private\\MultipartMessage.cpp(46): warning C4456: Deklaration von \"msg\" blendet vorherige lokale Deklaration aus\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\Source\\EyeTrackingPlugin\\Private\\MultipartMessage.cpp(23): note: Siehe Deklaration von \"msg\"\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(887): error C4579: 'nlohmann::detail::static_const<nlohmann::detail::to_json_fn>::value': in-class initialization for type 'const T' is not yet implemented; static member will remain uninitialized at runtime but use in constant-expressions is supported\r\n2>        with\r\n2>        [\r\n2>            T=nlohmann::detail::to_json_fn\r\n2>        ]\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(898): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template \"nlohmann::detail::static_const<nlohmann::detail::to_json_fn>\".\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(887): error C2131: Ausdruck wurde nicht zu einer Konstanten ausgewertet.\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(887): note: Fehler wurde durch R\u00fcckgabe der Adresse eines tempor\u00e4ren Elements oder eines Verweises zu einem tempor\u00e4ren Element verursacht\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(887): error C2059: Syntaxfehler: \"=\"\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(887): error C4579: 'nlohmann::detail::static_const<nlohmann::detail::from_json_fn>::value': in-class initialization for type 'const T' is not yet implemented; static member will remain uninitialized at runtime but use in constant-expressions is supported\r\n2>        with\r\n2>        [\r\n2>            T=nlohmann::detail::from_json_fn\r\n2>        ]\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(899): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template \"nlohmann::detail::static_const<nlohmann::detail::from_json_fn>\".\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(6482): error C2784: \"_Ty *std::begin(_Ty (&)[_Size]) noexcept\": template-Argument f\u00fcr \"_Ty (&)[_Size]\" konnte nicht von \"add_rvalue_reference<const ContiguousContainer>::type\" hergeleitet werden.\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\INCLUDE\\xutility(1250): note: Siehe Deklaration von \"std::begin\"\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\INCLUDE\\type_traits(761): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template \"nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>\".\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\INCLUDE\\type_traits(790): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template \"std::is_nothrow_constructible<_Ty,nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer> &&>\".\r\n2>        with\r\n2>        [\r\n2>            _Ty=nlohmann::json\r\n2>        ]\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(12931): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template \"std::is_nothrow_move_constructible<nlohmann::json>\".\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(6482): error C2893: Funktionsvorlage \"unknown-type std::begin(const _Container &)\" konnte nicht spezialisiert werden\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(6482): note: Mit den folgenden Vorlagenargumenten:\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(6482): note: \"_Container=add_rvalue_reference<const ContiguousContainer>::type\"\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(6482): error C2893: Funktionsvorlage \"unknown-type std::begin(_Container &)\" konnte nicht spezialisiert werden\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(6482): note: Mit den folgenden Vorlagenargumenten:\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(6482): note: \"_Container=add_rvalue_reference<const ContiguousContainer>::type\"\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(6482): error C2784: \"const _Elem *std::begin(std::initializer_list<_Elem>) noexcept\": template-Argument f\u00fcr \"std::initializer_list<_Elem>\" konnte nicht von \"add_rvalue_reference<const ContiguousContainer>::type\" hergeleitet werden.\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\INCLUDE\\initializer_list(60): note: Siehe Deklaration von \"std::begin\"\r\n\r\n\r\nIs either Visual Studio 2017 or Windows 10 not supported yet?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/590", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/590/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/590/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/590/events", "html_url": "https://github.com/nlohmann/json/issues/590", "id": 230211184, "node_id": "MDU6SXNzdWUyMzAyMTExODQ=", "number": 590, "title": "compiling with gcc 7 -> error on bool operator <", "user": {"login": "buffos", "id": 9776567, "node_id": "MDQ6VXNlcjk3NzY1Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/9776567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/buffos", "html_url": "https://github.com/buffos", "followers_url": "https://api.github.com/users/buffos/followers", "following_url": "https://api.github.com/users/buffos/following{/other_user}", "gists_url": "https://api.github.com/users/buffos/gists{/gist_id}", "starred_url": "https://api.github.com/users/buffos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/buffos/subscriptions", "organizations_url": "https://api.github.com/users/buffos/orgs", "repos_url": "https://api.github.com/users/buffos/repos", "events_url": "https://api.github.com/users/buffos/events{/privacy}", "received_events_url": "https://api.github.com/users/buffos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 19, "created_at": "2017-05-21T10:22:11Z", "updated_at": "2017-06-06T07:33:04Z", "closed_at": "2017-06-06T07:33:04Z", "author_association": "NONE", "body": "when compiling i get\r\n\r\n`json.hpp:6395:66: error: wrong number of template arguments (1, should be 2)\r\n                         return *lhs.m_value.array < *rhs.m_value.array;`\r\n\r\n and\r\n\r\n`/usr/include/c++/7/array:94:12: note: provided for \u2018template<class _Tp, long unsigned int _Nm> struct std::array\u2019\r\n     struct array\r\n`\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/589", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/589/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/589/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/589/events", "html_url": "https://github.com/nlohmann/json/issues/589", "id": 229911532, "node_id": "MDU6SXNzdWUyMjk5MTE1MzI=", "number": 589, "title": "Parsing from stream leads to an array", "user": {"login": "matsbror", "id": 10210145, "node_id": "MDQ6VXNlcjEwMjEwMTQ1", "avatar_url": "https://avatars3.githubusercontent.com/u/10210145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matsbror", "html_url": "https://github.com/matsbror", "followers_url": "https://api.github.com/users/matsbror/followers", "following_url": "https://api.github.com/users/matsbror/following{/other_user}", "gists_url": "https://api.github.com/users/matsbror/gists{/gist_id}", "starred_url": "https://api.github.com/users/matsbror/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matsbror/subscriptions", "organizations_url": "https://api.github.com/users/matsbror/orgs", "repos_url": "https://api.github.com/users/matsbror/repos", "events_url": "https://api.github.com/users/matsbror/events{/privacy}", "received_events_url": "https://api.github.com/users/matsbror/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-05-19T08:55:23Z", "updated_at": "2017-05-19T09:21:10Z", "closed_at": "2017-05-19T09:20:11Z", "author_association": "NONE", "body": "Hello,\r\n\r\nI parse the following file from a stream:\r\n```js\r\n{\r\n  \"anInt\": 500,\r\n  \"aString\": \"fixed\"\r\n}\r\n```\r\n\r\nThen I send it to an output stream with dump(4), which yields the following output:\r\n```js\r\n[\r\n    {\r\n        \"aString\": \"fixed\",\r\n        \"anInt\": 500\r\n    }\r\n]\r\n```\r\n\r\nIt has become embedded in an array. Do you know why and how can I get around it? \r\nIf it is consistent, I can of course deal with it as it is.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/587", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/587/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/587/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/587/events", "html_url": "https://github.com/nlohmann/json/issues/587", "id": 229083166, "node_id": "MDU6SXNzdWUyMjkwODMxNjY=", "number": 587, "title": "Buggy support for binary string data", "user": {"login": "zvrba", "id": 630366, "node_id": "MDQ6VXNlcjYzMDM2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/630366?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zvrba", "html_url": "https://github.com/zvrba", "followers_url": "https://api.github.com/users/zvrba/followers", "following_url": "https://api.github.com/users/zvrba/following{/other_user}", "gists_url": "https://api.github.com/users/zvrba/gists{/gist_id}", "starred_url": "https://api.github.com/users/zvrba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zvrba/subscriptions", "organizations_url": "https://api.github.com/users/zvrba/orgs", "repos_url": "https://api.github.com/users/zvrba/repos", "events_url": "https://api.github.com/users/zvrba/events{/privacy}", "received_events_url": "https://api.github.com/users/zvrba/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2017-05-16T15:53:51Z", "updated_at": "2017-05-19T19:22:46Z", "closed_at": "2017-05-19T16:44:42Z", "author_association": "NONE", "body": "I wanted to check whether I could use this library to store binary data w/o prior encoding to base64. Therefore I wrote the following simple function\r\n```cpp\r\nstatic void TestBinDump()\r\n{\r\n    const char* data = \"A\\x13\"\"B\\x8B\\0C\";\r\n    std::string s(data, data + 6);\r\n    \r\n    json js;\r\n    js[\"key\"] = s;\r\n\r\n    auto dump = js.dump(4);\r\n    std::cout << s.size() << \" \" << dump << std::endl;\r\n\r\n    auto jd = json::parse(dump.begin(), dump.end());\r\n    std::string v = jd.at(\"key\");\r\n    std::cout << v.size();\r\n}\r\n```\r\nThis correctly outputs `6 { \"key\": \"A\\u0013B\u00ef\\u0000C\" }`. The first surprise is that byte data has been encoded to 16-bit Unicode, so I wanted to see whether \"8-bit\" Unicode characters would get translated back to 8-bit values. I didn't get so far because parsing threw `invalid_argument` exception with message `\"parse error - unexpected '\\\"'\"`.\r\n\r\nI'm using version 2.1.1."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/586", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/586/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/586/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/586/events", "html_url": "https://github.com/nlohmann/json/issues/586", "id": 228930116, "node_id": "MDU6SXNzdWUyMjg5MzAxMTY=", "number": 586, "title": "C++17's ambiguous conversion", "user": {"login": "Krysme", "id": 11013684, "node_id": "MDQ6VXNlcjExMDEzNjg0", "avatar_url": "https://avatars0.githubusercontent.com/u/11013684?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Krysme", "html_url": "https://github.com/Krysme", "followers_url": "https://api.github.com/users/Krysme/followers", "following_url": "https://api.github.com/users/Krysme/following{/other_user}", "gists_url": "https://api.github.com/users/Krysme/gists{/gist_id}", "starred_url": "https://api.github.com/users/Krysme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Krysme/subscriptions", "organizations_url": "https://api.github.com/users/Krysme/orgs", "repos_url": "https://api.github.com/users/Krysme/repos", "events_url": "https://api.github.com/users/Krysme/events{/privacy}", "received_events_url": "https://api.github.com/users/Krysme/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 6, "created_at": "2017-05-16T06:43:21Z", "updated_at": "2017-05-20T09:42:09Z", "closed_at": "2017-05-20T09:42:09Z", "author_association": "NONE", "body": "In c++ 17, std::string_view can be converted to std::string implicitly which leads to a problem that in c++17 mode , a json object cannot be assigned to a string due to ambiguous assigning conversion path ( json --> string and json --> string_view --> string).\r\n\r\nIn gcc 7.1 such code produces a compilation error width -std=c++1z.\r\n\r\ncode:\r\n\r\n```cpp\r\n#include \"json.hpp\"\r\n#include <string>\r\n\r\n\r\nint main()\r\n{\r\n\r\n    nlohmann::json j;\r\n    j = \"12345\";\r\n    std::string s;\r\n    s = j;\r\n\r\n    return 0;\r\n}\r\n\r\n```\r\n\r\nSo, is it possible to remove the conversion to string specifically in c++17 mode to let the compiler select the json--> string_view --> string path ?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/585", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/585/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/585/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/585/events", "html_url": "https://github.com/nlohmann/json/issues/585", "id": 228657618, "node_id": "MDU6SXNzdWUyMjg2NTc2MTg=", "number": 585, "title": "How does the messagepack encoding/decoding compare to msgpack-cpp in terms of performance?", "user": {"login": "sztomi", "id": 240594, "node_id": "MDQ6VXNlcjI0MDU5NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/240594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sztomi", "html_url": "https://github.com/sztomi", "followers_url": "https://api.github.com/users/sztomi/followers", "following_url": "https://api.github.com/users/sztomi/following{/other_user}", "gists_url": "https://api.github.com/users/sztomi/gists{/gist_id}", "starred_url": "https://api.github.com/users/sztomi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sztomi/subscriptions", "organizations_url": "https://api.github.com/users/sztomi/orgs", "repos_url": "https://api.github.com/users/sztomi/repos", "events_url": "https://api.github.com/users/sztomi/events{/privacy}", "received_events_url": "https://api.github.com/users/sztomi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 571470316, "node_id": "MDU6TGFiZWw1NzE0NzAzMTY=", "url": "https://api.github.com/repos/nlohmann/json/labels/aspect:%20binary%20formats", "name": "aspect: binary formats", "color": "5319e7", "default": false}, {"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2017-05-15T09:34:14Z", "updated_at": "2017-08-15T18:52:10Z", "closed_at": "2017-08-15T18:52:10Z", "author_association": "NONE", "body": ""}, {"url": "https://api.github.com/repos/nlohmann/json/issues/584", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/584/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/584/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/584/events", "html_url": "https://github.com/nlohmann/json/issues/584", "id": 228589377, "node_id": "MDU6SXNzdWUyMjg1ODkzNzc=", "number": 584, "title": "is it possible to check existence of a value deep in hierarchy?", "user": {"login": "crusader-mike", "id": 22357016, "node_id": "MDQ6VXNlcjIyMzU3MDE2", "avatar_url": "https://avatars2.githubusercontent.com/u/22357016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crusader-mike", "html_url": "https://github.com/crusader-mike", "followers_url": "https://api.github.com/users/crusader-mike/followers", "following_url": "https://api.github.com/users/crusader-mike/following{/other_user}", "gists_url": "https://api.github.com/users/crusader-mike/gists{/gist_id}", "starred_url": "https://api.github.com/users/crusader-mike/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crusader-mike/subscriptions", "organizations_url": "https://api.github.com/users/crusader-mike/orgs", "repos_url": "https://api.github.com/users/crusader-mike/repos", "events_url": "https://api.github.com/users/crusader-mike/events{/privacy}", "received_events_url": "https://api.github.com/users/crusader-mike/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-05-15T02:04:54Z", "updated_at": "2017-05-21T19:06:09Z", "closed_at": "2017-05-15T06:09:28Z", "author_association": "NONE", "body": "Smth like this:\r\n```\r\njson j = ...;\r\nif (j.find(\"/this/that/then\"_json_pointer) != j.end()) ...;\r\n```\r\n\r\nI can use `j.value(ptr, def_value)`, but then I can't tell if node actually existed. I can use `j.at(...)` -- but I don't want to deal with exceptions.\r\n\r\nEdit: `j.value()` approach doesn't seem to work either..."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/582", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/582/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/582/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/582/events", "html_url": "https://github.com/nlohmann/json/issues/582", "id": 228440950, "node_id": "MDU6SXNzdWUyMjg0NDA5NTA=", "number": 582, "title": "loading from a stream and exceptions", "user": {"login": "user1095108", "id": 8299348, "node_id": "MDQ6VXNlcjgyOTkzNDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8299348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/user1095108", "html_url": "https://github.com/user1095108", "followers_url": "https://api.github.com/users/user1095108/followers", "following_url": "https://api.github.com/users/user1095108/following{/other_user}", "gists_url": "https://api.github.com/users/user1095108/gists{/gist_id}", "starred_url": "https://api.github.com/users/user1095108/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/user1095108/subscriptions", "organizations_url": "https://api.github.com/users/user1095108/orgs", "repos_url": "https://api.github.com/users/user1095108/repos", "events_url": "https://api.github.com/users/user1095108/events{/privacy}", "received_events_url": "https://api.github.com/users/user1095108/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}, {"id": 304694104, "node_id": "MDU6TGFiZWwzMDQ2OTQxMDQ=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20please%20discuss", "name": "state: please discuss", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 35, "created_at": "2017-05-13T01:42:12Z", "updated_at": "2017-08-15T19:02:42Z", "closed_at": "2017-08-15T18:53:46Z", "author_association": "NONE", "body": "There are 2 possible scenarios when loading from a stream:\r\n\r\n- there might be an error while loading from the stream (bad sector),\r\n- the stream might contain nothing (zero size file),\r\n- the json the stream contains might be invalid.\r\n\r\nI suppose the library will throw meaningful exceptions if those are enabled, but if disabled, it will abort. There should exist an alternative way to report an error (such as returning an empty json object, for example), without crashing an application."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/581", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/581/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/581/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/581/events", "html_url": "https://github.com/nlohmann/json/issues/581", "id": 227998760, "node_id": "MDU6SXNzdWUyMjc5OTg3NjA=", "number": 581, "title": "Visual Studio seems not to have all min() function versions", "user": {"login": "j-k", "id": 5577898, "node_id": "MDQ6VXNlcjU1Nzc4OTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5577898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j-k", "html_url": "https://github.com/j-k", "followers_url": "https://api.github.com/users/j-k/followers", "following_url": "https://api.github.com/users/j-k/following{/other_user}", "gists_url": "https://api.github.com/users/j-k/gists{/gist_id}", "starred_url": "https://api.github.com/users/j-k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j-k/subscriptions", "organizations_url": "https://api.github.com/users/j-k/orgs", "repos_url": "https://api.github.com/users/j-k/repos", "events_url": "https://api.github.com/users/j-k/events{/privacy}", "received_events_url": "https://api.github.com/users/j-k/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 17, "created_at": "2017-05-11T13:51:55Z", "updated_at": "2017-06-05T09:42:27Z", "closed_at": "2017-05-31T19:11:02Z", "author_association": "NONE", "body": "Needed to change the line 8972 if the current version to:\r\n`std::string(start + offset, min(length, max_length - offset));`\r\nin order to make it compile"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/580", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/580/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/580/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/580/events", "html_url": "https://github.com/nlohmann/json/issues/580", "id": 227801094, "node_id": "MDU6SXNzdWUyMjc4MDEwOTQ=", "number": 580, "title": "Supporting of the json schema", "user": {"login": "AGaliuzov", "id": 11158516, "node_id": "MDQ6VXNlcjExMTU4NTE2", "avatar_url": "https://avatars1.githubusercontent.com/u/11158516?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AGaliuzov", "html_url": "https://github.com/AGaliuzov", "followers_url": "https://api.github.com/users/AGaliuzov/followers", "following_url": "https://api.github.com/users/AGaliuzov/following{/other_user}", "gists_url": "https://api.github.com/users/AGaliuzov/gists{/gist_id}", "starred_url": "https://api.github.com/users/AGaliuzov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AGaliuzov/subscriptions", "organizations_url": "https://api.github.com/users/AGaliuzov/orgs", "repos_url": "https://api.github.com/users/AGaliuzov/repos", "events_url": "https://api.github.com/users/AGaliuzov/events{/privacy}", "received_events_url": "https://api.github.com/users/AGaliuzov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-10T20:29:44Z", "updated_at": "2017-05-11T08:12:17Z", "closed_at": "2017-05-11T08:12:17Z", "author_association": "NONE", "body": "@nlohmann I have tried to find in documentation and in code if this library supports json schema and failed. Could you please tell if there are any plans to add schema validation to this library?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/577", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/577/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/577/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/577/events", "html_url": "https://github.com/nlohmann/json/issues/577", "id": 227389202, "node_id": "MDU6SXNzdWUyMjczODkyMDI=", "number": 577, "title": "Stack-overflow (OSS-Fuzz 1444)", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-09T14:39:01Z", "updated_at": "2017-06-04T16:49:28Z", "closed_at": "2017-06-04T16:49:28Z", "author_association": "OWNER", "body": "```\r\nDetailed report: https://oss-fuzz.com/testcase?key=6168426957504512\r\n\r\nProject: json\r\nFuzzer: libFuzzer_json_parse_afl_fuzzer\r\nJob Type: libfuzzer_asan_json\r\nPlatform Id: linux\r\n\r\nCrash Type: Stack-overflow\r\nCrash Address: 0x7ffd2de7bd88\r\nCrash State:\r\n  nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<cha\r\n  \r\nSanitizer: address (ASAN)\r\n\r\nRegressed: https://oss-fuzz.com/revisions?job=libfuzzer_asan_json&range=201705051619:201705061619\r\n\r\nReproducer Testcase: https://oss-fuzz.com/download?testcase_id=6168426957504512\r\n\r\n\r\nIssue filed automatically.\r\n\r\nSee https://github.com/google/oss-fuzz/blob/master/docs/reproducing.md for more information.\r\n\r\nThis bug is subject to a 90 day disclosure deadline. If 90 days elapse\r\nwithout an upstream patch, then the bug report will automatically\r\nbecome visible to the public.\r\n```\r\n\r\n[clusterfuzz-testcase-minimized-6168426957504512.zip](https://github.com/nlohmann/json/files/986988/clusterfuzz-testcase-minimized-6168426957504512.zip)\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/575", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/575/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/575/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/575/events", "html_url": "https://github.com/nlohmann/json/issues/575", "id": 226839095, "node_id": "MDU6SXNzdWUyMjY4MzkwOTU=", "number": 575, "title": "Heap-buffer-overflow (OSS-Fuzz 1400)", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 3, "created_at": "2017-05-07T08:15:27Z", "updated_at": "2017-05-08T08:58:07Z", "closed_at": "2017-05-08T08:58:07Z", "author_association": "OWNER", "body": "```\r\nDetailed report: https://oss-fuzz.com/testcase?key=4618963768049664\r\n\r\nProject: json\r\nFuzzer: afl_json_parse_afl_fuzzer\r\nFuzz target binary: parse_afl_fuzzer\r\nJob Type: afl_asan_json\r\nPlatform Id: linux\r\n\r\nCrash Type: Heap-buffer-overflow READ 2\r\nCrash Address: 0x6020000000b2\r\nCrash State:\r\nstd::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<ch\r\nnlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<cha\r\nnlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<cha\r\n\r\nSanitizer: address (ASAN)\r\n\r\nRecommended Security Severity: Medium\r\n\r\nRegressed: https://oss-fuzz.com/revisions?job=afl_asan_json&range=201705051619:201705061619\r\n\r\nReproducer Testcase: https://oss-fuzz.com/download?testcase_id=4618963768049664\r\n\r\n\r\nIssue filed automatically.\r\n\r\nSee https://github.com/google/oss-fuzz/blob/master/docs/reproducing.md for more information.\r\n\r\nThis bug is subject to a 90 day disclosure deadline. If 90 days elapse\r\nwithout an upstream patch, then the bug report will automatically\r\nbecome visible to the public.\r\n```\r\n\r\n[inputs.zip](https://github.com/nlohmann/json/files/981399/inputs.zip)\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/574", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/574/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/574/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/574/events", "html_url": "https://github.com/nlohmann/json/issues/574", "id": 226518193, "node_id": "MDU6SXNzdWUyMjY1MTgxOTM=", "number": 574, "title": "JSON escape quotes", "user": {"login": "goutfeb", "id": 9438444, "node_id": "MDQ6VXNlcjk0Mzg0NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/9438444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goutfeb", "html_url": "https://github.com/goutfeb", "followers_url": "https://api.github.com/users/goutfeb/followers", "following_url": "https://api.github.com/users/goutfeb/following{/other_user}", "gists_url": "https://api.github.com/users/goutfeb/gists{/gist_id}", "starred_url": "https://api.github.com/users/goutfeb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goutfeb/subscriptions", "organizations_url": "https://api.github.com/users/goutfeb/orgs", "repos_url": "https://api.github.com/users/goutfeb/repos", "events_url": "https://api.github.com/users/goutfeb/events{/privacy}", "received_events_url": "https://api.github.com/users/goutfeb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-05T09:25:21Z", "updated_at": "2017-05-05T14:36:44Z", "closed_at": "2017-05-05T14:36:44Z", "author_association": "NONE", "body": "Hi,\r\n\r\nI'm getting JSON from PHP server with curl and I save it to a std::string variable.\r\nSo :\r\n`std::cout << input;`\r\n`// {\"error\":\"params problem\",\"vector\":\"A5+myu8a5QW7Gk98mWws7A==\"}`\r\n\r\nI'd like to deserialize this into a JSON object by doing : \r\n`json decodedJson(input)`\r\nBut here when I make a print of input.dump(4) I'm getting just an escaped string of input.\r\n\r\nSo I tried a different way :\r\n`json decodedJson = json::parse(readBuffer);`\r\nAnd here I have this following error :\r\n`libc++abi.dylib: terminating with uncaught exception of type nlohmann::detail::parse_error: [json.exception.parse_error.101] parse error at 1: parse error - unexpected '?'`\r\n\r\nIs it normal ?\r\nThanks"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/573", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/573/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/573/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/573/events", "html_url": "https://github.com/nlohmann/json/issues/573", "id": 226313282, "node_id": "MDU6SXNzdWUyMjYzMTMyODI=", "number": 573, "title": "error: static_assert failed", "user": {"login": "SpilledMango", "id": 18580615, "node_id": "MDQ6VXNlcjE4NTgwNjE1", "avatar_url": "https://avatars1.githubusercontent.com/u/18580615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SpilledMango", "html_url": "https://github.com/SpilledMango", "followers_url": "https://api.github.com/users/SpilledMango/followers", "following_url": "https://api.github.com/users/SpilledMango/following{/other_user}", "gists_url": "https://api.github.com/users/SpilledMango/gists{/gist_id}", "starred_url": "https://api.github.com/users/SpilledMango/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SpilledMango/subscriptions", "organizations_url": "https://api.github.com/users/SpilledMango/orgs", "repos_url": "https://api.github.com/users/SpilledMango/repos", "events_url": "https://api.github.com/users/SpilledMango/events{/privacy}", "received_events_url": "https://api.github.com/users/SpilledMango/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-04T15:09:33Z", "updated_at": "2017-05-05T17:29:45Z", "closed_at": "2017-05-05T17:29:45Z", "author_association": "NONE", "body": "I got this error when I built my application.\r\n```\r\n/json.hpp:843:9: error: static_assert failed \"could not find to_json() method       in T's namespace\"         static_assert(sizeof(BasicJsonType) == 0\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/572", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/572/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/572/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/572/events", "html_url": "https://github.com/nlohmann/json/issues/572", "id": 225497477, "node_id": "MDU6SXNzdWUyMjU0OTc0Nzc=", "number": 572, "title": "Storing floats, and round trip serialisation/deserialisation diffs", "user": {"login": "cesaref", "id": 10152207, "node_id": "MDQ6VXNlcjEwMTUyMjA3", "avatar_url": "https://avatars2.githubusercontent.com/u/10152207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cesaref", "html_url": "https://github.com/cesaref", "followers_url": "https://api.github.com/users/cesaref/followers", "following_url": "https://api.github.com/users/cesaref/following{/other_user}", "gists_url": "https://api.github.com/users/cesaref/gists{/gist_id}", "starred_url": "https://api.github.com/users/cesaref/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cesaref/subscriptions", "organizations_url": "https://api.github.com/users/cesaref/orgs", "repos_url": "https://api.github.com/users/cesaref/repos", "events_url": "https://api.github.com/users/cesaref/events{/privacy}", "received_events_url": "https://api.github.com/users/cesaref/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-01T18:55:15Z", "updated_at": "2017-05-05T14:37:15Z", "closed_at": "2017-05-05T14:37:15Z", "author_association": "NONE", "body": "I'm interested in knowing what the best advice is for representing floats in json format - as far as I am aware, the spec includes double support, but not floats.\r\n\r\nIf I add a float value to a json container, and serialise it, the result gets extended to double, and hence the serialised representation is not what you would expect if floats were supported directly, but the API makes them look like they are a 1st class datatype, so we see stuff like this:\r\n\r\n    nlohmann::json test;\r\n\r\n    test[\"float_value\"] = 0.1f;\r\n    test[\"double_value\"] = 0.1;\r\n\r\n    std::ostringstream oss;\r\n\r\n    oss << test;\r\n\r\n    ASSERT_EQ(oss.str(), \"{\\\"double_value\\\":0.1,\\\"float_value\\\":0.100000001490116}\");\r\n\r\nThe reason this causes me issues is that I want to round trip some configuration - read floats parameters from json files, and test that if I were to serialise them, I get out what went in. I could carefully convert my floats to doubles myself, rather than relying on the assignment operator (and hence pass in only doubles which will be serialised correctly), but i'm wondering if there is a different/better way of achieving this?"}]