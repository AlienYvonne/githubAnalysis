[{"url": "https://api.github.com/repos/nlohmann/json/issues/642", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/642/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/642/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/642/events", "html_url": "https://github.com/nlohmann/json/issues/642", "id": 239409539, "node_id": "MDU6SXNzdWUyMzk0MDk1Mzk=", "number": 642, "title": "Method to get string representations of values", "user": {"login": "skaupper", "id": 1375320, "node_id": "MDQ6VXNlcjEzNzUzMjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1375320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skaupper", "html_url": "https://github.com/skaupper", "followers_url": "https://api.github.com/users/skaupper/followers", "following_url": "https://api.github.com/users/skaupper/following{/other_user}", "gists_url": "https://api.github.com/users/skaupper/gists{/gist_id}", "starred_url": "https://api.github.com/users/skaupper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skaupper/subscriptions", "organizations_url": "https://api.github.com/users/skaupper/orgs", "repos_url": "https://api.github.com/users/skaupper/repos", "events_url": "https://api.github.com/users/skaupper/events{/privacy}", "received_events_url": "https://api.github.com/users/skaupper/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-06-29T08:57:11Z", "updated_at": "2017-07-08T06:20:28Z", "closed_at": "2017-07-08T06:20:28Z", "author_association": "NONE", "body": "I've come across occasions where I needed to \"stringify\" a single value. \r\nI know that there is `dump()` to serialize the whole object but it doesn't work as I would expected it (string values are enclosed in double quotes). Actually I know `dump()` is not meant for representing a single value as string that's why I want to suggest to add a method responsible for converting the value to a string.\r\n\r\nMy own implementation that I'm currently using looks like following:\r\n```c++\r\ninline std::string to_string(const json &j)\r\n{\r\n    auto tmp = j.dump();\r\n    \r\n    if (j.type() == json::value_t::string) {\r\n        return tmp.substr(1, tmp.size() - 2);\r\n    } else {\r\n        return tmp;\r\n    }\r\n}\r\n```\r\n\r\nSo, basically I want code like this to work.\r\n```c++\r\n    json j = \"{\\\"field\\\": 1234}\"_json;\r\n    std::string s = j[\"field\"].to_string();\r\n```\r\n\r\nCould you imagine having such a method?\r\nMaybe it is possible to specialize the `get()` method to get such a behaviour?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/641", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/641/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/641/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/641/events", "html_url": "https://github.com/nlohmann/json/issues/641", "id": 239218116, "node_id": "MDU6SXNzdWUyMzkyMTgxMTY=", "number": 641, "title": " CBOR serialization of a given JSON value does not serialize", "user": {"login": "davidalbertonogueira", "id": 5329202, "node_id": "MDQ6VXNlcjUzMjkyMDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5329202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidalbertonogueira", "html_url": "https://github.com/davidalbertonogueira", "followers_url": "https://api.github.com/users/davidalbertonogueira/followers", "following_url": "https://api.github.com/users/davidalbertonogueira/following{/other_user}", "gists_url": "https://api.github.com/users/davidalbertonogueira/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidalbertonogueira/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidalbertonogueira/subscriptions", "organizations_url": "https://api.github.com/users/davidalbertonogueira/orgs", "repos_url": "https://api.github.com/users/davidalbertonogueira/repos", "events_url": "https://api.github.com/users/davidalbertonogueira/events{/privacy}", "received_events_url": "https://api.github.com/users/davidalbertonogueira/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 571470316, "node_id": "MDU6TGFiZWw1NzE0NzAzMTY=", "url": "https://api.github.com/repos/nlohmann/json/labels/aspect:%20binary%20formats", "name": "aspect: binary formats", "color": "5319e7", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-28T16:14:20Z", "updated_at": "2017-06-29T00:49:27Z", "closed_at": "2017-06-29T00:49:27Z", "author_association": "NONE", "body": "Hi, \r\nI was CBOR serializing a JSON object, and noticed that, whereas when dumping a json object to a string, json string values (i.e., case value_t::string )are escaped (a call to escape_string is made), no such call is made when json values are string values in the CBOR approach.  \r\n\r\nI was reading the CBOR CRF 7049 and it seems that strings do not need to be escaped when serializing to CBOR. \r\nFrom your library the behavior is consistent, you don't escape when serializing, nor except to be escaped when de-serializing. \r\nBut it appears that Newtonsoft.Json (C# library), expects that. Is it a valid expectation? Is it possible to have a serialization that behaves in this way, in case some libraries expect that behavior?\r\n\r\nMy use case involves reading the cbor byte string output in c#. \r\nC++ side:\r\n```cpp\r\nnlohmann::json json_doc;\r\njson_doc[\"characters\"] = nlohmann::json::array();\r\n  \r\nfor (int i = 0; i < characters.size(); i++) {\r\n  json_doc[\"characters\"][i][\"name\"] = (characters[i] != nullptr) ? characters[i]->name() : \"\";\r\n}\r\n\r\nstd::vector<uint8_t> cbor = nlohmann::json::to_cbor(json_doc);\r\noutput->assign((char*)&cbor[0], cbor.size());\r\n```\r\n\r\nC# side. cbor_bytes is the  cbor byte string (c++ output vector)\r\n```c#\r\nCBORObject cbor = CBORObject.DecodeFromBytes(cbor_bytes);\r\noutput = cbor.ToString();\r\n```\r\nSuch output string by then, is wrongly formed: \r\n`{\"characters\": [{\"name\": \"Clara Oswald\"}, {\"name\": \"Kensi Blye\"}, {\"name\": \"Temperance \"Bones\" Brennan\"}]}`\r\nand cannot, obviously be parsed:\r\n```c#\r\nJObject output_obj = JObject.Parse(output);\r\n```\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/640", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/640/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/640/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/640/events", "html_url": "https://github.com/nlohmann/json/issues/640", "id": 239035265, "node_id": "MDU6SXNzdWUyMzkwMzUyNjU=", "number": 640, "title": "Are we forced to use \"-fexceptions\" flag in android ndk project", "user": {"login": "CodeMasterYi", "id": 10430162, "node_id": "MDQ6VXNlcjEwNDMwMTYy", "avatar_url": "https://avatars1.githubusercontent.com/u/10430162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CodeMasterYi", "html_url": "https://github.com/CodeMasterYi", "followers_url": "https://api.github.com/users/CodeMasterYi/followers", "following_url": "https://api.github.com/users/CodeMasterYi/following{/other_user}", "gists_url": "https://api.github.com/users/CodeMasterYi/gists{/gist_id}", "starred_url": "https://api.github.com/users/CodeMasterYi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CodeMasterYi/subscriptions", "organizations_url": "https://api.github.com/users/CodeMasterYi/orgs", "repos_url": "https://api.github.com/users/CodeMasterYi/repos", "events_url": "https://api.github.com/users/CodeMasterYi/events{/privacy}", "received_events_url": "https://api.github.com/users/CodeMasterYi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 382449225, "node_id": "MDU6TGFiZWwzODI0NDkyMjU=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20android", "name": "platform: android", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-06-28T02:24:42Z", "updated_at": "2017-07-08T17:42:25Z", "closed_at": "2017-07-08T17:42:25Z", "author_association": "NONE", "body": "Are we forced to use \"-fexceptions\" flag in android ndk project?\r\n~~~"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/639", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/639/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/639/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/639/events", "html_url": "https://github.com/nlohmann/json/issues/639", "id": 238629071, "node_id": "MDU6SXNzdWUyMzg2MjkwNzE=", "number": 639, "title": "Comparison of objects containing floats", "user": {"login": "amrcode", "id": 29713897, "node_id": "MDQ6VXNlcjI5NzEzODk3", "avatar_url": "https://avatars0.githubusercontent.com/u/29713897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amrcode", "html_url": "https://github.com/amrcode", "followers_url": "https://api.github.com/users/amrcode/followers", "following_url": "https://api.github.com/users/amrcode/following{/other_user}", "gists_url": "https://api.github.com/users/amrcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/amrcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amrcode/subscriptions", "organizations_url": "https://api.github.com/users/amrcode/orgs", "repos_url": "https://api.github.com/users/amrcode/repos", "events_url": "https://api.github.com/users/amrcode/events{/privacy}", "received_events_url": "https://api.github.com/users/amrcode/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}, {"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 304694104, "node_id": "MDU6TGFiZWwzMDQ2OTQxMDQ=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20please%20discuss", "name": "state: please discuss", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-06-26T18:25:54Z", "updated_at": "2017-07-07T19:17:18Z", "closed_at": "2017-07-07T19:17:18Z", "author_association": "NONE", "body": "The operator==() method for json objects uses '==' on the underlying number_float_t type. This may result in false negatives and is contrary to the function's documentation which states \"Floating-point numbers are compared indirectly: two floating-point numbers `f1` and `f2` are considered equal if neither `f1 > f2` nor `f2 > f1` holds\".  Could this behavior be changed to `abs(f1 - f2) < std::numeric_limits<number_float_t>::epsilon()` ?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/638", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/638/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/638/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/638/events", "html_url": "https://github.com/nlohmann/json/issues/638", "id": 238507511, "node_id": "MDU6SXNzdWUyMzg1MDc1MTE=", "number": 638, "title": "'localeconv' is not supported by NDK for SDK  <=20", "user": {"login": "sasmaster", "id": 438400, "node_id": "MDQ6VXNlcjQzODQwMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/438400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sasmaster", "html_url": "https://github.com/sasmaster", "followers_url": "https://api.github.com/users/sasmaster/followers", "following_url": "https://api.github.com/users/sasmaster/following{/other_user}", "gists_url": "https://api.github.com/users/sasmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/sasmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sasmaster/subscriptions", "organizations_url": "https://api.github.com/users/sasmaster/orgs", "repos_url": "https://api.github.com/users/sasmaster/repos", "events_url": "https://api.github.com/users/sasmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/sasmaster/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382449225, "node_id": "MDU6TGFiZWwzODI0NDkyMjU=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20android", "name": "platform: android", "color": "eb6420", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2017-06-26T10:56:34Z", "updated_at": "2017-07-11T11:00:00Z", "closed_at": "2017-07-11T11:00:00Z", "author_association": "NONE", "body": "The NDK STL for Android 19 seems to be incomplete.The locale.h is incomplete for sure.It does have a declaration of that method but the std llib probably doesn't,which causes linker error.It would be nice if this lib could support also older Android SDKs.Thanks!"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/637", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/637/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/637/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/637/events", "html_url": "https://github.com/nlohmann/json/issues/637", "id": 238398828, "node_id": "MDU6SXNzdWUyMzgzOTg4Mjg=", "number": 637, "title": "[Question] cLion integration", "user": {"login": "Dariusz1989", "id": 13185728, "node_id": "MDQ6VXNlcjEzMTg1NzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/13185728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dariusz1989", "html_url": "https://github.com/Dariusz1989", "followers_url": "https://api.github.com/users/Dariusz1989/followers", "following_url": "https://api.github.com/users/Dariusz1989/following{/other_user}", "gists_url": "https://api.github.com/users/Dariusz1989/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dariusz1989/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dariusz1989/subscriptions", "organizations_url": "https://api.github.com/users/Dariusz1989/orgs", "repos_url": "https://api.github.com/users/Dariusz1989/repos", "events_url": "https://api.github.com/users/Dariusz1989/events{/privacy}", "received_events_url": "https://api.github.com/users/Dariusz1989/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-25T18:58:20Z", "updated_at": "2017-07-09T10:32:53Z", "closed_at": "2017-07-09T10:32:53Z", "author_association": "NONE", "body": "Hey\r\n\r\nI'm a bit new to it but how can I load this library in cMake/cLion ?\r\n\r\nRegards\r\nDariusz\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/636", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/636/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/636/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/636/events", "html_url": "https://github.com/nlohmann/json/issues/636", "id": 238331478, "node_id": "MDU6SXNzdWUyMzgzMzE0Nzg=", "number": 636, "title": "How to construct an iteratable usage in nlohmann json?", "user": {"login": "intijk", "id": 740501, "node_id": "MDQ6VXNlcjc0MDUwMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/740501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/intijk", "html_url": "https://github.com/intijk", "followers_url": "https://api.github.com/users/intijk/followers", "following_url": "https://api.github.com/users/intijk/following{/other_user}", "gists_url": "https://api.github.com/users/intijk/gists{/gist_id}", "starred_url": "https://api.github.com/users/intijk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/intijk/subscriptions", "organizations_url": "https://api.github.com/users/intijk/orgs", "repos_url": "https://api.github.com/users/intijk/repos", "events_url": "https://api.github.com/users/intijk/events{/privacy}", "received_events_url": "https://api.github.com/users/intijk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 304694104, "node_id": "MDU6TGFiZWwzMDQ2OTQxMDQ=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20please%20discuss", "name": "state: please discuss", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 28, "created_at": "2017-06-24T17:45:37Z", "updated_at": "2017-08-15T18:51:10Z", "closed_at": "2017-08-15T18:51:10Z", "author_association": "NONE", "body": "Recently I am thinking to have some thing like this, \r\n\r\nFoo a, b, c;\r\njson j=json(Array());\r\nj.push_back(&a);\r\nj.push_back(&b);\r\nj.push_back(&c);\r\n\r\nfor(auto e: j){\r\n         //e would get a pointer to Foo class. \r\n}\r\n\r\nIs this possible to implement? I tried to_json and from_json , but seems the features are limited.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/635", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/635/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/635/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/635/events", "html_url": "https://github.com/nlohmann/json/issues/635", "id": 238139589, "node_id": "MDU6SXNzdWUyMzgxMzk1ODk=", "number": 635, "title": "[Question] copy assign json-container to vector", "user": {"login": "MrJakmer", "id": 12643296, "node_id": "MDQ6VXNlcjEyNjQzMjk2", "avatar_url": "https://avatars3.githubusercontent.com/u/12643296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MrJakmer", "html_url": "https://github.com/MrJakmer", "followers_url": "https://api.github.com/users/MrJakmer/followers", "following_url": "https://api.github.com/users/MrJakmer/following{/other_user}", "gists_url": "https://api.github.com/users/MrJakmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/MrJakmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MrJakmer/subscriptions", "organizations_url": "https://api.github.com/users/MrJakmer/orgs", "repos_url": "https://api.github.com/users/MrJakmer/repos", "events_url": "https://api.github.com/users/MrJakmer/events{/privacy}", "received_events_url": "https://api.github.com/users/MrJakmer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2017-06-23T13:17:19Z", "updated_at": "2017-07-08T19:28:50Z", "closed_at": "2017-07-08T19:28:50Z", "author_association": "NONE", "body": "Hi,\r\n\r\nupon the recommendation of Niels Lohmann via e-mail, I want to refer to a question [I asked on stackoverflow](https://stackoverflow.com/q/44543956).\r\n\r\nLet me share why I am asking that question: I am trying to search for a \"lower bound\" in a json-object. I assume this can't work since comparing with a double (or integer) isn't possible. That is why I need the conversion (via copy-assign) to a vector. If the question I referred to is not needed because you can solve the error with the lower bound (see code below), it would be great. But I think using vectors would still be relevant since it would be more efficient, if you use them multiple times.\r\n\r\nSee the following code:\r\n\r\n\t#include \"json.hpp\"\r\n\r\n\tusing json = nlohmann::json;\r\n\tusing namespace std;\r\n\r\n\r\n\tint main()\r\n\t{\r\n\r\n\t\tconst vector<double> v = { 0 , 10 , 20 ,100 };\r\n\t\tconst json j(v);\r\n\r\n\t\tjson::const_iterator low = lower_bound(j.cbegin(), j.cend(), 11);\r\n\t\tsize_t lowerBoundIndex = low - j.begin();\r\n\t\tcout << lowerBoundIndex << endl;\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\nI am using JSON for Modern C++ Version 2.1.1 with Microsoft Visual Studio 2015 Version 14.0.25431.01 Update 3 (regarding to your README the compiler should be okay). My operating system is Windows 7 SP1.\r\n\r\nThanks in advance!"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/634", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/634/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/634/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/634/events", "html_url": "https://github.com/nlohmann/json/issues/634", "id": 237958135, "node_id": "MDU6SXNzdWUyMzc5NTgxMzU=", "number": 634, "title": "Get size without .dump()", "user": {"login": "Aidoboy", "id": 7421794, "node_id": "MDQ6VXNlcjc0MjE3OTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7421794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aidoboy", "html_url": "https://github.com/Aidoboy", "followers_url": "https://api.github.com/users/Aidoboy/followers", "following_url": "https://api.github.com/users/Aidoboy/following{/other_user}", "gists_url": "https://api.github.com/users/Aidoboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aidoboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aidoboy/subscriptions", "organizations_url": "https://api.github.com/users/Aidoboy/orgs", "repos_url": "https://api.github.com/users/Aidoboy/repos", "events_url": "https://api.github.com/users/Aidoboy/events{/privacy}", "received_events_url": "https://api.github.com/users/Aidoboy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-06-22T20:04:12Z", "updated_at": "2017-07-07T21:28:53Z", "closed_at": "2017-07-07T18:57:29Z", "author_association": "NONE", "body": "Is there a way to get the size of a json object without dumping it first? I'm doing some load testing and would like to avoid the time it takes to dump a 4GB json file just to see how big it is, then do nothing with the dump."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/633", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/633/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/633/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/633/events", "html_url": "https://github.com/nlohmann/json/issues/633", "id": 237751432, "node_id": "MDU6SXNzdWUyMzc3NTE0MzI=", "number": 633, "title": "Segmentation fault when parsing invalid json file", "user": {"login": "bvnp43", "id": 24312419, "node_id": "MDQ6VXNlcjI0MzEyNDE5", "avatar_url": "https://avatars3.githubusercontent.com/u/24312419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bvnp43", "html_url": "https://github.com/bvnp43", "followers_url": "https://api.github.com/users/bvnp43/followers", "following_url": "https://api.github.com/users/bvnp43/following{/other_user}", "gists_url": "https://api.github.com/users/bvnp43/gists{/gist_id}", "starred_url": "https://api.github.com/users/bvnp43/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bvnp43/subscriptions", "organizations_url": "https://api.github.com/users/bvnp43/orgs", "repos_url": "https://api.github.com/users/bvnp43/repos", "events_url": "https://api.github.com/users/bvnp43/events{/privacy}", "received_events_url": "https://api.github.com/users/bvnp43/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-06-22T07:10:47Z", "updated_at": "2017-06-22T08:39:31Z", "closed_at": "2017-06-22T08:30:50Z", "author_association": "NONE", "body": "```\r\nstd::ifstream file(\"test.json\");\r\nnlohmann::json root;\r\nfile >> root;\r\n```\r\n\r\nforgetting, for example comma, in json file gives:\r\n\r\n```Segmentation fault (core dumped)```\r\n\r\ngcc 6.3.0 ubuntu 14.04 \r\n\r\n```\r\nUsing built-in specs.\r\nCOLLECT_GCC=gcc\r\nCOLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/6/lto-wrapper\r\nTarget: x86_64-linux-gnu\r\nConfigured with: ../src/configure -v --with-pkgversion='Ubuntu/Linaro 6.3.0-18ubuntu2~14.04' --with-bugurl=file:///usr/share/doc/gcc-6/README.Bugs --enable-languages=c,ada,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-6 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=gcc4-compatible --disable-libstdcxx-dual-abi --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-6-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-6-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-6-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --with-target-system-zlib --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu\r\nThread model: posix\r\ngcc version 6.3.0 20170519 (Ubuntu/Linaro 6.3.0-18ubuntu2~14.04) \r\n```\r\n\r\nI'm expecting it will throw ```std::exception```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/632", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/632/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/632/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/632/events", "html_url": "https://github.com/nlohmann/json/issues/632", "id": 237694578, "node_id": "MDU6SXNzdWUyMzc2OTQ1Nzg=", "number": 632, "title": "How to serialize from json to vector<customType>?", "user": {"login": "ARMGAMES", "id": 20094067, "node_id": "MDQ6VXNlcjIwMDk0MDY3", "avatar_url": "https://avatars3.githubusercontent.com/u/20094067?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ARMGAMES", "html_url": "https://github.com/ARMGAMES", "followers_url": "https://api.github.com/users/ARMGAMES/followers", "following_url": "https://api.github.com/users/ARMGAMES/following{/other_user}", "gists_url": "https://api.github.com/users/ARMGAMES/gists{/gist_id}", "starred_url": "https://api.github.com/users/ARMGAMES/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ARMGAMES/subscriptions", "organizations_url": "https://api.github.com/users/ARMGAMES/orgs", "repos_url": "https://api.github.com/users/ARMGAMES/repos", "events_url": "https://api.github.com/users/ARMGAMES/events{/privacy}", "received_events_url": "https://api.github.com/users/ARMGAMES/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-21T23:42:50Z", "updated_at": "2017-06-22T05:34:39Z", "closed_at": "2017-06-22T03:33:00Z", "author_association": "NONE", "body": "Hey, i have such code\r\n```cpp\r\nstd::vector<ConfigStructures::MyConfigs> MyConfigs;\r\njson JsonData;\r\n\r\nstruct MyConfigs\r\n{\r\n    bool selected = false;\r\n    std::string Name;\r\n};\r\n\r\ninline void to_json(json& j, const MyConfigs& config) {\r\n    j = json{\r\n        { \"selected\", config.selected },\r\n        { \"name\", config.Name }\r\n    };\r\n}\r\n\r\ninline void from_json(const json& j, MyConfigs& config) {\r\n    config.selected = j.at(\"selected\").get < bool >();\r\n    config.Name = j.at(\"name\").get < int >();\r\n}\r\n```\r\n\r\ni can serialize to json, as i set to_json function\r\n`JsonData = MyConfigs;`\r\n\r\nBut i can't do this\r\n`MyConfigs = JsonData`\r\n\r\nTry do like this:\r\n`MyConfigs = JsonData.get < vector<ConfigStructures::MyConfigs> >();`\r\nand this\r\n```cpp\r\nMyConfigs.clear();\r\nfor (auto& element : JsonData) {\r\n    MyConfigs.push_back(element);\r\n}\r\n```\r\nBut it give me error:\r\n`JSON_THROW(type_error::create(302, \"type must be number, but is \" + j.type_name()));`"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/631", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/631/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/631/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/631/events", "html_url": "https://github.com/nlohmann/json/issues/631", "id": 237668178, "node_id": "MDU6SXNzdWUyMzc2NjgxNzg=", "number": 631, "title": "no member named 'thousands_sep' in 'lconv'", "user": {"login": "rcdailey", "id": 1768054, "node_id": "MDQ6VXNlcjE3NjgwNTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1768054?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rcdailey", "html_url": "https://github.com/rcdailey", "followers_url": "https://api.github.com/users/rcdailey/followers", "following_url": "https://api.github.com/users/rcdailey/following{/other_user}", "gists_url": "https://api.github.com/users/rcdailey/gists{/gist_id}", "starred_url": "https://api.github.com/users/rcdailey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rcdailey/subscriptions", "organizations_url": "https://api.github.com/users/rcdailey/orgs", "repos_url": "https://api.github.com/users/rcdailey/repos", "events_url": "https://api.github.com/users/rcdailey/events{/privacy}", "received_events_url": "https://api.github.com/users/rcdailey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382449225, "node_id": "MDU6TGFiZWwzODI0NDkyMjU=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20android", "name": "platform: android", "color": "eb6420", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 27, "created_at": "2017-06-21T21:21:00Z", "updated_at": "2017-07-11T11:00:00Z", "closed_at": "2017-07-11T11:00:00Z", "author_association": "NONE", "body": "```\r\njson.hpp:8337:46: error: no member named 'thousands_sep' in 'lconv'\r\n\r\n            const char thousands_sep = !loc->thousands_sep ? '\\0'\r\n\r\n                                        ~~~  ^\r\n```\r\n\r\nGetting this error using NDK r14b with `armeabi-v7a` architecture, API 15, and clang + shared gnu STL. Works fine on MSVC 14 though. How can we get Android working?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/628", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/628/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/628/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/628/events", "html_url": "https://github.com/nlohmann/json/issues/628", "id": 237157825, "node_id": "MDU6SXNzdWUyMzcxNTc4MjU=", "number": 628, "title": "[Question] Any fork for (the unsupported) Visual Studio 2012 version?", "user": {"login": "joxeankoret", "id": 2945834, "node_id": "MDQ6VXNlcjI5NDU4MzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/2945834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joxeankoret", "html_url": "https://github.com/joxeankoret", "followers_url": "https://api.github.com/users/joxeankoret/followers", "following_url": "https://api.github.com/users/joxeankoret/following{/other_user}", "gists_url": "https://api.github.com/users/joxeankoret/gists{/gist_id}", "starred_url": "https://api.github.com/users/joxeankoret/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joxeankoret/subscriptions", "organizations_url": "https://api.github.com/users/joxeankoret/orgs", "repos_url": "https://api.github.com/users/joxeankoret/repos", "events_url": "https://api.github.com/users/joxeankoret/events{/privacy}", "received_events_url": "https://api.github.com/users/joxeankoret/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-20T10:07:13Z", "updated_at": "2017-11-02T01:18:06Z", "closed_at": "2017-07-08T06:18:01Z", "author_association": "NONE", "body": "Hi!\r\n\r\nFirst of all, thanks for writing such a good piece of software! I've been using it with various compilers for some projects and it's awesome, I love it.\r\n\r\nNow the question: I'm trying to use it with an old project that uses Visual Studio 2012 and I cannot port to a newer compiler. I've been checking if there was any port of this library for Visual Studio 2012 but I cannot find any.\r\n\r\nDo you happen to know if it was ever ported/forked to Visual Studio 2012?\r\n\r\nThanks in advance!"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/627", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/627/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/627/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/627/events", "html_url": "https://github.com/nlohmann/json/issues/627", "id": 237109729, "node_id": "MDU6SXNzdWUyMzcxMDk3Mjk=", "number": 627, "title": "Dependency injection in serializer", "user": {"login": "celian-garcia", "id": 10258608, "node_id": "MDQ6VXNlcjEwMjU4NjA4", "avatar_url": "https://avatars3.githubusercontent.com/u/10258608?v=4", "gravatar_id": "", "url": "https://api.github.com/users/celian-garcia", "html_url": "https://github.com/celian-garcia", "followers_url": "https://api.github.com/users/celian-garcia/followers", "following_url": "https://api.github.com/users/celian-garcia/following{/other_user}", "gists_url": "https://api.github.com/users/celian-garcia/gists{/gist_id}", "starred_url": "https://api.github.com/users/celian-garcia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/celian-garcia/subscriptions", "organizations_url": "https://api.github.com/users/celian-garcia/orgs", "repos_url": "https://api.github.com/users/celian-garcia/repos", "events_url": "https://api.github.com/users/celian-garcia/events{/privacy}", "received_events_url": "https://api.github.com/users/celian-garcia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-20T06:54:32Z", "updated_at": "2017-06-24T08:47:43Z", "closed_at": "2017-06-24T08:47:42Z", "author_association": "NONE", "body": "Hello,\r\nI'm currently using  your library with great pleasure but I was wondering if I could inject a service as a dependency to the adl_serializer and how to do that.\r\n\r\nI saw that a lot of things are done at compile time so maybe that I'll have to use it as a static service ?\r\nThis option would work but if you have a better one, I'm listening :)\r\n\r\nTo illustrate, here is an example with both solutions.\r\n``` c++\r\nnamespace nlohmann {\r\n    template<>\r\n    struct adl_serializer<firefly::Task> {\r\n        static firefly::Task from_json(const json &j) {\r\n            return firefly::Task(\r\n                    j[\"name\"].get<std::string>(),\r\n                    j[\"description\"].get<std::string>(),\r\n                    ////////////////////////////////////////\r\n                    // Solution 1 (wanted one) : Injected instantiated service ? How to inject it ? \r\n                    service.getProcessingTypeById(j[\"type\"].get<int>()),\r\n                    service.getModuleById(j[\"module\"].get<int>()),\r\n                    // Solution 2 (working) : Use the service statically\r\n                    firefly::DataService::getProcessingTypeById(j[\"type\"].get<int>()),\r\n                    firefly::DataService::getModuleById(j[\"module\"].get<int>()),\r\n                    ////////////////////////////////////////\r\n                    j[\"user_name\"].get<std::string>(),\r\n                    j[\"date\"].get<std::string>(),\r\n                    j[\"state\"].get<int>()\r\n            );\r\n        }\r\n    };\r\n}\r\n```\r\n\r\nThank you :)\r\n\r\nC\u00e9lian Garcia \r\n\r\nEdit : NB : I'll use \"at\" instead of \"[]\" as mentionned in your doc ;) \r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/625", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/625/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/625/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/625/events", "html_url": "https://github.com/nlohmann/json/issues/625", "id": 236659459, "node_id": "MDU6SXNzdWUyMzY2NTk0NTk=", "number": 625, "title": "from_json for std::array", "user": {"login": "hsdk123", "id": 4100142, "node_id": "MDQ6VXNlcjQxMDAxNDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/4100142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hsdk123", "html_url": "https://github.com/hsdk123", "followers_url": "https://api.github.com/users/hsdk123/followers", "following_url": "https://api.github.com/users/hsdk123/following{/other_user}", "gists_url": "https://api.github.com/users/hsdk123/gists{/gist_id}", "starred_url": "https://api.github.com/users/hsdk123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hsdk123/subscriptions", "organizations_url": "https://api.github.com/users/hsdk123/orgs", "repos_url": "https://api.github.com/users/hsdk123/repos", "events_url": "https://api.github.com/users/hsdk123/events{/privacy}", "received_events_url": "https://api.github.com/users/hsdk123/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-17T13:04:05Z", "updated_at": "2017-06-19T15:34:40Z", "closed_at": "2017-06-19T15:34:40Z", "author_association": "NONE", "body": "Hi, I'm realising that for an std::array, I can pass in the array as in into json and the library will convert it for me automatically, whereas when I'm trying to create an std::array from json, the conversion doesn't occur automatically, giving me an error saying that 'array doesn't have an insert function'. \r\n\r\nThis might seem small, but can get very inconvenient - it would be great if we could also get auto conversion of json arrays into arrays without having to explicitly create one element by element. "}, {"url": "https://api.github.com/repos/nlohmann/json/issues/623", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/623/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/623/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/623/events", "html_url": "https://github.com/nlohmann/json/issues/623", "id": 236657076, "node_id": "MDU6SXNzdWUyMzY2NTcwNzY=", "number": 623, "title": "Discussion: How to structure the parsing function families", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 344572510, "node_id": "MDU6TGFiZWwzNDQ1NzI1MTA=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20help%20needed", "name": "state: help needed", "color": "fbca04", "default": false}, {"id": 304694104, "node_id": "MDU6TGFiZWwzMDQ2OTQxMDQ=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20please%20discuss", "name": "state: please discuss", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-06-17T12:11:34Z", "updated_at": "2017-07-30T18:10:28Z", "closed_at": "2017-07-30T18:10:28Z", "author_association": "OWNER", "body": "I want to discuss a restructuring of the way input is parsed.\r\n\r\nFor this, we need to consider three dimensions:\r\n\r\n1. The C++ type to read input from.\r\n2. The file format / representation we want to read.\r\n3. What to do with the result.\r\n\r\n### 1. Inputs\r\n\r\nWe currently accept inputs with the following types:\r\n\r\n- string literals (`const char []`)\r\n- char pointers (`const char*` or `const uint8_t*`)\r\n- input streams (`std::ifstream`, `std::stringstream`, ...)\r\n- iterator ranges\r\n- contiguous containers (`std::vector<char>` or `std::vector<uint8_t>`)\r\n\r\nThe input handling has been abstracted into a class `input_adapter` which offers a unified interface to get a single character or return multiple characters as a `std::string`.\r\n\r\n### 2. File formats\r\n\r\nWe currently support the following inputs:\r\n\r\n- JSON (RFC 7159)\r\n- CBOR (RFC 7049)\r\n- MessagePack (http://msgpack.org)\r\n\r\n### 3. What to do with the input\r\n\r\n- For JSON, we support the generation of a `basic_json` object from any inputs using the `parse()` function family. With `operator<<` we also allow to sequentially parse multiple JSON values from the same input stream. In addition, we may pass a callback function that allows to react on certain parse events.\r\n\r\n- For CBOR and MessagePack, we also suppor the generation of a `basic_json` object.\r\n\r\nIn either case, a parse error yields an exception. There is currently no way to indicate an error without throwing (or calling `abort` if exceptions are switched off).\r\n\r\n* * *\r\n\r\nJust supporting all input types for all file formats would need 5 x 3 = 15 functions. If we then want to add support for callbacks, make exceptions optional, allow to provide a JSON object reference to the parser as target, or anything else, we may quickly end up in dozens of similar functions. This is madness.\r\n\r\nInstead, I would like to discuss the following approach. We implement a parser class that is exposed to the user that can be constructed with any of the input types listed above. Then, the user can decided what to do by configuring this parser object and by calling its member functions. Having a parser object, we may, for instance, decide to create an object that describes a parse error which is available to the user after parsing. So instead of throwing, we can alternativeley allow to query this object afterward, just like `errno`, but nicer.\r\n\r\nI would like to still offer the static parse functions for JSON so the user can write `json j = json::parse(\"[1,2,3]\");`. Removing these functions would be too confusing, even for a 3.0.0 release. But these functions would then just offer the default behavior (no callback, throwing exceptions). Anything fancy should be moved to the described parser class. Meaning, I would like to offer the simplest use cases with the old interface, but allow for more complex scenarios without an explosion of functions.\r\n\r\n* * *\r\n\r\nWhat do you think?\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/622", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/622/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/622/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/622/events", "html_url": "https://github.com/nlohmann/json/issues/622", "id": 236653237, "node_id": "MDU6SXNzdWUyMzY2NTMyMzc=", "number": 622, "title": "Question: How to erase subtree", "user": {"login": "kimwalisch", "id": 4656219, "node_id": "MDQ6VXNlcjQ2NTYyMTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4656219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kimwalisch", "html_url": "https://github.com/kimwalisch", "followers_url": "https://api.github.com/users/kimwalisch/followers", "following_url": "https://api.github.com/users/kimwalisch/following{/other_user}", "gists_url": "https://api.github.com/users/kimwalisch/gists{/gist_id}", "starred_url": "https://api.github.com/users/kimwalisch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kimwalisch/subscriptions", "organizations_url": "https://api.github.com/users/kimwalisch/orgs", "repos_url": "https://api.github.com/users/kimwalisch/repos", "events_url": "https://api.github.com/users/kimwalisch/events{/privacy}", "received_events_url": "https://api.github.com/users/kimwalisch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-17T10:36:58Z", "updated_at": "2017-06-17T11:42:24Z", "closed_at": "2017-06-17T11:42:24Z", "author_association": "NONE", "body": "Hi,\r\n\r\nThanks for your awesome library! I use it in my [primecount](https://github.com/kimwalisch/primecount/tree/backup2) project.\r\n\r\nI would like to erase a subelement/subtree, e.g. in the example below I would like to erase ```[\"S2_hard\"][\"thread1\"]```. Note that ```\"thread1\"``` may also exist in other subtrees e.g. ```[\"S2_easy\"][\"thread1\"]``` which should not be erased.\r\n\r\n```json\r\n{\r\n    \"S2_hard\": {\r\n        \"low\": 16007169,\r\n        \"percent\": 6.32297670017418,\r\n        \"s2_hard\": \"41872228438534\",\r\n        \"seconds\": 1.66252099978738,\r\n        \"segment_size\": 131072,\r\n        \"segments\": 24,\r\n        \"thread0\": {\r\n            \"low\": 9715713,\r\n            \"segment_size\": 131072,\r\n            \"segments\": 24\r\n        },\r\n        \"thread1\": {\r\n            \"low\": 12861441,\r\n            \"segment_size\": 131072,\r\n            \"segments\": 24\r\n        },\r\n        \"x\": \"100000000000000000\",\r\n        \"y\": 10990372,\r\n        \"z\": 9098873086\r\n    }\r\n}\r\n```\r\n\r\nHow can I achieve this?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/621", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/621/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/621/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/621/events", "html_url": "https://github.com/nlohmann/json/issues/621", "id": 236541330, "node_id": "MDU6SXNzdWUyMzY1NDEzMzA=", "number": 621, "title": "Insertion into nested json field", "user": {"login": "karthiksheshadri", "id": 16656403, "node_id": "MDQ6VXNlcjE2NjU2NDAz", "avatar_url": "https://avatars0.githubusercontent.com/u/16656403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karthiksheshadri", "html_url": "https://github.com/karthiksheshadri", "followers_url": "https://api.github.com/users/karthiksheshadri/followers", "following_url": "https://api.github.com/users/karthiksheshadri/following{/other_user}", "gists_url": "https://api.github.com/users/karthiksheshadri/gists{/gist_id}", "starred_url": "https://api.github.com/users/karthiksheshadri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karthiksheshadri/subscriptions", "organizations_url": "https://api.github.com/users/karthiksheshadri/orgs", "repos_url": "https://api.github.com/users/karthiksheshadri/repos", "events_url": "https://api.github.com/users/karthiksheshadri/events{/privacy}", "received_events_url": "https://api.github.com/users/karthiksheshadri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-06-16T17:08:11Z", "updated_at": "2017-06-16T17:18:45Z", "closed_at": "2017-06-16T17:17:58Z", "author_association": "NONE", "body": "Suppose one wants to insert iteratively into a nested field, for example:\r\n\r\n```cpp\r\nfor (auto& i : strings) {\r\n\r\nj[\"Outer level\"][\"Inner level[i]\"]=match[i];\r\n\r\n}\r\n```\r\n\r\npushback() does not do this and one cannot use a string type as index, i.e, j[\"Outer Level\"][str] doesn't work - is there any way to do this?\r\n\r\nMany thanks!"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/620", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/620/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/620/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/620/events", "html_url": "https://github.com/nlohmann/json/issues/620", "id": 236063928, "node_id": "MDU6SXNzdWUyMzYwNjM5Mjg=", "number": 620, "title": "[Question] When using this as git submodule, will it clone the whole thing include test data and benchmark?", "user": {"login": "tuananh", "id": 627278, "node_id": "MDQ6VXNlcjYyNzI3OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/627278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tuananh", "html_url": "https://github.com/tuananh", "followers_url": "https://api.github.com/users/tuananh/followers", "following_url": "https://api.github.com/users/tuananh/following{/other_user}", "gists_url": "https://api.github.com/users/tuananh/gists{/gist_id}", "starred_url": "https://api.github.com/users/tuananh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tuananh/subscriptions", "organizations_url": "https://api.github.com/users/tuananh/orgs", "repos_url": "https://api.github.com/users/tuananh/repos", "events_url": "https://api.github.com/users/tuananh/events{/privacy}", "received_events_url": "https://api.github.com/users/tuananh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-15T03:00:32Z", "updated_at": "2017-06-15T05:25:30Z", "closed_at": "2017-06-15T05:25:30Z", "author_association": "NONE", "body": "it seems the actual source is small but test and benchmark folder is huge (200MB ++).\r\n\r\nShould I just copy the code from `json.hpp` or is there anyway to use this as submodule without cloning test folder and benchmark folder?\r\n\r\nThank you."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/618", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/618/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/618/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/618/events", "html_url": "https://github.com/nlohmann/json/issues/618", "id": 235677042, "node_id": "MDU6SXNzdWUyMzU2NzcwNDI=", "number": 618, "title": "Question: return static json object from function", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-13T20:07:55Z", "updated_at": "2017-06-19T15:36:31Z", "closed_at": "2017-06-19T15:36:31Z", "author_association": "NONE", "body": "Hi,\r\nforgive me but I'm a newbie with c++ in general.\r\n\r\nI'm trying to use this library but I have a problem.\r\nI have a file like this:\r\n\r\n```cpp\r\nstatic json config;\r\n\r\njson get_config()\r\n{\r\n   config[\"value\"] = 456;\r\n   return config;\r\n}\r\n\r\nvoid save_config()\r\n{\r\n   std::ofstream fout(\"config.txt\");\r\n   fout << std::setw(3) << config << std::endl;\r\n}\r\n```\r\n\r\nin another file I do something like ...\r\n\r\n```cpp\r\nauto obj = get_config();\r\nobj[\"value\"] = 123;\r\nsave_config();\r\n\r\n```\r\nbut inside config.txt i still see old value (456).\r\nHow can I solve this ?\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/617", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/617/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/617/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/617/events", "html_url": "https://github.com/nlohmann/json/issues/617", "id": 235572263, "node_id": "MDU6SXNzdWUyMzU1NzIyNjM=", "number": 617, "title": "icc16 error", "user": {"login": "vsakharuk", "id": 5408026, "node_id": "MDQ6VXNlcjU0MDgwMjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/5408026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsakharuk", "html_url": "https://github.com/vsakharuk", "followers_url": "https://api.github.com/users/vsakharuk/followers", "following_url": "https://api.github.com/users/vsakharuk/following{/other_user}", "gists_url": "https://api.github.com/users/vsakharuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsakharuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsakharuk/subscriptions", "organizations_url": "https://api.github.com/users/vsakharuk/orgs", "repos_url": "https://api.github.com/users/vsakharuk/repos", "events_url": "https://api.github.com/users/vsakharuk/events{/privacy}", "received_events_url": "https://api.github.com/users/vsakharuk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 706237888, "node_id": "MDU6TGFiZWw3MDYyMzc4ODg=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20icc", "name": "platform: icc", "color": "eb6420", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-13T14:23:18Z", "updated_at": "2017-09-29T08:33:12Z", "closed_at": "2017-07-08T14:23:06Z", "author_association": "NONE", "body": "Hello folks,\r\n2.1.1 does not compile with icc 16, while works with clang and gcc.\r\nError:\r\n`json.hpp(11227): error: expression must have a constant value\r\n                  static_assert(std::is_signed<T>() == std::is_signed<decltype(x)>(), \"\");\r\n                                                    ^\r\n          detected during:\r\n            instantiation of \"bool nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::lexer::strtonum::to(T &) const [with ObjectType=std::map, ArrayType=std::vector, StringType=std::string, BooleanType=bool, NumberIntegerType=int64_t={long}, NumberUnsignedType=uint64_t={unsigned long}, NumberFloatType=double, AllocatorType=std::allocator, JSONSerializer=nlohmann::adl_serializer,\r\n                      T=uint64_t={unsigned long}, <unnamed>=void]\" at line 11275`\r\n\r\nMay I suggest to replace line 11227\r\n`static_assert(std::is_signed<T>() == std::is_signed<decltype(x)>(), \"\");`\r\nwith\r\n`static_assert(std::is_signed<T>::value == std::is_signed<decltype(x)>(), \"\");`\r\n\r\nRegards V.\r\n\r\nEdit:\r\n\r\nSorry that patch does not help all the time. This one complies with icc:\r\n`static_assert(std::is_signed<T>::value == std::is_signed<decltype(x)>::value, \"\")`"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/616", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/616/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/616/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/616/events", "html_url": "https://github.com/nlohmann/json/issues/616", "id": 235533112, "node_id": "MDU6SXNzdWUyMzU1MzMxMTI=", "number": 616, "title": "[-Wdeprecated-declarations] in row `j >> ss;` in file `json.hpp:7405:26` and FAILED unit tests with MinGWx64!", "user": {"login": "sledgeh", "id": 13828976, "node_id": "MDQ6VXNlcjEzODI4OTc2", "avatar_url": "https://avatars2.githubusercontent.com/u/13828976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sledgeh", "html_url": "https://github.com/sledgeh", "followers_url": "https://api.github.com/users/sledgeh/followers", "following_url": "https://api.github.com/users/sledgeh/following{/other_user}", "gists_url": "https://api.github.com/users/sledgeh/gists{/gist_id}", "starred_url": "https://api.github.com/users/sledgeh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sledgeh/subscriptions", "organizations_url": "https://api.github.com/users/sledgeh/orgs", "repos_url": "https://api.github.com/users/sledgeh/repos", "events_url": "https://api.github.com/users/sledgeh/events{/privacy}", "received_events_url": "https://api.github.com/users/sledgeh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 486186748, "node_id": "MDU6TGFiZWw0ODYxODY3NDg=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20mingw", "name": "platform: mingw", "color": "eb6420", "default": false}, {"id": 344572510, "node_id": "MDU6TGFiZWwzNDQ1NzI1MTA=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20help%20needed", "name": "state: help needed", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 27, "created_at": "2017-06-13T12:13:21Z", "updated_at": "2017-07-30T19:55:12Z", "closed_at": "2017-07-30T19:55:12Z", "author_association": "NONE", "body": "Hi. My compiler MinGWx64 said [-Wdeprecated-declarations]\r\n\r\nBranch: develop\r\nCommit: fd4a0ecabc301c5b6b551058080120d3bb6ee729\r\n\r\nInfo about commit:\r\n```\r\n$ git log -1\r\ncommit fd4a0ecabc301c5b6b551058080120d3bb6ee729\r\nMerge: 5fa5c17 88dc7c1\r\nAuthor: Niels Lohmann <mail@nlohmann.me>\r\nDate:   Tue Jun 13 08:41:14 2017 +0200\r\n\r\n    Merge branch 'feature/ifstream' into develop\r\n```\r\nAbout compiler:\r\n```\r\n$ g++ --version\r\ng++.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 6.2.0\r\nCopyright (C) 2016 Free Software Foundation, Inc.\r\n```\r\n\r\nCompiler output\r\n```\r\nxxxxxx\\nloghman-json-cpp\\test\\src\\unit-serialization.cpp: In function 'void ____C_A_T_C_H____T_E_S_T____34()':\r\nxxxxxx\\nloghman-json-cpp\\test\\src\\unit-serialization.cpp:71:18: warning: 'std::ostream& nlohmann::operator>>(const nlohmann::basic_json<>&, std::ostream&)' is deprecated [-Wdeprecated-declarations]\r\n             j >> ss;\r\n                  ^~\r\nIn file included from xxxxxx\\nloghman-json-cpp\\test\\src\\unit-serialization.cpp:31:0:\r\nG:/user-sdd/devel.emb/workspace/avds/Libraries/nloghman-json-cpp/src/json.hpp:7405:26: note: declared here\r\n     friend std::ostream& operator>>(const basic_json& j, std::ostream& o)\r\n                          ^~~~~~~~\r\nxxxxxx\\nloghman-json-cpp\\test\\src\\unit-serialization.cpp:80:18: warning: 'std::ostream& nlohmann::operator>>(const nlohmann::basic_json<>&, std::ostream&)' is deprecated [-Wdeprecated-declarations]\r\n             j >> ss;\r\n                  ^~\r\nIn file included from xxxxxx\\nloghman-json-cpp\\test\\src\\unit-serialization.cpp:31:0:\r\nG:/user-sdd/devel.emb/workspace/avds/Libraries/nloghman-json-cpp/src/json.hpp:7405:26: note: declared here\r\n     friend std::ostream& operator>>(const basic_json& j, std::ostream& o)\r\n                          ^~~~~~~~\r\nxxxxxx\\nloghman-json-cpp\\test\\src\\unit-serialization.cpp:91:18: warning: 'std::ostream& nlohmann::operator>>(const nlohmann::basic_json<>&, std::ostream&)' is deprecated [-Wdeprecated-declarations]\r\n             j >> ss;\r\n                  ^~\r\nIn file included from xxxxxx\\nloghman-json-cpp\\test\\src\\unit-serialization.cpp:31:0:\r\nG:/user-sdd/devel.emb/workspace/avds/Libraries/nloghman-json-cpp/src/json.hpp:7405:26: note: declared here\r\n     friend std::ostream& operator>>(const basic_json& j, std::ostream& o)\r\n                          ^~~~~~~~\r\n```\r\n\r\nRun `json_unit.exe`\r\n```\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\njson_unit.exe is a Catch v1.8.1 host application.\r\nRun with -? for options\r\n\r\n-------------------------------------------------------------------------------\r\ncompliance tests from json.org\r\n  no failures with trailing literals (relaxed)\r\n-------------------------------------------------------------------------------\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:85\r\n...............................................................................\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:100: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/json_tests/fail7.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:100: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/json_tests/fail8.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:100: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/json_tests/fail10.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\n-------------------------------------------------------------------------------\r\ncompliance tests from json.org\r\n  expected passes\r\n-------------------------------------------------------------------------------\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:104\r\n...............................................................................\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:116: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/json_tests/pass1.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:116: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/json_tests/pass2.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:116: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/json_tests/pass3.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\n-------------------------------------------------------------------------------\r\ncompliance tests from nativejson-benchmark\r\n  roundtrip\r\n-------------------------------------------------------------------------------\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:281\r\n...............................................................................\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:281: FAILED:\r\ndue to unexpected exception with message:\r\n  [json.exception.parse_error.101] parse error at 1: syntax error - unexpected\r\n  end of input\r\n\r\n-------------------------------------------------------------------------------\r\ntest suite from json-test-suite\r\n  read all sample.json\r\n-------------------------------------------------------------------------------\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:335\r\n...............................................................................\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:341: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:344: FAILED:\r\n  CHECK( j.size() == 3 )\r\nwith expansion:\r\n  0 == 3\r\n\r\n-------------------------------------------------------------------------------\r\njson.org examples\r\n  1.json\r\n-------------------------------------------------------------------------------\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:352\r\n...............................................................................\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:356: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\n-------------------------------------------------------------------------------\r\njson.org examples\r\n  2.json\r\n-------------------------------------------------------------------------------\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:359\r\n...............................................................................\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:363: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\n-------------------------------------------------------------------------------\r\njson.org examples\r\n  3.json\r\n-------------------------------------------------------------------------------\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:366\r\n...............................................................................\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:370: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\n-------------------------------------------------------------------------------\r\njson.org examples\r\n  4.json\r\n-------------------------------------------------------------------------------\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:373\r\n...............................................................................\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:377: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\n-------------------------------------------------------------------------------\r\njson.org examples\r\n  5.json\r\n-------------------------------------------------------------------------------\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:380\r\n...............................................................................\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:384: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\n-------------------------------------------------------------------------------\r\nnst's JSONTestSuite\r\n  test_parsing\r\n  y\r\n-------------------------------------------------------------------------------\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:461\r\n...............................................................................\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_array_arraysWithSpaces.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_array_empty-string.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_array_empty.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_array_ending_with_newline.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_array_false.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_array_heterogeneous.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_array_null.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_array_with_1_and_newline.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_array_with_leading_space.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_array_with_several_null.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_array_with_trailing_space.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_number.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_number_0e+1.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_number_0e1.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_number_after_space.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_number_double_close_to_zero.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_number_double_huge_neg_exp.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_number_int_with_exp.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_number_minus_zero.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_number_negative_int.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_number_negative_one.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_number_negative_zero.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_number_real_capital_e.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_number_real_capital_e_neg_exp.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_number_real_capital_e_pos_exp.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_number_real_exponent.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_number_real_fraction_exponent.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_number_real_neg_exp.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_number_real_pos_exponent.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_number_real_underflow.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_number_simple_int.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_number_simple_real.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_number_too_big_neg_int.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_number_too_big_pos_int.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_number_very_big_negative_int.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_object.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_object_basic.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_object_duplicated_key.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_object_duplicated_key_and_value.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_object_empty.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_object_empty_key.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_object_escaped_null_in_key.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_object_extreme_numbers.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_object_long_strings.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_object_simple.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_object_string_unicode.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_object_with_newlines.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_1_2_3_bytes_UTF-8_sequences.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_string_UTF-\r\n  16_Surrogates_U+1D11E_MUSICAL_SYMBOL_G_CLEF.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_accepted_surrogate_pair.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_accepted_surrogate_pairs.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_allowed_escapes.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_backslash_and_u_escaped_zero.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_backslash_doublequotes.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_string_comments.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_double_escape_a.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_double_escape_n.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_escaped_control_character.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_escaped_noncharacter.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_string_in_array.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_in_array_with_leading_space.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_last_surrogates_1_and_2.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_newline_uescaped.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_nonCharacterInUTF-8_U+10FFFF.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_nonCharacterInUTF-8_U+1FFFF.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_nonCharacterInUTF-8_U+FFFF.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_string_null_escape.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_string_one-byte-utf-\r\n  8.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_string_pi.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_string_simple_ascii.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_string_space.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_string_three-byte-\r\n  utf-8.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_string_two-byte-utf-\r\n  8.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_u+2028_line_sep.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_u+2029_par_sep.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_string_uEscape.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_unescaped_char_delete.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_string_unicode.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_unicodeEscapedBackslash.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_string_unicode_2.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_unicode_U+200B_ZERO_WIDTH_SPACE.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_unicode_U+2064_invisible_plus.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_unicode_escaped_double_quote.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_string_utf8.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_with_del_character.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_structure_lonely_false.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_structure_lonely_int.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_structure_lonely_negative_real.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_structure_lonely_null.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_structure_lonely_string.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_structure_lonely_true.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_structure_string_empty.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_structure_trailing_newline.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_structure_true_in_array.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_structure_whitespace_array.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\n-------------------------------------------------------------------------------\r\nnst's JSONTestSuite\r\n  test_parsing\r\n  n -> y (relaxed)\r\n-------------------------------------------------------------------------------\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:779\r\n...............................................................................\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:808: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  n_array_comma_after_close.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:808: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/n_array_extra_close.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:808: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  n_object_trailing_comment.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:808: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  n_object_trailing_comment_open.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:808: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  n_object_trailing_comment_slash_open.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:808: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  n_object_trailing_comment_slash_open_incomplete.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:808: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  n_object_with_trailing_garbage.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:808: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  n_string_with_trailing_garbage.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:808: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  n_structure_array_trailing_garbage.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:808: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  n_structure_array_with_extra_array_close.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:808: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  n_structure_close_unopened_array.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:808: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  n_structure_double_array.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:808: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  n_structure_number_with_trailing_garbage.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:808: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  n_structure_object_followed_by_closing_object.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:808: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  n_structure_object_with_trailing_garbage.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:808: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/n_structure_trailing_#.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\n-------------------------------------------------------------------------------\r\nnst's JSONTestSuite\r\n  test_parsing\r\n  i -> y\r\n-------------------------------------------------------------------------------\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:812\r\n...............................................................................\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:831: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  i_structure_500_nested_arrays.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:831: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/i_structure_UTF-\r\n  8_BOM_empty_object.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:831: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  i_string_unicode_U+10FFFE_nonchar.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:831: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  i_string_unicode_U+1FFFE_nonchar.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:831: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  i_string_unicode_U+FDD0_nonchar.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:831: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  i_string_unicode_U+FFFE_nonchar.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\n-------------------------------------------------------------------------------\r\nnst's JSONTestSuite\r\n  test_parsing\r\n  i/y -> n (out of range)\r\n-------------------------------------------------------------------------------\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:836\r\n...............................................................................\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:851: FAILED:\r\n  CHECK_THROWS_AS( f >> j, json::out_of_range )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  i_number_neg_int_huge_exp.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:851: FAILED:\r\n  CHECK_THROWS_AS( f >> j, json::out_of_range )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  i_number_pos_double_huge_exp.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:851: FAILED:\r\n  CHECK_THROWS_AS( f >> j, json::out_of_range )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_number_huge_exp.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:851: FAILED:\r\n  CHECK_THROWS_AS( f >> j, json::out_of_range )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_number_real_neg_overflow.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:851: FAILED:\r\n  CHECK_THROWS_AS( f >> j, json::out_of_range )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_number_real_pos_overflow.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\n-------------------------------------------------------------------------------\r\nBig List of Naughty Strings\r\n  parsing blns.json\r\n-------------------------------------------------------------------------------\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:901\r\n...............................................................................\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:905: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n```\r\n\r\n\r\n\r\nI did not found in CONTRIBUTING.md that I should not post such a problems. I believe this report will be useful."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/614", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/614/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/614/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/614/events", "html_url": "https://github.com/nlohmann/json/issues/614", "id": 234998198, "node_id": "MDU6SXNzdWUyMzQ5OTgxOTg=", "number": 614, "title": "to_json for pairs, tuples", "user": {"login": "hsdk123", "id": 4100142, "node_id": "MDQ6VXNlcjQxMDAxNDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/4100142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hsdk123", "html_url": "https://github.com/hsdk123", "followers_url": "https://api.github.com/users/hsdk123/followers", "following_url": "https://api.github.com/users/hsdk123/following{/other_user}", "gists_url": "https://api.github.com/users/hsdk123/gists{/gist_id}", "starred_url": "https://api.github.com/users/hsdk123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hsdk123/subscriptions", "organizations_url": "https://api.github.com/users/hsdk123/orgs", "repos_url": "https://api.github.com/users/hsdk123/repos", "events_url": "https://api.github.com/users/hsdk123/events{/privacy}", "received_events_url": "https://api.github.com/users/hsdk123/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 14, "created_at": "2017-06-10T11:53:14Z", "updated_at": "2017-06-19T15:36:11Z", "closed_at": "2017-06-19T15:36:04Z", "author_association": "NONE", "body": "Hi, I was wondering if there might be a simple way to to_json() pairs and tuples, instead of having to explicitly create each element for json. "}, {"url": "https://api.github.com/repos/nlohmann/json/issues/613", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/613/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/613/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/613/events", "html_url": "https://github.com/nlohmann/json/issues/613", "id": 234977412, "node_id": "MDU6SXNzdWUyMzQ5Nzc0MTI=", "number": 613, "title": "Using uninitialized memory 'buf' in line 11173 v2.1.1?", "user": {"login": "mireiner", "id": 18225068, "node_id": "MDQ6VXNlcjE4MjI1MDY4", "avatar_url": "https://avatars1.githubusercontent.com/u/18225068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mireiner", "html_url": "https://github.com/mireiner", "followers_url": "https://api.github.com/users/mireiner/followers", "following_url": "https://api.github.com/users/mireiner/following{/other_user}", "gists_url": "https://api.github.com/users/mireiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/mireiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mireiner/subscriptions", "organizations_url": "https://api.github.com/users/mireiner/orgs", "repos_url": "https://api.github.com/users/mireiner/repos", "events_url": "https://api.github.com/users/mireiner/events{/privacy}", "received_events_url": "https://api.github.com/users/mireiner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-06-10T03:41:47Z", "updated_at": "2017-06-10T16:02:37Z", "closed_at": "2017-06-10T16:02:37Z", "author_association": "NONE", "body": "json.hpp v2.1.1\r\n\r\nUsing uninitialized memory 'buf'?\r\n\r\nLines\r\n\r\n11149    std::array<char, 64> buf;\r\n- - - -\r\n11173    if ((len + 1) < buf.size())\r\n11174    {\r\n11175        std::copy(m_start, m_end, buf.begin());\r\n11176        buf[len] = 0;\r\n11177        buf[ds_pos] = decimal_point_char;\r\n11178        data = buf.data();\r\n11179    }"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/612", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/612/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/612/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/612/events", "html_url": "https://github.com/nlohmann/json/issues/612", "id": 234517393, "node_id": "MDU6SXNzdWUyMzQ1MTczOTM=", "number": 612, "title": "How to parse multiple same Keys of JSON and save them?", "user": {"login": "dk1206", "id": 10271265, "node_id": "MDQ6VXNlcjEwMjcxMjY1", "avatar_url": "https://avatars1.githubusercontent.com/u/10271265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dk1206", "html_url": "https://github.com/dk1206", "followers_url": "https://api.github.com/users/dk1206/followers", "following_url": "https://api.github.com/users/dk1206/following{/other_user}", "gists_url": "https://api.github.com/users/dk1206/gists{/gist_id}", "starred_url": "https://api.github.com/users/dk1206/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dk1206/subscriptions", "organizations_url": "https://api.github.com/users/dk1206/orgs", "repos_url": "https://api.github.com/users/dk1206/repos", "events_url": "https://api.github.com/users/dk1206/events{/privacy}", "received_events_url": "https://api.github.com/users/dk1206/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-08T12:53:41Z", "updated_at": "2017-06-11T12:51:22Z", "closed_at": "2017-06-11T12:51:22Z", "author_association": "NONE", "body": "Hey guys,\r\n\r\n**This is NOT AN ISSUE, but Niels told me to put my question here anyway.**\r\n\r\nI have several Objects in my JSON, something like this:\r\n\r\n```\r\n {\r\n  Id= 1\r\n  Name = David\r\n},\r\n{\r\n  Id = 2\r\n  Name = Katja\r\n},\r\n{\r\n  Id = 3\r\n  Name = Luka\r\n},\r\n```\r\n..\r\n\r\nAs you can see, I have several identifiers (Id, Name) which are the same in my JSON. How can I do this in C++ with this Lib, so that I can parse it only once and store it somewhere for future use?\r\n\r\nE.g. I want to populate  a List of Users on my GUI. And then also track which User was clicked and call get that Id from JSON (there are more data in JSON than Id and Name).\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/611", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/611/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/611/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/611/events", "html_url": "https://github.com/nlohmann/json/issues/611", "id": 234329746, "node_id": "MDU6SXNzdWUyMzQzMjk3NDY=", "number": 611, "title": "\"Multiple declarations\" error when using types defined with `typedef`", "user": {"login": "glfmn", "id": 14112725, "node_id": "MDQ6VXNlcjE0MTEyNzI1", "avatar_url": "https://avatars0.githubusercontent.com/u/14112725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glfmn", "html_url": "https://github.com/glfmn", "followers_url": "https://api.github.com/users/glfmn/followers", "following_url": "https://api.github.com/users/glfmn/following{/other_user}", "gists_url": "https://api.github.com/users/glfmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/glfmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glfmn/subscriptions", "organizations_url": "https://api.github.com/users/glfmn/orgs", "repos_url": "https://api.github.com/users/glfmn/repos", "events_url": "https://api.github.com/users/glfmn/events{/privacy}", "received_events_url": "https://api.github.com/users/glfmn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-06-07T20:18:58Z", "updated_at": "2017-06-09T22:44:45Z", "closed_at": "2017-06-09T22:44:45Z", "author_association": "NONE", "body": "I have types in my code that use `typedef` statements to specialize some of the standard container types.  I get a \"Multiple declarations\" error for `to_json` when I attempt to convert one of these to json so I can output them into a results file.\r\n\r\n# Example:\r\n```cpp\r\ntypdef vector<float> State;\r\ntypdef vector<float> Offset;\r\n```\r\n\r\nand I use it inside of other types like\r\n\r\n```cpp\r\nstruct Node {\r\n    Offset offset;\r\n    State state;\r\n    float cost;\r\n}\r\n```\r\n\r\nI tried defining a `to_json` instance for my `Node` type like so:\r\n\r\n```cpp\r\nvoid to_json(json& j, const Node& n) {\r\n    j = json{{\"cost\", n.cost}, {\"state\", n.state}, {\"offset\", n.offset}};\r\n}\r\n```\r\nbut I get an extremely verbose error telling me I have multiple declarations of the `to_json` instance.  It's similar to the error I would get when using the implicit conversion of `n.state = j.at(\"state\")` without using `get<vector<float>>()`.\r\n\r\nI also tried explicitly copying the values to no avail.\r\n\r\n```cpp\r\nvoid to_json(json& j, const Node& n) {\r\n    vector<float> state = n.state;\r\n    vector<float> offset = n.offset;\r\n    j = json{{\"offset\", offset}, {\"state\", n.state}};\r\n}\r\n```\r\n\r\nThe full error message is _really_ long but I can add it upon request."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/610", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/610/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/610/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/610/events", "html_url": "https://github.com/nlohmann/json/issues/610", "id": 234243596, "node_id": "MDU6SXNzdWUyMzQyNDM1OTY=", "number": 610, "title": "2.1.1+ breaks compilation of shared_ptr<json> == 0", "user": {"login": "vslavik", "id": 145881, "node_id": "MDQ6VXNlcjE0NTg4MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/145881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vslavik", "html_url": "https://github.com/vslavik", "followers_url": "https://api.github.com/users/vslavik/followers", "following_url": "https://api.github.com/users/vslavik/following{/other_user}", "gists_url": "https://api.github.com/users/vslavik/gists{/gist_id}", "starred_url": "https://api.github.com/users/vslavik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vslavik/subscriptions", "organizations_url": "https://api.github.com/users/vslavik/orgs", "repos_url": "https://api.github.com/users/vslavik/repos", "events_url": "https://api.github.com/users/vslavik/events{/privacy}", "received_events_url": "https://api.github.com/users/vslavik/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-07T15:10:15Z", "updated_at": "2017-07-09T10:34:35Z", "closed_at": "2017-07-09T10:34:35Z", "author_association": "NONE", "body": "v2.1.1 introduced regression that breaks compilation of existing code that compiled with up to v2.1.0. The breakage was introduced in #415 (fixing #414) and relates to over-reaching template `operator==`. \r\n\r\nCode that uses `std::shared_ptr<json>` and compares it with zero (both `== 0` and `!= 0`) no longer compiles due to operator ambiguity that is not immediately (or even no so immediately...) apparent to a mere human like me, but nevertheless I confirmed was caused by #415.\r\n\r\nThis is enough to reproduce:\r\n\r\n```cpp\r\n#include <json.hpp>\r\n\r\nint main()\r\n{\r\n    std::shared_ptr<nlohmann::json> p;\r\n    if (p==0) {\r\n    }\r\n    return 0;\r\n}\r\n```\r\n\r\nThis doesn't make the compiler happy:\r\n\r\n```\r\n$ clang++ \u2014std=c++14 test.cpp\r\ntest.cpp:16:10: error: use of overloaded operator '==' is ambiguous (with operand types\r\n      'std::shared_ptr<nlohmann::json>' (aka 'shared_ptr<basic_json<> >') and 'int')\r\n    if (p==0) {\r\n        ~^ ~\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/memory:4922:1: note: \r\n      candidate function [with _Tp = nlohmann::basic_json<std::map, std::vector, std::__1::basic_string<char>, bool,\r\n      long long, unsigned long long, double, std::allocator, adl_serializer>]\r\noperator==(const shared_ptr<_Tp>& __x, nullptr_t) _NOEXCEPT\r\n^\r\njson.hpp:6334:17: note: candidate function\r\n      [with ScalarType = int, $1 = 0]\r\n    friend bool operator==(const_reference lhs, const ScalarType rhs) noexcept\r\n                ^\r\njson.hpp:6253:17: note: candidate function\r\n    friend bool operator==(const_reference lhs, const_reference rhs) noexcept\r\n                ^\r\n1 error generated.\r\n$\r\n```\r\n\r\nYes, it would be better to compare with `nullptr` or use implicit conversion to bool, and it would be trivial to fix the above example, but you don't always have a choice\u2026 such as when using another library where this happens internally to it. To name a prominent example, Boost.Thread is affected:\r\n\r\n```cpp\r\n#define BOOST_THREAD_VERSION 4\r\n#include <boost/thread/future.hpp>\r\n#include <json.hpp>\r\n\r\nint main()\r\n{\r\n    boost::future<nlohmann::json> f;\r\n    f.get();\r\n    return 0;\r\n}\r\n```\r\n\r\nresults in\r\n\r\n```\r\nboost/thread/future.hpp:1683:31: error: use of overloaded operator '==' is\r\n      ambiguous (with operand types 'future_ptr' (aka 'shared_ptr<detail::shared_state<basic_json<std::map, std::vector,\r\n      basic_string<char>, bool, long long, unsigned long long, double, std::allocator, adl_serializer> > >') and 'int')\r\n            if (this->future_ == 0)\r\n                ~~~~~~~~~~~~~ ^  ~\r\ntest.cpp:11:7: note: in instantiation of member function 'boost::future<nlohmann::basic_json<std::map, std::vector,\r\n      std::__1::basic_string<char>, bool, long long, unsigned long long, double, std::allocator, adl_serializer> >::get'\r\n      requested here\r\n    f.get();\r\n      ^\r\nboost/smart_ptr/shared_ptr.hpp:814:31: note: candidate function [with T =\r\n      boost::detail::shared_state<nlohmann::basic_json<std::map, std::vector, std::__1::basic_string<char>, bool, long\r\n      long, unsigned long long, double, std::allocator, adl_serializer> >]\r\ntemplate<class T> inline bool operator==( shared_ptr<T> const & p, boost::detail::sp_nullptr_t ) BOOST_NOEXCEPT\r\n                              ^\r\njson.hpp:6334:17: note: candidate function\r\n      [with ScalarType = int, $1 = 0]\r\n    friend bool operator==(const_reference lhs, const ScalarType rhs) noexcept\r\n                ^\r\njson.hpp:6253:17: note: candidate function\r\n    friend bool operator==(const_reference lhs, const_reference rhs) noexcept\r\n                ^\r\n1 error generated.\r\n```\r\n\r\nObserved with both clang-802.0.42 and Visual Studio 2015, so this isn't compiler-specific."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/608", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/608/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/608/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/608/events", "html_url": "https://github.com/nlohmann/json/issues/608", "id": 233766858, "node_id": "MDU6SXNzdWUyMzM3NjY4NTg=", "number": 608, "title": "a bug of inheritance ? ", "user": {"login": "zhishupp", "id": 6071453, "node_id": "MDQ6VXNlcjYwNzE0NTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6071453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhishupp", "html_url": "https://github.com/zhishupp", "followers_url": "https://api.github.com/users/zhishupp/followers", "following_url": "https://api.github.com/users/zhishupp/following{/other_user}", "gists_url": "https://api.github.com/users/zhishupp/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhishupp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhishupp/subscriptions", "organizations_url": "https://api.github.com/users/zhishupp/orgs", "repos_url": "https://api.github.com/users/zhishupp/repos", "events_url": "https://api.github.com/users/zhishupp/events{/privacy}", "received_events_url": "https://api.github.com/users/zhishupp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-06T03:06:50Z", "updated_at": "2017-11-01T10:16:03Z", "closed_at": "2017-11-01T10:16:03Z", "author_association": "NONE", "body": "I did a test of inheriting from class nlohmann::json, and it's a little difference if I directly use nlohmann::json.\r\n\r\n```cpp\r\n#include \"json.hpp\"\r\nusing json = nlohmann::json;\r\nclass JSON : public json {};\r\nint main(int argc, char* argv[])\r\n{\r\n    JSON j;\r\n    JSON j1;\r\n    j1[\"k\"] = \"v\";\r\n    j[\"o\"] = j1;\r\n    std::cout << j.dump() << std::endl;\r\n    return 0;\r\n}\r\n```\r\nthe result:  **{\"o\":[\"v\"]}**\r\n\r\n```cpp\r\n#include \"json.hpp\"\r\nusing json = nlohmann::json;\r\n//class JSON : public json {};\r\nint main(int argc, char* argv[])\r\n{\r\n    json j;\r\n    json j1;\r\n    j1[\"k\"] = \"v\";\r\n    j[\"o\"] = j1;\r\n    std::cout << j.dump() << std::endl;\r\n    return 0;\r\n}\r\n```\r\nthe result:  **{\"o\":{\"k\":\"v\"}}**\r\n\r\n\"k\" is lost in inheritance condition"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/607", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/607/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/607/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/607/events", "html_url": "https://github.com/nlohmann/json/issues/607", "id": 233491227, "node_id": "MDU6SXNzdWUyMzM0OTEyMjc=", "number": 607, "title": "std::map key conversion with to_json", "user": {"login": "RobotCaleb", "id": 113401, "node_id": "MDQ6VXNlcjExMzQwMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/113401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RobotCaleb", "html_url": "https://github.com/RobotCaleb", "followers_url": "https://api.github.com/users/RobotCaleb/followers", "following_url": "https://api.github.com/users/RobotCaleb/following{/other_user}", "gists_url": "https://api.github.com/users/RobotCaleb/gists{/gist_id}", "starred_url": "https://api.github.com/users/RobotCaleb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RobotCaleb/subscriptions", "organizations_url": "https://api.github.com/users/RobotCaleb/orgs", "repos_url": "https://api.github.com/users/RobotCaleb/repos", "events_url": "https://api.github.com/users/RobotCaleb/events{/privacy}", "received_events_url": "https://api.github.com/users/RobotCaleb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2017-06-05T04:21:10Z", "updated_at": "2017-06-12T04:45:19Z", "closed_at": "2017-06-12T04:45:19Z", "author_association": "NONE", "body": "I read that you can use maps as long as a `std::string` can be constructed from the key.\r\n\r\nI don't understand why this doesn't work. As I've written it I think it's fulfilling the constraint I mentioned above.\r\n```cpp\r\nenum class EC {\r\n    A\r\n};\r\n\r\nstatic void to_json(json& j, EC const& ae) {\r\n    j = std::string{\"FD\"};\r\n}\r\n\r\nstatic void from_json(const json& j, EC& ae) {\r\n    ae = EC::A;\r\n}\r\n\r\nint main()\r\n{\r\n    std::unordered_map<EC, int> imap;\r\n    json j = imap;\r\n}\r\n```\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/606", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/606/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/606/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/606/events", "html_url": "https://github.com/nlohmann/json/issues/606", "id": 233405429, "node_id": "MDU6SXNzdWUyMzM0MDU0Mjk=", "number": 606, "title": "json.hpp:6384:62: error: wrong number of template arguments (1, should be 2)", "user": {"login": "moneroexamples", "id": 15305358, "node_id": "MDQ6VXNlcjE1MzA1MzU4", "avatar_url": "https://avatars1.githubusercontent.com/u/15305358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moneroexamples", "html_url": "https://github.com/moneroexamples", "followers_url": "https://api.github.com/users/moneroexamples/followers", "following_url": "https://api.github.com/users/moneroexamples/following{/other_user}", "gists_url": "https://api.github.com/users/moneroexamples/gists{/gist_id}", "starred_url": "https://api.github.com/users/moneroexamples/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moneroexamples/subscriptions", "organizations_url": "https://api.github.com/users/moneroexamples/orgs", "repos_url": "https://api.github.com/users/moneroexamples/repos", "events_url": "https://api.github.com/users/moneroexamples/events{/privacy}", "received_events_url": "https://api.github.com/users/moneroexamples/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-04T01:28:05Z", "updated_at": "2017-06-05T01:02:26Z", "closed_at": "2017-06-04T07:14:08Z", "author_association": "NONE", "body": "After upgrading gcc in majnaro, i started getting this error. Does anyone know to remedy it?\r\n\r\n```\r\njson.hpp: In function \u2018bool nlohmann::operator<(nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::const_reference, nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::const_reference)\u2019:\r\n/home/mwo/onion-monero-blockchain-explorer/src/../ext/json.hpp:6384:62: error: wrong number of template arguments (1, should be 2)\r\n                     return *lhs.m_value.array < *rhs.m_value.array;\r\n                                                              ^~~~~\r\nIn file included from /usr/include/c++/7.1.1/tuple:39:0,\r\n                 from /usr/include/c++/7.1.1/bits/unique_ptr.h:37,\r\n                 from /usr/include/c++/7.1.1/memory:80,\r\n                 from /usr/include/boost/config/no_tr1/memory.hpp:21,\r\n                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:23,\r\n                 from /usr/include/boost/shared_ptr.hpp:17,\r\n                 from /home/mwo/monero/contrib/epee/include/net/http_client.h:30,\r\n                 from /home/mwo/onion-monero-blockchain-explorer/src/monero_headers.h:21,\r\n                 from /home/mwo/onion-monero-blockchain-explorer/src/MicroCore.h:10,\r\n                 from /home/mwo/onion-monero-blockchain-explorer/src/CurrentBlockchainStatus.h:8,\r\n                 from /home/mwo/onion-monero-blockchain-explorer/src/CurrentBlockchainStatus.cpp:5:\r\n/usr/include/c++/7.1.1/array:94:12: note: provided for \u2018template<class _Tp, long unsigned int _Nm> struct std::array\u2019\r\n     struct array\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/605", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/605/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/605/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/605/events", "html_url": "https://github.com/nlohmann/json/issues/605", "id": 233383421, "node_id": "MDU6SXNzdWUyMzMzODM0MjE=", "number": 605, "title": "Incremental parsing: Where's the push version?", "user": {"login": "vinniefalco", "id": 1503976, "node_id": "MDQ6VXNlcjE1MDM5NzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1503976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vinniefalco", "html_url": "https://github.com/vinniefalco", "followers_url": "https://api.github.com/users/vinniefalco/followers", "following_url": "https://api.github.com/users/vinniefalco/following{/other_user}", "gists_url": "https://api.github.com/users/vinniefalco/gists{/gist_id}", "starred_url": "https://api.github.com/users/vinniefalco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vinniefalco/subscriptions", "organizations_url": "https://api.github.com/users/vinniefalco/orgs", "repos_url": "https://api.github.com/users/vinniefalco/repos", "events_url": "https://api.github.com/users/vinniefalco/events{/privacy}", "received_events_url": "https://api.github.com/users/vinniefalco/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-06-03T17:29:46Z", "updated_at": "2018-02-19T16:38:13Z", "closed_at": "2017-06-07T20:40:44Z", "author_association": "NONE", "body": "The promotional materials cite \"incremental parsing\" but where is the interface that lets me call into the parser with a buffer at a time?\r\n\r\nI see the \"pull\" interface where it reads from a stream - where's the push?\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/604", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/604/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/604/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/604/events", "html_url": "https://github.com/nlohmann/json/issues/604", "id": 233382236, "node_id": "MDU6SXNzdWUyMzMzODIyMzY=", "number": 604, "title": "Is there a way to validate the structure of a json object ?", "user": {"login": "Oberonc", "id": 13750901, "node_id": "MDQ6VXNlcjEzNzUwOTAx", "avatar_url": "https://avatars3.githubusercontent.com/u/13750901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Oberonc", "html_url": "https://github.com/Oberonc", "followers_url": "https://api.github.com/users/Oberonc/followers", "following_url": "https://api.github.com/users/Oberonc/following{/other_user}", "gists_url": "https://api.github.com/users/Oberonc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Oberonc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Oberonc/subscriptions", "organizations_url": "https://api.github.com/users/Oberonc/orgs", "repos_url": "https://api.github.com/users/Oberonc/repos", "events_url": "https://api.github.com/users/Oberonc/events{/privacy}", "received_events_url": "https://api.github.com/users/Oberonc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-03T17:08:32Z", "updated_at": "2017-06-06T18:23:29Z", "closed_at": "2017-06-06T18:23:29Z", "author_association": "NONE", "body": "Suppose I parsed a string from an unreliable source.\r\nHow can I validate the result json object ? (make sure it has certain structure / contents. Such as a list of 3 numbers and then a string ?)\r\nOther than using a long boilerplate code with size() and get<>() and is_* ?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/603", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/603/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/603/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/603/events", "html_url": "https://github.com/nlohmann/json/issues/603", "id": 233359006, "node_id": "MDU6SXNzdWUyMzMzNTkwMDY=", "number": 603, "title": "[Question] Issue when using Appveyor when compiling library", "user": {"login": "tuananh", "id": 627278, "node_id": "MDQ6VXNlcjYyNzI3OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/627278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tuananh", "html_url": "https://github.com/tuananh", "followers_url": "https://api.github.com/users/tuananh/followers", "following_url": "https://api.github.com/users/tuananh/following{/other_user}", "gists_url": "https://api.github.com/users/tuananh/gists{/gist_id}", "starred_url": "https://api.github.com/users/tuananh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tuananh/subscriptions", "organizations_url": "https://api.github.com/users/tuananh/orgs", "repos_url": "https://api.github.com/users/tuananh/repos", "events_url": "https://api.github.com/users/tuananh/events{/privacy}", "received_events_url": "https://api.github.com/users/tuananh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-03T09:44:48Z", "updated_at": "2017-06-04T09:09:38Z", "closed_at": "2017-06-03T13:35:56Z", "author_association": "NONE", "body": "Hi,\r\n\r\nNot sure if this is a right place to ask. I have a small project that use json as submodule library.\r\n\r\nWhen I tried to use AppVeyor, I got some errors like this in the install step\r\n\r\n```\r\nsrc/json.hpp(8936): error C2589: '(': illegal token on right side of '::'\r\n```\r\n\r\n```\r\nsrc/json.hpp(8933): note: while compiling class template member function 'std::string nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>::input_buffer_adapter::read(::size_t,::size_t)'\r\n```\r\n\r\nand this\r\n\r\n```\r\njson.hpp(8936): error C2062: type 'unknown-type' unexpected\r\n```\r\n\r\nDoes any of you know what options/ flag I have to use in AppVeyor to make it works?\r\n\r\nRegards,"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/602", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/602/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/602/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/602/events", "html_url": "https://github.com/nlohmann/json/issues/602", "id": 232984168, "node_id": "MDU6SXNzdWUyMzI5ODQxNjg=", "number": 602, "title": "BOM not skipped when using json:parse(iterator)", "user": {"login": "red632nm", "id": 29130033, "node_id": "MDQ6VXNlcjI5MTMwMDMz", "avatar_url": "https://avatars3.githubusercontent.com/u/29130033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/red632nm", "html_url": "https://github.com/red632nm", "followers_url": "https://api.github.com/users/red632nm/followers", "following_url": "https://api.github.com/users/red632nm/following{/other_user}", "gists_url": "https://api.github.com/users/red632nm/gists{/gist_id}", "starred_url": "https://api.github.com/users/red632nm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/red632nm/subscriptions", "organizations_url": "https://api.github.com/users/red632nm/orgs", "repos_url": "https://api.github.com/users/red632nm/repos", "events_url": "https://api.github.com/users/red632nm/events{/privacy}", "received_events_url": "https://api.github.com/users/red632nm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 4, "created_at": "2017-06-01T19:25:16Z", "updated_at": "2017-06-12T16:07:12Z", "closed_at": "2017-06-07T20:50:29Z", "author_association": "NONE", "body": "The byte-order mark is not being skipped when I use json:parse(iterator) interface for example:\r\nnlohmann::json::parse(static_cast<const char *>(buffer), static_cast<const char *>(buffer) + nbytes)\r\n\r\nIt looks like the json::parse(stream) interface does skip the BOM.\r\n\r\nHere is a quick fix that seems to work for me:\r\n[json.txt](https://github.com/nlohmann/json/files/1045813/json.txt)\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/601", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/601/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/601/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/601/events", "html_url": "https://github.com/nlohmann/json/issues/601", "id": 232905332, "node_id": "MDU6SXNzdWUyMzI5MDUzMzI=", "number": 601, "title": "Use of the binary type in CBOR and Message Pack", "user": {"login": "Type1J", "id": 413028, "node_id": "MDQ6VXNlcjQxMzAyOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/413028?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Type1J", "html_url": "https://github.com/Type1J", "followers_url": "https://api.github.com/users/Type1J/followers", "following_url": "https://api.github.com/users/Type1J/following{/other_user}", "gists_url": "https://api.github.com/users/Type1J/gists{/gist_id}", "starred_url": "https://api.github.com/users/Type1J/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Type1J/subscriptions", "organizations_url": "https://api.github.com/users/Type1J/orgs", "repos_url": "https://api.github.com/users/Type1J/repos", "events_url": "https://api.github.com/users/Type1J/events{/privacy}", "received_events_url": "https://api.github.com/users/Type1J/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 571470316, "node_id": "MDU6TGFiZWw1NzE0NzAzMTY=", "url": "https://api.github.com/repos/nlohmann/json/labels/aspect:%20binary%20formats", "name": "aspect: binary formats", "color": "5319e7", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2017-06-01T14:50:19Z", "updated_at": "2017-08-15T18:56:45Z", "closed_at": "2017-08-15T18:56:45Z", "author_association": "CONTRIBUTOR", "body": "For types such as std::vector<uint8_t> the CBOR and Message Pack array type is currently used and each value is written as a numeric value, but this has a high overhead in output size (for byte sized value types) due to each value costing more than 1 byte in CBOR and (most of the time) in Message Pack.\r\n\r\nI'd like to propose that the to_* functions for binary formats take an additional bool argument that causes array types that are known to be numeric and byte-sized to serialize using the binary string type of the respective format. The from_* functions should accept either the current style array of numeric types or the binary.\r\n\r\nThis proposal **_might_** suggest that the nlohmann::json C++ type be augmented with a bytearray discriminator in addition to the normal array discriminator. However there might be an easier way to know that the array is an array of numeric 8-bit values. To be clear, the JSON form would still be an array, so the discriminator would only be set to bytearray if the values given to the array were numeric and inside of the range [0, 255].\r\n\r\nThoughts?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/600", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/600/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/600/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/600/events", "html_url": "https://github.com/nlohmann/json/issues/600", "id": 232851896, "node_id": "MDU6SXNzdWUyMzI4NTE4OTY=", "number": 600, "title": "Newbie issue: how does one convert a map in Json back to std::map?", "user": {"login": "CalielOfSeptem", "id": 3701133, "node_id": "MDQ6VXNlcjM3MDExMzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3701133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CalielOfSeptem", "html_url": "https://github.com/CalielOfSeptem", "followers_url": "https://api.github.com/users/CalielOfSeptem/followers", "following_url": "https://api.github.com/users/CalielOfSeptem/following{/other_user}", "gists_url": "https://api.github.com/users/CalielOfSeptem/gists{/gist_id}", "starred_url": "https://api.github.com/users/CalielOfSeptem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CalielOfSeptem/subscriptions", "organizations_url": "https://api.github.com/users/CalielOfSeptem/orgs", "repos_url": "https://api.github.com/users/CalielOfSeptem/repos", "events_url": "https://api.github.com/users/CalielOfSeptem/events{/privacy}", "received_events_url": "https://api.github.com/users/CalielOfSeptem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 20, "created_at": "2017-06-01T11:42:47Z", "updated_at": "2018-06-07T09:46:26Z", "closed_at": "2017-06-17T11:37:40Z", "author_association": "NONE", "body": "I have a map..\r\n\r\n```\r\nj[\"rightHand\"] = std::map<std::string, std::string> {{ \r\n                    some_string, \r\n                    some_other_string }};\r\n```\r\n\r\nBut when I go to retrieve the map I get an 'call of overload is ambiguous' type error:\r\n\r\n            const json& rh = j[\"rightHand\"]; \r\n           std::map<std::string, std::string> rightHand  = rh;\r\n\r\nCould you perhaps point me to where I can find an example of how to do this properly?  I've searched but can't seem to find anything directly on point\r\n\r\nThanks!"}]