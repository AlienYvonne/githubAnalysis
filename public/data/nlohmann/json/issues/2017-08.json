[{"url": "https://api.github.com/repos/nlohmann/json/issues/721", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/721/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/721/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/721/events", "html_url": "https://github.com/nlohmann/json/issues/721", "id": 254482409, "node_id": "MDU6SXNzdWUyNTQ0ODI0MDk=", "number": 721, "title": "When will be 3.0 in master?", "user": {"login": "bajimu", "id": 19263759, "node_id": "MDQ6VXNlcjE5MjYzNzU5", "avatar_url": "https://avatars2.githubusercontent.com/u/19263759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bajimu", "html_url": "https://github.com/bajimu", "followers_url": "https://api.github.com/users/bajimu/followers", "following_url": "https://api.github.com/users/bajimu/following{/other_user}", "gists_url": "https://api.github.com/users/bajimu/gists{/gist_id}", "starred_url": "https://api.github.com/users/bajimu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bajimu/subscriptions", "organizations_url": "https://api.github.com/users/bajimu/orgs", "repos_url": "https://api.github.com/users/bajimu/repos", "events_url": "https://api.github.com/users/bajimu/events{/privacy}", "received_events_url": "https://api.github.com/users/bajimu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-31T22:08:44Z", "updated_at": "2017-12-04T21:12:14Z", "closed_at": "2017-09-01T10:59:00Z", "author_association": "NONE", "body": "When will be 3.0 in master?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/720", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/720/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/720/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/720/events", "html_url": "https://github.com/nlohmann/json/issues/720", "id": 253879345, "node_id": "MDU6SXNzdWUyNTM4NzkzNDU=", "number": 720, "title": "Determine the type from error message.", "user": {"login": "MattiasEppler", "id": 26406385, "node_id": "MDQ6VXNlcjI2NDA2Mzg1", "avatar_url": "https://avatars1.githubusercontent.com/u/26406385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MattiasEppler", "html_url": "https://github.com/MattiasEppler", "followers_url": "https://api.github.com/users/MattiasEppler/followers", "following_url": "https://api.github.com/users/MattiasEppler/following{/other_user}", "gists_url": "https://api.github.com/users/MattiasEppler/gists{/gist_id}", "starred_url": "https://api.github.com/users/MattiasEppler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MattiasEppler/subscriptions", "organizations_url": "https://api.github.com/users/MattiasEppler/orgs", "repos_url": "https://api.github.com/users/MattiasEppler/repos", "events_url": "https://api.github.com/users/MattiasEppler/events{/privacy}", "received_events_url": "https://api.github.com/users/MattiasEppler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-08-30T05:05:39Z", "updated_at": "2017-08-30T12:52:21Z", "closed_at": "2017-08-30T11:28:11Z", "author_association": "NONE", "body": "I get the erros\r\n\"could not find to_json() method in T's namespace\"\r\n\"could not find from_json() method in T's namespace\"\r\n\r\nbut I do not know for which type the methods are not found. How do I get this information?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/719", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/719/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/719/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/719/events", "html_url": "https://github.com/nlohmann/json/issues/719", "id": 253700858, "node_id": "MDU6SXNzdWUyNTM3MDA4NTg=", "number": 719, "title": "Compile-Error C2100 (MS VS2015) in line 887 json.hpp", "user": {"login": "Rockettomatoo", "id": 26488935, "node_id": "MDQ6VXNlcjI2NDg4OTM1", "avatar_url": "https://avatars2.githubusercontent.com/u/26488935?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rockettomatoo", "html_url": "https://github.com/Rockettomatoo", "followers_url": "https://api.github.com/users/Rockettomatoo/followers", "following_url": "https://api.github.com/users/Rockettomatoo/following{/other_user}", "gists_url": "https://api.github.com/users/Rockettomatoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rockettomatoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rockettomatoo/subscriptions", "organizations_url": "https://api.github.com/users/Rockettomatoo/orgs", "repos_url": "https://api.github.com/users/Rockettomatoo/repos", "events_url": "https://api.github.com/users/Rockettomatoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Rockettomatoo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}, {"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-29T15:11:59Z", "updated_at": "2017-08-29T16:03:23Z", "closed_at": "2017-08-29T16:03:23Z", "author_association": "NONE", "body": "Hey there,\r\n\r\nI'm happy to have found this awesome repo for parsing json but unfortunately `json.hpp` doesn't compile in my current project.\r\nMy Project-Setup is a plain win32-commandline-project with the `json.hpp` from the master-branch pasted in.\r\n\r\nAs the Heading says, the Error is in line 887:\r\n```\r\n//error: 1>c:\\vsprojects\\path\\to\\project\\source\\json.hpp(887): error C2100: Invalid Dereferencing\r\n\r\n// code arround line 887:\r\n\r\n// taken from ranges-v3\r\ntemplate<typename T>\r\nstruct static_const\r\n{\r\n    static constexpr T value{}; //line 887\r\n};\r\n```\r\n\r\nAny suggestions for that error?\r\nThanks in advance"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/718", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/718/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/718/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/718/events", "html_url": "https://github.com/nlohmann/json/issues/718", "id": 253504669, "node_id": "MDU6SXNzdWUyNTM1MDQ2Njk=", "number": 718, "title": "from_json not working for boost::optional example", "user": {"login": "popizdeh", "id": 1608656, "node_id": "MDQ6VXNlcjE2MDg2NTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1608656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popizdeh", "html_url": "https://github.com/popizdeh", "followers_url": "https://api.github.com/users/popizdeh/followers", "following_url": "https://api.github.com/users/popizdeh/following{/other_user}", "gists_url": "https://api.github.com/users/popizdeh/gists{/gist_id}", "starred_url": "https://api.github.com/users/popizdeh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popizdeh/subscriptions", "organizations_url": "https://api.github.com/users/popizdeh/orgs", "repos_url": "https://api.github.com/users/popizdeh/repos", "events_url": "https://api.github.com/users/popizdeh/events{/privacy}", "received_events_url": "https://api.github.com/users/popizdeh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-08-29T01:44:17Z", "updated_at": "2017-08-30T06:06:40Z", "closed_at": "2017-08-30T06:06:40Z", "author_association": "NONE", "body": "I have a verbatim copy of adl_serializer for boost::optional from the documentation. Version 2.1.1 of the library.\r\n\r\n```\r\nnlohmann::json json{{\"test\", nullptr}};\r\n\r\nboost::optional<int> works = json[\"test\"];\r\n\r\nboost::optional<int> broken;\r\nbroken = json[\"test\"];\r\n```\r\n\r\nAssignment to 'broken' variable won't go through the adl_serializer and will throw std::domain_error: type must be number, but is null"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/717", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/717/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/717/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/717/events", "html_url": "https://github.com/nlohmann/json/issues/717", "id": 253281463, "node_id": "MDU6SXNzdWUyNTMyODE0NjM=", "number": 717, "title": "about from_json and to_json function", "user": {"login": "daoqiang", "id": 16305190, "node_id": "MDQ6VXNlcjE2MzA1MTkw", "avatar_url": "https://avatars3.githubusercontent.com/u/16305190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daoqiang", "html_url": "https://github.com/daoqiang", "followers_url": "https://api.github.com/users/daoqiang/followers", "following_url": "https://api.github.com/users/daoqiang/following{/other_user}", "gists_url": "https://api.github.com/users/daoqiang/gists{/gist_id}", "starred_url": "https://api.github.com/users/daoqiang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daoqiang/subscriptions", "organizations_url": "https://api.github.com/users/daoqiang/orgs", "repos_url": "https://api.github.com/users/daoqiang/repos", "events_url": "https://api.github.com/users/daoqiang/events{/privacy}", "received_events_url": "https://api.github.com/users/daoqiang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-28T09:54:52Z", "updated_at": "2017-08-28T10:18:18Z", "closed_at": "2017-08-28T10:18:18Z", "author_association": "NONE", "body": "Hi,\r\nDo I need to design functions for each custom type?\r\nThx"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/716", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/716/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/716/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/716/events", "html_url": "https://github.com/nlohmann/json/issues/716", "id": 253262141, "node_id": "MDU6SXNzdWUyNTMyNjIxNDE=", "number": 716, "title": "How to deserialize array with derived objects", "user": {"login": "MattiasEppler", "id": 26406385, "node_id": "MDQ6VXNlcjI2NDA2Mzg1", "avatar_url": "https://avatars1.githubusercontent.com/u/26406385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MattiasEppler", "html_url": "https://github.com/MattiasEppler", "followers_url": "https://api.github.com/users/MattiasEppler/followers", "following_url": "https://api.github.com/users/MattiasEppler/following{/other_user}", "gists_url": "https://api.github.com/users/MattiasEppler/gists{/gist_id}", "starred_url": "https://api.github.com/users/MattiasEppler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MattiasEppler/subscriptions", "organizations_url": "https://api.github.com/users/MattiasEppler/orgs", "repos_url": "https://api.github.com/users/MattiasEppler/repos", "events_url": "https://api.github.com/users/MattiasEppler/events{/privacy}", "received_events_url": "https://api.github.com/users/MattiasEppler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2017-08-28T08:33:25Z", "updated_at": "2018-03-06T15:39:12Z", "closed_at": "2017-08-29T08:59:42Z", "author_association": "NONE", "body": "Hi \r\n\r\nI need to deserialize a array that have derived objects.\r\n```js\r\n{\r\n \"systems\":\r\n  [ \r\n     {\"type\": \"system1\", \"name\": \"system_1\"  special_param_1 : 1 },\r\n     {\"type\": \"system2\", \"name\": \"system_2\", special_param_2 : \"Value2\" },\r\n     {\"type\": \"system3\", \"name\": \"system_3\", special_param_3 : 3.0, special_param_3_1 : \"Value_3\"  }\r\n  ]\r\n}\r\n```\r\n\r\nso in my from_json I have to do what? Sorry but I do not realy know how to solve this.\r\nI started with:\r\n```cpp\r\nvoid from_json(cons json& j, settings& settings)\r\n{\r\n   settings.systems = j.at(\"systems\").get<vector<systembase>>();\r\n   ??\r\n}\r\n\r\nvoid from_json(cons json& j, systembase& base)\r\n{\r\n  base.type =j.at[\"type\"].get<string>();\r\n  base.name =j.at[\"name\"].get<string>();\r\n\r\n  switch (base.type)\r\n  {\r\n   case :\r\n   ...? \r\n  }\r\n}\r\n\r\nvoid from_json(cons json& j, systemderived_1& derived)\r\n{\r\n derived = j.at[\"special_param_1\"].get<int>();\r\n}\r\n```\r\n\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/715", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/715/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/715/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/715/events", "html_url": "https://github.com/nlohmann/json/issues/715", "id": 253237594, "node_id": "MDU6SXNzdWUyNTMyMzc1OTQ=", "number": 715, "title": "How to detect parse failure?", "user": {"login": "davechurchill", "id": 1189032, "node_id": "MDQ6VXNlcjExODkwMzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1189032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davechurchill", "html_url": "https://github.com/davechurchill", "followers_url": "https://api.github.com/users/davechurchill/followers", "following_url": "https://api.github.com/users/davechurchill/following{/other_user}", "gists_url": "https://api.github.com/users/davechurchill/gists{/gist_id}", "starred_url": "https://api.github.com/users/davechurchill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davechurchill/subscriptions", "organizations_url": "https://api.github.com/users/davechurchill/orgs", "repos_url": "https://api.github.com/users/davechurchill/repos", "events_url": "https://api.github.com/users/davechurchill/events{/privacy}", "received_events_url": "https://api.github.com/users/davechurchill/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-08-28T06:27:34Z", "updated_at": "2017-09-29T08:30:15Z", "closed_at": "2017-09-29T08:30:15Z", "author_association": "NONE", "body": "Apologies for the seemingly simple question, but there is no example for detecting a parse failure on the readme. Maybe one could be added, or a simple explanation of how to detect a parse failure could be given?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/714", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/714/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/714/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/714/events", "html_url": "https://github.com/nlohmann/json/issues/714", "id": 253157883, "node_id": "MDU6SXNzdWUyNTMxNTc4ODM=", "number": 714, "title": "Parse throw std::ios_base::failure exception when failbit set to true", "user": {"login": "dPavelDev", "id": 17548434, "node_id": "MDQ6VXNlcjE3NTQ4NDM0", "avatar_url": "https://avatars0.githubusercontent.com/u/17548434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dPavelDev", "html_url": "https://github.com/dPavelDev", "followers_url": "https://api.github.com/users/dPavelDev/followers", "following_url": "https://api.github.com/users/dPavelDev/following{/other_user}", "gists_url": "https://api.github.com/users/dPavelDev/gists{/gist_id}", "starred_url": "https://api.github.com/users/dPavelDev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dPavelDev/subscriptions", "organizations_url": "https://api.github.com/users/dPavelDev/orgs", "repos_url": "https://api.github.com/users/dPavelDev/repos", "events_url": "https://api.github.com/users/dPavelDev/events{/privacy}", "received_events_url": "https://api.github.com/users/dPavelDev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 12, "created_at": "2017-08-27T11:29:06Z", "updated_at": "2017-10-31T14:22:06Z", "closed_at": "2017-10-31T14:04:24Z", "author_association": "NONE", "body": "In brief:\r\n\r\n```cpp\r\nstd::ifstream is;\r\nis.exceptions(\r\n      is.exceptions() \r\n    | std::ios_base::failbit \r\n    | std::ios_base::badbit\r\n); // handle different exceptions as 'file not found', 'permission denied'\r\n\r\ntry { \r\n    is.open(\"my_valid_file.json\");\r\n    const auto &jsonFile = nlohmann::json::parse(is); // (*)\r\n    // ...\r\ncatch (const std::ios_base::failure &e) {\r\n    std::cerr << e.code().message() << std::endl;\r\n}\r\n```\r\n\r\nThe line (*) produce std::ios_base::failure exception when parse function reaches end of stream even if json document is valid. Without std::ios_base::failbit function works OK."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/713", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/713/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/713/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/713/events", "html_url": "https://github.com/nlohmann/json/issues/713", "id": 253053846, "node_id": "MDU6SXNzdWUyNTMwNTM4NDY=", "number": 713, "title": "Is there a way of format just making a pretty print without changing the key's orders ?", "user": {"login": "zhishupp", "id": 6071453, "node_id": "MDQ6VXNlcjYwNzE0NTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6071453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhishupp", "html_url": "https://github.com/zhishupp", "followers_url": "https://api.github.com/users/zhishupp/followers", "following_url": "https://api.github.com/users/zhishupp/following{/other_user}", "gists_url": "https://api.github.com/users/zhishupp/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhishupp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhishupp/subscriptions", "organizations_url": "https://api.github.com/users/zhishupp/orgs", "repos_url": "https://api.github.com/users/zhishupp/repos", "events_url": "https://api.github.com/users/zhishupp/events{/privacy}", "received_events_url": "https://api.github.com/users/zhishupp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-26T02:12:10Z", "updated_at": "2017-08-29T01:54:19Z", "closed_at": "2017-08-27T14:03:20Z", "author_association": "NONE", "body": "for example, format like this, just adjust the indent, not change key's orders\r\n\r\n```js\r\n{\r\n\t\"arp table\":\t[{\r\n\t\t\t\"Bucket\":\t88,\r\n\t\t\t\"IPv4\":\t\"1.0.0.1\",\r\n\t\t\t\"MAC\":\t\"83:84:D4:D8:C6:AA\",\r\n\t\t\t\"Expire\":\t\"static\"\r\n\t\t}, {\r\n\t\t\t\"Bucket\":\t998,\r\n\t\t\t\"IPv4\":\t\"1.0.0.2\",\r\n\t\t\t\"MAC\":\t\"83:84:D4:D8:C6:BB\",\r\n\t\t\t\"Expire\":\t\"static\"\r\n\t\t}]\r\n}\r\n\r\n```\r\n\r\n```js\r\n{\r\n    \"arp table\": [\r\n        {\r\n            \"Bucket\": 88,\r\n            \"IPv4\": \"1.0.0.1\",\r\n            \"MAC\": \"83:84:D4:D8:C6:AA\",\r\n            \"Expire\": \"static\"\r\n        },\r\n        {\r\n            \"Bucket\": 998,\r\n            \"IPv4\": \"1.0.0.2\",\r\n            \"MAC\": \"83:84:D4:D8:C6:BB\",\r\n            \"Expire\": \"static\"\r\n        }\r\n    ]\r\n}\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/712", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/712/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/712/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/712/events", "html_url": "https://github.com/nlohmann/json/issues/712", "id": 253039185, "node_id": "MDU6SXNzdWUyNTMwMzkxODU=", "number": 712, "title": "Serialization of array of not same model items", "user": {"login": "Haaxor1689", "id": 25706343, "node_id": "MDQ6VXNlcjI1NzA2MzQz", "avatar_url": "https://avatars0.githubusercontent.com/u/25706343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Haaxor1689", "html_url": "https://github.com/Haaxor1689", "followers_url": "https://api.github.com/users/Haaxor1689/followers", "following_url": "https://api.github.com/users/Haaxor1689/following{/other_user}", "gists_url": "https://api.github.com/users/Haaxor1689/gists{/gist_id}", "starred_url": "https://api.github.com/users/Haaxor1689/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Haaxor1689/subscriptions", "organizations_url": "https://api.github.com/users/Haaxor1689/orgs", "repos_url": "https://api.github.com/users/Haaxor1689/repos", "events_url": "https://api.github.com/users/Haaxor1689/events{/privacy}", "received_events_url": "https://api.github.com/users/Haaxor1689/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-25T23:20:02Z", "updated_at": "2017-08-26T18:12:19Z", "closed_at": "2017-08-26T18:12:19Z", "author_association": "NONE", "body": "When trying to serialize json string that contains array of elements that have a different model, serialization throws first time it encounters a different type for the same key. Simplified example of my situation is below:\r\n\r\n```json\r\n[\r\n  {\r\n    \"id\": 0,\r\n    \"name\": \"adsad\"\r\n  },\r\n  {\r\n    \"id\": \"123\",\r\n    \"name\": \"aawew\"\r\n  }\r\n]\r\n```\r\n\r\nIs there a way to parse such json string?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/711", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/711/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/711/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/711/events", "html_url": "https://github.com/nlohmann/json/issues/711", "id": 252846000, "node_id": "MDU6SXNzdWUyNTI4NDYwMDA=", "number": 711, "title": "pointer to json parse vector", "user": {"login": "kessero", "id": 16817789, "node_id": "MDQ6VXNlcjE2ODE3Nzg5", "avatar_url": "https://avatars0.githubusercontent.com/u/16817789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kessero", "html_url": "https://github.com/kessero", "followers_url": "https://api.github.com/users/kessero/followers", "following_url": "https://api.github.com/users/kessero/following{/other_user}", "gists_url": "https://api.github.com/users/kessero/gists{/gist_id}", "starred_url": "https://api.github.com/users/kessero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kessero/subscriptions", "organizations_url": "https://api.github.com/users/kessero/orgs", "repos_url": "https://api.github.com/users/kessero/repos", "events_url": "https://api.github.com/users/kessero/events{/privacy}", "received_events_url": "https://api.github.com/users/kessero/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-08-25T09:29:48Z", "updated_at": "2017-08-29T16:09:16Z", "closed_at": "2017-08-29T16:04:43Z", "author_association": "NONE", "body": "My main:\r\n```cpp\r\nint main(int argc, char *argv[])\r\n{\r\n  // read a JSON file\r\n  std::stringstream ss;\r\n  std::ifstream i(\"filee.json\");\r\n  json j_complete = json::parse(i);\r\n  std::vector < int > data_send_to_LED;\r\n  for (int i =0; i<j_complete[\"tablica\"].size(); i++){\r\n    data_send_to_LED.push_back(j_complete[\"tablica\"][i].get<int>());\r\n  }\r\n  for (int i =0; i<data_send_to_LED.size(); i++){\r\n    cout <<\"data send: \"<< data_send_to_LED[i]<<endl;\r\n  }\r\n  json j_vec(data_send_to_LED);\r\n  long int pv = j_vec.get_ptr<json::number_integer_t*>();\r\n  cout << j_vec.size() << endl;\r\n  cout << j_vec << endl;\r\n  cout << pv << endl;\r\n...\r\nn = write(sockfd,pv, j_vec.size()+1);\r\n```\r\n\r\nIn general I want to send the contents of the file.json file to the server which accepts data in json format.\r\nJ_vec shows -  [192,0,0,1,0,0,1,0,84,76,126]\r\nPv.size shows 11 elements and this is OK \r\npv shows 0\r\nand n returns bad address?\r\nI can skip the vector in the program and send the data directly form file.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/709", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/709/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/709/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/709/events", "html_url": "https://github.com/nlohmann/json/issues/709", "id": 252600165, "node_id": "MDU6SXNzdWUyNTI2MDAxNjU=", "number": 709, "title": "Gtest SEH Exception", "user": {"login": "SimonEbner", "id": 570249, "node_id": "MDQ6VXNlcjU3MDI0OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/570249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonEbner", "html_url": "https://github.com/SimonEbner", "followers_url": "https://api.github.com/users/SimonEbner/followers", "following_url": "https://api.github.com/users/SimonEbner/following{/other_user}", "gists_url": "https://api.github.com/users/SimonEbner/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonEbner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonEbner/subscriptions", "organizations_url": "https://api.github.com/users/SimonEbner/orgs", "repos_url": "https://api.github.com/users/SimonEbner/repos", "events_url": "https://api.github.com/users/SimonEbner/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonEbner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-08-24T13:23:29Z", "updated_at": "2017-08-25T09:45:06Z", "closed_at": "2017-08-24T14:12:04Z", "author_association": "NONE", "body": "Running the following test using GTest causes an SEH Exception for me using VS 2017 / gcc 5.4\r\n```cpp\r\nTEST(foo, fail1)\r\n{\r\n    auto obj = json{ {\"foo\", \"bar\"} };\r\n    ASSERT_THAT(obj, Eq(obj));\r\n}\r\n\r\nMATCHER(IsFooObject, \"\")\r\n{\r\n    return arg == json{ { \"foo\", \"bar\" } };\r\n}\r\n\r\nTEST(foo, fail2)\r\n{\r\n    auto obj = json{ { \"foo\", \"bar\" } };\r\n    ASSERT_THAT(obj, IsFooObject());\r\n}\r\n```\r\n\r\nThese 'simpler' tests, however, work fine. \r\n\r\n```cpp\r\nTEST(foo, success1)\r\n{\r\n    auto obj = json{ { \"foo\", \"bar\" } };\r\n    ASSERT_EQ(obj, obj);\r\n}\r\n\r\nTEST(foo, success2)\r\n{\r\n    auto obj = json{ { \"foo\", \"bar\" } };\r\n    ASSERT_TRUE(obj == obj);\r\n}\r\n```\r\n\r\nI could not find any information on how to make json.hpp together with Gtest work. Is there a chance to make custom matchers (MATCHER_P) work?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/707", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/707/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/707/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/707/events", "html_url": "https://github.com/nlohmann/json/issues/707", "id": 252094447, "node_id": "MDU6SXNzdWUyNTIwOTQ0NDc=", "number": 707, "title": "broken from_json implementation for pair and tuple ", "user": {"login": "theodelrieu", "id": 15652306, "node_id": "MDQ6VXNlcjE1NjUyMzA2", "avatar_url": "https://avatars1.githubusercontent.com/u/15652306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theodelrieu", "html_url": "https://github.com/theodelrieu", "followers_url": "https://api.github.com/users/theodelrieu/followers", "following_url": "https://api.github.com/users/theodelrieu/following{/other_user}", "gists_url": "https://api.github.com/users/theodelrieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/theodelrieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theodelrieu/subscriptions", "organizations_url": "https://api.github.com/users/theodelrieu/orgs", "repos_url": "https://api.github.com/users/theodelrieu/repos", "events_url": "https://api.github.com/users/theodelrieu/events{/privacy}", "received_events_url": "https://api.github.com/users/theodelrieu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "theodelrieu", "id": 15652306, "node_id": "MDQ6VXNlcjE1NjUyMzA2", "avatar_url": "https://avatars1.githubusercontent.com/u/15652306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theodelrieu", "html_url": "https://github.com/theodelrieu", "followers_url": "https://api.github.com/users/theodelrieu/followers", "following_url": "https://api.github.com/users/theodelrieu/following{/other_user}", "gists_url": "https://api.github.com/users/theodelrieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/theodelrieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theodelrieu/subscriptions", "organizations_url": "https://api.github.com/users/theodelrieu/orgs", "repos_url": "https://api.github.com/users/theodelrieu/repos", "events_url": "https://api.github.com/users/theodelrieu/events{/privacy}", "received_events_url": "https://api.github.com/users/theodelrieu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "theodelrieu", "id": 15652306, "node_id": "MDQ6VXNlcjE1NjUyMzA2", "avatar_url": "https://avatars1.githubusercontent.com/u/15652306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theodelrieu", "html_url": "https://github.com/theodelrieu", "followers_url": "https://api.github.com/users/theodelrieu/followers", "following_url": "https://api.github.com/users/theodelrieu/following{/other_user}", "gists_url": "https://api.github.com/users/theodelrieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/theodelrieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theodelrieu/subscriptions", "organizations_url": "https://api.github.com/users/theodelrieu/orgs", "repos_url": "https://api.github.com/users/theodelrieu/repos", "events_url": "https://api.github.com/users/theodelrieu/events{/privacy}", "received_events_url": "https://api.github.com/users/theodelrieu/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 2, "created_at": "2017-08-22T21:26:30Z", "updated_at": "2017-08-24T10:40:49Z", "closed_at": "2017-08-24T10:40:17Z", "author_association": "CONTRIBUTOR", "body": "I just realized that I introduced a bug in the develop branch.\r\n\r\nThe tests pass, because I forgot to add a test that retrieves a `pair` and a `tuple`...\r\nThat's really shameful, but luckily we haven't released yet.\r\n\r\n```cpp\r\n// no need for variadic here by the way\r\ntemplate<typename BasicJsonType, typename... Args>\r\nvoid from_json(const BasicJsonType& j, std::pair<Args...>& p)\r\n{\r\n    // broken, must use at().get<>()\r\n    p = {j.at(0), j.at(1)};\r\n}\r\n\r\ntemplate<typename BasicJsonType, typename Tuple, std::size_t... Idx>\r\nvoid from_json_tuple_impl(const BasicJsonType& j, Tuple& t, index_sequence<Idx...>)\r\n{\r\n    // same thing here\r\n    t = std::make_tuple(j.at(Idx)...);\r\n}\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/705", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/705/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/705/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/705/events", "html_url": "https://github.com/nlohmann/json/issues/705", "id": 251982543, "node_id": "MDU6SXNzdWUyNTE5ODI1NDM=", "number": 705, "title": "Unevaluated lambda in assert breaks gcc 7 build", "user": {"login": "chuckatkins", "id": 320135, "node_id": "MDQ6VXNlcjMyMDEzNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/320135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chuckatkins", "html_url": "https://github.com/chuckatkins", "followers_url": "https://api.github.com/users/chuckatkins/followers", "following_url": "https://api.github.com/users/chuckatkins/following{/other_user}", "gists_url": "https://api.github.com/users/chuckatkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/chuckatkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chuckatkins/subscriptions", "organizations_url": "https://api.github.com/users/chuckatkins/orgs", "repos_url": "https://api.github.com/users/chuckatkins/repos", "events_url": "https://api.github.com/users/chuckatkins/events{/privacy}", "received_events_url": "https://api.github.com/users/chuckatkins/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-08-22T14:45:59Z", "updated_at": "2017-08-26T07:06:04Z", "closed_at": "2017-08-22T19:54:51Z", "author_association": "CONTRIBUTOR", "body": "```\r\n$ cmake ../../source/devel\r\n-- The CXX compiler identification is GNU 7.1.1\r\n-- Check for working CXX compiler: /usr/bin/c++\r\n-- Check for working CXX compiler: /usr/bin/c++ -- works\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Detecting CXX compile features\r\n-- Detecting CXX compile features - done\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /home/chuckatkins/Code/nljson/build/devel\r\n$ make\r\nScanning dependencies of target catch_main\r\n[  2%] Building CXX object test/CMakeFiles/catch_main.dir/src/unit.cpp.o\r\n[  2%] Built target catch_main\r\nScanning dependencies of target json_unit\r\n[  5%] Building CXX object test/CMakeFiles/json_unit.dir/src/unit-algorithms.cpp.o\r\nIn file included from /usr/include/c++/7/cassert:44:0,\r\n                 from /home/chuckatkins/Code/nljson/source/devel/src/json.hpp:34,\r\n                 from /home/chuckatkins/Code/nljson/source/devel/test/src/unit-algorithms.cpp:31:\r\n/home/chuckatkins/Code/nljson/source/devel/src/json.hpp: In constructor \u2018nlohmann::detail::input_adapter::input_adapter(IteratorType, IteratorType)\u2019:\r\n/home/chuckatkins/Code/nljson/source/devel/src/json.hpp:1500:20: error: lambda-expression in unevaluated context\r\n                    [&first](std::pair<bool, int> res, decltype(*first) val)\r\n                    ^\r\nmake[2]: *** [test/CMakeFiles/json_unit.dir/build.make:63: test/CMakeFiles/json_unit.dir/src/unit-algorithms.cpp.o] Error 1\r\nmake[1]: *** [CMakeFiles/Makefile2:88: test/CMakeFiles/json_unit.dir/all] Error 2\r\nmake: *** [Makefile:141: all] Error 2\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/704", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/704/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/704/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/704/events", "html_url": "https://github.com/nlohmann/json/issues/704", "id": 251948470, "node_id": "MDU6SXNzdWUyNTE5NDg0NzA=", "number": 704, "title": "Issues when adding values to firebase database", "user": {"login": "jussihi", "id": 25184163, "node_id": "MDQ6VXNlcjI1MTg0MTYz", "avatar_url": "https://avatars0.githubusercontent.com/u/25184163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jussihi", "html_url": "https://github.com/jussihi", "followers_url": "https://api.github.com/users/jussihi/followers", "following_url": "https://api.github.com/users/jussihi/following{/other_user}", "gists_url": "https://api.github.com/users/jussihi/gists{/gist_id}", "starred_url": "https://api.github.com/users/jussihi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jussihi/subscriptions", "organizations_url": "https://api.github.com/users/jussihi/orgs", "repos_url": "https://api.github.com/users/jussihi/repos", "events_url": "https://api.github.com/users/jussihi/events{/privacy}", "received_events_url": "https://api.github.com/users/jussihi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-08-22T13:00:25Z", "updated_at": "2017-08-22T15:37:14Z", "closed_at": "2017-08-22T15:37:11Z", "author_association": "NONE", "body": "Hello, I'm having some issues adding values to a firebase database using this json library.\r\n\r\nThe test[\"pi\"] adds into the firebase very well, but then when I try to add the test[\"pia\"][\"pia\"] it responds with a  \"error\" : \"Invalid data; couldn't parse JSON object, array, or value.\"\r\n\r\nHere is my code:\r\n\r\n    `json test;\r\n     test[\"pi\"] = 1.41;\r\n     test[\"pia\"][\"pia\"] = 2.0; \r\n     CURLcode res;\r\n     struct curl_slist *headers = NULL;\r\n     headers = curl_slist_append(headers, \"Content-Type: application/json\");\r\n     curl_easy_setopt(curl, CURLOPT_HTTPHEADER, headers);\r\n     curl_easy_setopt(curl, CURLOPT_URL, \"https://aaaa.firebaseio.com/bbbb.json\");\r\n     curl_easy_setopt(curl, CURLOPT_CUSTOMREQUEST, \"PUT\");\r\n     curl_easy_setopt(curl, CURLOPT_POSTFIELDS, moi.dump());\r\n     res = curl_easy_perform(curl);\r\n     std::cout << res << std::endl;\r\n     curl_slist_free_all(headers);\r\n     curl_easy_cleanup(curl);`"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/703", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/703/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/703/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/703/events", "html_url": "https://github.com/nlohmann/json/issues/703", "id": 251944697, "node_id": "MDU6SXNzdWUyNTE5NDQ2OTc=", "number": 703, "title": "Floating point equality - revisited", "user": {"login": "cburlacu", "id": 16290467, "node_id": "MDQ6VXNlcjE2MjkwNDY3", "avatar_url": "https://avatars0.githubusercontent.com/u/16290467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cburlacu", "html_url": "https://github.com/cburlacu", "followers_url": "https://api.github.com/users/cburlacu/followers", "following_url": "https://api.github.com/users/cburlacu/following{/other_user}", "gists_url": "https://api.github.com/users/cburlacu/gists{/gist_id}", "starred_url": "https://api.github.com/users/cburlacu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cburlacu/subscriptions", "organizations_url": "https://api.github.com/users/cburlacu/orgs", "repos_url": "https://api.github.com/users/cburlacu/repos", "events_url": "https://api.github.com/users/cburlacu/events{/privacy}", "received_events_url": "https://api.github.com/users/cburlacu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}, {"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 14, "created_at": "2017-08-22T12:47:03Z", "updated_at": "2017-08-30T11:52:08Z", "closed_at": "2017-08-30T11:52:08Z", "author_association": "NONE", "body": "This is related to #185. I know that comparing floats implementation is a delicate subject, but the current behavior can be improved.\r\n\r\nSuppose this code (suppose no errors occurs):\r\n```cpp\r\n    using json = nlohmann::json;\r\n    json j1, j2;\r\n    j1[\"test_double\"] = 3.12345;\r\n    j1[\"test_string\"] = \"test string\";\r\n    j1[\"test_array\"] = (std::vector<int>){12345, 12346, 2345, 23456, 3456, 4567, 5678, 6789};\r\n    j1[\"test_float\"] = 3.123f;\r\n\r\n    j2 = json::parse(j1.dump());\r\n\r\n    json::iterator it = j1.begin();\r\n    bool areEqual = true;\r\n\r\n    for( ; it != j1.end(); ++it) {\r\n        auto otherVal = j2[it.key()];\r\n        auto thisVal = it.value();\r\n        if(otherVal != thisVal) {\r\n            areEqual = false;\r\n            break;\r\n        }\r\n    }\r\n```\r\nWhen the float properties are compared, the result is false which is not what I was expecting.\r\n```cpp\r\n                case value_t::number_float:\r\n                    return (lhs.m_value.number_float == rhs.m_value.number_float);\r\n```\r\nthis comparison translates to 3.123f as:\r\n**_lhs = 3.1229999065399201\r\nrhs = 3.122999906539917_**\r\n\r\nTested both on Ubuntu 17.04 & macOS Sierra with same results.\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/702", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/702/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/702/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/702/events", "html_url": "https://github.com/nlohmann/json/issues/702", "id": 251526905, "node_id": "MDU6SXNzdWUyNTE1MjY5MDU=", "number": 702, "title": "Conversion from valarray<double> to json fails to build", "user": {"login": "popizdeh", "id": 1608656, "node_id": "MDQ6VXNlcjE2MDg2NTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1608656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popizdeh", "html_url": "https://github.com/popizdeh", "followers_url": "https://api.github.com/users/popizdeh/followers", "following_url": "https://api.github.com/users/popizdeh/following{/other_user}", "gists_url": "https://api.github.com/users/popizdeh/gists{/gist_id}", "starred_url": "https://api.github.com/users/popizdeh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popizdeh/subscriptions", "organizations_url": "https://api.github.com/users/popizdeh/orgs", "repos_url": "https://api.github.com/users/popizdeh/repos", "events_url": "https://api.github.com/users/popizdeh/events{/privacy}", "received_events_url": "https://api.github.com/users/popizdeh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 3, "created_at": "2017-08-21T00:54:23Z", "updated_at": "2017-08-23T14:24:18Z", "closed_at": "2017-08-23T14:24:18Z", "author_association": "NONE", "body": "There seems to be a regression from 2.0.8 and 2.1.1. This no longer compiles.\r\n\r\n```cpp\r\nstd::valarray<double> v;\r\nnlohmann::json j;\r\nj[\"test\"] = v;\r\n```\r\n\r\nP.S. Is there any chance we can get a release with std::vector<bool> fix released?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/701", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/701/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/701/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/701/events", "html_url": "https://github.com/nlohmann/json/issues/701", "id": 250567537, "node_id": "MDU6SXNzdWUyNTA1Njc1Mzc=", "number": 701, "title": "internal compiler error (gcc7) ", "user": {"login": "nacrooks", "id": 2697885, "node_id": "MDQ6VXNlcjI2OTc4ODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/2697885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nacrooks", "html_url": "https://github.com/nacrooks", "followers_url": "https://api.github.com/users/nacrooks/followers", "following_url": "https://api.github.com/users/nacrooks/following{/other_user}", "gists_url": "https://api.github.com/users/nacrooks/gists{/gist_id}", "starred_url": "https://api.github.com/users/nacrooks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nacrooks/subscriptions", "organizations_url": "https://api.github.com/users/nacrooks/orgs", "repos_url": "https://api.github.com/users/nacrooks/repos", "events_url": "https://api.github.com/users/nacrooks/events{/privacy}", "received_events_url": "https://api.github.com/users/nacrooks/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-16T09:39:16Z", "updated_at": "2017-08-16T19:52:48Z", "closed_at": "2017-08-16T19:52:48Z", "author_association": "NONE", "body": "After dealing with the \"using namespace std\", I receive the following error when compiling json.hpp\r\n\r\n/media/ncrooks/Data/Documents/PhD/morty/src/util/json.hpp: In instantiation of \u2018static nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::string_t nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::escape_string(const string_t&) [with ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::adl_serializer; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::string_t = std::__cxx11::basic_string<char>]\u2019:\r\n/media/ncrooks/Data/Documents/PhD/morty/src/util/json.hpp:8449:39:   required from \u2018void nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::dump(std::ostream&, bool, unsigned int, unsigned int) const [with ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::adl_serializer; std::ostream = std::basic_ostream<char>]\u2019\r\n/media/ncrooks/Data/Documents/PhD/morty/src/util/json.hpp:2653:17:   required from \u2018nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::string_t nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::dump(int) const [with ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::adl_serializer; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::string_t = std::__cxx11::basic_string<char>]\u2019\r\n/media/ncrooks/Data/Documents/PhD/morty/src/util/json.hpp:12951:25:   required from here\r\n/media/ncrooks/Data/Documents/PhD/morty/src/util/json.hpp:8228:25: internal compiler error: in type_unification_real, at cp/pt.c:19128\r\n                         for (const char m :\r\n                         ^~~\r\n0x5f8748 type_unification_real\r\n\t../../src/gcc/cp/pt.c:19128\r\n0x5dfcb3 do_auto_deduction(tree_node*, tree_node*, tree_node*, int, auto_deduction_context, tree_node*, int)\r\n\t../../src/gcc/cp/pt.c:25417\r\n0x5e0375 do_auto_deduction(tree_node*, tree_node*, tree_node*)\r\n\t../../src/gcc/cp/pt.c:25309\r\n0x6297a3 build_range_temp\r\n\t../../src/gcc/cp/parser.c:11585\r\n0x631485 cp_convert_range_for(tree_node*, tree_node*, tree_node*, tree_node*, unsigned int, bool)\r\n\t../../src/gcc/cp/parser.c:11682\r\n0x5e7364 tsubst_expr(tree_node*, tree_node*, int, tree_node*, bool)\r\n\t../../src/gcc/cp/pt.c:15880\r\n0x5e7bc5 tsubst_expr(tree_node*, tree_node*, int, tree_node*, bool)\r\n\t../../src/gcc/cp/pt.c:15719\r\n0x5e7a5b tsubst_expr(tree_node*, tree_node*, int, tree_node*, bool)\r\n\t../../src/gcc/cp/pt.c:15945\r\n0x5e85d5 tsubst_expr(tree_node*, tree_node*, int, tree_node*, bool)\r\n\t../../src/gcc/cp/pt.c:15915\r\n0x5e7bc5 tsubst_expr(tree_node*, tree_node*, int, tree_node*, bool)\r\n\t../../src/gcc/cp/pt.c:15719\r\n0x5e7a5b tsubst_expr(tree_node*, tree_node*, int, tree_node*, bool)\r\n\t../../src/gcc/cp/pt.c:15945\r\n0x5e7bc5 tsubst_expr(tree_node*, tree_node*, int, tree_node*, bool)\r\n\t../../src/gcc/cp/pt.c:15719\r\n0x5e7a5b tsubst_expr(tree_node*, tree_node*, int, tree_node*, bool)\r\n\t../../src/gcc/cp/pt.c:15945\r\n0x5e7b3c tsubst_expr(tree_node*, tree_node*, int, tree_node*, bool)\r\n\t../../src/gcc/cp/pt.c:15965\r\n0x5e737e tsubst_expr(tree_node*, tree_node*, int, tree_node*, bool)\r\n\t../../src/gcc/cp/pt.c:15882\r\n0x5e7bc5 tsubst_expr(tree_node*, tree_node*, int, tree_node*, bool)\r\n\t../../src/gcc/cp/pt.c:15719\r\n0x5e7a5b tsubst_expr(tree_node*, tree_node*, int, tree_node*, bool)\r\n\t../../src/gcc/cp/pt.c:15945\r\n0x5e61f2 instantiate_decl(tree_node*, bool, bool)\r\n\t../../src/gcc/cp/pt.c:22897\r\n0x5ff45b instantiate_pending_templates(int)\r\n\t../../src/gcc/cp/pt.c:23018\r\n0x61f250 c_parse_final_cleanups()\r\n\t../../src/gcc/cp/decl2.c:4526\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nPlease include the complete backtrace with any bug report.\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/698", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/698/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/698/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/698/events", "html_url": "https://github.com/nlohmann/json/issues/698", "id": 249893508, "node_id": "MDU6SXNzdWUyNDk4OTM1MDg=", "number": 698, "title": "One build system to rule them all", "user": {"login": "theodelrieu", "id": 15652306, "node_id": "MDQ6VXNlcjE1NjUyMzA2", "avatar_url": "https://avatars1.githubusercontent.com/u/15652306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theodelrieu", "html_url": "https://github.com/theodelrieu", "followers_url": "https://api.github.com/users/theodelrieu/followers", "following_url": "https://api.github.com/users/theodelrieu/following{/other_user}", "gists_url": "https://api.github.com/users/theodelrieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/theodelrieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theodelrieu/subscriptions", "organizations_url": "https://api.github.com/users/theodelrieu/orgs", "repos_url": "https://api.github.com/users/theodelrieu/repos", "events_url": "https://api.github.com/users/theodelrieu/events{/privacy}", "received_events_url": "https://api.github.com/users/theodelrieu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 16, "created_at": "2017-08-13T19:25:33Z", "updated_at": "2017-10-05T17:50:48Z", "closed_at": "2017-10-05T17:50:48Z", "author_association": "CONTRIBUTOR", "body": "Right now, we have mainly two ways of building the library (i.e. tests):\r\n\r\n* Makefile\r\n* CMake\r\n\r\nThere is also a `meson.build` file, which only provides support for meson users, so they don't have to rely on a wrap.\r\n\r\nThere are some issues with the `CMakeLists.txt` (as #695 shows. I also personally have to clean my build folder each time to regenerate the precompiled header on Linux)\r\n\r\nThere are also targets that are only available in the Makefile (e.g. `make pretty`)\r\n\r\nI think we should adopt a single build system, I will soon need to add a target to amalgamate the library after we split the monolithic `json.hpp`, and I don't know if I should add it only in the Makefile, the CMakeLists.txt etc...\r\n\r\nRewriting everything would not take very long, since this is not a huge project.\r\n\r\nWhat do people think?\r\n\r\nMy personal preference would go towards Meson, but we could also simply rewrite the CMake to be more in phase with what people call \"modern CMake\"."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/695", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/695/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/695/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/695/events", "html_url": "https://github.com/nlohmann/json/issues/695", "id": 249644740, "node_id": "MDU6SXNzdWUyNDk2NDQ3NDA=", "number": 695, "title": "Generated nlohmann_jsonConfig.cmake does not set JSON_INCLUDE_DIR", "user": {"login": "matthewOConnell", "id": 14332029, "node_id": "MDQ6VXNlcjE0MzMyMDI5", "avatar_url": "https://avatars0.githubusercontent.com/u/14332029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewOConnell", "html_url": "https://github.com/matthewOConnell", "followers_url": "https://api.github.com/users/matthewOConnell/followers", "following_url": "https://api.github.com/users/matthewOConnell/following{/other_user}", "gists_url": "https://api.github.com/users/matthewOConnell/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewOConnell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewOConnell/subscriptions", "organizations_url": "https://api.github.com/users/matthewOConnell/orgs", "repos_url": "https://api.github.com/users/matthewOConnell/repos", "events_url": "https://api.github.com/users/matthewOConnell/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewOConnell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 304694104, "node_id": "MDU6TGFiZWwzMDQ2OTQxMDQ=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20please%20discuss", "name": "state: please discuss", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-08-11T14:01:01Z", "updated_at": "2017-08-29T16:04:21Z", "closed_at": "2017-08-29T16:04:21Z", "author_association": "NONE", "body": "Looks like CMake refactoring in f434942 clipped setting `JSON_INCLUDE_DIR`.  This breaks `find_package(nlohmann_json)`  and finding the correct header location."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/694", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/694/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/694/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/694/events", "html_url": "https://github.com/nlohmann/json/issues/694", "id": 249596634, "node_id": "MDU6SXNzdWUyNDk1OTY2MzQ=", "number": 694, "title": "support the Chinese language in json string", "user": {"login": "yuanhui2015", "id": 13148268, "node_id": "MDQ6VXNlcjEzMTQ4MjY4", "avatar_url": "https://avatars0.githubusercontent.com/u/13148268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuanhui2015", "html_url": "https://github.com/yuanhui2015", "followers_url": "https://api.github.com/users/yuanhui2015/followers", "following_url": "https://api.github.com/users/yuanhui2015/following{/other_user}", "gists_url": "https://api.github.com/users/yuanhui2015/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuanhui2015/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuanhui2015/subscriptions", "organizations_url": "https://api.github.com/users/yuanhui2015/orgs", "repos_url": "https://api.github.com/users/yuanhui2015/repos", "events_url": "https://api.github.com/users/yuanhui2015/events{/privacy}", "received_events_url": "https://api.github.com/users/yuanhui2015/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2017-08-11T10:32:37Z", "updated_at": "2018-03-22T16:34:35Z", "closed_at": "2017-08-11T11:01:11Z", "author_association": "NONE", "body": "new version doesn't support the Chinese language in json string, I has been fixed. please see the attachment."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/693", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/693/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/693/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/693/events", "html_url": "https://github.com/nlohmann/json/issues/693", "id": 249532366, "node_id": "MDU6SXNzdWUyNDk1MzIzNjY=", "number": 693, "title": "NaN problem within develop branch", "user": {"login": "zenfey", "id": 6791543, "node_id": "MDQ6VXNlcjY3OTE1NDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6791543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zenfey", "html_url": "https://github.com/zenfey", "followers_url": "https://api.github.com/users/zenfey/followers", "following_url": "https://api.github.com/users/zenfey/following{/other_user}", "gists_url": "https://api.github.com/users/zenfey/gists{/gist_id}", "starred_url": "https://api.github.com/users/zenfey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zenfey/subscriptions", "organizations_url": "https://api.github.com/users/zenfey/orgs", "repos_url": "https://api.github.com/users/zenfey/repos", "events_url": "https://api.github.com/users/zenfey/events{/privacy}", "received_events_url": "https://api.github.com/users/zenfey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-11T03:43:19Z", "updated_at": "2017-08-12T10:07:23Z", "closed_at": "2017-08-12T09:02:14Z", "author_association": "NONE", "body": "Library json is a very nice and foregoing work. \r\n\r\nI noticed that develop branch made effort on the bug of NaN and INF problem. however after deserialization of a serialized json object containing nan, an exception is throwed. binary serialization works fine.\r\n\r\n```cpp\r\n#include <json.hpp>\r\n#include <vector>\r\n#include <iostream>\r\n\r\nusing json =  nlohmann::json;\r\n\r\nint main() {\r\n\r\n\tstd::vector<double> a;\r\n\ta.push_back(std::numeric_limits<double>::quiet_NaN());\r\n\ta.push_back(2);\r\n\tjson j;\r\n\tj[\"vec\"] = a;\r\n\tj[\"number\"] = std::numeric_limits<double>::quiet_NaN();\r\n\r\n\tstd::string strj = j.dump();\r\n\r\n\tjson j2 = json::parse(strj);\r\n\r\n\tstd::vector<double> b = j2[\"vec\"];\r\n\tstd::cout << b[0] << std::endl;\r\n\tdouble n = j2[\"number\"];\r\n\tstd::cout << n << std::endl;\r\n\t\r\n\treturn 0;\r\n}\r\n```\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/692", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/692/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/692/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/692/events", "html_url": "https://github.com/nlohmann/json/issues/692", "id": 249510619, "node_id": "MDU6SXNzdWUyNDk1MTA2MTk=", "number": 692, "title": "Please post example of specialization for boost::filesystem", "user": {"login": "solvingj", "id": 8557737, "node_id": "MDQ6VXNlcjg1NTc3Mzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8557737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solvingj", "html_url": "https://github.com/solvingj", "followers_url": "https://api.github.com/users/solvingj/followers", "following_url": "https://api.github.com/users/solvingj/following{/other_user}", "gists_url": "https://api.github.com/users/solvingj/gists{/gist_id}", "starred_url": "https://api.github.com/users/solvingj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solvingj/subscriptions", "organizations_url": "https://api.github.com/users/solvingj/orgs", "repos_url": "https://api.github.com/users/solvingj/repos", "events_url": "https://api.github.com/users/solvingj/events{/privacy}", "received_events_url": "https://api.github.com/users/solvingj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-08-11T00:15:18Z", "updated_at": "2017-08-11T16:26:49Z", "closed_at": "2017-08-11T16:26:49Z", "author_association": "NONE", "body": "You gave an example for boost::optional which was very nice, however i spent some time trying to adapt with no success, here was my best guess.   \r\n\r\n```cpp\r\n  template<>\r\n  struct adl_serializer<boost::filesystem::path>\r\n  {\r\n    static void to_json(json& j, const boost::filesystem::path& path)\r\n    {\r\n      j = path.string();\r\n    }\r\n\r\n    static void from_json(const json& j, boost::filesystem::path& path)\r\n    {\r\n      path = boost::filesystem::path(j);\r\n    }\r\n  };\r\n  \r\n```\r\n\r\nCan you please advise?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/691", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/691/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/691/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/691/events", "html_url": "https://github.com/nlohmann/json/issues/691", "id": 249458286, "node_id": "MDU6SXNzdWUyNDk0NTgyODY=", "number": 691, "title": "Impossible to do an array of composite objects", "user": {"login": "marsvoltero", "id": 7318318, "node_id": "MDQ6VXNlcjczMTgzMTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7318318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marsvoltero", "html_url": "https://github.com/marsvoltero", "followers_url": "https://api.github.com/users/marsvoltero/followers", "following_url": "https://api.github.com/users/marsvoltero/following{/other_user}", "gists_url": "https://api.github.com/users/marsvoltero/gists{/gist_id}", "starred_url": "https://api.github.com/users/marsvoltero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marsvoltero/subscriptions", "organizations_url": "https://api.github.com/users/marsvoltero/orgs", "repos_url": "https://api.github.com/users/marsvoltero/repos", "events_url": "https://api.github.com/users/marsvoltero/events{/privacy}", "received_events_url": "https://api.github.com/users/marsvoltero/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2017-08-10T19:54:02Z", "updated_at": "2017-08-10T20:52:14Z", "closed_at": "2017-08-10T20:52:03Z", "author_association": "NONE", "body": "I need to create a JSon array like this for example:\r\n\r\n```\r\njson j;\r\nj.push_back(\" { { \"objectId\" : 0 } , {\"transfer_data\" : [ {\"transfer_id\" : 0 } , {\"transfer_time\" : 57 } ]  } } \");\r\nj.push_back(\" { { \"objectId\" : 1 } , {\"transfer_data\" : [ {\"transfer_id\" : 1 } , {\"transfer_time\" : 49 } ]  } } \");\r\n```\r\n\r\nBut the push_back function only acept initializer list that contains only two elements.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/690", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/690/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/690/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/690/events", "html_url": "https://github.com/nlohmann/json/issues/690", "id": 249396098, "node_id": "MDU6SXNzdWUyNDkzOTYwOTg=", "number": 690, "title": "How to save json to file?", "user": {"login": "NeverMine17", "id": 23419131, "node_id": "MDQ6VXNlcjIzNDE5MTMx", "avatar_url": "https://avatars2.githubusercontent.com/u/23419131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NeverMine17", "html_url": "https://github.com/NeverMine17", "followers_url": "https://api.github.com/users/NeverMine17/followers", "following_url": "https://api.github.com/users/NeverMine17/following{/other_user}", "gists_url": "https://api.github.com/users/NeverMine17/gists{/gist_id}", "starred_url": "https://api.github.com/users/NeverMine17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NeverMine17/subscriptions", "organizations_url": "https://api.github.com/users/NeverMine17/orgs", "repos_url": "https://api.github.com/users/NeverMine17/repos", "events_url": "https://api.github.com/users/NeverMine17/events{/privacy}", "received_events_url": "https://api.github.com/users/NeverMine17/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-08-10T15:59:08Z", "updated_at": "2017-12-04T21:16:12Z", "closed_at": "2017-08-15T14:55:26Z", "author_association": "NONE", "body": "I'm trying to save json to file and all I'm getting is some weird errors. Any help?\r\nHere is all the info:\r\n\r\n#### *Verison json: 2.1.1*\r\n#### *gcc version 6.3.0 20170618 (Ubuntu 6.3.0-19ubuntu1)*\r\n\r\n## Example code\r\n```cpp\r\n#include \"json.hpp\"\r\nusing jsonf = nlohmann::json;\r\njsonf jsonfile;\r\n\r\n// ...\r\n\r\njsonfile[\"foo\"] = \"bar\";\r\n\r\nstd::fstream file(\"key.json\");\r\nfile << jsonfile;\r\n```\r\n## Error\r\n```\r\njson.hpp:843:9: error: static assertion failed: could not find to_json() method in T's namespace\r\n         static_assert(sizeof(BasicJsonType) == 0,\r\n         ^~~~~~~~~~~~~\r\n\r\njson.hpp:843:9: error: static assertion failed: could not find to_json() method in T's namespace\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/689", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/689/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/689/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/689/events", "html_url": "https://github.com/nlohmann/json/issues/689", "id": 249377051, "node_id": "MDU6SXNzdWUyNDkzNzcwNTE=", "number": 689, "title": "my simple json parser", "user": {"login": "pejman-hkh", "id": 3132990, "node_id": "MDQ6VXNlcjMxMzI5OTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/3132990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pejman-hkh", "html_url": "https://github.com/pejman-hkh", "followers_url": "https://api.github.com/users/pejman-hkh/followers", "following_url": "https://api.github.com/users/pejman-hkh/following{/other_user}", "gists_url": "https://api.github.com/users/pejman-hkh/gists{/gist_id}", "starred_url": "https://api.github.com/users/pejman-hkh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pejman-hkh/subscriptions", "organizations_url": "https://api.github.com/users/pejman-hkh/orgs", "repos_url": "https://api.github.com/users/pejman-hkh/repos", "events_url": "https://api.github.com/users/pejman-hkh/events{/privacy}", "received_events_url": "https://api.github.com/users/pejman-hkh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-10T15:01:37Z", "updated_at": "2017-08-10T16:04:10Z", "closed_at": "2017-08-10T15:19:59Z", "author_association": "NONE", "body": ""}, {"url": "https://api.github.com/repos/nlohmann/json/issues/688", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/688/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/688/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/688/events", "html_url": "https://github.com/nlohmann/json/issues/688", "id": 249278398, "node_id": "MDU6SXNzdWUyNDkyNzgzOTg=", "number": 688, "title": "problem with new struct parsing syntax", "user": {"login": "ykochenkov", "id": 17925342, "node_id": "MDQ6VXNlcjE3OTI1MzQy", "avatar_url": "https://avatars3.githubusercontent.com/u/17925342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ykochenkov", "html_url": "https://github.com/ykochenkov", "followers_url": "https://api.github.com/users/ykochenkov/followers", "following_url": "https://api.github.com/users/ykochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/ykochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/ykochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ykochenkov/subscriptions", "organizations_url": "https://api.github.com/users/ykochenkov/orgs", "repos_url": "https://api.github.com/users/ykochenkov/repos", "events_url": "https://api.github.com/users/ykochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/ykochenkov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-08-10T09:00:07Z", "updated_at": "2017-11-01T10:16:04Z", "closed_at": "2017-11-01T10:16:04Z", "author_association": "NONE", "body": "Hello. \r\nWe wrote a big product with the help of version 2.0.x. With this version we could write serializers like that:\r\n\r\n```cpp\r\nEngineState::EngineState(const json& config) :\r\n\tuserConfig(config.at(\"userConfig\")),\r\n\tpublicConfig(config.at(\"publicConfig\"))\r\n{}\r\n\r\nEngineState::EngineState::operator json() const\r\n{\r\n\treturn{\r\n\t\t{ \"userConfig\", userConfig },\r\n\t\t{ \"publicConfig\", publicConfig },\r\n\t};\r\n}\r\n```\r\n\r\nWith the modern version of library this code is not compiled and to_json and from_json functions required.\r\nIs there a way to fix that problem without rewriting the whole project?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/684", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/684/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/684/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/684/events", "html_url": "https://github.com/nlohmann/json/issues/684", "id": 248973926, "node_id": "MDU6SXNzdWUyNDg5NzM5MjY=", "number": 684, "title": "Parse error while parse the json string contains  UTF 8 encoded document bytes string", "user": {"login": "sivapooja", "id": 30114433, "node_id": "MDQ6VXNlcjMwMTE0NDMz", "avatar_url": "https://avatars2.githubusercontent.com/u/30114433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sivapooja", "html_url": "https://github.com/sivapooja", "followers_url": "https://api.github.com/users/sivapooja/followers", "following_url": "https://api.github.com/users/sivapooja/following{/other_user}", "gists_url": "https://api.github.com/users/sivapooja/gists{/gist_id}", "starred_url": "https://api.github.com/users/sivapooja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sivapooja/subscriptions", "organizations_url": "https://api.github.com/users/sivapooja/orgs", "repos_url": "https://api.github.com/users/sivapooja/repos", "events_url": "https://api.github.com/users/sivapooja/events{/privacy}", "received_events_url": "https://api.github.com/users/sivapooja/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-09T09:41:17Z", "updated_at": "2017-12-04T21:16:23Z", "closed_at": "2017-08-15T14:55:46Z", "author_association": "NONE", "body": "Hi,\r\nI am sending json string with UTF 8 encoded document bytees string from asp.net and receiving the json from c++ program , i am getting parse error while trying to parse the received json string to json object\r\n\r\n```cpp\r\n        string jsonStr = string( body.begin(), body.end() );               \r\n         json j = json::parse(jsonStr);\r\n```\r\n\r\nAsp.net Json string \r\n\r\n```ASP\r\nstring docBytesStr = System.Text.Encoding.UTF8.GetString(docBytes, 0, docBytes.Length);\r\nstring jsonData = \"{ \\\"template\\\" : \\\"1\\\", \\\"doc\\\":\\\"\" + docBytesStr + \"\\\"  }\";\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/683", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/683/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/683/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/683/events", "html_url": "https://github.com/nlohmann/json/issues/683", "id": 248897523, "node_id": "MDU6SXNzdWUyNDg4OTc1MjM=", "number": 683, "title": "[question] how to get a string value by pointer", "user": {"login": "zhishupp", "id": 6071453, "node_id": "MDQ6VXNlcjYwNzE0NTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6071453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhishupp", "html_url": "https://github.com/zhishupp", "followers_url": "https://api.github.com/users/zhishupp/followers", "following_url": "https://api.github.com/users/zhishupp/following{/other_user}", "gists_url": "https://api.github.com/users/zhishupp/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhishupp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhishupp/subscriptions", "organizations_url": "https://api.github.com/users/zhishupp/orgs", "repos_url": "https://api.github.com/users/zhishupp/repos", "events_url": "https://api.github.com/users/zhishupp/events{/privacy}", "received_events_url": "https://api.github.com/users/zhishupp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-08-09T02:14:43Z", "updated_at": "2017-08-10T07:09:58Z", "closed_at": "2017-08-10T07:09:58Z", "author_association": "NONE", "body": "I wrapped a C lib for using json.hpp, like this:\r\n\r\n**json_string = {\"file\":\"/opt/test.conf\"}**\r\n\r\nset json_string to a static json object\r\n\r\n**static json para = json::parse(json_string);**\r\n\r\n`\r\nextern \"C\" const char*   \r\n  \r\nget_json_string()    \r\n\r\n{                       \r\n\r\n    if (para[\"file\"].is_string())     \r\n                \r\n    {                        \r\n\r\n        return para[\"file\"].get<std::string>().c_str();      \r\n               \r\n    }          \r\n             \r\n}\r\n`\r\n\r\nbut actually, get_json_string cannot get the real address of para, so how to get a string value in this way ?\r\n\r\nI don't want to use strcpy like this:\r\n`\r\nget_json_string(char* value)\r\n\r\n{\r\n\r\n    if (para[\"file\"].is_string())\r\n\r\n    {\r\n\r\n        strcpy(value, para[\"file\"].get<std::string>().c_str());\r\n\r\n    }\r\n\r\n}\r\n`\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/681", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/681/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/681/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/681/events", "html_url": "https://github.com/nlohmann/json/issues/681", "id": 248662850, "node_id": "MDU6SXNzdWUyNDg2NjI4NTA=", "number": 681, "title": "create json object from string variable", "user": {"login": "sivapooja", "id": 30114433, "node_id": "MDQ6VXNlcjMwMTE0NDMz", "avatar_url": "https://avatars2.githubusercontent.com/u/30114433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sivapooja", "html_url": "https://github.com/sivapooja", "followers_url": "https://api.github.com/users/sivapooja/followers", "following_url": "https://api.github.com/users/sivapooja/following{/other_user}", "gists_url": "https://api.github.com/users/sivapooja/gists{/gist_id}", "starred_url": "https://api.github.com/users/sivapooja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sivapooja/subscriptions", "organizations_url": "https://api.github.com/users/sivapooja/orgs", "repos_url": "https://api.github.com/users/sivapooja/repos", "events_url": "https://api.github.com/users/sivapooja/events{/privacy}", "received_events_url": "https://api.github.com/users/sivapooja/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-08-08T10:00:12Z", "updated_at": "2017-08-09T04:22:45Z", "closed_at": "2017-08-09T04:22:45Z", "author_association": "NONE", "body": "How to create json object from string variable? i tried to create json object from string variable but doesn't work\r\n\r\n`\r\njson j = jsonStr_json\r\n`\r\n\r\njsonStr is string variable which holds json string."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/680", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/680/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/680/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/680/events", "html_url": "https://github.com/nlohmann/json/issues/680", "id": 248614029, "node_id": "MDU6SXNzdWUyNDg2MTQwMjk=", "number": 680, "title": "adl_serializer and CRTP", "user": {"login": "stevefan1999", "id": 29133953, "node_id": "MDQ6VXNlcjI5MTMzOTUz", "avatar_url": "https://avatars2.githubusercontent.com/u/29133953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stevefan1999", "html_url": "https://github.com/stevefan1999", "followers_url": "https://api.github.com/users/stevefan1999/followers", "following_url": "https://api.github.com/users/stevefan1999/following{/other_user}", "gists_url": "https://api.github.com/users/stevefan1999/gists{/gist_id}", "starred_url": "https://api.github.com/users/stevefan1999/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stevefan1999/subscriptions", "organizations_url": "https://api.github.com/users/stevefan1999/orgs", "repos_url": "https://api.github.com/users/stevefan1999/repos", "events_url": "https://api.github.com/users/stevefan1999/events{/privacy}", "received_events_url": "https://api.github.com/users/stevefan1999/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-08T06:34:43Z", "updated_at": "2017-09-29T08:31:11Z", "closed_at": "2017-09-29T08:31:11Z", "author_association": "NONE", "body": "Because I really hate defining to_json/from_json by using the infamous ADL trick (I come from a C#/Java background so the fame of ADL depends), I decided to make the OOP-way-of-serialization shim of my own\r\n\r\nI was having some progress, the following code demonstrated is a complete valid and legit code:\r\n\r\nIJsonSerializable.hpp:\r\n```C++\r\ntemplate<class T>\r\nstruct IJsonSerializable {\r\n\tusing self_t = IJsonSerializable<T>;\r\n\r\n\tconstexpr void to_json(json &j) const {\r\n\t\tauto self = const_cast<self_t *>(this);\r\n\t\tstatic_cast<T *>(self)->to_json(j);\r\n\t}\r\n\r\n\tconstexpr void from_json(json &j) const {\r\n\t\tauto self = const_cast<self_t *>(this);\r\n\t\tstatic_cast<T *>(self)->from_json(j);\r\n\t}\r\n};\r\n\r\ntemplate <class T>\r\nconstexpr void to_json(json &j, const IJsonSerializable<T> *value) {\r\n\tvalue->to_json(j);\r\n}\r\n\r\ntemplate <class T>\r\nconstexpr void from_json(const json &j, IJsonSerializable<T> *value) {\r\n\tauto _j = const_cast<json &>(j);\r\n\tvalue->from_json(_j);\r\n}\r\n\r\ntemplate <class T>\r\nconstexpr void to_json(json &j, const IJsonSerializable<T> &value) {\r\n\tvalue.to_json(j);\r\n}\r\n\r\ntemplate <class T>\r\nconstexpr void from_json(const json &j, IJsonSerializable<T> &value) {\r\n\tauto _j = const_cast<json &>(j);\r\n\tvalue.from_json(_j);\r\n}\r\n```\r\n\r\nVector3.hpp:\r\n```C++\r\n#include \"IJsonSerializable.h\"\r\n\r\nstruct Vector3 : public IJsonSerializable<Vector3> {\r\n\tfloat x, y, z;\r\n\r\npublic:\r\n\tvoid to_json(json &j)  {\r\n\t\tj = { \r\n\t\t\t{ \"x\", x }, \r\n\t\t\t{ \"y\", y }, \r\n\t\t\t{ \"z\", z} \r\n\t\t};\r\n\t}\r\n\r\n\tvoid from_json(json &j) {\r\n\t\tx = j[\"x\"];\r\n\t\ty = j[\"y\"];\r\n\t\tz = j[\"z\"];\r\n\t}\r\n};\r\n```\r\nThis works pretty much fine for me, but is there any way to rewrite it in the following form?\r\n```C++\r\nnamespace nlohmann {\r\n\ttemplate <class T>\r\n\tstruct adl_serializer<IJsonSerializable<T>> { // not working, should I insert SFINAE here?\r\n\t\tusing self_t = IJsonSerializable<T>;\r\n\r\n\t\tconstexpr void to_json(json &j, const self_t *value) {\r\n\t\t\tvalue->to_json(j);\r\n\t\t}\r\n\r\n\t\tconstexpr void from_json(const json &j, self_t *value) {\r\n\t\t\tauto _j = const_cast<json &>(j);\r\n\t\t\tvalue->from_json(_j);\r\n\t\t}\r\n\r\n\t\tconstexpr void to_json(json &j, const self_t &value) {\r\n\t\t\tvalue.to_json(j);\r\n\t\t}\r\n\r\n\t\tconstexpr void from_json(const json &j, self_t &value) {\r\n\t\t\tauto _j = const_cast<json &>(j);\r\n\t\t\tvalue.from_json(_j);\r\n\t\t}\r\n\t};\r\n}\r\n```\r\nI group all my other serializers into `namespace nlohmann` just to keep it away from polluting my global namespace without creating another namespace of my own."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/677", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/677/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/677/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/677/events", "html_url": "https://github.com/nlohmann/json/issues/677", "id": 248079587, "node_id": "MDU6SXNzdWUyNDgwNzk1ODc=", "number": 677, "title": "Is there a way to control the precision of serialized floating point numbers?", "user": {"login": "gonzalobenegas", "id": 5766420, "node_id": "MDQ6VXNlcjU3NjY0MjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5766420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gonzalobenegas", "html_url": "https://github.com/gonzalobenegas", "followers_url": "https://api.github.com/users/gonzalobenegas/followers", "following_url": "https://api.github.com/users/gonzalobenegas/following{/other_user}", "gists_url": "https://api.github.com/users/gonzalobenegas/gists{/gist_id}", "starred_url": "https://api.github.com/users/gonzalobenegas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gonzalobenegas/subscriptions", "organizations_url": "https://api.github.com/users/gonzalobenegas/orgs", "repos_url": "https://api.github.com/users/gonzalobenegas/repos", "events_url": "https://api.github.com/users/gonzalobenegas/events{/privacy}", "received_events_url": "https://api.github.com/users/gonzalobenegas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-04T18:15:10Z", "updated_at": "2017-08-08T18:24:24Z", "closed_at": "2017-08-08T18:24:24Z", "author_association": "NONE", "body": "I currently see doubles are being serialized with 16 significant figures. Is there any way to serialize them using, say, 6 significant figures?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/676", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/676/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/676/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/676/events", "html_url": "https://github.com/nlohmann/json/issues/676", "id": 248022016, "node_id": "MDU6SXNzdWUyNDgwMjIwMTY=", "number": 676, "title": "Is there a way to get the path of a value?", "user": {"login": "trikkegitaar", "id": 29774698, "node_id": "MDQ6VXNlcjI5Nzc0Njk4", "avatar_url": "https://avatars3.githubusercontent.com/u/29774698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trikkegitaar", "html_url": "https://github.com/trikkegitaar", "followers_url": "https://api.github.com/users/trikkegitaar/followers", "following_url": "https://api.github.com/users/trikkegitaar/following{/other_user}", "gists_url": "https://api.github.com/users/trikkegitaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/trikkegitaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trikkegitaar/subscriptions", "organizations_url": "https://api.github.com/users/trikkegitaar/orgs", "repos_url": "https://api.github.com/users/trikkegitaar/repos", "events_url": "https://api.github.com/users/trikkegitaar/events{/privacy}", "received_events_url": "https://api.github.com/users/trikkegitaar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-04T14:25:13Z", "updated_at": "2017-08-08T16:20:51Z", "closed_at": "2017-08-08T16:20:51Z", "author_association": "NONE", "body": "While traversing the json structure I'd like to fetch the path of a certain value, something like \"/answer/everything\".\r\nIs this possible?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/675", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/675/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/675/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/675/events", "html_url": "https://github.com/nlohmann/json/issues/675", "id": 247909207, "node_id": "MDU6SXNzdWUyNDc5MDkyMDc=", "number": 675, "title": "Could the parser locate errors to line?", "user": {"login": "PinkGabriel", "id": 9349907, "node_id": "MDQ6VXNlcjkzNDk5MDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/9349907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PinkGabriel", "html_url": "https://github.com/PinkGabriel", "followers_url": "https://api.github.com/users/PinkGabriel/followers", "following_url": "https://api.github.com/users/PinkGabriel/following{/other_user}", "gists_url": "https://api.github.com/users/PinkGabriel/gists{/gist_id}", "starred_url": "https://api.github.com/users/PinkGabriel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PinkGabriel/subscriptions", "organizations_url": "https://api.github.com/users/PinkGabriel/orgs", "repos_url": "https://api.github.com/users/PinkGabriel/repos", "events_url": "https://api.github.com/users/PinkGabriel/events{/privacy}", "received_events_url": "https://api.github.com/users/PinkGabriel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-04T05:50:56Z", "updated_at": "2017-08-04T09:17:18Z", "closed_at": "2017-08-04T09:17:18Z", "author_association": "NONE", "body": "hello again~\r\nI use the lib to parse a json file like this:\r\n\r\nstd::ifstream ifs(filename);\r\njson json_input;\r\nifs >> json_input;\r\n\r\nThen I use the json class to do things. But if the input file has syntax error, the parser just reports what the error is, without where the error happens. Is it possible to locate errors to exactly which line the error happens in the json file?\r\nThanks!"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/673", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/673/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/673/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/673/events", "html_url": "https://github.com/nlohmann/json/issues/673", "id": 247117765, "node_id": "MDU6SXNzdWUyNDcxMTc3NjU=", "number": 673, "title": "There is performance inefficiency found by coverity tool json2.1.1/include/nlohmann/json.hpp", "user": {"login": "qinglucich", "id": 26724691, "node_id": "MDQ6VXNlcjI2NzI0Njkx", "avatar_url": "https://avatars3.githubusercontent.com/u/26724691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qinglucich", "html_url": "https://github.com/qinglucich", "followers_url": "https://api.github.com/users/qinglucich/followers", "following_url": "https://api.github.com/users/qinglucich/following{/other_user}", "gists_url": "https://api.github.com/users/qinglucich/gists{/gist_id}", "starred_url": "https://api.github.com/users/qinglucich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qinglucich/subscriptions", "organizations_url": "https://api.github.com/users/qinglucich/orgs", "repos_url": "https://api.github.com/users/qinglucich/repos", "events_url": "https://api.github.com/users/qinglucich/events{/privacy}", "received_events_url": "https://api.github.com/users/qinglucich/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 8, "created_at": "2017-08-01T15:55:30Z", "updated_at": "2017-08-15T19:58:29Z", "closed_at": "2017-08-15T18:40:47Z", "author_association": "NONE", "body": "4063    @since version 1.0.0\r\n4064    */\r\n4065    template<class ValueType, typename std::enable_if<\r\n4066                 std::is_convertible<basic_json_t, ValueType>::value, int>::type = 0>\r\n    \t\r\nCID 10413 (#1 of 1): Big parameter passed by value (PASS_BY_VALUE)\r\npass_by_value: Passing parameter default_value of type cerebras::file_metadata (size 168 bytes) by value.\r\n4067    ValueType value(const typename object_t::key_type& key, ValueType default_value) const\r\n4068    {"}]