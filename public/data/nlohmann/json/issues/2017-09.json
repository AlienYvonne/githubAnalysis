[{"url": "https://api.github.com/repos/nlohmann/json/issues/759", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/759/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/759/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/759/events", "html_url": "https://github.com/nlohmann/json/issues/759", "id": 261595042, "node_id": "MDU6SXNzdWUyNjE1OTUwNDI=", "number": 759, "title": "Cannot load json file properly", "user": {"login": "PowerOfCreation", "id": 24482177, "node_id": "MDQ6VXNlcjI0NDgyMTc3", "avatar_url": "https://avatars2.githubusercontent.com/u/24482177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PowerOfCreation", "html_url": "https://github.com/PowerOfCreation", "followers_url": "https://api.github.com/users/PowerOfCreation/followers", "following_url": "https://api.github.com/users/PowerOfCreation/following{/other_user}", "gists_url": "https://api.github.com/users/PowerOfCreation/gists{/gist_id}", "starred_url": "https://api.github.com/users/PowerOfCreation/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PowerOfCreation/subscriptions", "organizations_url": "https://api.github.com/users/PowerOfCreation/orgs", "repos_url": "https://api.github.com/users/PowerOfCreation/repos", "events_url": "https://api.github.com/users/PowerOfCreation/events{/privacy}", "received_events_url": "https://api.github.com/users/PowerOfCreation/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-29T10:12:07Z", "updated_at": "2017-12-04T21:10:14Z", "closed_at": "2017-10-04T10:00:07Z", "author_association": "NONE", "body": "I couldn't find any example nor documentation on how to load a json file properly. I did it doing so:\r\nifstream myfile(p.path());\r\n```cpp\r\njson j;\r\nj << myfile;\r\ncout << j.at(0) << endl;\r\ncout << j[0] << endl;\r\n```\r\nNeither of those variants do work. I can compile it but I get the error cannot use at() with object and same with the [] operator. Only with a iterator I can actually access my values:\r\n`for (json::iterator it = j.begin(); it != j.end(); ++it) `\r\nBut I can't access the subvalues in any way yet as there are no examples or documentations avaiable.\r\nI tried it in many ways:\r\n```cpp\r\njson j;\r\nj << myfile;\r\nfor (json::iterator it = j.begin(); it != j.end(); ++it) \r\n{\r\n            json k;\r\n            k << it;\r\n            k << it.value();\r\n...\r\n```\r\n Are there any examples how to actually load a json file properly or am I doing something wrong?\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/758", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/758/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/758/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/758/events", "html_url": "https://github.com/nlohmann/json/issues/758", "id": 261401643, "node_id": "MDU6SXNzdWUyNjE0MDE2NDM=", "number": 758, "title": "Compilation error with unordered_map< int, int >", "user": {"login": "giomasce", "id": 101675, "node_id": "MDQ6VXNlcjEwMTY3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/101675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giomasce", "html_url": "https://github.com/giomasce", "followers_url": "https://api.github.com/users/giomasce/followers", "following_url": "https://api.github.com/users/giomasce/following{/other_user}", "gists_url": "https://api.github.com/users/giomasce/gists{/gist_id}", "starred_url": "https://api.github.com/users/giomasce/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giomasce/subscriptions", "organizations_url": "https://api.github.com/users/giomasce/orgs", "repos_url": "https://api.github.com/users/giomasce/repos", "events_url": "https://api.github.com/users/giomasce/events{/privacy}", "received_events_url": "https://api.github.com/users/giomasce/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-28T17:37:31Z", "updated_at": "2017-09-28T17:40:47Z", "closed_at": "2017-09-28T17:40:47Z", "author_association": "NONE", "body": "This might be similar to #734, but I observe different results with different plaftorms, so maybe it is a different thing. On Debian unstable with g++ 7.2.0-7 the following program does not compile:\r\n\r\n```c++\r\n#include <unordered_map>\r\n#include <string>\r\n\r\n#include \"json.h\"\r\n\r\nusing namespace std;\r\nusing json = nlohmann::json;\r\n\r\nint main(int argc, char const *argv[])\r\n{\r\n    json j;\r\n    unordered_map< int, int > m;\r\n    m = j.get<decltype(m)>();\r\n}\r\n```\r\n\r\nHowever, this does work:\r\n\r\n```c++\r\n#include <unordered_map>\r\n#include <string>\r\n\r\n#include \"json.h\"\r\n\r\nusing namespace std;\r\nusing json = nlohmann::json;\r\n\r\nint main(int argc, char const *argv[])\r\n{\r\n    json j;\r\n    unordered_map< string, int > m;\r\n    m = j.get<decltype(m)>();\r\n}\r\n```\r\n\r\nThe only change is `string` instead of `int` in the `unordered_map` template arguments. I tried to go through the template error messages, but my C++ knowledge is not sufficiently advanced. The same happens with clang++ 3.8.1-24, again from Debian unstable."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/757", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/757/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/757/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/757/events", "html_url": "https://github.com/nlohmann/json/issues/757", "id": 261155763, "node_id": "MDU6SXNzdWUyNjExNTU3NjM=", "number": 757, "title": "CBOR string", "user": {"login": "arnaudbrejeon", "id": 21390, "node_id": "MDQ6VXNlcjIxMzkw", "avatar_url": "https://avatars3.githubusercontent.com/u/21390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arnaudbrejeon", "html_url": "https://github.com/arnaudbrejeon", "followers_url": "https://api.github.com/users/arnaudbrejeon/followers", "following_url": "https://api.github.com/users/arnaudbrejeon/following{/other_user}", "gists_url": "https://api.github.com/users/arnaudbrejeon/gists{/gist_id}", "starred_url": "https://api.github.com/users/arnaudbrejeon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arnaudbrejeon/subscriptions", "organizations_url": "https://api.github.com/users/arnaudbrejeon/orgs", "repos_url": "https://api.github.com/users/arnaudbrejeon/repos", "events_url": "https://api.github.com/users/arnaudbrejeon/events{/privacy}", "received_events_url": "https://api.github.com/users/arnaudbrejeon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 571470316, "node_id": "MDU6TGFiZWw1NzE0NzAzMTY=", "url": "https://api.github.com/repos/nlohmann/json/labels/aspect:%20binary%20formats", "name": "aspect: binary formats", "color": "5319e7", "default": false}, {"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-28T00:15:06Z", "updated_at": "2017-11-06T16:21:04Z", "closed_at": "2017-11-06T16:21:04Z", "author_association": "NONE", "body": "I received some CBOR files that contain strings (major type 2) and not UTF-8 strings(major type 3).\r\nIt looks like parsing fails. Is it on purpose?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/756", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/756/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/756/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/756/events", "html_url": "https://github.com/nlohmann/json/issues/756", "id": 261110435, "node_id": "MDU6SXNzdWUyNjExMTA0MzU=", "number": 756, "title": "Proposal: out_of_range should be a subclass of std::out_of_range", "user": {"login": "adityamarella", "id": 706873, "node_id": "MDQ6VXNlcjcwNjg3Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/706873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adityamarella", "html_url": "https://github.com/adityamarella", "followers_url": "https://api.github.com/users/adityamarella/followers", "following_url": "https://api.github.com/users/adityamarella/following{/other_user}", "gists_url": "https://api.github.com/users/adityamarella/gists{/gist_id}", "starred_url": "https://api.github.com/users/adityamarella/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adityamarella/subscriptions", "organizations_url": "https://api.github.com/users/adityamarella/orgs", "repos_url": "https://api.github.com/users/adityamarella/repos", "events_url": "https://api.github.com/users/adityamarella/events{/privacy}", "received_events_url": "https://api.github.com/users/adityamarella/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 3, "created_at": "2017-09-27T20:39:02Z", "updated_at": "2017-10-27T16:35:27Z", "closed_at": "2017-10-27T16:35:19Z", "author_association": "NONE", "body": "https://github.com/nlohmann/json/blob/b05ea3de55d83da56b8b045b9fdb4a53e6397be8/src/json.hpp#L428\r\n\r\nIs there any reason not to inherit `out_of_range` exception from `std::out_of_range`?\r\n\r\nThe current release version v2.1.1 is throwing std::out_of_range but the latest on develop throws custom `out_of_range` exception which could cause backward compatibility issues.\r\n\r\nMy code below was working with v2.1.1 release version, stopped working when I moved to the latest on develop\r\n```\r\ntry {\r\n    json.at(\"xxx\")\r\n} catch(std::out_of_range &e) {\r\n   ...\r\n}\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/755", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/755/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/755/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/755/events", "html_url": "https://github.com/nlohmann/json/issues/755", "id": 260935580, "node_id": "MDU6SXNzdWUyNjA5MzU1ODA=", "number": 755, "title": "Compiling with icpc", "user": {"login": "tdegeus", "id": 7030445, "node_id": "MDQ6VXNlcjcwMzA0NDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7030445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tdegeus", "html_url": "https://github.com/tdegeus", "followers_url": "https://api.github.com/users/tdegeus/followers", "following_url": "https://api.github.com/users/tdegeus/following{/other_user}", "gists_url": "https://api.github.com/users/tdegeus/gists{/gist_id}", "starred_url": "https://api.github.com/users/tdegeus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tdegeus/subscriptions", "organizations_url": "https://api.github.com/users/tdegeus/orgs", "repos_url": "https://api.github.com/users/tdegeus/repos", "events_url": "https://api.github.com/users/tdegeus/events{/privacy}", "received_events_url": "https://api.github.com/users/tdegeus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 706237888, "node_id": "MDU6TGFiZWw3MDYyMzc4ODg=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20icc", "name": "platform: icc", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 17, "created_at": "2017-09-27T11:11:13Z", "updated_at": "2018-01-19T15:18:18Z", "closed_at": "2017-10-04T15:31:12Z", "author_association": "NONE", "body": "I would like to compile with the Intel C++ compiler, in particular this one\r\n\r\n```bash\r\n$ icpc --version\r\nicpc (ICC) 17.0.2 20170213\r\nCopyright (C) 1985-2017 Intel Corporation.  All rights reserved.\r\n```\r\n\r\nBut currently this results in \r\n\r\n```bash\r\n...json.hpp(67): error: #error directive: \"unsupported GCC version - see https://github.com/nlohmann/json#supported-compilers\"\r\n          #error \"unsupported GCC version - see https://github.com/nlohmann/json#supported-compilers\"\r\n```\r\n\r\nWhen I remove the checks, I'm able to successfully compile and run. Compiling with `-Wall -Wextra -pendantic` only results in the following warnings\r\n\r\n```bash\r\n/home/tdegeus/prog/research/avalanches_inertia/json/json.hpp(6323): warning #186: pointless comparison of unsigned integer with zero\r\n          return ((0 <= u and u <= 127) ? 0\r\n                     ^\r\n          detected during:\r\n            instantiation of \"std::size_t={unsigned long} nlohmann::detail::serializer<BasicJsonType>::extra_space(const nlohmann::detail::serializer<BasicJsonType>::string_t &, bool) [with BasicJsonType=nlohmann::basic_json<std::map, std::vector, std::string, bool, int64_t={long}, uint64_t={unsigned long}, double, std::allocator, nlohmann::adl_serializer>]\" at line 6500\r\n            instantiation of \"void nlohmann::detail::serializer<BasicJsonType>::dump_escaped(const nlohmann::detail::serializer<BasicJsonType>::string_t &, bool) const [with BasicJsonType=nlohmann::basic_json<std::map, std::vector, std::string, bool, int64_t={long}, uint64_t={unsigned long}, double, std::allocator, nlohmann::adl_serializer>]\" at line 6154\r\n            instantiation of \"void nlohmann::detail::serializer<BasicJsonType>::dump(const BasicJsonType &, bool, bool, unsigned int, unsigned int) [with BasicJsonType=nlohmann::basic_json<std::map, std::vector, std::string, bool, int64_t={long}, uint64_t={unsigned long}, double, std::allocator, nlohmann::adl_serializer>]\" at line 8995\r\n            instantiation of \"nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::string_t nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::dump(int, char, bool) const [with ObjectType=std::map, ArrayType=std::vector, StringType=std::string, BooleanType=bool,\r\n                      NumberIntegerType=int64_t={long}, NumberUnsignedType=uint64_t={unsigned long}, NumberFloatType=double, AllocatorType=std::allocator, JSONSerializer=nlohmann::adl_serializer]\" at line 14653\r\n\r\n/home/tdegeus/prog/research/avalanches_inertia/json/json.hpp(6663): warning #186: pointless comparison of unsigned integer with zero\r\n          const bool is_negative = x < 0;\r\n                                     ^\r\n          detected during:\r\n            instantiation of \"void nlohmann::detail::serializer<BasicJsonType>::dump_integer(NumberType) [with BasicJsonType=nlohmann::basic_json<std::map, std::vector, std::string, bool, int64_t={long}, uint64_t={unsigned long}, double, std::allocator, nlohmann::adl_serializer>, NumberType=uint64_t={unsigned long}, <unnamed>=0]\" at line 6290\r\n            instantiation of \"void nlohmann::detail::serializer<BasicJsonType>::dump(const BasicJsonType &, bool, bool, unsigned int, unsigned int) [with BasicJsonType=nlohmann::basic_json<std::map, std::vector, std::string, bool, int64_t={long}, uint64_t={unsigned long}, double, std::allocator, nlohmann::adl_serializer>]\" at line 8995\r\n            instantiation of \"nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::string_t nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::dump(int, char, bool) const [with ObjectType=std::map, ArrayType=std::vector, StringType=std::string, BooleanType=bool,\r\n                      NumberIntegerType=int64_t={long}, NumberUnsignedType=uint64_t={unsigned long}, NumberFloatType=double, AllocatorType=std::allocator, JSONSerializer=nlohmann::adl_serializer]\" at line 14653\r\n\r\n/home/tdegeus/prog/research/avalanches_inertia/json/json.hpp(9762): warning #191: type qualifier is meaningless on cast type\r\n          return get_impl_ptr(static_cast<const PointerType>(nullptr));\r\n                                          ^\r\n          detected during:\r\n            instantiation of \"void nlohmann::detail::get_arithmetic_value(const BasicJsonType &, ArithmeticType &) [with BasicJsonType=nlohmann::basic_json<std::map, std::vector, std::string, bool, int64_t={long}, uint64_t={unsigned long}, double, std::allocator, nlohmann::adl_serializer>, ArithmeticType=double, <unnamed>=0]\" at line 1133\r\n            instantiation of \"void nlohmann::detail::from_json(const BasicJsonType &, BasicJsonType::number_float_t &) [with BasicJsonType=nlohmann::basic_json<std::map, std::vector, std::string, bool, int64_t={long}, uint64_t={unsigned long}, double, std::allocator, nlohmann::adl_serializer>]\" at line 1368\r\n            instantiation of \"auto nlohmann::detail::from_json_fn::call(const BasicJsonType &, T &, nlohmann::detail::priority_tag<1U>) const->decltype((<expression>)) [with BasicJsonType=nlohmann::basic_json<std::map, std::vector, std::string, bool, int64_t={long}, uint64_t={unsigned long}, double, std::allocator, nlohmann::adl_serializer>, T=double]\" at line 1383\r\n            instantiation of \"void nlohmann::detail::from_json_fn::operator()(const BasicJsonType &, T &) const [with BasicJsonType=nlohmann::basic_json<std::map, std::vector, std::string, bool, int64_t={long}, uint64_t={unsigned long}, double, std::allocator, nlohmann::adl_serializer>, T=double]\" at line 6880\r\n            instantiation of \"void nlohmann::adl_serializer<<unnamed>, <unnamed>>::from_json(BasicJsonType &&, ValueType &) [with <unnamed>=double, <unnamed>=void, BasicJsonType=const nlohmann::basic_json<std::map, std::vector, std::string, bool, int64_t={long}, uint64_t={unsigned long}, double, std::allocator, nlohmann::adl_serializer> &, ValueType=double]\" at line 9592\r\n            instantiation of \"ValueType nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::get<ValueTypeCV,ValueType,<unnamed>>() const [with ObjectType=std::map, ArrayType=std::vector, StringType=std::string, BooleanType=bool, NumberIntegerType=int64_t={long}, NumberUnsignedType=uint64_t={unsigned long}, NumberFloatType=double, AllocatorType=std::allocator,\r\n                      JSONSerializer=nlohmann::adl_serializer, ValueTypeCV=double, ValueType=double, <unnamed>=0]\" at line 237 of \"/home/tdegeus/prog/research/avalanches_inertia/main.cpp\"\r\n\r\nremark #11074: Inlining inhibited by limit max-size\r\nremark #11074: Inlining inhibited by limit max-total-size\r\nremark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/754", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/754/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/754/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/754/events", "html_url": "https://github.com/nlohmann/json/issues/754", "id": 260860874, "node_id": "MDU6SXNzdWUyNjA4NjA4NzQ=", "number": 754, "title": "Getter is setting the value to null if the key does not exist", "user": {"login": "adityamarella", "id": 706873, "node_id": "MDQ6VXNlcjcwNjg3Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/706873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adityamarella", "html_url": "https://github.com/adityamarella", "followers_url": "https://api.github.com/users/adityamarella/followers", "following_url": "https://api.github.com/users/adityamarella/following{/other_user}", "gists_url": "https://api.github.com/users/adityamarella/gists{/gist_id}", "starred_url": "https://api.github.com/users/adityamarella/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adityamarella/subscriptions", "organizations_url": "https://api.github.com/users/adityamarella/orgs", "repos_url": "https://api.github.com/users/adityamarella/repos", "events_url": "https://api.github.com/users/adityamarella/events{/privacy}", "received_events_url": "https://api.github.com/users/adityamarella/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-27T06:30:07Z", "updated_at": "2017-09-27T22:14:08Z", "closed_at": "2017-09-27T06:38:07Z", "author_association": "NONE", "body": "Here is the sample code\r\n```\r\n#include <iostream>\r\n#include <json.hpp>\r\n\r\nint main(void) {\r\n    nlohmann::json json;\r\n    json[\"xxx\"] = 1;\r\n    auto y = json[\"yyy\"];\r\n    std::cout << json.dump() << std::endl;\r\n    return 0;\r\n}\r\n```\r\nThe output is `{\"xxx\":1,\"yyy\":null}`. \r\n\r\nThe expected behavior is to throw std::out_of_range exception"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/752", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/752/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/752/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/752/events", "html_url": "https://github.com/nlohmann/json/issues/752", "id": 259608463, "node_id": "MDU6SXNzdWUyNTk2MDg0NjM=", "number": 752, "title": "parsing works sometimes and crashes others", "user": {"login": "AdamMiltonBarker", "id": 6291410, "node_id": "MDQ6VXNlcjYyOTE0MTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/6291410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdamMiltonBarker", "html_url": "https://github.com/AdamMiltonBarker", "followers_url": "https://api.github.com/users/AdamMiltonBarker/followers", "following_url": "https://api.github.com/users/AdamMiltonBarker/following{/other_user}", "gists_url": "https://api.github.com/users/AdamMiltonBarker/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdamMiltonBarker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdamMiltonBarker/subscriptions", "organizations_url": "https://api.github.com/users/AdamMiltonBarker/orgs", "repos_url": "https://api.github.com/users/AdamMiltonBarker/repos", "events_url": "https://api.github.com/users/AdamMiltonBarker/events{/privacy}", "received_events_url": "https://api.github.com/users/AdamMiltonBarker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-09-21T19:38:11Z", "updated_at": "2017-09-21T21:25:31Z", "closed_at": "2017-09-21T21:25:31Z", "author_association": "NONE", "body": "Hi guys I am using this with paho c, both installed using VCPKG and used in a C++ console app. I attempting to convert message->payload to json so I can access the elements of the response. This works sometimes but in others I get errors such as:\r\n\r\n\"parse error - unexpected 's'; expected end of input\"\r\n\r\nExactly the same response is work and not working randomly. This is the code which is the on message arrived callback from paho:\r\n\r\n\r\n```\r\nint msgarrvd(void *context, char *topicName, int topicLen, MQTTAsync_message *message)\r\n{\r\n\tint i;\r\n\tconst char* payloadptr;\r\n\r\n\tpayloadptr = (const char*)message->payload;\r\n\tstd::cout << payloadptr;\r\n\tstd::vector<std::string> v = explode(\"/\", topicName);\r\n\tstd::string s(payloadptr);\r\n\tstd::cout << s;\r\n\tjson data = json::parse(s+'\\n');\r\n\tstd::cout << data[\"Command\"];\r\n\r\n\tif (v[4]==\"Commands\") {\r\n\r\n\t}\r\n\t \r\n\tMQTTAsync_freeMessage(&message);\r\n\tMQTTAsync_free(topicName);\r\n\treturn 1;\r\n}\r\n```\r\n\r\nExample response:\r\n\r\n`{\"Sensor\":\"CCTV\",\"SensorID\":130,\"Command\":\"Capture\",\"CommandValue\":\"Face\"}`"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/751", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/751/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/751/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/751/events", "html_url": "https://github.com/nlohmann/json/issues/751", "id": 259422382, "node_id": "MDU6SXNzdWUyNTk0MjIzODI=", "number": 751, "title": "Static_assert failed \"incompatible pointer type\" with Xcode", "user": {"login": "KingOfDuck", "id": 6134155, "node_id": "MDQ6VXNlcjYxMzQxNTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6134155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KingOfDuck", "html_url": "https://github.com/KingOfDuck", "followers_url": "https://api.github.com/users/KingOfDuck/followers", "following_url": "https://api.github.com/users/KingOfDuck/following{/other_user}", "gists_url": "https://api.github.com/users/KingOfDuck/gists{/gist_id}", "starred_url": "https://api.github.com/users/KingOfDuck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KingOfDuck/subscriptions", "organizations_url": "https://api.github.com/users/KingOfDuck/orgs", "repos_url": "https://api.github.com/users/KingOfDuck/repos", "events_url": "https://api.github.com/users/KingOfDuck/events{/privacy}", "received_events_url": "https://api.github.com/users/KingOfDuck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 304694104, "node_id": "MDU6TGFiZWwzMDQ2OTQxMDQ=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20please%20discuss", "name": "state: please discuss", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-21T08:53:32Z", "updated_at": "2017-10-01T14:19:34Z", "closed_at": "2017-10-01T14:19:34Z", "author_association": "NONE", "body": "I just simply include json.hpp, using Xcode. And this error occurs while building.\r\nHere is the place where the issue appears(3368).\r\nThe compiler also says no matching function for call to 'get_impl_ptr'  at line 3379.\r\n\r\n        3367   // make sure the type matches the allowed types\r\n        3368  static_assert(\r\n        3369      std::is_same<object_t, pointee_t>::value\r\n        3370      or std::is_same<array_t, pointee_t>::value\r\n            or std::is_same<string_t, pointee_t>::value\r\n            or std::is_same<boolean_t, pointee_t>::value\r\n            or std::is_same<number_integer_t, pointee_t>::value\r\n            or std::is_same<number_unsigned_t, pointee_t>::value\r\n            or std::is_same<number_float_t, pointee_t>::value\r\n            , \"incompatible pointer type\");\r\n\r\n        3378        // delegate the call to get_impl_ptr<>()\r\n        3379        return get_impl_ptr(static_cast<PointerType>(nullptr));\r\n\r\nAlready added -std=c++11.\r\nThe compiler is Apple LLVM 8.1. \r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/750", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/750/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/750/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/750/events", "html_url": "https://github.com/nlohmann/json/issues/750", "id": 259209279, "node_id": "MDU6SXNzdWUyNTkyMDkyNzk=", "number": 750, "title": "user-defined literal operator not found", "user": {"login": "vsakharuk", "id": 5408026, "node_id": "MDQ6VXNlcjU0MDgwMjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/5408026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsakharuk", "html_url": "https://github.com/vsakharuk", "followers_url": "https://api.github.com/users/vsakharuk/followers", "following_url": "https://api.github.com/users/vsakharuk/following{/other_user}", "gists_url": "https://api.github.com/users/vsakharuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsakharuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsakharuk/subscriptions", "organizations_url": "https://api.github.com/users/vsakharuk/orgs", "repos_url": "https://api.github.com/users/vsakharuk/repos", "events_url": "https://api.github.com/users/vsakharuk/events{/privacy}", "received_events_url": "https://api.github.com/users/vsakharuk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 706237888, "node_id": "MDU6TGFiZWw3MDYyMzc4ODg=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20icc", "name": "platform: icc", "color": "eb6420", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-09-20T15:37:47Z", "updated_at": "2017-09-29T16:33:13Z", "closed_at": "2017-09-29T16:33:05Z", "author_association": "NONE", "body": "I am getting this error with json 2.1.1\r\n\r\nusing precompiled header file \".../test/cotire/json_unit_CXX_prefix.pchi\"\r\n.../test/src/unit-deserialization.cpp(82): error: user-defined literal operator not found\r\n              CHECK(\"[\\\"foo\\\",1,2,3,false,{\\\"one\\\":1}]\"_json == json({\"foo\", 1, 2, 3, false, {{\"one\", 1}}}))\r\n\r\nI see literal operator in json.hpp\r\nI suspect this is due to pre-compiled headers for icc16.\r\n\r\nHow do I disable usage of those for icc in cmake?\r\n\r\nEdit:\r\nI flipped in test files\r\n#include <json.hpp>\r\n#include <catch.hpp>\r\nand it compiles, issue clearly is pre-compiled headers.\r\nIs there a switch to disable it or editing those the only way to do it?\r\n\r\n\r\nOf note,\r\nI notice at least one test file uses #define private public\r\nso it may not be a good idea to use pre-compiled headers at all.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/748", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/748/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/748/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/748/events", "html_url": "https://github.com/nlohmann/json/issues/748", "id": 258769215, "node_id": "MDU6SXNzdWUyNTg3NjkyMTU=", "number": 748, "title": "getting clean string from it.key()", "user": {"login": "sqwunkly", "id": 31691223, "node_id": "MDQ6VXNlcjMxNjkxMjIz", "avatar_url": "https://avatars0.githubusercontent.com/u/31691223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sqwunkly", "html_url": "https://github.com/sqwunkly", "followers_url": "https://api.github.com/users/sqwunkly/followers", "following_url": "https://api.github.com/users/sqwunkly/following{/other_user}", "gists_url": "https://api.github.com/users/sqwunkly/gists{/gist_id}", "starred_url": "https://api.github.com/users/sqwunkly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sqwunkly/subscriptions", "organizations_url": "https://api.github.com/users/sqwunkly/orgs", "repos_url": "https://api.github.com/users/sqwunkly/repos", "events_url": "https://api.github.com/users/sqwunkly/events{/privacy}", "received_events_url": "https://api.github.com/users/sqwunkly/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2017-09-19T10:18:52Z", "updated_at": "2017-09-23T19:29:18Z", "closed_at": "2017-09-23T19:29:18Z", "author_association": "NONE", "body": "I need to a string or char * copy of the iterator key().. I've not been able to find a way of outputting it.key() in a correct format.. the best method I've found is key().dump().. however the result is a string with a backslash at the beginning and end of the string.. the code is below and the cursor is on the line where I'm using dump().. it's not producing a clean string.\r\n\r\n![image](https://user-images.githubusercontent.com/31691223/30587755-a18f8334-9d77-11e7-87c7-4c1abd1a2ca6.png)\r\n\r\n\r\nBelow is the it.key().dump() result in debugger.. as you can see it has backslash characters in front and end of the string.. how do I obtain a clean string? ..  my apologies if I'm overlooking a simply solution on my part. \r\n\r\n![image](https://user-images.githubusercontent.com/31691223/30587343-25a65ed8-9d76-11e7-9ca9-b3e6518a7470.png)\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/747", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/747/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/747/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/747/events", "html_url": "https://github.com/nlohmann/json/issues/747", "id": 258627243, "node_id": "MDU6SXNzdWUyNTg2MjcyNDM=", "number": 747, "title": "Best method for exploring and obtaining values of nested json objects when the names are not known beforehand?", "user": {"login": "sqwunkly", "id": 31691223, "node_id": "MDQ6VXNlcjMxNjkxMjIz", "avatar_url": "https://avatars0.githubusercontent.com/u/31691223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sqwunkly", "html_url": "https://github.com/sqwunkly", "followers_url": "https://api.github.com/users/sqwunkly/followers", "following_url": "https://api.github.com/users/sqwunkly/following{/other_user}", "gists_url": "https://api.github.com/users/sqwunkly/gists{/gist_id}", "starred_url": "https://api.github.com/users/sqwunkly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sqwunkly/subscriptions", "organizations_url": "https://api.github.com/users/sqwunkly/orgs", "repos_url": "https://api.github.com/users/sqwunkly/repos", "events_url": "https://api.github.com/users/sqwunkly/events{/privacy}", "received_events_url": "https://api.github.com/users/sqwunkly/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-09-18T21:29:12Z", "updated_at": "2017-09-23T19:29:29Z", "closed_at": "2017-09-23T19:29:29Z", "author_association": "NONE", "body": "Hi Niels, \r\n\r\nCould you please advise me the best way to explore down into a list of JSON objects, without knowing the names of the nested objects beforehand. \r\n\r\nI'm using the notation below (1 & 2) for setting and getting values and this works well, however I've not been able to find a way of quickly getting the names and values of objects when I don't know the names of those objects beforehand. I've used the iterator method (3) however it doesn't seem suited for quickly diving and exploring into nested objects.\r\n\r\nWhat is the most direct way of exploring and getting values of nested objects when the names of those objects are not known beforehand? \r\n\r\n(1)\r\n![image](https://user-images.githubusercontent.com/31691223/30565084-6189c78a-9d0a-11e7-97b5-fc33129c099d.png)\r\n\r\n(2)\r\n![image](https://user-images.githubusercontent.com/31691223/30565140-88fd778a-9d0a-11e7-8293-cf4f6fc60ac4.png)\r\n\r\n(3)\r\n![image](https://user-images.githubusercontent.com/31691223/30565301-10c1d74c-9d0b-11e7-8287-96e6c503b914.png)\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/746", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/746/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/746/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/746/events", "html_url": "https://github.com/nlohmann/json/issues/746", "id": 258537892, "node_id": "MDU6SXNzdWUyNTg1Mzc4OTI=", "number": 746, "title": "null char at the end of string", "user": {"login": "Adam5Wu", "id": 2480998, "node_id": "MDQ6VXNlcjI0ODA5OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2480998?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Adam5Wu", "html_url": "https://github.com/Adam5Wu", "followers_url": "https://api.github.com/users/Adam5Wu/followers", "following_url": "https://api.github.com/users/Adam5Wu/following{/other_user}", "gists_url": "https://api.github.com/users/Adam5Wu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Adam5Wu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Adam5Wu/subscriptions", "organizations_url": "https://api.github.com/users/Adam5Wu/orgs", "repos_url": "https://api.github.com/users/Adam5Wu/repos", "events_url": "https://api.github.com/users/Adam5Wu/events{/privacy}", "received_events_url": "https://api.github.com/users/Adam5Wu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-18T16:15:03Z", "updated_at": "2017-09-18T17:31:32Z", "closed_at": "2017-09-18T16:24:05Z", "author_association": "NONE", "body": "When getting a string field from json, the result string contains a null char at the end of the string (this is in addition to the usual null terminator).\r\nAs a result, if you try to append two string field obtained from json, you will get: \"string1\\0string2\\0\"\r\n\r\nThis breaks many UI functions as they generally stop at the first \\0."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/745", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/745/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/745/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/745/events", "html_url": "https://github.com/nlohmann/json/issues/745", "id": 258317959, "node_id": "MDU6SXNzdWUyNTgzMTc5NTk=", "number": 745, "title": "Incorrect sample for operator >> in docs", "user": {"login": "leha-bot", "id": 10153298, "node_id": "MDQ6VXNlcjEwMTUzMjk4", "avatar_url": "https://avatars1.githubusercontent.com/u/10153298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leha-bot", "html_url": "https://github.com/leha-bot", "followers_url": "https://api.github.com/users/leha-bot/followers", "following_url": "https://api.github.com/users/leha-bot/following{/other_user}", "gists_url": "https://api.github.com/users/leha-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/leha-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leha-bot/subscriptions", "organizations_url": "https://api.github.com/users/leha-bot/orgs", "repos_url": "https://api.github.com/users/leha-bot/repos", "events_url": "https://api.github.com/users/leha-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/leha-bot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 1, "created_at": "2017-09-17T17:14:12Z", "updated_at": "2017-09-30T08:19:32Z", "closed_at": "2017-09-30T08:19:32Z", "author_association": "NONE", "body": "If you visit the [operator >> (istream &, basic_json &) reference](https://nlohmann.github.io/json/classnlohmann_1_1basic__json_aaf363408931d76472ded14017e59c9e8.html#aaf363408931d76472ded14017e59c9e8) you will notice that a sample is for operator <<(basic_json&, ostream&)"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/744", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/744/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/744/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/744/events", "html_url": "https://github.com/nlohmann/json/issues/744", "id": 257788250, "node_id": "MDU6SXNzdWUyNTc3ODgyNTA=", "number": 744, "title": "User-friendly documentation", "user": {"login": "itviewer", "id": 1397840, "node_id": "MDQ6VXNlcjEzOTc4NDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1397840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/itviewer", "html_url": "https://github.com/itviewer", "followers_url": "https://api.github.com/users/itviewer/followers", "following_url": "https://api.github.com/users/itviewer/following{/other_user}", "gists_url": "https://api.github.com/users/itviewer/gists{/gist_id}", "starred_url": "https://api.github.com/users/itviewer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/itviewer/subscriptions", "organizations_url": "https://api.github.com/users/itviewer/orgs", "repos_url": "https://api.github.com/users/itviewer/repos", "events_url": "https://api.github.com/users/itviewer/events{/privacy}", "received_events_url": "https://api.github.com/users/itviewer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-14T16:54:20Z", "updated_at": "2017-11-01T10:16:05Z", "closed_at": "2017-11-01T10:16:05Z", "author_association": "NONE", "body": "As the project becomes more and more popular, well-organized documents are necessary. Up to now, the project uses the README file to describe how to use the library, with the some disadvantages:\r\n\r\n- with the description more and more, README file becomes very long\r\n- the user needs a clearer structure to describe how to use the library\r\n- inconvenient documentation contribution and collaboration\r\n\r\nSo I suggested to separate the document and the code library to provide a more friendly document experience.  I created two styles of demo  based on [mkdocs](http://www.mkdocs.org):\r\n\r\n1. https://itviewer.github.io/manual-material/\r\n2. https://itviewer.github.io/manual/\r\n\r\nrepository corresponding respectively\r\n\r\n1. https://github.com/itviewer/manual-material\r\n2. https://github.com/itviewer/manual/\r\n\r\nI just copyed the content from the README file and did not modify anything. both the above two  demo looks ok. The markdown syntax for github is good, almost no error format.\r\n\r\nThe [mkdocs](http://www.mkdocs.org) tool  is a python package, also easy to use, powerful and flexible."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/743", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/743/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/743/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/743/events", "html_url": "https://github.com/nlohmann/json/issues/743", "id": 257684849, "node_id": "MDU6SXNzdWUyNTc2ODQ4NDk=", "number": 743, "title": "Retrieve all values that match a json path", "user": {"login": "stdlef", "id": 27848649, "node_id": "MDQ6VXNlcjI3ODQ4NjQ5", "avatar_url": "https://avatars0.githubusercontent.com/u/27848649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stdlef", "html_url": "https://github.com/stdlef", "followers_url": "https://api.github.com/users/stdlef/followers", "following_url": "https://api.github.com/users/stdlef/following{/other_user}", "gists_url": "https://api.github.com/users/stdlef/gists{/gist_id}", "starred_url": "https://api.github.com/users/stdlef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stdlef/subscriptions", "organizations_url": "https://api.github.com/users/stdlef/orgs", "repos_url": "https://api.github.com/users/stdlef/repos", "events_url": "https://api.github.com/users/stdlef/events{/privacy}", "received_events_url": "https://api.github.com/users/stdlef/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-09-14T11:25:13Z", "updated_at": "2017-09-14T14:48:43Z", "closed_at": "2017-09-14T14:39:38Z", "author_association": "NONE", "body": "Assuming that my json file is the following, I would like to collect all values that match with a regular expression using json_pointer.  How can I get all values (integers) in the path /array/a/*? \r\n\r\nI have used flatten() so far, that gives the \"keys\". But I don't know if I can query the json object to return an array of values that \"match\" a json path. \r\n```\r\n{\r\n \"array\": [\r\n    {\r\n      \"a\": 1,\r\n      \"b\": [10,11,12]\r\n    },\r\n    {\r\n      \"a\": 2,\r\n      \"b\": [20,21,22]\r\n    },\r\n    {\r\n      \"a\": 3,\r\n      \"b\": [30,31,32]\r\n    }\r\n  ],\r\n  \"cost\": 1\r\n}\r\n```\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/742", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/742/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/742/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/742/events", "html_url": "https://github.com/nlohmann/json/issues/742", "id": 257648591, "node_id": "MDU6SXNzdWUyNTc2NDg1OTE=", "number": 742, "title": "Compilation issue with gcc 7.2", "user": {"login": "cdehnert", "id": 22997075, "node_id": "MDQ6VXNlcjIyOTk3MDc1", "avatar_url": "https://avatars2.githubusercontent.com/u/22997075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdehnert", "html_url": "https://github.com/cdehnert", "followers_url": "https://api.github.com/users/cdehnert/followers", "following_url": "https://api.github.com/users/cdehnert/following{/other_user}", "gists_url": "https://api.github.com/users/cdehnert/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdehnert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdehnert/subscriptions", "organizations_url": "https://api.github.com/users/cdehnert/orgs", "repos_url": "https://api.github.com/users/cdehnert/repos", "events_url": "https://api.github.com/users/cdehnert/events{/privacy}", "received_events_url": "https://api.github.com/users/cdehnert/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-14T09:13:28Z", "updated_at": "2017-09-14T11:40:11Z", "closed_at": "2017-09-14T11:14:00Z", "author_association": "NONE", "body": "When compiling with the newly released gcc 7.2, I get the following compilation error:\r\n\r\n```\r\n/tmp/makepkg/stormchecker-git/src/stormchecker-git/resources/3rdparty/modernjson/src/json.hpp: In function \u2018bool nlohmann::operator<(nlohmann::basic_json<ObjectType, ArrayType, StringType, Boole\r\nanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::const_reference, nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUns\r\nignedType, NumberFloatType, AllocatorType>::const_reference)\u2019:\r\n/tmp/makepkg/stormchecker-git/src/stormchecker-git/resources/3rdparty/modernjson/src/json.hpp:5653:66: error: wrong number of template arguments (1, should be 2)\r\n                        return *lhs.m_value.array < *rhs.m_value.array;\r\n                                                                 ^~~~~\r\nIn file included from /usr/include/c++/7.2.0/tuple:39:0,\r\n                from /usr/include/c++/7.2.0/bits/unique_ptr.h:37,\r\n                from /usr/include/c++/7.2.0/memory:80,\r\n                from /tmp/makepkg/stormchecker-git/src/stormchecker-git/src/storm-pars/api/region.h:6,\r\n                from /tmp/makepkg/stormchecker-git/src/stormchecker-git/src/storm-pars/api/storm-pars.h:3,\r\n                from /tmp/makepkg/stormchecker-git/src/stormchecker-git/src/storm-pars-cli/storm-pars.cpp:2:\r\n/usr/include/c++/7.2.0/array:94:12: note: provided for \u2018template<class _Tp, long unsigned int _Nm> struct std::array\u2019\r\n    struct array\r\n           ^~~~~\r\nmake[3]: *** [src/storm-pars-cli/CMakeFiles/storm-pars-cli.dir/build.make:63: src/storm-pars-cli/CMakeFiles/storm-pars-cli.dir/storm-pars.cpp.o] Error 1\r\nmake[2]: *** [CMakeFiles/Makefile2:2143: src/storm-pars-cli/CMakeFiles/storm-pars-cli.dir/all] Error 2\r\nmake[1]: *** [CMakeFiles/Makefile2:1408: src/CMakeFiles/binaries.dir/rule] Error 2\r\nmake: *** [Makefile:704: binaries] Error 2\r\n```\r\n\r\nFor gcc < 7.1.0 everything went smoothly until now. To be honest, I cannot really wrap my head around the compilation error, as a) m_value.array appears to be of type std::vector<>* and not std::array<>* and b) no template arguments are given in the line that is being pointed to."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/741", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/741/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/741/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/741/events", "html_url": "https://github.com/nlohmann/json/issues/741", "id": 257412278, "node_id": "MDU6SXNzdWUyNTc0MTIyNzg=", "number": 741, "title": "CMake target nlohmann_json does not have src into its interface includes", "user": {"login": "sogartar", "id": 3050579, "node_id": "MDQ6VXNlcjMwNTA1Nzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3050579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sogartar", "html_url": "https://github.com/sogartar", "followers_url": "https://api.github.com/users/sogartar/followers", "following_url": "https://api.github.com/users/sogartar/following{/other_user}", "gists_url": "https://api.github.com/users/sogartar/gists{/gist_id}", "starred_url": "https://api.github.com/users/sogartar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sogartar/subscriptions", "organizations_url": "https://api.github.com/users/sogartar/orgs", "repos_url": "https://api.github.com/users/sogartar/repos", "events_url": "https://api.github.com/users/sogartar/events{/privacy}", "received_events_url": "https://api.github.com/users/sogartar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 14, "created_at": "2017-09-13T14:55:13Z", "updated_at": "2018-07-02T20:45:02Z", "closed_at": "2017-12-06T19:47:39Z", "author_association": "NONE", "body": "If you do in CMake:\r\n```\r\nadd_subdirectory(nlohmann/json)\r\ntarget_link_libraries(my_target PRIVATE nlohmann_json)\r\n```\r\nThen `my_target` does not have nlohmann/json/src into its includes, where json.hpp is. You can not properly include this project into other CMake projects.\r\nNote that in v2.1.1 it used to be OK.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/740", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/740/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/740/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/740/events", "html_url": "https://github.com/nlohmann/json/issues/740", "id": 257399768, "node_id": "MDU6SXNzdWUyNTczOTk3Njg=", "number": 740, "title": "Error when serializing empty json: type must be string, but is object", "user": {"login": "sogartar", "id": 3050579, "node_id": "MDQ6VXNlcjMwNTA1Nzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3050579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sogartar", "html_url": "https://github.com/sogartar", "followers_url": "https://api.github.com/users/sogartar/followers", "following_url": "https://api.github.com/users/sogartar/following{/other_user}", "gists_url": "https://api.github.com/users/sogartar/gists{/gist_id}", "starred_url": "https://api.github.com/users/sogartar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sogartar/subscriptions", "organizations_url": "https://api.github.com/users/sogartar/orgs", "repos_url": "https://api.github.com/users/sogartar/repos", "events_url": "https://api.github.com/users/sogartar/events{/privacy}", "received_events_url": "https://api.github.com/users/sogartar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-09-13T14:23:04Z", "updated_at": "2017-09-23T12:58:18Z", "closed_at": "2017-09-23T12:58:18Z", "author_association": "NONE", "body": "```cpp\r\nauto j = json::parse(\"{}\");\r\nstd::string jstr1 = j.dump(); // OK\r\nstd::string jstr2 = j; // Exception\r\n```\r\nThe last line raises:\r\nterminate called after throwing an instance of 'nlohmann::detail::type_error'\r\n  what():  [json.exception.type_error.302] type must be string, but is object\r\n\r\nOn the other hand `dump()` works fine.\r\n\r\nThis appears on commit [e2e0ecd867413b0489a339d32509ef649ff1af5a](https://github.com/nlohmann/json/commit/e2e0ecd867413b0489a339d32509ef649ff1af5a)\r\nAlso on v2.1.1."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/739", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/739/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/739/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/739/events", "html_url": "https://github.com/nlohmann/json/issues/739", "id": 257324249, "node_id": "MDU6SXNzdWUyNTczMjQyNDk=", "number": 739, "title": "Conversion error for std::map<int, std::string> ", "user": {"login": "MariaRamos89", "id": 20771412, "node_id": "MDQ6VXNlcjIwNzcxNDEy", "avatar_url": "https://avatars3.githubusercontent.com/u/20771412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MariaRamos89", "html_url": "https://github.com/MariaRamos89", "followers_url": "https://api.github.com/users/MariaRamos89/followers", "following_url": "https://api.github.com/users/MariaRamos89/following{/other_user}", "gists_url": "https://api.github.com/users/MariaRamos89/gists{/gist_id}", "starred_url": "https://api.github.com/users/MariaRamos89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MariaRamos89/subscriptions", "organizations_url": "https://api.github.com/users/MariaRamos89/orgs", "repos_url": "https://api.github.com/users/MariaRamos89/repos", "events_url": "https://api.github.com/users/MariaRamos89/events{/privacy}", "received_events_url": "https://api.github.com/users/MariaRamos89/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-13T10:00:52Z", "updated_at": "2017-09-13T13:31:42Z", "closed_at": "2017-09-13T13:31:42Z", "author_association": "NONE", "body": "Hi,\r\n\r\nI'm trying to save a std::map<int, std::string> into a json, and then the json is saved in a file.\r\n```cpp\r\nnlohmann::json db;\r\ndb = mymap;\r\nstd::ofstream output_file(filename);\r\noutput_file << std::setw(4) << db << std::endl;\r\n```\r\n\r\nThe problem is the result of the json:\r\n\r\nI'm expecting this kind of output: \r\n`{ 1 : \"one\", 2 : \"two\"}` \r\nHowever, the result is:\r\n`[ [1, \"one\"], [2, \"two\"]]`\r\n\r\nSo, when in other program I'm trying to read that file and try to save it in a json for doing the conversion to std::map again, I'm having the next error:\r\n```\r\nerror: ambiguous overload for \u2018operator=\u2019 (operand types are \u2018std::map<int, std::__cxx11::basic_string<char> >\u2019 and \u2018nlohmann::json {aka nlohmann::basic_json<>}\u2019)\r\n```\r\n\r\nI've been looking in similar errors like #607, but I don't find a solution.\r\nI've tried to build the map manually but the output is the same. Maybe I'm missing something. \r\n\r\nThanks in advance"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/738", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/738/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/738/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/738/events", "html_url": "https://github.com/nlohmann/json/issues/738", "id": 256894384, "node_id": "MDU6SXNzdWUyNTY4OTQzODQ=", "number": 738, "title": "Dumping Json to file as array", "user": {"login": "ankitsultania", "id": 15243044, "node_id": "MDQ6VXNlcjE1MjQzMDQ0", "avatar_url": "https://avatars1.githubusercontent.com/u/15243044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ankitsultania", "html_url": "https://github.com/ankitsultania", "followers_url": "https://api.github.com/users/ankitsultania/followers", "following_url": "https://api.github.com/users/ankitsultania/following{/other_user}", "gists_url": "https://api.github.com/users/ankitsultania/gists{/gist_id}", "starred_url": "https://api.github.com/users/ankitsultania/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ankitsultania/subscriptions", "organizations_url": "https://api.github.com/users/ankitsultania/orgs", "repos_url": "https://api.github.com/users/ankitsultania/repos", "events_url": "https://api.github.com/users/ankitsultania/events{/privacy}", "received_events_url": "https://api.github.com/users/ankitsultania/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-12T02:05:32Z", "updated_at": "2017-09-12T16:40:44Z", "closed_at": "2017-09-12T16:40:44Z", "author_association": "NONE", "body": "Hi,\r\n\r\nIs there a way to append a file with json objects as array one by one?\r\n\r\nAny pointers are highly appreciated. I am stuck at doing this in a clean way."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/737", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/737/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/737/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/737/events", "html_url": "https://github.com/nlohmann/json/issues/737", "id": 256587870, "node_id": "MDU6SXNzdWUyNTY1ODc4NzA=", "number": 737, "title": "nesting json objects", "user": {"login": "sqwunkly", "id": 31691223, "node_id": "MDQ6VXNlcjMxNjkxMjIz", "avatar_url": "https://avatars0.githubusercontent.com/u/31691223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sqwunkly", "html_url": "https://github.com/sqwunkly", "followers_url": "https://api.github.com/users/sqwunkly/followers", "following_url": "https://api.github.com/users/sqwunkly/following{/other_user}", "gists_url": "https://api.github.com/users/sqwunkly/gists{/gist_id}", "starred_url": "https://api.github.com/users/sqwunkly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sqwunkly/subscriptions", "organizations_url": "https://api.github.com/users/sqwunkly/orgs", "repos_url": "https://api.github.com/users/sqwunkly/repos", "events_url": "https://api.github.com/users/sqwunkly/events{/privacy}", "received_events_url": "https://api.github.com/users/sqwunkly/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-09-11T05:46:17Z", "updated_at": "2017-09-12T16:28:33Z", "closed_at": "2017-09-12T16:28:33Z", "author_association": "NONE", "body": "RE: Nesting json objects\r\n\r\nIs there a way to directly nest json objects in similar manner?\r\n\r\njson outerObj = { \"misting\" , { \"isMisting\" , true } };\r\njson nestedObj = { \"duration\" , { \"hours\" , 2}, { \"mins\" , 30 }, {\"secs\" , 20 } };\r\njson result = outerObj[ nestedObj ];   // does not work \r\n\r\nTo obtain this:-\r\n![image](https://user-images.githubusercontent.com/31691223/30259826-dc08c736-9706-11e7-9040-b998d8e8207b.png)\r\n\r\nWhat is most direct way to achieve this?\r\n\r\nThanks.\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/736", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/736/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/736/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/736/events", "html_url": "https://github.com/nlohmann/json/issues/736", "id": 256575498, "node_id": "MDU6SXNzdWUyNTY1NzU0OTg=", "number": 736, "title": "where to find general help?", "user": {"login": "sqwunkly", "id": 31691223, "node_id": "MDQ6VXNlcjMxNjkxMjIz", "avatar_url": "https://avatars0.githubusercontent.com/u/31691223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sqwunkly", "html_url": "https://github.com/sqwunkly", "followers_url": "https://api.github.com/users/sqwunkly/followers", "following_url": "https://api.github.com/users/sqwunkly/following{/other_user}", "gists_url": "https://api.github.com/users/sqwunkly/gists{/gist_id}", "starred_url": "https://api.github.com/users/sqwunkly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sqwunkly/subscriptions", "organizations_url": "https://api.github.com/users/sqwunkly/orgs", "repos_url": "https://api.github.com/users/sqwunkly/repos", "events_url": "https://api.github.com/users/sqwunkly/events{/privacy}", "received_events_url": "https://api.github.com/users/sqwunkly/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-11T03:57:41Z", "updated_at": "2017-09-12T06:16:48Z", "closed_at": "2017-09-12T06:16:48Z", "author_association": "NONE", "body": "Where is best place to ask general help questions, such as how to do something using this library? IE Questions not related to an 'issue'? Thanks.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/735", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/735/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/735/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/735/events", "html_url": "https://github.com/nlohmann/json/issues/735", "id": 256476397, "node_id": "MDU6SXNzdWUyNTY0NzYzOTc=", "number": 735, "title": "Compilation Error on Clang 5.0 Upgrade", "user": {"login": "ErikPartridge", "id": 7953455, "node_id": "MDQ6VXNlcjc5NTM0NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/7953455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ErikPartridge", "html_url": "https://github.com/ErikPartridge", "followers_url": "https://api.github.com/users/ErikPartridge/followers", "following_url": "https://api.github.com/users/ErikPartridge/following{/other_user}", "gists_url": "https://api.github.com/users/ErikPartridge/gists{/gist_id}", "starred_url": "https://api.github.com/users/ErikPartridge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ErikPartridge/subscriptions", "organizations_url": "https://api.github.com/users/ErikPartridge/orgs", "repos_url": "https://api.github.com/users/ErikPartridge/repos", "events_url": "https://api.github.com/users/ErikPartridge/events{/privacy}", "received_events_url": "https://api.github.com/users/ErikPartridge/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 25, "created_at": "2017-09-10T00:51:38Z", "updated_at": "2017-10-28T10:34:08Z", "closed_at": "2017-10-28T10:34:08Z", "author_association": "NONE", "body": "Upgrading to Clang++-5.0 on Travis-CI Trusty is producing the following error:\r\n\r\n```\r\n\r\njson/src/json.hpp:9869:66: error:  no type named 'string_view' in namespace 'std'\r\n  ...and not std::is_same<ValueType, typename std::string_view>::value\r\n```\r\n\r\nAlso tested on Ubuntu 16.04 Clang++-5.0 standalone without the rest of the project and still failing with the same error. g++ working fine on both systems.\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/734", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/734/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/734/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/734/events", "html_url": "https://github.com/nlohmann/json/issues/734", "id": 256431693, "node_id": "MDU6SXNzdWUyNTY0MzE2OTM=", "number": 734, "title": "Compilation error with std::map<std::string, std::string> on vs 2015", "user": {"login": "leozzyzheng", "id": 6134295, "node_id": "MDQ6VXNlcjYxMzQyOTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/6134295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leozzyzheng", "html_url": "https://github.com/leozzyzheng", "followers_url": "https://api.github.com/users/leozzyzheng/followers", "following_url": "https://api.github.com/users/leozzyzheng/following{/other_user}", "gists_url": "https://api.github.com/users/leozzyzheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/leozzyzheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leozzyzheng/subscriptions", "organizations_url": "https://api.github.com/users/leozzyzheng/orgs", "repos_url": "https://api.github.com/users/leozzyzheng/repos", "events_url": "https://api.github.com/users/leozzyzheng/events{/privacy}", "received_events_url": "https://api.github.com/users/leozzyzheng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2017-09-09T10:57:54Z", "updated_at": "2017-11-13T15:29:26Z", "closed_at": "2017-10-23T10:04:30Z", "author_association": "NONE", "body": "```C++\r\nusing json = nlohmann::json;\r\njson j;\r\nstd::map<std::string, std::string> m;\r\nm = j.get<decltype(m)>();\r\n```\r\nit says `error C2665: 'std::pair<const _Kty,_Ty>::pair': none of the 2 overloads could convert all the argument types`\r\n\r\nif I change to \r\n```\r\nm = j;\r\n```\r\nit says `'operator =' is ambiguous`\r\n\r\nDid I miss anything about converting map data to/from json ?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/733", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/733/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/733/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/733/events", "html_url": "https://github.com/nlohmann/json/issues/733", "id": 256350874, "node_id": "MDU6SXNzdWUyNTYzNTA4NzQ=", "number": 733, "title": "Benchmarks for Binary formats", "user": {"login": "D1amond", "id": 3710553, "node_id": "MDQ6VXNlcjM3MTA1NTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/3710553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/D1amond", "html_url": "https://github.com/D1amond", "followers_url": "https://api.github.com/users/D1amond/followers", "following_url": "https://api.github.com/users/D1amond/following{/other_user}", "gists_url": "https://api.github.com/users/D1amond/gists{/gist_id}", "starred_url": "https://api.github.com/users/D1amond/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/D1amond/subscriptions", "organizations_url": "https://api.github.com/users/D1amond/orgs", "repos_url": "https://api.github.com/users/D1amond/repos", "events_url": "https://api.github.com/users/D1amond/events{/privacy}", "received_events_url": "https://api.github.com/users/D1amond/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 571470316, "node_id": "MDU6TGFiZWw1NzE0NzAzMTY=", "url": "https://api.github.com/repos/nlohmann/json/labels/aspect:%20binary%20formats", "name": "aspect: binary formats", "color": "5319e7", "default": false}, {"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-08T19:35:20Z", "updated_at": "2017-12-03T09:59:08Z", "closed_at": "2017-12-03T09:59:08Z", "author_association": "NONE", "body": "It would be nice to have an idea of the parsing time difference between a JSON file and a binary serialized version of the same file.\r\n\r\nThis could be included in the library's benchmarks."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/732", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/732/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/732/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/732/events", "html_url": "https://github.com/nlohmann/json/issues/732", "id": 256233743, "node_id": "MDU6SXNzdWUyNTYyMzM3NDM=", "number": 732, "title": "Move test blobs to a submodule?", "user": {"login": "njlr", "id": 1577531, "node_id": "MDQ6VXNlcjE1Nzc1MzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1577531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/njlr", "html_url": "https://github.com/njlr", "followers_url": "https://api.github.com/users/njlr/followers", "following_url": "https://api.github.com/users/njlr/following{/other_user}", "gists_url": "https://api.github.com/users/njlr/gists{/gist_id}", "starred_url": "https://api.github.com/users/njlr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/njlr/subscriptions", "organizations_url": "https://api.github.com/users/njlr/orgs", "repos_url": "https://api.github.com/users/njlr/repos", "events_url": "https://api.github.com/users/njlr/events{/privacy}", "received_events_url": "https://api.github.com/users/njlr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-08T12:07:48Z", "updated_at": "2017-09-08T12:14:18Z", "closed_at": "2017-09-08T12:14:10Z", "author_association": "NONE", "body": "I am using the [Buckaroo](https://github.com/LoopPerfect/buckaroo) package for `nlohmann/json` and find it takes quite a long time to download. Looking at the repo, the test blobs seem to be the cause. Of course, these are not required when using the library. \r\n\r\nPerhaps the tests should be moved to a Git submodule, so that they can be fetched optionally? "}, {"url": "https://api.github.com/repos/nlohmann/json/issues/731", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/731/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/731/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/731/events", "html_url": "https://github.com/nlohmann/json/issues/731", "id": 256208484, "node_id": "MDU6SXNzdWUyNTYyMDg0ODQ=", "number": 731, "title": "Support \\n symbols in json string.", "user": {"login": "parfenuk", "id": 4920456, "node_id": "MDQ6VXNlcjQ5MjA0NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/4920456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/parfenuk", "html_url": "https://github.com/parfenuk", "followers_url": "https://api.github.com/users/parfenuk/followers", "following_url": "https://api.github.com/users/parfenuk/following{/other_user}", "gists_url": "https://api.github.com/users/parfenuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/parfenuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/parfenuk/subscriptions", "organizations_url": "https://api.github.com/users/parfenuk/orgs", "repos_url": "https://api.github.com/users/parfenuk/repos", "events_url": "https://api.github.com/users/parfenuk/events{/privacy}", "received_events_url": "https://api.github.com/users/parfenuk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-08T10:21:12Z", "updated_at": "2017-09-08T13:52:11Z", "closed_at": "2017-09-08T13:52:11Z", "author_association": "NONE", "body": "Hi. First of all, thanks for the great job you performed all this time. Your tool turned out to be very helpful for me.\r\n\r\nMy question is: is there any endline symbols support planning in the near future or it violates standard json formatting rules?\r\nFor example, this code will crash the framework (C++):\r\n\r\n```cpp\r\nstring valueJSON = \"{\\\"test\\n\\\":[1,2,3]}\";\r\njson j = json::parse(valueJSON);\r\n```\r\n\r\nwith an error: **std::invalid_argument: parse error - unexpected '\"'; expected string literal**\r\n\r\nand without \\n the parser works ok.\r\n\r\nThanks.\r\nMiroslav"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/730", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/730/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/730/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/730/events", "html_url": "https://github.com/nlohmann/json/issues/730", "id": 255876059, "node_id": "MDU6SXNzdWUyNTU4NzYwNTk=", "number": 730, "title": "Project's name is too generic and hard to search for", "user": {"login": "guidow", "id": 6033185, "node_id": "MDQ6VXNlcjYwMzMxODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/6033185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guidow", "html_url": "https://github.com/guidow", "followers_url": "https://api.github.com/users/guidow/followers", "following_url": "https://api.github.com/users/guidow/following{/other_user}", "gists_url": "https://api.github.com/users/guidow/gists{/gist_id}", "starred_url": "https://api.github.com/users/guidow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guidow/subscriptions", "organizations_url": "https://api.github.com/users/guidow/orgs", "repos_url": "https://api.github.com/users/guidow/repos", "events_url": "https://api.github.com/users/guidow/events{/privacy}", "received_events_url": "https://api.github.com/users/guidow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-09-07T09:38:28Z", "updated_at": "2017-10-02T15:15:31Z", "closed_at": "2017-10-02T15:14:40Z", "author_association": "NONE", "body": "The project's name is very generic, which makes it hard to search for in, for example, internet search engines or the package repositories of various operating systems. My first impulse upon finding this library was to see if it was already present in my distribution's package repository, but how should I even go about that? Searching for just \"json\" is not going to be helpful. (Turns out googling for \"nlohmann json\" works better, but still...)\r\n\r\nThe name is also bound to lead to some confusion, as it is already the name for the format/meta-format itself.\r\n\r\nThis also makes it awkward to specify a dependency on this library in a way that will likely work across distributions.\r\n\r\nThe full name of the project, \"JSON for Modern C++\", on the other hand, is too unwieldy, consists of several words and does not actually seem to be used much."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/729", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/729/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/729/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/729/events", "html_url": "https://github.com/nlohmann/json/issues/729", "id": 255873926, "node_id": "MDU6SXNzdWUyNTU4NzM5MjY=", "number": 729, "title": "Visual Studio 2015 IntelliTrace problems", "user": {"login": "leozzyzheng", "id": 6134295, "node_id": "MDQ6VXNlcjYxMzQyOTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/6134295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leozzyzheng", "html_url": "https://github.com/leozzyzheng", "followers_url": "https://api.github.com/users/leozzyzheng/followers", "following_url": "https://api.github.com/users/leozzyzheng/following{/other_user}", "gists_url": "https://api.github.com/users/leozzyzheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/leozzyzheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leozzyzheng/subscriptions", "organizations_url": "https://api.github.com/users/leozzyzheng/orgs", "repos_url": "https://api.github.com/users/leozzyzheng/repos", "events_url": "https://api.github.com/users/leozzyzheng/events{/privacy}", "received_events_url": "https://api.github.com/users/leozzyzheng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-09-07T09:31:32Z", "updated_at": "2017-10-03T08:42:10Z", "closed_at": "2017-10-03T08:42:05Z", "author_association": "NONE", "body": "```C++\r\nusing json = nlohmann::json;\r\njson j;\r\nstd::string json_string;\r\nj = json::parse(json_string);\r\n```\r\n\r\nVisual Studio 2015 will show red line under `json::parse`:\r\n![image](https://user-images.githubusercontent.com/6134295/30156356-00718166-93f2-11e7-92b8-539d34597739.png)\r\nit shows following error message:\r\n![image](https://user-images.githubusercontent.com/6134295/30156392-1940b824-93f2-11e7-923c-599dd585d6aa.png)\r\n\r\nI can successfully compile it but it is a little bit annoying. Could it be avoided?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/728", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/728/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/728/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/728/events", "html_url": "https://github.com/nlohmann/json/issues/728", "id": 255557777, "node_id": "MDU6SXNzdWUyNTU1NTc3Nzc=", "number": 728, "title": "How to erase nested objects inside other objects?", "user": {"login": "sqwunkly", "id": 31691223, "node_id": "MDQ6VXNlcjMxNjkxMjIz", "avatar_url": "https://avatars0.githubusercontent.com/u/31691223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sqwunkly", "html_url": "https://github.com/sqwunkly", "followers_url": "https://api.github.com/users/sqwunkly/followers", "following_url": "https://api.github.com/users/sqwunkly/following{/other_user}", "gists_url": "https://api.github.com/users/sqwunkly/gists{/gist_id}", "starred_url": "https://api.github.com/users/sqwunkly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sqwunkly/subscriptions", "organizations_url": "https://api.github.com/users/sqwunkly/orgs", "repos_url": "https://api.github.com/users/sqwunkly/repos", "events_url": "https://api.github.com/users/sqwunkly/events{/privacy}", "received_events_url": "https://api.github.com/users/sqwunkly/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-06T10:37:14Z", "updated_at": "2017-09-06T13:31:47Z", "closed_at": "2017-09-06T13:31:47Z", "author_association": "NONE", "body": "Hello Niels,\r\n\r\nIs it possible to erase/delete nested objects using a similar technique as you've created for adding nested objects inside other objects?\r\n\r\n**\u200b\u200bj[\"answer\"][\"everything\"] = 42;**\r\n\r\n![image](https://user-images.githubusercontent.com/31691223/30106370-8ca9c954-933e-11e7-9d12-af43f4b69937.png)\r\n\r\nIs there an equivalent way to do **j.erase(\u200b[\"answer\"][\"everything\"];** (ie, doesn't work) ?\r\n\r\nThis  **\u200bj\u200b\u200b[\"answer\"][\"everything\"] = 42;**  is neat for adding nested objects inside other objects but so far I'm unable to find a corresponding function in your library to delete/erase nested objects. Is there a way to do this?\r\n\r\nMy apologies if I've missed something obvious. Hoping you can help me with these two questions. Much thanks. Greg\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/727", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/727/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/727/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/727/events", "html_url": "https://github.com/nlohmann/json/issues/727", "id": 255556381, "node_id": "MDU6SXNzdWUyNTU1NTYzODE=", "number": 727, "title": "How to prevent alphabetical sorting of data?", "user": {"login": "sqwunkly", "id": 31691223, "node_id": "MDQ6VXNlcjMxNjkxMjIz", "avatar_url": "https://avatars0.githubusercontent.com/u/31691223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sqwunkly", "html_url": "https://github.com/sqwunkly", "followers_url": "https://api.github.com/users/sqwunkly/followers", "following_url": "https://api.github.com/users/sqwunkly/following{/other_user}", "gists_url": "https://api.github.com/users/sqwunkly/gists{/gist_id}", "starred_url": "https://api.github.com/users/sqwunkly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sqwunkly/subscriptions", "organizations_url": "https://api.github.com/users/sqwunkly/orgs", "repos_url": "https://api.github.com/users/sqwunkly/repos", "events_url": "https://api.github.com/users/sqwunkly/events{/privacy}", "received_events_url": "https://api.github.com/users/sqwunkly/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-06T10:32:26Z", "updated_at": "2017-09-29T08:29:56Z", "closed_at": "2017-09-29T08:29:56Z", "author_association": "NONE", "body": "Hi Niels,\r\n\r\nThanks  a lot for writing your \"**JSON for Modern C++**\".  \r\n\r\nHow do I save the JSON data to file while retaining it's original order (after opening and editing from an existing data.json file) such that the saved objects and their keys are subsequently **not sorted** alphabetically upon saving the data?\r\n\r\nThis is how I'd like the json data to be saved to file, as it was originally (**not alphabetically sorted**):- \r\n\r\n![image](https://user-images.githubusercontent.com/31691223/30106131-db3338d6-933d-11e7-84a1-566343b3168c.png)\r\n\r\n\u200bHowever after saving to file, the data ends up **alphabetically sorted** (below).\r\n\r\n![image](https://user-images.githubusercontent.com/31691223/30105957-66a099a0-933d-11e7-91cb-e7f81edc3df7.png)\r\n\r\nIs there a way to **prevent** the json data being **alphabetically sorted**?\r\n\r\nMuch thanks. Greg\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/726", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/726/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/726/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/726/events", "html_url": "https://github.com/nlohmann/json/issues/726", "id": 254903963, "node_id": "MDU6SXNzdWUyNTQ5MDM5NjM=", "number": 726, "title": "Serialization for CBOR", "user": {"login": "cblauvelt", "id": 2067370, "node_id": "MDQ6VXNlcjIwNjczNzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2067370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cblauvelt", "html_url": "https://github.com/cblauvelt", "followers_url": "https://api.github.com/users/cblauvelt/followers", "following_url": "https://api.github.com/users/cblauvelt/following{/other_user}", "gists_url": "https://api.github.com/users/cblauvelt/gists{/gist_id}", "starred_url": "https://api.github.com/users/cblauvelt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cblauvelt/subscriptions", "organizations_url": "https://api.github.com/users/cblauvelt/orgs", "repos_url": "https://api.github.com/users/cblauvelt/repos", "events_url": "https://api.github.com/users/cblauvelt/events{/privacy}", "received_events_url": "https://api.github.com/users/cblauvelt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 571470316, "node_id": "MDU6TGFiZWw1NzE0NzAzMTY=", "url": "https://api.github.com/repos/nlohmann/json/labels/aspect:%20binary%20formats", "name": "aspect: binary formats", "color": "5319e7", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-09-03T22:08:39Z", "updated_at": "2017-09-29T08:30:55Z", "closed_at": "2017-09-29T08:30:55Z", "author_association": "NONE", "body": "First, thanks for the great library. It really is easy to work with.\r\n\r\nI would like to see a to_cbor and from_cbor implemented as serialization options. My specific use case is that for JSON, to make it more readable, I'm translating my enums through strings. I'd much rather use the integer equivalent for enums when I'm using CBOR to reduce the amount of data sent over the wire."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/725", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/725/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/725/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/725/events", "html_url": "https://github.com/nlohmann/json/issues/725", "id": 254861330, "node_id": "MDU6SXNzdWUyNTQ4NjEzMzA=", "number": 725, "title": "Using json Object as value in a map", "user": {"login": "FATEDx", "id": 31585594, "node_id": "MDQ6VXNlcjMxNTg1NTk0", "avatar_url": "https://avatars3.githubusercontent.com/u/31585594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FATEDx", "html_url": "https://github.com/FATEDx", "followers_url": "https://api.github.com/users/FATEDx/followers", "following_url": "https://api.github.com/users/FATEDx/following{/other_user}", "gists_url": "https://api.github.com/users/FATEDx/gists{/gist_id}", "starred_url": "https://api.github.com/users/FATEDx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FATEDx/subscriptions", "organizations_url": "https://api.github.com/users/FATEDx/orgs", "repos_url": "https://api.github.com/users/FATEDx/repos", "events_url": "https://api.github.com/users/FATEDx/events{/privacy}", "received_events_url": "https://api.github.com/users/FATEDx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-09-03T08:32:13Z", "updated_at": "2017-09-03T08:42:45Z", "closed_at": "2017-09-03T08:42:45Z", "author_association": "NONE", "body": "I have a map, that have key string, and json as the value \r\n`std::map<std::string, json> mList;`\r\nThen,\r\n`std::map<std::string, json>::iterator i = mList.at(name);`\r\n`std::map<std::string, json>::iterator end = mList.end();`\r\n\r\nWhen i try to access the iterator, it keep giving me error about \r\nError\tC2338\tcould not find from_json() method in T's namespace\r\n\r\nI have no idea what is going on, can someone help?\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/724", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/724/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/724/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/724/events", "html_url": "https://github.com/nlohmann/json/issues/724", "id": 254856967, "node_id": "MDU6SXNzdWUyNTQ4NTY5Njc=", "number": 724, "title": "std::regex and nlohmann::json value", "user": {"login": "jm130794", "id": 31583505, "node_id": "MDQ6VXNlcjMxNTgzNTA1", "avatar_url": "https://avatars0.githubusercontent.com/u/31583505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jm130794", "html_url": "https://github.com/jm130794", "followers_url": "https://api.github.com/users/jm130794/followers", "following_url": "https://api.github.com/users/jm130794/following{/other_user}", "gists_url": "https://api.github.com/users/jm130794/gists{/gist_id}", "starred_url": "https://api.github.com/users/jm130794/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jm130794/subscriptions", "organizations_url": "https://api.github.com/users/jm130794/orgs", "repos_url": "https://api.github.com/users/jm130794/repos", "events_url": "https://api.github.com/users/jm130794/events{/privacy}", "received_events_url": "https://api.github.com/users/jm130794/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-03T06:34:58Z", "updated_at": "2017-09-06T07:43:19Z", "closed_at": "2017-09-06T07:43:19Z", "author_association": "NONE", "body": "Hello,\r\n\r\nI want to use std::regex with a nlohmann::json value but I have somme problems. \r\n\r\nMy C++ file :\r\n \r\n```c++\r\n// g++ -std=c++14 moderncpp_json.cpp -o moderncpp_json\r\n#include <iostream>\r\n#include <regex>\r\n#include \"json.hpp\"\r\n \r\nint main(int argc, char *argv[])\r\n{\r\n    using json = nlohmann::json;\r\n\r\n    json j = R\"({\"name\": \"jmchoulet\"})\"_json;\r\n\r\n    std::regex  r{R\"(^(.+)$)\"};\r\n    std::smatch m;\r\n\r\n    //-- works but need to create a std::string variable !!!                         \r\n    //const std::string value = j[\"name\"].get<std::string>();\r\n    //if (std::regex_match(value, m, r))\r\n\r\n    if (std::regex_match(j[\"name\"].get<std::string>(), m, r))\r\n    {   \r\n        std::string s;\r\n\r\n        if (m.size())\r\n        {\r\n            std::string tmp = m[1];\r\n            s += \"m[1]: \" + tmp;\r\n            std::cout << s << std::endl;\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}\r\n```\r\nCompiler g++ output : \r\n\r\n```bash\r\n$ g++ -std=c++14 moderncpp_json.cpp -o moderncpp_json\r\nmoderncpp_json.cpp: In function \u2018int main(int, char**)\u2019:\r\nmoderncpp_json.cpp:19:60: error: use of deleted function \u2018bool std::regex_match(const std::__cxx11::basic_string<_Ch_type, _Ch_traits, _Ch_alloc>&&, std::__cxx11::match_results<typename std::__cxx11::basic_string<_Ch_type, _Ch_traits, _Ch_alloc>::const_iterator, _Alloc>&, const std::__cxx11::basic_regex<_Ch_type, _Rx_traits>&, std::regex_constants::match_flag_type) [with _Ch_traits = std::char_traits<char>; _Ch_alloc = std::allocator<char>; _Alloc = std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >; _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; typename std::__cxx11::basic_string<_Ch_type, _Ch_traits, _Ch_alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]\u2019\r\n     if (std::regex_match(j[\"name\"].get<std::string>(), m, r))\r\n                                                            ^\r\nIn file included from /usr/include/c++/5/regex:61:0,\r\n                 from moderncpp_json.cpp:3:\r\n/usr/include/c++/5/bits/regex.h:2073:5: note: declared here\r\n     regex_match(const basic_string<_Ch_type, _Ch_traits, _Ch_alloc>&&,\r\n```\r\nHow to avoid this error?\r\n\r\nThank,\r\n\r\nJean-Marc"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/723", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/723/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/723/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/723/events", "html_url": "https://github.com/nlohmann/json/issues/723", "id": 254847510, "node_id": "MDU6SXNzdWUyNTQ4NDc1MTA=", "number": 723, "title": "Warnings when compiling with VisualStudio 2015", "user": {"login": "ChipBurwell", "id": 4853865, "node_id": "MDQ6VXNlcjQ4NTM4NjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/4853865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChipBurwell", "html_url": "https://github.com/ChipBurwell", "followers_url": "https://api.github.com/users/ChipBurwell/followers", "following_url": "https://api.github.com/users/ChipBurwell/following{/other_user}", "gists_url": "https://api.github.com/users/ChipBurwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChipBurwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChipBurwell/subscriptions", "organizations_url": "https://api.github.com/users/ChipBurwell/orgs", "repos_url": "https://api.github.com/users/ChipBurwell/repos", "events_url": "https://api.github.com/users/ChipBurwell/events{/privacy}", "received_events_url": "https://api.github.com/users/ChipBurwell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2017-09-03T02:05:09Z", "updated_at": "2017-10-03T13:37:19Z", "closed_at": "2017-10-03T08:41:44Z", "author_association": "NONE", "body": "I've update to version 2.1.1 (from previously using 2.0.10) and now I'm getting the warnings listed below.  I don't think any of them are critical, but I'm wondering if there is a simple way to fix this without turning off warnings that I'd like to have on?\r\n\r\n1>json.hpp(6620): warning C4996: '_snprintf': This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.\r\n1>  c:\\program files (x86)\\windows kits\\10\\include\\10.0.10240.0\\ucrt\\stdio.h(1952): note: see declaration of '_snprintf'\r\n1>  json.hpp(6594): note: while compiling class template member function 'void nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>>::dump_float(double)'\r\n1>  json.hpp(6203): note: see reference to function template instantiation 'void nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>>::dump_float(double)' being compiled\r\n1>  json.hpp(8609): note: see reference to class template instantiation 'nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>>' being compiled\r\n1>  json.hpp(8607): note: while compiling class template member function 'std::basic_string<char,std::char_traits<char>,std::allocator<char>> nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>::dump(const int,const char,const bool) const'\r\n1>  json.hpp(13523): note: see reference to function template instantiation 'std::basic_string<char,std::char_traits<char>,std::allocator<char>> nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>::dump(const int,const char,const bool) const' being compiled\r\n1>  c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits(639): note: see reference to class template instantiation 'nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>' being compiled\r\n1>  c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits(668): note: see reference to class template instantiation 'std::is_nothrow_constructible<_Ty,nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer> &&>' being compiled\r\n1>          with\r\n1>          [\r\n1>              _Ty=nlohmann::json\r\n1>          ]\r\n1>  json.hpp(13504): note: see reference to class template instantiation 'std::is_nothrow_move_constructible<nlohmann::json>' being compiled"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/722", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/722/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/722/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/722/events", "html_url": "https://github.com/nlohmann/json/issues/722", "id": 254599035, "node_id": "MDU6SXNzdWUyNTQ1OTkwMzU=", "number": 722, "title": "Has this lib the unicode (wstring) support?", "user": {"login": "bajimu", "id": 19263759, "node_id": "MDQ6VXNlcjE5MjYzNzU5", "avatar_url": "https://avatars2.githubusercontent.com/u/19263759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bajimu", "html_url": "https://github.com/bajimu", "followers_url": "https://api.github.com/users/bajimu/followers", "following_url": "https://api.github.com/users/bajimu/following{/other_user}", "gists_url": "https://api.github.com/users/bajimu/gists{/gist_id}", "starred_url": "https://api.github.com/users/bajimu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bajimu/subscriptions", "organizations_url": "https://api.github.com/users/bajimu/orgs", "repos_url": "https://api.github.com/users/bajimu/repos", "events_url": "https://api.github.com/users/bajimu/events{/privacy}", "received_events_url": "https://api.github.com/users/bajimu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-01T10:21:20Z", "updated_at": "2017-09-06T07:42:44Z", "closed_at": "2017-09-06T07:42:44Z", "author_association": "NONE", "body": "Has this lib the unicode (wstring) support?"}]