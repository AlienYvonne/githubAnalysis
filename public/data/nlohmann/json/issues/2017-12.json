[{"url": "https://api.github.com/repos/nlohmann/json/issues/897", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/897/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/897/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/897/events", "html_url": "https://github.com/nlohmann/json/issues/897", "id": 285269342, "node_id": "MDU6SXNzdWUyODUyNjkzNDI=", "number": 897, "title": "How to get the length of a JSON string without retrieving its std::string?", "user": {"login": "ibc", "id": 16191, "node_id": "MDQ6VXNlcjE2MTkx", "avatar_url": "https://avatars2.githubusercontent.com/u/16191?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibc", "html_url": "https://github.com/ibc", "followers_url": "https://api.github.com/users/ibc/followers", "following_url": "https://api.github.com/users/ibc/following{/other_user}", "gists_url": "https://api.github.com/users/ibc/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibc/subscriptions", "organizations_url": "https://api.github.com/users/ibc/orgs", "repos_url": "https://api.github.com/users/ibc/repos", "events_url": "https://api.github.com/users/ibc/events{/privacy}", "received_events_url": "https://api.github.com/users/ibc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-12-31T17:46:24Z", "updated_at": "2018-01-04T16:35:58Z", "closed_at": "2018-01-02T23:25:18Z", "author_association": "NONE", "body": "Basically that. I know that a `json` object holds a string and I need to know its length, hopefully without having to convert it into a C++ `std::string`.\r\n\r\nIs it possible?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/896", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/896/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/896/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/896/events", "html_url": "https://github.com/nlohmann/json/issues/896", "id": 284927933, "node_id": "MDU6SXNzdWUyODQ5Mjc5MzM=", "number": 896, "title": "Problem parsing array to global vector", "user": {"login": "davidtabernerom", "id": 16870364, "node_id": "MDQ6VXNlcjE2ODcwMzY0", "avatar_url": "https://avatars1.githubusercontent.com/u/16870364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtabernerom", "html_url": "https://github.com/davidtabernerom", "followers_url": "https://api.github.com/users/davidtabernerom/followers", "following_url": "https://api.github.com/users/davidtabernerom/following{/other_user}", "gists_url": "https://api.github.com/users/davidtabernerom/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtabernerom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtabernerom/subscriptions", "organizations_url": "https://api.github.com/users/davidtabernerom/orgs", "repos_url": "https://api.github.com/users/davidtabernerom/repos", "events_url": "https://api.github.com/users/davidtabernerom/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtabernerom/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-28T14:41:29Z", "updated_at": "2017-12-28T16:57:11Z", "closed_at": "2017-12-28T16:57:11Z", "author_association": "NONE", "body": "I am trying to parse a JSON Array of values to a global declared vector.\r\nFor some reason, it does not properly parsed it to an actually declared vector, but it does to a newly inline created vector.\r\n\r\nThis does NOT work...\r\n```cpp\r\n#include \"./json.hpp\"\r\nstd::vector<std::string> UserList;\r\nint main(int argc, char *argv[])\r\n{\r\n\t//\r\n\tstd::ifstream ConfigurationFile(\"./userlist.json\");\r\n\tnlohmann::json ConfigurationJSON;\r\n\tConfigurationFile >> ConfigurationJSON;\r\n\tUserList = ConfigurationJSON[\"Program\"][\"UserList\"];\r\n\t//\r\n}\r\n```\r\nThe console returns this\r\n```\r\n./source/main.cpp: In function \u2018int main(int, char**)\u2019:\r\n../source/main.cpp:116:19: error: ambiguous overload for \u2018operator=\u2019 (operand types are \u2018std::vector<std::__cxx11::basic_string<char> >\u2019 and \u2018nlohmann::basic_json<>::value_type {aka nlohmann::basic_json<>}\u2019)\r\n  UserList = ConfigurationJSON[\"Program\"][\"UserList\"];\r\n```\r\n----\r\n\r\nWhile both this...\r\n```cpp\r\n#include \"./json.hpp\"\r\nint main(int argc, char *argv[])\r\n{\r\n\t//\r\n\tstd::ifstream ConfigurationFile(\"./userlist.json\");\r\n\tnlohmann::json ConfigurationJSON;\r\n\tConfigurationFile >> ConfigurationJSON;\r\n\tstd::vector<std::string> UserList = ConfigurationJSON[\"Program\"][\"UserList\"];\r\n\t//\r\n}\r\n```\r\n\r\nand this...\r\n```cpp\r\n#include \"./json.hpp\"\r\nstd::vector<std::string> UserList;\r\nint main(int argc, char *argv[])\r\n{\r\n\t//\r\n\tstd::ifstream ConfigurationFile(\"./userlist.json\");\r\n\tnlohmann::json ConfigurationJSON;\r\n\tConfigurationFile >> ConfigurationJSON;\r\n\tstd::vector<std::string> TemporaryVector = ConfigurationJSON[\"Program\"][\"UserList\"];\r\n\tUserList = TemporaryVector;\r\n\t//\r\n}\r\n```\r\ndo work."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/895", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/895/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/895/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/895/events", "html_url": "https://github.com/nlohmann/json/issues/895", "id": 284778341, "node_id": "MDU6SXNzdWUyODQ3NzgzNDE=", "number": 895, "title": "[Request] Macro generating from_json() and to_json()", "user": {"login": "unrealmistake", "id": 34383248, "node_id": "MDQ6VXNlcjM0MzgzMjQ4", "avatar_url": "https://avatars0.githubusercontent.com/u/34383248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unrealmistake", "html_url": "https://github.com/unrealmistake", "followers_url": "https://api.github.com/users/unrealmistake/followers", "following_url": "https://api.github.com/users/unrealmistake/following{/other_user}", "gists_url": "https://api.github.com/users/unrealmistake/gists{/gist_id}", "starred_url": "https://api.github.com/users/unrealmistake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unrealmistake/subscriptions", "organizations_url": "https://api.github.com/users/unrealmistake/orgs", "repos_url": "https://api.github.com/users/unrealmistake/repos", "events_url": "https://api.github.com/users/unrealmistake/events{/privacy}", "received_events_url": "https://api.github.com/users/unrealmistake/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-27T19:03:11Z", "updated_at": "2018-02-03T14:07:06Z", "closed_at": "2018-02-03T14:07:06Z", "author_association": "NONE", "body": "Making to_json() and from_json() for all classes in my object model is a chore.\r\nI want to create a macro that would generate bodies for these functions. I saw some clues how to make it, but my knowledge of C++ is not good enough to implement it.\r\nI want to be able to write something like this:\r\n```cpp\r\nclass MyClass\r\n{\r\n...\r\n    JsonVar(int, intvar)\r\n    JsonVar(string, stingvar)\r\n...\r\n}\r\nvoid to_json(json& j, const MyClass& p) {\r\nJsonTo(MyClass)\r\n... //some extra serialization\r\n}\r\nvoid from_json(const json& j, MyClass& p) {\r\nJsonFrom(MyClass)\r\n... //some extra deserialization\r\n}\r\n```\r\nand get\r\n```cpp\r\nclass MyClass\r\n{\r\n...\r\n    int intvar;\r\n    string stringvar;\r\n...\r\n}\r\nvoid to_json(json& j, const MyClass& p) {\r\nj = json{ { \"intvar\", p.intvar},\r\n\t\t\t{ \"stringvar\", p.stringvar} };\r\n... //some extra serialization\r\n}\r\nvoid from_json(const json& j, MyClass& p) {\r\np.intvar= j.at(\"intvar\").get<int>();\r\np.stringvar= j.at(\"stringvar\").get<string>();\r\n... //some extra deserialization\r\n}\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/894", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/894/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/894/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/894/events", "html_url": "https://github.com/nlohmann/json/issues/894", "id": 284543514, "node_id": "MDU6SXNzdWUyODQ1NDM1MTQ=", "number": 894, "title": "Invalid RFC6902 copy operation succeeds", "user": {"login": "cmannett85", "id": 12583103, "node_id": "MDQ6VXNlcjEyNTgzMTAz", "avatar_url": "https://avatars1.githubusercontent.com/u/12583103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmannett85", "html_url": "https://github.com/cmannett85", "followers_url": "https://api.github.com/users/cmannett85/followers", "following_url": "https://api.github.com/users/cmannett85/following{/other_user}", "gists_url": "https://api.github.com/users/cmannett85/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmannett85/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmannett85/subscriptions", "organizations_url": "https://api.github.com/users/cmannett85/orgs", "repos_url": "https://api.github.com/users/cmannett85/repos", "events_url": "https://api.github.com/users/cmannett85/events{/privacy}", "received_events_url": "https://api.github.com/users/cmannett85/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/17", "html_url": "https://github.com/nlohmann/json/milestone/17", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/17/labels", "id": 2256017, "node_id": "MDk6TWlsZXN0b25lMjI1NjAxNw==", "number": 17, "title": "Release 3.0.1", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 7, "state": "closed", "created_at": "2017-01-16T19:53:23Z", "updated_at": "2017-12-29T19:16:17Z", "due_on": "2017-12-29T08:00:00Z", "closed_at": "2017-12-29T19:16:17Z"}, "comments": 5, "created_at": "2017-12-26T11:46:37Z", "updated_at": "2017-12-28T17:51:41Z", "closed_at": "2017-12-28T17:51:41Z", "author_association": "NONE", "body": "```cpp\r\nusing nlohmann::json;\r\n\r\nint main()\r\n{\r\n    auto model = R\"({\r\n        \"one\": {\r\n            \"two\": {\r\n                \"three\": \"hello\",\r\n                \"four\": 42\r\n            }\r\n        }\r\n    })\"_json;\r\n\r\n    try {\r\n        model.patch(R\"([{\"op\": \"move\",\r\n                         \"from\": \"/one/two/three\",\r\n                         \"path\": \"/a/b/c\"}])\"_json);\r\n    } catch (json::exception& e) {\r\n        std::cout << \"Move: \" << e.id << std::endl;\r\n    }\r\n\r\n    try {\r\n        model = model.patch(R\"([{\"op\": \"copy\",\r\n                                 \"from\": \"/one/two/three\",\r\n                                 \"path\": \"/a/b/c\"}])\"_json);\r\n        std::cout << model.at(\"/a/b/c\"_json_pointer) << std::endl;\r\n    } catch (json::exception& e) {\r\n        std::cout << \"Copy: \" << e.id << std::endl;\r\n    }\r\n}\r\n\r\n// Results in:\r\nMove: 403\r\n\"hello\"\r\n```\r\nThe above \"move\" and \"copy\" JSON patch operations are both invalid for the same reason: `/a/b/c` is an invalid path because `b` does not already exist - however, the \"copy\" succeeds.\r\n\r\nLegalise:\r\nRFC6902 4.5:\r\n> This operation is functionally identical to an \"add\" operation at the target location using the value specified in the \"from\" member.\r\n\r\nRFC6092 4.1:\r\n> Because this operation is designed to add to existing objects and arrays, its target location will often not exist.  Although the pointer's error handling algorithm will thus be invoked, this specification defines the error handling behavior for \"add\" pointers to ignore that error and add the value as specified. \r\n However, **the object itself or an array containing it does need to exist**, and it remains an error for that not to be the case."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/893", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/893/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/893/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/893/events", "html_url": "https://github.com/nlohmann/json/issues/893", "id": 284457645, "node_id": "MDU6SXNzdWUyODQ0NTc2NDU=", "number": 893, "title": "How to rename a key during looping?", "user": {"login": "gestern", "id": 1861589, "node_id": "MDQ6VXNlcjE4NjE1ODk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1861589?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gestern", "html_url": "https://github.com/gestern", "followers_url": "https://api.github.com/users/gestern/followers", "following_url": "https://api.github.com/users/gestern/following{/other_user}", "gists_url": "https://api.github.com/users/gestern/gists{/gist_id}", "starred_url": "https://api.github.com/users/gestern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gestern/subscriptions", "organizations_url": "https://api.github.com/users/gestern/orgs", "repos_url": "https://api.github.com/users/gestern/repos", "events_url": "https://api.github.com/users/gestern/events{/privacy}", "received_events_url": "https://api.github.com/users/gestern/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-25T16:12:16Z", "updated_at": "2017-12-28T10:24:55Z", "closed_at": "2017-12-28T10:20:09Z", "author_association": "NONE", "body": "I want to change **key** within a loop. Is it possible? How? For example, having a code: \r\n```cpp\r\nfor (auto& a : json::iterator_wrapper(b.value())) {\r\n                auto aname = a.key();\r\n```\r\nHow to rename `a.key()`? Looks like it's not described itself by documentation."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/892", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/892/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/892/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/892/events", "html_url": "https://github.com/nlohmann/json/issues/892", "id": 284356904, "node_id": "MDU6SXNzdWUyODQzNTY5MDQ=", "number": 892, "title": "clang++-6.0 (6.0.0-svn321357-1) warning", "user": {"login": "mgerhardy", "id": 577713, "node_id": "MDQ6VXNlcjU3NzcxMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/577713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgerhardy", "html_url": "https://github.com/mgerhardy", "followers_url": "https://api.github.com/users/mgerhardy/followers", "following_url": "https://api.github.com/users/mgerhardy/following{/other_user}", "gists_url": "https://api.github.com/users/mgerhardy/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgerhardy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgerhardy/subscriptions", "organizations_url": "https://api.github.com/users/mgerhardy/orgs", "repos_url": "https://api.github.com/users/mgerhardy/repos", "events_url": "https://api.github.com/users/mgerhardy/events{/privacy}", "received_events_url": "https://api.github.com/users/mgerhardy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-24T11:16:20Z", "updated_at": "2017-12-24T14:27:28Z", "closed_at": "2017-12-24T14:27:28Z", "author_association": "NONE", "body": "Getting this warning with compiling with clang++ 6.0\r\n\r\n```\r\n/home/mgerhardy/dev/engine/src/modules/core/json.hpp:6323:20: warning: result of comparison of 0 <= unsigned expression is always true [-Wtautological-unsigned-zero-compare]\r\n        return ((0 <= u and u <= 127) ? 0\r\n                 ~ ^  ~\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/891", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/891/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/891/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/891/events", "html_url": "https://github.com/nlohmann/json/issues/891", "id": 284256105, "node_id": "MDU6SXNzdWUyODQyNTYxMDU=", "number": 891, "title": "Make json.hpp aware of the modules TS?", "user": {"login": "AraHaan", "id": 15173749, "node_id": "MDQ6VXNlcjE1MTczNzQ5", "avatar_url": "https://avatars0.githubusercontent.com/u/15173749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AraHaan", "html_url": "https://github.com/AraHaan", "followers_url": "https://api.github.com/users/AraHaan/followers", "following_url": "https://api.github.com/users/AraHaan/following{/other_user}", "gists_url": "https://api.github.com/users/AraHaan/gists{/gist_id}", "starred_url": "https://api.github.com/users/AraHaan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AraHaan/subscriptions", "organizations_url": "https://api.github.com/users/AraHaan/orgs", "repos_url": "https://api.github.com/users/AraHaan/repos", "events_url": "https://api.github.com/users/AraHaan/events{/privacy}", "received_events_url": "https://api.github.com/users/AraHaan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 735376215, "node_id": "MDU6TGFiZWw3MzUzNzYyMTU=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20needs%20more%20info", "name": "state: needs more info", "color": "f9d0c4", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-12-22T21:35:58Z", "updated_at": "2017-12-24T08:34:43Z", "closed_at": "2017-12-24T08:34:43Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\nUsing json.hpp with the Modules TS.\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\n1. Enable the modules TS.\r\n2. try to ``import std.core;`` before ``#include <json.hpp>``\r\n3. ???\r\n\r\n- What is the expected behavior?\r\nFor ``json.hpp`` to ``ifdef`` some macro for if the user has the modules TS to import the standard library dependencies instead of ``#include``ing them. However I am not sure such macro exists.\r\n\r\n- And what is the actual behavior instead?\r\nNo check whatsoever and include of the standard library headers separately.\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\nMSVC++ 2017 15.5.2, Windows 7 Ultimate build 7601 SP1 x64\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\nDevelop branch\r\n\r\n- If you experience a compilation error: can you [compile and run the unit tests](https://github.com/nlohmann/json#execute-unit-tests)?\r\nUnsure on compile errors.\r\n\r\nAlso this might be unrelivant to the issue, It would also be nice if the json.hpp could be imported as well just like ``std.core`` by ``import json;``\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/889", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/889/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/889/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/889/events", "html_url": "https://github.com/nlohmann/json/issues/889", "id": 284204194, "node_id": "MDU6SXNzdWUyODQyMDQxOTQ=", "number": 889, "title": "All enum values not handled in switch cases. ( -Wswitch-enum )", "user": {"login": "shamprasadps", "id": 34718277, "node_id": "MDQ6VXNlcjM0NzE4Mjc3", "avatar_url": "https://avatars0.githubusercontent.com/u/34718277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shamprasadps", "html_url": "https://github.com/shamprasadps", "followers_url": "https://api.github.com/users/shamprasadps/followers", "following_url": "https://api.github.com/users/shamprasadps/following{/other_user}", "gists_url": "https://api.github.com/users/shamprasadps/gists{/gist_id}", "starred_url": "https://api.github.com/users/shamprasadps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shamprasadps/subscriptions", "organizations_url": "https://api.github.com/users/shamprasadps/orgs", "repos_url": "https://api.github.com/users/shamprasadps/repos", "events_url": "https://api.github.com/users/shamprasadps/events{/privacy}", "received_events_url": "https://api.github.com/users/shamprasadps/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-12-22T16:36:23Z", "updated_at": "2017-12-28T10:36:44Z", "closed_at": "2017-12-28T10:36:44Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\nI am having issues while compiling a C++ program using the json.hpp file. I am using the complier options -Wswitch-enum and -Werror. I see that all the enums are not handled in the switch cases, which is why I am seeing some errors while compiling. \r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\nInclude the json.hpp in the header of a c++ program and compile the program using -Wswitch-enum and -Werror options. \r\n\r\n- What is the expected behavior?\r\nAll enums must be handled and there should be no errors while using these compiler options. \r\n\r\n- And what is the actual behavior instead?\r\nActual behaviour: It throws the errors like \"src/json.hpp:3005:9: error: enumeration value \u2018end_array\u2019 not handled in switch [-Werror=switch-enum]\" \r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\nIm using a Ubuntu OS and using a supported compiler.\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\nUsed from 'develop' branch. \r\n\r\n- If you experience a compilation error: can you [compile and run the unit tests](https://github.com/nlohmann/json#execute-unit-tests)?\r\nNot experiencing any issues with the existing compiler options. Errors only when using -Wswitch-enum and -Werror. \r\n\r\n**Feature Request**\r\n\r\n- Describe the feature in as much detail as possible.\r\n\r\n- Include sample usage where appropriate.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/888", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/888/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/888/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/888/events", "html_url": "https://github.com/nlohmann/json/issues/888", "id": 284136937, "node_id": "MDU6SXNzdWUyODQxMzY5Mzc=", "number": 888, "title": "JSON Pointer resolve failure resulting in incorrect exception code", "user": {"login": "cmannett85", "id": 12583103, "node_id": "MDQ6VXNlcjEyNTgzMTAz", "avatar_url": "https://avatars1.githubusercontent.com/u/12583103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmannett85", "html_url": "https://github.com/cmannett85", "followers_url": "https://api.github.com/users/cmannett85/followers", "following_url": "https://api.github.com/users/cmannett85/following{/other_user}", "gists_url": "https://api.github.com/users/cmannett85/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmannett85/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmannett85/subscriptions", "organizations_url": "https://api.github.com/users/cmannett85/orgs", "repos_url": "https://api.github.com/users/cmannett85/repos", "events_url": "https://api.github.com/users/cmannett85/events{/privacy}", "received_events_url": "https://api.github.com/users/cmannett85/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/17", "html_url": "https://github.com/nlohmann/json/milestone/17", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/17/labels", "id": 2256017, "node_id": "MDk6TWlsZXN0b25lMjI1NjAxNw==", "number": 17, "title": "Release 3.0.1", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 7, "state": "closed", "created_at": "2017-01-16T19:53:23Z", "updated_at": "2017-12-29T19:16:17Z", "due_on": "2017-12-29T08:00:00Z", "closed_at": "2017-12-29T19:16:17Z"}, "comments": 9, "created_at": "2017-12-22T11:09:54Z", "updated_at": "2017-12-28T11:46:26Z", "closed_at": "2017-12-28T11:45:54Z", "author_association": "NONE", "body": "```cpp\r\nint main()\r\n{\r\n    auto model = R\"({\r\n        \"a\": {\r\n            \"b\": 42\r\n        }\r\n    })\"_json;\r\n\r\n    try {\r\n        model.at(\"/a/c\"_json_pointer);\r\n    } catch (json::exception& e) {\r\n        std::cout << \"ID: \" << e.id << std::endl;\r\n    }\r\n\r\n    return EXIT_SUCCESS;\r\n}\r\n```\r\nPrints:\r\n> ID: 403\r\n\r\nAccording to the `json::out_of_range` and `json::at(const json_pointer&)` docs, a JSON pointer that cannot be resolved should return a 404, but it actually returns a 403."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/887", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/887/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/887/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/887/events", "html_url": "https://github.com/nlohmann/json/issues/887", "id": 284067621, "node_id": "MDU6SXNzdWUyODQwNjc2MjE=", "number": 887, "title": "Regression Tests Failure using \"ctest\"", "user": {"login": "bignmllc", "id": 743568, "node_id": "MDQ6VXNlcjc0MzU2OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/743568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignmllc", "html_url": "https://github.com/bignmllc", "followers_url": "https://api.github.com/users/bignmllc/followers", "following_url": "https://api.github.com/users/bignmllc/following{/other_user}", "gists_url": "https://api.github.com/users/bignmllc/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignmllc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignmllc/subscriptions", "organizations_url": "https://api.github.com/users/bignmllc/orgs", "repos_url": "https://api.github.com/users/bignmllc/repos", "events_url": "https://api.github.com/users/bignmllc/events{/privacy}", "received_events_url": "https://api.github.com/users/bignmllc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 344572510, "node_id": "MDU6TGFiZWwzNDQ1NzI1MTA=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20help%20needed", "name": "state: help needed", "color": "fbca04", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-12-22T04:06:43Z", "updated_at": "2018-01-29T19:12:34Z", "closed_at": "2018-01-29T19:12:34Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\n\r\nAfter using the build process to create the tests (documented at bottom of README.md file), all of the tests run by \"ctest\" are built and run successfully, except for two regression tests. The \"ctest\" application produced the following results:\r\n\r\n-- The CXX compiler identification is GNU 6.2.0\r\n-- Check for working CXX compiler: /usr/bin/c++\r\n-- Check for working CXX compiler: /usr/bin/c++ -- works\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Detecting CXX compile features\r\n-- Detecting CXX compile features - done\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /usr/local/src/json-develop/build\r\nScanning dependencies of target catch_main\r\n[  1%] Building CXX object test/CMakeFiles/catch_main.dir/src/unit.cpp.o\r\n[  1%] Built target catch_main\r\nScanning dependencies of target test-unicode\r\n[  2%] Building CXX object test/CMakeFiles/test-unicode.dir/src/unit-unicode.cpp.o\r\n[  4%] Linking CXX executable test-unicode\r\n[  4%] Built target test-unicode\r\nScanning dependencies of target test-reference_access\r\n[  5%] Building CXX object test/CMakeFiles/test-reference_access.dir/src/unit-reference_access.cpp.o\r\n[  7%] Linking CXX executable test-reference_access\r\n[  7%] Built target test-reference_access\r\nScanning dependencies of target test-msgpack\r\n[  8%] Building CXX object test/CMakeFiles/test-msgpack.dir/src/unit-msgpack.cpp.o\r\n[  9%] Linking CXX executable test-msgpack\r\n[  9%] Built target test-msgpack\r\nScanning dependencies of target test-modifiers\r\n[ 11%] Building CXX object test/CMakeFiles/test-modifiers.dir/src/unit-modifiers.cpp.o\r\n[ 12%] Linking CXX executable test-modifiers\r\n[ 12%] Built target test-modifiers\r\nScanning dependencies of target test-meta\r\n[ 14%] Building CXX object test/CMakeFiles/test-meta.dir/src/unit-meta.cpp.o\r\n[ 15%] Linking CXX executable test-meta\r\n[ 15%] Built target test-meta\r\nScanning dependencies of target test-json_pointer\r\n[ 16%] Building CXX object test/CMakeFiles/test-json_pointer.dir/src/unit-json_pointer.cpp.o\r\n[ 18%] Linking CXX executable test-json_pointer\r\n[ 18%] Built target test-json_pointer\r\nScanning dependencies of target test-class_parser\r\n[ 19%] Building CXX object test/CMakeFiles/test-class_parser.dir/src/unit-class_parser.cpp.o\r\n[ 21%] Linking CXX executable test-class_parser\r\n[ 21%] Built target test-class_parser\r\nScanning dependencies of target test-regression\r\n[ 22%] Building CXX object test/CMakeFiles/test-regression.dir/src/unit-regression.cpp.o\r\n[ 23%] Linking CXX executable test-regression\r\n[ 23%] Built target test-regression\r\nScanning dependencies of target test-class_lexer\r\n[ 25%] Building CXX object test/CMakeFiles/test-class_lexer.dir/src/unit-class_lexer.cpp.o\r\n[ 26%] Linking CXX executable test-class_lexer\r\n[ 26%] Built target test-class_lexer\r\nScanning dependencies of target test-cbor\r\n[ 28%] Building CXX object test/CMakeFiles/test-cbor.dir/src/unit-cbor.cpp.o\r\n[ 29%] Linking CXX executable test-cbor\r\n[ 29%] Built target test-cbor\r\nScanning dependencies of target test-udt\r\n[ 30%] Building CXX object test/CMakeFiles/test-udt.dir/src/unit-udt.cpp.o\r\n[ 32%] Linking CXX executable test-udt\r\n[ 32%] Built target test-udt\r\nScanning dependencies of target test-algorithms\r\n[ 33%] Building CXX object test/CMakeFiles/test-algorithms.dir/src/unit-algorithms.cpp.o\r\n[ 35%] Linking CXX executable test-algorithms\r\n[ 35%] Built target test-algorithms\r\nScanning dependencies of target test-comparison\r\n[ 36%] Building CXX object test/CMakeFiles/test-comparison.dir/src/unit-comparison.cpp.o\r\n[ 38%] Linking CXX executable test-comparison\r\n[ 38%] Built target test-comparison\r\nScanning dependencies of target test-class_const_iterator\r\n[ 39%] Building CXX object test/CMakeFiles/test-class_const_iterator.dir/src/unit-class_const_iterator.cpp.o\r\n[ 40%] Linking CXX executable test-class_const_iterator\r\n[ 40%] Built target test-class_const_iterator\r\nScanning dependencies of target test-element_access1\r\n[ 42%] Building CXX object test/CMakeFiles/test-element_access1.dir/src/unit-element_access1.cpp.o\r\n[ 43%] Linking CXX executable test-element_access1\r\n[ 43%] Built target test-element_access1\r\nScanning dependencies of target test-iterator_wrapper\r\n[ 45%] Building CXX object test/CMakeFiles/test-iterator_wrapper.dir/src/unit-iterator_wrapper.cpp.o\r\n[ 46%] Linking CXX executable test-iterator_wrapper\r\n[ 46%] Built target test-iterator_wrapper\r\nScanning dependencies of target test-noexcept\r\n[ 47%] Building CXX object test/CMakeFiles/test-noexcept.dir/src/unit-noexcept.cpp.o\r\n[ 49%] Linking CXX executable test-noexcept\r\n[ 49%] Built target test-noexcept\r\nScanning dependencies of target test-allocator\r\n[ 50%] Building CXX object test/CMakeFiles/test-allocator.dir/src/unit-allocator.cpp.o\r\n[ 52%] Linking CXX executable test-allocator\r\n[ 52%] Built target test-allocator\r\nScanning dependencies of target test-capacity\r\n[ 53%] Building CXX object test/CMakeFiles/test-capacity.dir/src/unit-capacity.cpp.o\r\n[ 54%] Linking CXX executable test-capacity\r\n[ 54%] Built target test-capacity\r\nScanning dependencies of target test-class_iterator\r\n[ 56%] Building CXX object test/CMakeFiles/test-class_iterator.dir/src/unit-class_iterator.cpp.o\r\n[ 57%] Linking CXX executable test-class_iterator\r\n[ 57%] Built target test-class_iterator\r\nScanning dependencies of target test-convenience\r\n[ 59%] Building CXX object test/CMakeFiles/test-convenience.dir/src/unit-convenience.cpp.o\r\n[ 60%] Linking CXX executable test-convenience\r\n[ 60%] Built target test-convenience\r\nScanning dependencies of target test-concepts\r\n[ 61%] Building CXX object test/CMakeFiles/test-concepts.dir/src/unit-concepts.cpp.o\r\n[ 63%] Linking CXX executable test-concepts\r\n[ 63%] Built target test-concepts\r\nScanning dependencies of target test-readme\r\n[ 64%] Building CXX object test/CMakeFiles/test-readme.dir/src/unit-readme.cpp.o\r\n[ 66%] Linking CXX executable test-readme\r\n[ 66%] Built target test-readme\r\nScanning dependencies of target test-constructor1\r\n[ 67%] Building CXX object test/CMakeFiles/test-constructor1.dir/src/unit-constructor1.cpp.o\r\n[ 69%] Linking CXX executable test-constructor1\r\n[ 69%] Built target test-constructor1\r\nScanning dependencies of target test-pointer_access\r\n[ 70%] Building CXX object test/CMakeFiles/test-pointer_access.dir/src/unit-pointer_access.cpp.o\r\n[ 71%] Linking CXX executable test-pointer_access\r\n[ 71%] Built target test-pointer_access\r\nScanning dependencies of target test-deserialization\r\n[ 73%] Building CXX object test/CMakeFiles/test-deserialization.dir/src/unit-deserialization.cpp.o\r\n/usr/local/src/json-develop/test/src/unit-deserialization.cpp: In function \u2018void ____C_A_T_C_H____T_E_S_T____0()\u2019:\r\n/usr/local/src/json-develop/test/src/unit-deserialization.cpp:72:18: warning: \u2018std::istream& nlohmann::operator<<(nlohmann::basic_json<>&, std::istream&)\u2019 is deprecated [-Wdeprecated-declarations]\r\n             j << ss;\r\n                  ^~\r\nIn file included from /usr/local/src/json-develop/test/src/unit-deserialization.cpp:31:0:\r\n/usr/local/src/json-develop/src/json.hpp:13119:26: note: declared here\r\n     friend std::istream& operator<<(basic_json& j, std::istream& i)\r\n                          ^~~~~~~~\r\nIn file included from /usr/local/src/json-develop/test/src/unit-deserialization.cpp:29:0:\r\n/usr/local/src/json-develop/test/src/unit-deserialization.cpp:129:34: warning: \u2018std::istream& nlohmann::operator<<(nlohmann::basic_json<>&, std::istream&)\u2019 is deprecated [-Wdeprecated-declarations]\r\n             CHECK_THROWS_AS(j << ss1, json::parse_error&);\r\n                                  ^\r\nIn file included from /usr/local/src/json-develop/test/src/unit-deserialization.cpp:31:0:\r\n/usr/local/src/json-develop/src/json.hpp:13119:26: note: declared here\r\n     friend std::istream& operator<<(basic_json& j, std::istream& i)\r\n                          ^~~~~~~~\r\nIn file included from /usr/local/src/json-develop/test/src/unit-deserialization.cpp:29:0:\r\n/usr/local/src/json-develop/test/src/unit-deserialization.cpp:130:36: warning: \u2018std::istream& nlohmann::operator<<(nlohmann::basic_json<>&, std::istream&)\u2019 is deprecated [-Wdeprecated-declarations]\r\n             CHECK_THROWS_WITH(j << ss2,\r\n                                    ^\r\nIn file included from /usr/local/src/json-develop/test/src/unit-deserialization.cpp:31:0:\r\n/usr/local/src/json-develop/src/json.hpp:13119:26: note: declared here\r\n     friend std::istream& operator<<(basic_json& j, std::istream& i)\r\n                          ^~~~~~~~\r\n/usr/local/src/json-develop/test/src/unit-deserialization.cpp:532:18: warning: \u2018std::istream& nlohmann::operator<<(nlohmann::basic_json<>&, std::istream&)\u2019 is deprecated [-Wdeprecated-declarations]\r\n             j << s;\r\n                  ^\r\nIn file included from /usr/local/src/json-develop/test/src/unit-deserialization.cpp:31:0:\r\n/usr/local/src/json-develop/src/json.hpp:13119:26: note: declared here\r\n     friend std::istream& operator<<(basic_json& j, std::istream& i)\r\n                          ^~~~~~~~\r\n/usr/local/src/json-develop/test/src/unit-deserialization.cpp:534:18: warning: \u2018std::istream& nlohmann::operator<<(nlohmann::basic_json<>&, std::istream&)\u2019 is deprecated [-Wdeprecated-declarations]\r\n             j << s;\r\n                  ^\r\nIn file included from /usr/local/src/json-develop/test/src/unit-deserialization.cpp:31:0:\r\n/usr/local/src/json-develop/src/json.hpp:13119:26: note: declared here\r\n     friend std::istream& operator<<(basic_json& j, std::istream& i)\r\n                          ^~~~~~~~\r\n[ 74%] Linking CXX executable test-deserialization\r\n[ 74%] Built target test-deserialization\r\nScanning dependencies of target test-testsuites\r\n[ 76%] Building CXX object test/CMakeFiles/test-testsuites.dir/src/unit-testsuites.cpp.o\r\n[ 77%] Linking CXX executable test-testsuites\r\n[ 77%] Built target test-testsuites\r\nScanning dependencies of target test-conversions\r\n[ 78%] Building CXX object test/CMakeFiles/test-conversions.dir/src/unit-conversions.cpp.o\r\n[ 80%] Linking CXX executable test-conversions\r\n[ 80%] Built target test-conversions\r\nScanning dependencies of target test-element_access2\r\n[ 81%] Building CXX object test/CMakeFiles/test-element_access2.dir/src/unit-element_access2.cpp.o\r\n[ 83%] Linking CXX executable test-element_access2\r\n[ 83%] Built target test-element_access2\r\nScanning dependencies of target test-inspection\r\n[ 84%] Building CXX object test/CMakeFiles/test-inspection.dir/src/unit-inspection.cpp.o\r\n[ 85%] Linking CXX executable test-inspection\r\n[ 85%] Built target test-inspection\r\nScanning dependencies of target test-json_patch\r\n[ 87%] Building CXX object test/CMakeFiles/test-json_patch.dir/src/unit-json_patch.cpp.o\r\n[ 88%] Linking CXX executable test-json_patch\r\n[ 88%] Built target test-json_patch\r\nScanning dependencies of target test-iterators1\r\n[ 90%] Building CXX object test/CMakeFiles/test-iterators1.dir/src/unit-iterators1.cpp.o\r\n[ 91%] Linking CXX executable test-iterators1\r\n[ 91%] Built target test-iterators1\r\nScanning dependencies of target test-serialization\r\n[ 92%] Building CXX object test/CMakeFiles/test-serialization.dir/src/unit-serialization.cpp.o\r\n/usr/local/src/json-develop/test/src/unit-serialization.cpp: In function \u2018void ____C_A_T_C_H____T_E_S_T____0()\u2019:\r\n/usr/local/src/json-develop/test/src/unit-serialization.cpp:71:18: warning: \u2018std::ostream& nlohmann::operator>>(const nlohmann::basic_json<>&, std::ostream&)\u2019 is deprecated [-Wdeprecated-declarations]\r\n             j >> ss;\r\n                  ^~\r\nIn file included from /usr/local/src/json-develop/test/src/unit-serialization.cpp:31:0:\r\n/usr/local/src/json-develop/src/json.hpp:12933:26: note: declared here\r\n     friend std::ostream& operator>>(const basic_json& j, std::ostream& o)\r\n                          ^~~~~~~~\r\n/usr/local/src/json-develop/test/src/unit-serialization.cpp:80:18: warning: \u2018std::ostream& nlohmann::operator>>(const nlohmann::basic_json<>&, std::ostream&)\u2019 is deprecated [-Wdeprecated-declarations]\r\n             j >> ss;\r\n                  ^~\r\nIn file included from /usr/local/src/json-develop/test/src/unit-serialization.cpp:31:0:\r\n/usr/local/src/json-develop/src/json.hpp:12933:26: note: declared here\r\n     friend std::ostream& operator>>(const basic_json& j, std::ostream& o)\r\n                          ^~~~~~~~\r\n/usr/local/src/json-develop/test/src/unit-serialization.cpp:91:18: warning: \u2018std::ostream& nlohmann::operator>>(const nlohmann::basic_json<>&, std::ostream&)\u2019 is deprecated [-Wdeprecated-declarations]\r\n             j >> ss;\r\n                  ^~\r\nIn file included from /usr/local/src/json-develop/test/src/unit-serialization.cpp:31:0:\r\n/usr/local/src/json-develop/src/json.hpp:12933:26: note: declared here\r\n     friend std::ostream& operator>>(const basic_json& j, std::ostream& o)\r\n                          ^~~~~~~~\r\n[ 94%] Linking CXX executable test-serialization\r\n[ 94%] Built target test-serialization\r\nScanning dependencies of target test-constructor2\r\n[ 95%] Building CXX object test/CMakeFiles/test-constructor2.dir/src/unit-constructor2.cpp.o\r\n[ 97%] Linking CXX executable test-constructor2\r\n[ 97%] Built target test-constructor2\r\nScanning dependencies of target test-iterators2\r\n[ 98%] Building CXX object test/CMakeFiles/test-iterators2.dir/src/unit-iterators2.cpp.o\r\n[100%] Linking CXX executable test-iterators2\r\n[100%] Built target test-iterators2\r\nTest project /usr/local/src/json-develop/build\r\n      Start  1: test-algorithms_default\r\n 1/70 Test  #1: test-algorithms_default .............   Passed    0.01 sec\r\n      Start  2: test-algorithms_all\r\n 2/70 Test  #2: test-algorithms_all .................   Passed    0.01 sec\r\n      Start  3: test-allocator_default\r\n 3/70 Test  #3: test-allocator_default ..............   Passed    0.00 sec\r\n      Start  4: test-allocator_all\r\n 4/70 Test  #4: test-allocator_all ..................   Passed    0.00 sec\r\n      Start  5: test-capacity_default\r\n 5/70 Test  #5: test-capacity_default ...............   Passed    0.01 sec\r\n      Start  6: test-capacity_all\r\n 6/70 Test  #6: test-capacity_all ...................   Passed    0.01 sec\r\n      Start  7: test-cbor_default\r\n 7/70 Test  #7: test-cbor_default ...................   Passed    3.87 sec\r\n      Start  8: test-cbor_all\r\n 8/70 Test  #8: test-cbor_all .......................   Passed   47.03 sec\r\n      Start  9: test-class_const_iterator_default\r\n 9/70 Test  #9: test-class_const_iterator_default ...   Passed    0.01 sec\r\n      Start 10: test-class_const_iterator_all\r\n10/70 Test #10: test-class_const_iterator_all .......   Passed    0.01 sec\r\n      Start 11: test-class_iterator_default\r\n11/70 Test #11: test-class_iterator_default .........   Passed    0.01 sec\r\n      Start 12: test-class_iterator_all\r\n12/70 Test #12: test-class_iterator_all .............   Passed    0.01 sec\r\n      Start 13: test-class_lexer_default\r\n13/70 Test #13: test-class_lexer_default ............   Passed    0.01 sec\r\n      Start 14: test-class_lexer_all\r\n14/70 Test #14: test-class_lexer_all ................   Passed    0.00 sec\r\n      Start 15: test-class_parser_default\r\n15/70 Test #15: test-class_parser_default ...........   Passed    0.17 sec\r\n      Start 16: test-class_parser_all\r\n16/70 Test #16: test-class_parser_all ...............   Passed    0.17 sec\r\n      Start 17: test-comparison_default\r\n17/70 Test #17: test-comparison_default .............   Passed    0.02 sec\r\n      Start 18: test-comparison_all\r\n18/70 Test #18: test-comparison_all .................   Passed    0.02 sec\r\n      Start 19: test-concepts_default\r\n19/70 Test #19: test-concepts_default ...............   Passed    0.00 sec\r\n      Start 20: test-concepts_all\r\n20/70 Test #20: test-concepts_all ...................   Passed    0.00 sec\r\n      Start 21: test-constructor1_default\r\n21/70 Test #21: test-constructor1_default ...........   Passed    0.05 sec\r\n      Start 22: test-constructor1_all\r\n22/70 Test #22: test-constructor1_all ...............   Passed    0.04 sec\r\n      Start 23: test-constructor2_default\r\n23/70 Test #23: test-constructor2_default ...........   Passed    0.00 sec\r\n      Start 24: test-constructor2_all\r\n24/70 Test #24: test-constructor2_all ...............   Passed    0.01 sec\r\n      Start 25: test-convenience_default\r\n25/70 Test #25: test-convenience_default ............   Passed    0.00 sec\r\n      Start 26: test-convenience_all\r\n26/70 Test #26: test-convenience_all ................   Passed    0.00 sec\r\n      Start 27: test-conversions_default\r\n27/70 Test #27: test-conversions_default ............   Passed    0.03 sec\r\n      Start 28: test-conversions_all\r\n28/70 Test #28: test-conversions_all ................   Passed    0.03 sec\r\n      Start 29: test-deserialization_default\r\n29/70 Test #29: test-deserialization_default ........   Passed    0.01 sec\r\n      Start 30: test-deserialization_all\r\n30/70 Test #30: test-deserialization_all ............   Passed    0.02 sec\r\n      Start 31: test-element_access1_default\r\n31/70 Test #31: test-element_access1_default ........   Passed    0.02 sec\r\n      Start 32: test-element_access1_all\r\n32/70 Test #32: test-element_access1_all ............   Passed    0.02 sec\r\n      Start 33: test-element_access2_default\r\n33/70 Test #33: test-element_access2_default ........   Passed    0.02 sec\r\n      Start 34: test-element_access2_all\r\n34/70 Test #34: test-element_access2_all ............   Passed    0.03 sec\r\n      Start 35: test-inspection_default\r\n35/70 Test #35: test-inspection_default .............   Passed    8.58 sec\r\n      Start 36: test-inspection_all\r\n36/70 Test #36: test-inspection_all .................   Passed    8.51 sec\r\n      Start 37: test-iterator_wrapper_default\r\n37/70 Test #37: test-iterator_wrapper_default .......   Passed    0.01 sec\r\n      Start 38: test-iterator_wrapper_all\r\n38/70 Test #38: test-iterator_wrapper_all ...........   Passed    0.01 sec\r\n      Start 39: test-iterators1_default\r\n39/70 Test #39: test-iterators1_default .............   Passed    0.03 sec\r\n      Start 40: test-iterators1_all\r\n40/70 Test #40: test-iterators1_all .................   Passed    0.02 sec\r\n      Start 41: test-iterators2_default\r\n41/70 Test #41: test-iterators2_default .............   Passed    0.07 sec\r\n      Start 42: test-iterators2_all\r\n42/70 Test #42: test-iterators2_all .................   Passed    0.07 sec\r\n      Start 43: test-json_patch_default\r\n43/70 Test #43: test-json_patch_default .............   Passed    0.02 sec\r\n      Start 44: test-json_patch_all\r\n44/70 Test #44: test-json_patch_all .................   Passed    0.02 sec\r\n      Start 45: test-json_pointer_default\r\n45/70 Test #45: test-json_pointer_default ...........   Passed    0.01 sec\r\n      Start 46: test-json_pointer_all\r\n46/70 Test #46: test-json_pointer_all ...............   Passed    0.01 sec\r\n      Start 47: test-meta_default\r\n47/70 Test #47: test-meta_default ...................   Passed    0.00 sec\r\n      Start 48: test-meta_all\r\n48/70 Test #48: test-meta_all .......................   Passed    0.00 sec\r\n      Start 49: test-modifiers_default\r\n49/70 Test #49: test-modifiers_default ..............   Passed    0.02 sec\r\n      Start 50: test-modifiers_all\r\n50/70 Test #50: test-modifiers_all ..................   Passed    0.02 sec\r\n      Start 51: test-msgpack_default\r\n51/70 Test #51: test-msgpack_default ................   Passed    3.60 sec\r\n      Start 52: test-msgpack_all\r\n52/70 Test #52: test-msgpack_all ....................   Passed   46.60 sec\r\n      Start 53: test-noexcept_default\r\n53/70 Test #53: test-noexcept_default ...............   Passed    0.00 sec\r\n      Start 54: test-noexcept_all\r\n54/70 Test #54: test-noexcept_all ...................   Passed    0.00 sec\r\n      Start 55: test-pointer_access_default\r\n55/70 Test #55: test-pointer_access_default .........   Passed    0.01 sec\r\n      Start 56: test-pointer_access_all\r\n56/70 Test #56: test-pointer_access_all .............   Passed    0.01 sec\r\n      Start 57: test-readme_default\r\n57/70 Test #57: test-readme_default .................   Passed    0.00 sec\r\n      Start 58: test-readme_all\r\n58/70 Test #58: test-readme_all .....................   Passed    0.01 sec\r\n      Start 59: test-reference_access_default\r\n59/70 Test #59: test-reference_access_default .......   Passed    0.01 sec\r\n      Start 60: test-reference_access_all\r\n60/70 Test #60: test-reference_access_all ...........   Passed    0.01 sec\r\n      Start 61: test-regression_default\r\n61/70 Test #61: test-regression_default .............***Failed    8.60 sec\r\n      Start 62: test-regression_all\r\n62/70 Test #62: test-regression_all .................***Failed    8.48 sec\r\n      Start 63: test-serialization_default\r\n63/70 Test #63: test-serialization_default ..........   Passed    0.00 sec\r\n      Start 64: test-serialization_all\r\n64/70 Test #64: test-serialization_all ..............   Passed    0.00 sec\r\n      Start 65: test-testsuites_default\r\n65/70 Test #65: test-testsuites_default .............   Passed    0.17 sec\r\n      Start 66: test-testsuites_all\r\n66/70 Test #66: test-testsuites_all .................   Passed    0.10 sec\r\n      Start 67: test-udt_default\r\n67/70 Test #67: test-udt_default ....................   Passed    0.01 sec\r\n      Start 68: test-udt_all\r\n68/70 Test #68: test-udt_all ........................   Passed    0.01 sec\r\n      Start 69: test-unicode_default\r\n69/70 Test #69: test-unicode_default ................   Passed    0.00 sec\r\n      Start 70: test-unicode_all\r\n70/70 Test #70: test-unicode_all ....................   Passed  396.11 sec\r\n\r\n97% tests passed, 2 tests failed out of 70\r\n\r\nLabel Time Summary:\r\nall        = 507.38 sec*proc (35 tests)\r\ndefault    =  25.40 sec*proc (35 tests)\r\n\r\nTotal Test time (real) = 532.83 sec\r\n\r\nThe following tests FAILED:\r\n\t 61 - test-regression_default (Failed)\r\n\t 62 - test-regression_all (Failed)\r\nErrors while running CTest\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\n\r\n$ mkdir build\r\n$ cd build\r\n$ cmake ..\r\n$ cmake --build .\r\n$ ctest\r\n\r\n- What is the expected behavior?\r\n\r\nThat all tests would return success.\r\n\r\n- And what is the actual behavior instead?\r\n\r\nAll but the two regression tests passed.\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\n\r\n$ g++ --version\r\ng++ (GCC) 6.2.0\r\nCopyright (C) 2016 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\r\n$ uname -a\r\nLinux maczorin6 3.13.0-107-generic #154~precise1-Ubuntu SMP Tue Dec 20 10:36:28 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\n\r\nI downloaded a ZIP file from the GitHub site called \"json-develop.zip\".\r\n\r\n- If you experience a compilation error: can you [compile and run the unit tests](https://github.com/nlohmann/json#execute-unit-tests)?\r\n\r\nYes.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/886", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/886/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/886/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/886/events", "html_url": "https://github.com/nlohmann/json/issues/886", "id": 283905521, "node_id": "MDU6SXNzdWUyODM5MDU1MjE=", "number": 886, "title": "Unexpected nested arrays from std::vector", "user": {"login": "hoisunng", "id": 32238310, "node_id": "MDQ6VXNlcjMyMjM4MzEw", "avatar_url": "https://avatars0.githubusercontent.com/u/32238310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hoisunng", "html_url": "https://github.com/hoisunng", "followers_url": "https://api.github.com/users/hoisunng/followers", "following_url": "https://api.github.com/users/hoisunng/following{/other_user}", "gists_url": "https://api.github.com/users/hoisunng/gists{/gist_id}", "starred_url": "https://api.github.com/users/hoisunng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hoisunng/subscriptions", "organizations_url": "https://api.github.com/users/hoisunng/orgs", "repos_url": "https://api.github.com/users/hoisunng/repos", "events_url": "https://api.github.com/users/hoisunng/events{/privacy}", "received_events_url": "https://api.github.com/users/hoisunng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-21T14:51:56Z", "updated_at": "2017-12-22T09:53:49Z", "closed_at": "2017-12-22T09:04:31Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\nUnexpected nested arrays from `std::vector`\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\n```\r\nstd::vector<int> v;\r\njson j{v};\r\nstd::cout << j << std::endl;\r\n```\r\n\r\n- What is the expected behavior?\r\ncout prints: `[]`\r\n\r\n- And what is the actual behavior instead?\r\ncout prints: `[[]]`\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\nRHEL7 with GCC 6.3.1\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\nRelease Version 2.1.1"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/884", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/884/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/884/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/884/events", "html_url": "https://github.com/nlohmann/json/issues/884", "id": 283275214, "node_id": "MDU6SXNzdWUyODMyNzUyMTQ=", "number": 884, "title": "erase multiple elements from a json object", "user": {"login": "best9541", "id": 34686152, "node_id": "MDQ6VXNlcjM0Njg2MTUy", "avatar_url": "https://avatars1.githubusercontent.com/u/34686152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/best9541", "html_url": "https://github.com/best9541", "followers_url": "https://api.github.com/users/best9541/followers", "following_url": "https://api.github.com/users/best9541/following{/other_user}", "gists_url": "https://api.github.com/users/best9541/gists{/gist_id}", "starred_url": "https://api.github.com/users/best9541/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/best9541/subscriptions", "organizations_url": "https://api.github.com/users/best9541/orgs", "repos_url": "https://api.github.com/users/best9541/repos", "events_url": "https://api.github.com/users/best9541/events{/privacy}", "received_events_url": "https://api.github.com/users/best9541/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-12-19T15:42:28Z", "updated_at": "2017-12-21T12:16:10Z", "closed_at": "2017-12-21T12:16:10Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\nI want to erase several elements of a json object having a specific criteria.\r\nTherefore I use json::erase with std::remove_if and a lambda function:\r\n\r\n```cpp\r\nTEST(Parse_Sd_service_timing_test, remove_optional)\r\n{\r\n    json j = {{\"val1\", nullptr}, {\"val2\", 2}, {\"val3\", nullptr}, {\"val4\", 4}};\r\n    std::cout << j.dump(2) << std::endl << std::endl;\r\n\r\n    j.erase(std::remove_if(j.begin(), j.end(), [](json const& j2) { return j2.is_null(); }),\r\n            j.end());\r\n\r\n    std::cout << j.dump(2) << std::endl << std::endl;\r\n}\r\n```\r\nThe first output is\r\n\r\n> {\r\n  \"val1\": null,\r\n  \"val2\": 2,\r\n  \"val3\": null,\r\n  \"val4\": 4\r\n}\r\n\r\nAfter removal of optional elements (null), the output is\r\n\r\n> {\r\n>   \"val1\": 2,\r\n>   \"val2\": 4\r\n> }\r\n\r\nIt seems that only the values having 'null' are deleted, but not the associating key.\r\nI would have expected that the key & value get's deleted to get the following output:\r\n\r\n> {\r\n>   \"val2\": 2,\r\n>   \"val4\": 4\r\n> }\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/883", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/883/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/883/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/883/events", "html_url": "https://github.com/nlohmann/json/issues/883", "id": 282834831, "node_id": "MDU6SXNzdWUyODI4MzQ4MzE=", "number": 883, "title": "Container function overview in Doxygen is not updated", "user": {"login": "pravic", "id": 724639, "node_id": "MDQ6VXNlcjcyNDYzOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/724639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pravic", "html_url": "https://github.com/pravic", "followers_url": "https://api.github.com/users/pravic/followers", "following_url": "https://api.github.com/users/pravic/following{/other_user}", "gists_url": "https://api.github.com/users/pravic/gists{/gist_id}", "starred_url": "https://api.github.com/users/pravic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pravic/subscriptions", "organizations_url": "https://api.github.com/users/pravic/orgs", "repos_url": "https://api.github.com/users/pravic/repos", "events_url": "https://api.github.com/users/pravic/events{/privacy}", "received_events_url": "https://api.github.com/users/pravic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/17", "html_url": "https://github.com/nlohmann/json/milestone/17", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/17/labels", "id": 2256017, "node_id": "MDk6TWlsZXN0b25lMjI1NjAxNw==", "number": 17, "title": "Release 3.0.1", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 7, "state": "closed", "created_at": "2017-01-16T19:53:23Z", "updated_at": "2017-12-29T19:16:17Z", "due_on": "2017-12-29T08:00:00Z", "closed_at": "2017-12-29T19:16:17Z"}, "comments": 2, "created_at": "2017-12-18T10:43:57Z", "updated_at": "2017-12-20T06:36:39Z", "closed_at": "2017-12-20T06:36:39Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\nOutdated documentation.\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\nCheck https://nlohmann.github.io/json/\r\n\r\n- What is the expected behavior?\r\n`json::parse_error` instead of `std::domain_error` and so on.\r\n\r\n- And what is the actual behavior instead?\r\nWe see old exception types still.\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\nDocumentation [says](https://nlohmann.github.io/json/) it is version `3.0.0`.\r\n \r\nP.S. 3.0 is a huge and exciting work, actually."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/881", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/881/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/881/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/881/events", "html_url": "https://github.com/nlohmann/json/issues/881", "id": 282692985, "node_id": "MDU6SXNzdWUyODI2OTI5ODU=", "number": 881, "title": "How to use this for binary file uploads", "user": {"login": "tilakhere", "id": 4326446, "node_id": "MDQ6VXNlcjQzMjY0NDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/4326446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tilakhere", "html_url": "https://github.com/tilakhere", "followers_url": "https://api.github.com/users/tilakhere/followers", "following_url": "https://api.github.com/users/tilakhere/following{/other_user}", "gists_url": "https://api.github.com/users/tilakhere/gists{/gist_id}", "starred_url": "https://api.github.com/users/tilakhere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tilakhere/subscriptions", "organizations_url": "https://api.github.com/users/tilakhere/orgs", "repos_url": "https://api.github.com/users/tilakhere/repos", "events_url": "https://api.github.com/users/tilakhere/events{/privacy}", "received_events_url": "https://api.github.com/users/tilakhere/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-12-17T13:17:10Z", "updated_at": "2017-12-21T17:41:48Z", "closed_at": "2017-12-21T17:41:38Z", "author_association": "NONE", "body": "\r\n[untitled.zip](https://github.com/nlohmann/json/files/1565748/untitled.zip)\r\n\r\n- What is the issue you have?\r\nI am writing a code where the front end sends a file within a json object\r\nI have file in js[\"body\"] the contents of the file.\r\nI also have the size of the file in js[\"size\"]\r\nwhere js is the json object as\r\n\r\n> JSON OBJECT IS {\r\n>     \"body\": \"-\\u001e_}x#\\u0000\\u0000\\u0000#B\ufffd\ufffd\ufffd\ufffd!\",\r\n>     \"filename\": \"untitled.txt\",\r\n>     \"size\": 16\r\n> }\r\n\r\nbody is the file content and size is the size of the file in bytes\r\n\r\nOn printing js[\"body\"] the file contents are correct.\r\nNow I need to send this file via socket to another service.\r\nFor that I tried stringifying it, memcpy into char* buffer, memcpy in void* buffer but none seems to work correctly.\r\n\r\nWhat is the correct method to copy js[\"body\"] byte by byte into a char*, so that I may send it over a socket to another service which saves it as a actual file.\r\n\r\n\r\nHow do I do that?\r\n\r\nsample code I am using\r\n\r\n```\r\ncout<<\"File content is \"<<js[\"body\"]<<endl;\r\ncout<<\"File content as string is \"<<js[\"body\"].get<string>()<<endl;\r\nvoid *file1 = (unsigned char*)malloc(16);\r\nmemcpy(file1, &js[\"body\"], 16);\r\ncout<<\"File content as char buffer is \"<<file1<<endl;\r\n```\r\nOutput I am getting is \r\n\r\n> File content is \"-\\u001e_}x#\\u0000\\u0000\\u0000#B\ufffd\ufffd\ufffd\ufffd!\"\r\n> File content as string is -\u001e_}x##B\ufffd\ufffd\ufffd\ufffd!\r\n> File content as char buffer is 0x1e4cfc0\r\n\r\nOnly the first output is correct in this case which I am getting by directly printing js[\"body\"]\r\n\r\nAny pointers would be highly appreciated.\r\n\r\nENVIRONMENT\r\nOS : ubuntu 16.04 \r\nCOMPILER : g++ (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609\r\nATTACHED is the binary file within the zip which I am uploading.\r\n\r\nThanks\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/878", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/878/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/878/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/878/events", "html_url": "https://github.com/nlohmann/json/issues/878", "id": 282504152, "node_id": "MDU6SXNzdWUyODI1MDQxNTI=", "number": 878, "title": "unicode strings", "user": {"login": "zoncpp", "id": 34574049, "node_id": "MDQ6VXNlcjM0NTc0MDQ5", "avatar_url": "https://avatars2.githubusercontent.com/u/34574049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zoncpp", "html_url": "https://github.com/zoncpp", "followers_url": "https://api.github.com/users/zoncpp/followers", "following_url": "https://api.github.com/users/zoncpp/following{/other_user}", "gists_url": "https://api.github.com/users/zoncpp/gists{/gist_id}", "starred_url": "https://api.github.com/users/zoncpp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zoncpp/subscriptions", "organizations_url": "https://api.github.com/users/zoncpp/orgs", "repos_url": "https://api.github.com/users/zoncpp/repos", "events_url": "https://api.github.com/users/zoncpp/events{/privacy}", "received_events_url": "https://api.github.com/users/zoncpp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-12-15T18:01:29Z", "updated_at": "2017-12-15T23:13:45Z", "closed_at": "2017-12-15T23:13:45Z", "author_association": "NONE", "body": "\r\n- How do I work by unicode json strings. \r\n\r\nI have unicode strings in my json . some values are unicode .\r\nNow, how do I change the json class (json.hpp) for my project?\r\n\r\nMy Project is in VS 2015."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/877", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/877/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/877/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/877/events", "html_url": "https://github.com/nlohmann/json/issues/877", "id": 282138200, "node_id": "MDU6SXNzdWUyODIxMzgyMDA=", "number": 877, "title": "Discuss: add JSON Merge Patch (RFC 7396)?", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/20", "html_url": "https://github.com/nlohmann/json/milestone/20", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/20/labels", "id": 2984335, "node_id": "MDk6TWlsZXN0b25lMjk4NDMzNQ==", "number": 20, "title": "Release 3.1.0", "description": "The next release when backwards compatible features are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 30, "state": "closed", "created_at": "2017-12-17T10:12:33Z", "updated_at": "2018-02-01T23:09:13Z", "due_on": "2018-02-01T08:00:00Z", "closed_at": "2018-02-01T23:09:13Z"}, "comments": 2, "created_at": "2017-12-14T15:26:33Z", "updated_at": "2018-01-18T05:49:57Z", "closed_at": "2018-01-18T05:49:57Z", "author_association": "OWNER", "body": "SQLite's json1 extension (https://www.sqlite.org/json1.html) supports JSON Merge Patch (https://tools.ietf.org/html/rfc7396). As the implementation is trivial and we already support JSON Patch, I think this could be a nice extension to the library.\r\n\r\nExample:\r\n\r\n```cpp\r\n#include <iostream>\r\n#include \"json.hpp\"\r\n#include <iomanip> // for std::setw\r\n\r\nusing json = nlohmann::json;\r\n\r\nint main()\r\n{\r\n    // the original document\r\n    json document = R\"({\r\n                \"title\": \"Goodbye!\",\r\n                \"author\": {\r\n                    \"givenName\": \"John\",\r\n                    \"familyName\": \"Doe\"\r\n                },\r\n                \"tags\": [\r\n                    \"example\",\r\n                    \"sample\"\r\n                ],\r\n                \"content\": \"This will be unchanged\"\r\n            })\"_json;\r\n\r\n    // the patch\r\n    json patch = R\"({\r\n                \"title\": \"Hello!\",\r\n                \"phoneNumber\": \"+01-123-456-7890\",\r\n                \"author\": {\r\n                    \"familyName\": null\r\n                },\r\n                \"tags\": [\r\n                    \"example\"\r\n                ]\r\n            })\"_json;\r\n\r\n    // apply the patch\r\n    document.merge_patch(patch);\r\n\r\n    // output original and patched document\r\n    std::cout << std::setw(4) << document << std::endl;\r\n}\r\n```\r\n\r\noutput:\r\n\r\n```js\r\n\r\n{\r\n    \"author\": {\r\n        \"givenName\": \"John\"\r\n    },\r\n    \"content\": \"This will be unchanged\",\r\n    \"phoneNumber\": \"+01-123-456-7890\",\r\n    \"tags\": [\r\n        \"example\"\r\n    ],\r\n    \"title\": \"Hello!\"\r\n}\r\n```\r\n\r\nSee PR #876 for more details.\r\n\r\n## Question\r\n\r\n- What do you think?\r\n- Any comments on the API, etc.?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/874", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/874/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/874/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/874/events", "html_url": "https://github.com/nlohmann/json/issues/874", "id": 281877342, "node_id": "MDU6SXNzdWUyODE4NzczNDI=", "number": 874, "title": "Discuss: replace static \"iterator_wrapper\" function with \"items\" member function", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/20", "html_url": "https://github.com/nlohmann/json/milestone/20", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/20/labels", "id": 2984335, "node_id": "MDk6TWlsZXN0b25lMjk4NDMzNQ==", "number": 20, "title": "Release 3.1.0", "description": "The next release when backwards compatible features are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 30, "state": "closed", "created_at": "2017-12-17T10:12:33Z", "updated_at": "2018-02-01T23:09:13Z", "due_on": "2018-02-01T08:00:00Z", "closed_at": "2018-02-01T23:09:13Z"}, "comments": 8, "created_at": "2017-12-13T20:01:03Z", "updated_at": "2018-01-23T15:42:24Z", "closed_at": "2018-01-23T15:42:24Z", "author_association": "OWNER", "body": "The static `iterator_wrapper` function is a means to access objects' keys in a range for. Example:\r\n\r\n```cpp\r\njson j_object = {{\"one\", 1}, {\"two\", 2}};\r\n\r\nfor (auto& x : json::iterator_wrapper(j_object)) {\r\n    std::cout << \"key: \" << x.key() << \", value: \" << x.value() << '\\n';\r\n}\r\n```\r\n\r\nI never was happy about the name of the function and there were several issues where users expected `json` to behave as a map so that `.first` and `.second` could be used.\r\n\r\n## Question 1\r\n\r\nAs for the name: What about replacing the static `iterator_wrapper` function by a member function `items` (name motivated by Python)?\r\n\r\nUsage:\r\n\r\n```cpp\r\njson j_object = {{\"one\", 1}, {\"two\", 2}};\r\n\r\nfor (auto& x : j_object.items()) {\r\n    std::cout << \"key: \" << x.key() << \", value: \" << x.value() << '\\n';\r\n}\r\n```\r\n\r\n## Question 2\r\n\r\nOne could even think about supporting `.first` and `.second`, but this would mean pre-computing the values for `.key()` and `.value()` which would mean a bit of overhead.\r\n\r\nWhat do you think?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/872", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/872/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/872/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/872/events", "html_url": "https://github.com/nlohmann/json/issues/872", "id": 281762863, "node_id": "MDU6SXNzdWUyODE3NjI4NjM=", "number": 872, "title": "Visual Studio 2017 15.5 C++17 std::allocator deprecations", "user": {"login": "Kingston1", "id": 5409091, "node_id": "MDQ6VXNlcjU0MDkwOTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5409091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kingston1", "html_url": "https://github.com/Kingston1", "followers_url": "https://api.github.com/users/Kingston1/followers", "following_url": "https://api.github.com/users/Kingston1/following{/other_user}", "gists_url": "https://api.github.com/users/Kingston1/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kingston1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kingston1/subscriptions", "organizations_url": "https://api.github.com/users/Kingston1/orgs", "repos_url": "https://api.github.com/users/Kingston1/repos", "events_url": "https://api.github.com/users/Kingston1/events{/privacy}", "received_events_url": "https://api.github.com/users/Kingston1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-12-13T14:11:59Z", "updated_at": "2017-12-14T08:36:18Z", "closed_at": "2017-12-14T08:34:18Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\nVisual Studio 2017 15.5 update introduced a bunch of deprecation warnings when using C++17 feature set. It's trying to guide to better standards compliance.\r\n\r\n- Reproduction\r\n\r\nWhen compiling a project that uses json.hpp usage of std::allocator destroy() and construct() gets flagged.\r\n\r\nwarning C4996: 'std::allocator<std::map<StringType,nlohmann::basic_json<std::map,std::vector,StringType,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>,std::less<StringType>,std::allocator<std::pair<const StringType,nlohmann::basic_json<std::map,std::vector,StringType,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>>>>>::destroy': warning STL4010: Various members of std::allocator are deprecated in C++17. Use std::allocator_traits instead of accessing these members directly. You can define _SILENCE_CXX17_OLD_ALLOCATOR_MEMBERS_DEPRECATION_WARNING or _SILENCE_ALL_CXX17_DEPRECATION_WARNINGS to acknowledge that you have received this warning.\r\n\r\nwarning C4996: 'std::allocator<std::map<StringType,nlohmann::basic_json<std::map,std::vector,StringType,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>,std::less<StringType>,std::allocator<std::pair<const StringType,nlohmann::basic_json<std::map,std::vector,StringType,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>>>>>::construct': warning STL4010: Various members of std::allocator are deprecated in C++17. Use std::allocator_traits instead of accessing these members directly. You can define _SILENCE_CXX17_OLD_ALLOCATOR_MEMBERS_DEPRECATION_WARNING or _SILENCE_ALL_CXX17_DEPRECATION_WARNINGS to acknowledge that you have received this warning.\r\n\r\n\r\n- What is the expected behavior?\r\n\r\nThere should be no warnings. Improve allocator usage. I have suppressed the warnings in a local fork of json.hpp and everything still works. But who knows for how long.\r\n\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler]\r\nWindows 10 Pro x64\r\nVisual Studio 2017 15.5.1 professional (perhaps should be supported, I am not sure)\r\n\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\n\r\nHappens on both develop of today and Version 2.1.1"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/871", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/871/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/871/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/871/events", "html_url": "https://github.com/nlohmann/json/issues/871", "id": 281704370, "node_id": "MDU6SXNzdWUyODE3MDQzNzA=", "number": 871, "title": "basic_json::value throws exception instead of returning default value", "user": {"login": "unholytony", "id": 5261390, "node_id": "MDQ6VXNlcjUyNjEzOTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5261390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unholytony", "html_url": "https://github.com/unholytony", "followers_url": "https://api.github.com/users/unholytony/followers", "following_url": "https://api.github.com/users/unholytony/following{/other_user}", "gists_url": "https://api.github.com/users/unholytony/gists{/gist_id}", "starred_url": "https://api.github.com/users/unholytony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unholytony/subscriptions", "organizations_url": "https://api.github.com/users/unholytony/orgs", "repos_url": "https://api.github.com/users/unholytony/repos", "events_url": "https://api.github.com/users/unholytony/events{/privacy}", "received_events_url": "https://api.github.com/users/unholytony/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 735376215, "node_id": "MDU6TGFiZWw3MzUzNzYyMTU=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20needs%20more%20info", "name": "state: needs more info", "color": "f9d0c4", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-12-13T10:50:39Z", "updated_at": "2018-02-08T01:36:23Z", "closed_at": "2018-02-08T01:36:23Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\nMy apologies if this is expected behaviour, it just seemed somewhat unexpected.\r\n\r\nI am using json objects to represent configuration files that may or may not be present. Missing files are represented as default constructed json objects. \r\n\r\nWhen trying to retrieve a value using a json_pointer from an empty json object it is throwing an exception instead of returning my specified default value. This is happening because the empty json object is not an object and so it is failing the first test ( JSON_LIKELY(is_object()) ) and thus throwing an exception. This seems counter intuitive given the description of the function.\r\n\r\nI would have preferred it that if for any reason the json object could not return a valid value that it should return the default. As it currently stands I will have to wrap all value requests to the json object in a helper function to make sure that regardless of the state of the json object I always either get the stored value or the defaulted value. This essentially makes the \"value\" function pointless, for my needs at least.\r\n\r\nThis is on Visual Studio 2017\r\n\r\nThanks for a great library by the way."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/869", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/869/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/869/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/869/events", "html_url": "https://github.com/nlohmann/json/issues/869", "id": 280802257, "node_id": "MDU6SXNzdWUyODA4MDIyNTc=", "number": 869, "title": "Typo \"excpetion\"", "user": {"login": "francoisbecker", "id": 6452454, "node_id": "MDQ6VXNlcjY0NTI0NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6452454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/francoisbecker", "html_url": "https://github.com/francoisbecker", "followers_url": "https://api.github.com/users/francoisbecker/followers", "following_url": "https://api.github.com/users/francoisbecker/following{/other_user}", "gists_url": "https://api.github.com/users/francoisbecker/gists{/gist_id}", "starred_url": "https://api.github.com/users/francoisbecker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/francoisbecker/subscriptions", "organizations_url": "https://api.github.com/users/francoisbecker/orgs", "repos_url": "https://api.github.com/users/francoisbecker/repos", "events_url": "https://api.github.com/users/francoisbecker/events{/privacy}", "received_events_url": "https://api.github.com/users/francoisbecker/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 1, "created_at": "2017-12-10T11:34:19Z", "updated_at": "2017-12-11T07:56:15Z", "closed_at": "2017-12-11T07:56:14Z", "author_association": "NONE", "body": "Location: https://github.com/nlohmann/json/blob/06939452309560352806218740e7adebfb0fd986/src/json.hpp#L230"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/867", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/867/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/867/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/867/events", "html_url": "https://github.com/nlohmann/json/issues/867", "id": 280777727, "node_id": "MDU6SXNzdWUyODA3Nzc3Mjc=", "number": 867, "title": "Explicit array example in README.md incorrect", "user": {"login": "xmo", "id": 5964952, "node_id": "MDQ6VXNlcjU5NjQ5NTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5964952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xmo", "html_url": "https://github.com/xmo", "followers_url": "https://api.github.com/users/xmo/followers", "following_url": "https://api.github.com/users/xmo/following{/other_user}", "gists_url": "https://api.github.com/users/xmo/gists{/gist_id}", "starred_url": "https://api.github.com/users/xmo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xmo/subscriptions", "organizations_url": "https://api.github.com/users/xmo/orgs", "repos_url": "https://api.github.com/users/xmo/repos", "events_url": "https://api.github.com/users/xmo/events{/privacy}", "received_events_url": "https://api.github.com/users/xmo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 3, "created_at": "2017-12-10T03:13:29Z", "updated_at": "2017-12-11T07:56:17Z", "closed_at": "2017-12-11T07:56:17Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\nThe example in README.md to explicitly construct an array does not work. Maybe a typo/oversight?\r\n```cpp\r\n// a way to express an _array_ of key/value pairs [[\"currency\", \"USD\"], [\"value\", 42.99]]\r\njson array_not_object = { json::array({\"currency\", \"USD\"}), json::array({\"value\", 42.99}) };\r\n```\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\n```cpp\r\nusing json = nlohmann::json;\r\n// The original example prints: {\"currency\":\"USD\",\"value\":42.99}\r\njson array_not_object = { json::array({\"currency\", \"USD\"}), json::array({\"value\", 42.99}) };\r\nstd::cout << array_not_object.dump() << std::endl;\r\n// This seems to work correctly. It prints: [[\"currency\",\"USD\"],[\"value\",42.99]]\r\njson array_not_object_corrected = json::array({ { \"currency\", \"USD\" }, { \"value\", 42.99 } });\r\nstd::cout << array_not_object_corrected.dump() << std::endl;\r\n```\r\n\r\n- What is the expected behavior?\r\nConstructs an JSON array, i.e.  [[\"currency\", \"USD\"], [\"value\", 42.99]]\r\n\r\n- And what is the actual behavior instead?\r\nConstructs an JSON object, {\"currency\":\"USD\",\"value\":42.99}\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\nWindows + VS2015. Yes, it is.\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\nMaster branch"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/865", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/865/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/865/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/865/events", "html_url": "https://github.com/nlohmann/json/issues/865", "id": 280698516, "node_id": "MDU6SXNzdWUyODA2OTg1MTY=", "number": 865, "title": "why don't you release this from Feb. ?", "user": {"login": "CodeMasterYi", "id": 10430162, "node_id": "MDQ6VXNlcjEwNDMwMTYy", "avatar_url": "https://avatars1.githubusercontent.com/u/10430162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CodeMasterYi", "html_url": "https://github.com/CodeMasterYi", "followers_url": "https://api.github.com/users/CodeMasterYi/followers", "following_url": "https://api.github.com/users/CodeMasterYi/following{/other_user}", "gists_url": "https://api.github.com/users/CodeMasterYi/gists{/gist_id}", "starred_url": "https://api.github.com/users/CodeMasterYi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CodeMasterYi/subscriptions", "organizations_url": "https://api.github.com/users/CodeMasterYi/orgs", "repos_url": "https://api.github.com/users/CodeMasterYi/repos", "events_url": "https://api.github.com/users/CodeMasterYi/events{/privacy}", "received_events_url": "https://api.github.com/users/CodeMasterYi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-09T08:01:43Z", "updated_at": "2017-12-09T13:19:10Z", "closed_at": "2017-12-09T13:19:10Z", "author_association": "NONE", "body": "As the title.\r\nIs there any big movement recently?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/864", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/864/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/864/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/864/events", "html_url": "https://github.com/nlohmann/json/issues/864", "id": 280638154, "node_id": "MDU6SXNzdWUyODA2MzgxNTQ=", "number": 864, "title": "Make optional user-data available in from_json", "user": {"login": "chadlayton", "id": 543556, "node_id": "MDQ6VXNlcjU0MzU1Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/543556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chadlayton", "html_url": "https://github.com/chadlayton", "followers_url": "https://api.github.com/users/chadlayton/followers", "following_url": "https://api.github.com/users/chadlayton/following{/other_user}", "gists_url": "https://api.github.com/users/chadlayton/gists{/gist_id}", "starred_url": "https://api.github.com/users/chadlayton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chadlayton/subscriptions", "organizations_url": "https://api.github.com/users/chadlayton/orgs", "repos_url": "https://api.github.com/users/chadlayton/repos", "events_url": "https://api.github.com/users/chadlayton/events{/privacy}", "received_events_url": "https://api.github.com/users/chadlayton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-12-08T22:39:27Z", "updated_at": "2017-12-29T22:24:37Z", "closed_at": "2017-12-29T22:24:37Z", "author_association": "NONE", "body": "I'd like to be able to supply optional user-data to json::parse which would then be retrievable in from_json. A naive implementation might look like this:\r\n\r\n```c++\r\nvoid from_json(const json& j, image& img, void* user_data)\r\n{\r\n\tconst char* root_directory = reinterpret_cast<const char*>(user_data);\r\n\tstd::string filename = j[\"filename\"];\r\n\r\n\timg.data = load_external_dependency(std::string(root_directory) + \"//\" + filename);\r\n}\r\n\r\n// ...\r\n\r\njson j = json::parse(json_string, \"C:\\\\images\\\\\");\r\n```\r\n\r\nOr maybe this is already possible? Right now the only way I can see to do it requires global state or caching the data on the object and fixing it up after parsing.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/863", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/863/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/863/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/863/events", "html_url": "https://github.com/nlohmann/json/issues/863", "id": 280392896, "node_id": "MDU6SXNzdWUyODAzOTI4OTY=", "number": 863, "title": "json::parse throws std::invalid_argument when processing string generated by json::dump()", "user": {"login": "chenhongbao", "id": 300400, "node_id": "MDQ6VXNlcjMwMDQwMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/300400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenhongbao", "html_url": "https://github.com/chenhongbao", "followers_url": "https://api.github.com/users/chenhongbao/followers", "following_url": "https://api.github.com/users/chenhongbao/following{/other_user}", "gists_url": "https://api.github.com/users/chenhongbao/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenhongbao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenhongbao/subscriptions", "organizations_url": "https://api.github.com/users/chenhongbao/orgs", "repos_url": "https://api.github.com/users/chenhongbao/repos", "events_url": "https://api.github.com/users/chenhongbao/events{/privacy}", "received_events_url": "https://api.github.com/users/chenhongbao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-12-08T07:01:37Z", "updated_at": "2017-12-13T05:36:06Z", "closed_at": "2017-12-13T05:36:06Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\nI generate a JSON string with json::dump(), and pass to another thread. The thread calls json::parse() to get an object from the JSON string and it throws std::invalid_argument exception.\r\n\r\nThe following codes throws the exception:\r\n\r\n```cpp\r\nvoid unexpect(typename lexer::token_type t) const\r\n        {\r\n            if (t == last_token)\r\n            {\r\n                std::string error_msg = \"parse error - unexpected \";\r\n                error_msg += (last_token == lexer::token_type::parse_error ? (\"'\" +  m_lexer.get_token_string() +\r\n                              \"'\") :\r\n                              lexer::token_type_name(last_token));\r\n                JSON_THROW(std::invalid_argument(error_msg));\r\n            }\r\n        }\r\n```\r\n\r\nThe JSON string:\r\n\r\n```js\r\n{\"Data\":[{\"Bin\":205.0,\"DataName\":\"VolumeDistributionParameters\",\"Expandor\":0.100000001490116,\"Factor\":1.16281127035618,\"InstrumentID\":\"MA805\",\"M\":0.932498933747411,\"Mse\":0.00820842096151519,\"Sigma\":0.837557822465897,\"Theta\":0.0,\"UpdateDay\":\"20171208\",\"UpdateTime\":\"14:51:08\"}],\"ErrorCode\":0,\"ErrorMessage\":\"\u6b63\u786e\",\"Receiver\":\"ANY_RECEIVER\",\"Result\":\"OK\",\"Sender\":\"VOLDIST\",\"ServiceName\":\"VOLDIST\"}\r\n```\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\n\r\nTry the following code and exception will show up:\r\n\r\n```cpp\r\n#include \"json.hpp\"\r\nint main() {\r\n\tnlohmann::json jsonObj;\r\n\tstd::string jstr = R\"({\"Data\":[{\"Bin\":1790.0,\"DataName\":\"VolumeDistributionParameters\",\"Expandor\":0.100000001490116,\"Factor\":0.831193974614143,\"InstrumentID\":\"rb1805\",\"M\":0.640040159225464,\"Mse\":0.00439472794626309,\"Sigma\":0.747419960796833,\"Theta\":0.0,\"UpdateDay\":\"20171208\",\"UpdateTime\":\"14:55:08\"}],\"ErrorCode\":0,\"ErrorMessage\":\"\u6b63\u786e\",\"Receiver\":\"ANY_RECEIVER\",\"Result\":\"OK\",\"Sender\":\"VOLDIST\",\"ServiceName\":\"VOLDIST\"})\";\r\n\ttry\r\n\t{\r\n\t\tjsonObj = nlohmann::json::parse(jstr);\r\n\t}\r\n\tcatch (std::invalid_argument & invalid)\r\n\t{\r\n\t\tstd::cout << invalid.what() << std::endl;\r\n\t}\r\n    return 0;\r\n}\r\n```\r\n\r\n- What is the expected behavior?\r\n\r\nParse the JSON string and return an object.\r\n\r\n- And what is the actual behavior instead?\r\n\r\nThrowing an exception, the std::invalid_argument\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\n\r\nVS 2017 Community\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\n\r\nRelease 2.1.1\r\n\r\n- If you experience a compilation error: can you [compile and run the unit tests](https://github.com/nlohmann/json#execute-unit-tests)?\r\n\r\nNo.\r\n\r\n**Feature Request**\r\n\r\n- Describe the feature in as much detail as possible.\r\n\r\nAbove is enough maybe.\r\n\r\n- Include sample usage where appropriate.\r\n\r\nSee above."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/861", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/861/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/861/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/861/events", "html_url": "https://github.com/nlohmann/json/issues/861", "id": 280136984, "node_id": "MDU6SXNzdWUyODAxMzY5ODQ=", "number": 861, "title": "Casting to std::string not working in VS2015", "user": {"login": "jojastahl", "id": 15796520, "node_id": "MDQ6VXNlcjE1Nzk2NTIw", "avatar_url": "https://avatars0.githubusercontent.com/u/15796520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jojastahl", "html_url": "https://github.com/jojastahl", "followers_url": "https://api.github.com/users/jojastahl/followers", "following_url": "https://api.github.com/users/jojastahl/following{/other_user}", "gists_url": "https://api.github.com/users/jojastahl/gists{/gist_id}", "starred_url": "https://api.github.com/users/jojastahl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jojastahl/subscriptions", "organizations_url": "https://api.github.com/users/jojastahl/orgs", "repos_url": "https://api.github.com/users/jojastahl/repos", "events_url": "https://api.github.com/users/jojastahl/events{/privacy}", "received_events_url": "https://api.github.com/users/jojastahl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-12-07T13:51:31Z", "updated_at": "2018-01-29T19:12:35Z", "closed_at": "2018-01-29T19:12:35Z", "author_association": "NONE", "body": "The following doesn't compile in Visual Studio 2015 Update 3:\r\n\r\n```C++\r\n      json o = { { \"name\", \"value\" } };\r\n      std::string s1;\r\n      s1 = static_cast<std::string>(o[\"name\"]);  // Failing line\r\n```\r\n\r\nIt gives the following error:\r\n\r\n> error C2440: 'static_cast': cannot convert from 'nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>' to 'std::string'\r\n> note: No constructor could take the source type, or constructor overload resolution was ambiguous\r\n \r\nI tried this with the develop branch aswell as the 2.1.1 release.\r\nI'm using Visual Studio 2015 Update 3 with compiler version 19.00.24215.1 for x86\r\n\r\nThis is related to #188 and #167. I have to exclude the _MSC_VER check, so that the condition included in the VS build, too. However, this condition has been introduced to fix #167 as far as I understand. Was #167 a problem in VS2015 pre Update 3 only, or hasn't a test been added for #167? I can compile and run all unit-xxx tests with the check removed."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/859", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/859/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/859/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/859/events", "html_url": "https://github.com/nlohmann/json/issues/859", "id": 279541950, "node_id": "MDU6SXNzdWUyNzk1NDE5NTA=", "number": 859, "title": "code analysis: potential bug?", "user": {"login": "aj664", "id": 11025345, "node_id": "MDQ6VXNlcjExMDI1MzQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/11025345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aj664", "html_url": "https://github.com/aj664", "followers_url": "https://api.github.com/users/aj664/followers", "following_url": "https://api.github.com/users/aj664/following{/other_user}", "gists_url": "https://api.github.com/users/aj664/gists{/gist_id}", "starred_url": "https://api.github.com/users/aj664/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aj664/subscriptions", "organizations_url": "https://api.github.com/users/aj664/orgs", "repos_url": "https://api.github.com/users/aj664/repos", "events_url": "https://api.github.com/users/aj664/events{/privacy}", "received_events_url": "https://api.github.com/users/aj664/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-05T21:45:17Z", "updated_at": "2017-12-12T19:49:30Z", "closed_at": "2017-12-12T19:49:30Z", "author_association": "NONE", "body": "warning C28020: The expression '0<=_Param_(1)&&_Param_(1)<=64-1' is not true at this call.\r\n\r\nfrom the your  .h file:  the line the above comment is pointing at is the  number_buffer[i++  line.\r\n\r\n            // make sure the number has been processed completely\r\n            assert(x == 0);\r\n\r\n            if (is_negative)\r\n            {\r\n                // make sure there is capacity for the '-'\r\n                assert(i < number_buffer.size() - 2);\r\n                number_buffer[i++] = '-';\r\n            }\r\n\r\n\r\nthis code analysis tool gives off some rather strange false positives, so it might be nothing.. \r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/857", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/857/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/857/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/857/events", "html_url": "https://github.com/nlohmann/json/issues/857", "id": 279456873, "node_id": "MDU6SXNzdWUyNzk0NTY4NzM=", "number": 857, "title": "MSVC2017, 15.5 new issues.  ", "user": {"login": "aj664", "id": 11025345, "node_id": "MDQ6VXNlcjExMDI1MzQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/11025345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aj664", "html_url": "https://github.com/aj664", "followers_url": "https://api.github.com/users/aj664/followers", "following_url": "https://api.github.com/users/aj664/following{/other_user}", "gists_url": "https://api.github.com/users/aj664/gists{/gist_id}", "starred_url": "https://api.github.com/users/aj664/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aj664/subscriptions", "organizations_url": "https://api.github.com/users/aj664/orgs", "repos_url": "https://api.github.com/users/aj664/repos", "events_url": "https://api.github.com/users/aj664/events{/privacy}", "received_events_url": "https://api.github.com/users/aj664/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 13, "created_at": "2017-12-05T17:12:15Z", "updated_at": "2017-12-07T21:09:02Z", "closed_at": "2017-12-07T21:09:02Z", "author_association": "NONE", "body": "yesterday 2017.12.05  using MSVC2017, 15.4.4   was compiling v.2.1.1 fine.\r\ntoday, upgraded to MSVC2017 15.5..  now v2.1.1 has lots of std::allocator warnings/errors.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/853", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/853/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/853/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/853/events", "html_url": "https://github.com/nlohmann/json/issues/853", "id": 278828647, "node_id": "MDU6SXNzdWUyNzg4Mjg2NDc=", "number": 853, "title": "very basic: fetching string value/content without quotes", "user": {"login": "rnsanchez", "id": 87608, "node_id": "MDQ6VXNlcjg3NjA4", "avatar_url": "https://avatars0.githubusercontent.com/u/87608?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rnsanchez", "html_url": "https://github.com/rnsanchez", "followers_url": "https://api.github.com/users/rnsanchez/followers", "following_url": "https://api.github.com/users/rnsanchez/following{/other_user}", "gists_url": "https://api.github.com/users/rnsanchez/gists{/gist_id}", "starred_url": "https://api.github.com/users/rnsanchez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rnsanchez/subscriptions", "organizations_url": "https://api.github.com/users/rnsanchez/orgs", "repos_url": "https://api.github.com/users/rnsanchez/repos", "events_url": "https://api.github.com/users/rnsanchez/events{/privacy}", "received_events_url": "https://api.github.com/users/rnsanchez/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 5, "created_at": "2017-12-03T22:38:54Z", "updated_at": "2017-12-06T20:43:12Z", "closed_at": "2017-12-06T20:43:07Z", "author_association": "NONE", "body": "This is kind of a usage issue and not a bug/feature request.  I could be overlooking something trivial as I am very new to the library; if this is the case, please point in the right direcion/documentation.\r\n\r\n- What is the issue you have?\r\n\r\nWhen printing/using a value from a string element, the string is quoted:\r\n\r\n    $ ./test \r\n    \"value\"\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\n\r\n```\r\n    #include <iostream>\r\n    #include \"json.hpp\"\r\n    using json = nlohmann::json;\r\n    int main(int argc, char *argv[])\r\n    {\r\n        json j = R\"({\"one\": \"value\"})\"_json;\r\n        std::cout << j[\"one\"] << '\\n';\r\n    }\r\n```\r\n\r\n- What is the expected behavior?\r\n\r\nPrinting/fetching `value` as opposed to `\"value\"`.\r\n\r\nI understand that this could be a simple matter of picking out a substring, but searching in the documentation and existing issues (closed and open), I didn't find an idiomatic way of simply extracting the original string (no quotes as quotes are not escaped in the JSON blob).\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\n\r\nGCC (7.2.0).\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\n\r\nGit master, cc937deaf6430a5a02d366bb3cb7140693f20c0e\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/852", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/852/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/852/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/852/events", "html_url": "https://github.com/nlohmann/json/issues/852", "id": 278705873, "node_id": "MDU6SXNzdWUyNzg3MDU4NzM=", "number": 852, "title": "Ambiguous function call to get with pointer type and constant json object in VS2015 (15.4.4)", "user": {"login": "MaxSavenkov", "id": 11957018, "node_id": "MDQ6VXNlcjExOTU3MDE4", "avatar_url": "https://avatars3.githubusercontent.com/u/11957018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaxSavenkov", "html_url": "https://github.com/MaxSavenkov", "followers_url": "https://api.github.com/users/MaxSavenkov/followers", "following_url": "https://api.github.com/users/MaxSavenkov/following{/other_user}", "gists_url": "https://api.github.com/users/MaxSavenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaxSavenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaxSavenkov/subscriptions", "organizations_url": "https://api.github.com/users/MaxSavenkov/orgs", "repos_url": "https://api.github.com/users/MaxSavenkov/repos", "events_url": "https://api.github.com/users/MaxSavenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/MaxSavenkov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-02T18:29:29Z", "updated_at": "2017-12-05T18:26:49Z", "closed_at": "2017-12-05T18:26:49Z", "author_association": "NONE", "body": "This code will not compile in Visual Studio 2015 (15.4.4) with the latest nlohmann::json code:\r\n```\r\n    const nlohmann::json test;\r\n    const auto *s = test.get<const std::string*>();\r\n```\r\nThe error message is:\r\n\r\n```\r\n1>F:\\rolecraft2\\prj\\rolecraft\\ui\\ui_view_character.cpp(13): error C2668: 'nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>::get': ambiguous call to overloaded function\r\n1>F:\\rolecraft2\\ext\\nlohmann\\json.hpp(9669): note: could be 'const PointerType nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>::get<const std::string*,0>(void) noexcept const'\r\n1>        with\r\n1>        [\r\n1>            PointerType=const std::string *\r\n1>        ]\r\n1>F:\\rolecraft2\\ext\\nlohmann\\json.hpp(9657): note: or       'PointerType nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>::get<const std::string*,0>(void) noexcept'\r\n1>        with\r\n1>        [\r\n1>            PointerType=const std::string *\r\n1>        ]\r\n1>F:\\rolecraft2\\ext\\nlohmann\\json.hpp(9567): note: or       'ValueType nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>::get<const std::string*,const std::string*,0>(void) noexcept(<expr>) const'\r\n1>        with\r\n1>        [\r\n1>            ValueType=const std::string *\r\n1>        ]\r\n```\r\n\r\nSeems like Visual Studio's compiler can't decide whether to use ValueType version of get(), or PointerType one. The issue is easily worked around by using get_ptr() instead, but I still would like to report it, as it was working in older versions of the library (2.0.5, for example).\r\n\r\nThe issue can be fixed by adding \r\n```\r\n            not std::is_pointer<ValueType>::value and\r\n```\r\nto enable_if template of ValueType get() const noexcept method."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/851", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/851/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/851/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/851/events", "html_url": "https://github.com/nlohmann/json/issues/851", "id": 278454519, "node_id": "MDU6SXNzdWUyNzg0NTQ1MTk=", "number": 851, "title": "Sequential reading of JSON arrays", "user": {"login": "gjgiezeman", "id": 32670530, "node_id": "MDQ6VXNlcjMyNjcwNTMw", "avatar_url": "https://avatars2.githubusercontent.com/u/32670530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gjgiezeman", "html_url": "https://github.com/gjgiezeman", "followers_url": "https://api.github.com/users/gjgiezeman/followers", "following_url": "https://api.github.com/users/gjgiezeman/following{/other_user}", "gists_url": "https://api.github.com/users/gjgiezeman/gists{/gist_id}", "starred_url": "https://api.github.com/users/gjgiezeman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gjgiezeman/subscriptions", "organizations_url": "https://api.github.com/users/gjgiezeman/orgs", "repos_url": "https://api.github.com/users/gjgiezeman/repos", "events_url": "https://api.github.com/users/gjgiezeman/events{/privacy}", "received_events_url": "https://api.github.com/users/gjgiezeman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-12-01T12:40:17Z", "updated_at": "2018-01-29T18:12:35Z", "closed_at": "2018-01-29T18:12:35Z", "author_association": "NONE", "body": "I have an application that logs events as an array of JSON objects. The objects are written one by one to some network stream. I would like to process them when they arrive, not after the application has closed and the array is complete. \r\n\r\nSo, I would like to have (or be able to write) a class with an interface like this:\r\n```cpp\r\nclass SeqJsonReader {\r\n  public:\r\n    void append(std::string const &str);\r\n    void append(char const *str);\r\n    void append(char const *begin, char const *end);\r\n    bool has_value() const;\r\n    nlohmann::json next_value();\r\n    bool at_end() const; // true if closing ']' of array is processed.\r\n};\r\n```\r\n\r\nUsage could be like this:\r\n\r\n```cpp\r\nbool reader_loop(vector<string> const &msgs)\r\n{\r\n    SeqJsonReader reader;\r\n    auto cur = msgs.begin();\r\n    while (!reader.at_end() && cur!=msgs.end()) {\r\n        try {\r\n            reader.append(*cur++);\r\n            while (reader.has_value()) {\r\n                nlohmann::json val = reader.next_value();\r\n                // do something with val\r\n            }\r\n        } catch (...) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nint main()\r\n{\r\n    vector<string> msgs;\r\n    msgs.push_back(R\"([{\"product\":\"apple\",\"amount\":\"512\",\"unit\":\"gram\"})\");\r\n    msgs.push_back(R\"(,{\"product\":\"pear\")\");\r\n    msgs.push_back(R\"(},42,{\"product\":\"orange\",\"amount\":\"402\",\"unit\":\"gram\"}])\");\r\n    reader_loop(msgs);\r\n}\r\n```\r\n\r\nIn practice the strings (msgs) would come from a recv call of a socket or something like that.\r\n\r\nAm I right that currently this is hard to implement? It seems that I can't parse partial JSON input."}]