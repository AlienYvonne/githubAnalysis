[{"url": "https://api.github.com/repos/nlohmann/json/issues/1189", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1189/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1189/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1189/events", "html_url": "https://github.com/nlohmann/json/issues/1189", "id": 347894984, "node_id": "MDU6SXNzdWUzNDc4OTQ5ODQ=", "number": 1189, "title": "Add key name when throwing type error", "user": {"login": "icaroalvarez", "id": 36381262, "node_id": "MDQ6VXNlcjM2MzgxMjYy", "avatar_url": "https://avatars2.githubusercontent.com/u/36381262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/icaroalvarez", "html_url": "https://github.com/icaroalvarez", "followers_url": "https://api.github.com/users/icaroalvarez/followers", "following_url": "https://api.github.com/users/icaroalvarez/following{/other_user}", "gists_url": "https://api.github.com/users/icaroalvarez/gists{/gist_id}", "starred_url": "https://api.github.com/users/icaroalvarez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/icaroalvarez/subscriptions", "organizations_url": "https://api.github.com/users/icaroalvarez/orgs", "repos_url": "https://api.github.com/users/icaroalvarez/repos", "events_url": "https://api.github.com/users/icaroalvarez/events{/privacy}", "received_events_url": "https://api.github.com/users/icaroalvarez/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-06T12:02:45Z", "updated_at": "2018-08-06T12:30:00Z", "closed_at": "2018-08-06T12:29:54Z", "author_association": "NONE", "body": "Congrats for the project. Really cool. I don't know if this is too much concrete and only adds value for my use case but I think it could be usefull to add the name of the key that fails when throwing a type error exception. This way I would fast know where I made a mistake. \r\n\r\nFor example, it would be helpfull while using json for program parameter configuration:\r\n\r\n```\r\nnlohmann::json config_json =\r\n            {\r\n                    {\"param_one\", 1},\r\n                    {\"param_two\", 2}\r\n            };\r\n\r\n    try {\r\n        bool param_one = config_json.at(\"param_one\");\r\n        int param_two = config_json.at(\"param_two\");\r\n    }catch(const std::exception& e)\r\n    {\r\n        FAIL(e.what());\r\n    }\r\n```\r\nThe exception message is: **[json.exception.type_error.302] type must be boolean, but is number**\r\n\r\nIt could be nice if the message ended with: (**in key \"param_one\"**).\r\n\r\nJust a thought. Cheers!"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1188", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1188/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1188/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1188/events", "html_url": "https://github.com/nlohmann/json/issues/1188", "id": 347884880, "node_id": "MDU6SXNzdWUzNDc4ODQ4ODA=", "number": 1188, "title": "Not able to include in visual studio code?", "user": {"login": "tommy61157", "id": 4907391, "node_id": "MDQ6VXNlcjQ5MDczOTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/4907391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tommy61157", "html_url": "https://github.com/tommy61157", "followers_url": "https://api.github.com/users/tommy61157/followers", "following_url": "https://api.github.com/users/tommy61157/following{/other_user}", "gists_url": "https://api.github.com/users/tommy61157/gists{/gist_id}", "starred_url": "https://api.github.com/users/tommy61157/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tommy61157/subscriptions", "organizations_url": "https://api.github.com/users/tommy61157/orgs", "repos_url": "https://api.github.com/users/tommy61157/repos", "events_url": "https://api.github.com/users/tommy61157/events{/privacy}", "received_events_url": "https://api.github.com/users/tommy61157/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-06T11:27:27Z", "updated_at": "2018-08-06T13:27:41Z", "closed_at": "2018-08-06T13:27:41Z", "author_association": "NONE", "body": "I'm currently having an issue to where visual studio code is not recognizing the include of the json.hpp file no matter what I do in the IDE, I don't admittedly know if the issue is being caused by the IDE, my own silly mistake, or by the way the json library is installed. I used linuxbrew on Ubuntu Server 16.04 LTS in order to install it, and I have the latest stable version. I'm using the g++ compiler (version 5.5 I believe)\r\n\r\n![tvnviewer_2018-08-06_07-21-31](https://user-images.githubusercontent.com/4907391/43714092-e0c883d8-9949-11e8-88c7-b5e52b3ca881.png)\r\n![tvnviewer_2018-08-06_07-22-03](https://user-images.githubusercontent.com/4907391/43714093-e0d923d2-9949-11e8-9b27-e1472d9910ca.png)\r\n![tvnviewer_2018-08-06_07-23-48](https://user-images.githubusercontent.com/4907391/43714095-e0e9900a-9949-11e8-93e0-0a92ba1228a8.png)\r\n\r\nI'm still new to this, so I included screenshots of the error it brings up along with how it is mentioned in the code in order to hopefully provide some insight as to what is going on. Feel free to ask if more information is needed. I'm using Ctrl+Shift+b in visual studio code to build it.\r\n\r\nEdit: I also posted the question on stack overflow where I seem to be receiving some help too: https://stackoverflow.com/questions/51707031/nlohmann-json-c-include-issue/51707933?noredirect=1#comment90377076_51707933 "}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1186", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1186/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1186/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1186/events", "html_url": "https://github.com/nlohmann/json/issues/1186", "id": 347393485, "node_id": "MDU6SXNzdWUzNDczOTM0ODU=", "number": 1186, "title": "Get an Index or row number of an element", "user": {"login": "CleanHit", "id": 16132350, "node_id": "MDQ6VXNlcjE2MTMyMzUw", "avatar_url": "https://avatars0.githubusercontent.com/u/16132350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CleanHit", "html_url": "https://github.com/CleanHit", "followers_url": "https://api.github.com/users/CleanHit/followers", "following_url": "https://api.github.com/users/CleanHit/following{/other_user}", "gists_url": "https://api.github.com/users/CleanHit/gists{/gist_id}", "starred_url": "https://api.github.com/users/CleanHit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CleanHit/subscriptions", "organizations_url": "https://api.github.com/users/CleanHit/orgs", "repos_url": "https://api.github.com/users/CleanHit/repos", "events_url": "https://api.github.com/users/CleanHit/events{/privacy}", "received_events_url": "https://api.github.com/users/CleanHit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-03T13:19:42Z", "updated_at": "2018-08-04T07:50:24Z", "closed_at": "2018-08-04T07:50:24Z", "author_association": "NONE", "body": "Let say I have this file:\r\n\r\n```\r\n{\r\n  \"tableName\": \"\",\r\n  \"tableSchemaName\": \"\",\r\n  \"_comment\": \"\",\r\n  \"0\": [\"\",\"\", \"\", \"\"],\r\n  \"1\": [\"\", \"\", \"\", \"\"],\r\n  \"2\": [\"\", \"\", \"\", \"\"],\r\n  \"3\": [\"\", \"\", \"\", \"\"],\r\n  \"4\": [\"\", \"\", \"\", \"\"]\r\n}\r\n```\r\nIs there a way to get the `index` or `row_number` of \"0\"? I didn't see it in the document."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1185", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1185/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1185/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1185/events", "html_url": "https://github.com/nlohmann/json/issues/1185", "id": 347350574, "node_id": "MDU6SXNzdWUzNDczNTA1NzQ=", "number": 1185, "title": "reduce repos size", "user": {"login": "maddanio", "id": 366903, "node_id": "MDQ6VXNlcjM2NjkwMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/366903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maddanio", "html_url": "https://github.com/maddanio", "followers_url": "https://api.github.com/users/maddanio/followers", "following_url": "https://api.github.com/users/maddanio/following{/other_user}", "gists_url": "https://api.github.com/users/maddanio/gists{/gist_id}", "starred_url": "https://api.github.com/users/maddanio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maddanio/subscriptions", "organizations_url": "https://api.github.com/users/maddanio/orgs", "repos_url": "https://api.github.com/users/maddanio/repos", "events_url": "https://api.github.com/users/maddanio/events{/privacy}", "received_events_url": "https://api.github.com/users/maddanio/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-03T10:50:59Z", "updated_at": "2018-08-03T10:52:38Z", "closed_at": "2018-08-03T10:52:31Z", "author_association": "NONE", "body": "When re-cloning this repo i keep noticing that it comes down as about 373MB. all this just to get a json parser/serializer. i would suggest outsourcing the test data (should it ever change?) and re-writing the history."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1184", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1184/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1184/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1184/events", "html_url": "https://github.com/nlohmann/json/issues/1184", "id": 347279646, "node_id": "MDU6SXNzdWUzNDcyNzk2NDY=", "number": 1184, "title": "CMakeLists.txt in release zips?", "user": {"login": "eliasdaler", "id": 1285136, "node_id": "MDQ6VXNlcjEyODUxMzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1285136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eliasdaler", "html_url": "https://github.com/eliasdaler", "followers_url": "https://api.github.com/users/eliasdaler/followers", "following_url": "https://api.github.com/users/eliasdaler/following{/other_user}", "gists_url": "https://api.github.com/users/eliasdaler/gists{/gist_id}", "starred_url": "https://api.github.com/users/eliasdaler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eliasdaler/subscriptions", "organizations_url": "https://api.github.com/users/eliasdaler/orgs", "repos_url": "https://api.github.com/users/eliasdaler/repos", "events_url": "https://api.github.com/users/eliasdaler/events{/privacy}", "received_events_url": "https://api.github.com/users/eliasdaler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 304694104, "node_id": "MDU6TGFiZWwzMDQ2OTQxMDQ=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20please%20discuss", "name": "state: please discuss", "color": "fbca04", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2018-08-03T06:51:03Z", "updated_at": "2018-08-06T21:07:38Z", "closed_at": null, "author_association": "NONE", "body": "Hello, I've tried using [FetchContent](https://cmake.org/cmake/help/git-master/module/FetchContent.html) CMake module and this doesn't work as well as I expected. The problem is that after I download and unpack the zip, there's no CMakeLists.txt file, so I can't just get nlohmann_json target and link with it.\r\n\r\nIf you take a look at libraries like [fmt](https://github.com/fmtlib/fmt/releases), they include CMakeLists.txt in their releases, which makes fetching zips and then getting targets at configure step quite easy.\r\n\r\nSo, can we have CMake related files included in zips for future releases?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1183", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1183/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1183/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1183/events", "html_url": "https://github.com/nlohmann/json/issues/1183", "id": 347006344, "node_id": "MDU6SXNzdWUzNDcwMDYzNDQ=", "number": 1183, "title": "Difference between `merge_patch` and `update`", "user": {"login": "jdumas", "id": 578702, "node_id": "MDQ6VXNlcjU3ODcwMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/578702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdumas", "html_url": "https://github.com/jdumas", "followers_url": "https://api.github.com/users/jdumas/followers", "following_url": "https://api.github.com/users/jdumas/following{/other_user}", "gists_url": "https://api.github.com/users/jdumas/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdumas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdumas/subscriptions", "organizations_url": "https://api.github.com/users/jdumas/orgs", "repos_url": "https://api.github.com/users/jdumas/repos", "events_url": "https://api.github.com/users/jdumas/events{/privacy}", "received_events_url": "https://api.github.com/users/jdumas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-02T13:13:39Z", "updated_at": "2018-08-06T15:08:28Z", "closed_at": "2018-08-02T20:31:26Z", "author_association": "NONE", "body": "Hi,\r\n\r\nI was wondering what is the difference between `j1.merge_patch(j2)` and `j1.update(j2)`? The two methods seem to have a similar behavior, but I am not sure exactly how they differ (they appear to have different purposes). I was using `merge_patch()` for a while because I was not aware of the `update()` method, so maybe it would also make sense to update the doc so they can point at each other (even if it's a warning to say they should not be confused)."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1182", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1182/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1182/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1182/events", "html_url": "https://github.com/nlohmann/json/issues/1182", "id": 346750925, "node_id": "MDU6SXNzdWUzNDY3NTA5MjU=", "number": 1182, "title": "Is there a way to get an element from a JSON without throwing an exception on failure?", "user": {"login": "d223chen", "id": 27775959, "node_id": "MDQ6VXNlcjI3Nzc1OTU5", "avatar_url": "https://avatars1.githubusercontent.com/u/27775959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d223chen", "html_url": "https://github.com/d223chen", "followers_url": "https://api.github.com/users/d223chen/followers", "following_url": "https://api.github.com/users/d223chen/following{/other_user}", "gists_url": "https://api.github.com/users/d223chen/gists{/gist_id}", "starred_url": "https://api.github.com/users/d223chen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d223chen/subscriptions", "organizations_url": "https://api.github.com/users/d223chen/orgs", "repos_url": "https://api.github.com/users/d223chen/repos", "events_url": "https://api.github.com/users/d223chen/events{/privacy}", "received_events_url": "https://api.github.com/users/d223chen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-01T20:12:46Z", "updated_at": "2018-08-01T21:15:15Z", "closed_at": "2018-08-01T21:15:15Z", "author_association": "NONE", "body": "For example, say `j` is an nlohmann::json object. I want to try to get a member called \"raw\" using the following code, but without throwing an exception if it fails -- exceptions seem to be a time bottleneck in my application.\t\t\r\n\r\n            p.raw = j.at(\"raw\").get<int>();\r\n\r\nIs it possible?\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1181", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1181/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1181/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1181/events", "html_url": "https://github.com/nlohmann/json/issues/1181", "id": 346419883, "node_id": "MDU6SXNzdWUzNDY0MTk4ODM=", "number": 1181, "title": "to_string?", "user": {"login": "haydenflinner", "id": 14845292, "node_id": "MDQ6VXNlcjE0ODQ1Mjky", "avatar_url": "https://avatars0.githubusercontent.com/u/14845292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haydenflinner", "html_url": "https://github.com/haydenflinner", "followers_url": "https://api.github.com/users/haydenflinner/followers", "following_url": "https://api.github.com/users/haydenflinner/following{/other_user}", "gists_url": "https://api.github.com/users/haydenflinner/gists{/gist_id}", "starred_url": "https://api.github.com/users/haydenflinner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haydenflinner/subscriptions", "organizations_url": "https://api.github.com/users/haydenflinner/orgs", "repos_url": "https://api.github.com/users/haydenflinner/repos", "events_url": "https://api.github.com/users/haydenflinner/events{/privacy}", "received_events_url": "https://api.github.com/users/haydenflinner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-08-01T02:00:15Z", "updated_at": "2018-08-07T00:29:29Z", "closed_at": "2018-08-07T00:29:29Z", "author_association": "NONE", "body": "- Describe the feature in as much detail as possible.\r\n\r\nGiven a json object of any primitive type, I'd like to be able to call something like `std::to_string` on it, allowing me to turn it into a string without the quotes/escaping that `dump` would put on a string.\r\nSo far the closest I've gotten to the behavior I want is a big switch statement on the type of the json object, where I call `std::to_string(json_val.get<thetype>())` in each case except string and raise an exception on non-primitive types.\r\n\r\nSo if I have the object `{ 'lokey' : 'hival' }`, I want to be able to save the string `\"hival\"` (where the quotes ust denote the string, in memory would just be `hival`) and not `\"\\\"hival\\\"\"`. I would like the same function to implicitly format bools and ints to strings, as well. I understand that this is asking for opinionated behavior, but I think it would be helpful for brevity if you were, for example, converting from one JSON schema to another, where the same thing has a different type in the two schema. At the least, letting me get just the string of a string value instead of the escaped version would be enough for me.\r\n\r\nI'm very sorry if there's already something like this in the library, I looked through the documentation multiple times over the last few days before arriving at my switch statement.\r\n\r\nThanks for the awesome library!\r\n"}]