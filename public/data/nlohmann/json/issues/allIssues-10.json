[{"url": "https://api.github.com/repos/nlohmann/json/issues/917", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/917/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/917/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/917/events", "html_url": "https://github.com/nlohmann/json/issues/917", "id": 288925319, "node_id": "MDU6SXNzdWUyODg5MjUzMTk=", "number": 917, "title": "Unable to locate 'to_json()' and 'from_json()' methods in the same namespace", "user": {"login": "federicoorta", "id": 8298280, "node_id": "MDQ6VXNlcjgyOTgyODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/8298280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/federicoorta", "html_url": "https://github.com/federicoorta", "followers_url": "https://api.github.com/users/federicoorta/followers", "following_url": "https://api.github.com/users/federicoorta/following{/other_user}", "gists_url": "https://api.github.com/users/federicoorta/gists{/gist_id}", "starred_url": "https://api.github.com/users/federicoorta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/federicoorta/subscriptions", "organizations_url": "https://api.github.com/users/federicoorta/orgs", "repos_url": "https://api.github.com/users/federicoorta/repos", "events_url": "https://api.github.com/users/federicoorta/events{/privacy}", "received_events_url": "https://api.github.com/users/federicoorta/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-16T14:26:41Z", "updated_at": "2018-01-16T19:46:10Z", "closed_at": "2018-01-16T19:46:10Z", "author_association": "NONE", "body": "I am trying out this nice library and to learn how to use it, after running the examples, I started working on a very small example on my own. \r\n\r\nHere it is:\r\n```cpp\r\nnamespace defe {\r\n    class Item {\r\n\r\n    public:\r\n        { constructor/destructor }\r\n\r\n        { getters&setters }\r\n\r\n        void to_json(json& j, const defe::Item& item) {\r\n            j = json{{\"name\",                item.name},\r\n                     {\"type\",                item.type},\r\n                     {\"lengthInByte\",        item.lengthInByte},\r\n                     {\"elementDescriptions\", item.elementDescriptions}};\r\n        }\r\n\r\n        void from_json(const json& j, defe::Item& item) {\r\n            item.name = j.at(\"name\").get<std::string>();\r\n            item.type = j.at(\"type\").get<std::string>();\r\n            item.lengthInByte = j.at(\"lengthInByte\").get<unsigned short int>();\r\n            item.elementDescriptions = j.at(\"elementDescriptions\").get<std::vector<std::vector<std::string>>>();\r\n        }\r\n\r\n    private:\r\n        std::string name;\r\n        std::string type;\r\n        unsigned short int lengthInByte;\r\n        std::vector<std::vector<std::string>> elementDescriptions;\r\n    };\r\n\r\n    class CategoryDescription {\r\n\r\n    public:\r\n        { constructor/destructor }\r\n\r\n        { getters&setters }\r\n\r\n        void to_json(json& j, const defe::CategoryDescription& catDesc) {\r\n            j = json{{\"item\", catDesc.item}};\r\n        }\r\n\r\n        void from_json(const json& j, defe::CategoryDescription& catDesc) {\r\n            catDesc.item = j.at(\"itemCollection\").get<std::vector<defe::Item>>();\r\n        }\r\n\r\n    private:\r\n        std::vector<defe::Item> items;\r\n    };\r\n}\r\n```\r\nI compiled it twice: the first one, just with the ***Item*** class and it has been successful.\r\nThen, I added the ***CategoryDescription*** class, where I have a vector of *Item* instances.\r\n```GCC 7.2.0 on Ubuntu 17.10```\r\n\r\nWhen I try to compile the complete version (you find here), the compilation fails with the following error:\r\n```\r\nerror: static assertion failed: could not find from_json() method in T's namespace\r\n         static_assert(sizeof(BasicJsonType) == 0\r\n```\r\n\r\nI learned from the docs and from other issue answers that such an error tells that the *to_json()* and *from_json()* methods have not been located, isn't it?\r\nSo my question is: am I required to write a specialization of ```adl_serializer```, even if both classes belongs to the same namespace?\r\n\r\nI am a bit confused, I apologize for that. It might be that I am mixing up two different problems.\r\nBut I am sure to have defined the two classes in the right order (ref. [issue 561](https://github.com/nlohmann/json/issues/561)). The latter class (*CategoryDescription*) is making use of the former class (*Item*).\r\n\r\nThank  you for your help :) \r\nIf I have missed something, feel free to ask further details.\r\n\r\nBest Regards\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/916", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/916/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/916/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/916/events", "html_url": "https://github.com/nlohmann/json/issues/916", "id": 288709301, "node_id": "MDU6SXNzdWUyODg3MDkzMDE=", "number": 916, "title": "Feature: to_string(const json& j);", "user": {"login": "DELTA37", "id": 26091470, "node_id": "MDQ6VXNlcjI2MDkxNDcw", "avatar_url": "https://avatars2.githubusercontent.com/u/26091470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DELTA37", "html_url": "https://github.com/DELTA37", "followers_url": "https://api.github.com/users/DELTA37/followers", "following_url": "https://api.github.com/users/DELTA37/following{/other_user}", "gists_url": "https://api.github.com/users/DELTA37/gists{/gist_id}", "starred_url": "https://api.github.com/users/DELTA37/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DELTA37/subscriptions", "organizations_url": "https://api.github.com/users/DELTA37/orgs", "repos_url": "https://api.github.com/users/DELTA37/repos", "events_url": "https://api.github.com/users/DELTA37/events{/privacy}", "received_events_url": "https://api.github.com/users/DELTA37/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 304694104, "node_id": "MDU6TGFiZWwzMDQ2OTQxMDQ=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20please%20discuss", "name": "state: please discuss", "color": "fbca04", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-01-15T20:33:21Z", "updated_at": "2018-02-22T16:42:31Z", "closed_at": "2018-02-22T16:42:31Z", "author_association": "NONE", "body": "It is very helpful to add method to_string(const json& j); "}, {"url": "https://api.github.com/repos/nlohmann/json/issues/915", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/915/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/915/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/915/events", "html_url": "https://github.com/nlohmann/json/pull/915", "id": 288709107, "node_id": "MDExOlB1bGxSZXF1ZXN0MTYzMDM1ODkw", "number": 915, "title": "Floating-point formatting", "user": {"login": "abolz", "id": 1213085, "node_id": "MDQ6VXNlcjEyMTMwODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1213085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abolz", "html_url": "https://github.com/abolz", "followers_url": "https://api.github.com/users/abolz/followers", "following_url": "https://api.github.com/users/abolz/following{/other_user}", "gists_url": "https://api.github.com/users/abolz/gists{/gist_id}", "starred_url": "https://api.github.com/users/abolz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abolz/subscriptions", "organizations_url": "https://api.github.com/users/abolz/orgs", "repos_url": "https://api.github.com/users/abolz/repos", "events_url": "https://api.github.com/users/abolz/events{/privacy}", "received_events_url": "https://api.github.com/users/abolz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/20", "html_url": "https://github.com/nlohmann/json/milestone/20", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/20/labels", "id": 2984335, "node_id": "MDk6TWlsZXN0b25lMjk4NDMzNQ==", "number": 20, "title": "Release 3.1.0", "description": "The next release when backwards compatible features are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 30, "state": "closed", "created_at": "2017-12-17T10:12:33Z", "updated_at": "2018-02-01T23:09:13Z", "due_on": "2018-02-01T08:00:00Z", "closed_at": "2018-02-01T23:09:13Z"}, "comments": 2, "created_at": "2018-01-15T20:32:25Z", "updated_at": "2018-01-22T14:18:00Z", "closed_at": "2018-01-21T14:02:58Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/915", "html_url": "https://github.com/nlohmann/json/pull/915", "diff_url": "https://github.com/nlohmann/json/pull/915.diff", "patch_url": "https://github.com/nlohmann/json/pull/915.patch"}, "body": "Try to fix #360. printf doesn't have a \"to shortest\" mode and std::to_chars is not available yet. Use the Grisu2 algorithm for floating-point formatting which is a nice compromise between using printf with a precision of digits10 and max_digits10, i.e. the resulting decimal representation is guaranteed to round-trip and is almost always the shortest such representation."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/914", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/914/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/914/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/914/events", "html_url": "https://github.com/nlohmann/json/issues/914", "id": 288413718, "node_id": "MDU6SXNzdWUyODg0MTM3MTg=", "number": 914, "title": "[answered]Read key1 from .value example ", "user": {"login": "Diablillowilly", "id": 30727023, "node_id": "MDQ6VXNlcjMwNzI3MDIz", "avatar_url": "https://avatars1.githubusercontent.com/u/30727023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Diablillowilly", "html_url": "https://github.com/Diablillowilly", "followers_url": "https://api.github.com/users/Diablillowilly/followers", "following_url": "https://api.github.com/users/Diablillowilly/following{/other_user}", "gists_url": "https://api.github.com/users/Diablillowilly/gists{/gist_id}", "starred_url": "https://api.github.com/users/Diablillowilly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Diablillowilly/subscriptions", "organizations_url": "https://api.github.com/users/Diablillowilly/orgs", "repos_url": "https://api.github.com/users/Diablillowilly/repos", "events_url": "https://api.github.com/users/Diablillowilly/events{/privacy}", "received_events_url": "https://api.github.com/users/Diablillowilly/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-01-14T14:49:00Z", "updated_at": "2018-01-19T17:24:02Z", "closed_at": "2018-01-19T17:23:44Z", "author_association": "NONE", "body": "I was trying to use the library to read and parse a json post which I receive, so I just want to read each value, but , I dont know how to read a value inside an object. In this [example](https://nlohmann.github.io/json/classnlohmann_1_1basic__json_adcf8ca5079f5db993820bf50036bf45d.html#adcf8ca5079f5db993820bf50036bf45d) I would like to access the value of key1 or key2, I have tryed things like  object.key1 or object:key1, but none of them worked."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/913", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/913/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/913/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/913/events", "html_url": "https://github.com/nlohmann/json/issues/913", "id": 288404379, "node_id": "MDU6SXNzdWUyODg0MDQzNzk=", "number": 913, "title": "Don't use `define private public` in test files", "user": {"login": "horenmar", "id": 9026413, "node_id": "MDQ6VXNlcjkwMjY0MTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/9026413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/horenmar", "html_url": "https://github.com/horenmar", "followers_url": "https://api.github.com/users/horenmar/followers", "following_url": "https://api.github.com/users/horenmar/following{/other_user}", "gists_url": "https://api.github.com/users/horenmar/gists{/gist_id}", "starred_url": "https://api.github.com/users/horenmar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/horenmar/subscriptions", "organizations_url": "https://api.github.com/users/horenmar/orgs", "repos_url": "https://api.github.com/users/horenmar/repos", "events_url": "https://api.github.com/users/horenmar/events{/privacy}", "received_events_url": "https://api.github.com/users/horenmar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}, {"id": 344572510, "node_id": "MDU6TGFiZWwzNDQ1NzI1MTA=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20help%20needed", "name": "state: help needed", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-01-14T12:20:23Z", "updated_at": "2018-06-27T02:38:56Z", "closed_at": "2018-01-23T14:43:15Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\nI wanted to check whether Catch 2.1.0 fixed all perf. regression from Catch Classic on a real world test suite, but using `#define private public` in test files causes compilation errors because of ODR violations.\r\n\r\nOne example:\r\n```\r\nIn file included from /mnt/c/ubuntu/json/src/json.hpp:1800:0,\r\n                 from /mnt/c/ubuntu/json/test/src/unit-iterators1.cpp:32:\r\n/usr/include/c++/5/sstream:300:7: error: \u2018struct std::__cxx11::basic_stringbuf<_CharT, _Traits, _Alloc>::__xfer_bufptrs\u2019 redeclared with different access\r\n       struct __xfer_bufptrs\r\n       ^\r\ntest/CMakeFiles/test-iterators1.dir/build.make:62: recipe for target 'test/CMakeFiles/test-iterators1.dir/src/unit-iterators1.cpp.o' failed\r\n```\r\n\r\nThis is caused by Catch no longer including `<sstream>` everywhere, so an attempt to redefine `private` to `public` also hits `<sstream>` header. It can be temporarily fixed by just force including `<sstream>` before including the `json.hpp` header, but it should be noted that doing `#define private public` ~and having it affect any part of the standard library~ in any TU using the standard library is UB.\r\n\r\n\r\n_Note: There are also several test files that rely on transitive stdlib includes from Catch and will not compile with newer version._\r\n\r\n\r\n**OS & Compiler:** g++ 5.4 under WSL\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/912", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/912/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/912/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/912/events", "html_url": "https://github.com/nlohmann/json/issues/912", "id": 288386790, "node_id": "MDU6SXNzdWUyODgzODY3OTA=", "number": 912, "title": "value() template argument type deduction", "user": {"login": "rexdf", "id": 4038241, "node_id": "MDQ6VXNlcjQwMzgyNDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/4038241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rexdf", "html_url": "https://github.com/rexdf", "followers_url": "https://api.github.com/users/rexdf/followers", "following_url": "https://api.github.com/users/rexdf/following{/other_user}", "gists_url": "https://api.github.com/users/rexdf/gists{/gist_id}", "starred_url": "https://api.github.com/users/rexdf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rexdf/subscriptions", "organizations_url": "https://api.github.com/users/rexdf/orgs", "repos_url": "https://api.github.com/users/rexdf/repos", "events_url": "https://api.github.com/users/rexdf/events{/privacy}", "received_events_url": "https://api.github.com/users/rexdf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-14T06:27:54Z", "updated_at": "2018-01-14T06:48:41Z", "closed_at": "2018-01-14T06:48:41Z", "author_association": "NONE", "body": "```c++\r\nnlohmann::json a,b;\r\nb=a[\"test\"];\r\nb=a.at(\"test\");\r\nb=a.value<nlohmann::json>(\"test\", nullptr);\r\nb=a.value(\"test\", nullptr);  // both msvc and g++, compile error\r\n```\r\n\r\nIs this an expected behavior?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/911", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/911/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/911/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/911/events", "html_url": "https://github.com/nlohmann/json/pull/911", "id": 288324173, "node_id": "MDExOlB1bGxSZXF1ZXN0MTYyNzc3ODQz", "number": 911, "title": "Fix/cmake install", "user": {"login": "theodelrieu", "id": 15652306, "node_id": "MDQ6VXNlcjE1NjUyMzA2", "avatar_url": "https://avatars1.githubusercontent.com/u/15652306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theodelrieu", "html_url": "https://github.com/theodelrieu", "followers_url": "https://api.github.com/users/theodelrieu/followers", "following_url": "https://api.github.com/users/theodelrieu/following{/other_user}", "gists_url": "https://api.github.com/users/theodelrieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/theodelrieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theodelrieu/subscriptions", "organizations_url": "https://api.github.com/users/theodelrieu/orgs", "repos_url": "https://api.github.com/users/theodelrieu/repos", "events_url": "https://api.github.com/users/theodelrieu/events{/privacy}", "received_events_url": "https://api.github.com/users/theodelrieu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/20", "html_url": "https://github.com/nlohmann/json/milestone/20", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/20/labels", "id": 2984335, "node_id": "MDk6TWlsZXN0b25lMjk4NDMzNQ==", "number": 20, "title": "Release 3.1.0", "description": "The next release when backwards compatible features are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 30, "state": "closed", "created_at": "2017-12-17T10:12:33Z", "updated_at": "2018-02-01T23:09:13Z", "due_on": "2018-02-01T08:00:00Z", "closed_at": "2018-02-01T23:09:13Z"}, "comments": 2, "created_at": "2018-01-13T12:11:20Z", "updated_at": "2018-01-14T21:12:08Z", "closed_at": "2018-01-14T19:08:50Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/911", "html_url": "https://github.com/nlohmann/json/pull/911", "diff_url": "https://github.com/nlohmann/json/pull/911.diff", "patch_url": "https://github.com/nlohmann/json/pull/911.patch"}, "body": "This PR fixes the CMake installation directory issue described in #910. (Due to PR #700)\r\n\r\nIt also adds a new CMake option to let users install the non-amalgamated version of the library.\r\nThe `amalgamate` tool was moved to avoid it to be installed as well\r\n\r\n## Pull request checklist\r\n\r\n- [x]  Changes are described in the pull request, or an [existing issue is referenced](https://github.com/nlohmann/json/issues).\r\n- [x]  The test suite [compiles and runs](https://github.com/nlohmann/json/blob/develop/README.md#execute-unit-tests) without error.\r\n- [x]  [Code coverage](https://coveralls.io/github/nlohmann/json) is 100%. Test cases can be added by editing the [test suite](https://github.com/nlohmann/json/tree/develop/test/src)."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/910", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/910/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/910/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/910/events", "html_url": "https://github.com/nlohmann/json/issues/910", "id": 287717486, "node_id": "MDU6SXNzdWUyODc3MTc0ODY=", "number": 910, "title": "Installation path is incorrect", "user": {"login": "InFaMoUsZero", "id": 4587382, "node_id": "MDQ6VXNlcjQ1ODczODI=", "avatar_url": "https://avatars0.githubusercontent.com/u/4587382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/InFaMoUsZero", "html_url": "https://github.com/InFaMoUsZero", "followers_url": "https://api.github.com/users/InFaMoUsZero/followers", "following_url": "https://api.github.com/users/InFaMoUsZero/following{/other_user}", "gists_url": "https://api.github.com/users/InFaMoUsZero/gists{/gist_id}", "starred_url": "https://api.github.com/users/InFaMoUsZero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/InFaMoUsZero/subscriptions", "organizations_url": "https://api.github.com/users/InFaMoUsZero/orgs", "repos_url": "https://api.github.com/users/InFaMoUsZero/repos", "events_url": "https://api.github.com/users/InFaMoUsZero/events{/privacy}", "received_events_url": "https://api.github.com/users/InFaMoUsZero/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/20", "html_url": "https://github.com/nlohmann/json/milestone/20", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/20/labels", "id": 2984335, "node_id": "MDk6TWlsZXN0b25lMjk4NDMzNQ==", "number": 20, "title": "Release 3.1.0", "description": "The next release when backwards compatible features are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 30, "state": "closed", "created_at": "2017-12-17T10:12:33Z", "updated_at": "2018-02-01T23:09:13Z", "due_on": "2018-02-01T08:00:00Z", "closed_at": "2018-02-01T23:09:13Z"}, "comments": 6, "created_at": "2018-01-11T09:30:26Z", "updated_at": "2018-01-16T19:23:27Z", "closed_at": "2018-01-16T09:50:32Z", "author_association": "NONE", "body": "Calling \"make install\" now installs json.hpp to \"nlohmann/src/json.hpp\".\r\n\r\nNo sure if this was intentional.\r\n\r\nThe issue is from the latest PR change [here](https://github.com/nlohmann/json/blob/b67e00b9b56a344bfdb3ce92bf1f6724db518c95/CMakeLists.txt#L24)."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/909", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/909/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/909/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/909/events", "html_url": "https://github.com/nlohmann/json/issues/909", "id": 287440158, "node_id": "MDU6SXNzdWUyODc0NDAxNTg=", "number": 909, "title": "H", "user": {"login": "Ccwatson99", "id": 35299193, "node_id": "MDQ6VXNlcjM1Mjk5MTkz", "avatar_url": "https://avatars3.githubusercontent.com/u/35299193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ccwatson99", "html_url": "https://github.com/Ccwatson99", "followers_url": "https://api.github.com/users/Ccwatson99/followers", "following_url": "https://api.github.com/users/Ccwatson99/following{/other_user}", "gists_url": "https://api.github.com/users/Ccwatson99/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ccwatson99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ccwatson99/subscriptions", "organizations_url": "https://api.github.com/users/Ccwatson99/orgs", "repos_url": "https://api.github.com/users/Ccwatson99/repos", "events_url": "https://api.github.com/users/Ccwatson99/events{/privacy}", "received_events_url": "https://api.github.com/users/Ccwatson99/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 735376215, "node_id": "MDU6TGFiZWw3MzUzNzYyMTU=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20needs%20more%20info", "name": "state: needs more info", "color": "f9d0c4", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-10T13:51:37Z", "updated_at": "2018-01-13T10:26:58Z", "closed_at": "2018-01-13T10:26:58Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\n\r\n- What is the expected behavior?\r\n\r\n- And what is the actual behavior instead?\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\n\r\n- If you experience a compilation error: can you [compile and run the unit tests](https://github.com/nlohmann/json#execute-unit-tests)?\r\n\r\n\r\n**Feature Request**\r\n\r\n- Describe the feature in as much detail as possible.\r\n\r\n- Include sample usage where appropriate.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/908", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/908/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/908/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/908/events", "html_url": "https://github.com/nlohmann/json/issues/908", "id": 287142443, "node_id": "MDU6SXNzdWUyODcxNDI0NDM=", "number": 908, "title": "Build failure using clang 5", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-09T16:08:35Z", "updated_at": "2018-01-09T16:09:41Z", "closed_at": "2018-01-09T16:09:40Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\n\r\nThe project failed to build\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\n\r\nSee [here](https://circleci.com/gh/conda-forge/staged-recipes/22682) for a build log. The error generated is below:\r\n\r\n```\r\nIn file included from /home/conda/staged-recipes/build_artifacts/nlohmann_json_1515513797346/work/json-3.0.1/test/src/unit-modifiers.cpp:31:\r\n/home/conda/staged-recipes/build_artifacts/nlohmann_json_1515513797346/work/json-3.0.1/src/json.hpp:12061:40: error: no viable overloaded '='\r\n            result.m_it.array_iterator = m_value.array->insert(pos.m_it.array_iterator, cnt, val);\r\n            ~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/home/conda/staged-recipes/build_artifacts/nlohmann_json_1515513797346/work/json-3.0.1/test/src/unit-modifiers.cpp:585:35: note: in instantiation of member function 'nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer>::insert' requested here\r\n                auto it = j_array.insert(j_array.begin(), 3, 5);\r\n                                  ^\r\n/opt/rh/devtoolset-2/root/usr/lib/gcc/x86_64-redhat-linux/4.8.2/../../../../include/c++/4.8.2/bits/stl_iterator.h:708:11: note: candidate function (the implicit copy assignment operator) not viable: cannot convert argument of incomplete type 'void' to 'const __gnu_cxx::__normal_iterator<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer> *, std::vector<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer>, std::allocator<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >' for 1st argument\r\n    class __normal_iterator\r\n          ^\r\n/opt/rh/devtoolset-2/root/usr/lib/gcc/x86_64-redhat-linux/4.8.2/../../../../include/c++/4.8.2/bits/stl_iterator.h:708:11: note: candidate function (the implicit move assignment operator) not viable: cannot convert argument of incomplete type 'void' to '__gnu_cxx::__normal_iterator<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer> *, std::vector<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer>, std::allocator<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >' for 1st argument\r\nIn file included from /home/conda/staged-recipes/build_artifacts/nlohmann_json_1515513797346/work/json-3.0.1/test/src/unit-modifiers.cpp:31:\r\n/home/conda/staged-recipes/build_artifacts/nlohmann_json_1515513797346/work/json-3.0.1/src/json.hpp:12125:36: error: no viable overloaded '='\r\n        result.m_it.array_iterator = m_value.array->insert(\r\n        ~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~\r\n/home/conda/staged-recipes/build_artifacts/nlohmann_json_1515513797346/work/json-3.0.1/test/src/unit-modifiers.cpp:627:35: note: in instantiation of member function 'nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer>::insert' requested here\r\n                auto it = j_array.insert(j_array.end(), j_other_array.begin(), j_other_array.end());\r\n                                  ^\r\n/opt/rh/devtoolset-2/root/usr/lib/gcc/x86_64-redhat-linux/4.8.2/../../../../include/c++/4.8.2/bits/stl_iterator.h:708:11: note: candidate function (the implicit copy assignment operator) not viable: cannot convert argument of incomplete type 'void' to 'const __gnu_cxx::__normal_iterator<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer> *, std::vector<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer>, std::allocator<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >' for 1st argument\r\n    class __normal_iterator\r\n          ^\r\n/opt/rh/devtoolset-2/root/usr/lib/gcc/x86_64-redhat-linux/4.8.2/../../../../include/c++/4.8.2/bits/stl_iterator.h:708:11: note: candidate function (the implicit move assignment operator) not viable: cannot convert argument of incomplete type 'void' to '__gnu_cxx::__normal_iterator<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer> *, std::vector<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer>, std::allocator<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >' for 1st argument\r\nIn file included from /home/conda/staged-recipes/build_artifacts/nlohmann_json_1515513797346/work/json-3.0.1/test/src/unit-modifiers.cpp:31:\r\n/home/conda/staged-recipes/build_artifacts/nlohmann_json_1515513797346/work/json-3.0.1/src/json.hpp:12172:36: error: no viable overloaded '='\r\n        result.m_it.array_iterator = m_value.array->insert(pos.m_it.array_iterator, ilist.begin(), ilist.end());\r\n        ~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/home/conda/staged-recipes/build_artifacts/nlohmann_json_1515513797346/work/json-3.0.1/test/src/unit-modifiers.cpp:696:35: note: in instantiation of member function 'nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer>::insert' requested here\r\n                auto it = j_array.insert(j_array.begin(), {7, 8, 9});\r\n                                  ^\r\n/opt/rh/devtoolset-2/root/usr/lib/gcc/x86_64-redhat-linux/4.8.2/../../../../include/c++/4.8.2/bits/stl_iterator.h:708:11: note: candidate function (the implicit copy assignment operator) not viable: cannot convert argument of incomplete type 'void' to 'const __gnu_cxx::__normal_iterator<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer> *, std::vector<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer>, std::allocator<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >' for 1st argument\r\n    class __normal_iterator\r\n          ^\r\n/opt/rh/devtoolset-2/root/usr/lib/gcc/x86_64-redhat-linux/4.8.2/../../../../include/c++/4.8.2/bits/stl_iterator.h:708:11: note: candidate function (the implicit move assignment operator) not viable: cannot convert argument of incomplete type 'void' to '__gnu_cxx::__normal_iterator<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer> *, std::vector<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer>, std::allocator<nlohmann::basic_json<std::map, std::vector, std::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >' for 1st argument\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/907", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/907/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/907/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/907/events", "html_url": "https://github.com/nlohmann/json/issues/907", "id": 287074853, "node_id": "MDU6SXNzdWUyODcwNzQ4NTM=", "number": 907, "title": "Amalgate", "user": {"login": "milipili", "id": 5516919, "node_id": "MDQ6VXNlcjU1MTY5MTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5516919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/milipili", "html_url": "https://github.com/milipili", "followers_url": "https://api.github.com/users/milipili/followers", "following_url": "https://api.github.com/users/milipili/following{/other_user}", "gists_url": "https://api.github.com/users/milipili/gists{/gist_id}", "starred_url": "https://api.github.com/users/milipili/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/milipili/subscriptions", "organizations_url": "https://api.github.com/users/milipili/orgs", "repos_url": "https://api.github.com/users/milipili/repos", "events_url": "https://api.github.com/users/milipili/events{/privacy}", "received_events_url": "https://api.github.com/users/milipili/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/20", "html_url": "https://github.com/nlohmann/json/milestone/20", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/20/labels", "id": 2984335, "node_id": "MDk6TWlsZXN0b25lMjk4NDMzNQ==", "number": 20, "title": "Release 3.1.0", "description": "The next release when backwards compatible features are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 30, "state": "closed", "created_at": "2017-12-17T10:12:33Z", "updated_at": "2018-02-01T23:09:13Z", "due_on": "2018-02-01T08:00:00Z", "closed_at": "2018-02-01T23:09:13Z"}, "comments": 5, "created_at": "2018-01-09T12:39:08Z", "updated_at": "2018-01-18T21:04:01Z", "closed_at": "2018-01-18T21:04:01Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\n\r\n```\r\n[ 44%] Performing update step for 'amalgamate'\r\nCurrent branch master is up to date.\r\n[ 44%] Performing configure step for 'amalgamate'\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /home/milipili/projects/hc/yml2json/ext/json/amalgamate-prefix/src/amalgamate-build\r\n[ 45%] Performing build step for 'amalgamate'\r\n[100%] Built target amalgamate\r\n[ 46%] Performing install step for 'amalgamate'\r\n[100%] Built target amalgamate\r\nInstall the project...\r\n-- Install configuration: \"\"\r\n-- Up-to-date: /home/milipili/projects/hc/yml2json/bin/amalgamate\r\n[ 46%] Completed 'amalgamate'\r\n[ 48%] Built target amalgamate\r\n[ 49%] Amalgamating json.hpp...\r\n/bin/sh: 1: cd: can't cd to /home/milipili/projects/hc/yml2json/src\r\next/json/CMakeFiles/single_header.dir/build.make:57: recipe for target 'ext/json/CMakeFiles/single_header' failed\r\nmake[2]: *** [ext/json/CMakeFiles/single_header] Error 2\r\nCMakeFiles/Makefile2:1576: recipe for target 'ext/json/CMakeFiles/single_header.dir/all' failed\r\nmake[1]: *** [ext/json/CMakeFiles/single_header.dir/all] Error 2\r\nMakefile:129: recipe for target 'all' failed\r\n```\r\n\r\nSimply importing the json project does not work when building in-source.\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\n\r\n* `CMakeLists.txt`\r\n\r\n```\r\ncmake_minimum_required(VERSION 3.9)\r\nproject(xxxxxx)\r\n\r\nset(CMAKE_CXX_STANDARD 17)\r\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\r\nset(CMAKE_CXX_EXTENSIONS OFF)\r\n\r\nset(JSON_BuildTests OFF CACHE STRING \"\")\r\nadd_subdirectory(\"ext/json\")\r\n```\r\n\r\n- What is the expected behavior?\r\n\r\nIt should compile.\r\n\r\n- And what is the actual behavior instead?\r\n\r\nWell, obviously, it does not compile :)\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\n\r\ndevelop / b67e00b9b56a344bfdb3ce92bf1f6724db518c95\r\n\r\n- If you experience a compilation error: can you [compile and run the unit tests](https://github.com/nlohmann/json#execute-unit-tests)?\r\n\r\n\r\n**Feature Request**\r\n\r\n- Describe the feature in as much detail as possible.\r\n\r\n* Do not write files outside CMakeFiles (BINARY DIR). I certainly don't want to have a useless bin folder in my output (in source or out-of-source builds).\r\n* I don't really see the point of the project amalgamate. Simply using cmake to concatenate the files would be good enough and probably safer...\r\n\r\n- Include sample usage where appropriate.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/906", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/906/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/906/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/906/events", "html_url": "https://github.com/nlohmann/json/issues/906", "id": 286991553, "node_id": "MDU6SXNzdWUyODY5OTE1NTM=", "number": 906, "title": "Update documentation and tests wrt. split headers", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/20", "html_url": "https://github.com/nlohmann/json/milestone/20", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/20/labels", "id": 2984335, "node_id": "MDk6TWlsZXN0b25lMjk4NDMzNQ==", "number": 20, "title": "Release 3.1.0", "description": "The next release when backwards compatible features are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 30, "state": "closed", "created_at": "2017-12-17T10:12:33Z", "updated_at": "2018-02-01T23:09:13Z", "due_on": "2018-02-01T08:00:00Z", "closed_at": "2018-02-01T23:09:13Z"}, "comments": 0, "created_at": "2018-01-09T07:17:05Z", "updated_at": "2018-01-27T16:44:39Z", "closed_at": "2018-01-27T16:44:39Z", "author_association": "OWNER", "body": "- [x] The main file is `singled_header/json.hpp` and not `src/json.hpp`.\r\n- [x] Document amalgamation process (see #700).\r\n- [x] Document forward declaration (and annotate issues).\r\n- [x] Update contribution guidelines.\r\n- [x] Update tests: compile suite with `singled_header/json.hpp` as well as `src/json.hpp`.\r\n- [x] Add test: Check that `singled_header/json.hpp` is updated."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/905", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/905/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/905/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/905/events", "html_url": "https://github.com/nlohmann/json/issues/905", "id": 286731797, "node_id": "MDU6SXNzdWUyODY3MzE3OTc=", "number": 905, "title": "Lib not working on ubuntu 16.04", "user": {"login": "rahulm-gdb", "id": 32766438, "node_id": "MDQ6VXNlcjMyNzY2NDM4", "avatar_url": "https://avatars1.githubusercontent.com/u/32766438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rahulm-gdb", "html_url": "https://github.com/rahulm-gdb", "followers_url": "https://api.github.com/users/rahulm-gdb/followers", "following_url": "https://api.github.com/users/rahulm-gdb/following{/other_user}", "gists_url": "https://api.github.com/users/rahulm-gdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/rahulm-gdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rahulm-gdb/subscriptions", "organizations_url": "https://api.github.com/users/rahulm-gdb/orgs", "repos_url": "https://api.github.com/users/rahulm-gdb/repos", "events_url": "https://api.github.com/users/rahulm-gdb/events{/privacy}", "received_events_url": "https://api.github.com/users/rahulm-gdb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 735376215, "node_id": "MDU6TGFiZWw3MzUzNzYyMTU=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20needs%20more%20info", "name": "state: needs more info", "color": "f9d0c4", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-08T12:33:42Z", "updated_at": "2018-01-18T21:04:33Z", "closed_at": "2018-01-18T21:04:33Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\nCloned the repo and tried using json.hpp in my .cpp file.\r\nAlso tried disable debug assertions. with #define NDEBUG\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\n\r\n- What is the expected behavior?\r\nShould compile and run normally.\r\n\r\n- And what is the actual behavior instead?\r\nCompile time error.error: \r\nstatic assertion failed: could not find to_json() method in T's namespace\r\n         static_assert(sizeof(BasicJsonType) == 0\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\ntried using both release as well as develop branch.\r\n- If you experience a compilation error: can you [compile and run the unit tests](https://github.com/nlohmann/json#execute-unit-tests)? yes\r\n\r\n\r\n**Feature Request**\r\n\r\n- Describe the feature in as much detail as possible.\r\n\r\n- Include sample usage where appropriate.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/904", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/904/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/904/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/904/events", "html_url": "https://github.com/nlohmann/json/issues/904", "id": 286584833, "node_id": "MDU6SXNzdWUyODY1ODQ4MzM=", "number": 904, "title": "Problem when writing to file.", "user": {"login": "liorbiu", "id": 17683901, "node_id": "MDQ6VXNlcjE3NjgzOTAx", "avatar_url": "https://avatars3.githubusercontent.com/u/17683901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liorbiu", "html_url": "https://github.com/liorbiu", "followers_url": "https://api.github.com/users/liorbiu/followers", "following_url": "https://api.github.com/users/liorbiu/following{/other_user}", "gists_url": "https://api.github.com/users/liorbiu/gists{/gist_id}", "starred_url": "https://api.github.com/users/liorbiu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liorbiu/subscriptions", "organizations_url": "https://api.github.com/users/liorbiu/orgs", "repos_url": "https://api.github.com/users/liorbiu/repos", "events_url": "https://api.github.com/users/liorbiu/events{/privacy}", "received_events_url": "https://api.github.com/users/liorbiu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-07T17:27:17Z", "updated_at": "2018-01-07T18:04:37Z", "closed_at": "2018-01-07T18:04:36Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\n\r\nI'm trying to write json file to file. When I'm printing the json to the screen, I can see it created normally.\r\nJSON example file:\r\n\r\n```\r\n[{\r\n\t\"iteration_0\": 13,\r\n\t\"iteration_1\": 11,\r\n\t\"name\": \"ComputeCircuit\"\r\n}, {\r\n\t\"iteration_0\": 0,\r\n\t\"iteration_1\": 1,\r\n\t\"name\": \"InputSharing\"\r\n}, {\r\n\t\"iteration_0\": 14,\r\n\t\"iteration_1\": 13,\r\n\t\"name\": \"Online\"\r\n}, {\r\n\t\"iteration_0\": 5,\r\n\t\"iteration_1\": 2,\r\n\t\"name\": \"GenerateTriples\"\r\n}, {\r\n\t\"iteration_0\": 6,\r\n\t\"iteration_1\": 2,\r\n\t\"name\": \"Offline\"\r\n}]\r\n```\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\nI attempt to create the json file using this code sample:\r\n\r\n```\r\nvoid Measurement::analyze(string type)\r\n{\r\n    string filePath = getcwdStr();\r\n    string fileName = filePath + \"/\" + m_protocolName + \"_\" + type + \"_partyId=\" + to_string(m_partyId)\r\n                      +\"_numOfParties=\" + to_string(m_numOfParties) + \".json\";\r\n\r\n    //party is the root of the json objects\r\n    json party = json::array();\r\n\r\n    for (int taskNameIdx = 0; taskNameIdx < m_names.size(); taskNameIdx++)\r\n    {\r\n        //Write for each task name all the iteration\r\n        json task = json::object();\r\n        task[\"name\"] = m_names[taskNameIdx];\r\n\r\n        for (int iterationIdx = 0; iterationIdx < m_numberOfIterations; iterationIdx++)\r\n        {\r\n            task[\"iteration_\" + to_string(iterationIdx)] = (*m_cpuEndTimes)[taskNameIdx][iterationIdx];\r\n        }\r\n        party.insert(party.begin(), task);\r\n    }\r\n\r\n    //send json object to create file\r\n    createJsonFile(party, fileName);\r\n}\r\n\r\n\r\nvoid Measurement::createJsonFile(json j, string fileName)\r\n{\r\n    try\r\n    {\r\n        ifstream myfile;\r\n        myfile.open(fileName, ifstream::out);\r\n        cout << j << endl;\r\n        if (myfile.is_open())\r\n        {\r\n            myfile >> j;\r\n        }\r\n    }\r\n\r\n    catch (exception& e)\r\n    {\r\n        cout << \"Exception thrown : \" << e.what() << endl;\r\n    }\r\n}\r\n```\r\n\r\n- What is the expected behavior?\r\nCreate json file\r\n\r\n- And what is the actual behavior instead?\r\nI got this error: `[json.exception.parse_error.101] parse error at 1: syntax error - unexpected end of input; expected '[', '{', or a literal`\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\nI'm using GCC 5.4, Ubuntu 16.04.3 LTS\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\nI used the latest release 3.0.1\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/903", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/903/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/903/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/903/events", "html_url": "https://github.com/nlohmann/json/issues/903", "id": 286216328, "node_id": "MDU6SXNzdWUyODYyMTYzMjg=", "number": 903, "title": "C2864 error when compiling with VS2015 and VS 2017", "user": {"login": "xelatihy", "id": 1152872, "node_id": "MDQ6VXNlcjExNTI4NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1152872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xelatihy", "html_url": "https://github.com/xelatihy", "followers_url": "https://api.github.com/users/xelatihy/followers", "following_url": "https://api.github.com/users/xelatihy/following{/other_user}", "gists_url": "https://api.github.com/users/xelatihy/gists{/gist_id}", "starred_url": "https://api.github.com/users/xelatihy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xelatihy/subscriptions", "organizations_url": "https://api.github.com/users/xelatihy/orgs", "repos_url": "https://api.github.com/users/xelatihy/repos", "events_url": "https://api.github.com/users/xelatihy/events{/privacy}", "received_events_url": "https://api.github.com/users/xelatihy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}, {"id": 735376215, "node_id": "MDU6TGFiZWw3MzUzNzYyMTU=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20needs%20more%20info", "name": "state: needs more info", "color": "f9d0c4", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-05T07:53:22Z", "updated_at": "2018-01-14T06:41:06Z", "closed_at": "2018-01-05T13:26:09Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\nI have several compiler errors of type C2864 when compiling of both VS2015 and VS2017. Using cmake build script with C++14 as required version.\r\n\r\nI am using AppVeyor to build my app since I do not have a local Windows install, so I cannot verify whether it builds with your CMake.\r\n\r\nFirst error is in \r\n/json.hpp(812): error C2864: 'nlohmann::detail::has_mapped_type::value': a static data member with an in-class initializer must have non-volatile const integral type"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/902", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/902/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/902/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/902/events", "html_url": "https://github.com/nlohmann/json/issues/902", "id": 286152068, "node_id": "MDU6SXNzdWUyODYxNTIwNjg=", "number": 902, "title": "[json.exception.type_error.304] cannot use at() with object", "user": {"login": "aprowe", "id": 7191456, "node_id": "MDQ6VXNlcjcxOTE0NTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/7191456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aprowe", "html_url": "https://github.com/aprowe", "followers_url": "https://api.github.com/users/aprowe/followers", "following_url": "https://api.github.com/users/aprowe/following{/other_user}", "gists_url": "https://api.github.com/users/aprowe/gists{/gist_id}", "starred_url": "https://api.github.com/users/aprowe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aprowe/subscriptions", "organizations_url": "https://api.github.com/users/aprowe/orgs", "repos_url": "https://api.github.com/users/aprowe/repos", "events_url": "https://api.github.com/users/aprowe/events{/privacy}", "received_events_url": "https://api.github.com/users/aprowe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-05T00:02:05Z", "updated_at": "2018-01-05T12:15:00Z", "closed_at": "2018-01-05T12:15:00Z", "author_association": "NONE", "body": "Hi, I am getting \r\n```\r\n[json.exception.type_error.304] cannot use at() with object\r\n```\r\n\r\nWhich doesn't make sense to me, since I figured thats what `at()` is for. \r\nWhat does this error mean? Printing my json object it seems to look like a normal json string.\r\n\r\nCode: \r\n```\r\n  std::stringstream ss;\r\n\r\n  // msgpack object\r\n  ss << obj;\r\n\r\n  std::cout << ss.str();\r\n  // {\"subject\":\"set_detection_mapping_mode\", \"mode\":\"3d\"}\r\n\r\n  std::string str;\r\n  try {\r\n    auto j = json::parse(ss.str().c_str());\r\n    str = j.at('subject').get<std::string>();\r\n\r\n  } catch (detail::type_error &e) {\r\n    std::cout << e.what();\r\n    // [json.exception.type_error.304] cannot use at() with object\r\n  }\r\n```\r\n\r\nThanks\r\n  "}, {"url": "https://api.github.com/repos/nlohmann/json/issues/901", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/901/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/901/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/901/events", "html_url": "https://github.com/nlohmann/json/issues/901", "id": 285788261, "node_id": "MDU6SXNzdWUyODU3ODgyNjE=", "number": 901, "title": "No structured bindings support?", "user": {"login": "wsgeek12", "id": 5632928, "node_id": "MDQ6VXNlcjU2MzI5Mjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5632928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wsgeek12", "html_url": "https://github.com/wsgeek12", "followers_url": "https://api.github.com/users/wsgeek12/followers", "following_url": "https://api.github.com/users/wsgeek12/following{/other_user}", "gists_url": "https://api.github.com/users/wsgeek12/gists{/gist_id}", "starred_url": "https://api.github.com/users/wsgeek12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wsgeek12/subscriptions", "organizations_url": "https://api.github.com/users/wsgeek12/orgs", "repos_url": "https://api.github.com/users/wsgeek12/repos", "events_url": "https://api.github.com/users/wsgeek12/events{/privacy}", "received_events_url": "https://api.github.com/users/wsgeek12/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-01-03T19:40:33Z", "updated_at": "2018-02-12T05:43:09Z", "closed_at": "2018-02-12T05:43:09Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\nCannot use C++17 structured bindings for iteration\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\n\r\nAlthough this DOES work (taken from the docs): \r\n\r\n```cpp\r\nfor (json::iterator it = o.begin(); it != o.end(); ++it) {\r\n  std::cout << it.key() << \" : \" << it.value() << \"\\n\";\r\n}\r\n```\r\n\r\nThe following DOES NOT work:\r\n\r\n```\r\nfor (auto&& [k,v] : o)\r\n  std::cout << k << \":\" << v << \"\\n\";\r\n```\r\n\r\n- What is the expected behavior?\r\nIt should do the same thing as the traditional iterator implementation\r\n\r\n- And what is the actual behavior instead?\r\nDoes not compile\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\nclang++ 6.0 (svn tree)\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\nYes, 3.0.1\r\n\r\n- If you experience a compilation error: can you [compile and run the unit tests](https://github.com/nlohmann/json#execute-unit-tests)?\r\n\r\nThe tests work fine, so no issues there\r\n\r\n**Feature Request**\r\n\r\n- Describe the feature in as much detail as possible.\r\n\r\n- Include sample usage where appropriate.\r\n\r\n  \r\n  "}, {"url": "https://api.github.com/repos/nlohmann/json/issues/900", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/900/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/900/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/900/events", "html_url": "https://github.com/nlohmann/json/pull/900", "id": 285643104, "node_id": "MDExOlB1bGxSZXF1ZXN0MTYwODc5MDIx", "number": 900, "title": "fix link to the documentation of the emplace function", "user": {"login": "Dobiasd", "id": 5544610, "node_id": "MDQ6VXNlcjU1NDQ2MTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5544610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dobiasd", "html_url": "https://github.com/Dobiasd", "followers_url": "https://api.github.com/users/Dobiasd/followers", "following_url": "https://api.github.com/users/Dobiasd/following{/other_user}", "gists_url": "https://api.github.com/users/Dobiasd/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dobiasd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dobiasd/subscriptions", "organizations_url": "https://api.github.com/users/Dobiasd/orgs", "repos_url": "https://api.github.com/users/Dobiasd/repos", "events_url": "https://api.github.com/users/Dobiasd/events{/privacy}", "received_events_url": "https://api.github.com/users/Dobiasd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}, {"id": 735376215, "node_id": "MDU6TGFiZWw3MzUzNzYyMTU=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20needs%20more%20info", "name": "state: needs more info", "color": "f9d0c4", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/20", "html_url": "https://github.com/nlohmann/json/milestone/20", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/20/labels", "id": 2984335, "node_id": "MDk6TWlsZXN0b25lMjk4NDMzNQ==", "number": 20, "title": "Release 3.1.0", "description": "The next release when backwards compatible features are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 30, "state": "closed", "created_at": "2017-12-17T10:12:33Z", "updated_at": "2018-02-01T23:09:13Z", "due_on": "2018-02-01T08:00:00Z", "closed_at": "2018-02-01T23:09:13Z"}, "comments": 2, "created_at": "2018-01-03T10:07:23Z", "updated_at": "2018-01-27T16:56:00Z", "closed_at": "2018-01-04T16:11:18Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/900", "html_url": "https://github.com/nlohmann/json/pull/900", "diff_url": "https://github.com/nlohmann/json/pull/900.diff", "patch_url": "https://github.com/nlohmann/json/pull/900.patch"}, "body": ""}, {"url": "https://api.github.com/repos/nlohmann/json/issues/899", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/899/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/899/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/899/events", "html_url": "https://github.com/nlohmann/json/issues/899", "id": 285637777, "node_id": "MDU6SXNzdWUyODU2Mzc3Nzc=", "number": 899, "title": "How do I forward nlohmann::json declaration?", "user": {"login": "aquacrew", "id": 25341680, "node_id": "MDQ6VXNlcjI1MzQxNjgw", "avatar_url": "https://avatars3.githubusercontent.com/u/25341680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aquacrew", "html_url": "https://github.com/aquacrew", "followers_url": "https://api.github.com/users/aquacrew/followers", "following_url": "https://api.github.com/users/aquacrew/following{/other_user}", "gists_url": "https://api.github.com/users/aquacrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/aquacrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aquacrew/subscriptions", "organizations_url": "https://api.github.com/users/aquacrew/orgs", "repos_url": "https://api.github.com/users/aquacrew/repos", "events_url": "https://api.github.com/users/aquacrew/events{/privacy}", "received_events_url": "https://api.github.com/users/aquacrew/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-03T09:43:13Z", "updated_at": "2018-01-03T15:33:25Z", "closed_at": "2018-01-03T13:41:24Z", "author_association": "NONE", "body": "Hello everybody,\r\n\r\nI'm having a question - let me describe the scenario:\r\n\r\nI plan to use JSON for Modern C++ to serialize objects used in a library. Other projects using this library should have no knowledge about the method used to save data. So it should be possible to replace the mechanismn by something else in the future without any change of code on the client side. Therefor I don't want to include json.hpp in my library header files.\r\nBut forward declaration failed - maybe you can help me to do it the right way. I tried\r\n```\r\nnamespace nlohmann {\r\n  class json;\r\n}\r\n```\r\nError: using typedef-name 'using json = class nlohmann::basic_json<>' after 'class'\r\n\r\nThen I tried\r\n```\r\nnamespace nlohmann {\r\n  template<class T> class basic_json;\r\n  using json = basic_json<>;\r\n}\r\n```\r\nError: wrong number of template arguments (0, should be 1)\r\n\r\nI'm aiming to create an abstract template, which can be specialized in classes to be serialized.\r\n```\r\nnamespace MyTest {\r\n  template<class T> class JSON {\r\n  protected:\r\n    virtual void Serialize(nlohmann::json&, const T&) const = 0;\r\n    virtual void Deserialize(const nlohmann::json&, T&)     = 0;\r\n  };\r\n}\r\n```\r\n\r\nThen I want to use it this way:\r\n```\r\nnamespace MyTest {\r\n  class Attribute : public JSON<Attribute> {\r\n  private:\r\n    virtual void                  Serialize(nlohmann::json&, const Attribute&) const;\r\n    virtual void                  Deserialize(const nlohmann::json&, Attribute&);\r\n  public:\r\n    virtual void                  Serialize() const;\r\n    virtual void                  Deserialize();\r\n  };\r\n}\r\n```\r\n\r\nI would be happy to have an answer for my question or any suggestions how to achieve my goal. Mybe you could add info about forward declaration to the description."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/898", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/898/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/898/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/898/events", "html_url": "https://github.com/nlohmann/json/issues/898", "id": 285563214, "node_id": "MDU6SXNzdWUyODU1NjMyMTQ=", "number": 898, "title": "How to effectively store binary data?", "user": {"login": "rexdf", "id": 4038241, "node_id": "MDQ6VXNlcjQwMzgyNDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/4038241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rexdf", "html_url": "https://github.com/rexdf", "followers_url": "https://api.github.com/users/rexdf/followers", "following_url": "https://api.github.com/users/rexdf/following{/other_user}", "gists_url": "https://api.github.com/users/rexdf/gists{/gist_id}", "starred_url": "https://api.github.com/users/rexdf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rexdf/subscriptions", "organizations_url": "https://api.github.com/users/rexdf/orgs", "repos_url": "https://api.github.com/users/rexdf/repos", "events_url": "https://api.github.com/users/rexdf/events{/privacy}", "received_events_url": "https://api.github.com/users/rexdf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-02T23:16:21Z", "updated_at": "2018-01-03T14:11:54Z", "closed_at": "2018-01-03T14:11:54Z", "author_association": "NONE", "body": "I have a data , `uint8_t my_data[26]`  which  I want to put in `json` object once and fetch it quite frequently. There is no need to `dump` the `json` object. \r\n\r\nI try to convert it to `std::string` and it does not work(`rapidjson` seems ok).  Casting to and from `std::vector` seems quite expensive. I also need the lifecycle of the my_data is same as the json object.  Is there a better way to solve it?\r\n\r\nI thought that maybe I could get the `std::string::data()` or `std::vector::data()` directly from `json` object but I could not find the right way."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/897", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/897/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/897/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/897/events", "html_url": "https://github.com/nlohmann/json/issues/897", "id": 285269342, "node_id": "MDU6SXNzdWUyODUyNjkzNDI=", "number": 897, "title": "How to get the length of a JSON string without retrieving its std::string?", "user": {"login": "ibc", "id": 16191, "node_id": "MDQ6VXNlcjE2MTkx", "avatar_url": "https://avatars2.githubusercontent.com/u/16191?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibc", "html_url": "https://github.com/ibc", "followers_url": "https://api.github.com/users/ibc/followers", "following_url": "https://api.github.com/users/ibc/following{/other_user}", "gists_url": "https://api.github.com/users/ibc/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibc/subscriptions", "organizations_url": "https://api.github.com/users/ibc/orgs", "repos_url": "https://api.github.com/users/ibc/repos", "events_url": "https://api.github.com/users/ibc/events{/privacy}", "received_events_url": "https://api.github.com/users/ibc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-12-31T17:46:24Z", "updated_at": "2018-01-04T16:35:58Z", "closed_at": "2018-01-02T23:25:18Z", "author_association": "NONE", "body": "Basically that. I know that a `json` object holds a string and I need to know its length, hopefully without having to convert it into a C++ `std::string`.\r\n\r\nIs it possible?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/896", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/896/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/896/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/896/events", "html_url": "https://github.com/nlohmann/json/issues/896", "id": 284927933, "node_id": "MDU6SXNzdWUyODQ5Mjc5MzM=", "number": 896, "title": "Problem parsing array to global vector", "user": {"login": "davidtabernerom", "id": 16870364, "node_id": "MDQ6VXNlcjE2ODcwMzY0", "avatar_url": "https://avatars1.githubusercontent.com/u/16870364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtabernerom", "html_url": "https://github.com/davidtabernerom", "followers_url": "https://api.github.com/users/davidtabernerom/followers", "following_url": "https://api.github.com/users/davidtabernerom/following{/other_user}", "gists_url": "https://api.github.com/users/davidtabernerom/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtabernerom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtabernerom/subscriptions", "organizations_url": "https://api.github.com/users/davidtabernerom/orgs", "repos_url": "https://api.github.com/users/davidtabernerom/repos", "events_url": "https://api.github.com/users/davidtabernerom/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtabernerom/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-28T14:41:29Z", "updated_at": "2017-12-28T16:57:11Z", "closed_at": "2017-12-28T16:57:11Z", "author_association": "NONE", "body": "I am trying to parse a JSON Array of values to a global declared vector.\r\nFor some reason, it does not properly parsed it to an actually declared vector, but it does to a newly inline created vector.\r\n\r\nThis does NOT work...\r\n```cpp\r\n#include \"./json.hpp\"\r\nstd::vector<std::string> UserList;\r\nint main(int argc, char *argv[])\r\n{\r\n\t//\r\n\tstd::ifstream ConfigurationFile(\"./userlist.json\");\r\n\tnlohmann::json ConfigurationJSON;\r\n\tConfigurationFile >> ConfigurationJSON;\r\n\tUserList = ConfigurationJSON[\"Program\"][\"UserList\"];\r\n\t//\r\n}\r\n```\r\nThe console returns this\r\n```\r\n./source/main.cpp: In function \u2018int main(int, char**)\u2019:\r\n../source/main.cpp:116:19: error: ambiguous overload for \u2018operator=\u2019 (operand types are \u2018std::vector<std::__cxx11::basic_string<char> >\u2019 and \u2018nlohmann::basic_json<>::value_type {aka nlohmann::basic_json<>}\u2019)\r\n  UserList = ConfigurationJSON[\"Program\"][\"UserList\"];\r\n```\r\n----\r\n\r\nWhile both this...\r\n```cpp\r\n#include \"./json.hpp\"\r\nint main(int argc, char *argv[])\r\n{\r\n\t//\r\n\tstd::ifstream ConfigurationFile(\"./userlist.json\");\r\n\tnlohmann::json ConfigurationJSON;\r\n\tConfigurationFile >> ConfigurationJSON;\r\n\tstd::vector<std::string> UserList = ConfigurationJSON[\"Program\"][\"UserList\"];\r\n\t//\r\n}\r\n```\r\n\r\nand this...\r\n```cpp\r\n#include \"./json.hpp\"\r\nstd::vector<std::string> UserList;\r\nint main(int argc, char *argv[])\r\n{\r\n\t//\r\n\tstd::ifstream ConfigurationFile(\"./userlist.json\");\r\n\tnlohmann::json ConfigurationJSON;\r\n\tConfigurationFile >> ConfigurationJSON;\r\n\tstd::vector<std::string> TemporaryVector = ConfigurationJSON[\"Program\"][\"UserList\"];\r\n\tUserList = TemporaryVector;\r\n\t//\r\n}\r\n```\r\ndo work."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/895", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/895/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/895/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/895/events", "html_url": "https://github.com/nlohmann/json/issues/895", "id": 284778341, "node_id": "MDU6SXNzdWUyODQ3NzgzNDE=", "number": 895, "title": "[Request] Macro generating from_json() and to_json()", "user": {"login": "unrealmistake", "id": 34383248, "node_id": "MDQ6VXNlcjM0MzgzMjQ4", "avatar_url": "https://avatars0.githubusercontent.com/u/34383248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unrealmistake", "html_url": "https://github.com/unrealmistake", "followers_url": "https://api.github.com/users/unrealmistake/followers", "following_url": "https://api.github.com/users/unrealmistake/following{/other_user}", "gists_url": "https://api.github.com/users/unrealmistake/gists{/gist_id}", "starred_url": "https://api.github.com/users/unrealmistake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unrealmistake/subscriptions", "organizations_url": "https://api.github.com/users/unrealmistake/orgs", "repos_url": "https://api.github.com/users/unrealmistake/repos", "events_url": "https://api.github.com/users/unrealmistake/events{/privacy}", "received_events_url": "https://api.github.com/users/unrealmistake/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-27T19:03:11Z", "updated_at": "2018-02-03T14:07:06Z", "closed_at": "2018-02-03T14:07:06Z", "author_association": "NONE", "body": "Making to_json() and from_json() for all classes in my object model is a chore.\r\nI want to create a macro that would generate bodies for these functions. I saw some clues how to make it, but my knowledge of C++ is not good enough to implement it.\r\nI want to be able to write something like this:\r\n```cpp\r\nclass MyClass\r\n{\r\n...\r\n    JsonVar(int, intvar)\r\n    JsonVar(string, stingvar)\r\n...\r\n}\r\nvoid to_json(json& j, const MyClass& p) {\r\nJsonTo(MyClass)\r\n... //some extra serialization\r\n}\r\nvoid from_json(const json& j, MyClass& p) {\r\nJsonFrom(MyClass)\r\n... //some extra deserialization\r\n}\r\n```\r\nand get\r\n```cpp\r\nclass MyClass\r\n{\r\n...\r\n    int intvar;\r\n    string stringvar;\r\n...\r\n}\r\nvoid to_json(json& j, const MyClass& p) {\r\nj = json{ { \"intvar\", p.intvar},\r\n\t\t\t{ \"stringvar\", p.stringvar} };\r\n... //some extra serialization\r\n}\r\nvoid from_json(const json& j, MyClass& p) {\r\np.intvar= j.at(\"intvar\").get<int>();\r\np.stringvar= j.at(\"stringvar\").get<string>();\r\n... //some extra deserialization\r\n}\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/894", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/894/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/894/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/894/events", "html_url": "https://github.com/nlohmann/json/issues/894", "id": 284543514, "node_id": "MDU6SXNzdWUyODQ1NDM1MTQ=", "number": 894, "title": "Invalid RFC6902 copy operation succeeds", "user": {"login": "cmannett85", "id": 12583103, "node_id": "MDQ6VXNlcjEyNTgzMTAz", "avatar_url": "https://avatars1.githubusercontent.com/u/12583103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmannett85", "html_url": "https://github.com/cmannett85", "followers_url": "https://api.github.com/users/cmannett85/followers", "following_url": "https://api.github.com/users/cmannett85/following{/other_user}", "gists_url": "https://api.github.com/users/cmannett85/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmannett85/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmannett85/subscriptions", "organizations_url": "https://api.github.com/users/cmannett85/orgs", "repos_url": "https://api.github.com/users/cmannett85/repos", "events_url": "https://api.github.com/users/cmannett85/events{/privacy}", "received_events_url": "https://api.github.com/users/cmannett85/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/17", "html_url": "https://github.com/nlohmann/json/milestone/17", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/17/labels", "id": 2256017, "node_id": "MDk6TWlsZXN0b25lMjI1NjAxNw==", "number": 17, "title": "Release 3.0.1", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 7, "state": "closed", "created_at": "2017-01-16T19:53:23Z", "updated_at": "2017-12-29T19:16:17Z", "due_on": "2017-12-29T08:00:00Z", "closed_at": "2017-12-29T19:16:17Z"}, "comments": 5, "created_at": "2017-12-26T11:46:37Z", "updated_at": "2017-12-28T17:51:41Z", "closed_at": "2017-12-28T17:51:41Z", "author_association": "NONE", "body": "```cpp\r\nusing nlohmann::json;\r\n\r\nint main()\r\n{\r\n    auto model = R\"({\r\n        \"one\": {\r\n            \"two\": {\r\n                \"three\": \"hello\",\r\n                \"four\": 42\r\n            }\r\n        }\r\n    })\"_json;\r\n\r\n    try {\r\n        model.patch(R\"([{\"op\": \"move\",\r\n                         \"from\": \"/one/two/three\",\r\n                         \"path\": \"/a/b/c\"}])\"_json);\r\n    } catch (json::exception& e) {\r\n        std::cout << \"Move: \" << e.id << std::endl;\r\n    }\r\n\r\n    try {\r\n        model = model.patch(R\"([{\"op\": \"copy\",\r\n                                 \"from\": \"/one/two/three\",\r\n                                 \"path\": \"/a/b/c\"}])\"_json);\r\n        std::cout << model.at(\"/a/b/c\"_json_pointer) << std::endl;\r\n    } catch (json::exception& e) {\r\n        std::cout << \"Copy: \" << e.id << std::endl;\r\n    }\r\n}\r\n\r\n// Results in:\r\nMove: 403\r\n\"hello\"\r\n```\r\nThe above \"move\" and \"copy\" JSON patch operations are both invalid for the same reason: `/a/b/c` is an invalid path because `b` does not already exist - however, the \"copy\" succeeds.\r\n\r\nLegalise:\r\nRFC6902 4.5:\r\n> This operation is functionally identical to an \"add\" operation at the target location using the value specified in the \"from\" member.\r\n\r\nRFC6092 4.1:\r\n> Because this operation is designed to add to existing objects and arrays, its target location will often not exist.  Although the pointer's error handling algorithm will thus be invoked, this specification defines the error handling behavior for \"add\" pointers to ignore that error and add the value as specified. \r\n However, **the object itself or an array containing it does need to exist**, and it remains an error for that not to be the case."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/893", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/893/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/893/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/893/events", "html_url": "https://github.com/nlohmann/json/issues/893", "id": 284457645, "node_id": "MDU6SXNzdWUyODQ0NTc2NDU=", "number": 893, "title": "How to rename a key during looping?", "user": {"login": "gestern", "id": 1861589, "node_id": "MDQ6VXNlcjE4NjE1ODk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1861589?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gestern", "html_url": "https://github.com/gestern", "followers_url": "https://api.github.com/users/gestern/followers", "following_url": "https://api.github.com/users/gestern/following{/other_user}", "gists_url": "https://api.github.com/users/gestern/gists{/gist_id}", "starred_url": "https://api.github.com/users/gestern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gestern/subscriptions", "organizations_url": "https://api.github.com/users/gestern/orgs", "repos_url": "https://api.github.com/users/gestern/repos", "events_url": "https://api.github.com/users/gestern/events{/privacy}", "received_events_url": "https://api.github.com/users/gestern/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-25T16:12:16Z", "updated_at": "2017-12-28T10:24:55Z", "closed_at": "2017-12-28T10:20:09Z", "author_association": "NONE", "body": "I want to change **key** within a loop. Is it possible? How? For example, having a code: \r\n```cpp\r\nfor (auto& a : json::iterator_wrapper(b.value())) {\r\n                auto aname = a.key();\r\n```\r\nHow to rename `a.key()`? Looks like it's not described itself by documentation."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/892", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/892/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/892/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/892/events", "html_url": "https://github.com/nlohmann/json/issues/892", "id": 284356904, "node_id": "MDU6SXNzdWUyODQzNTY5MDQ=", "number": 892, "title": "clang++-6.0 (6.0.0-svn321357-1) warning", "user": {"login": "mgerhardy", "id": 577713, "node_id": "MDQ6VXNlcjU3NzcxMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/577713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgerhardy", "html_url": "https://github.com/mgerhardy", "followers_url": "https://api.github.com/users/mgerhardy/followers", "following_url": "https://api.github.com/users/mgerhardy/following{/other_user}", "gists_url": "https://api.github.com/users/mgerhardy/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgerhardy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgerhardy/subscriptions", "organizations_url": "https://api.github.com/users/mgerhardy/orgs", "repos_url": "https://api.github.com/users/mgerhardy/repos", "events_url": "https://api.github.com/users/mgerhardy/events{/privacy}", "received_events_url": "https://api.github.com/users/mgerhardy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-24T11:16:20Z", "updated_at": "2017-12-24T14:27:28Z", "closed_at": "2017-12-24T14:27:28Z", "author_association": "NONE", "body": "Getting this warning with compiling with clang++ 6.0\r\n\r\n```\r\n/home/mgerhardy/dev/engine/src/modules/core/json.hpp:6323:20: warning: result of comparison of 0 <= unsigned expression is always true [-Wtautological-unsigned-zero-compare]\r\n        return ((0 <= u and u <= 127) ? 0\r\n                 ~ ^  ~\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/891", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/891/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/891/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/891/events", "html_url": "https://github.com/nlohmann/json/issues/891", "id": 284256105, "node_id": "MDU6SXNzdWUyODQyNTYxMDU=", "number": 891, "title": "Make json.hpp aware of the modules TS?", "user": {"login": "AraHaan", "id": 15173749, "node_id": "MDQ6VXNlcjE1MTczNzQ5", "avatar_url": "https://avatars0.githubusercontent.com/u/15173749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AraHaan", "html_url": "https://github.com/AraHaan", "followers_url": "https://api.github.com/users/AraHaan/followers", "following_url": "https://api.github.com/users/AraHaan/following{/other_user}", "gists_url": "https://api.github.com/users/AraHaan/gists{/gist_id}", "starred_url": "https://api.github.com/users/AraHaan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AraHaan/subscriptions", "organizations_url": "https://api.github.com/users/AraHaan/orgs", "repos_url": "https://api.github.com/users/AraHaan/repos", "events_url": "https://api.github.com/users/AraHaan/events{/privacy}", "received_events_url": "https://api.github.com/users/AraHaan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 735376215, "node_id": "MDU6TGFiZWw3MzUzNzYyMTU=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20needs%20more%20info", "name": "state: needs more info", "color": "f9d0c4", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-12-22T21:35:58Z", "updated_at": "2017-12-24T08:34:43Z", "closed_at": "2017-12-24T08:34:43Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\nUsing json.hpp with the Modules TS.\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\n1. Enable the modules TS.\r\n2. try to ``import std.core;`` before ``#include <json.hpp>``\r\n3. ???\r\n\r\n- What is the expected behavior?\r\nFor ``json.hpp`` to ``ifdef`` some macro for if the user has the modules TS to import the standard library dependencies instead of ``#include``ing them. However I am not sure such macro exists.\r\n\r\n- And what is the actual behavior instead?\r\nNo check whatsoever and include of the standard library headers separately.\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\nMSVC++ 2017 15.5.2, Windows 7 Ultimate build 7601 SP1 x64\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\nDevelop branch\r\n\r\n- If you experience a compilation error: can you [compile and run the unit tests](https://github.com/nlohmann/json#execute-unit-tests)?\r\nUnsure on compile errors.\r\n\r\nAlso this might be unrelivant to the issue, It would also be nice if the json.hpp could be imported as well just like ``std.core`` by ``import json;``\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/890", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/890/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/890/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/890/events", "html_url": "https://github.com/nlohmann/json/pull/890", "id": 284211760, "node_id": "MDExOlB1bGxSZXF1ZXN0MTU5OTA0NTM5", "number": 890, "title": "Handle all enum cases in switch", "user": {"login": "shamprasadps", "id": 34718277, "node_id": "MDQ6VXNlcjM0NzE4Mjc3", "avatar_url": "https://avatars0.githubusercontent.com/u/34718277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shamprasadps", "html_url": "https://github.com/shamprasadps", "followers_url": "https://api.github.com/users/shamprasadps/followers", "following_url": "https://api.github.com/users/shamprasadps/following{/other_user}", "gists_url": "https://api.github.com/users/shamprasadps/gists{/gist_id}", "starred_url": "https://api.github.com/users/shamprasadps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shamprasadps/subscriptions", "organizations_url": "https://api.github.com/users/shamprasadps/orgs", "repos_url": "https://api.github.com/users/shamprasadps/repos", "events_url": "https://api.github.com/users/shamprasadps/events{/privacy}", "received_events_url": "https://api.github.com/users/shamprasadps/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-22T17:13:10Z", "updated_at": "2017-12-28T10:36:28Z", "closed_at": "2017-12-28T10:36:28Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/890", "html_url": "https://github.com/nlohmann/json/pull/890", "diff_url": "https://github.com/nlohmann/json/pull/890.diff", "patch_url": "https://github.com/nlohmann/json/pull/890.patch"}, "body": "[Describe your pull request here. Please read the text below the line, and make sure you follow the checklist.]\r\n\r\n* * *\r\n\r\n## Pull request checklist\r\n\r\n- [x]  Changes are described in the pull request, or an [existing issue is referenced](https://github.com/nlohmann/json/issues/889).\r\n- [x]  The test suite [compiles and runs](https://github.com/nlohmann/json/blob/develop/README.md#execute-unit-tests) without error.\r\n\r\nTest suite compiles and runs without any error. \r\n- [ ]  [Code coverage](https://coveralls.io/github/nlohmann/json) is 100%. Test cases can be added by editing the [test suite](https://github.com/nlohmann/json/tree/develop/test/src).\r\n\r\n## Please don't\r\n\r\n- The C++11 support varies between different **compilers** and versions. Please note the [list of supported compilers](https://github.com/nlohmann/json/blob/master/README.md#supported-compilers). Some compilers like GCC 4.8 (and earlier), Clang 3.3 (and earlier), or Microsoft Visual Studio 13.0 and earlier are known not to work due to missing or incomplete C++11 support. Please refrain from proposing changes that work around these compiler's limitations with `#ifdef`s or other means.\r\n- Specifically, I am aware of compilation problems with **Microsoft Visual Studio** (there even is an [issue label](https://github.com/nlohmann/json/issues?utf8=\u2713&q=label%3A%22visual+studio%22+) for these kind of bugs). I understand that even in 2016, complete C++11 support isn't there yet. But please also understand that I do not want to drop features or uglify the code just to make Microsoft's sub-standard compiler happy. The past has shown that there are ways to express the functionality such that the code compiles with the most recent MSVC - unfortunately, this is not the main objective of the project.\r\n- Please refrain from proposing changes that would **break [JSON](http://json.org) conformance**. If you propose a conformant extension of JSON to be supported by the library, please motivate this extension.\r\n- Please do not open pull requests that address **multiple issues**.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/889", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/889/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/889/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/889/events", "html_url": "https://github.com/nlohmann/json/issues/889", "id": 284204194, "node_id": "MDU6SXNzdWUyODQyMDQxOTQ=", "number": 889, "title": "All enum values not handled in switch cases. ( -Wswitch-enum )", "user": {"login": "shamprasadps", "id": 34718277, "node_id": "MDQ6VXNlcjM0NzE4Mjc3", "avatar_url": "https://avatars0.githubusercontent.com/u/34718277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shamprasadps", "html_url": "https://github.com/shamprasadps", "followers_url": "https://api.github.com/users/shamprasadps/followers", "following_url": "https://api.github.com/users/shamprasadps/following{/other_user}", "gists_url": "https://api.github.com/users/shamprasadps/gists{/gist_id}", "starred_url": "https://api.github.com/users/shamprasadps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shamprasadps/subscriptions", "organizations_url": "https://api.github.com/users/shamprasadps/orgs", "repos_url": "https://api.github.com/users/shamprasadps/repos", "events_url": "https://api.github.com/users/shamprasadps/events{/privacy}", "received_events_url": "https://api.github.com/users/shamprasadps/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-12-22T16:36:23Z", "updated_at": "2017-12-28T10:36:44Z", "closed_at": "2017-12-28T10:36:44Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\nI am having issues while compiling a C++ program using the json.hpp file. I am using the complier options -Wswitch-enum and -Werror. I see that all the enums are not handled in the switch cases, which is why I am seeing some errors while compiling. \r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\nInclude the json.hpp in the header of a c++ program and compile the program using -Wswitch-enum and -Werror options. \r\n\r\n- What is the expected behavior?\r\nAll enums must be handled and there should be no errors while using these compiler options. \r\n\r\n- And what is the actual behavior instead?\r\nActual behaviour: It throws the errors like \"src/json.hpp:3005:9: error: enumeration value \u2018end_array\u2019 not handled in switch [-Werror=switch-enum]\" \r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\nIm using a Ubuntu OS and using a supported compiler.\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\nUsed from 'develop' branch. \r\n\r\n- If you experience a compilation error: can you [compile and run the unit tests](https://github.com/nlohmann/json#execute-unit-tests)?\r\nNot experiencing any issues with the existing compiler options. Errors only when using -Wswitch-enum and -Werror. \r\n\r\n**Feature Request**\r\n\r\n- Describe the feature in as much detail as possible.\r\n\r\n- Include sample usage where appropriate.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/888", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/888/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/888/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/888/events", "html_url": "https://github.com/nlohmann/json/issues/888", "id": 284136937, "node_id": "MDU6SXNzdWUyODQxMzY5Mzc=", "number": 888, "title": "JSON Pointer resolve failure resulting in incorrect exception code", "user": {"login": "cmannett85", "id": 12583103, "node_id": "MDQ6VXNlcjEyNTgzMTAz", "avatar_url": "https://avatars1.githubusercontent.com/u/12583103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmannett85", "html_url": "https://github.com/cmannett85", "followers_url": "https://api.github.com/users/cmannett85/followers", "following_url": "https://api.github.com/users/cmannett85/following{/other_user}", "gists_url": "https://api.github.com/users/cmannett85/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmannett85/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmannett85/subscriptions", "organizations_url": "https://api.github.com/users/cmannett85/orgs", "repos_url": "https://api.github.com/users/cmannett85/repos", "events_url": "https://api.github.com/users/cmannett85/events{/privacy}", "received_events_url": "https://api.github.com/users/cmannett85/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/17", "html_url": "https://github.com/nlohmann/json/milestone/17", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/17/labels", "id": 2256017, "node_id": "MDk6TWlsZXN0b25lMjI1NjAxNw==", "number": 17, "title": "Release 3.0.1", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 7, "state": "closed", "created_at": "2017-01-16T19:53:23Z", "updated_at": "2017-12-29T19:16:17Z", "due_on": "2017-12-29T08:00:00Z", "closed_at": "2017-12-29T19:16:17Z"}, "comments": 9, "created_at": "2017-12-22T11:09:54Z", "updated_at": "2017-12-28T11:46:26Z", "closed_at": "2017-12-28T11:45:54Z", "author_association": "NONE", "body": "```cpp\r\nint main()\r\n{\r\n    auto model = R\"({\r\n        \"a\": {\r\n            \"b\": 42\r\n        }\r\n    })\"_json;\r\n\r\n    try {\r\n        model.at(\"/a/c\"_json_pointer);\r\n    } catch (json::exception& e) {\r\n        std::cout << \"ID: \" << e.id << std::endl;\r\n    }\r\n\r\n    return EXIT_SUCCESS;\r\n}\r\n```\r\nPrints:\r\n> ID: 403\r\n\r\nAccording to the `json::out_of_range` and `json::at(const json_pointer&)` docs, a JSON pointer that cannot be resolved should return a 404, but it actually returns a 403."}]