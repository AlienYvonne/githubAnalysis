[{"url": "https://api.github.com/repos/nlohmann/json/issues/767", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/767/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/767/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/767/events", "html_url": "https://github.com/nlohmann/json/issues/767", "id": 263400419, "node_id": "MDU6SXNzdWUyNjM0MDA0MTk=", "number": 767, "title": "make check - no test ran", "user": {"login": "emazv72", "id": 5381288, "node_id": "MDQ6VXNlcjUzODEyODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5381288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emazv72", "html_url": "https://github.com/emazv72", "followers_url": "https://api.github.com/users/emazv72/followers", "following_url": "https://api.github.com/users/emazv72/following{/other_user}", "gists_url": "https://api.github.com/users/emazv72/gists{/gist_id}", "starred_url": "https://api.github.com/users/emazv72/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emazv72/subscriptions", "organizations_url": "https://api.github.com/users/emazv72/orgs", "repos_url": "https://api.github.com/users/emazv72/repos", "events_url": "https://api.github.com/users/emazv72/events{/privacy}", "received_events_url": "https://api.github.com/users/emazv72/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 486186748, "node_id": "MDU6TGFiZWw0ODYxODY3NDg=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20mingw", "name": "platform: mingw", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-10-06T10:22:59Z", "updated_at": "2017-10-19T10:13:54Z", "closed_at": "2017-10-10T06:51:43Z", "author_association": "NONE", "body": "\r\nSymptom: Running make check doesn't run any test on my environment.\r\n\r\n```shell\r\n$ make check\r\nmake check -C test\r\nmake[1]: Entering directory '/hbdev/test/ziplib/json/test'\r\nExecuting test-json_patch...\r\n===============================================================================\r\nNo tests ran\r\n\r\n```\r\n\r\nThe issue seems to be in test/Makefile\r\n\r\nif I replace \r\n\r\n_TEST_PATTERN ?= \"*\"_\r\n\r\nwith \r\n\r\n_TEST_PATTERN ?= \"\"_\r\n\r\nThe issue seems fixed\r\n\r\nOS: Windows 10\r\nPlat: MSYS2 - GNU Make 4.2.1 - gcc version 7.2.0 (Rev1, Built by MSYS2 project)\r\n\r\nThanks\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/766", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/766/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/766/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/766/events", "html_url": "https://github.com/nlohmann/json/issues/766", "id": 263396258, "node_id": "MDU6SXNzdWUyNjMzOTYyNTg=", "number": 766, "title": "The library cannot work properly with custom allocator based containers", "user": {"login": "imalyavskiy", "id": 6505514, "node_id": "MDQ6VXNlcjY1MDU1MTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/6505514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imalyavskiy", "html_url": "https://github.com/imalyavskiy", "followers_url": "https://api.github.com/users/imalyavskiy/followers", "following_url": "https://api.github.com/users/imalyavskiy/following{/other_user}", "gists_url": "https://api.github.com/users/imalyavskiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/imalyavskiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imalyavskiy/subscriptions", "organizations_url": "https://api.github.com/users/imalyavskiy/orgs", "repos_url": "https://api.github.com/users/imalyavskiy/repos", "events_url": "https://api.github.com/users/imalyavskiy/events{/privacy}", "received_events_url": "https://api.github.com/users/imalyavskiy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2017-10-06T10:06:31Z", "updated_at": "2017-10-17T07:08:51Z", "closed_at": "2017-10-17T07:08:51Z", "author_association": "NONE", "body": "Motivation: \r\nIn order to be able to pass std::string std::vector std::list containers between different binaries it was required to define a custom allocator because the project I am involved in uses binaries with statically linked CRT.\r\n\r\nIssue:\r\nOnce I defined own allocator and std containers that using it I faced a problem - if I need to put data from std::string to my customized std::basic_string I always need to copy data. Suppose tmp::string is my customized string and std::string is usual string. So in order to put data from 2nd to 1st I need to use c_str() each time. The best solution is to instantiate the nlohmann::basic_json with my customized containers. But inside the library its utility classes do not take into account the string_t alias and its string_t::value_type as well thus this leads to errors. I tried to push required types to each class inside the library that use std::string, char, std::vector etc... I did a lots of work but suddenly faced with difficulties that I just cannot understand. So I'm asking a society to help me to solve the issue and improve  the json library as a result - to make it truly(or almost truly) template.\r\n\r\n\r\n[Here](https://github.com/imalyavskiy/nlohmann_json_test) is the test project that does not compile because static assert fired up with a statement that  the \"to_json\" function with my custom types does not exist. The thing that I am wondering of is that the \"to_json\" function based on custom types exists(as it follows from the build log) and this confuses me a lot.\r\n \r\nThe fork of the JSON parser attached as sub module. And this is a MS VS 2017 project.\r\n\r\nThanks a lot.\r\n\r\nPS: [build.log.txt](https://github.com/nlohmann/json/files/1362354/build.log.txt)"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/765", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/765/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/765/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/765/events", "html_url": "https://github.com/nlohmann/json/pull/765", "id": 262514045, "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ0NDgwNzky", "number": 765, "title": "using more CMake", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 4, "created_at": "2017-10-03T17:25:24Z", "updated_at": "2017-10-04T08:40:22Z", "closed_at": "2017-10-04T08:39:57Z", "author_association": "OWNER", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/765", "html_url": "https://github.com/nlohmann/json/pull/765", "diff_url": "https://github.com/nlohmann/json/pull/765.diff", "patch_url": "https://github.com/nlohmann/json/pull/765.patch"}, "body": "Done:\r\n\r\n- using CMake for the special targets Valgrind (JSON_Valgrind), Clang sanitizers (JSON_Sanitizer), and no-exceptions (JSON_NoExceptions)\r\n- using Ninja to improve compilation speed\r\n- compiling and executing each test suite individually\r\n- removed test cases that broke the MSVC 2017 build\r\n\r\nMissing:\r\n\r\n- some magic to get Coveralls to work with individual executables (maybe @theodelrieu can help here with his approach from #700)"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/764", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/764/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/764/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/764/events", "html_url": "https://github.com/nlohmann/json/pull/764", "id": 262235133, "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ0Mjg4Njc3", "number": 764, "title": "Simplified istream handing #367", "user": {"login": "pjkundert", "id": 290924, "node_id": "MDQ6VXNlcjI5MDkyNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/290924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjkundert", "html_url": "https://github.com/pjkundert", "followers_url": "https://api.github.com/users/pjkundert/followers", "following_url": "https://api.github.com/users/pjkundert/following{/other_user}", "gists_url": "https://api.github.com/users/pjkundert/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjkundert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjkundert/subscriptions", "organizations_url": "https://api.github.com/users/pjkundert/orgs", "repos_url": "https://api.github.com/users/pjkundert/repos", "events_url": "https://api.github.com/users/pjkundert/events{/privacy}", "received_events_url": "https://api.github.com/users/pjkundert/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 50, "created_at": "2017-10-02T21:30:22Z", "updated_at": "2017-10-22T07:12:48Z", "closed_at": "2017-10-22T06:52:29Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/764", "html_url": "https://github.com/nlohmann/json/pull/764", "diff_url": "https://github.com/nlohmann/json/pull/764.diff", "patch_url": "https://github.com/nlohmann/json/pull/764.patch"}, "body": "Simplified cached_input_stream_adapter<> to input_stream_adapter, to avoid redundant buffering (already buffered in underlying std::streambuf), and thus to not pre-load (and discard) a large buffer of input from the istream when parsing a smaller JSON record.  Handles a leading Byte Order Mark using standard istream putback/unget.\r\n\r\nAlso, instead of trying to re-read the previous token on error (which involved seeking, which may or may not be available on an istream), simply collects the developing token into a std::string.  The space underlying this string is preserved between tokens, so this collection devolves into simple copying, and is therefore quite efficient.\r\n\r\nThis also opens the door to further simplifications in the future.\r\n\r\nAdded a simple unit test to confirm operation.  Did not test effect on json::parse.  I feel that the approach suggested by @nlohmann (std::parse demands that the entire buffer be a single JSON object, but operator>> scans just a single upcoming JSON object) is correct...  Perhaps this pull request may help move in that direction."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/763", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/763/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/763/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/763/events", "html_url": "https://github.com/nlohmann/json/issues/763", "id": 261952404, "node_id": "MDU6SXNzdWUyNjE5NTI0MDQ=", "number": 763, "title": "Documentation or feature request.", "user": {"login": "deathly809", "id": 1381210, "node_id": "MDQ6VXNlcjEzODEyMTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1381210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deathly809", "html_url": "https://github.com/deathly809", "followers_url": "https://api.github.com/users/deathly809/followers", "following_url": "https://api.github.com/users/deathly809/following{/other_user}", "gists_url": "https://api.github.com/users/deathly809/gists{/gist_id}", "starred_url": "https://api.github.com/users/deathly809/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deathly809/subscriptions", "organizations_url": "https://api.github.com/users/deathly809/orgs", "repos_url": "https://api.github.com/users/deathly809/repos", "events_url": "https://api.github.com/users/deathly809/events{/privacy}", "received_events_url": "https://api.github.com/users/deathly809/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-01T22:38:38Z", "updated_at": "2017-10-02T16:32:56Z", "closed_at": "2017-10-02T16:32:56Z", "author_association": "NONE", "body": "Is it possible to flatten fixed sized arrays to a single array? \r\n\r\n**Serialize**\r\n```\r\nstd::vector<Vec3> points = {{1,2,3} , {4,5,6} };\r\n```\r\n```\r\n{\r\n  \"points\" : [\r\n        1,\r\n        2,\r\n        3,\r\n        4,\r\n        5,\r\n        6\r\n  ]\r\n}\r\n```\r\n\r\n**Deserialize**\r\n```\r\n{\r\n  \"points\" : [\r\n        1,\r\n        2,\r\n        3,\r\n        4,\r\n        5,\r\n        6\r\n  ]\r\n}\r\n```\r\n```\r\nstd::vector<Vec3>  points = { {1,2,3} {4,5,6} };\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/762", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/762/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/762/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/762/events", "html_url": "https://github.com/nlohmann/json/issues/762", "id": 261928291, "node_id": "MDU6SXNzdWUyNjE5MjgyOTE=", "number": 762, "title": "warnings in msvc about mix/max macro while windows.h is used in the project", "user": {"login": "crea7or", "id": 467357, "node_id": "MDQ6VXNlcjQ2NzM1Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/467357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crea7or", "html_url": "https://github.com/crea7or", "followers_url": "https://api.github.com/users/crea7or/followers", "following_url": "https://api.github.com/users/crea7or/following{/other_user}", "gists_url": "https://api.github.com/users/crea7or/gists{/gist_id}", "starred_url": "https://api.github.com/users/crea7or/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crea7or/subscriptions", "organizations_url": "https://api.github.com/users/crea7or/orgs", "repos_url": "https://api.github.com/users/crea7or/repos", "events_url": "https://api.github.com/users/crea7or/events{/privacy}", "received_events_url": "https://api.github.com/users/crea7or/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 6, "created_at": "2017-10-01T16:34:28Z", "updated_at": "2017-10-02T19:28:00Z", "closed_at": "2017-10-02T18:38:59Z", "author_association": "NONE", "body": "In the version 2.1.1, msvc generates a few warnings about std::numeric_limits<>::max() (and min) usage. This is because windows.h have their own min/max macros definitions in the global namespace (here is [microsoft kb article about it.](https://support.microsoft.com/en-us/help/143208/prb-using-stl-in-windows-program-can-cause-min-max-conflicts).\r\nwarning exact text: warning C4003: not enough actual parameters for macro 'max'\r\n\r\npossible fixes:\r\n1)\r\n\r\n`#define NOMINMAX`\r\n\r\n2)\r\n\r\n```\r\n#ifdef max\r\n#undef max\r\n#endif\r\n\r\n#ifdef min\r\n#undef min\r\n#endif\r\n```\r\n\r\n3) use additional parenthesis\r\n\r\nstd::numeric_limits<uint8_t>::max() => (std::numeric_limits<uint8_t>::max)()\r\n\r\nFirst two methods can produce problems, due to use original windows min/max in the gdi and more.\r\nthe third method should be tested on the other compilers.\r\n\r\nSource to reproduce the problem:\r\n\r\n```\r\n#include \"stdafx.h\"\r\n#include \"windows.h\"\r\n#include \"json.hpp\"\r\n\r\nusing json = nlohmann::json;\r\n\r\nint main( int argc, char const *argv[] )\r\n{\r\n\tjson j;\r\n\tj[ \"test\" ] = 1;\r\n}\r\n```\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/761", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/761/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/761/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/761/events", "html_url": "https://github.com/nlohmann/json/issues/761", "id": 261915208, "node_id": "MDU6SXNzdWUyNjE5MTUyMDg=", "number": 761, "title": "std::signbit ambiguous", "user": {"login": "adayoegi", "id": 15476718, "node_id": "MDQ6VXNlcjE1NDc2NzE4", "avatar_url": "https://avatars3.githubusercontent.com/u/15476718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adayoegi", "html_url": "https://github.com/adayoegi", "followers_url": "https://api.github.com/users/adayoegi/followers", "following_url": "https://api.github.com/users/adayoegi/following{/other_user}", "gists_url": "https://api.github.com/users/adayoegi/gists{/gist_id}", "starred_url": "https://api.github.com/users/adayoegi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adayoegi/subscriptions", "organizations_url": "https://api.github.com/users/adayoegi/orgs", "repos_url": "https://api.github.com/users/adayoegi/repos", "events_url": "https://api.github.com/users/adayoegi/events{/privacy}", "received_events_url": "https://api.github.com/users/adayoegi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-10-01T13:12:41Z", "updated_at": "2017-10-02T03:19:59Z", "closed_at": "2017-10-02T03:19:58Z", "author_association": "NONE", "body": "I just cloned the latest files and only copy json.hpp to my project, on Win10 with vs2015.\r\n\r\nWhile compilation, the error message C2668 states that signbit is ambiguous on line 6663,\r\n`const auto is_negative = std::signbit(x);`\r\nit seems signbit is from corecrt_math.h with 3 overloads whose inputs are float, double, long double.\r\nSince line 6663 is in dump_integer(), I guess the input x is an int so the compiler is not sure which type to convert.\r\n\r\nDoes anyone ever encountered C2668 ambiguous call to overloaded function \"signbit\" ?\r\nHow do you guys solve this?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/760", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/760/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/760/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/760/events", "html_url": "https://github.com/nlohmann/json/issues/760", "id": 261884485, "node_id": "MDU6SXNzdWUyNjE4ODQ0ODU=", "number": 760, "title": "How to use value for std::experimental::optional type?", "user": {"login": "dianambb", "id": 20344299, "node_id": "MDQ6VXNlcjIwMzQ0Mjk5", "avatar_url": "https://avatars2.githubusercontent.com/u/20344299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dianambb", "html_url": "https://github.com/dianambb", "followers_url": "https://api.github.com/users/dianambb/followers", "following_url": "https://api.github.com/users/dianambb/following{/other_user}", "gists_url": "https://api.github.com/users/dianambb/gists{/gist_id}", "starred_url": "https://api.github.com/users/dianambb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dianambb/subscriptions", "organizations_url": "https://api.github.com/users/dianambb/orgs", "repos_url": "https://api.github.com/users/dianambb/repos", "events_url": "https://api.github.com/users/dianambb/events{/privacy}", "received_events_url": "https://api.github.com/users/dianambb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-01T01:31:24Z", "updated_at": "2017-10-05T17:53:16Z", "closed_at": "2017-10-05T17:53:16Z", "author_association": "NONE", "body": "I am trying to parse the json value for a field if it exists and set it to std::experimental::nullopt if it does not.\r\n\r\n```cpp\r\n#include \"json.hpp\"\r\n#include <experimental/optional>\r\n\r\nnamespace nlohmann {\r\n    template <typename T>\r\n    struct adl_serializer<std::experimental::optional<T>> {\r\n        static void to_json(json& j, const std::experimental::optional<T>& opt) {\r\n            if (opt == std::experimental::nullopt) {\r\n                j = nullptr;\r\n            } else {\r\n                j = *opt;\r\n            }\r\n        }\r\n        \r\n        static void from_json(const json& j, std::experimental::optional<T>& opt) {\r\n            if (j.is_null()) {\r\n                opt = std::experimental::nullopt;\r\n            } else {\r\n                opt = j.get<T>();\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nnamespace my_project {\r\nstruct Person {\r\n    std::string id;\r\n    std::string name;\r\n    std::experimental::optional<std::string> company;\r\n};\r\n\r\n    void to_json(json& j, const Person& p) {\r\n        j = json {\r\n            {\"id\", p.id},\r\n            {\"name\", p.name},\r\n            {\"company\", p.company}\r\n        };\r\n    }\r\n    \r\n    void from_json(const json& j, Person& p) {\r\n        p.id = j.at(\"id\").get<std::string>();\r\n        p.name = j.at(\"name\").get<std::string>();\r\n\r\n        // This works\r\n\r\n        try {\r\n            p.company = j.at(\"company\").get<std::experimental::optional<std::string>>();\r\n        } catch(std::exception) {\r\n            p.company = std::experimental::nullopt;\r\n        }\r\n\r\n        // This does not work, but it would be nice to have it instead if using try/catch for multiple fields.\r\n\r\n        p.company = j.value(\"company\", std::experimental::nullopt);\r\n    }\r\n}\r\n\r\n\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/759", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/759/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/759/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/759/events", "html_url": "https://github.com/nlohmann/json/issues/759", "id": 261595042, "node_id": "MDU6SXNzdWUyNjE1OTUwNDI=", "number": 759, "title": "Cannot load json file properly", "user": {"login": "PowerOfCreation", "id": 24482177, "node_id": "MDQ6VXNlcjI0NDgyMTc3", "avatar_url": "https://avatars2.githubusercontent.com/u/24482177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PowerOfCreation", "html_url": "https://github.com/PowerOfCreation", "followers_url": "https://api.github.com/users/PowerOfCreation/followers", "following_url": "https://api.github.com/users/PowerOfCreation/following{/other_user}", "gists_url": "https://api.github.com/users/PowerOfCreation/gists{/gist_id}", "starred_url": "https://api.github.com/users/PowerOfCreation/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PowerOfCreation/subscriptions", "organizations_url": "https://api.github.com/users/PowerOfCreation/orgs", "repos_url": "https://api.github.com/users/PowerOfCreation/repos", "events_url": "https://api.github.com/users/PowerOfCreation/events{/privacy}", "received_events_url": "https://api.github.com/users/PowerOfCreation/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-29T10:12:07Z", "updated_at": "2017-12-04T21:10:14Z", "closed_at": "2017-10-04T10:00:07Z", "author_association": "NONE", "body": "I couldn't find any example nor documentation on how to load a json file properly. I did it doing so:\r\nifstream myfile(p.path());\r\n```cpp\r\njson j;\r\nj << myfile;\r\ncout << j.at(0) << endl;\r\ncout << j[0] << endl;\r\n```\r\nNeither of those variants do work. I can compile it but I get the error cannot use at() with object and same with the [] operator. Only with a iterator I can actually access my values:\r\n`for (json::iterator it = j.begin(); it != j.end(); ++it) `\r\nBut I can't access the subvalues in any way yet as there are no examples or documentations avaiable.\r\nI tried it in many ways:\r\n```cpp\r\njson j;\r\nj << myfile;\r\nfor (json::iterator it = j.begin(); it != j.end(); ++it) \r\n{\r\n            json k;\r\n            k << it;\r\n            k << it.value();\r\n...\r\n```\r\n Are there any examples how to actually load a json file properly or am I doing something wrong?\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/758", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/758/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/758/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/758/events", "html_url": "https://github.com/nlohmann/json/issues/758", "id": 261401643, "node_id": "MDU6SXNzdWUyNjE0MDE2NDM=", "number": 758, "title": "Compilation error with unordered_map< int, int >", "user": {"login": "giomasce", "id": 101675, "node_id": "MDQ6VXNlcjEwMTY3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/101675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giomasce", "html_url": "https://github.com/giomasce", "followers_url": "https://api.github.com/users/giomasce/followers", "following_url": "https://api.github.com/users/giomasce/following{/other_user}", "gists_url": "https://api.github.com/users/giomasce/gists{/gist_id}", "starred_url": "https://api.github.com/users/giomasce/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giomasce/subscriptions", "organizations_url": "https://api.github.com/users/giomasce/orgs", "repos_url": "https://api.github.com/users/giomasce/repos", "events_url": "https://api.github.com/users/giomasce/events{/privacy}", "received_events_url": "https://api.github.com/users/giomasce/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-28T17:37:31Z", "updated_at": "2017-09-28T17:40:47Z", "closed_at": "2017-09-28T17:40:47Z", "author_association": "NONE", "body": "This might be similar to #734, but I observe different results with different plaftorms, so maybe it is a different thing. On Debian unstable with g++ 7.2.0-7 the following program does not compile:\r\n\r\n```c++\r\n#include <unordered_map>\r\n#include <string>\r\n\r\n#include \"json.h\"\r\n\r\nusing namespace std;\r\nusing json = nlohmann::json;\r\n\r\nint main(int argc, char const *argv[])\r\n{\r\n    json j;\r\n    unordered_map< int, int > m;\r\n    m = j.get<decltype(m)>();\r\n}\r\n```\r\n\r\nHowever, this does work:\r\n\r\n```c++\r\n#include <unordered_map>\r\n#include <string>\r\n\r\n#include \"json.h\"\r\n\r\nusing namespace std;\r\nusing json = nlohmann::json;\r\n\r\nint main(int argc, char const *argv[])\r\n{\r\n    json j;\r\n    unordered_map< string, int > m;\r\n    m = j.get<decltype(m)>();\r\n}\r\n```\r\n\r\nThe only change is `string` instead of `int` in the `unordered_map` template arguments. I tried to go through the template error messages, but my C++ knowledge is not sufficiently advanced. The same happens with clang++ 3.8.1-24, again from Debian unstable."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/757", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/757/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/757/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/757/events", "html_url": "https://github.com/nlohmann/json/issues/757", "id": 261155763, "node_id": "MDU6SXNzdWUyNjExNTU3NjM=", "number": 757, "title": "CBOR string", "user": {"login": "arnaudbrejeon", "id": 21390, "node_id": "MDQ6VXNlcjIxMzkw", "avatar_url": "https://avatars3.githubusercontent.com/u/21390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arnaudbrejeon", "html_url": "https://github.com/arnaudbrejeon", "followers_url": "https://api.github.com/users/arnaudbrejeon/followers", "following_url": "https://api.github.com/users/arnaudbrejeon/following{/other_user}", "gists_url": "https://api.github.com/users/arnaudbrejeon/gists{/gist_id}", "starred_url": "https://api.github.com/users/arnaudbrejeon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arnaudbrejeon/subscriptions", "organizations_url": "https://api.github.com/users/arnaudbrejeon/orgs", "repos_url": "https://api.github.com/users/arnaudbrejeon/repos", "events_url": "https://api.github.com/users/arnaudbrejeon/events{/privacy}", "received_events_url": "https://api.github.com/users/arnaudbrejeon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 571470316, "node_id": "MDU6TGFiZWw1NzE0NzAzMTY=", "url": "https://api.github.com/repos/nlohmann/json/labels/aspect:%20binary%20formats", "name": "aspect: binary formats", "color": "5319e7", "default": false}, {"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-28T00:15:06Z", "updated_at": "2017-11-06T16:21:04Z", "closed_at": "2017-11-06T16:21:04Z", "author_association": "NONE", "body": "I received some CBOR files that contain strings (major type 2) and not UTF-8 strings(major type 3).\r\nIt looks like parsing fails. Is it on purpose?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/756", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/756/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/756/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/756/events", "html_url": "https://github.com/nlohmann/json/issues/756", "id": 261110435, "node_id": "MDU6SXNzdWUyNjExMTA0MzU=", "number": 756, "title": "Proposal: out_of_range should be a subclass of std::out_of_range", "user": {"login": "adityamarella", "id": 706873, "node_id": "MDQ6VXNlcjcwNjg3Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/706873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adityamarella", "html_url": "https://github.com/adityamarella", "followers_url": "https://api.github.com/users/adityamarella/followers", "following_url": "https://api.github.com/users/adityamarella/following{/other_user}", "gists_url": "https://api.github.com/users/adityamarella/gists{/gist_id}", "starred_url": "https://api.github.com/users/adityamarella/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adityamarella/subscriptions", "organizations_url": "https://api.github.com/users/adityamarella/orgs", "repos_url": "https://api.github.com/users/adityamarella/repos", "events_url": "https://api.github.com/users/adityamarella/events{/privacy}", "received_events_url": "https://api.github.com/users/adityamarella/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 3, "created_at": "2017-09-27T20:39:02Z", "updated_at": "2017-10-27T16:35:27Z", "closed_at": "2017-10-27T16:35:19Z", "author_association": "NONE", "body": "https://github.com/nlohmann/json/blob/b05ea3de55d83da56b8b045b9fdb4a53e6397be8/src/json.hpp#L428\r\n\r\nIs there any reason not to inherit `out_of_range` exception from `std::out_of_range`?\r\n\r\nThe current release version v2.1.1 is throwing std::out_of_range but the latest on develop throws custom `out_of_range` exception which could cause backward compatibility issues.\r\n\r\nMy code below was working with v2.1.1 release version, stopped working when I moved to the latest on develop\r\n```\r\ntry {\r\n    json.at(\"xxx\")\r\n} catch(std::out_of_range &e) {\r\n   ...\r\n}\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/755", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/755/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/755/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/755/events", "html_url": "https://github.com/nlohmann/json/issues/755", "id": 260935580, "node_id": "MDU6SXNzdWUyNjA5MzU1ODA=", "number": 755, "title": "Compiling with icpc", "user": {"login": "tdegeus", "id": 7030445, "node_id": "MDQ6VXNlcjcwMzA0NDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7030445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tdegeus", "html_url": "https://github.com/tdegeus", "followers_url": "https://api.github.com/users/tdegeus/followers", "following_url": "https://api.github.com/users/tdegeus/following{/other_user}", "gists_url": "https://api.github.com/users/tdegeus/gists{/gist_id}", "starred_url": "https://api.github.com/users/tdegeus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tdegeus/subscriptions", "organizations_url": "https://api.github.com/users/tdegeus/orgs", "repos_url": "https://api.github.com/users/tdegeus/repos", "events_url": "https://api.github.com/users/tdegeus/events{/privacy}", "received_events_url": "https://api.github.com/users/tdegeus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 706237888, "node_id": "MDU6TGFiZWw3MDYyMzc4ODg=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20icc", "name": "platform: icc", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 17, "created_at": "2017-09-27T11:11:13Z", "updated_at": "2018-01-19T15:18:18Z", "closed_at": "2017-10-04T15:31:12Z", "author_association": "NONE", "body": "I would like to compile with the Intel C++ compiler, in particular this one\r\n\r\n```bash\r\n$ icpc --version\r\nicpc (ICC) 17.0.2 20170213\r\nCopyright (C) 1985-2017 Intel Corporation.  All rights reserved.\r\n```\r\n\r\nBut currently this results in \r\n\r\n```bash\r\n...json.hpp(67): error: #error directive: \"unsupported GCC version - see https://github.com/nlohmann/json#supported-compilers\"\r\n          #error \"unsupported GCC version - see https://github.com/nlohmann/json#supported-compilers\"\r\n```\r\n\r\nWhen I remove the checks, I'm able to successfully compile and run. Compiling with `-Wall -Wextra -pendantic` only results in the following warnings\r\n\r\n```bash\r\n/home/tdegeus/prog/research/avalanches_inertia/json/json.hpp(6323): warning #186: pointless comparison of unsigned integer with zero\r\n          return ((0 <= u and u <= 127) ? 0\r\n                     ^\r\n          detected during:\r\n            instantiation of \"std::size_t={unsigned long} nlohmann::detail::serializer<BasicJsonType>::extra_space(const nlohmann::detail::serializer<BasicJsonType>::string_t &, bool) [with BasicJsonType=nlohmann::basic_json<std::map, std::vector, std::string, bool, int64_t={long}, uint64_t={unsigned long}, double, std::allocator, nlohmann::adl_serializer>]\" at line 6500\r\n            instantiation of \"void nlohmann::detail::serializer<BasicJsonType>::dump_escaped(const nlohmann::detail::serializer<BasicJsonType>::string_t &, bool) const [with BasicJsonType=nlohmann::basic_json<std::map, std::vector, std::string, bool, int64_t={long}, uint64_t={unsigned long}, double, std::allocator, nlohmann::adl_serializer>]\" at line 6154\r\n            instantiation of \"void nlohmann::detail::serializer<BasicJsonType>::dump(const BasicJsonType &, bool, bool, unsigned int, unsigned int) [with BasicJsonType=nlohmann::basic_json<std::map, std::vector, std::string, bool, int64_t={long}, uint64_t={unsigned long}, double, std::allocator, nlohmann::adl_serializer>]\" at line 8995\r\n            instantiation of \"nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::string_t nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::dump(int, char, bool) const [with ObjectType=std::map, ArrayType=std::vector, StringType=std::string, BooleanType=bool,\r\n                      NumberIntegerType=int64_t={long}, NumberUnsignedType=uint64_t={unsigned long}, NumberFloatType=double, AllocatorType=std::allocator, JSONSerializer=nlohmann::adl_serializer]\" at line 14653\r\n\r\n/home/tdegeus/prog/research/avalanches_inertia/json/json.hpp(6663): warning #186: pointless comparison of unsigned integer with zero\r\n          const bool is_negative = x < 0;\r\n                                     ^\r\n          detected during:\r\n            instantiation of \"void nlohmann::detail::serializer<BasicJsonType>::dump_integer(NumberType) [with BasicJsonType=nlohmann::basic_json<std::map, std::vector, std::string, bool, int64_t={long}, uint64_t={unsigned long}, double, std::allocator, nlohmann::adl_serializer>, NumberType=uint64_t={unsigned long}, <unnamed>=0]\" at line 6290\r\n            instantiation of \"void nlohmann::detail::serializer<BasicJsonType>::dump(const BasicJsonType &, bool, bool, unsigned int, unsigned int) [with BasicJsonType=nlohmann::basic_json<std::map, std::vector, std::string, bool, int64_t={long}, uint64_t={unsigned long}, double, std::allocator, nlohmann::adl_serializer>]\" at line 8995\r\n            instantiation of \"nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::string_t nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::dump(int, char, bool) const [with ObjectType=std::map, ArrayType=std::vector, StringType=std::string, BooleanType=bool,\r\n                      NumberIntegerType=int64_t={long}, NumberUnsignedType=uint64_t={unsigned long}, NumberFloatType=double, AllocatorType=std::allocator, JSONSerializer=nlohmann::adl_serializer]\" at line 14653\r\n\r\n/home/tdegeus/prog/research/avalanches_inertia/json/json.hpp(9762): warning #191: type qualifier is meaningless on cast type\r\n          return get_impl_ptr(static_cast<const PointerType>(nullptr));\r\n                                          ^\r\n          detected during:\r\n            instantiation of \"void nlohmann::detail::get_arithmetic_value(const BasicJsonType &, ArithmeticType &) [with BasicJsonType=nlohmann::basic_json<std::map, std::vector, std::string, bool, int64_t={long}, uint64_t={unsigned long}, double, std::allocator, nlohmann::adl_serializer>, ArithmeticType=double, <unnamed>=0]\" at line 1133\r\n            instantiation of \"void nlohmann::detail::from_json(const BasicJsonType &, BasicJsonType::number_float_t &) [with BasicJsonType=nlohmann::basic_json<std::map, std::vector, std::string, bool, int64_t={long}, uint64_t={unsigned long}, double, std::allocator, nlohmann::adl_serializer>]\" at line 1368\r\n            instantiation of \"auto nlohmann::detail::from_json_fn::call(const BasicJsonType &, T &, nlohmann::detail::priority_tag<1U>) const->decltype((<expression>)) [with BasicJsonType=nlohmann::basic_json<std::map, std::vector, std::string, bool, int64_t={long}, uint64_t={unsigned long}, double, std::allocator, nlohmann::adl_serializer>, T=double]\" at line 1383\r\n            instantiation of \"void nlohmann::detail::from_json_fn::operator()(const BasicJsonType &, T &) const [with BasicJsonType=nlohmann::basic_json<std::map, std::vector, std::string, bool, int64_t={long}, uint64_t={unsigned long}, double, std::allocator, nlohmann::adl_serializer>, T=double]\" at line 6880\r\n            instantiation of \"void nlohmann::adl_serializer<<unnamed>, <unnamed>>::from_json(BasicJsonType &&, ValueType &) [with <unnamed>=double, <unnamed>=void, BasicJsonType=const nlohmann::basic_json<std::map, std::vector, std::string, bool, int64_t={long}, uint64_t={unsigned long}, double, std::allocator, nlohmann::adl_serializer> &, ValueType=double]\" at line 9592\r\n            instantiation of \"ValueType nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::get<ValueTypeCV,ValueType,<unnamed>>() const [with ObjectType=std::map, ArrayType=std::vector, StringType=std::string, BooleanType=bool, NumberIntegerType=int64_t={long}, NumberUnsignedType=uint64_t={unsigned long}, NumberFloatType=double, AllocatorType=std::allocator,\r\n                      JSONSerializer=nlohmann::adl_serializer, ValueTypeCV=double, ValueType=double, <unnamed>=0]\" at line 237 of \"/home/tdegeus/prog/research/avalanches_inertia/main.cpp\"\r\n\r\nremark #11074: Inlining inhibited by limit max-size\r\nremark #11074: Inlining inhibited by limit max-total-size\r\nremark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/754", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/754/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/754/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/754/events", "html_url": "https://github.com/nlohmann/json/issues/754", "id": 260860874, "node_id": "MDU6SXNzdWUyNjA4NjA4NzQ=", "number": 754, "title": "Getter is setting the value to null if the key does not exist", "user": {"login": "adityamarella", "id": 706873, "node_id": "MDQ6VXNlcjcwNjg3Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/706873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adityamarella", "html_url": "https://github.com/adityamarella", "followers_url": "https://api.github.com/users/adityamarella/followers", "following_url": "https://api.github.com/users/adityamarella/following{/other_user}", "gists_url": "https://api.github.com/users/adityamarella/gists{/gist_id}", "starred_url": "https://api.github.com/users/adityamarella/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adityamarella/subscriptions", "organizations_url": "https://api.github.com/users/adityamarella/orgs", "repos_url": "https://api.github.com/users/adityamarella/repos", "events_url": "https://api.github.com/users/adityamarella/events{/privacy}", "received_events_url": "https://api.github.com/users/adityamarella/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-27T06:30:07Z", "updated_at": "2017-09-27T22:14:08Z", "closed_at": "2017-09-27T06:38:07Z", "author_association": "NONE", "body": "Here is the sample code\r\n```\r\n#include <iostream>\r\n#include <json.hpp>\r\n\r\nint main(void) {\r\n    nlohmann::json json;\r\n    json[\"xxx\"] = 1;\r\n    auto y = json[\"yyy\"];\r\n    std::cout << json.dump() << std::endl;\r\n    return 0;\r\n}\r\n```\r\nThe output is `{\"xxx\":1,\"yyy\":null}`. \r\n\r\nThe expected behavior is to throw std::out_of_range exception"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/753", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/753/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/753/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/753/events", "html_url": "https://github.com/nlohmann/json/pull/753", "id": 260673460, "node_id": "MDExOlB1bGxSZXF1ZXN0MTQzMTcyMjA3", "number": 753, "title": "Add info for the vcpkg package.", "user": {"login": "gregmarr", "id": 8569738, "node_id": "MDQ6VXNlcjg1Njk3Mzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/8569738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gregmarr", "html_url": "https://github.com/gregmarr", "followers_url": "https://api.github.com/users/gregmarr/followers", "following_url": "https://api.github.com/users/gregmarr/following{/other_user}", "gists_url": "https://api.github.com/users/gregmarr/gists{/gist_id}", "starred_url": "https://api.github.com/users/gregmarr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gregmarr/subscriptions", "organizations_url": "https://api.github.com/users/gregmarr/orgs", "repos_url": "https://api.github.com/users/gregmarr/repos", "events_url": "https://api.github.com/users/gregmarr/events{/privacy}", "received_events_url": "https://api.github.com/users/gregmarr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 5, "created_at": "2017-09-26T15:41:49Z", "updated_at": "2018-07-04T20:46:40Z", "closed_at": "2017-09-26T20:36:37Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/753", "html_url": "https://github.com/nlohmann/json/pull/753", "diff_url": "https://github.com/nlohmann/json/pull/753.diff", "patch_url": "https://github.com/nlohmann/json/pull/753.patch"}, "body": "This adds the information on the package for this library in the vcpkg package manager, and fixes a typo in the description of the hunter package name.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/752", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/752/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/752/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/752/events", "html_url": "https://github.com/nlohmann/json/issues/752", "id": 259608463, "node_id": "MDU6SXNzdWUyNTk2MDg0NjM=", "number": 752, "title": "parsing works sometimes and crashes others", "user": {"login": "AdamMiltonBarker", "id": 6291410, "node_id": "MDQ6VXNlcjYyOTE0MTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/6291410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdamMiltonBarker", "html_url": "https://github.com/AdamMiltonBarker", "followers_url": "https://api.github.com/users/AdamMiltonBarker/followers", "following_url": "https://api.github.com/users/AdamMiltonBarker/following{/other_user}", "gists_url": "https://api.github.com/users/AdamMiltonBarker/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdamMiltonBarker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdamMiltonBarker/subscriptions", "organizations_url": "https://api.github.com/users/AdamMiltonBarker/orgs", "repos_url": "https://api.github.com/users/AdamMiltonBarker/repos", "events_url": "https://api.github.com/users/AdamMiltonBarker/events{/privacy}", "received_events_url": "https://api.github.com/users/AdamMiltonBarker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-09-21T19:38:11Z", "updated_at": "2017-09-21T21:25:31Z", "closed_at": "2017-09-21T21:25:31Z", "author_association": "NONE", "body": "Hi guys I am using this with paho c, both installed using VCPKG and used in a C++ console app. I attempting to convert message->payload to json so I can access the elements of the response. This works sometimes but in others I get errors such as:\r\n\r\n\"parse error - unexpected 's'; expected end of input\"\r\n\r\nExactly the same response is work and not working randomly. This is the code which is the on message arrived callback from paho:\r\n\r\n\r\n```\r\nint msgarrvd(void *context, char *topicName, int topicLen, MQTTAsync_message *message)\r\n{\r\n\tint i;\r\n\tconst char* payloadptr;\r\n\r\n\tpayloadptr = (const char*)message->payload;\r\n\tstd::cout << payloadptr;\r\n\tstd::vector<std::string> v = explode(\"/\", topicName);\r\n\tstd::string s(payloadptr);\r\n\tstd::cout << s;\r\n\tjson data = json::parse(s+'\\n');\r\n\tstd::cout << data[\"Command\"];\r\n\r\n\tif (v[4]==\"Commands\") {\r\n\r\n\t}\r\n\t \r\n\tMQTTAsync_freeMessage(&message);\r\n\tMQTTAsync_free(topicName);\r\n\treturn 1;\r\n}\r\n```\r\n\r\nExample response:\r\n\r\n`{\"Sensor\":\"CCTV\",\"SensorID\":130,\"Command\":\"Capture\",\"CommandValue\":\"Face\"}`"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/751", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/751/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/751/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/751/events", "html_url": "https://github.com/nlohmann/json/issues/751", "id": 259422382, "node_id": "MDU6SXNzdWUyNTk0MjIzODI=", "number": 751, "title": "Static_assert failed \"incompatible pointer type\" with Xcode", "user": {"login": "KingOfDuck", "id": 6134155, "node_id": "MDQ6VXNlcjYxMzQxNTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6134155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KingOfDuck", "html_url": "https://github.com/KingOfDuck", "followers_url": "https://api.github.com/users/KingOfDuck/followers", "following_url": "https://api.github.com/users/KingOfDuck/following{/other_user}", "gists_url": "https://api.github.com/users/KingOfDuck/gists{/gist_id}", "starred_url": "https://api.github.com/users/KingOfDuck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KingOfDuck/subscriptions", "organizations_url": "https://api.github.com/users/KingOfDuck/orgs", "repos_url": "https://api.github.com/users/KingOfDuck/repos", "events_url": "https://api.github.com/users/KingOfDuck/events{/privacy}", "received_events_url": "https://api.github.com/users/KingOfDuck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 304694104, "node_id": "MDU6TGFiZWwzMDQ2OTQxMDQ=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20please%20discuss", "name": "state: please discuss", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-21T08:53:32Z", "updated_at": "2017-10-01T14:19:34Z", "closed_at": "2017-10-01T14:19:34Z", "author_association": "NONE", "body": "I just simply include json.hpp, using Xcode. And this error occurs while building.\r\nHere is the place where the issue appears(3368).\r\nThe compiler also says no matching function for call to 'get_impl_ptr'  at line 3379.\r\n\r\n        3367   // make sure the type matches the allowed types\r\n        3368  static_assert(\r\n        3369      std::is_same<object_t, pointee_t>::value\r\n        3370      or std::is_same<array_t, pointee_t>::value\r\n            or std::is_same<string_t, pointee_t>::value\r\n            or std::is_same<boolean_t, pointee_t>::value\r\n            or std::is_same<number_integer_t, pointee_t>::value\r\n            or std::is_same<number_unsigned_t, pointee_t>::value\r\n            or std::is_same<number_float_t, pointee_t>::value\r\n            , \"incompatible pointer type\");\r\n\r\n        3378        // delegate the call to get_impl_ptr<>()\r\n        3379        return get_impl_ptr(static_cast<PointerType>(nullptr));\r\n\r\nAlready added -std=c++11.\r\nThe compiler is Apple LLVM 8.1. \r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/750", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/750/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/750/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/750/events", "html_url": "https://github.com/nlohmann/json/issues/750", "id": 259209279, "node_id": "MDU6SXNzdWUyNTkyMDkyNzk=", "number": 750, "title": "user-defined literal operator not found", "user": {"login": "vsakharuk", "id": 5408026, "node_id": "MDQ6VXNlcjU0MDgwMjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/5408026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsakharuk", "html_url": "https://github.com/vsakharuk", "followers_url": "https://api.github.com/users/vsakharuk/followers", "following_url": "https://api.github.com/users/vsakharuk/following{/other_user}", "gists_url": "https://api.github.com/users/vsakharuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsakharuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsakharuk/subscriptions", "organizations_url": "https://api.github.com/users/vsakharuk/orgs", "repos_url": "https://api.github.com/users/vsakharuk/repos", "events_url": "https://api.github.com/users/vsakharuk/events{/privacy}", "received_events_url": "https://api.github.com/users/vsakharuk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 706237888, "node_id": "MDU6TGFiZWw3MDYyMzc4ODg=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20icc", "name": "platform: icc", "color": "eb6420", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-09-20T15:37:47Z", "updated_at": "2017-09-29T16:33:13Z", "closed_at": "2017-09-29T16:33:05Z", "author_association": "NONE", "body": "I am getting this error with json 2.1.1\r\n\r\nusing precompiled header file \".../test/cotire/json_unit_CXX_prefix.pchi\"\r\n.../test/src/unit-deserialization.cpp(82): error: user-defined literal operator not found\r\n              CHECK(\"[\\\"foo\\\",1,2,3,false,{\\\"one\\\":1}]\"_json == json({\"foo\", 1, 2, 3, false, {{\"one\", 1}}}))\r\n\r\nI see literal operator in json.hpp\r\nI suspect this is due to pre-compiled headers for icc16.\r\n\r\nHow do I disable usage of those for icc in cmake?\r\n\r\nEdit:\r\nI flipped in test files\r\n#include <json.hpp>\r\n#include <catch.hpp>\r\nand it compiles, issue clearly is pre-compiled headers.\r\nIs there a switch to disable it or editing those the only way to do it?\r\n\r\n\r\nOf note,\r\nI notice at least one test file uses #define private public\r\nso it may not be a good idea to use pre-compiled headers at all.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/749", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/749/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/749/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/749/events", "html_url": "https://github.com/nlohmann/json/pull/749", "id": 258966755, "node_id": "MDExOlB1bGxSZXF1ZXN0MTQxOTU4ODEx", "number": 749, "title": "Show last breath error with JSON_NOEXCEPTION", "user": {"login": "di9it", "id": 4493276, "node_id": "MDQ6VXNlcjQ0OTMyNzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/4493276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/di9it", "html_url": "https://github.com/di9it", "followers_url": "https://api.github.com/users/di9it/followers", "following_url": "https://api.github.com/users/di9it/following{/other_user}", "gists_url": "https://api.github.com/users/di9it/gists{/gist_id}", "starred_url": "https://api.github.com/users/di9it/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/di9it/subscriptions", "organizations_url": "https://api.github.com/users/di9it/orgs", "repos_url": "https://api.github.com/users/di9it/repos", "events_url": "https://api.github.com/users/di9it/events{/privacy}", "received_events_url": "https://api.github.com/users/di9it/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-19T21:15:28Z", "updated_at": "2017-10-04T17:33:56Z", "closed_at": "2017-10-04T17:33:34Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/749", "html_url": "https://github.com/nlohmann/json/pull/749", "diff_url": "https://github.com/nlohmann/json/pull/749.diff", "patch_url": "https://github.com/nlohmann/json/pull/749.patch"}, "body": "## Files to change\r\n\r\nThere are currently two files which need to be edited:\r\n\r\n1. [`src/json.hpp`](https://github.com/nlohmann/json/blob/master/src/json.hpp)\r\n\r\n2. [`test/src/unit.cpp`](https://github.com/nlohmann/json/blob/master/test/unit.cpp) - This contains the [Catch](https://github.com/philsquared/Catch) unit tests which currently cover [100 %](https://coveralls.io/github/nlohmann/json) of the library's code.\r\n\r\n   If you add or change a feature, please also add a unit test to this file. The unit tests can be compiled and executed with\r\n\r\n   ```sh\r\n   make check\r\n   ```\r\n\r\n   The test cases are also executed with several different compilers on [Travis](https://travis-ci.org/nlohmann/json) once you open a pull request.\r\n\r\n\r\n## Note\r\n\r\n- If you open a pull request, the code will be automatically tested with [Valgrind](http://valgrind.org)'s Memcheck tool to detect memory leaks. Please be aware that the execution with Valgrind _may_ in rare cases yield different behavior than running the code directly. This can result in failing unit tests which run successfully without Valgrind.\r\n\r\n## Please don't\r\n\r\n- The C++11 support varies between different **compilers** and versions. Please note the [list of supported compilers](https://github.com/nlohmann/json/blob/master/README.md#supported-compilers). Some compilers like GCC 4.8 (and earlier), Clang 3.3 (and earlier), or Microsoft Visual Studio 13.0 and earlier are known not to work due to missing or incomplete C++11 support. Please refrain from proposing changes that work around these compiler's limitations with `#ifdef`s or other means.\r\n- Specifically, I am aware of compilation problems with **Microsoft Visual Studio** (there even is an [issue label](https://github.com/nlohmann/json/issues?utf8=\u2713&q=label%3A%22visual+studio%22+) for these kind of bugs). I understand that even in 2016, complete C++11 support isn't there yet. But please also understand that I do not want to drop features or uglify the code just to make Microsoft's sub-standard compiler happy. The past has shown that there are ways to express the functionality such that the code compiles with the most recent MSVC - unfortunately, this is not the main objective of the project.\r\n- Please refrain from proposing changes that would **break [JSON](http://json.org) conformance**. If you propose a conformant extension of JSON to be supported by the library, please motivate this extension.\r\n- Please do not open pull requests that address **multiple issues**.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/748", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/748/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/748/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/748/events", "html_url": "https://github.com/nlohmann/json/issues/748", "id": 258769215, "node_id": "MDU6SXNzdWUyNTg3NjkyMTU=", "number": 748, "title": "getting clean string from it.key()", "user": {"login": "sqwunkly", "id": 31691223, "node_id": "MDQ6VXNlcjMxNjkxMjIz", "avatar_url": "https://avatars0.githubusercontent.com/u/31691223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sqwunkly", "html_url": "https://github.com/sqwunkly", "followers_url": "https://api.github.com/users/sqwunkly/followers", "following_url": "https://api.github.com/users/sqwunkly/following{/other_user}", "gists_url": "https://api.github.com/users/sqwunkly/gists{/gist_id}", "starred_url": "https://api.github.com/users/sqwunkly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sqwunkly/subscriptions", "organizations_url": "https://api.github.com/users/sqwunkly/orgs", "repos_url": "https://api.github.com/users/sqwunkly/repos", "events_url": "https://api.github.com/users/sqwunkly/events{/privacy}", "received_events_url": "https://api.github.com/users/sqwunkly/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2017-09-19T10:18:52Z", "updated_at": "2017-09-23T19:29:18Z", "closed_at": "2017-09-23T19:29:18Z", "author_association": "NONE", "body": "I need to a string or char * copy of the iterator key().. I've not been able to find a way of outputting it.key() in a correct format.. the best method I've found is key().dump().. however the result is a string with a backslash at the beginning and end of the string.. the code is below and the cursor is on the line where I'm using dump().. it's not producing a clean string.\r\n\r\n![image](https://user-images.githubusercontent.com/31691223/30587755-a18f8334-9d77-11e7-87c7-4c1abd1a2ca6.png)\r\n\r\n\r\nBelow is the it.key().dump() result in debugger.. as you can see it has backslash characters in front and end of the string.. how do I obtain a clean string? ..  my apologies if I'm overlooking a simply solution on my part. \r\n\r\n![image](https://user-images.githubusercontent.com/31691223/30587343-25a65ed8-9d76-11e7-9ca9-b3e6518a7470.png)\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/747", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/747/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/747/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/747/events", "html_url": "https://github.com/nlohmann/json/issues/747", "id": 258627243, "node_id": "MDU6SXNzdWUyNTg2MjcyNDM=", "number": 747, "title": "Best method for exploring and obtaining values of nested json objects when the names are not known beforehand?", "user": {"login": "sqwunkly", "id": 31691223, "node_id": "MDQ6VXNlcjMxNjkxMjIz", "avatar_url": "https://avatars0.githubusercontent.com/u/31691223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sqwunkly", "html_url": "https://github.com/sqwunkly", "followers_url": "https://api.github.com/users/sqwunkly/followers", "following_url": "https://api.github.com/users/sqwunkly/following{/other_user}", "gists_url": "https://api.github.com/users/sqwunkly/gists{/gist_id}", "starred_url": "https://api.github.com/users/sqwunkly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sqwunkly/subscriptions", "organizations_url": "https://api.github.com/users/sqwunkly/orgs", "repos_url": "https://api.github.com/users/sqwunkly/repos", "events_url": "https://api.github.com/users/sqwunkly/events{/privacy}", "received_events_url": "https://api.github.com/users/sqwunkly/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-09-18T21:29:12Z", "updated_at": "2017-09-23T19:29:29Z", "closed_at": "2017-09-23T19:29:29Z", "author_association": "NONE", "body": "Hi Niels, \r\n\r\nCould you please advise me the best way to explore down into a list of JSON objects, without knowing the names of the nested objects beforehand. \r\n\r\nI'm using the notation below (1 & 2) for setting and getting values and this works well, however I've not been able to find a way of quickly getting the names and values of objects when I don't know the names of those objects beforehand. I've used the iterator method (3) however it doesn't seem suited for quickly diving and exploring into nested objects.\r\n\r\nWhat is the most direct way of exploring and getting values of nested objects when the names of those objects are not known beforehand? \r\n\r\n(1)\r\n![image](https://user-images.githubusercontent.com/31691223/30565084-6189c78a-9d0a-11e7-97b5-fc33129c099d.png)\r\n\r\n(2)\r\n![image](https://user-images.githubusercontent.com/31691223/30565140-88fd778a-9d0a-11e7-8293-cf4f6fc60ac4.png)\r\n\r\n(3)\r\n![image](https://user-images.githubusercontent.com/31691223/30565301-10c1d74c-9d0b-11e7-8287-96e6c503b914.png)\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/746", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/746/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/746/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/746/events", "html_url": "https://github.com/nlohmann/json/issues/746", "id": 258537892, "node_id": "MDU6SXNzdWUyNTg1Mzc4OTI=", "number": 746, "title": "null char at the end of string", "user": {"login": "Adam5Wu", "id": 2480998, "node_id": "MDQ6VXNlcjI0ODA5OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2480998?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Adam5Wu", "html_url": "https://github.com/Adam5Wu", "followers_url": "https://api.github.com/users/Adam5Wu/followers", "following_url": "https://api.github.com/users/Adam5Wu/following{/other_user}", "gists_url": "https://api.github.com/users/Adam5Wu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Adam5Wu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Adam5Wu/subscriptions", "organizations_url": "https://api.github.com/users/Adam5Wu/orgs", "repos_url": "https://api.github.com/users/Adam5Wu/repos", "events_url": "https://api.github.com/users/Adam5Wu/events{/privacy}", "received_events_url": "https://api.github.com/users/Adam5Wu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-18T16:15:03Z", "updated_at": "2017-09-18T17:31:32Z", "closed_at": "2017-09-18T16:24:05Z", "author_association": "NONE", "body": "When getting a string field from json, the result string contains a null char at the end of the string (this is in addition to the usual null terminator).\r\nAs a result, if you try to append two string field obtained from json, you will get: \"string1\\0string2\\0\"\r\n\r\nThis breaks many UI functions as they generally stop at the first \\0."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/745", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/745/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/745/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/745/events", "html_url": "https://github.com/nlohmann/json/issues/745", "id": 258317959, "node_id": "MDU6SXNzdWUyNTgzMTc5NTk=", "number": 745, "title": "Incorrect sample for operator >> in docs", "user": {"login": "leha-bot", "id": 10153298, "node_id": "MDQ6VXNlcjEwMTUzMjk4", "avatar_url": "https://avatars1.githubusercontent.com/u/10153298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leha-bot", "html_url": "https://github.com/leha-bot", "followers_url": "https://api.github.com/users/leha-bot/followers", "following_url": "https://api.github.com/users/leha-bot/following{/other_user}", "gists_url": "https://api.github.com/users/leha-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/leha-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leha-bot/subscriptions", "organizations_url": "https://api.github.com/users/leha-bot/orgs", "repos_url": "https://api.github.com/users/leha-bot/repos", "events_url": "https://api.github.com/users/leha-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/leha-bot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 1, "created_at": "2017-09-17T17:14:12Z", "updated_at": "2017-09-30T08:19:32Z", "closed_at": "2017-09-30T08:19:32Z", "author_association": "NONE", "body": "If you visit the [operator >> (istream &, basic_json &) reference](https://nlohmann.github.io/json/classnlohmann_1_1basic__json_aaf363408931d76472ded14017e59c9e8.html#aaf363408931d76472ded14017e59c9e8) you will notice that a sample is for operator <<(basic_json&, ostream&)"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/744", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/744/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/744/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/744/events", "html_url": "https://github.com/nlohmann/json/issues/744", "id": 257788250, "node_id": "MDU6SXNzdWUyNTc3ODgyNTA=", "number": 744, "title": "User-friendly documentation", "user": {"login": "itviewer", "id": 1397840, "node_id": "MDQ6VXNlcjEzOTc4NDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1397840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/itviewer", "html_url": "https://github.com/itviewer", "followers_url": "https://api.github.com/users/itviewer/followers", "following_url": "https://api.github.com/users/itviewer/following{/other_user}", "gists_url": "https://api.github.com/users/itviewer/gists{/gist_id}", "starred_url": "https://api.github.com/users/itviewer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/itviewer/subscriptions", "organizations_url": "https://api.github.com/users/itviewer/orgs", "repos_url": "https://api.github.com/users/itviewer/repos", "events_url": "https://api.github.com/users/itviewer/events{/privacy}", "received_events_url": "https://api.github.com/users/itviewer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-14T16:54:20Z", "updated_at": "2017-11-01T10:16:05Z", "closed_at": "2017-11-01T10:16:05Z", "author_association": "NONE", "body": "As the project becomes more and more popular, well-organized documents are necessary. Up to now, the project uses the README file to describe how to use the library, with the some disadvantages:\r\n\r\n- with the description more and more, README file becomes very long\r\n- the user needs a clearer structure to describe how to use the library\r\n- inconvenient documentation contribution and collaboration\r\n\r\nSo I suggested to separate the document and the code library to provide a more friendly document experience.  I created two styles of demo  based on [mkdocs](http://www.mkdocs.org):\r\n\r\n1. https://itviewer.github.io/manual-material/\r\n2. https://itviewer.github.io/manual/\r\n\r\nrepository corresponding respectively\r\n\r\n1. https://github.com/itviewer/manual-material\r\n2. https://github.com/itviewer/manual/\r\n\r\nI just copyed the content from the README file and did not modify anything. both the above two  demo looks ok. The markdown syntax for github is good, almost no error format.\r\n\r\nThe [mkdocs](http://www.mkdocs.org) tool  is a python package, also easy to use, powerful and flexible."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/743", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/743/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/743/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/743/events", "html_url": "https://github.com/nlohmann/json/issues/743", "id": 257684849, "node_id": "MDU6SXNzdWUyNTc2ODQ4NDk=", "number": 743, "title": "Retrieve all values that match a json path", "user": {"login": "stdlef", "id": 27848649, "node_id": "MDQ6VXNlcjI3ODQ4NjQ5", "avatar_url": "https://avatars0.githubusercontent.com/u/27848649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stdlef", "html_url": "https://github.com/stdlef", "followers_url": "https://api.github.com/users/stdlef/followers", "following_url": "https://api.github.com/users/stdlef/following{/other_user}", "gists_url": "https://api.github.com/users/stdlef/gists{/gist_id}", "starred_url": "https://api.github.com/users/stdlef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stdlef/subscriptions", "organizations_url": "https://api.github.com/users/stdlef/orgs", "repos_url": "https://api.github.com/users/stdlef/repos", "events_url": "https://api.github.com/users/stdlef/events{/privacy}", "received_events_url": "https://api.github.com/users/stdlef/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-09-14T11:25:13Z", "updated_at": "2017-09-14T14:48:43Z", "closed_at": "2017-09-14T14:39:38Z", "author_association": "NONE", "body": "Assuming that my json file is the following, I would like to collect all values that match with a regular expression using json_pointer.  How can I get all values (integers) in the path /array/a/*? \r\n\r\nI have used flatten() so far, that gives the \"keys\". But I don't know if I can query the json object to return an array of values that \"match\" a json path. \r\n```\r\n{\r\n \"array\": [\r\n    {\r\n      \"a\": 1,\r\n      \"b\": [10,11,12]\r\n    },\r\n    {\r\n      \"a\": 2,\r\n      \"b\": [20,21,22]\r\n    },\r\n    {\r\n      \"a\": 3,\r\n      \"b\": [30,31,32]\r\n    }\r\n  ],\r\n  \"cost\": 1\r\n}\r\n```\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/742", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/742/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/742/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/742/events", "html_url": "https://github.com/nlohmann/json/issues/742", "id": 257648591, "node_id": "MDU6SXNzdWUyNTc2NDg1OTE=", "number": 742, "title": "Compilation issue with gcc 7.2", "user": {"login": "cdehnert", "id": 22997075, "node_id": "MDQ6VXNlcjIyOTk3MDc1", "avatar_url": "https://avatars2.githubusercontent.com/u/22997075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdehnert", "html_url": "https://github.com/cdehnert", "followers_url": "https://api.github.com/users/cdehnert/followers", "following_url": "https://api.github.com/users/cdehnert/following{/other_user}", "gists_url": "https://api.github.com/users/cdehnert/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdehnert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdehnert/subscriptions", "organizations_url": "https://api.github.com/users/cdehnert/orgs", "repos_url": "https://api.github.com/users/cdehnert/repos", "events_url": "https://api.github.com/users/cdehnert/events{/privacy}", "received_events_url": "https://api.github.com/users/cdehnert/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-14T09:13:28Z", "updated_at": "2017-09-14T11:40:11Z", "closed_at": "2017-09-14T11:14:00Z", "author_association": "NONE", "body": "When compiling with the newly released gcc 7.2, I get the following compilation error:\r\n\r\n```\r\n/tmp/makepkg/stormchecker-git/src/stormchecker-git/resources/3rdparty/modernjson/src/json.hpp: In function \u2018bool nlohmann::operator<(nlohmann::basic_json<ObjectType, ArrayType, StringType, Boole\r\nanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType>::const_reference, nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUns\r\nignedType, NumberFloatType, AllocatorType>::const_reference)\u2019:\r\n/tmp/makepkg/stormchecker-git/src/stormchecker-git/resources/3rdparty/modernjson/src/json.hpp:5653:66: error: wrong number of template arguments (1, should be 2)\r\n                        return *lhs.m_value.array < *rhs.m_value.array;\r\n                                                                 ^~~~~\r\nIn file included from /usr/include/c++/7.2.0/tuple:39:0,\r\n                from /usr/include/c++/7.2.0/bits/unique_ptr.h:37,\r\n                from /usr/include/c++/7.2.0/memory:80,\r\n                from /tmp/makepkg/stormchecker-git/src/stormchecker-git/src/storm-pars/api/region.h:6,\r\n                from /tmp/makepkg/stormchecker-git/src/stormchecker-git/src/storm-pars/api/storm-pars.h:3,\r\n                from /tmp/makepkg/stormchecker-git/src/stormchecker-git/src/storm-pars-cli/storm-pars.cpp:2:\r\n/usr/include/c++/7.2.0/array:94:12: note: provided for \u2018template<class _Tp, long unsigned int _Nm> struct std::array\u2019\r\n    struct array\r\n           ^~~~~\r\nmake[3]: *** [src/storm-pars-cli/CMakeFiles/storm-pars-cli.dir/build.make:63: src/storm-pars-cli/CMakeFiles/storm-pars-cli.dir/storm-pars.cpp.o] Error 1\r\nmake[2]: *** [CMakeFiles/Makefile2:2143: src/storm-pars-cli/CMakeFiles/storm-pars-cli.dir/all] Error 2\r\nmake[1]: *** [CMakeFiles/Makefile2:1408: src/CMakeFiles/binaries.dir/rule] Error 2\r\nmake: *** [Makefile:704: binaries] Error 2\r\n```\r\n\r\nFor gcc < 7.1.0 everything went smoothly until now. To be honest, I cannot really wrap my head around the compilation error, as a) m_value.array appears to be of type std::vector<>* and not std::array<>* and b) no template arguments are given in the line that is being pointed to."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/741", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/741/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/741/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/741/events", "html_url": "https://github.com/nlohmann/json/issues/741", "id": 257412278, "node_id": "MDU6SXNzdWUyNTc0MTIyNzg=", "number": 741, "title": "CMake target nlohmann_json does not have src into its interface includes", "user": {"login": "sogartar", "id": 3050579, "node_id": "MDQ6VXNlcjMwNTA1Nzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3050579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sogartar", "html_url": "https://github.com/sogartar", "followers_url": "https://api.github.com/users/sogartar/followers", "following_url": "https://api.github.com/users/sogartar/following{/other_user}", "gists_url": "https://api.github.com/users/sogartar/gists{/gist_id}", "starred_url": "https://api.github.com/users/sogartar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sogartar/subscriptions", "organizations_url": "https://api.github.com/users/sogartar/orgs", "repos_url": "https://api.github.com/users/sogartar/repos", "events_url": "https://api.github.com/users/sogartar/events{/privacy}", "received_events_url": "https://api.github.com/users/sogartar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 14, "created_at": "2017-09-13T14:55:13Z", "updated_at": "2018-07-02T20:45:02Z", "closed_at": "2017-12-06T19:47:39Z", "author_association": "NONE", "body": "If you do in CMake:\r\n```\r\nadd_subdirectory(nlohmann/json)\r\ntarget_link_libraries(my_target PRIVATE nlohmann_json)\r\n```\r\nThen `my_target` does not have nlohmann/json/src into its includes, where json.hpp is. You can not properly include this project into other CMake projects.\r\nNote that in v2.1.1 it used to be OK.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/740", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/740/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/740/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/740/events", "html_url": "https://github.com/nlohmann/json/issues/740", "id": 257399768, "node_id": "MDU6SXNzdWUyNTczOTk3Njg=", "number": 740, "title": "Error when serializing empty json: type must be string, but is object", "user": {"login": "sogartar", "id": 3050579, "node_id": "MDQ6VXNlcjMwNTA1Nzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3050579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sogartar", "html_url": "https://github.com/sogartar", "followers_url": "https://api.github.com/users/sogartar/followers", "following_url": "https://api.github.com/users/sogartar/following{/other_user}", "gists_url": "https://api.github.com/users/sogartar/gists{/gist_id}", "starred_url": "https://api.github.com/users/sogartar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sogartar/subscriptions", "organizations_url": "https://api.github.com/users/sogartar/orgs", "repos_url": "https://api.github.com/users/sogartar/repos", "events_url": "https://api.github.com/users/sogartar/events{/privacy}", "received_events_url": "https://api.github.com/users/sogartar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-09-13T14:23:04Z", "updated_at": "2017-09-23T12:58:18Z", "closed_at": "2017-09-23T12:58:18Z", "author_association": "NONE", "body": "```cpp\r\nauto j = json::parse(\"{}\");\r\nstd::string jstr1 = j.dump(); // OK\r\nstd::string jstr2 = j; // Exception\r\n```\r\nThe last line raises:\r\nterminate called after throwing an instance of 'nlohmann::detail::type_error'\r\n  what():  [json.exception.type_error.302] type must be string, but is object\r\n\r\nOn the other hand `dump()` works fine.\r\n\r\nThis appears on commit [e2e0ecd867413b0489a339d32509ef649ff1af5a](https://github.com/nlohmann/json/commit/e2e0ecd867413b0489a339d32509ef649ff1af5a)\r\nAlso on v2.1.1."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/739", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/739/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/739/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/739/events", "html_url": "https://github.com/nlohmann/json/issues/739", "id": 257324249, "node_id": "MDU6SXNzdWUyNTczMjQyNDk=", "number": 739, "title": "Conversion error for std::map<int, std::string> ", "user": {"login": "MariaRamos89", "id": 20771412, "node_id": "MDQ6VXNlcjIwNzcxNDEy", "avatar_url": "https://avatars3.githubusercontent.com/u/20771412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MariaRamos89", "html_url": "https://github.com/MariaRamos89", "followers_url": "https://api.github.com/users/MariaRamos89/followers", "following_url": "https://api.github.com/users/MariaRamos89/following{/other_user}", "gists_url": "https://api.github.com/users/MariaRamos89/gists{/gist_id}", "starred_url": "https://api.github.com/users/MariaRamos89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MariaRamos89/subscriptions", "organizations_url": "https://api.github.com/users/MariaRamos89/orgs", "repos_url": "https://api.github.com/users/MariaRamos89/repos", "events_url": "https://api.github.com/users/MariaRamos89/events{/privacy}", "received_events_url": "https://api.github.com/users/MariaRamos89/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-13T10:00:52Z", "updated_at": "2017-09-13T13:31:42Z", "closed_at": "2017-09-13T13:31:42Z", "author_association": "NONE", "body": "Hi,\r\n\r\nI'm trying to save a std::map<int, std::string> into a json, and then the json is saved in a file.\r\n```cpp\r\nnlohmann::json db;\r\ndb = mymap;\r\nstd::ofstream output_file(filename);\r\noutput_file << std::setw(4) << db << std::endl;\r\n```\r\n\r\nThe problem is the result of the json:\r\n\r\nI'm expecting this kind of output: \r\n`{ 1 : \"one\", 2 : \"two\"}` \r\nHowever, the result is:\r\n`[ [1, \"one\"], [2, \"two\"]]`\r\n\r\nSo, when in other program I'm trying to read that file and try to save it in a json for doing the conversion to std::map again, I'm having the next error:\r\n```\r\nerror: ambiguous overload for \u2018operator=\u2019 (operand types are \u2018std::map<int, std::__cxx11::basic_string<char> >\u2019 and \u2018nlohmann::json {aka nlohmann::basic_json<>}\u2019)\r\n```\r\n\r\nI've been looking in similar errors like #607, but I don't find a solution.\r\nI've tried to build the map manually but the output is the same. Maybe I'm missing something. \r\n\r\nThanks in advance"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/738", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/738/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/738/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/738/events", "html_url": "https://github.com/nlohmann/json/issues/738", "id": 256894384, "node_id": "MDU6SXNzdWUyNTY4OTQzODQ=", "number": 738, "title": "Dumping Json to file as array", "user": {"login": "ankitsultania", "id": 15243044, "node_id": "MDQ6VXNlcjE1MjQzMDQ0", "avatar_url": "https://avatars1.githubusercontent.com/u/15243044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ankitsultania", "html_url": "https://github.com/ankitsultania", "followers_url": "https://api.github.com/users/ankitsultania/followers", "following_url": "https://api.github.com/users/ankitsultania/following{/other_user}", "gists_url": "https://api.github.com/users/ankitsultania/gists{/gist_id}", "starred_url": "https://api.github.com/users/ankitsultania/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ankitsultania/subscriptions", "organizations_url": "https://api.github.com/users/ankitsultania/orgs", "repos_url": "https://api.github.com/users/ankitsultania/repos", "events_url": "https://api.github.com/users/ankitsultania/events{/privacy}", "received_events_url": "https://api.github.com/users/ankitsultania/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-12T02:05:32Z", "updated_at": "2017-09-12T16:40:44Z", "closed_at": "2017-09-12T16:40:44Z", "author_association": "NONE", "body": "Hi,\r\n\r\nIs there a way to append a file with json objects as array one by one?\r\n\r\nAny pointers are highly appreciated. I am stuck at doing this in a clean way."}]