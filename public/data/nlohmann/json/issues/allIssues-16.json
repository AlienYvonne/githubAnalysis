[{"url": "https://api.github.com/repos/nlohmann/json/issues/737", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/737/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/737/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/737/events", "html_url": "https://github.com/nlohmann/json/issues/737", "id": 256587870, "node_id": "MDU6SXNzdWUyNTY1ODc4NzA=", "number": 737, "title": "nesting json objects", "user": {"login": "sqwunkly", "id": 31691223, "node_id": "MDQ6VXNlcjMxNjkxMjIz", "avatar_url": "https://avatars0.githubusercontent.com/u/31691223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sqwunkly", "html_url": "https://github.com/sqwunkly", "followers_url": "https://api.github.com/users/sqwunkly/followers", "following_url": "https://api.github.com/users/sqwunkly/following{/other_user}", "gists_url": "https://api.github.com/users/sqwunkly/gists{/gist_id}", "starred_url": "https://api.github.com/users/sqwunkly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sqwunkly/subscriptions", "organizations_url": "https://api.github.com/users/sqwunkly/orgs", "repos_url": "https://api.github.com/users/sqwunkly/repos", "events_url": "https://api.github.com/users/sqwunkly/events{/privacy}", "received_events_url": "https://api.github.com/users/sqwunkly/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-09-11T05:46:17Z", "updated_at": "2017-09-12T16:28:33Z", "closed_at": "2017-09-12T16:28:33Z", "author_association": "NONE", "body": "RE: Nesting json objects\r\n\r\nIs there a way to directly nest json objects in similar manner?\r\n\r\njson outerObj = { \"misting\" , { \"isMisting\" , true } };\r\njson nestedObj = { \"duration\" , { \"hours\" , 2}, { \"mins\" , 30 }, {\"secs\" , 20 } };\r\njson result = outerObj[ nestedObj ];   // does not work \r\n\r\nTo obtain this:-\r\n![image](https://user-images.githubusercontent.com/31691223/30259826-dc08c736-9706-11e7-9040-b998d8e8207b.png)\r\n\r\nWhat is most direct way to achieve this?\r\n\r\nThanks.\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/736", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/736/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/736/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/736/events", "html_url": "https://github.com/nlohmann/json/issues/736", "id": 256575498, "node_id": "MDU6SXNzdWUyNTY1NzU0OTg=", "number": 736, "title": "where to find general help?", "user": {"login": "sqwunkly", "id": 31691223, "node_id": "MDQ6VXNlcjMxNjkxMjIz", "avatar_url": "https://avatars0.githubusercontent.com/u/31691223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sqwunkly", "html_url": "https://github.com/sqwunkly", "followers_url": "https://api.github.com/users/sqwunkly/followers", "following_url": "https://api.github.com/users/sqwunkly/following{/other_user}", "gists_url": "https://api.github.com/users/sqwunkly/gists{/gist_id}", "starred_url": "https://api.github.com/users/sqwunkly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sqwunkly/subscriptions", "organizations_url": "https://api.github.com/users/sqwunkly/orgs", "repos_url": "https://api.github.com/users/sqwunkly/repos", "events_url": "https://api.github.com/users/sqwunkly/events{/privacy}", "received_events_url": "https://api.github.com/users/sqwunkly/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-11T03:57:41Z", "updated_at": "2017-09-12T06:16:48Z", "closed_at": "2017-09-12T06:16:48Z", "author_association": "NONE", "body": "Where is best place to ask general help questions, such as how to do something using this library? IE Questions not related to an 'issue'? Thanks.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/735", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/735/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/735/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/735/events", "html_url": "https://github.com/nlohmann/json/issues/735", "id": 256476397, "node_id": "MDU6SXNzdWUyNTY0NzYzOTc=", "number": 735, "title": "Compilation Error on Clang 5.0 Upgrade", "user": {"login": "ErikPartridge", "id": 7953455, "node_id": "MDQ6VXNlcjc5NTM0NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/7953455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ErikPartridge", "html_url": "https://github.com/ErikPartridge", "followers_url": "https://api.github.com/users/ErikPartridge/followers", "following_url": "https://api.github.com/users/ErikPartridge/following{/other_user}", "gists_url": "https://api.github.com/users/ErikPartridge/gists{/gist_id}", "starred_url": "https://api.github.com/users/ErikPartridge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ErikPartridge/subscriptions", "organizations_url": "https://api.github.com/users/ErikPartridge/orgs", "repos_url": "https://api.github.com/users/ErikPartridge/repos", "events_url": "https://api.github.com/users/ErikPartridge/events{/privacy}", "received_events_url": "https://api.github.com/users/ErikPartridge/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 25, "created_at": "2017-09-10T00:51:38Z", "updated_at": "2017-10-28T10:34:08Z", "closed_at": "2017-10-28T10:34:08Z", "author_association": "NONE", "body": "Upgrading to Clang++-5.0 on Travis-CI Trusty is producing the following error:\r\n\r\n```\r\n\r\njson/src/json.hpp:9869:66: error:  no type named 'string_view' in namespace 'std'\r\n  ...and not std::is_same<ValueType, typename std::string_view>::value\r\n```\r\n\r\nAlso tested on Ubuntu 16.04 Clang++-5.0 standalone without the rest of the project and still failing with the same error. g++ working fine on both systems.\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/734", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/734/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/734/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/734/events", "html_url": "https://github.com/nlohmann/json/issues/734", "id": 256431693, "node_id": "MDU6SXNzdWUyNTY0MzE2OTM=", "number": 734, "title": "Compilation error with std::map<std::string, std::string> on vs 2015", "user": {"login": "leozzyzheng", "id": 6134295, "node_id": "MDQ6VXNlcjYxMzQyOTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/6134295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leozzyzheng", "html_url": "https://github.com/leozzyzheng", "followers_url": "https://api.github.com/users/leozzyzheng/followers", "following_url": "https://api.github.com/users/leozzyzheng/following{/other_user}", "gists_url": "https://api.github.com/users/leozzyzheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/leozzyzheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leozzyzheng/subscriptions", "organizations_url": "https://api.github.com/users/leozzyzheng/orgs", "repos_url": "https://api.github.com/users/leozzyzheng/repos", "events_url": "https://api.github.com/users/leozzyzheng/events{/privacy}", "received_events_url": "https://api.github.com/users/leozzyzheng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2017-09-09T10:57:54Z", "updated_at": "2017-11-13T15:29:26Z", "closed_at": "2017-10-23T10:04:30Z", "author_association": "NONE", "body": "```C++\r\nusing json = nlohmann::json;\r\njson j;\r\nstd::map<std::string, std::string> m;\r\nm = j.get<decltype(m)>();\r\n```\r\nit says `error C2665: 'std::pair<const _Kty,_Ty>::pair': none of the 2 overloads could convert all the argument types`\r\n\r\nif I change to \r\n```\r\nm = j;\r\n```\r\nit says `'operator =' is ambiguous`\r\n\r\nDid I miss anything about converting map data to/from json ?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/733", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/733/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/733/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/733/events", "html_url": "https://github.com/nlohmann/json/issues/733", "id": 256350874, "node_id": "MDU6SXNzdWUyNTYzNTA4NzQ=", "number": 733, "title": "Benchmarks for Binary formats", "user": {"login": "D1amond", "id": 3710553, "node_id": "MDQ6VXNlcjM3MTA1NTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/3710553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/D1amond", "html_url": "https://github.com/D1amond", "followers_url": "https://api.github.com/users/D1amond/followers", "following_url": "https://api.github.com/users/D1amond/following{/other_user}", "gists_url": "https://api.github.com/users/D1amond/gists{/gist_id}", "starred_url": "https://api.github.com/users/D1amond/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/D1amond/subscriptions", "organizations_url": "https://api.github.com/users/D1amond/orgs", "repos_url": "https://api.github.com/users/D1amond/repos", "events_url": "https://api.github.com/users/D1amond/events{/privacy}", "received_events_url": "https://api.github.com/users/D1amond/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 571470316, "node_id": "MDU6TGFiZWw1NzE0NzAzMTY=", "url": "https://api.github.com/repos/nlohmann/json/labels/aspect:%20binary%20formats", "name": "aspect: binary formats", "color": "5319e7", "default": false}, {"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-08T19:35:20Z", "updated_at": "2017-12-03T09:59:08Z", "closed_at": "2017-12-03T09:59:08Z", "author_association": "NONE", "body": "It would be nice to have an idea of the parsing time difference between a JSON file and a binary serialized version of the same file.\r\n\r\nThis could be included in the library's benchmarks."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/732", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/732/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/732/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/732/events", "html_url": "https://github.com/nlohmann/json/issues/732", "id": 256233743, "node_id": "MDU6SXNzdWUyNTYyMzM3NDM=", "number": 732, "title": "Move test blobs to a submodule?", "user": {"login": "njlr", "id": 1577531, "node_id": "MDQ6VXNlcjE1Nzc1MzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1577531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/njlr", "html_url": "https://github.com/njlr", "followers_url": "https://api.github.com/users/njlr/followers", "following_url": "https://api.github.com/users/njlr/following{/other_user}", "gists_url": "https://api.github.com/users/njlr/gists{/gist_id}", "starred_url": "https://api.github.com/users/njlr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/njlr/subscriptions", "organizations_url": "https://api.github.com/users/njlr/orgs", "repos_url": "https://api.github.com/users/njlr/repos", "events_url": "https://api.github.com/users/njlr/events{/privacy}", "received_events_url": "https://api.github.com/users/njlr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-08T12:07:48Z", "updated_at": "2017-09-08T12:14:18Z", "closed_at": "2017-09-08T12:14:10Z", "author_association": "NONE", "body": "I am using the [Buckaroo](https://github.com/LoopPerfect/buckaroo) package for `nlohmann/json` and find it takes quite a long time to download. Looking at the repo, the test blobs seem to be the cause. Of course, these are not required when using the library. \r\n\r\nPerhaps the tests should be moved to a Git submodule, so that they can be fetched optionally? "}, {"url": "https://api.github.com/repos/nlohmann/json/issues/731", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/731/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/731/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/731/events", "html_url": "https://github.com/nlohmann/json/issues/731", "id": 256208484, "node_id": "MDU6SXNzdWUyNTYyMDg0ODQ=", "number": 731, "title": "Support \\n symbols in json string.", "user": {"login": "parfenuk", "id": 4920456, "node_id": "MDQ6VXNlcjQ5MjA0NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/4920456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/parfenuk", "html_url": "https://github.com/parfenuk", "followers_url": "https://api.github.com/users/parfenuk/followers", "following_url": "https://api.github.com/users/parfenuk/following{/other_user}", "gists_url": "https://api.github.com/users/parfenuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/parfenuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/parfenuk/subscriptions", "organizations_url": "https://api.github.com/users/parfenuk/orgs", "repos_url": "https://api.github.com/users/parfenuk/repos", "events_url": "https://api.github.com/users/parfenuk/events{/privacy}", "received_events_url": "https://api.github.com/users/parfenuk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-08T10:21:12Z", "updated_at": "2017-09-08T13:52:11Z", "closed_at": "2017-09-08T13:52:11Z", "author_association": "NONE", "body": "Hi. First of all, thanks for the great job you performed all this time. Your tool turned out to be very helpful for me.\r\n\r\nMy question is: is there any endline symbols support planning in the near future or it violates standard json formatting rules?\r\nFor example, this code will crash the framework (C++):\r\n\r\n```cpp\r\nstring valueJSON = \"{\\\"test\\n\\\":[1,2,3]}\";\r\njson j = json::parse(valueJSON);\r\n```\r\n\r\nwith an error: **std::invalid_argument: parse error - unexpected '\"'; expected string literal**\r\n\r\nand without \\n the parser works ok.\r\n\r\nThanks.\r\nMiroslav"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/730", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/730/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/730/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/730/events", "html_url": "https://github.com/nlohmann/json/issues/730", "id": 255876059, "node_id": "MDU6SXNzdWUyNTU4NzYwNTk=", "number": 730, "title": "Project's name is too generic and hard to search for", "user": {"login": "guidow", "id": 6033185, "node_id": "MDQ6VXNlcjYwMzMxODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/6033185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guidow", "html_url": "https://github.com/guidow", "followers_url": "https://api.github.com/users/guidow/followers", "following_url": "https://api.github.com/users/guidow/following{/other_user}", "gists_url": "https://api.github.com/users/guidow/gists{/gist_id}", "starred_url": "https://api.github.com/users/guidow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guidow/subscriptions", "organizations_url": "https://api.github.com/users/guidow/orgs", "repos_url": "https://api.github.com/users/guidow/repos", "events_url": "https://api.github.com/users/guidow/events{/privacy}", "received_events_url": "https://api.github.com/users/guidow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-09-07T09:38:28Z", "updated_at": "2017-10-02T15:15:31Z", "closed_at": "2017-10-02T15:14:40Z", "author_association": "NONE", "body": "The project's name is very generic, which makes it hard to search for in, for example, internet search engines or the package repositories of various operating systems. My first impulse upon finding this library was to see if it was already present in my distribution's package repository, but how should I even go about that? Searching for just \"json\" is not going to be helpful. (Turns out googling for \"nlohmann json\" works better, but still...)\r\n\r\nThe name is also bound to lead to some confusion, as it is already the name for the format/meta-format itself.\r\n\r\nThis also makes it awkward to specify a dependency on this library in a way that will likely work across distributions.\r\n\r\nThe full name of the project, \"JSON for Modern C++\", on the other hand, is too unwieldy, consists of several words and does not actually seem to be used much."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/729", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/729/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/729/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/729/events", "html_url": "https://github.com/nlohmann/json/issues/729", "id": 255873926, "node_id": "MDU6SXNzdWUyNTU4NzM5MjY=", "number": 729, "title": "Visual Studio 2015 IntelliTrace problems", "user": {"login": "leozzyzheng", "id": 6134295, "node_id": "MDQ6VXNlcjYxMzQyOTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/6134295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leozzyzheng", "html_url": "https://github.com/leozzyzheng", "followers_url": "https://api.github.com/users/leozzyzheng/followers", "following_url": "https://api.github.com/users/leozzyzheng/following{/other_user}", "gists_url": "https://api.github.com/users/leozzyzheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/leozzyzheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leozzyzheng/subscriptions", "organizations_url": "https://api.github.com/users/leozzyzheng/orgs", "repos_url": "https://api.github.com/users/leozzyzheng/repos", "events_url": "https://api.github.com/users/leozzyzheng/events{/privacy}", "received_events_url": "https://api.github.com/users/leozzyzheng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-09-07T09:31:32Z", "updated_at": "2017-10-03T08:42:10Z", "closed_at": "2017-10-03T08:42:05Z", "author_association": "NONE", "body": "```C++\r\nusing json = nlohmann::json;\r\njson j;\r\nstd::string json_string;\r\nj = json::parse(json_string);\r\n```\r\n\r\nVisual Studio 2015 will show red line under `json::parse`:\r\n![image](https://user-images.githubusercontent.com/6134295/30156356-00718166-93f2-11e7-92b8-539d34597739.png)\r\nit shows following error message:\r\n![image](https://user-images.githubusercontent.com/6134295/30156392-1940b824-93f2-11e7-923c-599dd585d6aa.png)\r\n\r\nI can successfully compile it but it is a little bit annoying. Could it be avoided?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/728", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/728/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/728/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/728/events", "html_url": "https://github.com/nlohmann/json/issues/728", "id": 255557777, "node_id": "MDU6SXNzdWUyNTU1NTc3Nzc=", "number": 728, "title": "How to erase nested objects inside other objects?", "user": {"login": "sqwunkly", "id": 31691223, "node_id": "MDQ6VXNlcjMxNjkxMjIz", "avatar_url": "https://avatars0.githubusercontent.com/u/31691223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sqwunkly", "html_url": "https://github.com/sqwunkly", "followers_url": "https://api.github.com/users/sqwunkly/followers", "following_url": "https://api.github.com/users/sqwunkly/following{/other_user}", "gists_url": "https://api.github.com/users/sqwunkly/gists{/gist_id}", "starred_url": "https://api.github.com/users/sqwunkly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sqwunkly/subscriptions", "organizations_url": "https://api.github.com/users/sqwunkly/orgs", "repos_url": "https://api.github.com/users/sqwunkly/repos", "events_url": "https://api.github.com/users/sqwunkly/events{/privacy}", "received_events_url": "https://api.github.com/users/sqwunkly/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-06T10:37:14Z", "updated_at": "2017-09-06T13:31:47Z", "closed_at": "2017-09-06T13:31:47Z", "author_association": "NONE", "body": "Hello Niels,\r\n\r\nIs it possible to erase/delete nested objects using a similar technique as you've created for adding nested objects inside other objects?\r\n\r\n**\u200b\u200bj[\"answer\"][\"everything\"] = 42;**\r\n\r\n![image](https://user-images.githubusercontent.com/31691223/30106370-8ca9c954-933e-11e7-9d12-af43f4b69937.png)\r\n\r\nIs there an equivalent way to do **j.erase(\u200b[\"answer\"][\"everything\"];** (ie, doesn't work) ?\r\n\r\nThis  **\u200bj\u200b\u200b[\"answer\"][\"everything\"] = 42;**  is neat for adding nested objects inside other objects but so far I'm unable to find a corresponding function in your library to delete/erase nested objects. Is there a way to do this?\r\n\r\nMy apologies if I've missed something obvious. Hoping you can help me with these two questions. Much thanks. Greg\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/727", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/727/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/727/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/727/events", "html_url": "https://github.com/nlohmann/json/issues/727", "id": 255556381, "node_id": "MDU6SXNzdWUyNTU1NTYzODE=", "number": 727, "title": "How to prevent alphabetical sorting of data?", "user": {"login": "sqwunkly", "id": 31691223, "node_id": "MDQ6VXNlcjMxNjkxMjIz", "avatar_url": "https://avatars0.githubusercontent.com/u/31691223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sqwunkly", "html_url": "https://github.com/sqwunkly", "followers_url": "https://api.github.com/users/sqwunkly/followers", "following_url": "https://api.github.com/users/sqwunkly/following{/other_user}", "gists_url": "https://api.github.com/users/sqwunkly/gists{/gist_id}", "starred_url": "https://api.github.com/users/sqwunkly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sqwunkly/subscriptions", "organizations_url": "https://api.github.com/users/sqwunkly/orgs", "repos_url": "https://api.github.com/users/sqwunkly/repos", "events_url": "https://api.github.com/users/sqwunkly/events{/privacy}", "received_events_url": "https://api.github.com/users/sqwunkly/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-06T10:32:26Z", "updated_at": "2017-09-29T08:29:56Z", "closed_at": "2017-09-29T08:29:56Z", "author_association": "NONE", "body": "Hi Niels,\r\n\r\nThanks  a lot for writing your \"**JSON for Modern C++**\".  \r\n\r\nHow do I save the JSON data to file while retaining it's original order (after opening and editing from an existing data.json file) such that the saved objects and their keys are subsequently **not sorted** alphabetically upon saving the data?\r\n\r\nThis is how I'd like the json data to be saved to file, as it was originally (**not alphabetically sorted**):- \r\n\r\n![image](https://user-images.githubusercontent.com/31691223/30106131-db3338d6-933d-11e7-84a1-566343b3168c.png)\r\n\r\n\u200bHowever after saving to file, the data ends up **alphabetically sorted** (below).\r\n\r\n![image](https://user-images.githubusercontent.com/31691223/30105957-66a099a0-933d-11e7-91cb-e7f81edc3df7.png)\r\n\r\nIs there a way to **prevent** the json data being **alphabetically sorted**?\r\n\r\nMuch thanks. Greg\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/726", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/726/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/726/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/726/events", "html_url": "https://github.com/nlohmann/json/issues/726", "id": 254903963, "node_id": "MDU6SXNzdWUyNTQ5MDM5NjM=", "number": 726, "title": "Serialization for CBOR", "user": {"login": "cblauvelt", "id": 2067370, "node_id": "MDQ6VXNlcjIwNjczNzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2067370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cblauvelt", "html_url": "https://github.com/cblauvelt", "followers_url": "https://api.github.com/users/cblauvelt/followers", "following_url": "https://api.github.com/users/cblauvelt/following{/other_user}", "gists_url": "https://api.github.com/users/cblauvelt/gists{/gist_id}", "starred_url": "https://api.github.com/users/cblauvelt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cblauvelt/subscriptions", "organizations_url": "https://api.github.com/users/cblauvelt/orgs", "repos_url": "https://api.github.com/users/cblauvelt/repos", "events_url": "https://api.github.com/users/cblauvelt/events{/privacy}", "received_events_url": "https://api.github.com/users/cblauvelt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 571470316, "node_id": "MDU6TGFiZWw1NzE0NzAzMTY=", "url": "https://api.github.com/repos/nlohmann/json/labels/aspect:%20binary%20formats", "name": "aspect: binary formats", "color": "5319e7", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-09-03T22:08:39Z", "updated_at": "2017-09-29T08:30:55Z", "closed_at": "2017-09-29T08:30:55Z", "author_association": "NONE", "body": "First, thanks for the great library. It really is easy to work with.\r\n\r\nI would like to see a to_cbor and from_cbor implemented as serialization options. My specific use case is that for JSON, to make it more readable, I'm translating my enums through strings. I'd much rather use the integer equivalent for enums when I'm using CBOR to reduce the amount of data sent over the wire."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/725", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/725/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/725/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/725/events", "html_url": "https://github.com/nlohmann/json/issues/725", "id": 254861330, "node_id": "MDU6SXNzdWUyNTQ4NjEzMzA=", "number": 725, "title": "Using json Object as value in a map", "user": {"login": "FATEDx", "id": 31585594, "node_id": "MDQ6VXNlcjMxNTg1NTk0", "avatar_url": "https://avatars3.githubusercontent.com/u/31585594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FATEDx", "html_url": "https://github.com/FATEDx", "followers_url": "https://api.github.com/users/FATEDx/followers", "following_url": "https://api.github.com/users/FATEDx/following{/other_user}", "gists_url": "https://api.github.com/users/FATEDx/gists{/gist_id}", "starred_url": "https://api.github.com/users/FATEDx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FATEDx/subscriptions", "organizations_url": "https://api.github.com/users/FATEDx/orgs", "repos_url": "https://api.github.com/users/FATEDx/repos", "events_url": "https://api.github.com/users/FATEDx/events{/privacy}", "received_events_url": "https://api.github.com/users/FATEDx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-09-03T08:32:13Z", "updated_at": "2017-09-03T08:42:45Z", "closed_at": "2017-09-03T08:42:45Z", "author_association": "NONE", "body": "I have a map, that have key string, and json as the value \r\n`std::map<std::string, json> mList;`\r\nThen,\r\n`std::map<std::string, json>::iterator i = mList.at(name);`\r\n`std::map<std::string, json>::iterator end = mList.end();`\r\n\r\nWhen i try to access the iterator, it keep giving me error about \r\nError\tC2338\tcould not find from_json() method in T's namespace\r\n\r\nI have no idea what is going on, can someone help?\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/724", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/724/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/724/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/724/events", "html_url": "https://github.com/nlohmann/json/issues/724", "id": 254856967, "node_id": "MDU6SXNzdWUyNTQ4NTY5Njc=", "number": 724, "title": "std::regex and nlohmann::json value", "user": {"login": "jm130794", "id": 31583505, "node_id": "MDQ6VXNlcjMxNTgzNTA1", "avatar_url": "https://avatars0.githubusercontent.com/u/31583505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jm130794", "html_url": "https://github.com/jm130794", "followers_url": "https://api.github.com/users/jm130794/followers", "following_url": "https://api.github.com/users/jm130794/following{/other_user}", "gists_url": "https://api.github.com/users/jm130794/gists{/gist_id}", "starred_url": "https://api.github.com/users/jm130794/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jm130794/subscriptions", "organizations_url": "https://api.github.com/users/jm130794/orgs", "repos_url": "https://api.github.com/users/jm130794/repos", "events_url": "https://api.github.com/users/jm130794/events{/privacy}", "received_events_url": "https://api.github.com/users/jm130794/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-03T06:34:58Z", "updated_at": "2017-09-06T07:43:19Z", "closed_at": "2017-09-06T07:43:19Z", "author_association": "NONE", "body": "Hello,\r\n\r\nI want to use std::regex with a nlohmann::json value but I have somme problems. \r\n\r\nMy C++ file :\r\n \r\n```c++\r\n// g++ -std=c++14 moderncpp_json.cpp -o moderncpp_json\r\n#include <iostream>\r\n#include <regex>\r\n#include \"json.hpp\"\r\n \r\nint main(int argc, char *argv[])\r\n{\r\n    using json = nlohmann::json;\r\n\r\n    json j = R\"({\"name\": \"jmchoulet\"})\"_json;\r\n\r\n    std::regex  r{R\"(^(.+)$)\"};\r\n    std::smatch m;\r\n\r\n    //-- works but need to create a std::string variable !!!                         \r\n    //const std::string value = j[\"name\"].get<std::string>();\r\n    //if (std::regex_match(value, m, r))\r\n\r\n    if (std::regex_match(j[\"name\"].get<std::string>(), m, r))\r\n    {   \r\n        std::string s;\r\n\r\n        if (m.size())\r\n        {\r\n            std::string tmp = m[1];\r\n            s += \"m[1]: \" + tmp;\r\n            std::cout << s << std::endl;\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}\r\n```\r\nCompiler g++ output : \r\n\r\n```bash\r\n$ g++ -std=c++14 moderncpp_json.cpp -o moderncpp_json\r\nmoderncpp_json.cpp: In function \u2018int main(int, char**)\u2019:\r\nmoderncpp_json.cpp:19:60: error: use of deleted function \u2018bool std::regex_match(const std::__cxx11::basic_string<_Ch_type, _Ch_traits, _Ch_alloc>&&, std::__cxx11::match_results<typename std::__cxx11::basic_string<_Ch_type, _Ch_traits, _Ch_alloc>::const_iterator, _Alloc>&, const std::__cxx11::basic_regex<_Ch_type, _Rx_traits>&, std::regex_constants::match_flag_type) [with _Ch_traits = std::char_traits<char>; _Ch_alloc = std::allocator<char>; _Alloc = std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >; _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; typename std::__cxx11::basic_string<_Ch_type, _Ch_traits, _Ch_alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]\u2019\r\n     if (std::regex_match(j[\"name\"].get<std::string>(), m, r))\r\n                                                            ^\r\nIn file included from /usr/include/c++/5/regex:61:0,\r\n                 from moderncpp_json.cpp:3:\r\n/usr/include/c++/5/bits/regex.h:2073:5: note: declared here\r\n     regex_match(const basic_string<_Ch_type, _Ch_traits, _Ch_alloc>&&,\r\n```\r\nHow to avoid this error?\r\n\r\nThank,\r\n\r\nJean-Marc"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/723", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/723/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/723/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/723/events", "html_url": "https://github.com/nlohmann/json/issues/723", "id": 254847510, "node_id": "MDU6SXNzdWUyNTQ4NDc1MTA=", "number": 723, "title": "Warnings when compiling with VisualStudio 2015", "user": {"login": "ChipBurwell", "id": 4853865, "node_id": "MDQ6VXNlcjQ4NTM4NjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/4853865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChipBurwell", "html_url": "https://github.com/ChipBurwell", "followers_url": "https://api.github.com/users/ChipBurwell/followers", "following_url": "https://api.github.com/users/ChipBurwell/following{/other_user}", "gists_url": "https://api.github.com/users/ChipBurwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChipBurwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChipBurwell/subscriptions", "organizations_url": "https://api.github.com/users/ChipBurwell/orgs", "repos_url": "https://api.github.com/users/ChipBurwell/repos", "events_url": "https://api.github.com/users/ChipBurwell/events{/privacy}", "received_events_url": "https://api.github.com/users/ChipBurwell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2017-09-03T02:05:09Z", "updated_at": "2017-10-03T13:37:19Z", "closed_at": "2017-10-03T08:41:44Z", "author_association": "NONE", "body": "I've update to version 2.1.1 (from previously using 2.0.10) and now I'm getting the warnings listed below.  I don't think any of them are critical, but I'm wondering if there is a simple way to fix this without turning off warnings that I'd like to have on?\r\n\r\n1>json.hpp(6620): warning C4996: '_snprintf': This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.\r\n1>  c:\\program files (x86)\\windows kits\\10\\include\\10.0.10240.0\\ucrt\\stdio.h(1952): note: see declaration of '_snprintf'\r\n1>  json.hpp(6594): note: while compiling class template member function 'void nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>>::dump_float(double)'\r\n1>  json.hpp(6203): note: see reference to function template instantiation 'void nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>>::dump_float(double)' being compiled\r\n1>  json.hpp(8609): note: see reference to class template instantiation 'nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>>' being compiled\r\n1>  json.hpp(8607): note: while compiling class template member function 'std::basic_string<char,std::char_traits<char>,std::allocator<char>> nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>::dump(const int,const char,const bool) const'\r\n1>  json.hpp(13523): note: see reference to function template instantiation 'std::basic_string<char,std::char_traits<char>,std::allocator<char>> nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>::dump(const int,const char,const bool) const' being compiled\r\n1>  c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits(639): note: see reference to class template instantiation 'nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>' being compiled\r\n1>  c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits(668): note: see reference to class template instantiation 'std::is_nothrow_constructible<_Ty,nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer> &&>' being compiled\r\n1>          with\r\n1>          [\r\n1>              _Ty=nlohmann::json\r\n1>          ]\r\n1>  json.hpp(13504): note: see reference to class template instantiation 'std::is_nothrow_move_constructible<nlohmann::json>' being compiled"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/722", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/722/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/722/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/722/events", "html_url": "https://github.com/nlohmann/json/issues/722", "id": 254599035, "node_id": "MDU6SXNzdWUyNTQ1OTkwMzU=", "number": 722, "title": "Has this lib the unicode (wstring) support?", "user": {"login": "bajimu", "id": 19263759, "node_id": "MDQ6VXNlcjE5MjYzNzU5", "avatar_url": "https://avatars2.githubusercontent.com/u/19263759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bajimu", "html_url": "https://github.com/bajimu", "followers_url": "https://api.github.com/users/bajimu/followers", "following_url": "https://api.github.com/users/bajimu/following{/other_user}", "gists_url": "https://api.github.com/users/bajimu/gists{/gist_id}", "starred_url": "https://api.github.com/users/bajimu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bajimu/subscriptions", "organizations_url": "https://api.github.com/users/bajimu/orgs", "repos_url": "https://api.github.com/users/bajimu/repos", "events_url": "https://api.github.com/users/bajimu/events{/privacy}", "received_events_url": "https://api.github.com/users/bajimu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-01T10:21:20Z", "updated_at": "2017-09-06T07:42:44Z", "closed_at": "2017-09-06T07:42:44Z", "author_association": "NONE", "body": "Has this lib the unicode (wstring) support?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/721", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/721/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/721/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/721/events", "html_url": "https://github.com/nlohmann/json/issues/721", "id": 254482409, "node_id": "MDU6SXNzdWUyNTQ0ODI0MDk=", "number": 721, "title": "When will be 3.0 in master?", "user": {"login": "bajimu", "id": 19263759, "node_id": "MDQ6VXNlcjE5MjYzNzU5", "avatar_url": "https://avatars2.githubusercontent.com/u/19263759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bajimu", "html_url": "https://github.com/bajimu", "followers_url": "https://api.github.com/users/bajimu/followers", "following_url": "https://api.github.com/users/bajimu/following{/other_user}", "gists_url": "https://api.github.com/users/bajimu/gists{/gist_id}", "starred_url": "https://api.github.com/users/bajimu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bajimu/subscriptions", "organizations_url": "https://api.github.com/users/bajimu/orgs", "repos_url": "https://api.github.com/users/bajimu/repos", "events_url": "https://api.github.com/users/bajimu/events{/privacy}", "received_events_url": "https://api.github.com/users/bajimu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-31T22:08:44Z", "updated_at": "2017-12-04T21:12:14Z", "closed_at": "2017-09-01T10:59:00Z", "author_association": "NONE", "body": "When will be 3.0 in master?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/720", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/720/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/720/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/720/events", "html_url": "https://github.com/nlohmann/json/issues/720", "id": 253879345, "node_id": "MDU6SXNzdWUyNTM4NzkzNDU=", "number": 720, "title": "Determine the type from error message.", "user": {"login": "MattiasEppler", "id": 26406385, "node_id": "MDQ6VXNlcjI2NDA2Mzg1", "avatar_url": "https://avatars1.githubusercontent.com/u/26406385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MattiasEppler", "html_url": "https://github.com/MattiasEppler", "followers_url": "https://api.github.com/users/MattiasEppler/followers", "following_url": "https://api.github.com/users/MattiasEppler/following{/other_user}", "gists_url": "https://api.github.com/users/MattiasEppler/gists{/gist_id}", "starred_url": "https://api.github.com/users/MattiasEppler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MattiasEppler/subscriptions", "organizations_url": "https://api.github.com/users/MattiasEppler/orgs", "repos_url": "https://api.github.com/users/MattiasEppler/repos", "events_url": "https://api.github.com/users/MattiasEppler/events{/privacy}", "received_events_url": "https://api.github.com/users/MattiasEppler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-08-30T05:05:39Z", "updated_at": "2017-08-30T12:52:21Z", "closed_at": "2017-08-30T11:28:11Z", "author_association": "NONE", "body": "I get the erros\r\n\"could not find to_json() method in T's namespace\"\r\n\"could not find from_json() method in T's namespace\"\r\n\r\nbut I do not know for which type the methods are not found. How do I get this information?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/719", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/719/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/719/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/719/events", "html_url": "https://github.com/nlohmann/json/issues/719", "id": 253700858, "node_id": "MDU6SXNzdWUyNTM3MDA4NTg=", "number": 719, "title": "Compile-Error C2100 (MS VS2015) in line 887 json.hpp", "user": {"login": "Rockettomatoo", "id": 26488935, "node_id": "MDQ6VXNlcjI2NDg4OTM1", "avatar_url": "https://avatars2.githubusercontent.com/u/26488935?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rockettomatoo", "html_url": "https://github.com/Rockettomatoo", "followers_url": "https://api.github.com/users/Rockettomatoo/followers", "following_url": "https://api.github.com/users/Rockettomatoo/following{/other_user}", "gists_url": "https://api.github.com/users/Rockettomatoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rockettomatoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rockettomatoo/subscriptions", "organizations_url": "https://api.github.com/users/Rockettomatoo/orgs", "repos_url": "https://api.github.com/users/Rockettomatoo/repos", "events_url": "https://api.github.com/users/Rockettomatoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Rockettomatoo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}, {"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-29T15:11:59Z", "updated_at": "2017-08-29T16:03:23Z", "closed_at": "2017-08-29T16:03:23Z", "author_association": "NONE", "body": "Hey there,\r\n\r\nI'm happy to have found this awesome repo for parsing json but unfortunately `json.hpp` doesn't compile in my current project.\r\nMy Project-Setup is a plain win32-commandline-project with the `json.hpp` from the master-branch pasted in.\r\n\r\nAs the Heading says, the Error is in line 887:\r\n```\r\n//error: 1>c:\\vsprojects\\path\\to\\project\\source\\json.hpp(887): error C2100: Invalid Dereferencing\r\n\r\n// code arround line 887:\r\n\r\n// taken from ranges-v3\r\ntemplate<typename T>\r\nstruct static_const\r\n{\r\n    static constexpr T value{}; //line 887\r\n};\r\n```\r\n\r\nAny suggestions for that error?\r\nThanks in advance"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/718", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/718/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/718/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/718/events", "html_url": "https://github.com/nlohmann/json/issues/718", "id": 253504669, "node_id": "MDU6SXNzdWUyNTM1MDQ2Njk=", "number": 718, "title": "from_json not working for boost::optional example", "user": {"login": "popizdeh", "id": 1608656, "node_id": "MDQ6VXNlcjE2MDg2NTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1608656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popizdeh", "html_url": "https://github.com/popizdeh", "followers_url": "https://api.github.com/users/popizdeh/followers", "following_url": "https://api.github.com/users/popizdeh/following{/other_user}", "gists_url": "https://api.github.com/users/popizdeh/gists{/gist_id}", "starred_url": "https://api.github.com/users/popizdeh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popizdeh/subscriptions", "organizations_url": "https://api.github.com/users/popizdeh/orgs", "repos_url": "https://api.github.com/users/popizdeh/repos", "events_url": "https://api.github.com/users/popizdeh/events{/privacy}", "received_events_url": "https://api.github.com/users/popizdeh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-08-29T01:44:17Z", "updated_at": "2017-08-30T06:06:40Z", "closed_at": "2017-08-30T06:06:40Z", "author_association": "NONE", "body": "I have a verbatim copy of adl_serializer for boost::optional from the documentation. Version 2.1.1 of the library.\r\n\r\n```\r\nnlohmann::json json{{\"test\", nullptr}};\r\n\r\nboost::optional<int> works = json[\"test\"];\r\n\r\nboost::optional<int> broken;\r\nbroken = json[\"test\"];\r\n```\r\n\r\nAssignment to 'broken' variable won't go through the adl_serializer and will throw std::domain_error: type must be number, but is null"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/717", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/717/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/717/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/717/events", "html_url": "https://github.com/nlohmann/json/issues/717", "id": 253281463, "node_id": "MDU6SXNzdWUyNTMyODE0NjM=", "number": 717, "title": "about from_json and to_json function", "user": {"login": "daoqiang", "id": 16305190, "node_id": "MDQ6VXNlcjE2MzA1MTkw", "avatar_url": "https://avatars3.githubusercontent.com/u/16305190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daoqiang", "html_url": "https://github.com/daoqiang", "followers_url": "https://api.github.com/users/daoqiang/followers", "following_url": "https://api.github.com/users/daoqiang/following{/other_user}", "gists_url": "https://api.github.com/users/daoqiang/gists{/gist_id}", "starred_url": "https://api.github.com/users/daoqiang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daoqiang/subscriptions", "organizations_url": "https://api.github.com/users/daoqiang/orgs", "repos_url": "https://api.github.com/users/daoqiang/repos", "events_url": "https://api.github.com/users/daoqiang/events{/privacy}", "received_events_url": "https://api.github.com/users/daoqiang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-28T09:54:52Z", "updated_at": "2017-08-28T10:18:18Z", "closed_at": "2017-08-28T10:18:18Z", "author_association": "NONE", "body": "Hi,\r\nDo I need to design functions for each custom type?\r\nThx"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/716", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/716/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/716/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/716/events", "html_url": "https://github.com/nlohmann/json/issues/716", "id": 253262141, "node_id": "MDU6SXNzdWUyNTMyNjIxNDE=", "number": 716, "title": "How to deserialize array with derived objects", "user": {"login": "MattiasEppler", "id": 26406385, "node_id": "MDQ6VXNlcjI2NDA2Mzg1", "avatar_url": "https://avatars1.githubusercontent.com/u/26406385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MattiasEppler", "html_url": "https://github.com/MattiasEppler", "followers_url": "https://api.github.com/users/MattiasEppler/followers", "following_url": "https://api.github.com/users/MattiasEppler/following{/other_user}", "gists_url": "https://api.github.com/users/MattiasEppler/gists{/gist_id}", "starred_url": "https://api.github.com/users/MattiasEppler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MattiasEppler/subscriptions", "organizations_url": "https://api.github.com/users/MattiasEppler/orgs", "repos_url": "https://api.github.com/users/MattiasEppler/repos", "events_url": "https://api.github.com/users/MattiasEppler/events{/privacy}", "received_events_url": "https://api.github.com/users/MattiasEppler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2017-08-28T08:33:25Z", "updated_at": "2018-03-06T15:39:12Z", "closed_at": "2017-08-29T08:59:42Z", "author_association": "NONE", "body": "Hi \r\n\r\nI need to deserialize a array that have derived objects.\r\n```js\r\n{\r\n \"systems\":\r\n  [ \r\n     {\"type\": \"system1\", \"name\": \"system_1\"  special_param_1 : 1 },\r\n     {\"type\": \"system2\", \"name\": \"system_2\", special_param_2 : \"Value2\" },\r\n     {\"type\": \"system3\", \"name\": \"system_3\", special_param_3 : 3.0, special_param_3_1 : \"Value_3\"  }\r\n  ]\r\n}\r\n```\r\n\r\nso in my from_json I have to do what? Sorry but I do not realy know how to solve this.\r\nI started with:\r\n```cpp\r\nvoid from_json(cons json& j, settings& settings)\r\n{\r\n   settings.systems = j.at(\"systems\").get<vector<systembase>>();\r\n   ??\r\n}\r\n\r\nvoid from_json(cons json& j, systembase& base)\r\n{\r\n  base.type =j.at[\"type\"].get<string>();\r\n  base.name =j.at[\"name\"].get<string>();\r\n\r\n  switch (base.type)\r\n  {\r\n   case :\r\n   ...? \r\n  }\r\n}\r\n\r\nvoid from_json(cons json& j, systemderived_1& derived)\r\n{\r\n derived = j.at[\"special_param_1\"].get<int>();\r\n}\r\n```\r\n\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/715", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/715/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/715/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/715/events", "html_url": "https://github.com/nlohmann/json/issues/715", "id": 253237594, "node_id": "MDU6SXNzdWUyNTMyMzc1OTQ=", "number": 715, "title": "How to detect parse failure?", "user": {"login": "davechurchill", "id": 1189032, "node_id": "MDQ6VXNlcjExODkwMzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1189032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davechurchill", "html_url": "https://github.com/davechurchill", "followers_url": "https://api.github.com/users/davechurchill/followers", "following_url": "https://api.github.com/users/davechurchill/following{/other_user}", "gists_url": "https://api.github.com/users/davechurchill/gists{/gist_id}", "starred_url": "https://api.github.com/users/davechurchill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davechurchill/subscriptions", "organizations_url": "https://api.github.com/users/davechurchill/orgs", "repos_url": "https://api.github.com/users/davechurchill/repos", "events_url": "https://api.github.com/users/davechurchill/events{/privacy}", "received_events_url": "https://api.github.com/users/davechurchill/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-08-28T06:27:34Z", "updated_at": "2017-09-29T08:30:15Z", "closed_at": "2017-09-29T08:30:15Z", "author_association": "NONE", "body": "Apologies for the seemingly simple question, but there is no example for detecting a parse failure on the readme. Maybe one could be added, or a simple explanation of how to detect a parse failure could be given?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/714", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/714/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/714/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/714/events", "html_url": "https://github.com/nlohmann/json/issues/714", "id": 253157883, "node_id": "MDU6SXNzdWUyNTMxNTc4ODM=", "number": 714, "title": "Parse throw std::ios_base::failure exception when failbit set to true", "user": {"login": "dPavelDev", "id": 17548434, "node_id": "MDQ6VXNlcjE3NTQ4NDM0", "avatar_url": "https://avatars0.githubusercontent.com/u/17548434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dPavelDev", "html_url": "https://github.com/dPavelDev", "followers_url": "https://api.github.com/users/dPavelDev/followers", "following_url": "https://api.github.com/users/dPavelDev/following{/other_user}", "gists_url": "https://api.github.com/users/dPavelDev/gists{/gist_id}", "starred_url": "https://api.github.com/users/dPavelDev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dPavelDev/subscriptions", "organizations_url": "https://api.github.com/users/dPavelDev/orgs", "repos_url": "https://api.github.com/users/dPavelDev/repos", "events_url": "https://api.github.com/users/dPavelDev/events{/privacy}", "received_events_url": "https://api.github.com/users/dPavelDev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 12, "created_at": "2017-08-27T11:29:06Z", "updated_at": "2017-10-31T14:22:06Z", "closed_at": "2017-10-31T14:04:24Z", "author_association": "NONE", "body": "In brief:\r\n\r\n```cpp\r\nstd::ifstream is;\r\nis.exceptions(\r\n      is.exceptions() \r\n    | std::ios_base::failbit \r\n    | std::ios_base::badbit\r\n); // handle different exceptions as 'file not found', 'permission denied'\r\n\r\ntry { \r\n    is.open(\"my_valid_file.json\");\r\n    const auto &jsonFile = nlohmann::json::parse(is); // (*)\r\n    // ...\r\ncatch (const std::ios_base::failure &e) {\r\n    std::cerr << e.code().message() << std::endl;\r\n}\r\n```\r\n\r\nThe line (*) produce std::ios_base::failure exception when parse function reaches end of stream even if json document is valid. Without std::ios_base::failbit function works OK."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/713", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/713/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/713/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/713/events", "html_url": "https://github.com/nlohmann/json/issues/713", "id": 253053846, "node_id": "MDU6SXNzdWUyNTMwNTM4NDY=", "number": 713, "title": "Is there a way of format just making a pretty print without changing the key's orders ?", "user": {"login": "zhishupp", "id": 6071453, "node_id": "MDQ6VXNlcjYwNzE0NTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6071453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhishupp", "html_url": "https://github.com/zhishupp", "followers_url": "https://api.github.com/users/zhishupp/followers", "following_url": "https://api.github.com/users/zhishupp/following{/other_user}", "gists_url": "https://api.github.com/users/zhishupp/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhishupp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhishupp/subscriptions", "organizations_url": "https://api.github.com/users/zhishupp/orgs", "repos_url": "https://api.github.com/users/zhishupp/repos", "events_url": "https://api.github.com/users/zhishupp/events{/privacy}", "received_events_url": "https://api.github.com/users/zhishupp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-26T02:12:10Z", "updated_at": "2017-08-29T01:54:19Z", "closed_at": "2017-08-27T14:03:20Z", "author_association": "NONE", "body": "for example, format like this, just adjust the indent, not change key's orders\r\n\r\n```js\r\n{\r\n\t\"arp table\":\t[{\r\n\t\t\t\"Bucket\":\t88,\r\n\t\t\t\"IPv4\":\t\"1.0.0.1\",\r\n\t\t\t\"MAC\":\t\"83:84:D4:D8:C6:AA\",\r\n\t\t\t\"Expire\":\t\"static\"\r\n\t\t}, {\r\n\t\t\t\"Bucket\":\t998,\r\n\t\t\t\"IPv4\":\t\"1.0.0.2\",\r\n\t\t\t\"MAC\":\t\"83:84:D4:D8:C6:BB\",\r\n\t\t\t\"Expire\":\t\"static\"\r\n\t\t}]\r\n}\r\n\r\n```\r\n\r\n```js\r\n{\r\n    \"arp table\": [\r\n        {\r\n            \"Bucket\": 88,\r\n            \"IPv4\": \"1.0.0.1\",\r\n            \"MAC\": \"83:84:D4:D8:C6:AA\",\r\n            \"Expire\": \"static\"\r\n        },\r\n        {\r\n            \"Bucket\": 998,\r\n            \"IPv4\": \"1.0.0.2\",\r\n            \"MAC\": \"83:84:D4:D8:C6:BB\",\r\n            \"Expire\": \"static\"\r\n        }\r\n    ]\r\n}\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/712", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/712/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/712/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/712/events", "html_url": "https://github.com/nlohmann/json/issues/712", "id": 253039185, "node_id": "MDU6SXNzdWUyNTMwMzkxODU=", "number": 712, "title": "Serialization of array of not same model items", "user": {"login": "Haaxor1689", "id": 25706343, "node_id": "MDQ6VXNlcjI1NzA2MzQz", "avatar_url": "https://avatars0.githubusercontent.com/u/25706343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Haaxor1689", "html_url": "https://github.com/Haaxor1689", "followers_url": "https://api.github.com/users/Haaxor1689/followers", "following_url": "https://api.github.com/users/Haaxor1689/following{/other_user}", "gists_url": "https://api.github.com/users/Haaxor1689/gists{/gist_id}", "starred_url": "https://api.github.com/users/Haaxor1689/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Haaxor1689/subscriptions", "organizations_url": "https://api.github.com/users/Haaxor1689/orgs", "repos_url": "https://api.github.com/users/Haaxor1689/repos", "events_url": "https://api.github.com/users/Haaxor1689/events{/privacy}", "received_events_url": "https://api.github.com/users/Haaxor1689/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-25T23:20:02Z", "updated_at": "2017-08-26T18:12:19Z", "closed_at": "2017-08-26T18:12:19Z", "author_association": "NONE", "body": "When trying to serialize json string that contains array of elements that have a different model, serialization throws first time it encounters a different type for the same key. Simplified example of my situation is below:\r\n\r\n```json\r\n[\r\n  {\r\n    \"id\": 0,\r\n    \"name\": \"adsad\"\r\n  },\r\n  {\r\n    \"id\": \"123\",\r\n    \"name\": \"aawew\"\r\n  }\r\n]\r\n```\r\n\r\nIs there a way to parse such json string?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/711", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/711/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/711/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/711/events", "html_url": "https://github.com/nlohmann/json/issues/711", "id": 252846000, "node_id": "MDU6SXNzdWUyNTI4NDYwMDA=", "number": 711, "title": "pointer to json parse vector", "user": {"login": "kessero", "id": 16817789, "node_id": "MDQ6VXNlcjE2ODE3Nzg5", "avatar_url": "https://avatars0.githubusercontent.com/u/16817789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kessero", "html_url": "https://github.com/kessero", "followers_url": "https://api.github.com/users/kessero/followers", "following_url": "https://api.github.com/users/kessero/following{/other_user}", "gists_url": "https://api.github.com/users/kessero/gists{/gist_id}", "starred_url": "https://api.github.com/users/kessero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kessero/subscriptions", "organizations_url": "https://api.github.com/users/kessero/orgs", "repos_url": "https://api.github.com/users/kessero/repos", "events_url": "https://api.github.com/users/kessero/events{/privacy}", "received_events_url": "https://api.github.com/users/kessero/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-08-25T09:29:48Z", "updated_at": "2017-08-29T16:09:16Z", "closed_at": "2017-08-29T16:04:43Z", "author_association": "NONE", "body": "My main:\r\n```cpp\r\nint main(int argc, char *argv[])\r\n{\r\n  // read a JSON file\r\n  std::stringstream ss;\r\n  std::ifstream i(\"filee.json\");\r\n  json j_complete = json::parse(i);\r\n  std::vector < int > data_send_to_LED;\r\n  for (int i =0; i<j_complete[\"tablica\"].size(); i++){\r\n    data_send_to_LED.push_back(j_complete[\"tablica\"][i].get<int>());\r\n  }\r\n  for (int i =0; i<data_send_to_LED.size(); i++){\r\n    cout <<\"data send: \"<< data_send_to_LED[i]<<endl;\r\n  }\r\n  json j_vec(data_send_to_LED);\r\n  long int pv = j_vec.get_ptr<json::number_integer_t*>();\r\n  cout << j_vec.size() << endl;\r\n  cout << j_vec << endl;\r\n  cout << pv << endl;\r\n...\r\nn = write(sockfd,pv, j_vec.size()+1);\r\n```\r\n\r\nIn general I want to send the contents of the file.json file to the server which accepts data in json format.\r\nJ_vec shows -  [192,0,0,1,0,0,1,0,84,76,126]\r\nPv.size shows 11 elements and this is OK \r\npv shows 0\r\nand n returns bad address?\r\nI can skip the vector in the program and send the data directly form file.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/710", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/710/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/710/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/710/events", "html_url": "https://github.com/nlohmann/json/pull/710", "id": 252837907, "node_id": "MDExOlB1bGxSZXF1ZXN0MTM3NjI3ODE3", "number": 710, "title": "JSON parser instantiation with customized types.", "user": {"login": "imalyavskiy", "id": 6505514, "node_id": "MDQ6VXNlcjY1MDU1MTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/6505514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imalyavskiy", "html_url": "https://github.com/imalyavskiy", "followers_url": "https://api.github.com/users/imalyavskiy/followers", "following_url": "https://api.github.com/users/imalyavskiy/following{/other_user}", "gists_url": "https://api.github.com/users/imalyavskiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/imalyavskiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imalyavskiy/subscriptions", "organizations_url": "https://api.github.com/users/imalyavskiy/orgs", "repos_url": "https://api.github.com/users/imalyavskiy/repos", "events_url": "https://api.github.com/users/imalyavskiy/events{/privacy}", "received_events_url": "https://api.github.com/users/imalyavskiy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-08-25T08:56:06Z", "updated_at": "2017-09-03T17:42:26Z", "closed_at": "2017-09-02T23:09:36Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/710", "html_url": "https://github.com/nlohmann/json/pull/710", "diff_url": "https://github.com/nlohmann/json/pull/710.diff", "patch_url": "https://github.com/nlohmann/json/pull/710.patch"}, "body": "There are changes that make possible to instantiate and use the nlohmann::json with custom map, vector and string types. In my case it was caused by need to use custom allocator. But currently classes under the hood use std::string instead of StringType(the 3rd template parameter of basic_json class). Thus it makes impossible to instantiate the parser with customized types."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/709", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/709/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/709/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/709/events", "html_url": "https://github.com/nlohmann/json/issues/709", "id": 252600165, "node_id": "MDU6SXNzdWUyNTI2MDAxNjU=", "number": 709, "title": "Gtest SEH Exception", "user": {"login": "SimonEbner", "id": 570249, "node_id": "MDQ6VXNlcjU3MDI0OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/570249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonEbner", "html_url": "https://github.com/SimonEbner", "followers_url": "https://api.github.com/users/SimonEbner/followers", "following_url": "https://api.github.com/users/SimonEbner/following{/other_user}", "gists_url": "https://api.github.com/users/SimonEbner/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonEbner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonEbner/subscriptions", "organizations_url": "https://api.github.com/users/SimonEbner/orgs", "repos_url": "https://api.github.com/users/SimonEbner/repos", "events_url": "https://api.github.com/users/SimonEbner/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonEbner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-08-24T13:23:29Z", "updated_at": "2017-08-25T09:45:06Z", "closed_at": "2017-08-24T14:12:04Z", "author_association": "NONE", "body": "Running the following test using GTest causes an SEH Exception for me using VS 2017 / gcc 5.4\r\n```cpp\r\nTEST(foo, fail1)\r\n{\r\n    auto obj = json{ {\"foo\", \"bar\"} };\r\n    ASSERT_THAT(obj, Eq(obj));\r\n}\r\n\r\nMATCHER(IsFooObject, \"\")\r\n{\r\n    return arg == json{ { \"foo\", \"bar\" } };\r\n}\r\n\r\nTEST(foo, fail2)\r\n{\r\n    auto obj = json{ { \"foo\", \"bar\" } };\r\n    ASSERT_THAT(obj, IsFooObject());\r\n}\r\n```\r\n\r\nThese 'simpler' tests, however, work fine. \r\n\r\n```cpp\r\nTEST(foo, success1)\r\n{\r\n    auto obj = json{ { \"foo\", \"bar\" } };\r\n    ASSERT_EQ(obj, obj);\r\n}\r\n\r\nTEST(foo, success2)\r\n{\r\n    auto obj = json{ { \"foo\", \"bar\" } };\r\n    ASSERT_TRUE(obj == obj);\r\n}\r\n```\r\n\r\nI could not find any information on how to make json.hpp together with Gtest work. Is there a chance to make custom matchers (MATCHER_P) work?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/708", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/708/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/708/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/708/events", "html_url": "https://github.com/nlohmann/json/pull/708", "id": 252097879, "node_id": "MDExOlB1bGxSZXF1ZXN0MTM3MDg2MTI5", "number": 708, "title": "fix from_json implementation for pair/tuple", "user": {"login": "theodelrieu", "id": 15652306, "node_id": "MDQ6VXNlcjE1NjUyMzA2", "avatar_url": "https://avatars1.githubusercontent.com/u/15652306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theodelrieu", "html_url": "https://github.com/theodelrieu", "followers_url": "https://api.github.com/users/theodelrieu/followers", "following_url": "https://api.github.com/users/theodelrieu/following{/other_user}", "gists_url": "https://api.github.com/users/theodelrieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/theodelrieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theodelrieu/subscriptions", "organizations_url": "https://api.github.com/users/theodelrieu/orgs", "repos_url": "https://api.github.com/users/theodelrieu/repos", "events_url": "https://api.github.com/users/theodelrieu/events{/privacy}", "received_events_url": "https://api.github.com/users/theodelrieu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 3, "created_at": "2017-08-22T21:41:01Z", "updated_at": "2017-08-24T10:40:40Z", "closed_at": "2017-08-24T10:40:17Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/708", "html_url": "https://github.com/nlohmann/json/pull/708", "diff_url": "https://github.com/nlohmann/json/pull/708.diff", "patch_url": "https://github.com/nlohmann/json/pull/708.patch"}, "body": "Introduced by 6e4910d5c5638bedbc3ff650d1b6b91249a927a3\r\n\r\nFixes #707"}]