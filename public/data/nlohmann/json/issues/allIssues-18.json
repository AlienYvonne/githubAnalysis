[{"url": "https://api.github.com/repos/nlohmann/json/issues/677", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/677/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/677/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/677/events", "html_url": "https://github.com/nlohmann/json/issues/677", "id": 248079587, "node_id": "MDU6SXNzdWUyNDgwNzk1ODc=", "number": 677, "title": "Is there a way to control the precision of serialized floating point numbers?", "user": {"login": "gonzalobenegas", "id": 5766420, "node_id": "MDQ6VXNlcjU3NjY0MjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5766420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gonzalobenegas", "html_url": "https://github.com/gonzalobenegas", "followers_url": "https://api.github.com/users/gonzalobenegas/followers", "following_url": "https://api.github.com/users/gonzalobenegas/following{/other_user}", "gists_url": "https://api.github.com/users/gonzalobenegas/gists{/gist_id}", "starred_url": "https://api.github.com/users/gonzalobenegas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gonzalobenegas/subscriptions", "organizations_url": "https://api.github.com/users/gonzalobenegas/orgs", "repos_url": "https://api.github.com/users/gonzalobenegas/repos", "events_url": "https://api.github.com/users/gonzalobenegas/events{/privacy}", "received_events_url": "https://api.github.com/users/gonzalobenegas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-04T18:15:10Z", "updated_at": "2017-08-08T18:24:24Z", "closed_at": "2017-08-08T18:24:24Z", "author_association": "NONE", "body": "I currently see doubles are being serialized with 16 significant figures. Is there any way to serialize them using, say, 6 significant figures?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/676", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/676/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/676/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/676/events", "html_url": "https://github.com/nlohmann/json/issues/676", "id": 248022016, "node_id": "MDU6SXNzdWUyNDgwMjIwMTY=", "number": 676, "title": "Is there a way to get the path of a value?", "user": {"login": "trikkegitaar", "id": 29774698, "node_id": "MDQ6VXNlcjI5Nzc0Njk4", "avatar_url": "https://avatars3.githubusercontent.com/u/29774698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trikkegitaar", "html_url": "https://github.com/trikkegitaar", "followers_url": "https://api.github.com/users/trikkegitaar/followers", "following_url": "https://api.github.com/users/trikkegitaar/following{/other_user}", "gists_url": "https://api.github.com/users/trikkegitaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/trikkegitaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trikkegitaar/subscriptions", "organizations_url": "https://api.github.com/users/trikkegitaar/orgs", "repos_url": "https://api.github.com/users/trikkegitaar/repos", "events_url": "https://api.github.com/users/trikkegitaar/events{/privacy}", "received_events_url": "https://api.github.com/users/trikkegitaar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-04T14:25:13Z", "updated_at": "2017-08-08T16:20:51Z", "closed_at": "2017-08-08T16:20:51Z", "author_association": "NONE", "body": "While traversing the json structure I'd like to fetch the path of a certain value, something like \"/answer/everything\".\r\nIs this possible?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/675", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/675/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/675/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/675/events", "html_url": "https://github.com/nlohmann/json/issues/675", "id": 247909207, "node_id": "MDU6SXNzdWUyNDc5MDkyMDc=", "number": 675, "title": "Could the parser locate errors to line?", "user": {"login": "PinkGabriel", "id": 9349907, "node_id": "MDQ6VXNlcjkzNDk5MDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/9349907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PinkGabriel", "html_url": "https://github.com/PinkGabriel", "followers_url": "https://api.github.com/users/PinkGabriel/followers", "following_url": "https://api.github.com/users/PinkGabriel/following{/other_user}", "gists_url": "https://api.github.com/users/PinkGabriel/gists{/gist_id}", "starred_url": "https://api.github.com/users/PinkGabriel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PinkGabriel/subscriptions", "organizations_url": "https://api.github.com/users/PinkGabriel/orgs", "repos_url": "https://api.github.com/users/PinkGabriel/repos", "events_url": "https://api.github.com/users/PinkGabriel/events{/privacy}", "received_events_url": "https://api.github.com/users/PinkGabriel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-04T05:50:56Z", "updated_at": "2017-08-04T09:17:18Z", "closed_at": "2017-08-04T09:17:18Z", "author_association": "NONE", "body": "hello again~\r\nI use the lib to parse a json file like this:\r\n\r\nstd::ifstream ifs(filename);\r\njson json_input;\r\nifs >> json_input;\r\n\r\nThen I use the json class to do things. But if the input file has syntax error, the parser just reports what the error is, without where the error happens. Is it possible to locate errors to exactly which line the error happens in the json file?\r\nThanks!"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/674", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/674/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/674/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/674/events", "html_url": "https://github.com/nlohmann/json/pull/674", "id": 247118302, "node_id": "MDExOlB1bGxSZXF1ZXN0MTMzNTA5ODYz", "number": 674, "title": "Fix \"not constraint\" grammar in docs", "user": {"login": "wincent", "id": 7074, "node_id": "MDQ6VXNlcjcwNzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wincent", "html_url": "https://github.com/wincent", "followers_url": "https://api.github.com/users/wincent/followers", "following_url": "https://api.github.com/users/wincent/following{/other_user}", "gists_url": "https://api.github.com/users/wincent/gists{/gist_id}", "starred_url": "https://api.github.com/users/wincent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wincent/subscriptions", "organizations_url": "https://api.github.com/users/wincent/orgs", "repos_url": "https://api.github.com/users/wincent/repos", "events_url": "https://api.github.com/users/wincent/events{/privacy}", "received_events_url": "https://api.github.com/users/wincent/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 2, "created_at": "2017-08-01T15:57:00Z", "updated_at": "2017-08-01T18:21:08Z", "closed_at": "2017-08-01T18:21:05Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/674", "html_url": "https://github.com/nlohmann/json/pull/674", "diff_url": "https://github.com/nlohmann/json/pull/674.diff", "patch_url": "https://github.com/nlohmann/json/pull/674.patch"}, "body": "\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/673", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/673/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/673/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/673/events", "html_url": "https://github.com/nlohmann/json/issues/673", "id": 247117765, "node_id": "MDU6SXNzdWUyNDcxMTc3NjU=", "number": 673, "title": "There is performance inefficiency found by coverity tool json2.1.1/include/nlohmann/json.hpp", "user": {"login": "qinglucich", "id": 26724691, "node_id": "MDQ6VXNlcjI2NzI0Njkx", "avatar_url": "https://avatars3.githubusercontent.com/u/26724691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qinglucich", "html_url": "https://github.com/qinglucich", "followers_url": "https://api.github.com/users/qinglucich/followers", "following_url": "https://api.github.com/users/qinglucich/following{/other_user}", "gists_url": "https://api.github.com/users/qinglucich/gists{/gist_id}", "starred_url": "https://api.github.com/users/qinglucich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qinglucich/subscriptions", "organizations_url": "https://api.github.com/users/qinglucich/orgs", "repos_url": "https://api.github.com/users/qinglucich/repos", "events_url": "https://api.github.com/users/qinglucich/events{/privacy}", "received_events_url": "https://api.github.com/users/qinglucich/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 8, "created_at": "2017-08-01T15:55:30Z", "updated_at": "2017-08-15T19:58:29Z", "closed_at": "2017-08-15T18:40:47Z", "author_association": "NONE", "body": "4063    @since version 1.0.0\r\n4064    */\r\n4065    template<class ValueType, typename std::enable_if<\r\n4066                 std::is_convertible<basic_json_t, ValueType>::value, int>::type = 0>\r\n    \t\r\nCID 10413 (#1 of 1): Big parameter passed by value (PASS_BY_VALUE)\r\npass_by_value: Passing parameter default_value of type cerebras::file_metadata (size 168 bytes) by value.\r\n4067    ValueType value(const typename object_t::key_type& key, ValueType default_value) const\r\n4068    {"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/672", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/672/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/672/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/672/events", "html_url": "https://github.com/nlohmann/json/issues/672", "id": 246686377, "node_id": "MDU6SXNzdWUyNDY2ODYzNzc=", "number": 672, "title": "include problem, when cmake on osx", "user": {"login": "xiazhibin", "id": 11945009, "node_id": "MDQ6VXNlcjExOTQ1MDA5", "avatar_url": "https://avatars0.githubusercontent.com/u/11945009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiazhibin", "html_url": "https://github.com/xiazhibin", "followers_url": "https://api.github.com/users/xiazhibin/followers", "following_url": "https://api.github.com/users/xiazhibin/following{/other_user}", "gists_url": "https://api.github.com/users/xiazhibin/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiazhibin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiazhibin/subscriptions", "organizations_url": "https://api.github.com/users/xiazhibin/orgs", "repos_url": "https://api.github.com/users/xiazhibin/repos", "events_url": "https://api.github.com/users/xiazhibin/events{/privacy}", "received_events_url": "https://api.github.com/users/xiazhibin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-31T08:50:43Z", "updated_at": "2017-07-31T09:14:20Z", "closed_at": "2017-07-31T09:14:20Z", "author_association": "NONE", "body": "I clone the project , and make install.\r\nIn my cpp file, I must `#include \"nlohmann/json.hpp\"` not `#include \"json.hpp\" as it mentions`\r\n\r\nWhy?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/671", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/671/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/671/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/671/events", "html_url": "https://github.com/nlohmann/json/pull/671", "id": 246674572, "node_id": "MDExOlB1bGxSZXF1ZXN0MTMzMTg2MDc1", "number": 671, "title": "Add documentation for integration with CMake and hunter", "user": {"login": "dan-42", "id": 1706857, "node_id": "MDQ6VXNlcjE3MDY4NTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1706857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dan-42", "html_url": "https://github.com/dan-42", "followers_url": "https://api.github.com/users/dan-42/followers", "following_url": "https://api.github.com/users/dan-42/following{/other_user}", "gists_url": "https://api.github.com/users/dan-42/gists{/gist_id}", "starred_url": "https://api.github.com/users/dan-42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dan-42/subscriptions", "organizations_url": "https://api.github.com/users/dan-42/orgs", "repos_url": "https://api.github.com/users/dan-42/repos", "events_url": "https://api.github.com/users/dan-42/events{/privacy}", "received_events_url": "https://api.github.com/users/dan-42/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 4, "created_at": "2017-07-31T08:02:00Z", "updated_at": "2017-08-01T05:16:15Z", "closed_at": "2017-08-01T05:15:56Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/671", "html_url": "https://github.com/nlohmann/json/pull/671", "diff_url": "https://github.com/nlohmann/json/pull/671.diff", "patch_url": "https://github.com/nlohmann/json/pull/671.patch"}, "body": "here you go, as requested. I added again the ``` LANGUAGES CXX ``` and also added the documenation about using it with CMake and CMake with hunter.\r\nHunter just released his latest version with supporting the version v2.1.1 of ``` nlohman_json ``` \ud83d\udc4d \r\n\r\n\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/670", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/670/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/670/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/670/events", "html_url": "https://github.com/nlohmann/json/issues/670", "id": 246541045, "node_id": "MDU6SXNzdWUyNDY1NDEwNDU=", "number": 670, "title": "Operator= ambiguous in C++1z and GCC 7.1.1", "user": {"login": "nick-prat", "id": 19151224, "node_id": "MDQ6VXNlcjE5MTUxMjI0", "avatar_url": "https://avatars3.githubusercontent.com/u/19151224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nick-prat", "html_url": "https://github.com/nick-prat", "followers_url": "https://api.github.com/users/nick-prat/followers", "following_url": "https://api.github.com/users/nick-prat/following{/other_user}", "gists_url": "https://api.github.com/users/nick-prat/gists{/gist_id}", "starred_url": "https://api.github.com/users/nick-prat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nick-prat/subscriptions", "organizations_url": "https://api.github.com/users/nick-prat/orgs", "repos_url": "https://api.github.com/users/nick-prat/repos", "events_url": "https://api.github.com/users/nick-prat/events{/privacy}", "received_events_url": "https://api.github.com/users/nick-prat/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 304694104, "node_id": "MDU6TGFiZWwzMDQ2OTQxMDQ=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20please%20discuss", "name": "state: please discuss", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-07-29T19:37:57Z", "updated_at": "2017-08-01T18:45:38Z", "closed_at": "2017-08-01T18:45:38Z", "author_association": "NONE", "body": "With the new GCC 7.1.1 there is a bug with reassigning to strings.\r\n\r\nIn this code\r\n```cpp\r\n#include <string>\r\n#include <iostream>\r\n#include <json.hpp>\r\n\r\nusing json = nlohmann::json;\r\n\r\nint main() {\r\n    json js;\r\n    std::string name = \"\";\r\n    name = js[\"name\"];\r\n}\r\n```\r\nit produces the error\r\n```\r\nIn file included from /usr/include/c++/7.1.1/string:52:0,\r\n                 from json_error.cc:1:\r\n/usr/include/c++/7.1.1/bits/basic_string.h: In instantiation of \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_If_sv<_Tp, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(_Tp) [with _Tp = nlohmann::basic_json<>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_If_sv<_Tp, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&> = std::__cxx11::basic_string<char>&]\u2019:\r\njson_error.cc:10:21:   required from here\r\n/usr/include/c++/7.1.1/bits/basic_string.h:764:28: error: call of overloaded \u2018assign(nlohmann::basic_json<>&)\u2019 is ambiguous\r\n  { return this->assign(__sv); }\r\n                            ^\r\n/usr/include/c++/7.1.1/bits/basic_string.h:1313:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::assign(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\r\n       assign(const basic_string& __str)\r\n       ^~~~~~\r\n/usr/include/c++/7.1.1/bits/basic_string.h:1329:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::assign(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\r\n       assign(basic_string&& __str)\r\n       ^~~~~~\r\n/usr/include/c++/7.1.1/bits/basic_string.h:1440:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::assign(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__sv_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__sv_type = std::basic_string_view<char>]\r\n       assign(__sv_type __sv)\r\n       ^~~~~~\r\n```\r\nwhen built with `g++ -std=c++1z filename.cpp` but it will compile fine with `c++ -std=c++14 filename.cpp`\r\n\r\nthis also occurs if using clang if the GCC libs version is 7.1.1"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/669", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/669/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/669/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/669/events", "html_url": "https://github.com/nlohmann/json/pull/669", "id": 246514141, "node_id": "MDExOlB1bGxSZXF1ZXN0MTMzMDg4Njcw", "number": 669, "title": "REFACTOR: rewrite CMakeLists.txt for better inlcude and reuse", "user": {"login": "dan-42", "id": 1706857, "node_id": "MDQ6VXNlcjE3MDY4NTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1706857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dan-42", "html_url": "https://github.com/dan-42", "followers_url": "https://api.github.com/users/dan-42/followers", "following_url": "https://api.github.com/users/dan-42/following{/other_user}", "gists_url": "https://api.github.com/users/dan-42/gists{/gist_id}", "starred_url": "https://api.github.com/users/dan-42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dan-42/subscriptions", "organizations_url": "https://api.github.com/users/dan-42/orgs", "repos_url": "https://api.github.com/users/dan-42/repos", "events_url": "https://api.github.com/users/dan-42/events{/privacy}", "received_events_url": "https://api.github.com/users/dan-42/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 3, "created_at": "2017-07-29T10:38:31Z", "updated_at": "2017-07-30T21:00:15Z", "closed_at": "2017-07-30T18:01:04Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/669", "html_url": "https://github.com/nlohmann/json/pull/669", "diff_url": "https://github.com/nlohmann/json/pull/669.diff", "patch_url": "https://github.com/nlohmann/json/pull/669.patch"}, "body": "The rewrite uses more cmake build-in functions and build-in automaticly generated\r\nvariables to allow better generic reuse.\r\nThis is based on the cmake example project [package-example](https://github.com/forexample/package-example)\r\n* cmake  files are installed to\r\n``` <install_prefix>/lib/cmake/nlohmann_json/ ``` for best support on\r\nmost systems\r\n* include path is set to ``` include ```  for usage as ``` #include\r\n<nlohmann/json.hpp> ```\r\n\r\n## Motivation\r\nThe motivation is the reintegration of ``` nlohmann_json ``` into the cmake package-manager [hunter](https://github.com/ruslo/hunter/pull/907) \r\nand to avoid possible naming collissions with other packages( e.g. jsoncpp, etc)\r\n\r\n## compile install and run with unit tests\r\n```sh\r\ndan@kay ~/git/json/build (git)-[change_installed_cmake_include_path] % rm -rf ./* && rm -rf ../test_install/* && cmake ..  -DCMAKE_INSTALL_PREFIX=../test_install -DJSON_BuildTests=ON && make -j8  && make install\r\nzsh: sure you want to delete all 8 files in /home/dan/git/json/build/. [yn]? y\r\nzsh: sure you want to delete all 2 files in /home/dan/git/json/build/../test_install [yn]? y\r\n-- The C compiler identification is GNU 7.1.1\r\n-- The CXX compiler identification is GNU 7.1.1\r\n[....]\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /home/dan/git/json/build\r\nScanning dependencies of target catch_main\r\n[  2%] Building CXX object test/CMakeFiles/catch_main.dir/src/unit.cpp.o\r\n[...]\r\n[100%] Built target json_unit\r\nmake -j8  157.98s user 5.96s system 580% cpu 28.240 total\r\n[  2%] Built target catch_main\r\n[100%] Built target json_unit\r\nInstall the project...\r\n-- Install configuration: \"\"\r\n-- Installing: /home/dan/git/json/test_install/include/nlohmann\r\n-- Installing: /home/dan/git/json/test_install/include/nlohmann/json.hpp\r\n-- Installing: /home/dan/git/json/test_install/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake\r\n-- Installing: /home/dan/git/json/test_install/lib/cmake/nlohmann_json/nlohmann_jsonConfigVersion.cmake\r\n-- Installing: /home/dan/git/json/test_install/lib/cmake/nlohmann_json/nlohmann_jsonTargets.cmake\r\ndan@kay ~/git/json/build (git)-[change_installed_cmake_include_path] % ctest -j2\r\nTest project /home/dan/git/json/build\r\n    Start 1: json_unit_default\r\n    Start 2: json_unit_all\r\n1/2 Test #1: json_unit_default ................   Passed   12.12 sec\r\n2/2 Test #2: json_unit_all ....................   Passed  223.00 sec\r\n\r\n100% tests passed, 0 tests failed out of 2\r\n\r\nTotal Test time (real) = 223.01 sec\r\nctest -j2  234.59s user 0.52s system 105% cpu 3:43.01 total\r\n```\r\n\r\n## Usage on an external project after installation\r\n#### CMakeLists.txt\r\n``` cmake\r\ncmake_minimum_required (VERSION 3.0)\r\nproject(test_json)\r\nfind_package(nlohmann_json CONFIG REQUIRED PATHS /home/dan/git/json/test_install/)\r\nadd_executable(main main.cpp)\r\ntarget_link_libraries(main nlohmann_json)\r\n```\r\n#### main.cpp\r\n```cpp\r\n#include <iostream>\r\n#include <nlohmann/json.hpp>\r\nint main (int argc, char** argv) {\r\n  nlohmann::json j2 = {\r\n    {\"pi\", 3.141},    \r\n  };\r\n  std::cout << j2 << std::endl;\r\n  return 0;\r\n}\r\n```\r\n\r\n\r\nI'm looking forward on comments and thoughts about the changes.\r\nMany thanks in advance\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/668", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/668/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/668/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/668/events", "html_url": "https://github.com/nlohmann/json/issues/668", "id": 246136650, "node_id": "MDU6SXNzdWUyNDYxMzY2NTA=", "number": 668, "title": "should't the cmake install target be to nlohman/json.hpp", "user": {"login": "dan-42", "id": 1706857, "node_id": "MDQ6VXNlcjE3MDY4NTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1706857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dan-42", "html_url": "https://github.com/dan-42", "followers_url": "https://api.github.com/users/dan-42/followers", "following_url": "https://api.github.com/users/dan-42/following{/other_user}", "gists_url": "https://api.github.com/users/dan-42/gists{/gist_id}", "starred_url": "https://api.github.com/users/dan-42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dan-42/subscriptions", "organizations_url": "https://api.github.com/users/dan-42/orgs", "repos_url": "https://api.github.com/users/dan-42/repos", "events_url": "https://api.github.com/users/dan-42/events{/privacy}", "received_events_url": "https://api.github.com/users/dan-42/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 7, "created_at": "2017-07-27T18:57:01Z", "updated_at": "2018-01-26T12:56:07Z", "closed_at": "2017-07-31T21:24:32Z", "author_association": "CONTRIBUTOR", "body": "dear @nlohmann and other developers\r\nfirst of all many thx for this awesome lib. The usage and simplicity is very cool and I and some former coworkers use it on many places in production and private projects.\r\n\r\nSo my question: is it on purpose that cmake exposes the ``` json.hpp ``` for include directly?\r\nafter all a ``` cmake install ``` installes the file into  ``` nlohmann/json.hpp ``` and the usage is also \r\ninside the namespace ``` nlohmann ```?\r\n\r\nso for the sake of consistancy in bigger projects and also to avoid name collisions with other libraries in package managers, it might be better to atleast for ``` cmake install ``` to expose the the include to ``` nlohmann/json.jpp ``` and users of package managers could easaly disdinguish between nlohmann_json, jsoncpp, and  so on.\r\n\r\n\r\n\r\nThe cause of my request is, that I wanted to update the cmake/hunter package which was still on V1.0.0rc. and integrating ```nlohman_json ``` with the current CMakeLists.txt would cause an inconsistency with the package name, the include and the namespace the user has to see.\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/667", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/667/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/667/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/667/events", "html_url": "https://github.com/nlohmann/json/issues/667", "id": 246068599, "node_id": "MDU6SXNzdWUyNDYwNjg1OTk=", "number": 667, "title": "deserialise from `std::vector`", "user": {"login": "mlund", "id": 3248398, "node_id": "MDQ6VXNlcjMyNDgzOTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3248398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlund", "html_url": "https://github.com/mlund", "followers_url": "https://api.github.com/users/mlund/followers", "following_url": "https://api.github.com/users/mlund/following{/other_user}", "gists_url": "https://api.github.com/users/mlund/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlund/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlund/subscriptions", "organizations_url": "https://api.github.com/users/mlund/orgs", "repos_url": "https://api.github.com/users/mlund/repos", "events_url": "https://api.github.com/users/mlund/events{/privacy}", "received_events_url": "https://api.github.com/users/mlund/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}, {"id": 344572510, "node_id": "MDU6TGFiZWwzNDQ1NzI1MTA=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20help%20needed", "name": "state: help needed", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-07-27T14:58:13Z", "updated_at": "2017-08-15T18:49:37Z", "closed_at": "2017-08-15T18:49:37Z", "author_association": "NONE", "body": "I'm trying to read into a vector, but run into the following problem:\r\n```c++\r\n#include <vector>\r\n#include <json.hpp>\r\nvoid from_json(const nlohmann::json &j, std::vector<int> &v) { /* something */ }\r\nint main() {\r\n    nlohmann::json j; \r\n    std::vector<int> v1 = j; // compiles\r\n    std::vector<int> v2;\r\n    v2 = j; // does not compile\r\n}\r\n```\r\nImplementing as `adl_serializer` does not seem to work. Any help is greatly appreciated!"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/666", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/666/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/666/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/666/events", "html_url": "https://github.com/nlohmann/json/pull/666", "id": 246067772, "node_id": "MDExOlB1bGxSZXF1ZXN0MTMyNzY5MzM1", "number": 666, "title": "enable_testing only if the JSON_BuildTests is ON", "user": {"login": "effolkronium", "id": 15274763, "node_id": "MDQ6VXNlcjE1Mjc0NzYz", "avatar_url": "https://avatars0.githubusercontent.com/u/15274763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effolkronium", "html_url": "https://github.com/effolkronium", "followers_url": "https://api.github.com/users/effolkronium/followers", "following_url": "https://api.github.com/users/effolkronium/following{/other_user}", "gists_url": "https://api.github.com/users/effolkronium/gists{/gist_id}", "starred_url": "https://api.github.com/users/effolkronium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effolkronium/subscriptions", "organizations_url": "https://api.github.com/users/effolkronium/orgs", "repos_url": "https://api.github.com/users/effolkronium/repos", "events_url": "https://api.github.com/users/effolkronium/events{/privacy}", "received_events_url": "https://api.github.com/users/effolkronium/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 2, "created_at": "2017-07-27T14:55:53Z", "updated_at": "2017-07-27T18:49:01Z", "closed_at": "2017-07-27T18:48:56Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/666", "html_url": "https://github.com/nlohmann/json/pull/666", "diff_url": "https://github.com/nlohmann/json/pull/666.diff", "patch_url": "https://github.com/nlohmann/json/pull/666.patch"}, "body": "Don't use what we don't need"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/665", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/665/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/665/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/665/events", "html_url": "https://github.com/nlohmann/json/issues/665", "id": 245939273, "node_id": "MDU6SXNzdWUyNDU5MzkyNzM=", "number": 665, "title": "How to iterate?", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-27T06:35:17Z", "updated_at": "2017-07-27T07:47:51Z", "closed_at": "2017-07-27T07:37:11Z", "author_association": "NONE", "body": "Hi, i couldn't figure out how to iterate over some simple json data like this:\r\n\r\n```\r\nstring sJson=\r\n\t\t\t\"{\"\r\n\t\t\t\t\"\\\"data\\\": [\"\r\n\t\t\t\t\t\"{\"\r\n\t\t\t\t\t\t\"\\\"id\\\": \\\"1000\\\"\"\r\n\t\t\t\t\t\"},\"\r\n\t\t\t\t\t\"{\"\r\n\t\t\t\t\t\t\"\\\"id\\\": \\\"1001\\\"\"\r\n\t\t\t\t\t\"},\"\r\n\t\t\t\t\t\"{\"\r\n\t\t\t\t\t\t\"\\\"id\\\": \\\"1002\\\"\"\r\n\t\t\t\t\t\"}\"\r\n\t\t\t\t\"]\"\r\n\t\t\t\"}\";\r\n```\r\n\r\nPlease could you provide an example how to print all the ids?\r\nIn addition not being able to forward declare your stuff is a big show stopper."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/664", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/664/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/664/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/664/events", "html_url": "https://github.com/nlohmann/json/issues/664", "id": 245085034, "node_id": "MDU6SXNzdWUyNDUwODUwMzQ=", "number": 664, "title": "could this json lib work on windows?", "user": {"login": "PinkGabriel", "id": 9349907, "node_id": "MDQ6VXNlcjkzNDk5MDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/9349907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PinkGabriel", "html_url": "https://github.com/PinkGabriel", "followers_url": "https://api.github.com/users/PinkGabriel/followers", "following_url": "https://api.github.com/users/PinkGabriel/following{/other_user}", "gists_url": "https://api.github.com/users/PinkGabriel/gists{/gist_id}", "starred_url": "https://api.github.com/users/PinkGabriel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PinkGabriel/subscriptions", "organizations_url": "https://api.github.com/users/PinkGabriel/orgs", "repos_url": "https://api.github.com/users/PinkGabriel/repos", "events_url": "https://api.github.com/users/PinkGabriel/events{/privacy}", "received_events_url": "https://api.github.com/users/PinkGabriel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-07-24T13:45:09Z", "updated_at": "2017-07-27T08:09:27Z", "closed_at": "2017-07-27T08:09:27Z", "author_association": "NONE", "body": "I download the zip on windows, and use cmake in minGW to generate .sln, then compile in VS2015, but I got more than 100 errors.\r\n\r\nI saw this in readme:\r\nThough it's 2016 already, the support for C++11 is still a bit sparse. Currently, the following compilers are known to work:\r\nGCC 4.9 - 7.1 (and possibly later)\r\nClang 3.4 - 3.9 (and possibly later)\r\nMicrosoft Visual C++ 2015 / Build Tools 14.0.25123.0 (and possibly later)\r\nMicrosoft Visual C++ 2017 / Build Tools 15.1.548.43366 (and possibly later)\r\n\r\nMy VS2015 version is community 14.0.25431\uff0cI'm not sure where the problem is.\r\nThanks~"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/663", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/663/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/663/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/663/events", "html_url": "https://github.com/nlohmann/json/pull/663", "id": 244937707, "node_id": "MDExOlB1bGxSZXF1ZXN0MTMxOTQ5Njcx", "number": 663, "title": "Support moving from rvalues in std::initializer_list", "user": {"login": "himikof", "id": 43698, "node_id": "MDQ6VXNlcjQzNjk4", "avatar_url": "https://avatars2.githubusercontent.com/u/43698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/himikof", "html_url": "https://github.com/himikof", "followers_url": "https://api.github.com/users/himikof/followers", "following_url": "https://api.github.com/users/himikof/following{/other_user}", "gists_url": "https://api.github.com/users/himikof/gists{/gist_id}", "starred_url": "https://api.github.com/users/himikof/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/himikof/subscriptions", "organizations_url": "https://api.github.com/users/himikof/orgs", "repos_url": "https://api.github.com/users/himikof/repos", "events_url": "https://api.github.com/users/himikof/events{/privacy}", "received_events_url": "https://api.github.com/users/himikof/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 9, "created_at": "2017-07-23T21:34:23Z", "updated_at": "2017-07-30T21:58:00Z", "closed_at": "2017-07-30T18:00:47Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/663", "html_url": "https://github.com/nlohmann/json/pull/663", "diff_url": "https://github.com/nlohmann/json/pull/663.diff", "patch_url": "https://github.com/nlohmann/json/pull/663.patch"}, "body": "This should fix the underlying problem of inefficient list initialization, which has led me to filing #657. \r\n\r\nBy using a rvalue-aware proxy type inside all uses of `std::initializer_list`, simple, obvious usages such as\r\n```\r\nreturn json {\r\n   {\"type\", \"Polygon\"},\r\n   {\"coordinates\", std::move(coordinates)},\r\n};\r\n\r\n```\r\nshould just work without calling `json` copy constructor even once.\r\n\r\nPossible downsides for this solution:\r\n- It can increase the number of **move** constructor calls in some situations. I think it is a good trade-off to make, because moving json values should be very cheap (and possibly optimized into nothing).\r\n- It is, strictly speaking, a breaking interface change, but it is only limited to somehow using an explicitly typed `std::initializer_list` values, which is not common in C++. All normal usage should remain unaffected (just a bit faster).\r\n- It is certainly a hack :smiley:"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/662", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/662/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/662/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/662/events", "html_url": "https://github.com/nlohmann/json/issues/662", "id": 244913078, "node_id": "MDU6SXNzdWUyNDQ5MTMwNzg=", "number": 662, "title": "How does from_json work?", "user": {"login": "itviewer", "id": 1397840, "node_id": "MDQ6VXNlcjEzOTc4NDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1397840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/itviewer", "html_url": "https://github.com/itviewer", "followers_url": "https://api.github.com/users/itviewer/followers", "following_url": "https://api.github.com/users/itviewer/following{/other_user}", "gists_url": "https://api.github.com/users/itviewer/gists{/gist_id}", "starred_url": "https://api.github.com/users/itviewer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/itviewer/subscriptions", "organizations_url": "https://api.github.com/users/itviewer/orgs", "repos_url": "https://api.github.com/users/itviewer/repos", "events_url": "https://api.github.com/users/itviewer/events{/privacy}", "received_events_url": "https://api.github.com/users/itviewer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-23T14:18:47Z", "updated_at": "2017-07-25T08:40:48Z", "closed_at": "2017-07-25T08:40:48Z", "author_association": "NONE", "body": "Sorry, I don't know if the question is right here, but I really needs help.\r\nI need to convert json str to QString, and I defines the from_json function,\r\n```cpp\r\nvoid from_json(const json& j, QString& str)\r\n{\r\n    str = QString::fromStdString(j.get<std::string>());\r\n}\r\n```\r\n`json object = {{\"string\",\"string\"}};`\r\n\r\nthen I code this ,\r\n`QString str = object[\"string\"];`\r\nit works no problem.but when I code this,\r\n```\r\nQString str;\r\nstr = object[\"string\"];\r\n```\r\nthen the compiler do not know how to compile\uff0cerror with\r\n`Error: C2593: \"operator =\" is not clear`\r\n\r\nDo non-built-in variables can not be pre-defined? (I tried _int_ and _double_ type\uff0cit can work\uff0c)"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/661", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/661/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/661/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/661/events", "html_url": "https://github.com/nlohmann/json/issues/661", "id": 244638987, "node_id": "MDU6SXNzdWUyNDQ2Mzg5ODc=", "number": 661, "title": "insert(or merge) object should replace same key , not ignore", "user": {"login": "itviewer", "id": 1397840, "node_id": "MDQ6VXNlcjEzOTc4NDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1397840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/itviewer", "html_url": "https://github.com/itviewer", "followers_url": "https://api.github.com/users/itviewer/followers", "following_url": "https://api.github.com/users/itviewer/following{/other_user}", "gists_url": "https://api.github.com/users/itviewer/gists{/gist_id}", "starred_url": "https://api.github.com/users/itviewer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/itviewer/subscriptions", "organizations_url": "https://api.github.com/users/itviewer/orgs", "repos_url": "https://api.github.com/users/itviewer/repos", "events_url": "https://api.github.com/users/itviewer/events{/privacy}", "received_events_url": "https://api.github.com/users/itviewer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 12, "created_at": "2017-07-21T11:12:42Z", "updated_at": "2017-08-16T05:40:11Z", "closed_at": "2017-08-16T05:40:11Z", "author_association": "NONE", "body": "```cpp\r\njson j1 = {{\"one\", 123}, {\"two\", 123}};\r\njson j2 = {{\"one\", 456}};\r\nj1.insert(j2.begin(), j2.end());\r\n```\r\n\r\nAs key \"one\" has exist, now the result j1 is still {{\"one\", 123}, {\"two\", 123}}\r\nwhile I think more commonly used logic is replace the same key\uff0cthat is the result should be {{\"one\", 456}, {\"two\", 123}}\r\n\r\nThanks"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/660", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/660/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/660/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/660/events", "html_url": "https://github.com/nlohmann/json/issues/660", "id": 244358560, "node_id": "MDU6SXNzdWUyNDQzNTg1NjA=", "number": 660, "title": "Why is an object ordering values by Alphabetical Order? ", "user": {"login": "gDev95", "id": 14252400, "node_id": "MDQ6VXNlcjE0MjUyNDAw", "avatar_url": "https://avatars1.githubusercontent.com/u/14252400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gDev95", "html_url": "https://github.com/gDev95", "followers_url": "https://api.github.com/users/gDev95/followers", "following_url": "https://api.github.com/users/gDev95/following{/other_user}", "gists_url": "https://api.github.com/users/gDev95/gists{/gist_id}", "starred_url": "https://api.github.com/users/gDev95/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gDev95/subscriptions", "organizations_url": "https://api.github.com/users/gDev95/orgs", "repos_url": "https://api.github.com/users/gDev95/repos", "events_url": "https://api.github.com/users/gDev95/events{/privacy}", "received_events_url": "https://api.github.com/users/gDev95/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}, {"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-07-20T13:14:59Z", "updated_at": "2017-09-06T15:42:11Z", "closed_at": "2017-07-20T13:38:56Z", "author_association": "NONE", "body": "Hi I am experiencing some weird behaviour I cannot really get behind why it does the following.\r\nImagine you want to have following json object: \r\n```\r\n{\r\n\t\"result_parameters\":{\r\n\t\t\"Category\": 1,\r\n\t\t\"Username\": \"Warrior11\",\r\n\t\t\"First_Name\": \"Max\",\r\n\t\t\"Date_Signed_Up\": [1,1,2017]\r\n\t}\r\n}\r\n```\r\nWhat I did was:\r\n\r\n```\r\nnlohmann::json j;\r\nj[\"result_parameter\"][\"Category\"] = 1;\r\nj[\"result_parameter\"][\"Username\"] =  \"Warrior11\";\r\nj[\"result_parameter\"][\"First_Name\"] = \"Max\";\r\nj[\"result_parameter\"][\"Date_Signed_Up\"] = [1,1,2017];\r\n```\r\nWhen I print this ( `cout << j.dump<< endl;` ) I get following output:\r\n```\r\n{\"result_parameter\":{\"Category\":1,\"Date_Signed_Up\":[1,1,2017],\"First_Name\":\"Max\",\"Username\":\"Warrior11\"}}\r\n```\r\nThe order is messed up, how come? "}, {"url": "https://api.github.com/repos/nlohmann/json/issues/659", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/659/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/659/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/659/events", "html_url": "https://github.com/nlohmann/json/issues/659", "id": 243827417, "node_id": "MDU6SXNzdWUyNDM4Mjc0MTc=", "number": 659, "title": "Parse method doesn't handle newlines.", "user": {"login": "jaslo", "id": 1811564, "node_id": "MDQ6VXNlcjE4MTE1NjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1811564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaslo", "html_url": "https://github.com/jaslo", "followers_url": "https://api.github.com/users/jaslo/followers", "following_url": "https://api.github.com/users/jaslo/following{/other_user}", "gists_url": "https://api.github.com/users/jaslo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaslo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaslo/subscriptions", "organizations_url": "https://api.github.com/users/jaslo/orgs", "repos_url": "https://api.github.com/users/jaslo/repos", "events_url": "https://api.github.com/users/jaslo/events{/privacy}", "received_events_url": "https://api.github.com/users/jaslo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2017-07-18T19:35:50Z", "updated_at": "2017-07-26T05:37:37Z", "closed_at": "2017-07-25T22:37:54Z", "author_association": "NONE", "body": "JSON strings containing newlines don't parse correctly with the ::parse method!\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/658", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/658/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/658/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/658/events", "html_url": "https://github.com/nlohmann/json/issues/658", "id": 243273909, "node_id": "MDU6SXNzdWUyNDMyNzM5MDk=", "number": 658, "title": "Compilation \"note\" on GCC 6 ARM", "user": {"login": "pn1k", "id": 10667472, "node_id": "MDQ6VXNlcjEwNjY3NDcy", "avatar_url": "https://avatars0.githubusercontent.com/u/10667472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pn1k", "html_url": "https://github.com/pn1k", "followers_url": "https://api.github.com/users/pn1k/followers", "following_url": "https://api.github.com/users/pn1k/following{/other_user}", "gists_url": "https://api.github.com/users/pn1k/gists{/gist_id}", "starred_url": "https://api.github.com/users/pn1k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pn1k/subscriptions", "organizations_url": "https://api.github.com/users/pn1k/orgs", "repos_url": "https://api.github.com/users/pn1k/repos", "events_url": "https://api.github.com/users/pn1k/events{/privacy}", "received_events_url": "https://api.github.com/users/pn1k/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 729086061, "node_id": "MDU6TGFiZWw3MjkwODYwNjE=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20arm", "name": "platform: arm", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-16T23:24:31Z", "updated_at": "2017-10-24T06:22:59Z", "closed_at": "2017-07-17T08:29:04Z", "author_association": "NONE", "body": "When compiling this code:\r\n```C++\r\n#include <iostream>\r\n#include <nlohmann/json.hpp>\r\n\r\nusing json = nlohmann::json;\r\n\r\nint main(int argc, char *argv[]) {\r\n  json o=json::parse(\"{\\\"foo\\\":\\\"bar\\\",\\\"list\\\":{\\\"100\\\":{\\\"l100\\\":100},\\\"200\\\":{\\\"l200\\\":200}}}\") ;\r\n\r\n  json& l=o[\"list\"];\r\n\r\n  for (json::iterator it = l.begin(); it != l.end(); ++it) {\r\n    std::cout << it.key() << \" : \" << it.value() << \"\\n\";\r\n  }\r\n\r\n}\r\n```\r\n\r\ncompiler report \"note\":\r\n```\r\nIn file included from /usr/include/c++/6/map:60:0,\r\n                 from /usr/local/include/nlohmann/json.hpp:50,\r\n                 from test.cpp:2:\r\n/usr/include/c++/6/bits/stl_tree.h: In member function \u2018std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_hint_unique_pos(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator, const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, nlohmann::basic_json<> >; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, nlohmann::basic_json<> > >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, nlohmann::basic_json<> > >]\u2019:\r\n/usr/include/c++/6/bits/stl_tree.h:1928:5: note: parameter passing for argument of type \u2018std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, nlohmann::basic_json<> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, nlohmann::basic_json<> > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, nlohmann::basic_json<> > > >::const_iterator {aka std::_Rb_tree_const_iterator<std::pair<const std::__cxx11::basic_string<char>, nlohmann::basic_json<> > >}\u2019 will change in GCC 7.1\r\n     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::\r\n     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/657", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/657/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/657/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/657/events", "html_url": "https://github.com/nlohmann/json/issues/657", "id": 243062146, "node_id": "MDU6SXNzdWUyNDMwNjIxNDY=", "number": 657, "title": "Adding additional push_back/operator+= rvalue overloads for JSON object", "user": {"login": "himikof", "id": 43698, "node_id": "MDQ6VXNlcjQzNjk4", "avatar_url": "https://avatars2.githubusercontent.com/u/43698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/himikof", "html_url": "https://github.com/himikof", "followers_url": "https://api.github.com/users/himikof/followers", "following_url": "https://api.github.com/users/himikof/following{/other_user}", "gists_url": "https://api.github.com/users/himikof/gists{/gist_id}", "starred_url": "https://api.github.com/users/himikof/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/himikof/subscriptions", "organizations_url": "https://api.github.com/users/himikof/orgs", "repos_url": "https://api.github.com/users/himikof/repos", "events_url": "https://api.github.com/users/himikof/events{/privacy}", "received_events_url": "https://api.github.com/users/himikof/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-14T17:36:41Z", "updated_at": "2017-07-31T05:14:02Z", "closed_at": "2017-07-30T21:57:07Z", "author_association": "CONTRIBUTOR", "body": "I propose adding the following three overloads to `basic_json`:\r\n\r\n    void push_back(typename object_t::value_type&& val);\r\n    value_type& operator+=(typename object_t::value_type&& val) &;\r\n    value_type&& operator+=(typename object_t::value_type&& val) &&;\r\n\r\nThese are symmetric to existing `const typename object_t::value_type&` overloads, \r\nthey bring the interface more in line with `std::map` (there are both `insert(value_type const&)` and `insert(value_type &&)` methods). The third overload allows rvalue json object to remain a temporary after `operator+=`.\r\n\r\nMost importantly, these should allow for this simple code perform without copying:\r\n\r\n    return json {\r\n       {\"type\", \"Polygon\"},\r\n    } += json::object_t::value_type {\"coordinates\", std::move(coordinates)};\r\n\r\nPlease note that this code is not equivalent to\r\n\r\n    return json {\r\n       {\"type\", \"Polygon\"},\r\n       {\"coordinates\", std::move(coordinates)},\r\n    };\r\n\r\nbecause sadly in C++ `std::initializer_list` breaks perfect forwarding, and (possibly large) subobject is silently copied in this case.\r\n\r\nWithout these overloads, I think that this could only be expressed (without runtime overhead) by\r\n\r\n    json result = {\r\n       {\"type\", \"Polygon\"},\r\n    };\r\n    result.emplace(\"coordinates\", std::move(coordinates));\r\n    return result;\r\n\r\nwhich is not very convenient.\r\n\r\nAnother alternative is to provide an explicit chainable method instead of (ab-)using `operator+=`. This could lead to cleaner code like:\r\n\r\n    return json {\r\n       {\"type\", \"Polygon\"},\r\n    }.method_name(\"coordinates\", std::move(coordinates));\r\n\r\nThis method should return an rvalue reference when called on an rvalue object, too."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/656", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/656/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/656/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/656/events", "html_url": "https://github.com/nlohmann/json/issues/656", "id": 242491901, "node_id": "MDU6SXNzdWUyNDI0OTE5MDE=", "number": 656, "title": "dump's parameter \"ensure_ascii\" creates too long sequences", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 5, "created_at": "2017-07-12T19:39:05Z", "updated_at": "2017-07-18T21:14:37Z", "closed_at": "2017-07-18T21:14:37Z", "author_association": "OWNER", "body": "I detected a problem in the code of PR #654:\r\n\r\nThe code seems to created too long `\\uxxxx` sequences. Take the [`\u20ac` sign](http://www.fileformat.info/info/unicode/char/20ac/index.htm) for instance. It is U+20AC and should be encoded as string `\"\\u20ac\"`. The current code encodes it as `\"\\u00e2\\u0082\\u00ac\"`. This is incorrect, as this does not roundtrip.\r\n\r\nExample:\r\n\r\n```cpp\r\n#include <iostream>\r\n#include <fstream>\r\n#include \"json.hpp\"\r\n\r\nusing json = nlohmann::json;\r\n\r\nint main() {\r\n    json j1 = u8\"\u20ac\";\r\n    std::cout << j1.dump(0, ' ', false) << std::endl;\r\n    std::cout << j1.dump(0, ' ', true) << std::endl;\r\n    \r\n    json j2 = json::parse(\"\\\"\\\\u20ac\\\"\");\r\n    std::cout << j2.dump(0, ' ', false) << std::endl;\r\n    std::cout << j2.dump(0, ' ', true) << std::endl;\r\n    \r\n    json j3 = json::parse(j1.dump(0, ' ', true));\r\n    std::cout << j3.dump(0, ' ', false) << std::endl;\r\n    std::cout << j3.dump(0, ' ', true) << std::endl;\r\n}\r\n```\r\n\r\nOutput:\r\n\r\n```\r\n\"\u20ac\"\r\n\"\\u00e2\\u0082\\u00ac\"\r\n\"\u20ac\"\r\n\"\\u00e2\\u0082\\u00ac\"\r\n\"\u00e2\u0082\u00ac\"\r\n\"\\u00c3\\u00a2\\u00c2\\u0082\\u00c2\\u00ac\"\r\n```\r\n\r\nExpected output:\r\n\r\n```\r\n\"\u20ac\"\r\n\"\\u20ac\"\r\n\"\u20ac\"\r\n\"\\u20ac\"\r\n\"\u20ac\"\r\n\"\\u20ac\"\r\n```\r\n\r\nSorry for not detecting this earlier. The provided test case was correct as it coped with Emojis which created longer sequences anyway."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/655", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/655/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/655/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/655/events", "html_url": "https://github.com/nlohmann/json/issues/655", "id": 242313306, "node_id": "MDU6SXNzdWUyNDIzMTMzMDY=", "number": 655, "title": "Question: parsing `void *`", "user": {"login": "urban-1", "id": 796204, "node_id": "MDQ6VXNlcjc5NjIwNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/796204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urban-1", "html_url": "https://github.com/urban-1", "followers_url": "https://api.github.com/users/urban-1/followers", "following_url": "https://api.github.com/users/urban-1/following{/other_user}", "gists_url": "https://api.github.com/users/urban-1/gists{/gist_id}", "starred_url": "https://api.github.com/users/urban-1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urban-1/subscriptions", "organizations_url": "https://api.github.com/users/urban-1/orgs", "repos_url": "https://api.github.com/users/urban-1/repos", "events_url": "https://api.github.com/users/urban-1/events{/privacy}", "received_events_url": "https://api.github.com/users/urban-1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-07-12T09:21:16Z", "updated_at": "2017-07-13T09:19:03Z", "closed_at": "2017-07-13T09:19:03Z", "author_association": "NONE", "body": "Hi all,\r\n\r\nQuick question: I am using `librdkafka` to receive messages whose payload is JSON string. The library returns the payload in a **non-null** terminated `void*` and provides a `message->len()` to indicate how many characters/bytes are valid. Is it possible to call something like: `json::parse(void*, const size_t&)`?\r\n\r\nI see that the parser supports `char*` type but it overruns the string's length causing an overflow ...\r\n\r\nThe solutions I see are:\r\n\r\n1. Provide a `json::parse(void*, const size_t&)` signature maybe by extending/overloading `parse(T(&) array[N] ...)`\r\n2. Enable the parser to detect the closing `}` character and stop\r\n\r\nAt the moment I am using `strncpy` to populate a pre-allocated buffer and terminate it properly before passing it to `parse`. This is an extra copy operation which could be avoided...\r\n\r\nMany thanks for this awesome library - let me know what you think,\r\n\r\nAndreas\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/654", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/654/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/654/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/654/events", "html_url": "https://github.com/nlohmann/json/pull/654", "id": 242131308, "node_id": "MDExOlB1bGxSZXF1ZXN0MTI5OTY3OTAw", "number": 654, "title": "add ensure_ascii parameter to dump. #330", "user": {"login": "ryanjmulder", "id": 3130647, "node_id": "MDQ6VXNlcjMxMzA2NDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3130647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryanjmulder", "html_url": "https://github.com/ryanjmulder", "followers_url": "https://api.github.com/users/ryanjmulder/followers", "following_url": "https://api.github.com/users/ryanjmulder/following{/other_user}", "gists_url": "https://api.github.com/users/ryanjmulder/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryanjmulder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryanjmulder/subscriptions", "organizations_url": "https://api.github.com/users/ryanjmulder/orgs", "repos_url": "https://api.github.com/users/ryanjmulder/repos", "events_url": "https://api.github.com/users/ryanjmulder/events{/privacy}", "received_events_url": "https://api.github.com/users/ryanjmulder/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 7, "created_at": "2017-07-11T17:51:55Z", "updated_at": "2017-07-12T19:41:40Z", "closed_at": "2017-07-12T05:58:46Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/654", "html_url": "https://github.com/nlohmann/json/pull/654", "diff_url": "https://github.com/nlohmann/json/pull/654.diff", "patch_url": "https://github.com/nlohmann/json/pull/654.patch"}, "body": ""}, {"url": "https://api.github.com/repos/nlohmann/json/issues/653", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/653/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/653/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/653/events", "html_url": "https://github.com/nlohmann/json/issues/653", "id": 242115540, "node_id": "MDU6SXNzdWUyNDIxMTU1NDA=", "number": 653, "title": "how should I check a string is valid JSON string ?", "user": {"login": "zhishupp", "id": 6071453, "node_id": "MDQ6VXNlcjYwNzE0NTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6071453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhishupp", "html_url": "https://github.com/zhishupp", "followers_url": "https://api.github.com/users/zhishupp/followers", "following_url": "https://api.github.com/users/zhishupp/following{/other_user}", "gists_url": "https://api.github.com/users/zhishupp/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhishupp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhishupp/subscriptions", "organizations_url": "https://api.github.com/users/zhishupp/orgs", "repos_url": "https://api.github.com/users/zhishupp/repos", "events_url": "https://api.github.com/users/zhishupp/events{/privacy}", "received_events_url": "https://api.github.com/users/zhishupp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-11T16:54:43Z", "updated_at": "2017-07-11T18:19:24Z", "closed_at": "2017-07-11T18:19:24Z", "author_association": "NONE", "body": "I read all examples, but I didnt find a way to check a string is valid JSON string.\r\nIs there an API to achieve this ? or I have to use \"try catch\" to check exceptions ?\r\nthanks ^_^"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/652", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/652/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/652/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/652/events", "html_url": "https://github.com/nlohmann/json/pull/652", "id": 242058819, "node_id": "MDExOlB1bGxSZXF1ZXN0MTI5OTE1NjQx", "number": 652, "title": "Rename BuildTests to JSON_BuildTests", "user": {"login": "olegendo", "id": 1380209, "node_id": "MDQ6VXNlcjEzODAyMDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1380209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olegendo", "html_url": "https://github.com/olegendo", "followers_url": "https://api.github.com/users/olegendo/followers", "following_url": "https://api.github.com/users/olegendo/following{/other_user}", "gists_url": "https://api.github.com/users/olegendo/gists{/gist_id}", "starred_url": "https://api.github.com/users/olegendo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olegendo/subscriptions", "organizations_url": "https://api.github.com/users/olegendo/orgs", "repos_url": "https://api.github.com/users/olegendo/repos", "events_url": "https://api.github.com/users/olegendo/events{/privacy}", "received_events_url": "https://api.github.com/users/olegendo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 5, "created_at": "2017-07-11T14:01:47Z", "updated_at": "2017-07-15T09:39:28Z", "closed_at": "2017-07-15T09:39:27Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/652", "html_url": "https://github.com/nlohmann/json/pull/652", "diff_url": "https://github.com/nlohmann/json/pull/652.diff", "patch_url": "https://github.com/nlohmann/json/pull/652.patch"}, "body": "This avoids potential conflicts with other libraries when the library is\r\nbuilt from source and included in a bigger cmake build."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/651", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/651/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/651/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/651/events", "html_url": "https://github.com/nlohmann/json/issues/651", "id": 241794026, "node_id": "MDU6SXNzdWUyNDE3OTQwMjY=", "number": 651, "title": "Question: thread safety of read only accesses", "user": {"login": "kimwalisch", "id": 4656219, "node_id": "MDQ6VXNlcjQ2NTYyMTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4656219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kimwalisch", "html_url": "https://github.com/kimwalisch", "followers_url": "https://api.github.com/users/kimwalisch/followers", "following_url": "https://api.github.com/users/kimwalisch/following{/other_user}", "gists_url": "https://api.github.com/users/kimwalisch/gists{/gist_id}", "starred_url": "https://api.github.com/users/kimwalisch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kimwalisch/subscriptions", "organizations_url": "https://api.github.com/users/kimwalisch/orgs", "repos_url": "https://api.github.com/users/kimwalisch/repos", "events_url": "https://api.github.com/users/kimwalisch/events{/privacy}", "received_events_url": "https://api.github.com/users/kimwalisch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-07-10T17:51:59Z", "updated_at": "2017-07-12T19:35:32Z", "closed_at": "2017-07-10T18:26:54Z", "author_association": "NONE", "body": "Hi,\r\n\r\nAre ```nlohmann::json``` objects thread safe for read only operations? E.g. assuming that the ```json``` object is not modified anymore after ```load_json()```, can I safely query the ```json``` object from multiple threads as in the example below?\r\n\r\n```C++\r\n// single threaded\r\nauto json = load_json();\r\n\r\n#pragma omp parallel for\r\nfor (int i = 0; i < threads; i++)\r\n{\r\n    // multi-threaded read only accesses\r\n    double seconds = json[\"S2_easy\"][\"seconds\"];\r\n    int count = json[\"S2_easy\"].count(\"s2_easy\");\r\n}\r\n```\r\n\r\nThanks!"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/650", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/650/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/650/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/650/events", "html_url": "https://github.com/nlohmann/json/pull/650", "id": 241504948, "node_id": "MDExOlB1bGxSZXF1ZXN0MTI5NTUzOTAw", "number": 650, "title": "Don't include <iostream>, use std::make_shared", "user": {"login": "olegendo", "id": 1380209, "node_id": "MDQ6VXNlcjEzODAyMDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1380209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olegendo", "html_url": "https://github.com/olegendo", "followers_url": "https://api.github.com/users/olegendo/followers", "following_url": "https://api.github.com/users/olegendo/following{/other_user}", "gists_url": "https://api.github.com/users/olegendo/gists{/gist_id}", "starred_url": "https://api.github.com/users/olegendo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olegendo/subscriptions", "organizations_url": "https://api.github.com/users/olegendo/orgs", "repos_url": "https://api.github.com/users/olegendo/repos", "events_url": "https://api.github.com/users/olegendo/events{/privacy}", "received_events_url": "https://api.github.com/users/olegendo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 12, "created_at": "2017-07-09T06:41:06Z", "updated_at": "2017-07-12T16:03:50Z", "closed_at": "2017-07-09T09:12:47Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/650", "html_url": "https://github.com/nlohmann/json/pull/650", "diff_url": "https://github.com/nlohmann/json/pull/650.diff", "patch_url": "https://github.com/nlohmann/json/pull/650.patch"}, "body": "I've been evaluating this library for usage in an embedded software that runs on an MCU with on-chip flash.  Memory on these devices is a premium.  Just including the \\<iostream> file, makes the ROM image grow by about 200 KByte, and I've got only about 768 KByte in total.  This is a known problem of \\<iostream>.  One workaround is not to include it in (library) header files, but only in source files where it is actually needed.  Header files should include \\<iosfwd> instead.\r\n\r\nWhile skimming over the code, I've also spotted some opportunities to use std::make_shared.\r\n\r\nTested with 'make' and 'make test' on GCC 5.4.0 x86_64-linux-gnu.\r\nAlso briefly checked that the library can be used without including \\<iostream> on GCC 6.4.1 rx-elf."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/649", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/649/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/649/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/649/events", "html_url": "https://github.com/nlohmann/json/issues/649", "id": 241157161, "node_id": "MDU6SXNzdWUyNDExNTcxNjE=", "number": 649, "title": "Eclipse: Method 'size' could not be resolved", "user": {"login": "k22jung", "id": 14689505, "node_id": "MDQ6VXNlcjE0Njg5NTA1", "avatar_url": "https://avatars2.githubusercontent.com/u/14689505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/k22jung", "html_url": "https://github.com/k22jung", "followers_url": "https://api.github.com/users/k22jung/followers", "following_url": "https://api.github.com/users/k22jung/following{/other_user}", "gists_url": "https://api.github.com/users/k22jung/gists{/gist_id}", "starred_url": "https://api.github.com/users/k22jung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/k22jung/subscriptions", "organizations_url": "https://api.github.com/users/k22jung/orgs", "repos_url": "https://api.github.com/users/k22jung/repos", "events_url": "https://api.github.com/users/k22jung/events{/privacy}", "received_events_url": "https://api.github.com/users/k22jung/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-07-07T04:54:07Z", "updated_at": "2017-07-11T05:58:56Z", "closed_at": "2017-07-11T05:58:50Z", "author_association": "NONE", "body": "I'm running Eclipse Oxygen on Linux and I followed all the instructions for Integration into my C++ project. When I try to call any function like `j.size()` or `j.parse()` on my `json j;` object, Eclipse keeps saying \"Method '`function_name`' could not be resolved\" and it shows an error. Creating a `json` object and accessing its contents works perfectly fine, it's just `size()`. However it doesn't seem building with g++ causes any errors to occur. Are there any known issues with Eclipse and json.hpp? I'm using json v2.1.1."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/648", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/648/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/648/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/648/events", "html_url": "https://github.com/nlohmann/json/issues/648", "id": 240884935, "node_id": "MDU6SXNzdWUyNDA4ODQ5MzU=", "number": 648, "title": "Update/Add object fields", "user": {"login": "definename", "id": 9870947, "node_id": "MDQ6VXNlcjk4NzA5NDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/9870947?v=4", "gravatar_id": "", "url": "https://api.github.com/users/definename", "html_url": "https://github.com/definename", "followers_url": "https://api.github.com/users/definename/followers", "following_url": "https://api.github.com/users/definename/following{/other_user}", "gists_url": "https://api.github.com/users/definename/gists{/gist_id}", "starred_url": "https://api.github.com/users/definename/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/definename/subscriptions", "organizations_url": "https://api.github.com/users/definename/orgs", "repos_url": "https://api.github.com/users/definename/repos", "events_url": "https://api.github.com/users/definename/events{/privacy}", "received_events_url": "https://api.github.com/users/definename/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-06T08:44:05Z", "updated_at": "2017-07-06T12:36:43Z", "closed_at": "2017-07-06T09:21:02Z", "author_association": "NONE", "body": "Hi,\r\nIs it possible to modify array `address` without rewriting existing fields, for example I have this `json`:\r\n`\tnlohmann::json j = {\r\n\t\t{ \"name\", \"oleg\" },\r\n\t\t{ \"address\",\r\n\t\t\t{ \"city\", \"kharkiv\" }\r\n\t\t}\r\n\t};\r\n`\r\n\r\nAnd I need to add several fields to array `address`:\r\n`\tj[\"address\"] = nlohmann::json\r\n\t{\r\n\t\t{ \"country\", \"ukraine\"},\r\n\t\t{ \"street\", \"svobody\"}\r\n\t};\r\n`\r\nThis variant rewrite array `address` and I lose data which were in it before I added new one.\r\n\r\nSo my question is: Is it possible to add data to existing `array` without loss existing one. Thanks."}]