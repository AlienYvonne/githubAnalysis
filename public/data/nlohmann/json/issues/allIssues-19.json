[{"url": "https://api.github.com/repos/nlohmann/json/issues/647", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/647/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/647/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/647/events", "html_url": "https://github.com/nlohmann/json/issues/647", "id": 240642542, "node_id": "MDU6SXNzdWUyNDA2NDI1NDI=", "number": 647, "title": "No exception raised for Out Of Range input of numbers", "user": {"login": "MichaelHuth", "id": 29093275, "node_id": "MDQ6VXNlcjI5MDkzMjc1", "avatar_url": "https://avatars3.githubusercontent.com/u/29093275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MichaelHuth", "html_url": "https://github.com/MichaelHuth", "followers_url": "https://api.github.com/users/MichaelHuth/followers", "following_url": "https://api.github.com/users/MichaelHuth/following{/other_user}", "gists_url": "https://api.github.com/users/MichaelHuth/gists{/gist_id}", "starred_url": "https://api.github.com/users/MichaelHuth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MichaelHuth/subscriptions", "organizations_url": "https://api.github.com/users/MichaelHuth/orgs", "repos_url": "https://api.github.com/users/MichaelHuth/repos", "events_url": "https://api.github.com/users/MichaelHuth/events{/privacy}", "received_events_url": "https://api.github.com/users/MichaelHuth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-07-05T12:59:14Z", "updated_at": "2017-12-04T21:18:33Z", "closed_at": "2017-07-18T21:14:48Z", "author_association": "NONE", "body": "Hello,\r\n\r\nif one has values that are beyond the range of the target type no exception is raised.\r\n\r\ne.g. this code with a value of UINT64_MAX+1 and 10000 for the target of a signed char outputs 0 and 16 respectively.\r\n\r\n```cpp\r\n\tjson jtest = json::parse(\"{\\\"value\\\" : 18446744073709551617}\");\r\n\tstd::cout << std::to_string(jtest[\"value\"].get<unsigned long long int>()) << \"\\n\";\r\n\tjtest = json::parse(\"{\\\"value\\\" : 10000}\");\r\n\tstd::cout << std::to_string(jtest[\"value\"].get<signed char>()) << \"\\n\";\r\n```\r\n\r\nBoth cases should throw an exception.\r\n\r\nBest regards."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/646", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/646/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/646/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/646/events", "html_url": "https://github.com/nlohmann/json/issues/646", "id": 240401843, "node_id": "MDU6SXNzdWUyNDA0MDE4NDM=", "number": 646, "title": "Package Name", "user": {"login": "SylvainCorlay", "id": 2397974, "node_id": "MDQ6VXNlcjIzOTc5NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SylvainCorlay", "html_url": "https://github.com/SylvainCorlay", "followers_url": "https://api.github.com/users/SylvainCorlay/followers", "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}", "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}", "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions", "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs", "repos_url": "https://api.github.com/users/SylvainCorlay/repos", "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}", "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2017-07-04T12:08:37Z", "updated_at": "2017-07-09T12:45:03Z", "closed_at": "2017-07-09T12:45:03Z", "author_association": "NONE", "body": "I am interested in making a package for the conda package manager (on conda-forge).\r\n\r\nWhat would you like the name of the package to be?\r\n\r\nThe conan package name is `jsonformoderncpp`. The cmake project name is `nlohmann_json`."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/645", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/645/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/645/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/645/events", "html_url": "https://github.com/nlohmann/json/issues/645", "id": 240081290, "node_id": "MDU6SXNzdWUyNDAwODEyOTA=", "number": 645, "title": "What is the meaning of operator[](T* key)", "user": {"login": "scinart", "id": 4526363, "node_id": "MDQ6VXNlcjQ1MjYzNjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/4526363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scinart", "html_url": "https://github.com/scinart", "followers_url": "https://api.github.com/users/scinart/followers", "following_url": "https://api.github.com/users/scinart/following{/other_user}", "gists_url": "https://api.github.com/users/scinart/gists{/gist_id}", "starred_url": "https://api.github.com/users/scinart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scinart/subscriptions", "organizations_url": "https://api.github.com/users/scinart/orgs", "repos_url": "https://api.github.com/users/scinart/repos", "events_url": "https://api.github.com/users/scinart/events{/privacy}", "received_events_url": "https://api.github.com/users/scinart/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 3, "created_at": "2017-07-03T06:50:15Z", "updated_at": "2017-07-08T14:35:46Z", "closed_at": "2017-07-08T14:35:46Z", "author_association": "NONE", "body": "What's the meaning of the following code?\r\n\r\nabbreviated version from json.hpp:\r\n\r\n```c++\r\ntemplate<typename T, std::size_t n>\r\nreference operator[](T * (&key)[n])\r\n{\r\n    return operator[](static_cast<const T>(key));\r\n}\r\ntemplate<typename T>\r\nreference operator[](T* key)\r\n{\r\n    return m_value.object->operator[](key);\r\n}\r\n```\r\nand const_reference version of them.\r\n\r\nNormally m_value.object is an std::map and key is an std::string. But the code must have been placed for a reason. I just want to know why."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/644", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/644/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/644/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/644/events", "html_url": "https://github.com/nlohmann/json/issues/644", "id": 240035860, "node_id": "MDU6SXNzdWUyNDAwMzU4NjA=", "number": 644, "title": "Which is the correct way to json objects as parameters to functions?", "user": {"login": "pedrozan", "id": 19186959, "node_id": "MDQ6VXNlcjE5MTg2OTU5", "avatar_url": "https://avatars2.githubusercontent.com/u/19186959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pedrozan", "html_url": "https://github.com/pedrozan", "followers_url": "https://api.github.com/users/pedrozan/followers", "following_url": "https://api.github.com/users/pedrozan/following{/other_user}", "gists_url": "https://api.github.com/users/pedrozan/gists{/gist_id}", "starred_url": "https://api.github.com/users/pedrozan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pedrozan/subscriptions", "organizations_url": "https://api.github.com/users/pedrozan/orgs", "repos_url": "https://api.github.com/users/pedrozan/repos", "events_url": "https://api.github.com/users/pedrozan/events{/privacy}", "received_events_url": "https://api.github.com/users/pedrozan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-02T21:31:59Z", "updated_at": "2017-07-09T10:32:37Z", "closed_at": "2017-07-09T10:32:37Z", "author_association": "NONE", "body": "I'm trying to pass a JSON object to a function, but despite all my attempts I always get a segmentation failure. Which is the correct way to do this?\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/643", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/643/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/643/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/643/events", "html_url": "https://github.com/nlohmann/json/pull/643", "id": 239967019, "node_id": "MDExOlB1bGxSZXF1ZXN0MTI4NDk3OTQ4", "number": 643, "title": "Refacto/split basic json", "user": {"login": "theodelrieu", "id": 15652306, "node_id": "MDQ6VXNlcjE1NjUyMzA2", "avatar_url": "https://avatars1.githubusercontent.com/u/15652306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theodelrieu", "html_url": "https://github.com/theodelrieu", "followers_url": "https://api.github.com/users/theodelrieu/followers", "following_url": "https://api.github.com/users/theodelrieu/following{/other_user}", "gists_url": "https://api.github.com/users/theodelrieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/theodelrieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theodelrieu/subscriptions", "organizations_url": "https://api.github.com/users/theodelrieu/orgs", "repos_url": "https://api.github.com/users/theodelrieu/repos", "events_url": "https://api.github.com/users/theodelrieu/events{/privacy}", "received_events_url": "https://api.github.com/users/theodelrieu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 11, "created_at": "2017-07-01T19:08:42Z", "updated_at": "2017-07-09T21:30:07Z", "closed_at": "2017-07-09T21:12:36Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/643", "html_url": "https://github.com/nlohmann/json/pull/643", "diff_url": "https://github.com/nlohmann/json/pull/643.diff", "patch_url": "https://github.com/nlohmann/json/pull/643.patch"}, "body": "Hi, I managed to move every nested struct/class present in `basic_json` to the `detail` namespace.\r\n\r\nExcepted `json_pointer` which is now in `nlohmann`, I don't know if input/output adapters are exposed, if so, I will move them there too.\r\n\r\nThis is an intermediate refactoring, needed before splitting the library into multiple files, and before changing classes and namespace names.\r\n\r\nI'm afraid the review will not be very interesting... I advise reviewers to look at each commit separately, it is not readable otherwise."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/642", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/642/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/642/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/642/events", "html_url": "https://github.com/nlohmann/json/issues/642", "id": 239409539, "node_id": "MDU6SXNzdWUyMzk0MDk1Mzk=", "number": 642, "title": "Method to get string representations of values", "user": {"login": "skaupper", "id": 1375320, "node_id": "MDQ6VXNlcjEzNzUzMjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1375320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skaupper", "html_url": "https://github.com/skaupper", "followers_url": "https://api.github.com/users/skaupper/followers", "following_url": "https://api.github.com/users/skaupper/following{/other_user}", "gists_url": "https://api.github.com/users/skaupper/gists{/gist_id}", "starred_url": "https://api.github.com/users/skaupper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skaupper/subscriptions", "organizations_url": "https://api.github.com/users/skaupper/orgs", "repos_url": "https://api.github.com/users/skaupper/repos", "events_url": "https://api.github.com/users/skaupper/events{/privacy}", "received_events_url": "https://api.github.com/users/skaupper/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-06-29T08:57:11Z", "updated_at": "2017-07-08T06:20:28Z", "closed_at": "2017-07-08T06:20:28Z", "author_association": "NONE", "body": "I've come across occasions where I needed to \"stringify\" a single value. \r\nI know that there is `dump()` to serialize the whole object but it doesn't work as I would expected it (string values are enclosed in double quotes). Actually I know `dump()` is not meant for representing a single value as string that's why I want to suggest to add a method responsible for converting the value to a string.\r\n\r\nMy own implementation that I'm currently using looks like following:\r\n```c++\r\ninline std::string to_string(const json &j)\r\n{\r\n    auto tmp = j.dump();\r\n    \r\n    if (j.type() == json::value_t::string) {\r\n        return tmp.substr(1, tmp.size() - 2);\r\n    } else {\r\n        return tmp;\r\n    }\r\n}\r\n```\r\n\r\nSo, basically I want code like this to work.\r\n```c++\r\n    json j = \"{\\\"field\\\": 1234}\"_json;\r\n    std::string s = j[\"field\"].to_string();\r\n```\r\n\r\nCould you imagine having such a method?\r\nMaybe it is possible to specialize the `get()` method to get such a behaviour?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/641", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/641/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/641/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/641/events", "html_url": "https://github.com/nlohmann/json/issues/641", "id": 239218116, "node_id": "MDU6SXNzdWUyMzkyMTgxMTY=", "number": 641, "title": " CBOR serialization of a given JSON value does not serialize", "user": {"login": "davidalbertonogueira", "id": 5329202, "node_id": "MDQ6VXNlcjUzMjkyMDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5329202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidalbertonogueira", "html_url": "https://github.com/davidalbertonogueira", "followers_url": "https://api.github.com/users/davidalbertonogueira/followers", "following_url": "https://api.github.com/users/davidalbertonogueira/following{/other_user}", "gists_url": "https://api.github.com/users/davidalbertonogueira/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidalbertonogueira/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidalbertonogueira/subscriptions", "organizations_url": "https://api.github.com/users/davidalbertonogueira/orgs", "repos_url": "https://api.github.com/users/davidalbertonogueira/repos", "events_url": "https://api.github.com/users/davidalbertonogueira/events{/privacy}", "received_events_url": "https://api.github.com/users/davidalbertonogueira/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 571470316, "node_id": "MDU6TGFiZWw1NzE0NzAzMTY=", "url": "https://api.github.com/repos/nlohmann/json/labels/aspect:%20binary%20formats", "name": "aspect: binary formats", "color": "5319e7", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-28T16:14:20Z", "updated_at": "2017-06-29T00:49:27Z", "closed_at": "2017-06-29T00:49:27Z", "author_association": "NONE", "body": "Hi, \r\nI was CBOR serializing a JSON object, and noticed that, whereas when dumping a json object to a string, json string values (i.e., case value_t::string )are escaped (a call to escape_string is made), no such call is made when json values are string values in the CBOR approach.  \r\n\r\nI was reading the CBOR CRF 7049 and it seems that strings do not need to be escaped when serializing to CBOR. \r\nFrom your library the behavior is consistent, you don't escape when serializing, nor except to be escaped when de-serializing. \r\nBut it appears that Newtonsoft.Json (C# library), expects that. Is it a valid expectation? Is it possible to have a serialization that behaves in this way, in case some libraries expect that behavior?\r\n\r\nMy use case involves reading the cbor byte string output in c#. \r\nC++ side:\r\n```cpp\r\nnlohmann::json json_doc;\r\njson_doc[\"characters\"] = nlohmann::json::array();\r\n  \r\nfor (int i = 0; i < characters.size(); i++) {\r\n  json_doc[\"characters\"][i][\"name\"] = (characters[i] != nullptr) ? characters[i]->name() : \"\";\r\n}\r\n\r\nstd::vector<uint8_t> cbor = nlohmann::json::to_cbor(json_doc);\r\noutput->assign((char*)&cbor[0], cbor.size());\r\n```\r\n\r\nC# side. cbor_bytes is the  cbor byte string (c++ output vector)\r\n```c#\r\nCBORObject cbor = CBORObject.DecodeFromBytes(cbor_bytes);\r\noutput = cbor.ToString();\r\n```\r\nSuch output string by then, is wrongly formed: \r\n`{\"characters\": [{\"name\": \"Clara Oswald\"}, {\"name\": \"Kensi Blye\"}, {\"name\": \"Temperance \"Bones\" Brennan\"}]}`\r\nand cannot, obviously be parsed:\r\n```c#\r\nJObject output_obj = JObject.Parse(output);\r\n```\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/640", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/640/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/640/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/640/events", "html_url": "https://github.com/nlohmann/json/issues/640", "id": 239035265, "node_id": "MDU6SXNzdWUyMzkwMzUyNjU=", "number": 640, "title": "Are we forced to use \"-fexceptions\" flag in android ndk project", "user": {"login": "CodeMasterYi", "id": 10430162, "node_id": "MDQ6VXNlcjEwNDMwMTYy", "avatar_url": "https://avatars1.githubusercontent.com/u/10430162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CodeMasterYi", "html_url": "https://github.com/CodeMasterYi", "followers_url": "https://api.github.com/users/CodeMasterYi/followers", "following_url": "https://api.github.com/users/CodeMasterYi/following{/other_user}", "gists_url": "https://api.github.com/users/CodeMasterYi/gists{/gist_id}", "starred_url": "https://api.github.com/users/CodeMasterYi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CodeMasterYi/subscriptions", "organizations_url": "https://api.github.com/users/CodeMasterYi/orgs", "repos_url": "https://api.github.com/users/CodeMasterYi/repos", "events_url": "https://api.github.com/users/CodeMasterYi/events{/privacy}", "received_events_url": "https://api.github.com/users/CodeMasterYi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 382449225, "node_id": "MDU6TGFiZWwzODI0NDkyMjU=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20android", "name": "platform: android", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-06-28T02:24:42Z", "updated_at": "2017-07-08T17:42:25Z", "closed_at": "2017-07-08T17:42:25Z", "author_association": "NONE", "body": "Are we forced to use \"-fexceptions\" flag in android ndk project?\r\n~~~"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/639", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/639/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/639/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/639/events", "html_url": "https://github.com/nlohmann/json/issues/639", "id": 238629071, "node_id": "MDU6SXNzdWUyMzg2MjkwNzE=", "number": 639, "title": "Comparison of objects containing floats", "user": {"login": "amrcode", "id": 29713897, "node_id": "MDQ6VXNlcjI5NzEzODk3", "avatar_url": "https://avatars0.githubusercontent.com/u/29713897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amrcode", "html_url": "https://github.com/amrcode", "followers_url": "https://api.github.com/users/amrcode/followers", "following_url": "https://api.github.com/users/amrcode/following{/other_user}", "gists_url": "https://api.github.com/users/amrcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/amrcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amrcode/subscriptions", "organizations_url": "https://api.github.com/users/amrcode/orgs", "repos_url": "https://api.github.com/users/amrcode/repos", "events_url": "https://api.github.com/users/amrcode/events{/privacy}", "received_events_url": "https://api.github.com/users/amrcode/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}, {"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 304694104, "node_id": "MDU6TGFiZWwzMDQ2OTQxMDQ=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20please%20discuss", "name": "state: please discuss", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-06-26T18:25:54Z", "updated_at": "2017-07-07T19:17:18Z", "closed_at": "2017-07-07T19:17:18Z", "author_association": "NONE", "body": "The operator==() method for json objects uses '==' on the underlying number_float_t type. This may result in false negatives and is contrary to the function's documentation which states \"Floating-point numbers are compared indirectly: two floating-point numbers `f1` and `f2` are considered equal if neither `f1 > f2` nor `f2 > f1` holds\".  Could this behavior be changed to `abs(f1 - f2) < std::numeric_limits<number_float_t>::epsilon()` ?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/638", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/638/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/638/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/638/events", "html_url": "https://github.com/nlohmann/json/issues/638", "id": 238507511, "node_id": "MDU6SXNzdWUyMzg1MDc1MTE=", "number": 638, "title": "'localeconv' is not supported by NDK for SDK  <=20", "user": {"login": "sasmaster", "id": 438400, "node_id": "MDQ6VXNlcjQzODQwMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/438400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sasmaster", "html_url": "https://github.com/sasmaster", "followers_url": "https://api.github.com/users/sasmaster/followers", "following_url": "https://api.github.com/users/sasmaster/following{/other_user}", "gists_url": "https://api.github.com/users/sasmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/sasmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sasmaster/subscriptions", "organizations_url": "https://api.github.com/users/sasmaster/orgs", "repos_url": "https://api.github.com/users/sasmaster/repos", "events_url": "https://api.github.com/users/sasmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/sasmaster/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382449225, "node_id": "MDU6TGFiZWwzODI0NDkyMjU=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20android", "name": "platform: android", "color": "eb6420", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2017-06-26T10:56:34Z", "updated_at": "2017-07-11T11:00:00Z", "closed_at": "2017-07-11T11:00:00Z", "author_association": "NONE", "body": "The NDK STL for Android 19 seems to be incomplete.The locale.h is incomplete for sure.It does have a declaration of that method but the std llib probably doesn't,which causes linker error.It would be nice if this lib could support also older Android SDKs.Thanks!"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/637", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/637/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/637/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/637/events", "html_url": "https://github.com/nlohmann/json/issues/637", "id": 238398828, "node_id": "MDU6SXNzdWUyMzgzOTg4Mjg=", "number": 637, "title": "[Question] cLion integration", "user": {"login": "Dariusz1989", "id": 13185728, "node_id": "MDQ6VXNlcjEzMTg1NzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/13185728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dariusz1989", "html_url": "https://github.com/Dariusz1989", "followers_url": "https://api.github.com/users/Dariusz1989/followers", "following_url": "https://api.github.com/users/Dariusz1989/following{/other_user}", "gists_url": "https://api.github.com/users/Dariusz1989/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dariusz1989/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dariusz1989/subscriptions", "organizations_url": "https://api.github.com/users/Dariusz1989/orgs", "repos_url": "https://api.github.com/users/Dariusz1989/repos", "events_url": "https://api.github.com/users/Dariusz1989/events{/privacy}", "received_events_url": "https://api.github.com/users/Dariusz1989/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-25T18:58:20Z", "updated_at": "2017-07-09T10:32:53Z", "closed_at": "2017-07-09T10:32:53Z", "author_association": "NONE", "body": "Hey\r\n\r\nI'm a bit new to it but how can I load this library in cMake/cLion ?\r\n\r\nRegards\r\nDariusz\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/636", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/636/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/636/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/636/events", "html_url": "https://github.com/nlohmann/json/issues/636", "id": 238331478, "node_id": "MDU6SXNzdWUyMzgzMzE0Nzg=", "number": 636, "title": "How to construct an iteratable usage in nlohmann json?", "user": {"login": "intijk", "id": 740501, "node_id": "MDQ6VXNlcjc0MDUwMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/740501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/intijk", "html_url": "https://github.com/intijk", "followers_url": "https://api.github.com/users/intijk/followers", "following_url": "https://api.github.com/users/intijk/following{/other_user}", "gists_url": "https://api.github.com/users/intijk/gists{/gist_id}", "starred_url": "https://api.github.com/users/intijk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/intijk/subscriptions", "organizations_url": "https://api.github.com/users/intijk/orgs", "repos_url": "https://api.github.com/users/intijk/repos", "events_url": "https://api.github.com/users/intijk/events{/privacy}", "received_events_url": "https://api.github.com/users/intijk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 304694104, "node_id": "MDU6TGFiZWwzMDQ2OTQxMDQ=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20please%20discuss", "name": "state: please discuss", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 28, "created_at": "2017-06-24T17:45:37Z", "updated_at": "2017-08-15T18:51:10Z", "closed_at": "2017-08-15T18:51:10Z", "author_association": "NONE", "body": "Recently I am thinking to have some thing like this, \r\n\r\nFoo a, b, c;\r\njson j=json(Array());\r\nj.push_back(&a);\r\nj.push_back(&b);\r\nj.push_back(&c);\r\n\r\nfor(auto e: j){\r\n         //e would get a pointer to Foo class. \r\n}\r\n\r\nIs this possible to implement? I tried to_json and from_json , but seems the features are limited.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/635", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/635/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/635/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/635/events", "html_url": "https://github.com/nlohmann/json/issues/635", "id": 238139589, "node_id": "MDU6SXNzdWUyMzgxMzk1ODk=", "number": 635, "title": "[Question] copy assign json-container to vector", "user": {"login": "MrJakmer", "id": 12643296, "node_id": "MDQ6VXNlcjEyNjQzMjk2", "avatar_url": "https://avatars3.githubusercontent.com/u/12643296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MrJakmer", "html_url": "https://github.com/MrJakmer", "followers_url": "https://api.github.com/users/MrJakmer/followers", "following_url": "https://api.github.com/users/MrJakmer/following{/other_user}", "gists_url": "https://api.github.com/users/MrJakmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/MrJakmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MrJakmer/subscriptions", "organizations_url": "https://api.github.com/users/MrJakmer/orgs", "repos_url": "https://api.github.com/users/MrJakmer/repos", "events_url": "https://api.github.com/users/MrJakmer/events{/privacy}", "received_events_url": "https://api.github.com/users/MrJakmer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2017-06-23T13:17:19Z", "updated_at": "2017-07-08T19:28:50Z", "closed_at": "2017-07-08T19:28:50Z", "author_association": "NONE", "body": "Hi,\r\n\r\nupon the recommendation of Niels Lohmann via e-mail, I want to refer to a question [I asked on stackoverflow](https://stackoverflow.com/q/44543956).\r\n\r\nLet me share why I am asking that question: I am trying to search for a \"lower bound\" in a json-object. I assume this can't work since comparing with a double (or integer) isn't possible. That is why I need the conversion (via copy-assign) to a vector. If the question I referred to is not needed because you can solve the error with the lower bound (see code below), it would be great. But I think using vectors would still be relevant since it would be more efficient, if you use them multiple times.\r\n\r\nSee the following code:\r\n\r\n\t#include \"json.hpp\"\r\n\r\n\tusing json = nlohmann::json;\r\n\tusing namespace std;\r\n\r\n\r\n\tint main()\r\n\t{\r\n\r\n\t\tconst vector<double> v = { 0 , 10 , 20 ,100 };\r\n\t\tconst json j(v);\r\n\r\n\t\tjson::const_iterator low = lower_bound(j.cbegin(), j.cend(), 11);\r\n\t\tsize_t lowerBoundIndex = low - j.begin();\r\n\t\tcout << lowerBoundIndex << endl;\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\nI am using JSON for Modern C++ Version 2.1.1 with Microsoft Visual Studio 2015 Version 14.0.25431.01 Update 3 (regarding to your README the compiler should be okay). My operating system is Windows 7 SP1.\r\n\r\nThanks in advance!"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/634", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/634/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/634/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/634/events", "html_url": "https://github.com/nlohmann/json/issues/634", "id": 237958135, "node_id": "MDU6SXNzdWUyMzc5NTgxMzU=", "number": 634, "title": "Get size without .dump()", "user": {"login": "Aidoboy", "id": 7421794, "node_id": "MDQ6VXNlcjc0MjE3OTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7421794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aidoboy", "html_url": "https://github.com/Aidoboy", "followers_url": "https://api.github.com/users/Aidoboy/followers", "following_url": "https://api.github.com/users/Aidoboy/following{/other_user}", "gists_url": "https://api.github.com/users/Aidoboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aidoboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aidoboy/subscriptions", "organizations_url": "https://api.github.com/users/Aidoboy/orgs", "repos_url": "https://api.github.com/users/Aidoboy/repos", "events_url": "https://api.github.com/users/Aidoboy/events{/privacy}", "received_events_url": "https://api.github.com/users/Aidoboy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-06-22T20:04:12Z", "updated_at": "2017-07-07T21:28:53Z", "closed_at": "2017-07-07T18:57:29Z", "author_association": "NONE", "body": "Is there a way to get the size of a json object without dumping it first? I'm doing some load testing and would like to avoid the time it takes to dump a 4GB json file just to see how big it is, then do nothing with the dump."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/633", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/633/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/633/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/633/events", "html_url": "https://github.com/nlohmann/json/issues/633", "id": 237751432, "node_id": "MDU6SXNzdWUyMzc3NTE0MzI=", "number": 633, "title": "Segmentation fault when parsing invalid json file", "user": {"login": "bvnp43", "id": 24312419, "node_id": "MDQ6VXNlcjI0MzEyNDE5", "avatar_url": "https://avatars3.githubusercontent.com/u/24312419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bvnp43", "html_url": "https://github.com/bvnp43", "followers_url": "https://api.github.com/users/bvnp43/followers", "following_url": "https://api.github.com/users/bvnp43/following{/other_user}", "gists_url": "https://api.github.com/users/bvnp43/gists{/gist_id}", "starred_url": "https://api.github.com/users/bvnp43/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bvnp43/subscriptions", "organizations_url": "https://api.github.com/users/bvnp43/orgs", "repos_url": "https://api.github.com/users/bvnp43/repos", "events_url": "https://api.github.com/users/bvnp43/events{/privacy}", "received_events_url": "https://api.github.com/users/bvnp43/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-06-22T07:10:47Z", "updated_at": "2017-06-22T08:39:31Z", "closed_at": "2017-06-22T08:30:50Z", "author_association": "NONE", "body": "```\r\nstd::ifstream file(\"test.json\");\r\nnlohmann::json root;\r\nfile >> root;\r\n```\r\n\r\nforgetting, for example comma, in json file gives:\r\n\r\n```Segmentation fault (core dumped)```\r\n\r\ngcc 6.3.0 ubuntu 14.04 \r\n\r\n```\r\nUsing built-in specs.\r\nCOLLECT_GCC=gcc\r\nCOLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/6/lto-wrapper\r\nTarget: x86_64-linux-gnu\r\nConfigured with: ../src/configure -v --with-pkgversion='Ubuntu/Linaro 6.3.0-18ubuntu2~14.04' --with-bugurl=file:///usr/share/doc/gcc-6/README.Bugs --enable-languages=c,ada,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-6 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=gcc4-compatible --disable-libstdcxx-dual-abi --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-6-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-6-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-6-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --with-target-system-zlib --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu\r\nThread model: posix\r\ngcc version 6.3.0 20170519 (Ubuntu/Linaro 6.3.0-18ubuntu2~14.04) \r\n```\r\n\r\nI'm expecting it will throw ```std::exception```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/632", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/632/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/632/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/632/events", "html_url": "https://github.com/nlohmann/json/issues/632", "id": 237694578, "node_id": "MDU6SXNzdWUyMzc2OTQ1Nzg=", "number": 632, "title": "How to serialize from json to vector<customType>?", "user": {"login": "ARMGAMES", "id": 20094067, "node_id": "MDQ6VXNlcjIwMDk0MDY3", "avatar_url": "https://avatars3.githubusercontent.com/u/20094067?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ARMGAMES", "html_url": "https://github.com/ARMGAMES", "followers_url": "https://api.github.com/users/ARMGAMES/followers", "following_url": "https://api.github.com/users/ARMGAMES/following{/other_user}", "gists_url": "https://api.github.com/users/ARMGAMES/gists{/gist_id}", "starred_url": "https://api.github.com/users/ARMGAMES/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ARMGAMES/subscriptions", "organizations_url": "https://api.github.com/users/ARMGAMES/orgs", "repos_url": "https://api.github.com/users/ARMGAMES/repos", "events_url": "https://api.github.com/users/ARMGAMES/events{/privacy}", "received_events_url": "https://api.github.com/users/ARMGAMES/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-21T23:42:50Z", "updated_at": "2017-06-22T05:34:39Z", "closed_at": "2017-06-22T03:33:00Z", "author_association": "NONE", "body": "Hey, i have such code\r\n```cpp\r\nstd::vector<ConfigStructures::MyConfigs> MyConfigs;\r\njson JsonData;\r\n\r\nstruct MyConfigs\r\n{\r\n    bool selected = false;\r\n    std::string Name;\r\n};\r\n\r\ninline void to_json(json& j, const MyConfigs& config) {\r\n    j = json{\r\n        { \"selected\", config.selected },\r\n        { \"name\", config.Name }\r\n    };\r\n}\r\n\r\ninline void from_json(const json& j, MyConfigs& config) {\r\n    config.selected = j.at(\"selected\").get < bool >();\r\n    config.Name = j.at(\"name\").get < int >();\r\n}\r\n```\r\n\r\ni can serialize to json, as i set to_json function\r\n`JsonData = MyConfigs;`\r\n\r\nBut i can't do this\r\n`MyConfigs = JsonData`\r\n\r\nTry do like this:\r\n`MyConfigs = JsonData.get < vector<ConfigStructures::MyConfigs> >();`\r\nand this\r\n```cpp\r\nMyConfigs.clear();\r\nfor (auto& element : JsonData) {\r\n    MyConfigs.push_back(element);\r\n}\r\n```\r\nBut it give me error:\r\n`JSON_THROW(type_error::create(302, \"type must be number, but is \" + j.type_name()));`"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/631", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/631/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/631/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/631/events", "html_url": "https://github.com/nlohmann/json/issues/631", "id": 237668178, "node_id": "MDU6SXNzdWUyMzc2NjgxNzg=", "number": 631, "title": "no member named 'thousands_sep' in 'lconv'", "user": {"login": "rcdailey", "id": 1768054, "node_id": "MDQ6VXNlcjE3NjgwNTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1768054?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rcdailey", "html_url": "https://github.com/rcdailey", "followers_url": "https://api.github.com/users/rcdailey/followers", "following_url": "https://api.github.com/users/rcdailey/following{/other_user}", "gists_url": "https://api.github.com/users/rcdailey/gists{/gist_id}", "starred_url": "https://api.github.com/users/rcdailey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rcdailey/subscriptions", "organizations_url": "https://api.github.com/users/rcdailey/orgs", "repos_url": "https://api.github.com/users/rcdailey/repos", "events_url": "https://api.github.com/users/rcdailey/events{/privacy}", "received_events_url": "https://api.github.com/users/rcdailey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382449225, "node_id": "MDU6TGFiZWwzODI0NDkyMjU=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20android", "name": "platform: android", "color": "eb6420", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 27, "created_at": "2017-06-21T21:21:00Z", "updated_at": "2017-07-11T11:00:00Z", "closed_at": "2017-07-11T11:00:00Z", "author_association": "NONE", "body": "```\r\njson.hpp:8337:46: error: no member named 'thousands_sep' in 'lconv'\r\n\r\n            const char thousands_sep = !loc->thousands_sep ? '\\0'\r\n\r\n                                        ~~~  ^\r\n```\r\n\r\nGetting this error using NDK r14b with `armeabi-v7a` architecture, API 15, and clang + shared gnu STL. Works fine on MSVC 14 though. How can we get Android working?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/630", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/630/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/630/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/630/events", "html_url": "https://github.com/nlohmann/json/pull/630", "id": 237539174, "node_id": "MDExOlB1bGxSZXF1ZXN0MTI2NzY3MTUy", "number": 630, "title": "fix typo in operator__notequal example", "user": {"login": "Chocobo1", "id": 9395168, "node_id": "MDQ6VXNlcjkzOTUxNjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/9395168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Chocobo1", "html_url": "https://github.com/Chocobo1", "followers_url": "https://api.github.com/users/Chocobo1/followers", "following_url": "https://api.github.com/users/Chocobo1/following{/other_user}", "gists_url": "https://api.github.com/users/Chocobo1/gists{/gist_id}", "starred_url": "https://api.github.com/users/Chocobo1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Chocobo1/subscriptions", "organizations_url": "https://api.github.com/users/Chocobo1/orgs", "repos_url": "https://api.github.com/users/Chocobo1/repos", "events_url": "https://api.github.com/users/Chocobo1/events{/privacy}", "received_events_url": "https://api.github.com/users/Chocobo1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 2, "created_at": "2017-06-21T13:43:42Z", "updated_at": "2017-06-21T17:28:27Z", "closed_at": "2017-06-21T16:54:19Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/630", "html_url": "https://github.com/nlohmann/json/pull/630", "diff_url": "https://github.com/nlohmann/json/pull/630.diff", "patch_url": "https://github.com/nlohmann/json/pull/630.patch"}, "body": ""}, {"url": "https://api.github.com/repos/nlohmann/json/issues/629", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/629/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/629/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/629/events", "html_url": "https://github.com/nlohmann/json/pull/629", "id": 237451547, "node_id": "MDExOlB1bGxSZXF1ZXN0MTI2NzA0MzAz", "number": 629, "title": "Fix MSVC warning C4819", "user": {"login": "Chocobo1", "id": 9395168, "node_id": "MDQ6VXNlcjkzOTUxNjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/9395168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Chocobo1", "html_url": "https://github.com/Chocobo1", "followers_url": "https://api.github.com/users/Chocobo1/followers", "following_url": "https://api.github.com/users/Chocobo1/following{/other_user}", "gists_url": "https://api.github.com/users/Chocobo1/gists{/gist_id}", "starred_url": "https://api.github.com/users/Chocobo1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Chocobo1/subscriptions", "organizations_url": "https://api.github.com/users/Chocobo1/orgs", "repos_url": "https://api.github.com/users/Chocobo1/repos", "events_url": "https://api.github.com/users/Chocobo1/events{/privacy}", "received_events_url": "https://api.github.com/users/Chocobo1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 2, "created_at": "2017-06-21T08:19:57Z", "updated_at": "2017-06-21T16:54:33Z", "closed_at": "2017-06-21T16:54:04Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/629", "html_url": "https://github.com/nlohmann/json/pull/629", "diff_url": "https://github.com/nlohmann/json/pull/629.diff", "patch_url": "https://github.com/nlohmann/json/pull/629.patch"}, "body": "Replace unicode whitespaces by ASCII whitespace 0x20\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/628", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/628/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/628/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/628/events", "html_url": "https://github.com/nlohmann/json/issues/628", "id": 237157825, "node_id": "MDU6SXNzdWUyMzcxNTc4MjU=", "number": 628, "title": "[Question] Any fork for (the unsupported) Visual Studio 2012 version?", "user": {"login": "joxeankoret", "id": 2945834, "node_id": "MDQ6VXNlcjI5NDU4MzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/2945834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joxeankoret", "html_url": "https://github.com/joxeankoret", "followers_url": "https://api.github.com/users/joxeankoret/followers", "following_url": "https://api.github.com/users/joxeankoret/following{/other_user}", "gists_url": "https://api.github.com/users/joxeankoret/gists{/gist_id}", "starred_url": "https://api.github.com/users/joxeankoret/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joxeankoret/subscriptions", "organizations_url": "https://api.github.com/users/joxeankoret/orgs", "repos_url": "https://api.github.com/users/joxeankoret/repos", "events_url": "https://api.github.com/users/joxeankoret/events{/privacy}", "received_events_url": "https://api.github.com/users/joxeankoret/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-20T10:07:13Z", "updated_at": "2017-11-02T01:18:06Z", "closed_at": "2017-07-08T06:18:01Z", "author_association": "NONE", "body": "Hi!\r\n\r\nFirst of all, thanks for writing such a good piece of software! I've been using it with various compilers for some projects and it's awesome, I love it.\r\n\r\nNow the question: I'm trying to use it with an old project that uses Visual Studio 2012 and I cannot port to a newer compiler. I've been checking if there was any port of this library for Visual Studio 2012 but I cannot find any.\r\n\r\nDo you happen to know if it was ever ported/forked to Visual Studio 2012?\r\n\r\nThanks in advance!"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/627", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/627/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/627/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/627/events", "html_url": "https://github.com/nlohmann/json/issues/627", "id": 237109729, "node_id": "MDU6SXNzdWUyMzcxMDk3Mjk=", "number": 627, "title": "Dependency injection in serializer", "user": {"login": "celian-garcia", "id": 10258608, "node_id": "MDQ6VXNlcjEwMjU4NjA4", "avatar_url": "https://avatars3.githubusercontent.com/u/10258608?v=4", "gravatar_id": "", "url": "https://api.github.com/users/celian-garcia", "html_url": "https://github.com/celian-garcia", "followers_url": "https://api.github.com/users/celian-garcia/followers", "following_url": "https://api.github.com/users/celian-garcia/following{/other_user}", "gists_url": "https://api.github.com/users/celian-garcia/gists{/gist_id}", "starred_url": "https://api.github.com/users/celian-garcia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/celian-garcia/subscriptions", "organizations_url": "https://api.github.com/users/celian-garcia/orgs", "repos_url": "https://api.github.com/users/celian-garcia/repos", "events_url": "https://api.github.com/users/celian-garcia/events{/privacy}", "received_events_url": "https://api.github.com/users/celian-garcia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-20T06:54:32Z", "updated_at": "2017-06-24T08:47:43Z", "closed_at": "2017-06-24T08:47:42Z", "author_association": "NONE", "body": "Hello,\r\nI'm currently using  your library with great pleasure but I was wondering if I could inject a service as a dependency to the adl_serializer and how to do that.\r\n\r\nI saw that a lot of things are done at compile time so maybe that I'll have to use it as a static service ?\r\nThis option would work but if you have a better one, I'm listening :)\r\n\r\nTo illustrate, here is an example with both solutions.\r\n``` c++\r\nnamespace nlohmann {\r\n    template<>\r\n    struct adl_serializer<firefly::Task> {\r\n        static firefly::Task from_json(const json &j) {\r\n            return firefly::Task(\r\n                    j[\"name\"].get<std::string>(),\r\n                    j[\"description\"].get<std::string>(),\r\n                    ////////////////////////////////////////\r\n                    // Solution 1 (wanted one) : Injected instantiated service ? How to inject it ? \r\n                    service.getProcessingTypeById(j[\"type\"].get<int>()),\r\n                    service.getModuleById(j[\"module\"].get<int>()),\r\n                    // Solution 2 (working) : Use the service statically\r\n                    firefly::DataService::getProcessingTypeById(j[\"type\"].get<int>()),\r\n                    firefly::DataService::getModuleById(j[\"module\"].get<int>()),\r\n                    ////////////////////////////////////////\r\n                    j[\"user_name\"].get<std::string>(),\r\n                    j[\"date\"].get<std::string>(),\r\n                    j[\"state\"].get<int>()\r\n            );\r\n        }\r\n    };\r\n}\r\n```\r\n\r\nThank you :)\r\n\r\nC\u00e9lian Garcia \r\n\r\nEdit : NB : I'll use \"at\" instead of \"[]\" as mentionned in your doc ;) \r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/626", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/626/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/626/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/626/events", "html_url": "https://github.com/nlohmann/json/pull/626", "id": 236681138, "node_id": "MDExOlB1bGxSZXF1ZXN0MTI2MTY2NDg1", "number": 626, "title": "[BugFix] Add parentheses around std::min", "user": {"login": "koemeet", "id": 1569156, "node_id": "MDQ6VXNlcjE1NjkxNTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1569156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koemeet", "html_url": "https://github.com/koemeet", "followers_url": "https://api.github.com/users/koemeet/followers", "following_url": "https://api.github.com/users/koemeet/following{/other_user}", "gists_url": "https://api.github.com/users/koemeet/gists{/gist_id}", "starred_url": "https://api.github.com/users/koemeet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koemeet/subscriptions", "organizations_url": "https://api.github.com/users/koemeet/orgs", "repos_url": "https://api.github.com/users/koemeet/repos", "events_url": "https://api.github.com/users/koemeet/events{/privacy}", "received_events_url": "https://api.github.com/users/koemeet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 1, "created_at": "2017-06-17T20:02:40Z", "updated_at": "2017-06-18T00:28:18Z", "closed_at": "2017-06-17T21:58:13Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/626", "html_url": "https://github.com/nlohmann/json/pull/626", "diff_url": "https://github.com/nlohmann/json/pull/626.diff", "patch_url": "https://github.com/nlohmann/json/pull/626.patch"}, "body": "Add parentheses around std::min so it bypasses the macro introduced by windows.h. This fixes issues in Visual Studio 2017."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/625", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/625/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/625/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/625/events", "html_url": "https://github.com/nlohmann/json/issues/625", "id": 236659459, "node_id": "MDU6SXNzdWUyMzY2NTk0NTk=", "number": 625, "title": "from_json for std::array", "user": {"login": "hsdk123", "id": 4100142, "node_id": "MDQ6VXNlcjQxMDAxNDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/4100142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hsdk123", "html_url": "https://github.com/hsdk123", "followers_url": "https://api.github.com/users/hsdk123/followers", "following_url": "https://api.github.com/users/hsdk123/following{/other_user}", "gists_url": "https://api.github.com/users/hsdk123/gists{/gist_id}", "starred_url": "https://api.github.com/users/hsdk123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hsdk123/subscriptions", "organizations_url": "https://api.github.com/users/hsdk123/orgs", "repos_url": "https://api.github.com/users/hsdk123/repos", "events_url": "https://api.github.com/users/hsdk123/events{/privacy}", "received_events_url": "https://api.github.com/users/hsdk123/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-17T13:04:05Z", "updated_at": "2017-06-19T15:34:40Z", "closed_at": "2017-06-19T15:34:40Z", "author_association": "NONE", "body": "Hi, I'm realising that for an std::array, I can pass in the array as in into json and the library will convert it for me automatically, whereas when I'm trying to create an std::array from json, the conversion doesn't occur automatically, giving me an error saying that 'array doesn't have an insert function'. \r\n\r\nThis might seem small, but can get very inconvenient - it would be great if we could also get auto conversion of json arrays into arrays without having to explicitly create one element by element. "}, {"url": "https://api.github.com/repos/nlohmann/json/issues/624", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/624/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/624/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/624/events", "html_url": "https://github.com/nlohmann/json/pull/624", "id": 236657816, "node_id": "MDExOlB1bGxSZXF1ZXN0MTI2MTUzNDkx", "number": 624, "title": "add pair/tuple conversions", "user": {"login": "theodelrieu", "id": 15652306, "node_id": "MDQ6VXNlcjE1NjUyMzA2", "avatar_url": "https://avatars1.githubusercontent.com/u/15652306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theodelrieu", "html_url": "https://github.com/theodelrieu", "followers_url": "https://api.github.com/users/theodelrieu/followers", "following_url": "https://api.github.com/users/theodelrieu/following{/other_user}", "gists_url": "https://api.github.com/users/theodelrieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/theodelrieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theodelrieu/subscriptions", "organizations_url": "https://api.github.com/users/theodelrieu/orgs", "repos_url": "https://api.github.com/users/theodelrieu/repos", "events_url": "https://api.github.com/users/theodelrieu/events{/privacy}", "received_events_url": "https://api.github.com/users/theodelrieu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-06-17T12:28:22Z", "updated_at": "2017-06-19T15:35:14Z", "closed_at": "2017-06-19T15:31:10Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/624", "html_url": "https://github.com/nlohmann/json/pull/624", "diff_url": "https://github.com/nlohmann/json/pull/624.diff", "patch_url": "https://github.com/nlohmann/json/pull/624.patch"}, "body": "I left a question in the code: Should we impose that the JSON array size must be equal to the number of tuple/pair elements?\r\n\r\nIf not, some elements in the JSON could be discarded:\r\n\r\n```cpp\r\njson j = std::make_tuple(1, 2, 3, 4);\r\nauto p = j.get<std::pair<int, int>>();\r\n```\r\n\r\nSome users might want to discard values on purpose, so I would say we should not check the size at all."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/623", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/623/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/623/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/623/events", "html_url": "https://github.com/nlohmann/json/issues/623", "id": 236657076, "node_id": "MDU6SXNzdWUyMzY2NTcwNzY=", "number": 623, "title": "Discussion: How to structure the parsing function families", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 344572510, "node_id": "MDU6TGFiZWwzNDQ1NzI1MTA=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20help%20needed", "name": "state: help needed", "color": "fbca04", "default": false}, {"id": 304694104, "node_id": "MDU6TGFiZWwzMDQ2OTQxMDQ=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20please%20discuss", "name": "state: please discuss", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-06-17T12:11:34Z", "updated_at": "2017-07-30T18:10:28Z", "closed_at": "2017-07-30T18:10:28Z", "author_association": "OWNER", "body": "I want to discuss a restructuring of the way input is parsed.\r\n\r\nFor this, we need to consider three dimensions:\r\n\r\n1. The C++ type to read input from.\r\n2. The file format / representation we want to read.\r\n3. What to do with the result.\r\n\r\n### 1. Inputs\r\n\r\nWe currently accept inputs with the following types:\r\n\r\n- string literals (`const char []`)\r\n- char pointers (`const char*` or `const uint8_t*`)\r\n- input streams (`std::ifstream`, `std::stringstream`, ...)\r\n- iterator ranges\r\n- contiguous containers (`std::vector<char>` or `std::vector<uint8_t>`)\r\n\r\nThe input handling has been abstracted into a class `input_adapter` which offers a unified interface to get a single character or return multiple characters as a `std::string`.\r\n\r\n### 2. File formats\r\n\r\nWe currently support the following inputs:\r\n\r\n- JSON (RFC 7159)\r\n- CBOR (RFC 7049)\r\n- MessagePack (http://msgpack.org)\r\n\r\n### 3. What to do with the input\r\n\r\n- For JSON, we support the generation of a `basic_json` object from any inputs using the `parse()` function family. With `operator<<` we also allow to sequentially parse multiple JSON values from the same input stream. In addition, we may pass a callback function that allows to react on certain parse events.\r\n\r\n- For CBOR and MessagePack, we also suppor the generation of a `basic_json` object.\r\n\r\nIn either case, a parse error yields an exception. There is currently no way to indicate an error without throwing (or calling `abort` if exceptions are switched off).\r\n\r\n* * *\r\n\r\nJust supporting all input types for all file formats would need 5 x 3 = 15 functions. If we then want to add support for callbacks, make exceptions optional, allow to provide a JSON object reference to the parser as target, or anything else, we may quickly end up in dozens of similar functions. This is madness.\r\n\r\nInstead, I would like to discuss the following approach. We implement a parser class that is exposed to the user that can be constructed with any of the input types listed above. Then, the user can decided what to do by configuring this parser object and by calling its member functions. Having a parser object, we may, for instance, decide to create an object that describes a parse error which is available to the user after parsing. So instead of throwing, we can alternativeley allow to query this object afterward, just like `errno`, but nicer.\r\n\r\nI would like to still offer the static parse functions for JSON so the user can write `json j = json::parse(\"[1,2,3]\");`. Removing these functions would be too confusing, even for a 3.0.0 release. But these functions would then just offer the default behavior (no callback, throwing exceptions). Anything fancy should be moved to the described parser class. Meaning, I would like to offer the simplest use cases with the old interface, but allow for more complex scenarios without an explosion of functions.\r\n\r\n* * *\r\n\r\nWhat do you think?\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/622", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/622/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/622/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/622/events", "html_url": "https://github.com/nlohmann/json/issues/622", "id": 236653237, "node_id": "MDU6SXNzdWUyMzY2NTMyMzc=", "number": 622, "title": "Question: How to erase subtree", "user": {"login": "kimwalisch", "id": 4656219, "node_id": "MDQ6VXNlcjQ2NTYyMTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4656219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kimwalisch", "html_url": "https://github.com/kimwalisch", "followers_url": "https://api.github.com/users/kimwalisch/followers", "following_url": "https://api.github.com/users/kimwalisch/following{/other_user}", "gists_url": "https://api.github.com/users/kimwalisch/gists{/gist_id}", "starred_url": "https://api.github.com/users/kimwalisch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kimwalisch/subscriptions", "organizations_url": "https://api.github.com/users/kimwalisch/orgs", "repos_url": "https://api.github.com/users/kimwalisch/repos", "events_url": "https://api.github.com/users/kimwalisch/events{/privacy}", "received_events_url": "https://api.github.com/users/kimwalisch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-17T10:36:58Z", "updated_at": "2017-06-17T11:42:24Z", "closed_at": "2017-06-17T11:42:24Z", "author_association": "NONE", "body": "Hi,\r\n\r\nThanks for your awesome library! I use it in my [primecount](https://github.com/kimwalisch/primecount/tree/backup2) project.\r\n\r\nI would like to erase a subelement/subtree, e.g. in the example below I would like to erase ```[\"S2_hard\"][\"thread1\"]```. Note that ```\"thread1\"``` may also exist in other subtrees e.g. ```[\"S2_easy\"][\"thread1\"]``` which should not be erased.\r\n\r\n```json\r\n{\r\n    \"S2_hard\": {\r\n        \"low\": 16007169,\r\n        \"percent\": 6.32297670017418,\r\n        \"s2_hard\": \"41872228438534\",\r\n        \"seconds\": 1.66252099978738,\r\n        \"segment_size\": 131072,\r\n        \"segments\": 24,\r\n        \"thread0\": {\r\n            \"low\": 9715713,\r\n            \"segment_size\": 131072,\r\n            \"segments\": 24\r\n        },\r\n        \"thread1\": {\r\n            \"low\": 12861441,\r\n            \"segment_size\": 131072,\r\n            \"segments\": 24\r\n        },\r\n        \"x\": \"100000000000000000\",\r\n        \"y\": 10990372,\r\n        \"z\": 9098873086\r\n    }\r\n}\r\n```\r\n\r\nHow can I achieve this?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/621", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/621/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/621/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/621/events", "html_url": "https://github.com/nlohmann/json/issues/621", "id": 236541330, "node_id": "MDU6SXNzdWUyMzY1NDEzMzA=", "number": 621, "title": "Insertion into nested json field", "user": {"login": "karthiksheshadri", "id": 16656403, "node_id": "MDQ6VXNlcjE2NjU2NDAz", "avatar_url": "https://avatars0.githubusercontent.com/u/16656403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karthiksheshadri", "html_url": "https://github.com/karthiksheshadri", "followers_url": "https://api.github.com/users/karthiksheshadri/followers", "following_url": "https://api.github.com/users/karthiksheshadri/following{/other_user}", "gists_url": "https://api.github.com/users/karthiksheshadri/gists{/gist_id}", "starred_url": "https://api.github.com/users/karthiksheshadri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karthiksheshadri/subscriptions", "organizations_url": "https://api.github.com/users/karthiksheshadri/orgs", "repos_url": "https://api.github.com/users/karthiksheshadri/repos", "events_url": "https://api.github.com/users/karthiksheshadri/events{/privacy}", "received_events_url": "https://api.github.com/users/karthiksheshadri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-06-16T17:08:11Z", "updated_at": "2017-06-16T17:18:45Z", "closed_at": "2017-06-16T17:17:58Z", "author_association": "NONE", "body": "Suppose one wants to insert iteratively into a nested field, for example:\r\n\r\n```cpp\r\nfor (auto& i : strings) {\r\n\r\nj[\"Outer level\"][\"Inner level[i]\"]=match[i];\r\n\r\n}\r\n```\r\n\r\npushback() does not do this and one cannot use a string type as index, i.e, j[\"Outer Level\"][str] doesn't work - is there any way to do this?\r\n\r\nMany thanks!"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/620", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/620/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/620/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/620/events", "html_url": "https://github.com/nlohmann/json/issues/620", "id": 236063928, "node_id": "MDU6SXNzdWUyMzYwNjM5Mjg=", "number": 620, "title": "[Question] When using this as git submodule, will it clone the whole thing include test data and benchmark?", "user": {"login": "tuananh", "id": 627278, "node_id": "MDQ6VXNlcjYyNzI3OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/627278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tuananh", "html_url": "https://github.com/tuananh", "followers_url": "https://api.github.com/users/tuananh/followers", "following_url": "https://api.github.com/users/tuananh/following{/other_user}", "gists_url": "https://api.github.com/users/tuananh/gists{/gist_id}", "starred_url": "https://api.github.com/users/tuananh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tuananh/subscriptions", "organizations_url": "https://api.github.com/users/tuananh/orgs", "repos_url": "https://api.github.com/users/tuananh/repos", "events_url": "https://api.github.com/users/tuananh/events{/privacy}", "received_events_url": "https://api.github.com/users/tuananh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-15T03:00:32Z", "updated_at": "2017-06-15T05:25:30Z", "closed_at": "2017-06-15T05:25:30Z", "author_association": "NONE", "body": "it seems the actual source is small but test and benchmark folder is huge (200MB ++).\r\n\r\nShould I just copy the code from `json.hpp` or is there anyway to use this as submodule without cloning test folder and benchmark folder?\r\n\r\nThank you."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/619", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/619/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/619/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/619/events", "html_url": "https://github.com/nlohmann/json/pull/619", "id": 235857252, "node_id": "MDExOlB1bGxSZXF1ZXN0MTI1NTc5MTk4", "number": 619, "title": "Make the library available through Conan package", "user": {"login": "vthiery", "id": 23509436, "node_id": "MDQ6VXNlcjIzNTA5NDM2", "avatar_url": "https://avatars0.githubusercontent.com/u/23509436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vthiery", "html_url": "https://github.com/vthiery", "followers_url": "https://api.github.com/users/vthiery/followers", "following_url": "https://api.github.com/users/vthiery/following{/other_user}", "gists_url": "https://api.github.com/users/vthiery/gists{/gist_id}", "starred_url": "https://api.github.com/users/vthiery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vthiery/subscriptions", "organizations_url": "https://api.github.com/users/vthiery/orgs", "repos_url": "https://api.github.com/users/vthiery/repos", "events_url": "https://api.github.com/users/vthiery/events{/privacy}", "received_events_url": "https://api.github.com/users/vthiery/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2017-06-14T12:06:52Z", "updated_at": "2017-06-19T06:46:21Z", "closed_at": "2017-06-16T17:33:06Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/619", "html_url": "https://github.com/nlohmann/json/pull/619", "diff_url": "https://github.com/nlohmann/json/pull/619.diff", "patch_url": "https://github.com/nlohmann/json/pull/619.patch"}, "body": "This PR addresses the issue #566 by adding the conanfile.py, build.py and test_package necessary to package and test the conan package.\r\n\r\nThe version is set to 2.1.1 and will have to be bumped when releasing.\r\n\r\nIn order to test that the package works properly, simply do `conan test_package` in the conan folder.\r\nIn order to upload the package, follow the [documentation](http://docs.conan.io/en/latest/move_to_bintray.html)."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/618", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/618/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/618/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/618/events", "html_url": "https://github.com/nlohmann/json/issues/618", "id": 235677042, "node_id": "MDU6SXNzdWUyMzU2NzcwNDI=", "number": 618, "title": "Question: return static json object from function", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-13T20:07:55Z", "updated_at": "2017-06-19T15:36:31Z", "closed_at": "2017-06-19T15:36:31Z", "author_association": "NONE", "body": "Hi,\r\nforgive me but I'm a newbie with c++ in general.\r\n\r\nI'm trying to use this library but I have a problem.\r\nI have a file like this:\r\n\r\n```cpp\r\nstatic json config;\r\n\r\njson get_config()\r\n{\r\n   config[\"value\"] = 456;\r\n   return config;\r\n}\r\n\r\nvoid save_config()\r\n{\r\n   std::ofstream fout(\"config.txt\");\r\n   fout << std::setw(3) << config << std::endl;\r\n}\r\n```\r\n\r\nin another file I do something like ...\r\n\r\n```cpp\r\nauto obj = get_config();\r\nobj[\"value\"] = 123;\r\nsave_config();\r\n\r\n```\r\nbut inside config.txt i still see old value (456).\r\nHow can I solve this ?\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}]