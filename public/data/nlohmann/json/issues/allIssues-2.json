[{"url": "https://api.github.com/repos/nlohmann/json/issues/1159", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1159/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1159/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1159/events", "html_url": "https://github.com/nlohmann/json/issues/1159", "id": 340264973, "node_id": "MDU6SXNzdWUzNDAyNjQ5NzM=", "number": 1159, "title": "no instance of overloaded function \"std::swap\" matches the specified type\t", "user": {"login": "jefferson-1", "id": 6462449, "node_id": "MDQ6VXNlcjY0NjI0NDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/6462449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jefferson-1", "html_url": "https://github.com/jefferson-1", "followers_url": "https://api.github.com/users/jefferson-1/followers", "following_url": "https://api.github.com/users/jefferson-1/following{/other_user}", "gists_url": "https://api.github.com/users/jefferson-1/gists{/gist_id}", "starred_url": "https://api.github.com/users/jefferson-1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jefferson-1/subscriptions", "organizations_url": "https://api.github.com/users/jefferson-1/orgs", "repos_url": "https://api.github.com/users/jefferson-1/repos", "events_url": "https://api.github.com/users/jefferson-1/events{/privacy}", "received_events_url": "https://api.github.com/users/jefferson-1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}, {"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-11T14:22:32Z", "updated_at": "2018-08-02T13:07:42Z", "closed_at": "2018-07-11T14:45:16Z", "author_association": "NONE", "body": "- What is the issue you have?\r\nCannot compile in Visual Studio 2017 after including json.hpp\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\nThis line - 18474\tinline void swap(nlohmann::json& j1, generates the following error\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError (active)\tE0493\tno instance of overloaded function \"std::swap\" matches the specified type\t\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\nTried 3.01 and 3.12 develop\r\n\r\n- If you experience a compilation error: can you [compile and run the unit tests](https://github.com/nlohmann/json#execute-unit-tests)?\r\n\r\nI'm able to cmake the project but unable to compile after including it... I've tried:\r\nISO C++ latest draft and ISO C++ 17. I'm not able to go to any earlier versions due to dependencies. \r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1158", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1158/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1158/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1158/events", "html_url": "https://github.com/nlohmann/json/issues/1158", "id": 339848415, "node_id": "MDU6SXNzdWUzMzk4NDg0MTU=", "number": 1158, "title": "Can we have a json_view class like std::string_view?", "user": {"login": "qduyang", "id": 5174044, "node_id": "MDQ6VXNlcjUxNzQwNDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5174044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qduyang", "html_url": "https://github.com/qduyang", "followers_url": "https://api.github.com/users/qduyang/followers", "following_url": "https://api.github.com/users/qduyang/following{/other_user}", "gists_url": "https://api.github.com/users/qduyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/qduyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qduyang/subscriptions", "organizations_url": "https://api.github.com/users/qduyang/orgs", "repos_url": "https://api.github.com/users/qduyang/repos", "events_url": "https://api.github.com/users/qduyang/events{/privacy}", "received_events_url": "https://api.github.com/users/qduyang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 344572510, "node_id": "MDU6TGFiZWwzNDQ1NzI1MTA=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20help%20needed", "name": "state: help needed", "color": "fbca04", "default": false}, {"id": 304694104, "node_id": "MDU6TGFiZWwzMDQ2OTQxMDQ=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20please%20discuss", "name": "state: please discuss", "color": "fbca04", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-10T13:42:49Z", "updated_at": "2018-07-21T12:22:59Z", "closed_at": null, "author_association": "NONE", "body": "- Describe the feature in as much detail as possible.\r\nAs copy a json would have many allocations, it would nice to have a view class like std::string_view for performance's sake.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1157", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1157/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1157/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1157/events", "html_url": "https://github.com/nlohmann/json/issues/1157", "id": 339439123, "node_id": "MDU6SXNzdWUzMzk0MzkxMjM=", "number": 1157, "title": "resize(...)?", "user": {"login": "phyz777", "id": 19569239, "node_id": "MDQ6VXNlcjE5NTY5MjM5", "avatar_url": "https://avatars1.githubusercontent.com/u/19569239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phyz777", "html_url": "https://github.com/phyz777", "followers_url": "https://api.github.com/users/phyz777/followers", "following_url": "https://api.github.com/users/phyz777/following{/other_user}", "gists_url": "https://api.github.com/users/phyz777/gists{/gist_id}", "starred_url": "https://api.github.com/users/phyz777/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phyz777/subscriptions", "organizations_url": "https://api.github.com/users/phyz777/orgs", "repos_url": "https://api.github.com/users/phyz777/repos", "events_url": "https://api.github.com/users/phyz777/events{/privacy}", "received_events_url": "https://api.github.com/users/phyz777/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-09T12:59:48Z", "updated_at": "2018-07-13T12:22:19Z", "closed_at": "2018-07-13T12:22:19Z", "author_association": "NONE", "body": "Hello, \r\n\r\nis there a resize() function for arrays, analogous to the resize function of std::vector<T>? "}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1156", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1156/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1156/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1156/events", "html_url": "https://github.com/nlohmann/json/pull/1156", "id": 338807853, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk5NjQ3MDc5", "number": 1156, "title": "Added a logging message to cmake build", "user": {"login": "papiguy", "id": 828641, "node_id": "MDQ6VXNlcjgyODY0MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/828641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/papiguy", "html_url": "https://github.com/papiguy", "followers_url": "https://api.github.com/users/papiguy/followers", "following_url": "https://api.github.com/users/papiguy/following{/other_user}", "gists_url": "https://api.github.com/users/papiguy/gists{/gist_id}", "starred_url": "https://api.github.com/users/papiguy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/papiguy/subscriptions", "organizations_url": "https://api.github.com/users/papiguy/orgs", "repos_url": "https://api.github.com/users/papiguy/repos", "events_url": "https://api.github.com/users/papiguy/events{/privacy}", "received_events_url": "https://api.github.com/users/papiguy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-06T05:14:57Z", "updated_at": "2018-07-06T06:44:35Z", "closed_at": "2018-07-06T05:17:42Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1156", "html_url": "https://github.com/nlohmann/json/pull/1156", "diff_url": "https://github.com/nlohmann/json/pull/1156.diff", "patch_url": "https://github.com/nlohmann/json/pull/1156.patch"}, "body": "[Describe your pull request here. Please read the text below the line, and make sure you follow the checklist.]\r\n\r\n* * *\r\n\r\n## Pull request checklist\r\n\r\nRead the [Contribution Guidelines](https://github.com/nlohmann/json/blob/develop/.github/CONTRIBUTING.md) for detailed information.\r\n\r\n- [x]  Changes are described in the pull request, or an [existing issue is referenced](https://github.com/nlohmann/json/issues).\r\n- [x]  The test suite [compiles and runs](https://github.com/nlohmann/json/blob/develop/README.md#execute-unit-tests) without error.\r\n- [x]  [Code coverage](https://coveralls.io/github/nlohmann/json) is 100%. Test cases can be added by editing the [test suite](https://github.com/nlohmann/json/tree/develop/test/src).\r\n- [x]  The source code is amalgamated; that is, after making changes to the sources in the `include/nlohmann` directory, run `make amalgamate` to create the single-header file `single_include/nlohmann/json.hpp`. The whole process is described [here](https://github.com/nlohmann/json/blob/develop/.github/CONTRIBUTING.md#files-to-change).\r\n\r\n## Please don't\r\n\r\n- The C++11 support varies between different **compilers** and versions. Please note the [list of supported compilers](https://github.com/nlohmann/json/blob/master/README.md#supported-compilers). Some compilers like GCC 4.8 (and earlier), Clang 3.3 (and earlier), or Microsoft Visual Studio 13.0 and earlier are known not to work due to missing or incomplete C++11 support. Please refrain from proposing changes that work around these compiler's limitations with `#ifdef`s or other means.\r\n- Specifically, I am aware of compilation problems with **Microsoft Visual Studio** (there even is an [issue label](https://github.com/nlohmann/json/issues?utf8=\u2713&q=label%3A%22visual+studio%22+) for these kind of bugs). I understand that even in 2016, complete C++11 support isn't there yet. But please also understand that I do not want to drop features or uglify the code just to make Microsoft's sub-standard compiler happy. The past has shown that there are ways to express the functionality such that the code compiles with the most recent MSVC - unfortunately, this is not the main objective of the project.\r\n- Please refrain from proposing changes that would **break [JSON](http://json.org) conformance**. If you propose a conformant extension of JSON to be supported by the library, please motivate this extension.\r\n- Please do not open pull requests that address **multiple issues**.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1155", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1155/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1155/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1155/events", "html_url": "https://github.com/nlohmann/json/issues/1155", "id": 338365027, "node_id": "MDU6SXNzdWUzMzgzNjUwMjc=", "number": 1155, "title": "Issue with struct nested in class' to_json", "user": {"login": "Qbz23", "id": 10473194, "node_id": "MDQ6VXNlcjEwNDczMTk0", "avatar_url": "https://avatars3.githubusercontent.com/u/10473194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Qbz23", "html_url": "https://github.com/Qbz23", "followers_url": "https://api.github.com/users/Qbz23/followers", "following_url": "https://api.github.com/users/Qbz23/following{/other_user}", "gists_url": "https://api.github.com/users/Qbz23/gists{/gist_id}", "starred_url": "https://api.github.com/users/Qbz23/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Qbz23/subscriptions", "organizations_url": "https://api.github.com/users/Qbz23/orgs", "repos_url": "https://api.github.com/users/Qbz23/repos", "events_url": "https://api.github.com/users/Qbz23/events{/privacy}", "received_events_url": "https://api.github.com/users/Qbz23/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-04T19:52:28Z", "updated_at": "2018-07-04T20:07:37Z", "closed_at": "2018-07-04T20:01:40Z", "author_association": "NONE", "body": "I'm getting the \"could not find to_json() in T's namespace\" error when trying to use a struct nested in a class. I figure I'm most likely just missing something...\r\n\r\nThe following does not work...\r\n\r\n\r\n    class Tile : public MouseReactive\r\n    {\r\n    public:\r\n\r\n        struct TileData\r\n        {\r\n          std::string name;\r\n          uint32_t redStart;\r\n          uint32_t blueStart;\r\n          uint32_t redGain;\r\n          uint32_t blueGain;\r\n          uint32_t nutrientMax;\r\n          bool impassable;\r\n          std::string tex;\r\n        };\r\n        static void to_json(json& j, const TileData& td);\r\n    };\r\n\r\n    void Tile::to_json(json& j, const TileData& td)\r\n    {\r\n      j = json{ {\"name\",         td.name},\r\n                {\"redStart\",     td.redStart},\r\n                {\"blueStart\",    td.blueGain},\r\n                {\"redGain\",      td.redGain},\r\n                {\"blueGain\",     td.blueGain},\r\n                {\"nutrientMax\",  td.nutrientMax},\r\n                {\"impassable\",   td.impassable},\r\n                {\"tex\",          td.tex}};\r\n    }\r\n\r\nBut this similar example does. Not sure what I'm missing for classes \r\n\r\n    namespace TestNs\r\n    {\r\n      struct TestType\r\n      {\r\n        std::string name;\r\n        uint32_t redStart;\r\n        uint32_t blueStart;\r\n        uint32_t redGain;\r\n        uint32_t blueGain;\r\n        uint32_t nutrientMax;\r\n        bool impassable;\r\n        std::string tex;\r\n      };\r\n      void to_json(json& j, const TestNs::TestType& tt);\r\n    };\r\n\r\n    namespace TestNs\r\n    {\r\n      void to_json(json& j, const TestNs::TestType& tt)\r\n      {\r\n        j = json{ { \"name\",         tt.name },\r\n                  { \"redStart\",     tt.redStart },\r\n                  { \"blueStart\",    tt.blueGain },\r\n                  { \"redGain\",      tt.redGain },\r\n                  { \"blueGain\",     tt.blueGain },\r\n                  { \"nutrientMax\",  tt.nutrientMax },\r\n                  { \"impassable\",   tt.impassable },\r\n                  { \"tex\",          tt.tex } };\r\n      }\r\n    }\r\n\r\nAnd I'm just testing it with \r\n\r\n      TestNs::TestType tt;\r\n      json j = tt;\r\n      Tile::TileData td;\r\n      json j2 = td;"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1154", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1154/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1154/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1154/events", "html_url": "https://github.com/nlohmann/json/issues/1154", "id": 338327557, "node_id": "MDU6SXNzdWUzMzgzMjc1NTc=", "number": 1154, "title": "Deserialize std::map with std::nan", "user": {"login": "giumas", "id": 2849257, "node_id": "MDQ6VXNlcjI4NDkyNTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2849257?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giumas", "html_url": "https://github.com/giumas", "followers_url": "https://api.github.com/users/giumas/followers", "following_url": "https://api.github.com/users/giumas/following{/other_user}", "gists_url": "https://api.github.com/users/giumas/gists{/gist_id}", "starred_url": "https://api.github.com/users/giumas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giumas/subscriptions", "organizations_url": "https://api.github.com/users/giumas/orgs", "repos_url": "https://api.github.com/users/giumas/repos", "events_url": "https://api.github.com/users/giumas/events{/privacy}", "received_events_url": "https://api.github.com/users/giumas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-07-04T16:07:28Z", "updated_at": "2018-07-13T12:22:20Z", "closed_at": "2018-07-13T12:22:19Z", "author_association": "NONE", "body": "- What is the issue you have?\r\nUsing the 'develop' branch, I get: `[json.exception.type_error.302] type must be number, but is null` when I deserialize an `std::map` with `std::nan` as pair value.\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\n\r\n```\r\n#include <iostream>\r\n#include <iomanip>\r\n#include <map>\r\n\r\n#include \"rawdata/ext/json/json.hpp\"\r\n#include <fstream>\r\n\r\nusing namespace std;\r\nusing json = nlohmann::json;\r\n\r\nint main()\r\n{\r\n\t// a map with a nan-value pair\r\n\tmap<int64_t, double> test_map;\r\n\t//test_map[123] = 1.2342;\r\n\ttest_map[434] = std::nan(\"\");\r\n\ttest_map[999] = 243.12;\r\n\r\n\t// storage file\r\n\tstring file_path = \"test.json\";\r\n\r\n\t// serialization\r\n\tjson j;\r\n\tj[\"data\"] = test_map;\r\n\tstring json_str = j.dump(3);\r\n\tcout << \"json str: \" << json_str << endl;\r\n\t// write to disk\r\n\tstd::ofstream ofs( file_path );\r\n\tif(!ofs)\r\n\t{\r\n\t\tcerr << \"issue in opening \" << file_path << endl;\r\n\t\texit( -1 );\r\n\t}\r\n\tofs << json_str;\r\n\tofs.close();\r\n\r\n\t// de-serialization\r\n\tstd::ifstream ifs( file_path );\r\n\tif(!ifs)\r\n\t{\r\n\t\tcerr << \"issue in opening \" << file_path << endl;\r\n\t\texit( -1 );\r\n\t}\r\n\tjson j2;\r\n\tifs >> j2;\r\n\tjson_str = j2.dump();\r\n\tifs.close();\r\n\ttry\r\n\t{\r\n\t\tmap<int64_t, double> reloaded_map = j2[\"data\"].get<std::map<int64_t, double>>();\r\n\t\tfor(const auto& pair: reloaded_map)\r\n\t\t{\r\n\t\t\tcout << \"- \" << pair.first << \": \" << pair.second << endl;\r\n\t\t}\r\n\t}\r\n\tcatch(const std::exception& e)\r\n\t{\r\n\t\tcerr << \"issue in parsing json: \" << e.what() << endl;\r\n\t}\r\n}\r\n```\r\n\r\n- What is the expected behavior?\r\nNo throwing an exception.\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\nVisual Studio 2015\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\n`develop` branch.\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1153", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1153/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1153/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1153/events", "html_url": "https://github.com/nlohmann/json/pull/1153", "id": 337885688, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk4OTUyOTAy", "number": 1153, "title": "Refactor/no virtual sax", "user": {"login": "theodelrieu", "id": 15652306, "node_id": "MDQ6VXNlcjE1NjUyMzA2", "avatar_url": "https://avatars1.githubusercontent.com/u/15652306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theodelrieu", "html_url": "https://github.com/theodelrieu", "followers_url": "https://api.github.com/users/theodelrieu/followers", "following_url": "https://api.github.com/users/theodelrieu/following{/other_user}", "gists_url": "https://api.github.com/users/theodelrieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/theodelrieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theodelrieu/subscriptions", "organizations_url": "https://api.github.com/users/theodelrieu/orgs", "repos_url": "https://api.github.com/users/theodelrieu/repos", "events_url": "https://api.github.com/users/theodelrieu/events{/privacy}", "received_events_url": "https://api.github.com/users/theodelrieu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2018-07-03T12:52:05Z", "updated_at": "2018-08-03T08:13:38Z", "closed_at": null, "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1153", "html_url": "https://github.com/nlohmann/json/pull/1153", "diff_url": "https://github.com/nlohmann/json/pull/1153.diff", "patch_url": "https://github.com/nlohmann/json/pull/1153.patch"}, "body": "This PR is a WIP, to show a different API for SAX-related functions.\r\n\r\nI'd like to have other people running benchmarks, my results are not that significant, even after removing every optimization flag. There is a 40ms improvement on `jeopardy.json` from time to time though.\r\n\r\nFew minor improvements that could be done:\r\n\r\n* Passing by reference instead of pointers?.\r\n* I removed the `no_limit` value, I used `std::size_t(-1)` instead.\r\n\r\nAs you can see, the public interface stays the same, there is no `static_assert` on the SAX interface for now. If we decide to go this route, I'll add detailed and useful ones (unlike those that exist today).\r\n\r\n* * *\r\n\r\n## Pull request checklist\r\n\r\nRead the [Contribution Guidelines](https://github.com/nlohmann/json/blob/develop/.github/CONTRIBUTING.md) for detailed information.\r\n\r\n- [x]  Changes are described in the pull request, or an [existing issue is referenced](https://github.com/nlohmann/json/issues).\r\n- [x]  The test suite [compiles and runs](https://github.com/nlohmann/json/blob/develop/README.md#execute-unit-tests) without error.\r\n- [x]  [Code coverage](https://coveralls.io/github/nlohmann/json) is 100%. Test cases can be added by editing the [test suite](https://github.com/nlohmann/json/tree/develop/test/src).\r\n- [x]  The source code is amalgamated; that is, after making changes to the sources in the `include/nlohmann` directory, run `make amalgamate` to create the single-header file `single_include/nlohmann/json.hpp`. The whole process is described [here](https://github.com/nlohmann/json/blob/develop/.github/CONTRIBUTING.md#files-to-change)."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1152", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1152/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1152/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1152/events", "html_url": "https://github.com/nlohmann/json/issues/1152", "id": 337834173, "node_id": "MDU6SXNzdWUzMzc4MzQxNzM=", "number": 1152, "title": "improve error handling", "user": {"login": "maddanio", "id": 366903, "node_id": "MDQ6VXNlcjM2NjkwMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/366903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maddanio", "html_url": "https://github.com/maddanio", "followers_url": "https://api.github.com/users/maddanio/followers", "following_url": "https://api.github.com/users/maddanio/following{/other_user}", "gists_url": "https://api.github.com/users/maddanio/gists{/gist_id}", "starred_url": "https://api.github.com/users/maddanio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maddanio/subscriptions", "organizations_url": "https://api.github.com/users/maddanio/orgs", "repos_url": "https://api.github.com/users/maddanio/repos", "events_url": "https://api.github.com/users/maddanio/events{/privacy}", "received_events_url": "https://api.github.com/users/maddanio/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 304694104, "node_id": "MDU6TGFiZWwzMDQ2OTQxMDQ=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20please%20discuss", "name": "state: please discuss", "color": "fbca04", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2018-07-03T10:15:54Z", "updated_at": "2018-08-04T12:44:11Z", "closed_at": null, "author_association": "NONE", "body": "we commonly get quite horrible errors from the parser or when converting to user types. also error handling is not even mentioned in the docs.\r\n\r\nI would propose making error handling a first class citizen, report lines/columns, give more detailed info in conversion to user types, etc.\r\n\r\nI am willing to help, as this library is currently quite integral to our codebase"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1151", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1151/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1151/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1151/events", "html_url": "https://github.com/nlohmann/json/pull/1151", "id": 336856430, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk4MjEwMzEy", "number": 1151, "title": "Fixed compiler error in VS 2015 for debug mode", "user": {"login": "sonulohani", "id": 2958681, "node_id": "MDQ6VXNlcjI5NTg2ODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2958681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sonulohani", "html_url": "https://github.com/sonulohani", "followers_url": "https://api.github.com/users/sonulohani/followers", "following_url": "https://api.github.com/users/sonulohani/following{/other_user}", "gists_url": "https://api.github.com/users/sonulohani/gists{/gist_id}", "starred_url": "https://api.github.com/users/sonulohani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sonulohani/subscriptions", "organizations_url": "https://api.github.com/users/sonulohani/orgs", "repos_url": "https://api.github.com/users/sonulohani/repos", "events_url": "https://api.github.com/users/sonulohani/events{/privacy}", "received_events_url": "https://api.github.com/users/sonulohani/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/24", "html_url": "https://github.com/nlohmann/json/milestone/24", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/24/labels", "id": 3188647, "node_id": "MDk6TWlsZXN0b25lMzE4ODY0Nw==", "number": 24, "title": "Release 3.1.3", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 33, "state": "open", "created_at": "2018-03-14T21:05:47Z", "updated_at": "2018-07-21T12:46:17Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2018-06-29T04:08:21Z", "updated_at": "2018-06-29T08:13:16Z", "closed_at": "2018-06-29T07:03:44Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1151", "html_url": "https://github.com/nlohmann/json/pull/1151", "diff_url": "https://github.com/nlohmann/json/pull/1151.diff", "patch_url": "https://github.com/nlohmann/json/pull/1151.patch"}, "body": "https://github.com/nlohmann/json/issues/1114\r\n\r\n[Describe your pull request here. Please read the text below the line, and make sure you follow the checklist.]\r\n\r\n* * *\r\n\r\n## Pull request checklist\r\n\r\nRead the [Contribution Guidelines](https://github.com/nlohmann/json/blob/develop/.github/CONTRIBUTING.md) for detailed information.\r\n\r\n- [x]  Changes are described in the pull request, or an [existing issue is referenced](https://github.com/nlohmann/json/issues).\r\n- [x]  The test suite [compiles and runs](https://github.com/nlohmann/json/blob/develop/README.md#execute-unit-tests) without error.\r\n- [x]  [Code coverage](https://coveralls.io/github/nlohmann/json) is 100%. Test cases can be added by editing the [test suite](https://github.com/nlohmann/json/tree/develop/test/src).\r\n- [ ]  The source code is amalgamated; that is, after making changes to the sources in the `include/nlohmann` directory, run `make amalgamate` to create the single-header file `single_include/nlohmann/json.hpp`. The whole process is described [here](https://github.com/nlohmann/json/blob/develop/.github/CONTRIBUTING.md#files-to-change).\r\n\r\n## Please don't\r\n\r\n- The C++11 support varies between different **compilers** and versions. Please note the [list of supported compilers](https://github.com/nlohmann/json/blob/master/README.md#supported-compilers). Some compilers like GCC 4.8 (and earlier), Clang 3.3 (and earlier), or Microsoft Visual Studio 13.0 and earlier are known not to work due to missing or incomplete C++11 support. Please refrain from proposing changes that work around these compiler's limitations with `#ifdef`s or other means.\r\n- Specifically, I am aware of compilation problems with **Microsoft Visual Studio** (there even is an [issue label](https://github.com/nlohmann/json/issues?utf8=\u2713&q=label%3A%22visual+studio%22+) for these kind of bugs). I understand that even in 2016, complete C++11 support isn't there yet. But please also understand that I do not want to drop features or uglify the code just to make Microsoft's sub-standard compiler happy. The past has shown that there are ways to express the functionality such that the code compiles with the most recent MSVC - unfortunately, this is not the main objective of the project.\r\n- Please refrain from proposing changes that would **break [JSON](http://json.org) conformance**. If you propose a conformant extension of JSON to be supported by the library, please motivate this extension.\r\n- Please do not open pull requests that address **multiple issues**.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1150", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1150/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1150/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1150/events", "html_url": "https://github.com/nlohmann/json/pull/1150", "id": 336285243, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk3Nzc1NjYz", "number": 1150, "title": "cocoapods integration", "user": {"login": "graph", "id": 1088059, "node_id": "MDQ6VXNlcjEwODgwNTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1088059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graph", "html_url": "https://github.com/graph", "followers_url": "https://api.github.com/users/graph/followers", "following_url": "https://api.github.com/users/graph/following{/other_user}", "gists_url": "https://api.github.com/users/graph/gists{/gist_id}", "starred_url": "https://api.github.com/users/graph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graph/subscriptions", "organizations_url": "https://api.github.com/users/graph/orgs", "repos_url": "https://api.github.com/users/graph/repos", "events_url": "https://api.github.com/users/graph/events{/privacy}", "received_events_url": "https://api.github.com/users/graph/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-27T15:43:41Z", "updated_at": "2018-06-29T00:34:35Z", "closed_at": "2018-06-29T00:34:35Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1150", "html_url": "https://github.com/nlohmann/json/pull/1150", "diff_url": "https://github.com/nlohmann/json/pull/1150.diff", "patch_url": "https://github.com/nlohmann/json/pull/1150.patch"}, "body": "adds cocoapods integration so it can be used as a pod. See issue https://github.com/nlohmann/json/issues/1148"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1149", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1149/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1149/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1149/events", "html_url": "https://github.com/nlohmann/json/issues/1149", "id": 336195424, "node_id": "MDU6SXNzdWUzMzYxOTU0MjQ=", "number": 1149, "title": "Parse throwing errors", "user": {"login": "AistisT", "id": 14581924, "node_id": "MDQ6VXNlcjE0NTgxOTI0", "avatar_url": "https://avatars3.githubusercontent.com/u/14581924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AistisT", "html_url": "https://github.com/AistisT", "followers_url": "https://api.github.com/users/AistisT/followers", "following_url": "https://api.github.com/users/AistisT/following{/other_user}", "gists_url": "https://api.github.com/users/AistisT/gists{/gist_id}", "starred_url": "https://api.github.com/users/AistisT/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AistisT/subscriptions", "organizations_url": "https://api.github.com/users/AistisT/orgs", "repos_url": "https://api.github.com/users/AistisT/repos", "events_url": "https://api.github.com/users/AistisT/events{/privacy}", "received_events_url": "https://api.github.com/users/AistisT/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-06-27T11:49:04Z", "updated_at": "2018-06-28T20:41:21Z", "closed_at": "2018-06-28T20:41:21Z", "author_association": "NONE", "body": "So parse seem to work fine, if I load dll from my tester project, everything works fine, if I load exactly same dll with same data through windows services I get lots of errors  like \"Unhandled exception at 0x75000132 in xxxxxxx.exe: Microsoft C++ exception: nlohmann::detail::parse_error at memory location 0x0293A868. occurred\"\r\n\r\n\r\nThis is triggered by \r\n```\r\nbool parse_error(std::size_t, const std::string&,\r\n\t\t\t\tconst detail::exception& ex) override\r\n\t\t\t{\r\n\t\t\t\terrored = true;\r\n\t\t\t\tif (allow_exceptions)\r\n\t\t\t\t{\r\n\t\t\t\t\t// determine the proper exception type from the id\r\n\t\t\t\t\tswitch ((ex.id / 100) % 100)\r\n\t\t\t\t\t{\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tJSON_THROW(*reinterpret_cast<const detail::parse_error*>(&ex));\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tJSON_THROW(*reinterpret_cast<const detail::invalid_iterator*>(&ex));  // LCOV_EXCL_LINE\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\tJSON_THROW(*reinterpret_cast<const detail::type_error*>(&ex));  // LCOV_EXCL_LINE\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\tJSON_THROW(*reinterpret_cast<const detail::out_of_range*>(&ex));\r\n\t\t\t\t\tcase 5:\r\n\t\t\t\t\t\tJSON_THROW(*reinterpret_cast<const detail::other_error*>(&ex));  // LCOV_EXCL_LINE\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tassert(false);  // LCOV_EXCL_LINE\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n```\r\n\r\nat line 3624 of json.hpp, I am using hardcoded data defined right in dll at this moment, to rule out any memory issues, but it's not helping. It just dies when it's trying to parse std::wstring.\r\n\r\n```\r\n\tstatic int SendToAgent(std::wstring & data, LPCWSTR LogType)\r\n\t{\r\n\t\t\r\n\t\tif (mqttHandlerGlobal.IsAgentOnline())\r\n\t\t{\t\r\n\t\t\t//_asm {int 3}\r\n\t\t\tauto string = std::wstring(LogType);\r\n\t\t\tauto datatype = nlohmann::json::parse(string);\r\n\t\t\tauto parsedData = nlohmann::json::parse(data);\r\n\t\t\tnlohmann::json messageJson =\r\n\t\t\t{\r\n\t\t\t\t{ \"DataType\", datatype },\r\n\t\t\t\t{ \"Data\", parsedData },\r\n\t\t\t};\r\n\t\t\tprintf(\"Message Sent\\n\");\r\n\t\t\tauto message = messageJson.dump();\r\n\t\t\treturn mqttHandlerGlobal.MqttSend(message, *mqttHandlerGlobal.GetTopic());\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n```\r\n\r\ncalled by \r\n```\r\n\r\nstd::wstring test = L\"Test\";\r\nSendToAgent(test, L\"TestType\");\r\n```\r\nI've really got no clue what's causing it, apart that DLL with parsing code is being loaded by a different project that runs under windows service its exactly the same."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1148", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1148/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1148/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1148/events", "html_url": "https://github.com/nlohmann/json/issues/1148", "id": 336047903, "node_id": "MDU6SXNzdWUzMzYwNDc5MDM=", "number": 1148, "title": "cocoapod integration", "user": {"login": "graph", "id": 1088059, "node_id": "MDQ6VXNlcjEwODgwNTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1088059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graph", "html_url": "https://github.com/graph", "followers_url": "https://api.github.com/users/graph/followers", "following_url": "https://api.github.com/users/graph/following{/other_user}", "gists_url": "https://api.github.com/users/graph/gists{/gist_id}", "starred_url": "https://api.github.com/users/graph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graph/subscriptions", "organizations_url": "https://api.github.com/users/graph/orgs", "repos_url": "https://api.github.com/users/graph/repos", "events_url": "https://api.github.com/users/graph/events{/privacy}", "received_events_url": "https://api.github.com/users/graph/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/24", "html_url": "https://github.com/nlohmann/json/milestone/24", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/24/labels", "id": 3188647, "node_id": "MDk6TWlsZXN0b25lMzE4ODY0Nw==", "number": 24, "title": "Release 3.1.3", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 33, "state": "open", "created_at": "2018-03-14T21:05:47Z", "updated_at": "2018-07-21T12:46:17Z", "due_on": null, "closed_at": null}, "comments": 11, "created_at": "2018-06-27T01:42:34Z", "updated_at": "2018-07-05T19:19:07Z", "closed_at": "2018-07-05T19:19:07Z", "author_association": "NONE", "body": "Is this ok? If I do it can I push to this repo? I want to be able to more easily use this library on ios. Perhaps under the pod `njson`.\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1147", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1147/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1147/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1147/events", "html_url": "https://github.com/nlohmann/json/issues/1147", "id": 335760089, "node_id": "MDU6SXNzdWUzMzU3NjAwODk=", "number": 1147, "title": "wstring parsing", "user": {"login": "AistisT", "id": 14581924, "node_id": "MDQ6VXNlcjE0NTgxOTI0", "avatar_url": "https://avatars3.githubusercontent.com/u/14581924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AistisT", "html_url": "https://github.com/AistisT", "followers_url": "https://api.github.com/users/AistisT/followers", "following_url": "https://api.github.com/users/AistisT/following{/other_user}", "gists_url": "https://api.github.com/users/AistisT/gists{/gist_id}", "starred_url": "https://api.github.com/users/AistisT/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AistisT/subscriptions", "organizations_url": "https://api.github.com/users/AistisT/orgs", "repos_url": "https://api.github.com/users/AistisT/repos", "events_url": "https://api.github.com/users/AistisT/events{/privacy}", "received_events_url": "https://api.github.com/users/AistisT/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-26T10:43:00Z", "updated_at": "2018-06-26T13:35:18Z", "closed_at": "2018-06-26T13:35:18Z", "author_association": "NONE", "body": "It was mentioned before that latest in dev version supports wstring parsing when creating json.\r\nHow one would go about parsing wstring. Obvious way of\r\n\r\n```\r\n\tstatic int SendToAgent(std::wstring & data, LPCWSTR LogType)\r\n\t{\r\n\t\t\r\n\t\tif (mqttHandlerGlobal.IsAgentOnline())\r\n\t\t{\r\n\t\t\tnlohmann::json messageJson =\r\n\t\t\t{\r\n\t\t\t\t{ \"DataType\", u8\"Test message\" },\r\n\t\t\t\t{ \"Data\", data },\r\n\t\t\t};\r\n\r\n\t\t\tauto message = messageJson.dump();\r\n\t\t\treturn mqttHandlerGlobal.MqttSend(message, *mqttHandlerGlobal.GetTopic());\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n```\r\n\r\nDoesn't work as you end up with gibberish numbers in data field which then doesn't get parsed as json at the other end."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1146", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1146/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1146/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1146/events", "html_url": "https://github.com/nlohmann/json/issues/1146", "id": 335679591, "node_id": "MDU6SXNzdWUzMzU2Nzk1OTE=", "number": 1146, "title": "Is it possible to dump a two-dimensional array to \"[[null],[1,2,3]]\"?", "user": {"login": "GingerMoon", "id": 8342412, "node_id": "MDQ6VXNlcjgzNDI0MTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8342412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GingerMoon", "html_url": "https://github.com/GingerMoon", "followers_url": "https://api.github.com/users/GingerMoon/followers", "following_url": "https://api.github.com/users/GingerMoon/following{/other_user}", "gists_url": "https://api.github.com/users/GingerMoon/gists{/gist_id}", "starred_url": "https://api.github.com/users/GingerMoon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GingerMoon/subscriptions", "organizations_url": "https://api.github.com/users/GingerMoon/orgs", "repos_url": "https://api.github.com/users/GingerMoon/repos", "events_url": "https://api.github.com/users/GingerMoon/events{/privacy}", "received_events_url": "https://api.github.com/users/GingerMoon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-26T06:44:22Z", "updated_at": "2018-06-26T13:35:40Z", "closed_at": "2018-06-26T13:35:40Z", "author_association": "NONE", "body": " Is it possible to dump a two-dimensional array to \"[[null],[1,2,3]]\"?\r\n\r\nI tried the code below:\r\n   my_json j;\r\n    std::vector<int> a[2];\r\n    std::vector<int> a1;\r\n    a1.push_back(1);\r\n    a[1] = a1;\r\n    j[\"a\"] = a;\r\n\r\nThe output is:\r\n{\"a\":[[],[1]]}\r\nIs it possible to dump a two-dimensional array to \"[[null],[1,2,3]]\"?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1145", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1145/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1145/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1145/events", "html_url": "https://github.com/nlohmann/json/issues/1145", "id": 335265257, "node_id": "MDU6SXNzdWUzMzUyNjUyNTc=", "number": 1145, "title": "Want to write a class member variable and a struct variable ( this structure is inside the class) to the json file", "user": {"login": "quicksilver345", "id": 37621731, "node_id": "MDQ6VXNlcjM3NjIxNzMx", "avatar_url": "https://avatars0.githubusercontent.com/u/37621731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quicksilver345", "html_url": "https://github.com/quicksilver345", "followers_url": "https://api.github.com/users/quicksilver345/followers", "following_url": "https://api.github.com/users/quicksilver345/following{/other_user}", "gists_url": "https://api.github.com/users/quicksilver345/gists{/gist_id}", "starred_url": "https://api.github.com/users/quicksilver345/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quicksilver345/subscriptions", "organizations_url": "https://api.github.com/users/quicksilver345/orgs", "repos_url": "https://api.github.com/users/quicksilver345/repos", "events_url": "https://api.github.com/users/quicksilver345/events{/privacy}", "received_events_url": "https://api.github.com/users/quicksilver345/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-06-25T05:35:34Z", "updated_at": "2018-07-05T05:28:35Z", "closed_at": "2018-07-05T05:28:35Z", "author_association": "NONE", "body": "I have a class and inside that class i have a struct, now i want to write the class variable \"name\" and the structure member \"a\" in the json file but i am not able to do so, can you please help me with the problem. :-\r\n\r\nCode snipet ->\r\n\r\n```cpp\r\nclass ABC\r\n            {\r\n            public:\r\n                struct ex\r\n                {\r\n                public:\r\n                    int a;\r\n                };\r\n                static void registerclass()\r\n                {\r\n                    ClassMetaInfo<ABC>::registerMember(\"name\", &ABC::name);\r\n                    ClassMetaInfo<ex>::registerMember(\"int a \", &ex::a);\r\n                }\r\n                std::string name;\r\n                ex var = { };\r\n                \r\n            };\r\n\r\n            ABC::registerclass();\r\n            ABC p;\r\n           p.name = \"JOHN\";\r\n            json j = ClassMetaInfo<ABC>::deserialize(p);\r\n```\r\n\r\njson file output :- \r\n\r\n```js\r\n{\r\n    \"name\": \"JOHN\"\r\n}\r\n```\r\n\r\nBy the above code i am getting the class variable \"name\" written in the json file but cannot see the structure variable  \"a\" in the json file.\r\n\r\nI have tried to put the registerclass() method inside the structure also but still i am not getting the stucture variable \"a\" written in my json file\r\n\r\n(I want to write both the class variable and the structure variable in the json file, as per the above example i am expecting something like :-\r\n\r\n```js\r\n{\r\n    \"name\": \"JOHN\"\r\n    \" int a\" : 32 \r\n}\r\n```\r\n\r\nto be the json output\r\n)\r\n\r\nCan you please help me regarding the issue\r\n(Compiling on a windows machine in visual studio 2017)"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1144", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1144/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1144/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1144/events", "html_url": "https://github.com/nlohmann/json/pull/1144", "id": 335210188, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk2OTY4NzUw", "number": 1144, "title": "Fix links to cppreference named requirements (formerly concepts)", "user": {"login": "jrakow", "id": 19510812, "node_id": "MDQ6VXNlcjE5NTEwODEy", "avatar_url": "https://avatars3.githubusercontent.com/u/19510812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrakow", "html_url": "https://github.com/jrakow", "followers_url": "https://api.github.com/users/jrakow/followers", "following_url": "https://api.github.com/users/jrakow/following{/other_user}", "gists_url": "https://api.github.com/users/jrakow/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrakow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrakow/subscriptions", "organizations_url": "https://api.github.com/users/jrakow/orgs", "repos_url": "https://api.github.com/users/jrakow/repos", "events_url": "https://api.github.com/users/jrakow/events{/privacy}", "received_events_url": "https://api.github.com/users/jrakow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/24", "html_url": "https://github.com/nlohmann/json/milestone/24", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/24/labels", "id": 3188647, "node_id": "MDk6TWlsZXN0b25lMzE4ODY0Nw==", "number": 24, "title": "Release 3.1.3", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 33, "state": "open", "created_at": "2018-03-14T21:05:47Z", "updated_at": "2018-07-21T12:46:17Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2018-06-24T20:46:41Z", "updated_at": "2018-06-26T08:57:00Z", "closed_at": "2018-06-26T05:58:46Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1144", "html_url": "https://github.com/nlohmann/json/pull/1144", "diff_url": "https://github.com/nlohmann/json/pull/1144.diff", "patch_url": "https://github.com/nlohmann/json/pull/1144.patch"}, "body": "The link in https://github.com/nlohmann/json#stl-like-access is broken.\r\nIt points to https://en.cppreference.com/w/cpp/concept/ReversibleContainer.\r\n\r\n\"Concepts\" have been renamed to \"named requirements\".\r\nThis is because P0898R3 Standard Library Concepts has been merged into\r\nC++20: cplusplus/draft#2145.\r\nCppreference have moved their links accordingly.\r\n\r\nThis PR also links to HTTPS and not HTTP."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1143", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1143/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1143/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1143/events", "html_url": "https://github.com/nlohmann/json/issues/1143", "id": 335179321, "node_id": "MDU6SXNzdWUzMzUxNzkzMjE=", "number": 1143, "title": "Does json support converting an instance of a struct into json string?", "user": {"login": "GingerMoon", "id": 8342412, "node_id": "MDQ6VXNlcjgzNDI0MTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8342412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GingerMoon", "html_url": "https://github.com/GingerMoon", "followers_url": "https://api.github.com/users/GingerMoon/followers", "following_url": "https://api.github.com/users/GingerMoon/following{/other_user}", "gists_url": "https://api.github.com/users/GingerMoon/gists{/gist_id}", "starred_url": "https://api.github.com/users/GingerMoon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GingerMoon/subscriptions", "organizations_url": "https://api.github.com/users/GingerMoon/orgs", "repos_url": "https://api.github.com/users/GingerMoon/repos", "events_url": "https://api.github.com/users/GingerMoon/events{/privacy}", "received_events_url": "https://api.github.com/users/GingerMoon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-06-24T13:26:52Z", "updated_at": "2018-06-24T13:52:18Z", "closed_at": "2018-06-24T13:52:18Z", "author_association": "NONE", "body": "Does json support converting an instance of a struct into json string?\r\nAnd if yes, can the order of the fields be kept in the order of the declaration in the struct?\r\nFor example,\r\nstruct S {\r\nint Z;\r\nint A;\r\n};\r\nS s = {1,2};\r\n\r\nI tried to read the doc but not able to find the answer.\r\nThe expect json string is:\r\n{\"Z\":1, \"A\":2}\r\n\r\nAny sample code would be much appreciated.\r\n\r\nSome background information for this question:\r\nI am developing a Qt client for a blockchain. I need to sign for a transaction struct json. But the json fields are in the order of alphabet, however on the server side, golang json packeg, the order is the declaration order of the struct fields. Hence the verification for the signature failed."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1142", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1142/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1142/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1142/events", "html_url": "https://github.com/nlohmann/json/pull/1142", "id": 335123145, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk2OTE2MTUz", "number": 1142, "title": "meson: fix include directory", "user": {"login": "jrakow", "id": 19510812, "node_id": "MDQ6VXNlcjE5NTEwODEy", "avatar_url": "https://avatars3.githubusercontent.com/u/19510812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrakow", "html_url": "https://github.com/jrakow", "followers_url": "https://api.github.com/users/jrakow/followers", "following_url": "https://api.github.com/users/jrakow/following{/other_user}", "gists_url": "https://api.github.com/users/jrakow/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrakow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrakow/subscriptions", "organizations_url": "https://api.github.com/users/jrakow/orgs", "repos_url": "https://api.github.com/users/jrakow/repos", "events_url": "https://api.github.com/users/jrakow/events{/privacy}", "received_events_url": "https://api.github.com/users/jrakow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/24", "html_url": "https://github.com/nlohmann/json/milestone/24", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/24/labels", "id": 3188647, "node_id": "MDk6TWlsZXN0b25lMzE4ODY0Nw==", "number": 24, "title": "Release 3.1.3", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 33, "state": "open", "created_at": "2018-03-14T21:05:47Z", "updated_at": "2018-07-21T12:46:17Z", "due_on": null, "closed_at": null}, "comments": 8, "created_at": "2018-06-23T18:58:04Z", "updated_at": "2018-07-01T09:26:36Z", "closed_at": "2018-06-24T21:33:30Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1142", "html_url": "https://github.com/nlohmann/json/pull/1142", "diff_url": "https://github.com/nlohmann/json/pull/1142.diff", "patch_url": "https://github.com/nlohmann/json/pull/1142.patch"}, "body": "Currently Meson exports `single_include/nlohmann` as include directory.\r\nThe compiler flag `-I\u2026/nlohmann_json/single_include/nlohmann` is generated.\r\nAccording to the documentation, this is how you should include it:\r\n```c++\r\n#include <nlohmann/json.hpp>\r\n```\r\nThis does not work currently, but `#include <json.hpp>` does.\r\n\r\nThe correct flag directory is `-I\u2026/nlohmann_json/single_include` and this commit fixes the Meson file.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1141", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1141/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1141/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1141/events", "html_url": "https://github.com/nlohmann/json/issues/1141", "id": 334969511, "node_id": "MDU6SXNzdWUzMzQ5Njk1MTE=", "number": 1141, "title": "#Most efficient way to search for child parameters (recursive find?)", "user": {"login": "JimAtCanon", "id": 40063849, "node_id": "MDQ6VXNlcjQwMDYzODQ5", "avatar_url": "https://avatars2.githubusercontent.com/u/40063849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JimAtCanon", "html_url": "https://github.com/JimAtCanon", "followers_url": "https://api.github.com/users/JimAtCanon/followers", "following_url": "https://api.github.com/users/JimAtCanon/following{/other_user}", "gists_url": "https://api.github.com/users/JimAtCanon/gists{/gist_id}", "starred_url": "https://api.github.com/users/JimAtCanon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JimAtCanon/subscriptions", "organizations_url": "https://api.github.com/users/JimAtCanon/orgs", "repos_url": "https://api.github.com/users/JimAtCanon/repos", "events_url": "https://api.github.com/users/JimAtCanon/events{/privacy}", "received_events_url": "https://api.github.com/users/JimAtCanon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-22T18:04:07Z", "updated_at": "2018-07-05T19:03:10Z", "closed_at": "2018-07-05T11:26:31Z", "author_association": "NONE", "body": "Hello All-\r\n\r\nI have an application where I have a hierarchical set of JSON objects.  Meaning that I have objects that in turn have child JSON objects and so on.  I need to have the ability to allow the user to query  the value of one of the objects using something akin to a file path.  For example, example if my JSON object looks like:\r\n\r\n```js\r\n{\r\n         \"One\":1,\r\n         \"Two\":2,\r\n         \"Child\":{\r\n                 \"Child1\":1\r\n                 \"Child2\":2\r\n                 }\r\n         \"Three\":3\r\n}\r\n```\r\n \r\nI want to provide a method that will return the value of any parameter by passing a 'path' to the parameter.  Using the example above, if I wanted the value of the parameter \"Child2\", I could request it using the path 'Child/Child2', which would return the value 2.  I have it working with the code below:\r\n\r\n```cpp\r\nstd::filesystem::path path(parameterPath);\r\nfor (const auto &parameterName : path) {\r\n   nlohmann::json::iterator iterator = parameterValue.find(parameterName);\r\n   if (iterator != parameterValue.end()) {\r\n      parameterValue = *iterator; //  This makes a copy of the parameter, which is overkill, I just want a reference to it.\r\n      }\r\n     else {\r\n         parameterValue.clear();\r\n         break;\r\n     }\r\n}\r\n```\r\n\r\nHowever I suspect that this is inefficient because I am creating a copy of the parameters as I traverse the tree. I have also thought about iterators and pointers, but thought I would reach out to the community to to see if anyone has already solved this problem, hopefully in a more efficient manor.\r\n\r\nAny suggestions?\r\n\r\nThanks!\r\n\r\nJim"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1140", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1140/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1140/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1140/events", "html_url": "https://github.com/nlohmann/json/issues/1140", "id": 334104006, "node_id": "MDU6SXNzdWUzMzQxMDQwMDY=", "number": 1140, "title": " could not find to_json() method in T's namespace", "user": {"login": "AistisT", "id": 14581924, "node_id": "MDQ6VXNlcjE0NTgxOTI0", "avatar_url": "https://avatars3.githubusercontent.com/u/14581924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AistisT", "html_url": "https://github.com/AistisT", "followers_url": "https://api.github.com/users/AistisT/followers", "following_url": "https://api.github.com/users/AistisT/following{/other_user}", "gists_url": "https://api.github.com/users/AistisT/gists{/gist_id}", "starred_url": "https://api.github.com/users/AistisT/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AistisT/subscriptions", "organizations_url": "https://api.github.com/users/AistisT/orgs", "repos_url": "https://api.github.com/users/AistisT/repos", "events_url": "https://api.github.com/users/AistisT/events{/privacy}", "received_events_url": "https://api.github.com/users/AistisT/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-06-20T14:26:12Z", "updated_at": "2018-06-20T16:24:45Z", "closed_at": "2018-06-20T16:24:45Z", "author_association": "NONE", "body": "```\r\nnlohmann::json subscriber;\t\r\nsubscriber[\"Name\"] = &callerName;\r\nsubscriber[\"SubscribeTopic\"] = topicToSubscribe;\r\nsubscriber[\"CallBackTopic\"] = callBackTopic;\r\n\t\r\n\r\n```\r\n\r\nand\r\n ```\r\nnlohmann::json subscriber = {\r\n\t\t{ \"Name\", &callerName },\r\n\t\t{ \"SubscribeTopic\", &topicToSubscribe },\r\n\t\t{ \"CallBackTopic\", &callBackTopic },\r\n\t};\r\n```\r\nBoth cause the error\r\n\r\nVs 2017, latest release\r\n\r\nI seem to be unable to create json object, I've read through documentation like 20 times and there is nothing else that has been mentioned about it."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1139", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1139/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1139/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1139/events", "html_url": "https://github.com/nlohmann/json/issues/1139", "id": 334060211, "node_id": "MDU6SXNzdWUzMzQwNjAyMTE=", "number": 1139, "title": "chars get treated as JSON numbers not JSON strings", "user": {"login": "zoe-mcelderry", "id": 25527958, "node_id": "MDQ6VXNlcjI1NTI3OTU4", "avatar_url": "https://avatars3.githubusercontent.com/u/25527958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zoe-mcelderry", "html_url": "https://github.com/zoe-mcelderry", "followers_url": "https://api.github.com/users/zoe-mcelderry/followers", "following_url": "https://api.github.com/users/zoe-mcelderry/following{/other_user}", "gists_url": "https://api.github.com/users/zoe-mcelderry/gists{/gist_id}", "starred_url": "https://api.github.com/users/zoe-mcelderry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zoe-mcelderry/subscriptions", "organizations_url": "https://api.github.com/users/zoe-mcelderry/orgs", "repos_url": "https://api.github.com/users/zoe-mcelderry/repos", "events_url": "https://api.github.com/users/zoe-mcelderry/events{/privacy}", "received_events_url": "https://api.github.com/users/zoe-mcelderry/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-20T12:44:49Z", "updated_at": "2018-06-20T14:31:14Z", "closed_at": "2018-06-20T14:31:06Z", "author_association": "NONE", "body": "- What is the issue you have?\r\n\r\nI am creating some JSON from some C++ datatypes, one of which is the char datatype.  I would expect this to be treated as a JSON string, but when I call the dump method it outputs the value as if it were a JSON number.\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\n\r\nnlohmann::json json;\r\nchar sample = 'a';\r\njson[\"char\"] = sample;\r\nstd::cout << json.dump ();\r\n\r\n- What is the expected behavior?\r\n\r\nExpect the output to show : {\"char\":\"a\"}\r\n\r\n- And what is the actual behavior instead?\r\n\r\nThe output I get is : {\"char\":97}\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\n\r\nOS is Debian 9.3, compiler is g++ 6.3.0\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\n\r\nTag v3.1.2\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1138", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1138/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1138/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1138/events", "html_url": "https://github.com/nlohmann/json/pull/1138", "id": 333184232, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk1NDU5MTE2", "number": 1138, "title": "Feature/unordered map conversion", "user": {"login": "theodelrieu", "id": 15652306, "node_id": "MDQ6VXNlcjE1NjUyMzA2", "avatar_url": "https://avatars1.githubusercontent.com/u/15652306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theodelrieu", "html_url": "https://github.com/theodelrieu", "followers_url": "https://api.github.com/users/theodelrieu/followers", "following_url": "https://api.github.com/users/theodelrieu/following{/other_user}", "gists_url": "https://api.github.com/users/theodelrieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/theodelrieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theodelrieu/subscriptions", "organizations_url": "https://api.github.com/users/theodelrieu/orgs", "repos_url": "https://api.github.com/users/theodelrieu/repos", "events_url": "https://api.github.com/users/theodelrieu/events{/privacy}", "received_events_url": "https://api.github.com/users/theodelrieu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/24", "html_url": "https://github.com/nlohmann/json/milestone/24", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/24/labels", "id": 3188647, "node_id": "MDk6TWlsZXN0b25lMzE4ODY0Nw==", "number": 24, "title": "Release 3.1.3", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 33, "state": "open", "created_at": "2018-03-14T21:05:47Z", "updated_at": "2018-07-21T12:46:17Z", "due_on": null, "closed_at": null}, "comments": 6, "created_at": "2018-06-18T08:55:53Z", "updated_at": "2018-06-18T20:59:55Z", "closed_at": "2018-06-18T19:59:47Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1138", "html_url": "https://github.com/nlohmann/json/pull/1138", "diff_url": "https://github.com/nlohmann/json/pull/1138.diff", "patch_url": "https://github.com/nlohmann/json/pull/1138.patch"}, "body": "Add conversion for `std::unordered_map`, when `KeyType != basic_json<>::string_t`\r\n\r\nFixes #1133 \r\n\r\n* * *\r\n\r\n## Pull request checklist\r\n\r\nRead the [Contribution Guidelines](https://github.com/nlohmann/json/blob/develop/.github/CONTRIBUTING.md) for detailed information.\r\n\r\n- [x]  Changes are described in the pull request, or an [existing issue is referenced](https://github.com/nlohmann/json/issues).\r\n- [ ]  The test suite [compiles and runs](https://github.com/nlohmann/json/blob/develop/README.md#execute-unit-tests) without error.\r\n- [ ]  [Code coverage](https://coveralls.io/github/nlohmann/json) is 100%. Test cases can be added by editing the [test suite](https://github.com/nlohmann/json/tree/develop/test/src).\r\n- [x]  The source code is amalgamated; that is, after making changes to the sources in the `include/nlohmann` directory, run `make amalgamate` to create the single-header file `single_include/nlohmann/json.hpp`. The whole process is described [here](https://github.com/nlohmann/json/blob/develop/.github/CONTRIBUTING.md#files-to-change).\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1137", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1137/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1137/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1137/events", "html_url": "https://github.com/nlohmann/json/issues/1137", "id": 333078119, "node_id": "MDU6SXNzdWUzMzMwNzgxMTk=", "number": 1137, "title": "How do I count number of objects in array?", "user": {"login": "zavodnyrichard", "id": 10450344, "node_id": "MDQ6VXNlcjEwNDUwMzQ0", "avatar_url": "https://avatars1.githubusercontent.com/u/10450344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zavodnyrichard", "html_url": "https://github.com/zavodnyrichard", "followers_url": "https://api.github.com/users/zavodnyrichard/followers", "following_url": "https://api.github.com/users/zavodnyrichard/following{/other_user}", "gists_url": "https://api.github.com/users/zavodnyrichard/gists{/gist_id}", "starred_url": "https://api.github.com/users/zavodnyrichard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zavodnyrichard/subscriptions", "organizations_url": "https://api.github.com/users/zavodnyrichard/orgs", "repos_url": "https://api.github.com/users/zavodnyrichard/repos", "events_url": "https://api.github.com/users/zavodnyrichard/events{/privacy}", "received_events_url": "https://api.github.com/users/zavodnyrichard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-17T17:19:25Z", "updated_at": "2018-06-18T20:04:40Z", "closed_at": "2018-06-18T20:04:40Z", "author_association": "NONE", "body": "Hi. I wanna count number of objects in array. For example: **jsonObj[\"array\"]** is object that store another objects. I can access them by **jsonObj[\"array\"][0][\"something\"]**, **jsonObj[\"array\"][1][\"something\"]**, **jsonObj[\"array\"][2][\"something\"]**, and so on. So how do I count number of objects in **jsonObj[\"array\"]**?\r\n\r\nThank you. :)"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1136", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1136/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1136/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1136/events", "html_url": "https://github.com/nlohmann/json/issues/1136", "id": 333070003, "node_id": "MDU6SXNzdWUzMzMwNzAwMDM=", "number": 1136, "title": "Serializing a vector of classes?", "user": {"login": "voidblaze", "id": 32791127, "node_id": "MDQ6VXNlcjMyNzkxMTI3", "avatar_url": "https://avatars2.githubusercontent.com/u/32791127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/voidblaze", "html_url": "https://github.com/voidblaze", "followers_url": "https://api.github.com/users/voidblaze/followers", "following_url": "https://api.github.com/users/voidblaze/following{/other_user}", "gists_url": "https://api.github.com/users/voidblaze/gists{/gist_id}", "starred_url": "https://api.github.com/users/voidblaze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/voidblaze/subscriptions", "organizations_url": "https://api.github.com/users/voidblaze/orgs", "repos_url": "https://api.github.com/users/voidblaze/repos", "events_url": "https://api.github.com/users/voidblaze/events{/privacy}", "received_events_url": "https://api.github.com/users/voidblaze/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2018-06-17T15:14:26Z", "updated_at": "2018-06-28T13:07:37Z", "closed_at": "2018-06-28T12:27:46Z", "author_association": "NONE", "body": "I have a vector* of class* (vector<Doctor*> *doctors) and I need to serialize it. The class Doctor has some other vector* of class* that have to be serialized too. The question is, do I need to create to_json and from_json methods for vector*<Doctor*>, and for any other vectors of classes inside Doctor? I have already created the methods for the class doctor and for every other class that needs it, yet I keep getting the \"could not find to_json() method in T's namespace\". \r\n\r\nI am using MSVS 2017. Thank you in advance for your help!\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1135", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1135/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1135/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1135/events", "html_url": "https://github.com/nlohmann/json/issues/1135", "id": 333044178, "node_id": "MDU6SXNzdWUzMzMwNDQxNzg=", "number": 1135, "title": "Compile error. Unable convert form nullptr to nullptr&&", "user": {"login": "kirill-782", "id": 7936957, "node_id": "MDQ6VXNlcjc5MzY5NTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7936957?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirill-782", "html_url": "https://github.com/kirill-782", "followers_url": "https://api.github.com/users/kirill-782/followers", "following_url": "https://api.github.com/users/kirill-782/following{/other_user}", "gists_url": "https://api.github.com/users/kirill-782/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirill-782/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirill-782/subscriptions", "organizations_url": "https://api.github.com/users/kirill-782/orgs", "repos_url": "https://api.github.com/users/kirill-782/repos", "events_url": "https://api.github.com/users/kirill-782/events{/privacy}", "received_events_url": "https://api.github.com/users/kirill-782/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2018-06-17T08:00:30Z", "updated_at": "2018-07-10T08:57:52Z", "closed_at": "2018-07-10T08:55:34Z", "author_association": "NONE", "body": "I can not compile json.hpp.\r\n\r\n> error C2664: \"BasicJsonType *nlohmann::detail::json_sax_dom_parser<BasicJsonType>::handle_value<nullptr>(Value &&)\": \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u044c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 1 \u0438\u0437 \"nullptr\" \u0432 \"nullptr &&\"\r\n\r\nproblem code: \r\n```\r\n    bool null() override\r\n    {\r\n        handle_value(nullptr); \r\n        return true;\r\n    }\r\n```\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1134", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1134/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1134/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1134/events", "html_url": "https://github.com/nlohmann/json/pull/1134", "id": 332976523, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk1MzI2MTIw", "number": 1134, "title": "fixed compile error for #1045", "user": {"login": "Daniel599", "id": 24626802, "node_id": "MDQ6VXNlcjI0NjI2ODAy", "avatar_url": "https://avatars0.githubusercontent.com/u/24626802?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Daniel599", "html_url": "https://github.com/Daniel599", "followers_url": "https://api.github.com/users/Daniel599/followers", "following_url": "https://api.github.com/users/Daniel599/following{/other_user}", "gists_url": "https://api.github.com/users/Daniel599/gists{/gist_id}", "starred_url": "https://api.github.com/users/Daniel599/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Daniel599/subscriptions", "organizations_url": "https://api.github.com/users/Daniel599/orgs", "repos_url": "https://api.github.com/users/Daniel599/repos", "events_url": "https://api.github.com/users/Daniel599/events{/privacy}", "received_events_url": "https://api.github.com/users/Daniel599/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/24", "html_url": "https://github.com/nlohmann/json/milestone/24", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/24/labels", "id": 3188647, "node_id": "MDk6TWlsZXN0b25lMzE4ODY0Nw==", "number": 24, "title": "Release 3.1.3", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 33, "state": "open", "created_at": "2018-03-14T21:05:47Z", "updated_at": "2018-07-21T12:46:17Z", "due_on": null, "closed_at": null}, "comments": 8, "created_at": "2018-06-16T10:00:40Z", "updated_at": "2018-06-28T22:55:39Z", "closed_at": "2018-06-28T19:21:18Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1134", "html_url": "https://github.com/nlohmann/json/pull/1134", "diff_url": "https://github.com/nlohmann/json/pull/1134.diff", "patch_url": "https://github.com/nlohmann/json/pull/1134.patch"}, "body": "#1045 \r\nAdded ```to_json(BasicJsonType, iteration_proxy_internal)``` which was needed.\r\nnote: there are 2 TODOs to consider"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1133", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1133/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1133/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1133/events", "html_url": "https://github.com/nlohmann/json/issues/1133", "id": 332891166, "node_id": "MDU6SXNzdWUzMzI4OTExNjY=", "number": 1133, "title": "std::unordered_map in struct, serialization", "user": {"login": "d223chen", "id": 27775959, "node_id": "MDQ6VXNlcjI3Nzc1OTU5", "avatar_url": "https://avatars1.githubusercontent.com/u/27775959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d223chen", "html_url": "https://github.com/d223chen", "followers_url": "https://api.github.com/users/d223chen/followers", "following_url": "https://api.github.com/users/d223chen/following{/other_user}", "gists_url": "https://api.github.com/users/d223chen/gists{/gist_id}", "starred_url": "https://api.github.com/users/d223chen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d223chen/subscriptions", "organizations_url": "https://api.github.com/users/d223chen/orgs", "repos_url": "https://api.github.com/users/d223chen/repos", "events_url": "https://api.github.com/users/d223chen/events{/privacy}", "received_events_url": "https://api.github.com/users/d223chen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-15T19:35:31Z", "updated_at": "2018-06-18T19:59:47Z", "closed_at": "2018-06-18T19:59:47Z", "author_association": "NONE", "body": "- What is the issue you have?\r\n\t\t\r\nCannot build deserialization code for a std::unordered_map. Following the example in the README at https://github.com/nlohmann/json#arbitrary-types-conversions\r\n\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\n\r\n\r\n      #include <unordered_map>\r\n      #include <vector>\r\n      #include <string>\r\n      #include <nlohmann/json.hpp>\r\n\r\n      struct myStruct{\r\n        std::string structName;\r\n      }\r\n\t\t\t\t\r\n      struct myStructCollection {\r\n        std::unordered_map<int, myStruct> myStructs;\r\n        myStructCollection(std::unordered_map<int, myStruct> myStructs) : myStructs (myStructs){}\r\n      };\r\n\r\n      void from_json(const json& j, myStructCollection& p) {\r\n        p.myStructs = j.at(\"myStructs\").get<std::unordered_map<int, myStruct>>();\r\n      }\r\n\r\n- What is the expected behavior?\r\n\r\nBuilds. According to https://github.com/nlohmann/json#conversion-from-stl-containers, std::unordered_map is supported.\r\n\r\n- And what is the actual behavior instead?\r\n\r\nError at line 269 of \"utility\": \r\n\r\n      pair& operator=(pair&& _Right)\r\n        _NOEXCEPT_COND(is_nothrow_move_assignable_v<_Ty1>\r\n        && is_nothrow_move_assignable_v<_Ty2>)\r\n      {\t// assign from moved pair\r\n        first = _STD forward<_Ty1>(_Right.first); // ERROR ON THIS LINE!!!!\r\n        second = _STD forward<_Ty2>(_Right.second);\r\n        return (*this);\r\n      }\r\n\r\nError\t C2166\t\"l-value specifies const object\t\"\r\n\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\n\r\nMSVC compiler 19.14.26430, Windows 10, Visual Studio 2017 (version 15.7.2), v141 toolset.\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\n\r\nUsed vcpkg to install.\r\n\r\n- If you experience a compilation error: can you [compile and run the unit tests](https://github.com/nlohmann/json#execute-unit-tests)?\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1132", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1132/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1132/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1132/events", "html_url": "https://github.com/nlohmann/json/issues/1132", "id": 332791357, "node_id": "MDU6SXNzdWUzMzI3OTEzNTc=", "number": 1132, "title": "NuGet Package", "user": {"login": "btowntkd", "id": 1986421, "node_id": "MDQ6VXNlcjE5ODY0MjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1986421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/btowntkd", "html_url": "https://github.com/btowntkd", "followers_url": "https://api.github.com/users/btowntkd/followers", "following_url": "https://api.github.com/users/btowntkd/following{/other_user}", "gists_url": "https://api.github.com/users/btowntkd/gists{/gist_id}", "starred_url": "https://api.github.com/users/btowntkd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/btowntkd/subscriptions", "organizations_url": "https://api.github.com/users/btowntkd/orgs", "repos_url": "https://api.github.com/users/btowntkd/repos", "events_url": "https://api.github.com/users/btowntkd/events{/privacy}", "received_events_url": "https://api.github.com/users/btowntkd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 968316937, "node_id": "MDU6TGFiZWw5NjgzMTY5Mzc=", "url": "https://api.github.com/repos/nlohmann/json/labels/good%20first%20issue", "name": "good first issue", "color": "d4c5f9", "default": true}, {"id": 959018031, "node_id": "MDU6TGFiZWw5NTkwMTgwMzE=", "url": "https://api.github.com/repos/nlohmann/json/labels/pinned", "name": "pinned", "color": "FFFFFF", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-15T14:16:25Z", "updated_at": "2018-07-21T12:26:59Z", "closed_at": null, "author_association": "NONE", "body": "Please release this library as a NuGet package."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1131", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1131/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1131/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1131/events", "html_url": "https://github.com/nlohmann/json/issues/1131", "id": 332732092, "node_id": "MDU6SXNzdWUzMzI3MzIwOTI=", "number": 1131, "title": "dump() can't handle umlauts", "user": {"login": "AndreasMartin72", "id": 11562654, "node_id": "MDQ6VXNlcjExNTYyNjU0", "avatar_url": "https://avatars1.githubusercontent.com/u/11562654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreasMartin72", "html_url": "https://github.com/AndreasMartin72", "followers_url": "https://api.github.com/users/AndreasMartin72/followers", "following_url": "https://api.github.com/users/AndreasMartin72/following{/other_user}", "gists_url": "https://api.github.com/users/AndreasMartin72/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreasMartin72/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreasMartin72/subscriptions", "organizations_url": "https://api.github.com/users/AndreasMartin72/orgs", "repos_url": "https://api.github.com/users/AndreasMartin72/repos", "events_url": "https://api.github.com/users/AndreasMartin72/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreasMartin72/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-15T10:59:05Z", "updated_at": "2018-06-15T14:25:46Z", "closed_at": "2018-06-15T12:23:06Z", "author_association": "NONE", "body": "This small example runs into an exception (\"invalid UTF-8 byte at index...\"):\r\n\r\n```\r\n    nlohmann::json test;\r\n    test[\"Value\"] = \"F\u00fcr\";\r\n    cout << test.dump().c_str();\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1130", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1130/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1130/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1130/events", "html_url": "https://github.com/nlohmann/json/pull/1130", "id": 332079088, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk0NjUwNzgw", "number": 1130, "title": " test (non)equality for alt_string implementation ", "user": {"login": "agrianius", "id": 37244280, "node_id": "MDQ6VXNlcjM3MjQ0Mjgw", "avatar_url": "https://avatars0.githubusercontent.com/u/37244280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agrianius", "html_url": "https://github.com/agrianius", "followers_url": "https://api.github.com/users/agrianius/followers", "following_url": "https://api.github.com/users/agrianius/following{/other_user}", "gists_url": "https://api.github.com/users/agrianius/gists{/gist_id}", "starred_url": "https://api.github.com/users/agrianius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agrianius/subscriptions", "organizations_url": "https://api.github.com/users/agrianius/orgs", "repos_url": "https://api.github.com/users/agrianius/repos", "events_url": "https://api.github.com/users/agrianius/events{/privacy}", "received_events_url": "https://api.github.com/users/agrianius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/24", "html_url": "https://github.com/nlohmann/json/milestone/24", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/24/labels", "id": 3188647, "node_id": "MDk6TWlsZXN0b25lMzE4ODY0Nw==", "number": 24, "title": "Release 3.1.3", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 33, "state": "open", "created_at": "2018-03-14T21:05:47Z", "updated_at": "2018-07-21T12:46:17Z", "due_on": null, "closed_at": null}, "comments": 6, "created_at": "2018-06-13T16:50:59Z", "updated_at": "2018-06-18T20:01:59Z", "closed_at": "2018-06-18T20:01:54Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1130", "html_url": "https://github.com/nlohmann/json/pull/1130", "diff_url": "https://github.com/nlohmann/json/pull/1130.diff", "patch_url": "https://github.com/nlohmann/json/pull/1130.patch"}, "body": "Add a bit more tests for alt_string implementation"}]