[{"url": "https://api.github.com/repos/nlohmann/json/issues/617", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/617/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/617/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/617/events", "html_url": "https://github.com/nlohmann/json/issues/617", "id": 235572263, "node_id": "MDU6SXNzdWUyMzU1NzIyNjM=", "number": 617, "title": "icc16 error", "user": {"login": "vsakharuk", "id": 5408026, "node_id": "MDQ6VXNlcjU0MDgwMjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/5408026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsakharuk", "html_url": "https://github.com/vsakharuk", "followers_url": "https://api.github.com/users/vsakharuk/followers", "following_url": "https://api.github.com/users/vsakharuk/following{/other_user}", "gists_url": "https://api.github.com/users/vsakharuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsakharuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsakharuk/subscriptions", "organizations_url": "https://api.github.com/users/vsakharuk/orgs", "repos_url": "https://api.github.com/users/vsakharuk/repos", "events_url": "https://api.github.com/users/vsakharuk/events{/privacy}", "received_events_url": "https://api.github.com/users/vsakharuk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 706237888, "node_id": "MDU6TGFiZWw3MDYyMzc4ODg=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20icc", "name": "platform: icc", "color": "eb6420", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-13T14:23:18Z", "updated_at": "2017-09-29T08:33:12Z", "closed_at": "2017-07-08T14:23:06Z", "author_association": "NONE", "body": "Hello folks,\r\n2.1.1 does not compile with icc 16, while works with clang and gcc.\r\nError:\r\n`json.hpp(11227): error: expression must have a constant value\r\n                  static_assert(std::is_signed<T>() == std::is_signed<decltype(x)>(), \"\");\r\n                                                    ^\r\n          detected during:\r\n            instantiation of \"bool nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::lexer::strtonum::to(T &) const [with ObjectType=std::map, ArrayType=std::vector, StringType=std::string, BooleanType=bool, NumberIntegerType=int64_t={long}, NumberUnsignedType=uint64_t={unsigned long}, NumberFloatType=double, AllocatorType=std::allocator, JSONSerializer=nlohmann::adl_serializer,\r\n                      T=uint64_t={unsigned long}, <unnamed>=void]\" at line 11275`\r\n\r\nMay I suggest to replace line 11227\r\n`static_assert(std::is_signed<T>() == std::is_signed<decltype(x)>(), \"\");`\r\nwith\r\n`static_assert(std::is_signed<T>::value == std::is_signed<decltype(x)>(), \"\");`\r\n\r\nRegards V.\r\n\r\nEdit:\r\n\r\nSorry that patch does not help all the time. This one complies with icc:\r\n`static_assert(std::is_signed<T>::value == std::is_signed<decltype(x)>::value, \"\")`"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/616", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/616/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/616/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/616/events", "html_url": "https://github.com/nlohmann/json/issues/616", "id": 235533112, "node_id": "MDU6SXNzdWUyMzU1MzMxMTI=", "number": 616, "title": "[-Wdeprecated-declarations] in row `j >> ss;` in file `json.hpp:7405:26` and FAILED unit tests with MinGWx64!", "user": {"login": "sledgeh", "id": 13828976, "node_id": "MDQ6VXNlcjEzODI4OTc2", "avatar_url": "https://avatars2.githubusercontent.com/u/13828976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sledgeh", "html_url": "https://github.com/sledgeh", "followers_url": "https://api.github.com/users/sledgeh/followers", "following_url": "https://api.github.com/users/sledgeh/following{/other_user}", "gists_url": "https://api.github.com/users/sledgeh/gists{/gist_id}", "starred_url": "https://api.github.com/users/sledgeh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sledgeh/subscriptions", "organizations_url": "https://api.github.com/users/sledgeh/orgs", "repos_url": "https://api.github.com/users/sledgeh/repos", "events_url": "https://api.github.com/users/sledgeh/events{/privacy}", "received_events_url": "https://api.github.com/users/sledgeh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 486186748, "node_id": "MDU6TGFiZWw0ODYxODY3NDg=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20mingw", "name": "platform: mingw", "color": "eb6420", "default": false}, {"id": 344572510, "node_id": "MDU6TGFiZWwzNDQ1NzI1MTA=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20help%20needed", "name": "state: help needed", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 27, "created_at": "2017-06-13T12:13:21Z", "updated_at": "2017-07-30T19:55:12Z", "closed_at": "2017-07-30T19:55:12Z", "author_association": "NONE", "body": "Hi. My compiler MinGWx64 said [-Wdeprecated-declarations]\r\n\r\nBranch: develop\r\nCommit: fd4a0ecabc301c5b6b551058080120d3bb6ee729\r\n\r\nInfo about commit:\r\n```\r\n$ git log -1\r\ncommit fd4a0ecabc301c5b6b551058080120d3bb6ee729\r\nMerge: 5fa5c17 88dc7c1\r\nAuthor: Niels Lohmann <mail@nlohmann.me>\r\nDate:   Tue Jun 13 08:41:14 2017 +0200\r\n\r\n    Merge branch 'feature/ifstream' into develop\r\n```\r\nAbout compiler:\r\n```\r\n$ g++ --version\r\ng++.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 6.2.0\r\nCopyright (C) 2016 Free Software Foundation, Inc.\r\n```\r\n\r\nCompiler output\r\n```\r\nxxxxxx\\nloghman-json-cpp\\test\\src\\unit-serialization.cpp: In function 'void ____C_A_T_C_H____T_E_S_T____34()':\r\nxxxxxx\\nloghman-json-cpp\\test\\src\\unit-serialization.cpp:71:18: warning: 'std::ostream& nlohmann::operator>>(const nlohmann::basic_json<>&, std::ostream&)' is deprecated [-Wdeprecated-declarations]\r\n             j >> ss;\r\n                  ^~\r\nIn file included from xxxxxx\\nloghman-json-cpp\\test\\src\\unit-serialization.cpp:31:0:\r\nG:/user-sdd/devel.emb/workspace/avds/Libraries/nloghman-json-cpp/src/json.hpp:7405:26: note: declared here\r\n     friend std::ostream& operator>>(const basic_json& j, std::ostream& o)\r\n                          ^~~~~~~~\r\nxxxxxx\\nloghman-json-cpp\\test\\src\\unit-serialization.cpp:80:18: warning: 'std::ostream& nlohmann::operator>>(const nlohmann::basic_json<>&, std::ostream&)' is deprecated [-Wdeprecated-declarations]\r\n             j >> ss;\r\n                  ^~\r\nIn file included from xxxxxx\\nloghman-json-cpp\\test\\src\\unit-serialization.cpp:31:0:\r\nG:/user-sdd/devel.emb/workspace/avds/Libraries/nloghman-json-cpp/src/json.hpp:7405:26: note: declared here\r\n     friend std::ostream& operator>>(const basic_json& j, std::ostream& o)\r\n                          ^~~~~~~~\r\nxxxxxx\\nloghman-json-cpp\\test\\src\\unit-serialization.cpp:91:18: warning: 'std::ostream& nlohmann::operator>>(const nlohmann::basic_json<>&, std::ostream&)' is deprecated [-Wdeprecated-declarations]\r\n             j >> ss;\r\n                  ^~\r\nIn file included from xxxxxx\\nloghman-json-cpp\\test\\src\\unit-serialization.cpp:31:0:\r\nG:/user-sdd/devel.emb/workspace/avds/Libraries/nloghman-json-cpp/src/json.hpp:7405:26: note: declared here\r\n     friend std::ostream& operator>>(const basic_json& j, std::ostream& o)\r\n                          ^~~~~~~~\r\n```\r\n\r\nRun `json_unit.exe`\r\n```\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\njson_unit.exe is a Catch v1.8.1 host application.\r\nRun with -? for options\r\n\r\n-------------------------------------------------------------------------------\r\ncompliance tests from json.org\r\n  no failures with trailing literals (relaxed)\r\n-------------------------------------------------------------------------------\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:85\r\n...............................................................................\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:100: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/json_tests/fail7.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:100: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/json_tests/fail8.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:100: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/json_tests/fail10.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\n-------------------------------------------------------------------------------\r\ncompliance tests from json.org\r\n  expected passes\r\n-------------------------------------------------------------------------------\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:104\r\n...............................................................................\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:116: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/json_tests/pass1.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:116: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/json_tests/pass2.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:116: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/json_tests/pass3.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\n-------------------------------------------------------------------------------\r\ncompliance tests from nativejson-benchmark\r\n  roundtrip\r\n-------------------------------------------------------------------------------\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:281\r\n...............................................................................\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:281: FAILED:\r\ndue to unexpected exception with message:\r\n  [json.exception.parse_error.101] parse error at 1: syntax error - unexpected\r\n  end of input\r\n\r\n-------------------------------------------------------------------------------\r\ntest suite from json-test-suite\r\n  read all sample.json\r\n-------------------------------------------------------------------------------\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:335\r\n...............................................................................\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:341: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:344: FAILED:\r\n  CHECK( j.size() == 3 )\r\nwith expansion:\r\n  0 == 3\r\n\r\n-------------------------------------------------------------------------------\r\njson.org examples\r\n  1.json\r\n-------------------------------------------------------------------------------\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:352\r\n...............................................................................\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:356: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\n-------------------------------------------------------------------------------\r\njson.org examples\r\n  2.json\r\n-------------------------------------------------------------------------------\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:359\r\n...............................................................................\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:363: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\n-------------------------------------------------------------------------------\r\njson.org examples\r\n  3.json\r\n-------------------------------------------------------------------------------\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:366\r\n...............................................................................\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:370: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\n-------------------------------------------------------------------------------\r\njson.org examples\r\n  4.json\r\n-------------------------------------------------------------------------------\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:373\r\n...............................................................................\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:377: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\n-------------------------------------------------------------------------------\r\njson.org examples\r\n  5.json\r\n-------------------------------------------------------------------------------\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:380\r\n...............................................................................\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:384: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\n-------------------------------------------------------------------------------\r\nnst's JSONTestSuite\r\n  test_parsing\r\n  y\r\n-------------------------------------------------------------------------------\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:461\r\n...............................................................................\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_array_arraysWithSpaces.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_array_empty-string.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_array_empty.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_array_ending_with_newline.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_array_false.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_array_heterogeneous.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_array_null.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_array_with_1_and_newline.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_array_with_leading_space.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_array_with_several_null.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_array_with_trailing_space.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_number.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_number_0e+1.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_number_0e1.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_number_after_space.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_number_double_close_to_zero.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_number_double_huge_neg_exp.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_number_int_with_exp.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_number_minus_zero.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_number_negative_int.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_number_negative_one.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_number_negative_zero.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_number_real_capital_e.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_number_real_capital_e_neg_exp.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_number_real_capital_e_pos_exp.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_number_real_exponent.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_number_real_fraction_exponent.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_number_real_neg_exp.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_number_real_pos_exponent.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_number_real_underflow.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_number_simple_int.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_number_simple_real.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_number_too_big_neg_int.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_number_too_big_pos_int.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_number_very_big_negative_int.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_object.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_object_basic.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_object_duplicated_key.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_object_duplicated_key_and_value.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_object_empty.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_object_empty_key.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_object_escaped_null_in_key.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_object_extreme_numbers.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_object_long_strings.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_object_simple.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_object_string_unicode.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_object_with_newlines.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_1_2_3_bytes_UTF-8_sequences.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_string_UTF-\r\n  16_Surrogates_U+1D11E_MUSICAL_SYMBOL_G_CLEF.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_accepted_surrogate_pair.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_accepted_surrogate_pairs.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_allowed_escapes.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_backslash_and_u_escaped_zero.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_backslash_doublequotes.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_string_comments.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_double_escape_a.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_double_escape_n.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_escaped_control_character.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_escaped_noncharacter.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_string_in_array.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_in_array_with_leading_space.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_last_surrogates_1_and_2.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_newline_uescaped.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_nonCharacterInUTF-8_U+10FFFF.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_nonCharacterInUTF-8_U+1FFFF.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_nonCharacterInUTF-8_U+FFFF.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_string_null_escape.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_string_one-byte-utf-\r\n  8.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_string_pi.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_string_simple_ascii.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_string_space.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_string_three-byte-\r\n  utf-8.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_string_two-byte-utf-\r\n  8.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_u+2028_line_sep.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_u+2029_par_sep.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_string_uEscape.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_unescaped_char_delete.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_string_unicode.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_unicodeEscapedBackslash.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_string_unicode_2.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_unicode_U+200B_ZERO_WIDTH_SPACE.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_unicode_U+2064_invisible_plus.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_unicode_escaped_double_quote.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_string_utf8.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_string_with_del_character.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_structure_lonely_false.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_structure_lonely_int.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_structure_lonely_negative_real.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_structure_lonely_null.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_structure_lonely_string.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_structure_lonely_true.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_structure_string_empty.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_structure_trailing_newline.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_structure_true_in_array.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:567: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_structure_whitespace_array.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\n-------------------------------------------------------------------------------\r\nnst's JSONTestSuite\r\n  test_parsing\r\n  n -> y (relaxed)\r\n-------------------------------------------------------------------------------\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:779\r\n...............................................................................\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:808: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  n_array_comma_after_close.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:808: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/n_array_extra_close.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:808: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  n_object_trailing_comment.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:808: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  n_object_trailing_comment_open.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:808: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  n_object_trailing_comment_slash_open.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:808: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  n_object_trailing_comment_slash_open_incomplete.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:808: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  n_object_with_trailing_garbage.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:808: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  n_string_with_trailing_garbage.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:808: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  n_structure_array_trailing_garbage.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:808: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  n_structure_array_with_extra_array_close.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:808: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  n_structure_close_unopened_array.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:808: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  n_structure_double_array.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:808: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  n_structure_number_with_trailing_garbage.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:808: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  n_structure_object_followed_by_closing_object.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:808: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  n_structure_object_with_trailing_garbage.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:808: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/n_structure_trailing_#.\r\n  json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\n-------------------------------------------------------------------------------\r\nnst's JSONTestSuite\r\n  test_parsing\r\n  i -> y\r\n-------------------------------------------------------------------------------\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:812\r\n...............................................................................\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:831: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  i_structure_500_nested_arrays.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:831: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/i_structure_UTF-\r\n  8_BOM_empty_object.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:831: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  i_string_unicode_U+10FFFE_nonchar.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:831: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  i_string_unicode_U+1FFFE_nonchar.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:831: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  i_string_unicode_U+FDD0_nonchar.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:831: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  i_string_unicode_U+FFFE_nonchar.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\n-------------------------------------------------------------------------------\r\nnst's JSONTestSuite\r\n  test_parsing\r\n  i/y -> n (out of range)\r\n-------------------------------------------------------------------------------\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:836\r\n...............................................................................\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:851: FAILED:\r\n  CHECK_THROWS_AS( f >> j, json::out_of_range )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  i_number_neg_int_huge_exp.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:851: FAILED:\r\n  CHECK_THROWS_AS( f >> j, json::out_of_range )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  i_number_pos_double_huge_exp.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:851: FAILED:\r\n  CHECK_THROWS_AS( f >> j, json::out_of_range )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/y_number_huge_exp.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:851: FAILED:\r\n  CHECK_THROWS_AS( f >> j, json::out_of_range )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_number_real_neg_overflow.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:851: FAILED:\r\n  CHECK_THROWS_AS( f >> j, json::out_of_range )\r\ndue to unexpected exception with message:\r\n  filename := test/data/nst_json_testsuite/test_parsing/\r\n  y_number_real_pos_overflow.json\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n\r\n-------------------------------------------------------------------------------\r\nBig List of Naughty Strings\r\n  parsing blns.json\r\n-------------------------------------------------------------------------------\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:901\r\n...............................................................................\r\n\r\nX:\\xxx\\nloghman-json-cpp\\test\\src\\unit-testsuites.cpp:905: FAILED:\r\n  CHECK_NOTHROW( f >> j )\r\ndue to unexpected exception with message:\r\n  [json.exception.parse_error.111] parse error: bad input stream\r\n```\r\n\r\n\r\n\r\nI did not found in CONTRIBUTING.md that I should not post such a problems. I believe this report will be useful."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/615", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/615/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/615/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/615/events", "html_url": "https://github.com/nlohmann/json/pull/615", "id": 235487765, "node_id": "MDExOlB1bGxSZXF1ZXN0MTI1MzE0OTE4", "number": 615, "title": "remove std::pair support", "user": {"login": "theodelrieu", "id": 15652306, "node_id": "MDQ6VXNlcjE1NjUyMzA2", "avatar_url": "https://avatars1.githubusercontent.com/u/15652306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theodelrieu", "html_url": "https://github.com/theodelrieu", "followers_url": "https://api.github.com/users/theodelrieu/followers", "following_url": "https://api.github.com/users/theodelrieu/following{/other_user}", "gists_url": "https://api.github.com/users/theodelrieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/theodelrieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theodelrieu/subscriptions", "organizations_url": "https://api.github.com/users/theodelrieu/orgs", "repos_url": "https://api.github.com/users/theodelrieu/repos", "events_url": "https://api.github.com/users/theodelrieu/events{/privacy}", "received_events_url": "https://api.github.com/users/theodelrieu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-13T09:15:36Z", "updated_at": "2017-06-16T16:18:00Z", "closed_at": "2017-06-16T16:16:21Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/615", "html_url": "https://github.com/nlohmann/json/pull/615", "diff_url": "https://github.com/nlohmann/json/pull/615.diff", "patch_url": "https://github.com/nlohmann/json/pull/615.patch"}, "body": "As stated in #614, I believe the `std::pair` support I introduced in #609 is bogus. How a pair should be represented is dependent of context, so I think it is wiser to remove it, and leave the question open. "}, {"url": "https://api.github.com/repos/nlohmann/json/issues/614", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/614/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/614/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/614/events", "html_url": "https://github.com/nlohmann/json/issues/614", "id": 234998198, "node_id": "MDU6SXNzdWUyMzQ5OTgxOTg=", "number": 614, "title": "to_json for pairs, tuples", "user": {"login": "hsdk123", "id": 4100142, "node_id": "MDQ6VXNlcjQxMDAxNDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/4100142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hsdk123", "html_url": "https://github.com/hsdk123", "followers_url": "https://api.github.com/users/hsdk123/followers", "following_url": "https://api.github.com/users/hsdk123/following{/other_user}", "gists_url": "https://api.github.com/users/hsdk123/gists{/gist_id}", "starred_url": "https://api.github.com/users/hsdk123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hsdk123/subscriptions", "organizations_url": "https://api.github.com/users/hsdk123/orgs", "repos_url": "https://api.github.com/users/hsdk123/repos", "events_url": "https://api.github.com/users/hsdk123/events{/privacy}", "received_events_url": "https://api.github.com/users/hsdk123/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 14, "created_at": "2017-06-10T11:53:14Z", "updated_at": "2017-06-19T15:36:11Z", "closed_at": "2017-06-19T15:36:04Z", "author_association": "NONE", "body": "Hi, I was wondering if there might be a simple way to to_json() pairs and tuples, instead of having to explicitly create each element for json. "}, {"url": "https://api.github.com/repos/nlohmann/json/issues/613", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/613/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/613/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/613/events", "html_url": "https://github.com/nlohmann/json/issues/613", "id": 234977412, "node_id": "MDU6SXNzdWUyMzQ5Nzc0MTI=", "number": 613, "title": "Using uninitialized memory 'buf' in line 11173 v2.1.1?", "user": {"login": "mireiner", "id": 18225068, "node_id": "MDQ6VXNlcjE4MjI1MDY4", "avatar_url": "https://avatars1.githubusercontent.com/u/18225068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mireiner", "html_url": "https://github.com/mireiner", "followers_url": "https://api.github.com/users/mireiner/followers", "following_url": "https://api.github.com/users/mireiner/following{/other_user}", "gists_url": "https://api.github.com/users/mireiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/mireiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mireiner/subscriptions", "organizations_url": "https://api.github.com/users/mireiner/orgs", "repos_url": "https://api.github.com/users/mireiner/repos", "events_url": "https://api.github.com/users/mireiner/events{/privacy}", "received_events_url": "https://api.github.com/users/mireiner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-06-10T03:41:47Z", "updated_at": "2017-06-10T16:02:37Z", "closed_at": "2017-06-10T16:02:37Z", "author_association": "NONE", "body": "json.hpp v2.1.1\r\n\r\nUsing uninitialized memory 'buf'?\r\n\r\nLines\r\n\r\n11149    std::array<char, 64> buf;\r\n- - - -\r\n11173    if ((len + 1) < buf.size())\r\n11174    {\r\n11175        std::copy(m_start, m_end, buf.begin());\r\n11176        buf[len] = 0;\r\n11177        buf[ds_pos] = decimal_point_char;\r\n11178        data = buf.data();\r\n11179    }"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/612", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/612/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/612/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/612/events", "html_url": "https://github.com/nlohmann/json/issues/612", "id": 234517393, "node_id": "MDU6SXNzdWUyMzQ1MTczOTM=", "number": 612, "title": "How to parse multiple same Keys of JSON and save them?", "user": {"login": "dk1206", "id": 10271265, "node_id": "MDQ6VXNlcjEwMjcxMjY1", "avatar_url": "https://avatars1.githubusercontent.com/u/10271265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dk1206", "html_url": "https://github.com/dk1206", "followers_url": "https://api.github.com/users/dk1206/followers", "following_url": "https://api.github.com/users/dk1206/following{/other_user}", "gists_url": "https://api.github.com/users/dk1206/gists{/gist_id}", "starred_url": "https://api.github.com/users/dk1206/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dk1206/subscriptions", "organizations_url": "https://api.github.com/users/dk1206/orgs", "repos_url": "https://api.github.com/users/dk1206/repos", "events_url": "https://api.github.com/users/dk1206/events{/privacy}", "received_events_url": "https://api.github.com/users/dk1206/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-08T12:53:41Z", "updated_at": "2017-06-11T12:51:22Z", "closed_at": "2017-06-11T12:51:22Z", "author_association": "NONE", "body": "Hey guys,\r\n\r\n**This is NOT AN ISSUE, but Niels told me to put my question here anyway.**\r\n\r\nI have several Objects in my JSON, something like this:\r\n\r\n```\r\n {\r\n  Id= 1\r\n  Name = David\r\n},\r\n{\r\n  Id = 2\r\n  Name = Katja\r\n},\r\n{\r\n  Id = 3\r\n  Name = Luka\r\n},\r\n```\r\n..\r\n\r\nAs you can see, I have several identifiers (Id, Name) which are the same in my JSON. How can I do this in C++ with this Lib, so that I can parse it only once and store it somewhere for future use?\r\n\r\nE.g. I want to populate  a List of Users on my GUI. And then also track which User was clicked and call get that Id from JSON (there are more data in JSON than Id and Name).\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/611", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/611/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/611/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/611/events", "html_url": "https://github.com/nlohmann/json/issues/611", "id": 234329746, "node_id": "MDU6SXNzdWUyMzQzMjk3NDY=", "number": 611, "title": "\"Multiple declarations\" error when using types defined with `typedef`", "user": {"login": "glfmn", "id": 14112725, "node_id": "MDQ6VXNlcjE0MTEyNzI1", "avatar_url": "https://avatars0.githubusercontent.com/u/14112725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glfmn", "html_url": "https://github.com/glfmn", "followers_url": "https://api.github.com/users/glfmn/followers", "following_url": "https://api.github.com/users/glfmn/following{/other_user}", "gists_url": "https://api.github.com/users/glfmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/glfmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glfmn/subscriptions", "organizations_url": "https://api.github.com/users/glfmn/orgs", "repos_url": "https://api.github.com/users/glfmn/repos", "events_url": "https://api.github.com/users/glfmn/events{/privacy}", "received_events_url": "https://api.github.com/users/glfmn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-06-07T20:18:58Z", "updated_at": "2017-06-09T22:44:45Z", "closed_at": "2017-06-09T22:44:45Z", "author_association": "NONE", "body": "I have types in my code that use `typedef` statements to specialize some of the standard container types.  I get a \"Multiple declarations\" error for `to_json` when I attempt to convert one of these to json so I can output them into a results file.\r\n\r\n# Example:\r\n```cpp\r\ntypdef vector<float> State;\r\ntypdef vector<float> Offset;\r\n```\r\n\r\nand I use it inside of other types like\r\n\r\n```cpp\r\nstruct Node {\r\n    Offset offset;\r\n    State state;\r\n    float cost;\r\n}\r\n```\r\n\r\nI tried defining a `to_json` instance for my `Node` type like so:\r\n\r\n```cpp\r\nvoid to_json(json& j, const Node& n) {\r\n    j = json{{\"cost\", n.cost}, {\"state\", n.state}, {\"offset\", n.offset}};\r\n}\r\n```\r\nbut I get an extremely verbose error telling me I have multiple declarations of the `to_json` instance.  It's similar to the error I would get when using the implicit conversion of `n.state = j.at(\"state\")` without using `get<vector<float>>()`.\r\n\r\nI also tried explicitly copying the values to no avail.\r\n\r\n```cpp\r\nvoid to_json(json& j, const Node& n) {\r\n    vector<float> state = n.state;\r\n    vector<float> offset = n.offset;\r\n    j = json{{\"offset\", offset}, {\"state\", n.state}};\r\n}\r\n```\r\n\r\nThe full error message is _really_ long but I can add it upon request."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/610", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/610/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/610/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/610/events", "html_url": "https://github.com/nlohmann/json/issues/610", "id": 234243596, "node_id": "MDU6SXNzdWUyMzQyNDM1OTY=", "number": 610, "title": "2.1.1+ breaks compilation of shared_ptr<json> == 0", "user": {"login": "vslavik", "id": 145881, "node_id": "MDQ6VXNlcjE0NTg4MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/145881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vslavik", "html_url": "https://github.com/vslavik", "followers_url": "https://api.github.com/users/vslavik/followers", "following_url": "https://api.github.com/users/vslavik/following{/other_user}", "gists_url": "https://api.github.com/users/vslavik/gists{/gist_id}", "starred_url": "https://api.github.com/users/vslavik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vslavik/subscriptions", "organizations_url": "https://api.github.com/users/vslavik/orgs", "repos_url": "https://api.github.com/users/vslavik/repos", "events_url": "https://api.github.com/users/vslavik/events{/privacy}", "received_events_url": "https://api.github.com/users/vslavik/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-07T15:10:15Z", "updated_at": "2017-07-09T10:34:35Z", "closed_at": "2017-07-09T10:34:35Z", "author_association": "NONE", "body": "v2.1.1 introduced regression that breaks compilation of existing code that compiled with up to v2.1.0. The breakage was introduced in #415 (fixing #414) and relates to over-reaching template `operator==`. \r\n\r\nCode that uses `std::shared_ptr<json>` and compares it with zero (both `== 0` and `!= 0`) no longer compiles due to operator ambiguity that is not immediately (or even no so immediately...) apparent to a mere human like me, but nevertheless I confirmed was caused by #415.\r\n\r\nThis is enough to reproduce:\r\n\r\n```cpp\r\n#include <json.hpp>\r\n\r\nint main()\r\n{\r\n    std::shared_ptr<nlohmann::json> p;\r\n    if (p==0) {\r\n    }\r\n    return 0;\r\n}\r\n```\r\n\r\nThis doesn't make the compiler happy:\r\n\r\n```\r\n$ clang++ \u2014std=c++14 test.cpp\r\ntest.cpp:16:10: error: use of overloaded operator '==' is ambiguous (with operand types\r\n      'std::shared_ptr<nlohmann::json>' (aka 'shared_ptr<basic_json<> >') and 'int')\r\n    if (p==0) {\r\n        ~^ ~\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/memory:4922:1: note: \r\n      candidate function [with _Tp = nlohmann::basic_json<std::map, std::vector, std::__1::basic_string<char>, bool,\r\n      long long, unsigned long long, double, std::allocator, adl_serializer>]\r\noperator==(const shared_ptr<_Tp>& __x, nullptr_t) _NOEXCEPT\r\n^\r\njson.hpp:6334:17: note: candidate function\r\n      [with ScalarType = int, $1 = 0]\r\n    friend bool operator==(const_reference lhs, const ScalarType rhs) noexcept\r\n                ^\r\njson.hpp:6253:17: note: candidate function\r\n    friend bool operator==(const_reference lhs, const_reference rhs) noexcept\r\n                ^\r\n1 error generated.\r\n$\r\n```\r\n\r\nYes, it would be better to compare with `nullptr` or use implicit conversion to bool, and it would be trivial to fix the above example, but you don't always have a choice\u2026 such as when using another library where this happens internally to it. To name a prominent example, Boost.Thread is affected:\r\n\r\n```cpp\r\n#define BOOST_THREAD_VERSION 4\r\n#include <boost/thread/future.hpp>\r\n#include <json.hpp>\r\n\r\nint main()\r\n{\r\n    boost::future<nlohmann::json> f;\r\n    f.get();\r\n    return 0;\r\n}\r\n```\r\n\r\nresults in\r\n\r\n```\r\nboost/thread/future.hpp:1683:31: error: use of overloaded operator '==' is\r\n      ambiguous (with operand types 'future_ptr' (aka 'shared_ptr<detail::shared_state<basic_json<std::map, std::vector,\r\n      basic_string<char>, bool, long long, unsigned long long, double, std::allocator, adl_serializer> > >') and 'int')\r\n            if (this->future_ == 0)\r\n                ~~~~~~~~~~~~~ ^  ~\r\ntest.cpp:11:7: note: in instantiation of member function 'boost::future<nlohmann::basic_json<std::map, std::vector,\r\n      std::__1::basic_string<char>, bool, long long, unsigned long long, double, std::allocator, adl_serializer> >::get'\r\n      requested here\r\n    f.get();\r\n      ^\r\nboost/smart_ptr/shared_ptr.hpp:814:31: note: candidate function [with T =\r\n      boost::detail::shared_state<nlohmann::basic_json<std::map, std::vector, std::__1::basic_string<char>, bool, long\r\n      long, unsigned long long, double, std::allocator, adl_serializer> >]\r\ntemplate<class T> inline bool operator==( shared_ptr<T> const & p, boost::detail::sp_nullptr_t ) BOOST_NOEXCEPT\r\n                              ^\r\njson.hpp:6334:17: note: candidate function\r\n      [with ScalarType = int, $1 = 0]\r\n    friend bool operator==(const_reference lhs, const ScalarType rhs) noexcept\r\n                ^\r\njson.hpp:6253:17: note: candidate function\r\n    friend bool operator==(const_reference lhs, const_reference rhs) noexcept\r\n                ^\r\n1 error generated.\r\n```\r\n\r\nObserved with both clang-802.0.42 and Visual Studio 2015, so this isn't compiler-specific."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/609", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/609/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/609/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/609/events", "html_url": "https://github.com/nlohmann/json/pull/609", "id": 233876161, "node_id": "MDExOlB1bGxSZXF1ZXN0MTI0MTc4OTY5", "number": 609, "title": "Add pair support, fix CompatibleObject conversions (fixes #600)", "user": {"login": "theodelrieu", "id": 15652306, "node_id": "MDQ6VXNlcjE1NjUyMzA2", "avatar_url": "https://avatars1.githubusercontent.com/u/15652306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theodelrieu", "html_url": "https://github.com/theodelrieu", "followers_url": "https://api.github.com/users/theodelrieu/followers", "following_url": "https://api.github.com/users/theodelrieu/following{/other_user}", "gists_url": "https://api.github.com/users/theodelrieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/theodelrieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theodelrieu/subscriptions", "organizations_url": "https://api.github.com/users/theodelrieu/orgs", "repos_url": "https://api.github.com/users/theodelrieu/repos", "events_url": "https://api.github.com/users/theodelrieu/events{/privacy}", "received_events_url": "https://api.github.com/users/theodelrieu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 5, "created_at": "2017-06-06T12:30:50Z", "updated_at": "2017-06-07T14:38:24Z", "closed_at": "2017-06-07T14:38:24Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/609", "html_url": "https://github.com/nlohmann/json/pull/609", "diff_url": "https://github.com/nlohmann/json/pull/609.diff", "patch_url": "https://github.com/nlohmann/json/pull/609.patch"}, "body": "I've put the tests in some weird places, @nlohmann do you have any better spot to put them?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/608", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/608/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/608/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/608/events", "html_url": "https://github.com/nlohmann/json/issues/608", "id": 233766858, "node_id": "MDU6SXNzdWUyMzM3NjY4NTg=", "number": 608, "title": "a bug of inheritance ? ", "user": {"login": "zhishupp", "id": 6071453, "node_id": "MDQ6VXNlcjYwNzE0NTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6071453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhishupp", "html_url": "https://github.com/zhishupp", "followers_url": "https://api.github.com/users/zhishupp/followers", "following_url": "https://api.github.com/users/zhishupp/following{/other_user}", "gists_url": "https://api.github.com/users/zhishupp/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhishupp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhishupp/subscriptions", "organizations_url": "https://api.github.com/users/zhishupp/orgs", "repos_url": "https://api.github.com/users/zhishupp/repos", "events_url": "https://api.github.com/users/zhishupp/events{/privacy}", "received_events_url": "https://api.github.com/users/zhishupp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-06T03:06:50Z", "updated_at": "2017-11-01T10:16:03Z", "closed_at": "2017-11-01T10:16:03Z", "author_association": "NONE", "body": "I did a test of inheriting from class nlohmann::json, and it's a little difference if I directly use nlohmann::json.\r\n\r\n```cpp\r\n#include \"json.hpp\"\r\nusing json = nlohmann::json;\r\nclass JSON : public json {};\r\nint main(int argc, char* argv[])\r\n{\r\n    JSON j;\r\n    JSON j1;\r\n    j1[\"k\"] = \"v\";\r\n    j[\"o\"] = j1;\r\n    std::cout << j.dump() << std::endl;\r\n    return 0;\r\n}\r\n```\r\nthe result:  **{\"o\":[\"v\"]}**\r\n\r\n```cpp\r\n#include \"json.hpp\"\r\nusing json = nlohmann::json;\r\n//class JSON : public json {};\r\nint main(int argc, char* argv[])\r\n{\r\n    json j;\r\n    json j1;\r\n    j1[\"k\"] = \"v\";\r\n    j[\"o\"] = j1;\r\n    std::cout << j.dump() << std::endl;\r\n    return 0;\r\n}\r\n```\r\nthe result:  **{\"o\":{\"k\":\"v\"}}**\r\n\r\n\"k\" is lost in inheritance condition"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/607", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/607/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/607/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/607/events", "html_url": "https://github.com/nlohmann/json/issues/607", "id": 233491227, "node_id": "MDU6SXNzdWUyMzM0OTEyMjc=", "number": 607, "title": "std::map key conversion with to_json", "user": {"login": "RobotCaleb", "id": 113401, "node_id": "MDQ6VXNlcjExMzQwMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/113401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RobotCaleb", "html_url": "https://github.com/RobotCaleb", "followers_url": "https://api.github.com/users/RobotCaleb/followers", "following_url": "https://api.github.com/users/RobotCaleb/following{/other_user}", "gists_url": "https://api.github.com/users/RobotCaleb/gists{/gist_id}", "starred_url": "https://api.github.com/users/RobotCaleb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RobotCaleb/subscriptions", "organizations_url": "https://api.github.com/users/RobotCaleb/orgs", "repos_url": "https://api.github.com/users/RobotCaleb/repos", "events_url": "https://api.github.com/users/RobotCaleb/events{/privacy}", "received_events_url": "https://api.github.com/users/RobotCaleb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2017-06-05T04:21:10Z", "updated_at": "2017-06-12T04:45:19Z", "closed_at": "2017-06-12T04:45:19Z", "author_association": "NONE", "body": "I read that you can use maps as long as a `std::string` can be constructed from the key.\r\n\r\nI don't understand why this doesn't work. As I've written it I think it's fulfilling the constraint I mentioned above.\r\n```cpp\r\nenum class EC {\r\n    A\r\n};\r\n\r\nstatic void to_json(json& j, EC const& ae) {\r\n    j = std::string{\"FD\"};\r\n}\r\n\r\nstatic void from_json(const json& j, EC& ae) {\r\n    ae = EC::A;\r\n}\r\n\r\nint main()\r\n{\r\n    std::unordered_map<EC, int> imap;\r\n    json j = imap;\r\n}\r\n```\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/606", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/606/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/606/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/606/events", "html_url": "https://github.com/nlohmann/json/issues/606", "id": 233405429, "node_id": "MDU6SXNzdWUyMzM0MDU0Mjk=", "number": 606, "title": "json.hpp:6384:62: error: wrong number of template arguments (1, should be 2)", "user": {"login": "moneroexamples", "id": 15305358, "node_id": "MDQ6VXNlcjE1MzA1MzU4", "avatar_url": "https://avatars1.githubusercontent.com/u/15305358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moneroexamples", "html_url": "https://github.com/moneroexamples", "followers_url": "https://api.github.com/users/moneroexamples/followers", "following_url": "https://api.github.com/users/moneroexamples/following{/other_user}", "gists_url": "https://api.github.com/users/moneroexamples/gists{/gist_id}", "starred_url": "https://api.github.com/users/moneroexamples/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moneroexamples/subscriptions", "organizations_url": "https://api.github.com/users/moneroexamples/orgs", "repos_url": "https://api.github.com/users/moneroexamples/repos", "events_url": "https://api.github.com/users/moneroexamples/events{/privacy}", "received_events_url": "https://api.github.com/users/moneroexamples/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-04T01:28:05Z", "updated_at": "2017-06-05T01:02:26Z", "closed_at": "2017-06-04T07:14:08Z", "author_association": "NONE", "body": "After upgrading gcc in majnaro, i started getting this error. Does anyone know to remedy it?\r\n\r\n```\r\njson.hpp: In function \u2018bool nlohmann::operator<(nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::const_reference, nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::const_reference)\u2019:\r\n/home/mwo/onion-monero-blockchain-explorer/src/../ext/json.hpp:6384:62: error: wrong number of template arguments (1, should be 2)\r\n                     return *lhs.m_value.array < *rhs.m_value.array;\r\n                                                              ^~~~~\r\nIn file included from /usr/include/c++/7.1.1/tuple:39:0,\r\n                 from /usr/include/c++/7.1.1/bits/unique_ptr.h:37,\r\n                 from /usr/include/c++/7.1.1/memory:80,\r\n                 from /usr/include/boost/config/no_tr1/memory.hpp:21,\r\n                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:23,\r\n                 from /usr/include/boost/shared_ptr.hpp:17,\r\n                 from /home/mwo/monero/contrib/epee/include/net/http_client.h:30,\r\n                 from /home/mwo/onion-monero-blockchain-explorer/src/monero_headers.h:21,\r\n                 from /home/mwo/onion-monero-blockchain-explorer/src/MicroCore.h:10,\r\n                 from /home/mwo/onion-monero-blockchain-explorer/src/CurrentBlockchainStatus.h:8,\r\n                 from /home/mwo/onion-monero-blockchain-explorer/src/CurrentBlockchainStatus.cpp:5:\r\n/usr/include/c++/7.1.1/array:94:12: note: provided for \u2018template<class _Tp, long unsigned int _Nm> struct std::array\u2019\r\n     struct array\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/605", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/605/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/605/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/605/events", "html_url": "https://github.com/nlohmann/json/issues/605", "id": 233383421, "node_id": "MDU6SXNzdWUyMzMzODM0MjE=", "number": 605, "title": "Incremental parsing: Where's the push version?", "user": {"login": "vinniefalco", "id": 1503976, "node_id": "MDQ6VXNlcjE1MDM5NzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1503976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vinniefalco", "html_url": "https://github.com/vinniefalco", "followers_url": "https://api.github.com/users/vinniefalco/followers", "following_url": "https://api.github.com/users/vinniefalco/following{/other_user}", "gists_url": "https://api.github.com/users/vinniefalco/gists{/gist_id}", "starred_url": "https://api.github.com/users/vinniefalco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vinniefalco/subscriptions", "organizations_url": "https://api.github.com/users/vinniefalco/orgs", "repos_url": "https://api.github.com/users/vinniefalco/repos", "events_url": "https://api.github.com/users/vinniefalco/events{/privacy}", "received_events_url": "https://api.github.com/users/vinniefalco/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-06-03T17:29:46Z", "updated_at": "2018-02-19T16:38:13Z", "closed_at": "2017-06-07T20:40:44Z", "author_association": "NONE", "body": "The promotional materials cite \"incremental parsing\" but where is the interface that lets me call into the parser with a buffer at a time?\r\n\r\nI see the \"pull\" interface where it reads from a stream - where's the push?\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/604", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/604/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/604/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/604/events", "html_url": "https://github.com/nlohmann/json/issues/604", "id": 233382236, "node_id": "MDU6SXNzdWUyMzMzODIyMzY=", "number": 604, "title": "Is there a way to validate the structure of a json object ?", "user": {"login": "Oberonc", "id": 13750901, "node_id": "MDQ6VXNlcjEzNzUwOTAx", "avatar_url": "https://avatars3.githubusercontent.com/u/13750901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Oberonc", "html_url": "https://github.com/Oberonc", "followers_url": "https://api.github.com/users/Oberonc/followers", "following_url": "https://api.github.com/users/Oberonc/following{/other_user}", "gists_url": "https://api.github.com/users/Oberonc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Oberonc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Oberonc/subscriptions", "organizations_url": "https://api.github.com/users/Oberonc/orgs", "repos_url": "https://api.github.com/users/Oberonc/repos", "events_url": "https://api.github.com/users/Oberonc/events{/privacy}", "received_events_url": "https://api.github.com/users/Oberonc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-03T17:08:32Z", "updated_at": "2017-06-06T18:23:29Z", "closed_at": "2017-06-06T18:23:29Z", "author_association": "NONE", "body": "Suppose I parsed a string from an unreliable source.\r\nHow can I validate the result json object ? (make sure it has certain structure / contents. Such as a list of 3 numbers and then a string ?)\r\nOther than using a long boilerplate code with size() and get<>() and is_* ?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/603", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/603/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/603/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/603/events", "html_url": "https://github.com/nlohmann/json/issues/603", "id": 233359006, "node_id": "MDU6SXNzdWUyMzMzNTkwMDY=", "number": 603, "title": "[Question] Issue when using Appveyor when compiling library", "user": {"login": "tuananh", "id": 627278, "node_id": "MDQ6VXNlcjYyNzI3OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/627278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tuananh", "html_url": "https://github.com/tuananh", "followers_url": "https://api.github.com/users/tuananh/followers", "following_url": "https://api.github.com/users/tuananh/following{/other_user}", "gists_url": "https://api.github.com/users/tuananh/gists{/gist_id}", "starred_url": "https://api.github.com/users/tuananh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tuananh/subscriptions", "organizations_url": "https://api.github.com/users/tuananh/orgs", "repos_url": "https://api.github.com/users/tuananh/repos", "events_url": "https://api.github.com/users/tuananh/events{/privacy}", "received_events_url": "https://api.github.com/users/tuananh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-03T09:44:48Z", "updated_at": "2017-06-04T09:09:38Z", "closed_at": "2017-06-03T13:35:56Z", "author_association": "NONE", "body": "Hi,\r\n\r\nNot sure if this is a right place to ask. I have a small project that use json as submodule library.\r\n\r\nWhen I tried to use AppVeyor, I got some errors like this in the install step\r\n\r\n```\r\nsrc/json.hpp(8936): error C2589: '(': illegal token on right side of '::'\r\n```\r\n\r\n```\r\nsrc/json.hpp(8933): note: while compiling class template member function 'std::string nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>::input_buffer_adapter::read(::size_t,::size_t)'\r\n```\r\n\r\nand this\r\n\r\n```\r\njson.hpp(8936): error C2062: type 'unknown-type' unexpected\r\n```\r\n\r\nDoes any of you know what options/ flag I have to use in AppVeyor to make it works?\r\n\r\nRegards,"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/602", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/602/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/602/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/602/events", "html_url": "https://github.com/nlohmann/json/issues/602", "id": 232984168, "node_id": "MDU6SXNzdWUyMzI5ODQxNjg=", "number": 602, "title": "BOM not skipped when using json:parse(iterator)", "user": {"login": "red632nm", "id": 29130033, "node_id": "MDQ6VXNlcjI5MTMwMDMz", "avatar_url": "https://avatars3.githubusercontent.com/u/29130033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/red632nm", "html_url": "https://github.com/red632nm", "followers_url": "https://api.github.com/users/red632nm/followers", "following_url": "https://api.github.com/users/red632nm/following{/other_user}", "gists_url": "https://api.github.com/users/red632nm/gists{/gist_id}", "starred_url": "https://api.github.com/users/red632nm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/red632nm/subscriptions", "organizations_url": "https://api.github.com/users/red632nm/orgs", "repos_url": "https://api.github.com/users/red632nm/repos", "events_url": "https://api.github.com/users/red632nm/events{/privacy}", "received_events_url": "https://api.github.com/users/red632nm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 4, "created_at": "2017-06-01T19:25:16Z", "updated_at": "2017-06-12T16:07:12Z", "closed_at": "2017-06-07T20:50:29Z", "author_association": "NONE", "body": "The byte-order mark is not being skipped when I use json:parse(iterator) interface for example:\r\nnlohmann::json::parse(static_cast<const char *>(buffer), static_cast<const char *>(buffer) + nbytes)\r\n\r\nIt looks like the json::parse(stream) interface does skip the BOM.\r\n\r\nHere is a quick fix that seems to work for me:\r\n[json.txt](https://github.com/nlohmann/json/files/1045813/json.txt)\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/601", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/601/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/601/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/601/events", "html_url": "https://github.com/nlohmann/json/issues/601", "id": 232905332, "node_id": "MDU6SXNzdWUyMzI5MDUzMzI=", "number": 601, "title": "Use of the binary type in CBOR and Message Pack", "user": {"login": "Type1J", "id": 413028, "node_id": "MDQ6VXNlcjQxMzAyOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/413028?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Type1J", "html_url": "https://github.com/Type1J", "followers_url": "https://api.github.com/users/Type1J/followers", "following_url": "https://api.github.com/users/Type1J/following{/other_user}", "gists_url": "https://api.github.com/users/Type1J/gists{/gist_id}", "starred_url": "https://api.github.com/users/Type1J/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Type1J/subscriptions", "organizations_url": "https://api.github.com/users/Type1J/orgs", "repos_url": "https://api.github.com/users/Type1J/repos", "events_url": "https://api.github.com/users/Type1J/events{/privacy}", "received_events_url": "https://api.github.com/users/Type1J/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 571470316, "node_id": "MDU6TGFiZWw1NzE0NzAzMTY=", "url": "https://api.github.com/repos/nlohmann/json/labels/aspect:%20binary%20formats", "name": "aspect: binary formats", "color": "5319e7", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2017-06-01T14:50:19Z", "updated_at": "2017-08-15T18:56:45Z", "closed_at": "2017-08-15T18:56:45Z", "author_association": "CONTRIBUTOR", "body": "For types such as std::vector<uint8_t> the CBOR and Message Pack array type is currently used and each value is written as a numeric value, but this has a high overhead in output size (for byte sized value types) due to each value costing more than 1 byte in CBOR and (most of the time) in Message Pack.\r\n\r\nI'd like to propose that the to_* functions for binary formats take an additional bool argument that causes array types that are known to be numeric and byte-sized to serialize using the binary string type of the respective format. The from_* functions should accept either the current style array of numeric types or the binary.\r\n\r\nThis proposal **_might_** suggest that the nlohmann::json C++ type be augmented with a bytearray discriminator in addition to the normal array discriminator. However there might be an easier way to know that the array is an array of numeric 8-bit values. To be clear, the JSON form would still be an array, so the discriminator would only be set to bytearray if the values given to the array were numeric and inside of the range [0, 255].\r\n\r\nThoughts?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/600", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/600/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/600/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/600/events", "html_url": "https://github.com/nlohmann/json/issues/600", "id": 232851896, "node_id": "MDU6SXNzdWUyMzI4NTE4OTY=", "number": 600, "title": "Newbie issue: how does one convert a map in Json back to std::map?", "user": {"login": "CalielOfSeptem", "id": 3701133, "node_id": "MDQ6VXNlcjM3MDExMzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3701133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CalielOfSeptem", "html_url": "https://github.com/CalielOfSeptem", "followers_url": "https://api.github.com/users/CalielOfSeptem/followers", "following_url": "https://api.github.com/users/CalielOfSeptem/following{/other_user}", "gists_url": "https://api.github.com/users/CalielOfSeptem/gists{/gist_id}", "starred_url": "https://api.github.com/users/CalielOfSeptem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CalielOfSeptem/subscriptions", "organizations_url": "https://api.github.com/users/CalielOfSeptem/orgs", "repos_url": "https://api.github.com/users/CalielOfSeptem/repos", "events_url": "https://api.github.com/users/CalielOfSeptem/events{/privacy}", "received_events_url": "https://api.github.com/users/CalielOfSeptem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 20, "created_at": "2017-06-01T11:42:47Z", "updated_at": "2018-06-07T09:46:26Z", "closed_at": "2017-06-17T11:37:40Z", "author_association": "NONE", "body": "I have a map..\r\n\r\n```\r\nj[\"rightHand\"] = std::map<std::string, std::string> {{ \r\n                    some_string, \r\n                    some_other_string }};\r\n```\r\n\r\nBut when I go to retrieve the map I get an 'call of overload is ambiguous' type error:\r\n\r\n            const json& rh = j[\"rightHand\"]; \r\n           std::map<std::string, std::string> rightHand  = rh;\r\n\r\nCould you perhaps point me to where I can find an example of how to do this properly?  I've searched but can't seem to find anything directly on point\r\n\r\nThanks!"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/599", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/599/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/599/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/599/events", "html_url": "https://github.com/nlohmann/json/issues/599", "id": 232672642, "node_id": "MDU6SXNzdWUyMzI2NzI2NDI=", "number": 599, "title": "Plugin system", "user": {"login": "an-kumar", "id": 13493636, "node_id": "MDQ6VXNlcjEzNDkzNjM2", "avatar_url": "https://avatars0.githubusercontent.com/u/13493636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/an-kumar", "html_url": "https://github.com/an-kumar", "followers_url": "https://api.github.com/users/an-kumar/followers", "following_url": "https://api.github.com/users/an-kumar/following{/other_user}", "gists_url": "https://api.github.com/users/an-kumar/gists{/gist_id}", "starred_url": "https://api.github.com/users/an-kumar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/an-kumar/subscriptions", "organizations_url": "https://api.github.com/users/an-kumar/orgs", "repos_url": "https://api.github.com/users/an-kumar/repos", "events_url": "https://api.github.com/users/an-kumar/events{/privacy}", "received_events_url": "https://api.github.com/users/an-kumar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-05-31T19:37:04Z", "updated_at": "2017-07-25T16:35:34Z", "closed_at": "2017-07-20T11:44:27Z", "author_association": "NONE", "body": "Many header-only libraries (for example, cimg) include 'plugin' systems, where people can add functionality to the class. It looks something like this:\r\n\r\n```cpp\r\nclass some_class\r\n{\r\n// normal code\r\n#ifdef PLUGIN\r\n#include PLUGIN\r\n#endif\r\n// more code\r\n};\r\n```\r\n\r\nCould we add something like this to this json library? I have some added functions that force me to maintain a version of json.hpp checked into my repo, but this makes it awkward to merge in updates to this repo."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/598", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/598/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/598/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/598/events", "html_url": "https://github.com/nlohmann/json/pull/598", "id": 232218032, "node_id": "MDExOlB1bGxSZXF1ZXN0MTIzMDI0NjQz", "number": 598, "title": "#550 Fix iterator related compiling issues for Intel icc", "user": {"login": "HenryRLee", "id": 4635853, "node_id": "MDQ6VXNlcjQ2MzU4NTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4635853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HenryRLee", "html_url": "https://github.com/HenryRLee", "followers_url": "https://api.github.com/users/HenryRLee/followers", "following_url": "https://api.github.com/users/HenryRLee/following{/other_user}", "gists_url": "https://api.github.com/users/HenryRLee/gists{/gist_id}", "starred_url": "https://api.github.com/users/HenryRLee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HenryRLee/subscriptions", "organizations_url": "https://api.github.com/users/HenryRLee/orgs", "repos_url": "https://api.github.com/users/HenryRLee/repos", "events_url": "https://api.github.com/users/HenryRLee/events{/privacy}", "received_events_url": "https://api.github.com/users/HenryRLee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 7, "created_at": "2017-05-30T11:09:30Z", "updated_at": "2017-06-06T18:41:50Z", "closed_at": "2017-06-06T18:41:43Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/598", "html_url": "https://github.com/nlohmann/json/pull/598", "diff_url": "https://github.com/nlohmann/json/pull/598.diff", "patch_url": "https://github.com/nlohmann/json/pull/598.patch"}, "body": "Currently there are two know issues when compiling with Intel icc:\r\n1. The `operator()` in iterator causes warning\r\n2. The use of `internal_iterator` causes error\r\n\r\nThe first issue can be resolved by replacing the `operator()` with a converting constructor and assignment. Because the existence of the copy constructor may bring ambiguity, I removed it and the copy constructor will be defined implicitly.\r\n\r\nThe second issue is fixed by adding a `struct` keyword in front of the type name."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/597", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/597/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/597/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/597/events", "html_url": "https://github.com/nlohmann/json/issues/597", "id": 232180607, "node_id": "MDU6SXNzdWUyMzIxODA2MDc=", "number": 597, "title": "Feature request: Comments", "user": {"login": "hunyadix", "id": 8447503, "node_id": "MDQ6VXNlcjg0NDc1MDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/8447503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hunyadix", "html_url": "https://github.com/hunyadix", "followers_url": "https://api.github.com/users/hunyadix/followers", "following_url": "https://api.github.com/users/hunyadix/following{/other_user}", "gists_url": "https://api.github.com/users/hunyadix/gists{/gist_id}", "starred_url": "https://api.github.com/users/hunyadix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hunyadix/subscriptions", "organizations_url": "https://api.github.com/users/hunyadix/orgs", "repos_url": "https://api.github.com/users/hunyadix/repos", "events_url": "https://api.github.com/users/hunyadix/events{/privacy}", "received_events_url": "https://api.github.com/users/hunyadix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-30T08:40:03Z", "updated_at": "2018-01-04T17:16:11Z", "closed_at": "2017-05-30T08:59:16Z", "author_association": "NONE", "body": "Many JSON parsers support the option to comment out fields. Is it possible to request such a feature in the nlohmann parser too?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/596", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/596/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/596/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/596/events", "html_url": "https://github.com/nlohmann/json/issues/596", "id": 231893154, "node_id": "MDU6SXNzdWUyMzE4OTMxNTQ=", "number": 596, "title": "Using custom types for scalars?", "user": {"login": "kyku", "id": 1067973, "node_id": "MDQ6VXNlcjEwNjc5NzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1067973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyku", "html_url": "https://github.com/kyku", "followers_url": "https://api.github.com/users/kyku/followers", "following_url": "https://api.github.com/users/kyku/following{/other_user}", "gists_url": "https://api.github.com/users/kyku/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyku/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyku/subscriptions", "organizations_url": "https://api.github.com/users/kyku/orgs", "repos_url": "https://api.github.com/users/kyku/repos", "events_url": "https://api.github.com/users/kyku/events{/privacy}", "received_events_url": "https://api.github.com/users/kyku/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-28T20:44:25Z", "updated_at": "2017-07-08T14:05:05Z", "closed_at": "2017-07-08T14:05:05Z", "author_association": "NONE", "body": "I'm serializing some decimal values from database into JSON. In order not to risk loosing precision of database data, I've implemented a C++ class for storing values in fixed decimal form. I'm trying to pass my class as NumberFloatType template parameter to basic_json but it looks like parsing of floating point values is hard coded in lexer::strtof overloads. Are there any \"customization points\" which could be used to support deserialization of strings into custom basic types like NumberFloatType?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/595", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/595/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/595/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/595/events", "html_url": "https://github.com/nlohmann/json/pull/595", "id": 231772950, "node_id": "MDExOlB1bGxSZXF1ZXN0MTIyNzQ1NjQy", "number": 595, "title": "Issue #593 Fix the arithmetic operators in the iterator and reverse iterator", "user": {"login": "HenryRLee", "id": 4635853, "node_id": "MDQ6VXNlcjQ2MzU4NTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4635853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HenryRLee", "html_url": "https://github.com/HenryRLee", "followers_url": "https://api.github.com/users/HenryRLee/followers", "following_url": "https://api.github.com/users/HenryRLee/following{/other_user}", "gists_url": "https://api.github.com/users/HenryRLee/gists{/gist_id}", "starred_url": "https://api.github.com/users/HenryRLee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HenryRLee/subscriptions", "organizations_url": "https://api.github.com/users/HenryRLee/orgs", "repos_url": "https://api.github.com/users/HenryRLee/repos", "events_url": "https://api.github.com/users/HenryRLee/events{/privacy}", "received_events_url": "https://api.github.com/users/HenryRLee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 16, "created_at": "2017-05-27T03:55:29Z", "updated_at": "2017-06-10T22:19:59Z", "closed_at": "2017-06-10T16:26:48Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/595", "html_url": "https://github.com/nlohmann/json/pull/595", "diff_url": "https://github.com/nlohmann/json/pull/595.diff", "patch_url": "https://github.com/nlohmann/json/pull/595.patch"}, "body": "Changes include:\r\n1.     Override operator+(difference_type, const iter_impl&) in the iterator class\r\n2.     Add const qualifier in the member operator+(difference_type) function\r\n3.     Add test cases of the relevant issue\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/594", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/594/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/594/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/594/events", "html_url": "https://github.com/nlohmann/json/pull/594", "id": 231670675, "node_id": "MDExOlB1bGxSZXF1ZXN0MTIyNjc0NTc3", "number": 594, "title": "Issue #593 Override operator+(n, iterator) in the iterator class", "user": {"login": "HenryRLee", "id": 4635853, "node_id": "MDQ6VXNlcjQ2MzU4NTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4635853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HenryRLee", "html_url": "https://github.com/HenryRLee", "followers_url": "https://api.github.com/users/HenryRLee/followers", "following_url": "https://api.github.com/users/HenryRLee/following{/other_user}", "gists_url": "https://api.github.com/users/HenryRLee/gists{/gist_id}", "starred_url": "https://api.github.com/users/HenryRLee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HenryRLee/subscriptions", "organizations_url": "https://api.github.com/users/HenryRLee/orgs", "repos_url": "https://api.github.com/users/HenryRLee/repos", "events_url": "https://api.github.com/users/HenryRLee/events{/privacy}", "received_events_url": "https://api.github.com/users/HenryRLee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-26T16:10:52Z", "updated_at": "2017-05-29T14:08:41Z", "closed_at": "2017-05-27T03:52:12Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/594", "html_url": "https://github.com/nlohmann/json/pull/594", "diff_url": "https://github.com/nlohmann/json/pull/594.diff", "patch_url": "https://github.com/nlohmann/json/pull/594.patch"}, "body": "Changes include:\r\n1. Override `operator+(difference_type, const iter_impl&)` in the iterator class\r\n2. Add `const` qualifier in the member `operator+(difference_type)` function\r\n3. Add test cases of the relevant issue"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/593", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/593/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/593/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/593/events", "html_url": "https://github.com/nlohmann/json/issues/593", "id": 231669019, "node_id": "MDU6SXNzdWUyMzE2NjkwMTk=", "number": 593, "title": "Issues with the arithmetic in iterator and reverse iterator", "user": {"login": "HenryRLee", "id": 4635853, "node_id": "MDQ6VXNlcjQ2MzU4NTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4635853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HenryRLee", "html_url": "https://github.com/HenryRLee", "followers_url": "https://api.github.com/users/HenryRLee/followers", "following_url": "https://api.github.com/users/HenryRLee/following{/other_user}", "gists_url": "https://api.github.com/users/HenryRLee/gists{/gist_id}", "starred_url": "https://api.github.com/users/HenryRLee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HenryRLee/subscriptions", "organizations_url": "https://api.github.com/users/HenryRLee/orgs", "repos_url": "https://api.github.com/users/HenryRLee/repos", "events_url": "https://api.github.com/users/HenryRLee/events{/privacy}", "received_events_url": "https://api.github.com/users/HenryRLee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 45, "created_at": "2017-05-26T16:04:06Z", "updated_at": "2017-10-28T10:33:34Z", "closed_at": "2017-10-28T10:33:34Z", "author_association": "CONTRIBUTOR", "body": "Hi, I just found that the iterator class hasn't override the `n + iterator` operator, which is a requirement in the [random access iterator](http://en.cppreference.com/w/cpp/concept/RandomAccessIterator) type.\r\n\r\nMore specifically, this operator is missing:\r\n```cpp\r\noperator+(difference_type, const iter_impl&);\r\n```\r\n\r\nThe failing code is:\r\n```cpp\r\njson j_object\r\nauto it = j_object.cbegin();\r\n1 + it; // error\r\n```\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/592", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/592/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/592/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/592/events", "html_url": "https://github.com/nlohmann/json/issues/592", "id": 230859247, "node_id": "MDU6SXNzdWUyMzA4NTkyNDc=", "number": 592, "title": "not enough examples", "user": {"login": "kenkit", "id": 1732471, "node_id": "MDQ6VXNlcjE3MzI0NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1732471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kenkit", "html_url": "https://github.com/kenkit", "followers_url": "https://api.github.com/users/kenkit/followers", "following_url": "https://api.github.com/users/kenkit/following{/other_user}", "gists_url": "https://api.github.com/users/kenkit/gists{/gist_id}", "starred_url": "https://api.github.com/users/kenkit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kenkit/subscriptions", "organizations_url": "https://api.github.com/users/kenkit/orgs", "repos_url": "https://api.github.com/users/kenkit/repos", "events_url": "https://api.github.com/users/kenkit/events{/privacy}", "received_events_url": "https://api.github.com/users/kenkit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2017-05-23T21:58:13Z", "updated_at": "2017-05-24T19:24:26Z", "closed_at": "2017-05-24T14:38:50Z", "author_association": "NONE", "body": "This is so far the ~~greatest c++ json library~~, nice work.\r\nHowever we don't have enough examples, I can't figure how to extract data from this simple string, I tried using the `.at()` but without success, please help with a working example.\r\n`[\"new message\",{\"username\":\"Someone\",\"message\":\"Hi\"}]`\r\nalso lets assume we have another like this\r\n`11 [\"new message\",{\"username\":\"Someone\",\"message\":\"Hi\"}]`\r\nhow would I parse such a string ?\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/591", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/591/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/591/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/591/events", "html_url": "https://github.com/nlohmann/json/issues/591", "id": 230458394, "node_id": "MDU6SXNzdWUyMzA0NTgzOTQ=", "number": 591, "title": "in-class initialization for type 'const T' is not yet implemented", "user": {"login": "chainke", "id": 6562279, "node_id": "MDQ6VXNlcjY1NjIyNzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6562279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chainke", "html_url": "https://github.com/chainke", "followers_url": "https://api.github.com/users/chainke/followers", "following_url": "https://api.github.com/users/chainke/following{/other_user}", "gists_url": "https://api.github.com/users/chainke/gists{/gist_id}", "starred_url": "https://api.github.com/users/chainke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chainke/subscriptions", "organizations_url": "https://api.github.com/users/chainke/orgs", "repos_url": "https://api.github.com/users/chainke/repos", "events_url": "https://api.github.com/users/chainke/events{/privacy}", "received_events_url": "https://api.github.com/users/chainke/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}, {"id": 304694104, "node_id": "MDU6TGFiZWwzMDQ2OTQxMDQ=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20please%20discuss", "name": "state: please discuss", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-05-22T16:58:11Z", "updated_at": "2017-07-12T14:18:35Z", "closed_at": "2017-07-12T14:18:35Z", "author_association": "NONE", "body": "Hey there,\r\nI have a problem when compiling a project using json.hpp.\r\nWhen I use Microsoft Visual Studio 2015 Update 3 on Windows7 everything worsk fine, but when I use Mircosoft Visual Studio 2017 on Windows 10, I get the following error:\r\n\r\n\r\n\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(887): error C4579: 'nlohmann::detail::static_const<nlohmann::detail::to_json_fn>::value': in-class initialization for type 'const T' is not yet implemented; static member will remain uninitialized at runtime but use in constant-expressions is supported\r\n2>        with\r\n2>        [\r\n2>            T=nlohmann::detail::to_json_fn\r\n2>        ]\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(898): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template \"nlohmann::detail::static_const<nlohmann::detail::to_json_fn>\".\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(887): error C2131: Ausdruck wurde nicht zu einer Konstanten ausgewertet.\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(887): note: Fehler wurde durch R\u00fcckgabe der Adresse eines tempor\u00e4ren Elements oder eines Verweises zu einem tempor\u00e4ren Element verursacht\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(887): error C2059: Syntaxfehler: \"=\"\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(887): error C4579: 'nlohmann::detail::static_const<nlohmann::detail::from_json_fn>::value': in-class initialization for type 'const T' is not yet implemented; static member will remain uninitialized at runtime but use in constant-expressions is supported\r\n2>        with\r\n2>        [\r\n2>            T=nlohmann::detail::from_json_fn\r\n2>        ]\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(899): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template \"nlohmann::detail::static_const<nlohmann::detail::from_json_fn>\".\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(6482): error C2784: \"_Ty *std::begin(_Ty (&)[_Size]) noexcept\": template-Argument f\u00fcr \"_Ty (&)[_Size]\" konnte nicht von \"add_rvalue_reference<const ContiguousContainer>::type\" hergeleitet werden.\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\INCLUDE\\xutility(1250): note: Siehe Deklaration von \"std::begin\"\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\INCLUDE\\type_traits(761): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template \"nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>\".\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\INCLUDE\\type_traits(790): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template \"std::is_nothrow_constructible<_Ty,nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer> &&>\".\r\n2>        with\r\n2>        [\r\n2>            _Ty=nlohmann::json\r\n2>        ]\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(12931): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template \"std::is_nothrow_move_constructible<nlohmann::json>\".\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(6482): error C2893: Funktionsvorlage \"unknown-type std::begin(const _Container &)\" konnte nicht spezialisiert werden\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(6482): note: Mit den folgenden Vorlagenargumenten:\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(6482): note: \"_Container=add_rvalue_reference<const ContiguousContainer>::type\"\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(6482): error C2893: Funktionsvorlage \"unknown-type std::begin(_Container &)\" konnte nicht spezialisiert werden\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(6482): note: Mit den folgenden Vorlagenargumenten:\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(6482): note: \"_Container=add_rvalue_reference<const ContiguousContainer>::type\"\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(6482): error C2784: \"const _Elem *std::begin(std::initializer_list<_Elem>) noexcept\": template-Argument f\u00fcr \"std::initializer_list<_Elem>\" konnte nicht von \"add_rvalue_reference<const ContiguousContainer>::type\" hergeleitet werden.\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\INCLUDE\\initializer_list(60): note: Siehe Deklaration von \"std::begin\"\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\Source\\EyeTrackingPlugin\\Private\\MultipartMessage.cpp(46): warning C4456: Deklaration von \"msg\" blendet vorherige lokale Deklaration aus\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\Source\\EyeTrackingPlugin\\Private\\MultipartMessage.cpp(23): note: Siehe Deklaration von \"msg\"\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(887): error C4579: 'nlohmann::detail::static_const<nlohmann::detail::to_json_fn>::value': in-class initialization for type 'const T' is not yet implemented; static member will remain uninitialized at runtime but use in constant-expressions is supported\r\n2>        with\r\n2>        [\r\n2>            T=nlohmann::detail::to_json_fn\r\n2>        ]\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(898): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template \"nlohmann::detail::static_const<nlohmann::detail::to_json_fn>\".\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(887): error C2131: Ausdruck wurde nicht zu einer Konstanten ausgewertet.\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(887): note: Fehler wurde durch R\u00fcckgabe der Adresse eines tempor\u00e4ren Elements oder eines Verweises zu einem tempor\u00e4ren Element verursacht\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(887): error C2059: Syntaxfehler: \"=\"\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(887): error C4579: 'nlohmann::detail::static_const<nlohmann::detail::from_json_fn>::value': in-class initialization for type 'const T' is not yet implemented; static member will remain uninitialized at runtime but use in constant-expressions is supported\r\n2>        with\r\n2>        [\r\n2>            T=nlohmann::detail::from_json_fn\r\n2>        ]\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(899): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template \"nlohmann::detail::static_const<nlohmann::detail::from_json_fn>\".\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(6482): error C2784: \"_Ty *std::begin(_Ty (&)[_Size]) noexcept\": template-Argument f\u00fcr \"_Ty (&)[_Size]\" konnte nicht von \"add_rvalue_reference<const ContiguousContainer>::type\" hergeleitet werden.\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\INCLUDE\\xutility(1250): note: Siehe Deklaration von \"std::begin\"\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\INCLUDE\\type_traits(761): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template \"nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>\".\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\INCLUDE\\type_traits(790): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template \"std::is_nothrow_constructible<_Ty,nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer> &&>\".\r\n2>        with\r\n2>        [\r\n2>            _Ty=nlohmann::json\r\n2>        ]\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(12931): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template \"std::is_nothrow_move_constructible<nlohmann::json>\".\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(6482): error C2893: Funktionsvorlage \"unknown-type std::begin(const _Container &)\" konnte nicht spezialisiert werden\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(6482): note: Mit den folgenden Vorlagenargumenten:\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(6482): note: \"_Container=add_rvalue_reference<const ContiguousContainer>::type\"\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(6482): error C2893: Funktionsvorlage \"unknown-type std::begin(_Container &)\" konnte nicht spezialisiert werden\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(6482): note: Mit den folgenden Vorlagenargumenten:\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(6482): note: \"_Container=add_rvalue_reference<const ContiguousContainer>::type\"\r\n2>D:\\Uni\\Bachelorarbeit\\EyeTracking4_15\\Plugins\\EyeTrackingPlugin\\ThirdParty\\PupilLabs\\include\\json.hpp(6482): error C2784: \"const _Elem *std::begin(std::initializer_list<_Elem>) noexcept\": template-Argument f\u00fcr \"std::initializer_list<_Elem>\" konnte nicht von \"add_rvalue_reference<const ContiguousContainer>::type\" hergeleitet werden.\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\INCLUDE\\initializer_list(60): note: Siehe Deklaration von \"std::begin\"\r\n\r\n\r\nIs either Visual Studio 2017 or Windows 10 not supported yet?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/590", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/590/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/590/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/590/events", "html_url": "https://github.com/nlohmann/json/issues/590", "id": 230211184, "node_id": "MDU6SXNzdWUyMzAyMTExODQ=", "number": 590, "title": "compiling with gcc 7 -> error on bool operator <", "user": {"login": "buffos", "id": 9776567, "node_id": "MDQ6VXNlcjk3NzY1Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/9776567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/buffos", "html_url": "https://github.com/buffos", "followers_url": "https://api.github.com/users/buffos/followers", "following_url": "https://api.github.com/users/buffos/following{/other_user}", "gists_url": "https://api.github.com/users/buffos/gists{/gist_id}", "starred_url": "https://api.github.com/users/buffos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/buffos/subscriptions", "organizations_url": "https://api.github.com/users/buffos/orgs", "repos_url": "https://api.github.com/users/buffos/repos", "events_url": "https://api.github.com/users/buffos/events{/privacy}", "received_events_url": "https://api.github.com/users/buffos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 19, "created_at": "2017-05-21T10:22:11Z", "updated_at": "2017-06-06T07:33:04Z", "closed_at": "2017-06-06T07:33:04Z", "author_association": "NONE", "body": "when compiling i get\r\n\r\n`json.hpp:6395:66: error: wrong number of template arguments (1, should be 2)\r\n                         return *lhs.m_value.array < *rhs.m_value.array;`\r\n\r\n and\r\n\r\n`/usr/include/c++/7/array:94:12: note: provided for \u2018template<class _Tp, long unsigned int _Nm> struct std::array\u2019\r\n     struct array\r\n`\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/589", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/589/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/589/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/589/events", "html_url": "https://github.com/nlohmann/json/issues/589", "id": 229911532, "node_id": "MDU6SXNzdWUyMjk5MTE1MzI=", "number": 589, "title": "Parsing from stream leads to an array", "user": {"login": "matsbror", "id": 10210145, "node_id": "MDQ6VXNlcjEwMjEwMTQ1", "avatar_url": "https://avatars3.githubusercontent.com/u/10210145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matsbror", "html_url": "https://github.com/matsbror", "followers_url": "https://api.github.com/users/matsbror/followers", "following_url": "https://api.github.com/users/matsbror/following{/other_user}", "gists_url": "https://api.github.com/users/matsbror/gists{/gist_id}", "starred_url": "https://api.github.com/users/matsbror/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matsbror/subscriptions", "organizations_url": "https://api.github.com/users/matsbror/orgs", "repos_url": "https://api.github.com/users/matsbror/repos", "events_url": "https://api.github.com/users/matsbror/events{/privacy}", "received_events_url": "https://api.github.com/users/matsbror/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-05-19T08:55:23Z", "updated_at": "2017-05-19T09:21:10Z", "closed_at": "2017-05-19T09:20:11Z", "author_association": "NONE", "body": "Hello,\r\n\r\nI parse the following file from a stream:\r\n```js\r\n{\r\n  \"anInt\": 500,\r\n  \"aString\": \"fixed\"\r\n}\r\n```\r\n\r\nThen I send it to an output stream with dump(4), which yields the following output:\r\n```js\r\n[\r\n    {\r\n        \"aString\": \"fixed\",\r\n        \"anInt\": 500\r\n    }\r\n]\r\n```\r\n\r\nIt has become embedded in an array. Do you know why and how can I get around it? \r\nIf it is consistent, I can of course deal with it as it is.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/588", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/588/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/588/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/588/events", "html_url": "https://github.com/nlohmann/json/pull/588", "id": 229398702, "node_id": "MDExOlB1bGxSZXF1ZXN0MTIxMDkwMjk2", "number": 588, "title": "\u8bf7\u6c42\u5934", "user": {"login": "CnrBeili", "id": 24793973, "node_id": "MDQ6VXNlcjI0NzkzOTcz", "avatar_url": "https://avatars3.githubusercontent.com/u/24793973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CnrBeili", "html_url": "https://github.com/CnrBeili", "followers_url": "https://api.github.com/users/CnrBeili/followers", "following_url": "https://api.github.com/users/CnrBeili/following{/other_user}", "gists_url": "https://api.github.com/users/CnrBeili/gists{/gist_id}", "starred_url": "https://api.github.com/users/CnrBeili/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CnrBeili/subscriptions", "organizations_url": "https://api.github.com/users/CnrBeili/orgs", "repos_url": "https://api.github.com/users/CnrBeili/repos", "events_url": "https://api.github.com/users/CnrBeili/events{/privacy}", "received_events_url": "https://api.github.com/users/CnrBeili/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-05-17T15:43:00Z", "updated_at": "2017-06-14T21:16:15Z", "closed_at": "2017-05-17T15:44:30Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/588", "html_url": "https://github.com/nlohmann/json/pull/588", "diff_url": "https://github.com/nlohmann/json/pull/588.diff", "patch_url": "https://github.com/nlohmann/json/pull/588.patch"}, "body": "## Files to change\r\n\r\nThere are currently two files which need to be edited:\r\n\r\n1. [`src/json.hpp`](https://github.com/nlohmann/json/blob/master/src/json.hpp)\r\n\r\n2. [`test/src/unit.cpp`](https://github.com/nlohmann/json/blob/master/test/unit.cpp) - This contains the [Catch](https://github.com/philsquared/Catch) unit tests which currently cover [100 %](https://coveralls.io/github/nlohmann/json) of the library's code.\r\n\r\n   If you add or change a feature, please also add a unit test to this file. The unit tests can be compiled and executed with\r\n\r\n   ```sh\r\n   make check\r\n   ```\r\n\r\n   The test cases are also executed with several different compilers on [Travis](https://travis-ci.org/nlohmann/json) once you open a pull request.\r\n\r\n\r\n## Note\r\n\r\n- If you open a pull request, the code will be automatically tested with [Valgrind](http://valgrind.org)'s Memcheck tool to detect memory leaks. Please be aware that the execution with Valgrind _may_ in rare cases yield different behavior than running the code directly. This can result in failing unit tests which run successfully without Valgrind.\r\n\r\n## Please don't\r\n\r\n- The C++11 support varies between different **compilers** and versions. Please note the [list of supported compilers](https://github.com/nlohmann/json/blob/master/README.md#supported-compilers). Some compilers like GCC 4.8 (and earlier), Clang 3.3 (and earlier), or Microsoft Visual Studio 13.0 and earlier are known not to work due to missing or incomplete C++11 support. Please refrain from proposing changes that work around these compiler's limitations with `#ifdef`s or other means.\r\n- Specifically, I am aware of compilation problems with **Microsoft Visual Studio** (there even is an [issue label](https://github.com/nlohmann/json/issues?utf8=\u2713&q=label%3A%22visual+studio%22+) for these kind of bugs). I understand that even in 2016, complete C++11 support isn't there yet. But please also understand that I do not want to drop features or uglify the code just to make Microsoft's sub-standard compiler happy. The past has shown that there are ways to express the functionality such that the code compiles with the most recent MSVC - unfortunately, this is not the main objective of the project.\r\n- Please refrain from proposing changes that would **break [JSON](http://json.org) conformance**. If you propose a conformant extension of JSON to be supported by the library, please motivate this extension.\r\n- Please do not open pull requests that address **multiple issues**.\r\n"}]