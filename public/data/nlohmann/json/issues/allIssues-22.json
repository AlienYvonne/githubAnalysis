[{"url": "https://api.github.com/repos/nlohmann/json/issues/557", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/557/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/557/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/557/events", "html_url": "https://github.com/nlohmann/json/issues/557", "id": 222035877, "node_id": "MDU6SXNzdWUyMjIwMzU4Nzc=", "number": 557, "title": "Cant modify existing numbers inside a json object", "user": {"login": "AMScaglione", "id": 22486673, "node_id": "MDQ6VXNlcjIyNDg2Njcz", "avatar_url": "https://avatars1.githubusercontent.com/u/22486673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AMScaglione", "html_url": "https://github.com/AMScaglione", "followers_url": "https://api.github.com/users/AMScaglione/followers", "following_url": "https://api.github.com/users/AMScaglione/following{/other_user}", "gists_url": "https://api.github.com/users/AMScaglione/gists{/gist_id}", "starred_url": "https://api.github.com/users/AMScaglione/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AMScaglione/subscriptions", "organizations_url": "https://api.github.com/users/AMScaglione/orgs", "repos_url": "https://api.github.com/users/AMScaglione/repos", "events_url": "https://api.github.com/users/AMScaglione/events{/privacy}", "received_events_url": "https://api.github.com/users/AMScaglione/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-04-16T21:56:18Z", "updated_at": "2017-04-23T20:35:07Z", "closed_at": "2017-04-23T20:35:07Z", "author_association": "NONE", "body": "Say for example I have something like\r\n\r\n```cpp\r\njson j;\r\nj[\"num\"] = 0;\r\n```\r\n\r\nI can not do something like\r\n\r\n` j[\"num\"]  += 1; `\r\n\r\nas it gives me this error on runtime:\r\n\r\n```\r\nterminate called after throwing an instance of 'std::domain_error'\r\n  what():  cannot use push_back() with number\r\n```\r\n\r\nI tried simplifying it to \r\n\r\n`j[\"num\"] = j[\"num\"] + 1;`\r\n\r\nbut that gives me this error at compile time:\r\n`\r\nerror: no match for 'operator+' (operand types are 'nlohmann::basic_json<>::value_type {aka nlohmann::basic_json<>}' and 'int')|`"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/556", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/556/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/556/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/556/events", "html_url": "https://github.com/nlohmann/json/issues/556", "id": 221957079, "node_id": "MDU6SXNzdWUyMjE5NTcwNzk=", "number": 556, "title": "Minimal repository (current size very large)", "user": {"login": "tdegeus", "id": 7030445, "node_id": "MDQ6VXNlcjcwMzA0NDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7030445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tdegeus", "html_url": "https://github.com/tdegeus", "followers_url": "https://api.github.com/users/tdegeus/followers", "following_url": "https://api.github.com/users/tdegeus/following{/other_user}", "gists_url": "https://api.github.com/users/tdegeus/gists{/gist_id}", "starred_url": "https://api.github.com/users/tdegeus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tdegeus/subscriptions", "organizations_url": "https://api.github.com/users/tdegeus/orgs", "repos_url": "https://api.github.com/users/tdegeus/repos", "events_url": "https://api.github.com/users/tdegeus/events{/privacy}", "received_events_url": "https://api.github.com/users/tdegeus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-15T16:10:30Z", "updated_at": "2017-04-15T16:16:45Z", "closed_at": "2017-04-15T16:16:45Z", "author_association": "NONE", "body": "I want to use \"json\" as a submodule to my project, because:\r\n\r\n1.  I want to be transparent is ownership, to give credits where they are due.\r\n2.  To facilitate updating from source.\r\n\r\nHowever, the current repository is extremely large, due to the tests and benchmarks. This hinders again the distribution of my code. Therefore it would be great if a minimal repository can be maintained.\r\n\r\nThanks!\r\nTom"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/555", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/555/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/555/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/555/events", "html_url": "https://github.com/nlohmann/json/pull/555", "id": 221946589, "node_id": "MDExOlB1bGxSZXF1ZXN0MTE2MDI0NTY5", "number": 555, "title": "Fix some \"enumeration values not explicitly handled in switch\" warnings", "user": {"login": "cmaglie", "id": 423515, "node_id": "MDQ6VXNlcjQyMzUxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/423515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmaglie", "html_url": "https://github.com/cmaglie", "followers_url": "https://api.github.com/users/cmaglie/followers", "following_url": "https://api.github.com/users/cmaglie/following{/other_user}", "gists_url": "https://api.github.com/users/cmaglie/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmaglie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmaglie/subscriptions", "organizations_url": "https://api.github.com/users/cmaglie/orgs", "repos_url": "https://api.github.com/users/cmaglie/repos", "events_url": "https://api.github.com/users/cmaglie/events{/privacy}", "received_events_url": "https://api.github.com/users/cmaglie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-04-15T12:51:17Z", "updated_at": "2017-04-19T17:01:03Z", "closed_at": "2017-04-19T17:01:03Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/555", "html_url": "https://github.com/nlohmann/json/pull/555", "diff_url": "https://github.com/nlohmann/json/pull/555.diff", "patch_url": "https://github.com/nlohmann/json/pull/555.patch"}, "body": "This change aims to remove the warnings emitted with the `-Wswitch-enum` flag and remove the `default` case.\r\n\r\nThe motivation for removing the default case is that I want a compiler warning if new values are added to an enumeration and there are switch/case that needs to be updated to handle them.\r\nMoreover in some cases I added an `assert(false)` at the end of the switch/case: this means that an invalid enum value has been passed when this should not happen.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/554", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/554/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/554/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/554/events", "html_url": "https://github.com/nlohmann/json/issues/554", "id": 221934051, "node_id": "MDU6SXNzdWUyMjE5MzQwNTE=", "number": 554, "title": "Better support for SAX style serialize and deserialize in new version?", "user": {"login": "11nk", "id": 17879300, "node_id": "MDQ6VXNlcjE3ODc5MzAw", "avatar_url": "https://avatars3.githubusercontent.com/u/17879300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/11nk", "html_url": "https://github.com/11nk", "followers_url": "https://api.github.com/users/11nk/followers", "following_url": "https://api.github.com/users/11nk/following{/other_user}", "gists_url": "https://api.github.com/users/11nk/gists{/gist_id}", "starred_url": "https://api.github.com/users/11nk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/11nk/subscriptions", "organizations_url": "https://api.github.com/users/11nk/orgs", "repos_url": "https://api.github.com/users/11nk/repos", "events_url": "https://api.github.com/users/11nk/events{/privacy}", "received_events_url": "https://api.github.com/users/11nk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-04-15T07:53:11Z", "updated_at": "2018-02-13T20:31:45Z", "closed_at": "2017-04-15T09:37:28Z", "author_association": "NONE", "body": "it is very useful to do a language binding , Currently we need iterate the object to create a temp cpp json object before serizalize to string . "}, {"url": "https://api.github.com/repos/nlohmann/json/issues/553", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/553/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/553/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/553/events", "html_url": "https://github.com/nlohmann/json/issues/553", "id": 221475394, "node_id": "MDU6SXNzdWUyMjE0NzUzOTQ=", "number": 553, "title": "Cannot convert from json array to std::array", "user": {"login": "wgtdkp", "id": 6128114, "node_id": "MDQ6VXNlcjYxMjgxMTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6128114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wgtdkp", "html_url": "https://github.com/wgtdkp", "followers_url": "https://api.github.com/users/wgtdkp/followers", "following_url": "https://api.github.com/users/wgtdkp/following{/other_user}", "gists_url": "https://api.github.com/users/wgtdkp/gists{/gist_id}", "starred_url": "https://api.github.com/users/wgtdkp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wgtdkp/subscriptions", "organizations_url": "https://api.github.com/users/wgtdkp/orgs", "repos_url": "https://api.github.com/users/wgtdkp/repos", "events_url": "https://api.github.com/users/wgtdkp/events{/privacy}", "received_events_url": "https://api.github.com/users/wgtdkp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 5, "created_at": "2017-04-13T06:57:56Z", "updated_at": "2017-06-19T15:35:04Z", "closed_at": "2017-06-19T15:35:04Z", "author_association": "NONE", "body": "Conversion from `std::array` to json array works well, but not in reverse.\r\n```c++\r\nstd::string r = R\"([1, 2, 3, 4])\";\r\nstd::array<int, 4> arr = json::parse(r);\r\n```\r\nclang++ gives compiling errors:\r\n```\r\n/usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/stl_iterator.h:661:20: error: \r\n      no member named 'insert' in 'std::array<int, 4>'\r\n        iter = container->insert(iter, std::move(__value));\r\n               ~~~~~~~~~  ^\r\n/usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/stl_algo.h:4175:12: note: \r\n      in instantiation of member function 'std::insert_iterator<std::array<int, 4> >::operator='\r\n      requested here\r\n        *__result = __unary_op(*__first);\r\n                  ^\r\n../../src/json.hpp:720:10: note: in instantiation of function template specialization\r\n      'std::transform<nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char>, bool,\r\n      long, unsigned long, double, std::allocator, adl_serializer>::iter_impl<const\r\n      nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char>, bool, long, unsigned\r\n      long, double, std::allocator, adl_serializer> >, std::insert_iterator<std::array<int, 4> >, (lambda\r\n      at ../../src/json.hpp:721:50)>' requested here\r\n    std::transform(j.begin(), j.end(),\r\n         ^\r\n../../src/json.hpp:804:5: note: in instantiation of function template specialization\r\n      'nlohmann::detail::from_json_array_impl<nlohmann::basic_json<std::map, std::vector,\r\n      std::__cxx11::basic_string<char>, bool, long, unsigned long, double, std::allocator,\r\n      adl_serializer>, std::array<int, 4> >' requested here\r\n    from_json_array_impl(j, arr, priority_tag<1> {});\r\n    ^\r\n../../src/json.hpp:902:16: note: in instantiation of function template specialization\r\n      'nlohmann::detail::from_json<nlohmann::basic_json<std::map, std::vector,\r\n      std::__cxx11::basic_string<char>, bool, long, unsigned long, double, std::allocator,\r\n      adl_serializer>, std::array<int, 4>, 0>' requested here\r\n        return from_json(j, val);\r\n               ^\r\n../../src/json.hpp:917:16: note: in instantiation of function template specialization\r\n      'nlohmann::detail::from_json_fn::call<nlohmann::basic_json<std::map, std::vector,\r\n      std::__cxx11::basic_string<char>, bool, long, unsigned long, double, std::allocator,\r\n      adl_serializer>, std::array<int, 4> >' requested here\r\n        return call(j, val, priority_tag<1> {});\r\n               ^\r\n../../src/json.hpp:964:9: note: in instantiation of function template specialization\r\n      'nlohmann::detail::from_json_fn::operator()<nlohmann::basic_json<std::map, std::vector,\r\n      std::__cxx11::basic_string<char>, bool, long, unsigned long, double, std::allocator,\r\n      adl_serializer>, std::array<int, 4> >' requested here\r\n        ::nlohmann::from_json(std::forward<BasicJsonType>(j), val);\r\n        ^\r\n../../src/json.hpp:3272:36: note: in instantiation of function template specialization\r\n      'nlohmann::adl_serializer<std::array<int, 4>, void>::from_json<const nlohmann::basic_json<std::map,\r\n      std::vector, std::__cxx11::basic_string<char>, bool, long, unsigned long, double, std::allocator,\r\n      adl_serializer> &, std::array<int, 4> >' requested here\r\n        JSONSerializer<ValueType>::from_json(*this, ret);\r\n                                   ^\r\n../../src/json.hpp:3530:16: note: in instantiation of function template specialization\r\n      'nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char>, bool, long, unsigned\r\n      long, double, std::allocator, adl_serializer>::get<std::array<int, 4>, std::array<int, 4>, 0>'\r\n      requested here\r\n        return get<ValueType>();\r\n               ^\r\narray.cc:8:28: note: in instantiation of function template specialization 'nlohmann::basic_json<std::map,\r\n      std::vector, std::__cxx11::basic_string<char>, bool, long, unsigned long, double, std::allocator,\r\n      adl_serializer>::operator array<std::array<int, 4>, 0>' requested here\r\n  std::array<int, 4> arr = json::parse(r);\r\n                           ^\r\n1 error generated.\r\n```\r\nIt seems we use `std::inserter` to transform json array to `std::array`, but `std::array` doesn't support insertion. \r\nIs it designed so?\r\nIt seems unreasonable if we can convert `std::array` to json array but cannot do the same in reverse(and this could be easily supported, isn't it?).\r\n\r\nMy environment:\r\n\r\n1. clang++ = 3.8.0\r\n2. ubuntu = 16.04\r\n3. linux kernel = 4.4.0\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/552", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/552/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/552/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/552/events", "html_url": "https://github.com/nlohmann/json/issues/552", "id": 221355114, "node_id": "MDU6SXNzdWUyMjEzNTUxMTQ=", "number": 552, "title": "Do not define an unnamed namespace in a header file (DCL59-CPP)", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-04-12T18:45:39Z", "updated_at": "2018-04-06T16:11:38Z", "closed_at": "2017-05-09T06:49:12Z", "author_association": "OWNER", "body": "The SEI CERT C++ Coding Standard states in DCL59-CPP:\r\n\r\n> Do not define an unnamed namespace in a header file. When an unnamed namespace is defined in a header file, it can lead to surprising results. Due to default internal linkage, each translation unit will define its own unique instance of members of the unnamed namespace that are ODR-used within that translation unit. This can cause unexpected results, bloat the resulting executable, or inadvertently trigger undefined behavior due to one-definition rule (ODR) violations.\r\n\r\nThe code currently has one unnamed namespace:\r\n\r\n```cpp\r\n/// namespace to hold default `to_json` / `from_json` functions\r\nnamespace\r\n{\r\nconstexpr const auto& to_json = detail::static_const<detail::to_json_fn>::value;\r\nconstexpr const auto& from_json = detail::static_const<detail::from_json_fn>::value;\r\n}\r\n```\r\n\r\nI am not sure whether the above problem exists. Maybe @theodelrieu has an idea why we need that namespace in the first place."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/551", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/551/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/551/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/551/events", "html_url": "https://github.com/nlohmann/json/issues/551", "id": 220366276, "node_id": "MDU6SXNzdWUyMjAzNjYyNzY=", "number": 551, "title": "Parse error on known good json file", "user": {"login": "AnthonyScaglione", "id": 24924849, "node_id": "MDQ6VXNlcjI0OTI0ODQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/24924849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AnthonyScaglione", "html_url": "https://github.com/AnthonyScaglione", "followers_url": "https://api.github.com/users/AnthonyScaglione/followers", "following_url": "https://api.github.com/users/AnthonyScaglione/following{/other_user}", "gists_url": "https://api.github.com/users/AnthonyScaglione/gists{/gist_id}", "starred_url": "https://api.github.com/users/AnthonyScaglione/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AnthonyScaglione/subscriptions", "organizations_url": "https://api.github.com/users/AnthonyScaglione/orgs", "repos_url": "https://api.github.com/users/AnthonyScaglione/repos", "events_url": "https://api.github.com/users/AnthonyScaglione/events{/privacy}", "received_events_url": "https://api.github.com/users/AnthonyScaglione/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-04-08T01:40:38Z", "updated_at": "2017-04-08T10:37:27Z", "closed_at": "2017-04-08T10:37:20Z", "author_association": "NONE", "body": "I am trying to test out this parser as I absolutely love the intuitive use of it, however I am having parse errors on a known (albeit huge) good json file.\r\n\r\nusing this code:\r\n\r\n```cpp\r\n#include <iostream>\r\n#include <json.hpp>\r\n#include <fstream>\r\n#include <iomanip>\r\nusing json = nlohmann::json;\r\nint main()\r\n{\r\n    //read json file\r\n    std::ifstream i(\"./rawjsondata/matches1.json\");\r\n    json j;\r\n    i >> j;\r\n    //write prettified json to another file\r\n    std::ofstream o(\"./prettyrawjsondata/prettymatches1.json\");\r\n    o << std::setw(4) << j << std::endl;\r\n}\r\n```\r\n\r\non [this json file](https://s3-us-west-1.amazonaws.com/riot-developer-portal/seed-data/matches1.json)\r\n\r\ngives this error:\r\n\r\n```\r\nterminate called after throwing an instance of 'nlohmann::detail::parse_error'\r\n  what():  [json.exception.parse_error.101] parse error at 9467564: parse error - unexpected '\"'\r\n```\r\n\r\nHowever, using a [quick online json viewer](http://www.jsoneditoronline.org/#/), it gets correctly parsed"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/550", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/550/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/550/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/550/events", "html_url": "https://github.com/nlohmann/json/issues/550", "id": 220284265, "node_id": "MDU6SXNzdWUyMjAyODQyNjU=", "number": 550, "title": "Warning on Intel compiler (icc 17)", "user": {"login": "mark-99", "id": 14183064, "node_id": "MDQ6VXNlcjE0MTgzMDY0", "avatar_url": "https://avatars1.githubusercontent.com/u/14183064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-99", "html_url": "https://github.com/mark-99", "followers_url": "https://api.github.com/users/mark-99/followers", "following_url": "https://api.github.com/users/mark-99/following{/other_user}", "gists_url": "https://api.github.com/users/mark-99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-99/subscriptions", "organizations_url": "https://api.github.com/users/mark-99/orgs", "repos_url": "https://api.github.com/users/mark-99/repos", "events_url": "https://api.github.com/users/mark-99/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-99/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 706237888, "node_id": "MDU6TGFiZWw3MDYyMzc4ODg=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20icc", "name": "platform: icc", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 16, "created_at": "2017-04-07T17:53:51Z", "updated_at": "2017-09-29T08:33:12Z", "closed_at": "2017-06-06T18:48:56Z", "author_association": "NONE", "body": "The warning below is generated when compiling with icc. I realise this is likely the compiler's fault, but perhaps there is a workaround which would make it work.\r\n\r\n*edit* Actually Intel seem to think it's a valid warning: https://software.intel.com/en-us/forums/intel-c-compiler/topic/596393\r\n\r\n---------------\r\nnlohmann-json/json/json.hpp(9024): error #597: \"nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::iter_impl<U>::operator nlohmann::basic_json<std::map, std::vector, std::string, bool, int64_t={long}, uint64_t={unsigned long}, double, std::allocator, nlohmann::adl_serializer>::iter_impl<const nlohmann::basic_json<std::map, std::vector, std::string, bool,\r\n          int64_t={long}, uint64_t={unsigned long}, double, std::allocator, nlohmann::adl_serializer>>() const [with ObjectType=std::map, ArrayType=std::vector, StringType=std::string, BooleanType=bool, NumberIntegerType=int64_t={long}, NumberUnsignedType=uint64_t={unsigned long}, NumberFloatType=double, AllocatorType=std::allocator, JSONSerializer=nlohmann::adl_serializer, U=const nlohmann::basic_json<std::map, std::vector, std::string, bool, int64_t={long}, uint64_t={unsigned long}, double,\r\n          std::allocator, nlohmann::adl_serializer>]\" will not be called for implicit or explicit conversions\r\n          operator const_iterator() const\r\n          ^\r\n          detected during instantiation of class \"nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::iter_impl<U> [with ObjectType=std::map, ArrayType=std::vector, StringType=std::string, BooleanType=bool, NumberIntegerType=int64_t={long}, NumberUnsignedType=uint64_t={unsigned long}, NumberFloatType=double, AllocatorType=std::allocator, JSONSerializer=nlohmann::adl_serializer, U=const\r\n                    nlohmann::basic_json<std::map, std::vector, std::string, bool, int64_t={long}, uint64_t={unsigned long}, double, std::allocator, nlohmann::adl_serializer>]\""}, {"url": "https://api.github.com/repos/nlohmann/json/issues/549", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/549/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/549/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/549/events", "html_url": "https://github.com/nlohmann/json/issues/549", "id": 219744251, "node_id": "MDU6SXNzdWUyMTk3NDQyNTE=", "number": 549, "title": "multiple versions of 'vsnprintf'", "user": {"login": "AMScaglione", "id": 22486673, "node_id": "MDQ6VXNlcjIyNDg2Njcz", "avatar_url": "https://avatars1.githubusercontent.com/u/22486673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AMScaglione", "html_url": "https://github.com/AMScaglione", "followers_url": "https://api.github.com/users/AMScaglione/followers", "following_url": "https://api.github.com/users/AMScaglione/following{/other_user}", "gists_url": "https://api.github.com/users/AMScaglione/gists{/gist_id}", "starred_url": "https://api.github.com/users/AMScaglione/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AMScaglione/subscriptions", "organizations_url": "https://api.github.com/users/AMScaglione/orgs", "repos_url": "https://api.github.com/users/AMScaglione/repos", "events_url": "https://api.github.com/users/AMScaglione/events{/privacy}", "received_events_url": "https://api.github.com/users/AMScaglione/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 486186748, "node_id": "MDU6TGFiZWw0ODYxODY3NDg=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20mingw", "name": "platform: mingw", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2017-04-05T23:26:56Z", "updated_at": "2017-04-09T08:49:27Z", "closed_at": "2017-04-09T08:49:27Z", "author_association": "NONE", "body": "When adding this into code::blocks, I am getting this error when I attempt to compile. I am honestly not sure where to begin with this one, as it has never happened before I included this\r\n\r\n[here's a screenshot of what is happening ](http://imgur.com/a/wpXTl)"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/548", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/548/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/548/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/548/events", "html_url": "https://github.com/nlohmann/json/issues/548", "id": 219727946, "node_id": "MDU6SXNzdWUyMTk3Mjc5NDY=", "number": 548, "title": "illegal indirection", "user": {"login": "jacobjz", "id": 17813116, "node_id": "MDQ6VXNlcjE3ODEzMTE2", "avatar_url": "https://avatars1.githubusercontent.com/u/17813116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jacobjz", "html_url": "https://github.com/jacobjz", "followers_url": "https://api.github.com/users/jacobjz/followers", "following_url": "https://api.github.com/users/jacobjz/following{/other_user}", "gists_url": "https://api.github.com/users/jacobjz/gists{/gist_id}", "starred_url": "https://api.github.com/users/jacobjz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jacobjz/subscriptions", "organizations_url": "https://api.github.com/users/jacobjz/orgs", "repos_url": "https://api.github.com/users/jacobjz/repos", "events_url": "https://api.github.com/users/jacobjz/events{/privacy}", "received_events_url": "https://api.github.com/users/jacobjz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2017-04-05T21:59:02Z", "updated_at": "2017-05-11T12:57:26Z", "closed_at": "2017-04-22T18:12:30Z", "author_association": "NONE", "body": "![image](https://cloud.githubusercontent.com/assets/17813116/24728803/cbba1bfa-1a5b-11e7-8399-17d974d81805.png)\r\nso i get this error :/\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/547", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/547/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/547/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/547/events", "html_url": "https://github.com/nlohmann/json/issues/547", "id": 219496372, "node_id": "MDU6SXNzdWUyMTk0OTYzNzI=", "number": 547, "title": "Ambiguous compare operators with clang-5.0", "user": {"login": "pboettch", "id": 442684, "node_id": "MDQ6VXNlcjQ0MjY4NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/442684?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pboettch", "html_url": "https://github.com/pboettch", "followers_url": "https://api.github.com/users/pboettch/followers", "following_url": "https://api.github.com/users/pboettch/following{/other_user}", "gists_url": "https://api.github.com/users/pboettch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pboettch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pboettch/subscriptions", "organizations_url": "https://api.github.com/users/pboettch/orgs", "repos_url": "https://api.github.com/users/pboettch/repos", "events_url": "https://api.github.com/users/pboettch/events{/privacy}", "received_events_url": "https://api.github.com/users/pboettch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-04-05T07:47:55Z", "updated_at": "2017-04-07T14:31:51Z", "closed_at": "2017-04-05T08:55:52Z", "author_association": "NONE", "body": "This code:\r\n\r\n```c++\r\nmsg[\"level\"] = -80;\r\nif (msg[\"level\"] < -115) {\r\n    ////\r\n}\r\n```\r\nGives me a bunch of \r\n\r\n`error: use of overloaded operator '>=' is ambiguous (with operand types 'int' and 'const value_type' (aka 'const nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char>, bool, long, unsigned long, double, std::allocator, adl_serializer>'))`\r\n\r\nerrors when using clang-5.0 (5.0.0-svn294894-1) . Where with gcc 6.3 everything is fine, no moaning.\r\n\r\nI know that this version of clang is from the dev-tree (iiuc), but I'm creating this issue to see whether there is something to be done here or on clang's side? \r\n\r\n(I'm using 2.1.1 of this library).\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/546", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/546/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/546/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/546/events", "html_url": "https://github.com/nlohmann/json/issues/546", "id": 219299558, "node_id": "MDU6SXNzdWUyMTkyOTk1NTg=", "number": 546, "title": "Using tsl::ordered_map", "user": {"login": "arvidsson", "id": 1745762, "node_id": "MDQ6VXNlcjE3NDU3NjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1745762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arvidsson", "html_url": "https://github.com/arvidsson", "followers_url": "https://api.github.com/users/arvidsson/followers", "following_url": "https://api.github.com/users/arvidsson/following{/other_user}", "gists_url": "https://api.github.com/users/arvidsson/gists{/gist_id}", "starred_url": "https://api.github.com/users/arvidsson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arvidsson/subscriptions", "organizations_url": "https://api.github.com/users/arvidsson/orgs", "repos_url": "https://api.github.com/users/arvidsson/repos", "events_url": "https://api.github.com/users/arvidsson/events{/privacy}", "received_events_url": "https://api.github.com/users/arvidsson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-04-04T15:57:41Z", "updated_at": "2018-05-27T17:59:06Z", "closed_at": "2017-11-01T10:16:00Z", "author_association": "NONE", "body": "Hi!\r\n\r\nI'm using Visual Studio C++ 2017 and I get the following error when I try to use tsl::ordered_map with basic_json:\r\n\r\n'std::pair<Key,T>::second' uses undefined class 'nlohmann::basic_json<tsl::ordered_map,std::vector,std::string,bool,int64_t,uint64_t,double,std::allocator,nlohmann::adl_serializer>'\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/545", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/545/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/545/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/545/events", "html_url": "https://github.com/nlohmann/json/pull/545", "id": 218757708, "node_id": "MDExOlB1bGxSZXF1ZXN0MTEzODE0MTYw", "number": 545, "title": "add enum class default conversions", "user": {"login": "theodelrieu", "id": 15652306, "node_id": "MDQ6VXNlcjE1NjUyMzA2", "avatar_url": "https://avatars1.githubusercontent.com/u/15652306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theodelrieu", "html_url": "https://github.com/theodelrieu", "followers_url": "https://api.github.com/users/theodelrieu/followers", "following_url": "https://api.github.com/users/theodelrieu/following{/other_user}", "gists_url": "https://api.github.com/users/theodelrieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/theodelrieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theodelrieu/subscriptions", "organizations_url": "https://api.github.com/users/theodelrieu/orgs", "repos_url": "https://api.github.com/users/theodelrieu/repos", "events_url": "https://api.github.com/users/theodelrieu/events{/privacy}", "received_events_url": "https://api.github.com/users/theodelrieu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 2, "created_at": "2017-04-02T11:12:20Z", "updated_at": "2017-04-03T20:14:15Z", "closed_at": "2017-04-03T20:14:00Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/545", "html_url": "https://github.com/nlohmann/json/pull/545", "diff_url": "https://github.com/nlohmann/json/pull/545.diff", "patch_url": "https://github.com/nlohmann/json/pull/545.patch"}, "body": "resolve #513"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/544", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/544/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/544/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/544/events", "html_url": "https://github.com/nlohmann/json/issues/544", "id": 218691393, "node_id": "MDU6SXNzdWUyMTg2OTEzOTM=", "number": 544, "title": "Compiler support errors are inconvenient", "user": {"login": "1Hyena", "id": 3479475, "node_id": "MDQ6VXNlcjM0Nzk0NzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3479475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1Hyena", "html_url": "https://github.com/1Hyena", "followers_url": "https://api.github.com/users/1Hyena/followers", "following_url": "https://api.github.com/users/1Hyena/following{/other_user}", "gists_url": "https://api.github.com/users/1Hyena/gists{/gist_id}", "starred_url": "https://api.github.com/users/1Hyena/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1Hyena/subscriptions", "organizations_url": "https://api.github.com/users/1Hyena/orgs", "repos_url": "https://api.github.com/users/1Hyena/repos", "events_url": "https://api.github.com/users/1Hyena/events{/privacy}", "received_events_url": "https://api.github.com/users/1Hyena/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-01T12:00:13Z", "updated_at": "2017-04-01T12:52:02Z", "closed_at": "2017-04-01T12:52:02Z", "author_association": "NONE", "body": "Instead of whitelisting compilers you should blacklist them. What's the point of compiler whitelisting anyway? Shouldn't the code be portable in the first place?\r\nThis is my compiler:\r\ng++ (Ubuntu 4.8.5-2ubuntu1~14.04.1) 4.8.5\r\n\r\nI received the compiler error, I couldn't easily upgrade my compiler because seems that my system uses 4.8.5 by default and getting around it would have required me to change the Makefile of my project which I didn't want to do (to specifically call g++4.9 instead of just g++). So I changed the header file to this\r\n```\r\n// exclude unsupported compilers\r\n#if defined(__clang__)\r\n    #if (__clang_major__ * 10000 + __clang_minor__ * 100 + __clang_patchlevel__) < 30400\r\n        #error \"unsupported Clang version - see https://github.com/nlohmann/json#supported-compilers\"\r\n    #endif\r\n#elif defined(__GNUC__)\r\n    #if (__GNUC__ * 10000 + __GNUC_MINOR__ * 100 + __GNUC_PATCHLEVEL__) < 40800\r\n        #error \"unsupported GCC version - see https://github.com/nlohmann/json#supported-compilers\"\r\n    #endif\r\n#endif\r\n```\r\n\r\nand everything compiled just fine, I ran my program and it works. Not sure what the big issue is. Why wouldn't nlohmann::json compile correctly with g++ 4.8.5 ???\r\n\r\nFor the record, I use linux mint 17.1 (is it really obsolete already? I don't think so)."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/543", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/543/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/543/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/543/events", "html_url": "https://github.com/nlohmann/json/issues/543", "id": 218456584, "node_id": "MDU6SXNzdWUyMTg0NTY1ODQ=", "number": 543, "title": "Head Elements Sorting", "user": {"login": "Kostya1", "id": 2563070, "node_id": "MDQ6VXNlcjI1NjMwNzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2563070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kostya1", "html_url": "https://github.com/Kostya1", "followers_url": "https://api.github.com/users/Kostya1/followers", "following_url": "https://api.github.com/users/Kostya1/following{/other_user}", "gists_url": "https://api.github.com/users/Kostya1/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kostya1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kostya1/subscriptions", "organizations_url": "https://api.github.com/users/Kostya1/orgs", "repos_url": "https://api.github.com/users/Kostya1/repos", "events_url": "https://api.github.com/users/Kostya1/events{/privacy}", "received_events_url": "https://api.github.com/users/Kostya1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-31T10:04:31Z", "updated_at": "2017-03-31T23:06:48Z", "closed_at": "2017-03-31T23:06:48Z", "author_association": "NONE", "body": "I need to make a json from iarray. I'm doing it like you in your example\r\n\r\n json j;\r\n \r\nj[\"pi\"] = 3.141;\r\n \r\nj[\"happy\"] = true;\r\n\r\n \r\nSo, result json in this example will be:\r\n \r\n{\r\n\"happy\": true,\r\n\"pi\": 3.141\r\n}\r\n \r\nThe keys are sorted alphabetically. But I need \r\nBut I want make json like this\r\n\r\n{ \r\n\"pi\": 3.141, \r\n\"happy\": true\r\n}\r\n\r\nHow can I make the keys in the same order as I add them?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/542", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/542/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/542/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/542/events", "html_url": "https://github.com/nlohmann/json/issues/542", "id": 218445080, "node_id": "MDU6SXNzdWUyMTg0NDUwODA=", "number": 542, "title": "Duplicate symbols error happens while to_json/from_json method implemented inside entity definition header file", "user": {"login": "woodywu", "id": 3216210, "node_id": "MDQ6VXNlcjMyMTYyMTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/3216210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/woodywu", "html_url": "https://github.com/woodywu", "followers_url": "https://api.github.com/users/woodywu/followers", "following_url": "https://api.github.com/users/woodywu/following{/other_user}", "gists_url": "https://api.github.com/users/woodywu/gists{/gist_id}", "starred_url": "https://api.github.com/users/woodywu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/woodywu/subscriptions", "organizations_url": "https://api.github.com/users/woodywu/orgs", "repos_url": "https://api.github.com/users/woodywu/repos", "events_url": "https://api.github.com/users/woodywu/events{/privacy}", "received_events_url": "https://api.github.com/users/woodywu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-31T09:19:44Z", "updated_at": "2017-04-07T19:29:55Z", "closed_at": "2017-03-31T10:17:31Z", "author_association": "NONE", "body": "Can't upload the project file, so I try my best to make this clear...\r\n\r\nI implemented the to_json/from_json methods inside the entity definition header file. Suppose the file called A.h, and include this file inside the main.cpp source file. I have another source file called B.h, it does nothing but include A.h and define a class called B. When I compile the whole project, I got a duplicate symbols error.\r\n\r\n`1>ConsoleApplication10.obj : error LNK2005: \"void __cdecl from_json(class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> const &,class A &)\" (?from_json@@YAXABV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@AAVA@@@Z) \u5df2\u7ecf\u5728 B.obj \u4e2d\u5b9a\u4e49\r\n1>ConsoleApplication10.obj : error LNK2005: \"void __cdecl to_json(class nlohmann::basic_json<class std::map,class std::vector,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer> &,class A const &)\" (?to_json@@YAXAAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@ABVA@@@Z) \u5df2\u7ecf\u5728 B.obj \u4e2d\u5b9a\u4e49\r\n1>D:\\Documents\\Visual Studio 2015\\Projects\\ConsoleApplication10\\Debug\\ConsoleApplication10.exe : fatal error LNK1169: \u627e\u5230\u4e00\u4e2a\u6216\u591a\u4e2a\u591a\u91cd\u5b9a\u4e49\u7684\u7b26\u53f7`\r\n\r\nAnd I solved this by set to_json/from_json as static methods. But, according to the tutorial, I don't have to do this. I don't know if this is a document error, or I use this in a wrong way.\r\n\r\nSorry for my poor English...\r\n\r\nA.h \r\n\r\n```cpp\r\n#pragma once\r\n\r\n#include \"json.hpp\"\r\n\r\nusing json = nlohmann::json;\r\n\r\n\r\nclass A\r\n{};\r\n\r\nvoid to_json(json& j, const A& val) {\r\n}\r\n\r\nvoid from_json(const json& j, A& val) {\r\n}\r\n```\r\n\r\nB.h\r\n\r\n```cpp\r\n#pragma once\r\n\r\n#include \"A.h\"\r\n\r\nclass B\r\n{\r\npublic:\r\n\tB();\r\n\t~B();\r\n};\r\n```\r\n\r\nB.cpp\r\n\r\n```cpp\r\n#include \"stdafx.h\"\r\n#include \"B.h\"\r\n\r\n\r\nB::B()\r\n{\r\n}\r\n\r\n\r\nB::~B()\r\n{\r\n}\r\n```\r\n\r\nmain file\r\n```cpp\r\n#include \"stdafx.h\"\r\n\r\n#include \"A.h\"\r\n\r\nusing json = nlohmann::json;\r\n\r\nint main()\r\n{\r\n\tjson _ = A();\r\n\r\n    return 0;\r\n}\r\n```\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/541", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/541/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/541/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/541/events", "html_url": "https://github.com/nlohmann/json/issues/541", "id": 218419612, "node_id": "MDU6SXNzdWUyMTg0MTk2MTI=", "number": 541, "title": "consider adding a bool json::is_valid(std::string const&) non-member function", "user": {"login": "user1095108", "id": 8299348, "node_id": "MDQ6VXNlcjgyOTkzNDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8299348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/user1095108", "html_url": "https://github.com/user1095108", "followers_url": "https://api.github.com/users/user1095108/followers", "following_url": "https://api.github.com/users/user1095108/following{/other_user}", "gists_url": "https://api.github.com/users/user1095108/gists{/gist_id}", "starred_url": "https://api.github.com/users/user1095108/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/user1095108/subscriptions", "organizations_url": "https://api.github.com/users/user1095108/orgs", "repos_url": "https://api.github.com/users/user1095108/repos", "events_url": "https://api.github.com/users/user1095108/events{/privacy}", "received_events_url": "https://api.github.com/users/user1095108/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-31T07:28:02Z", "updated_at": "2017-03-31T07:58:52Z", "closed_at": "2017-03-31T07:58:42Z", "author_association": "NONE", "body": "Consider this scenario. An arbitrary string is provided to an app. The string is supposed to contain valid json, but the app has no way of knowing this. It tries to parse the json with json::parse(), but exceptions are disabled. This means, if the json is not valid, std::abort() will be called and the app will abort and there is no way to prevent this from happening."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/540", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/540/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/540/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/540/events", "html_url": "https://github.com/nlohmann/json/pull/540", "id": 218212180, "node_id": "MDExOlB1bGxSZXF1ZXN0MTEzNDM5MDgx", "number": 540, "title": "Properly pop diagnostics", "user": {"login": "tinloaf", "id": 442687, "node_id": "MDQ6VXNlcjQ0MjY4Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/442687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tinloaf", "html_url": "https://github.com/tinloaf", "followers_url": "https://api.github.com/users/tinloaf/followers", "following_url": "https://api.github.com/users/tinloaf/following{/other_user}", "gists_url": "https://api.github.com/users/tinloaf/gists{/gist_id}", "starred_url": "https://api.github.com/users/tinloaf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tinloaf/subscriptions", "organizations_url": "https://api.github.com/users/tinloaf/orgs", "repos_url": "https://api.github.com/users/tinloaf/repos", "events_url": "https://api.github.com/users/tinloaf/events{/privacy}", "received_events_url": "https://api.github.com/users/tinloaf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 2, "created_at": "2017-03-30T14:16:04Z", "updated_at": "2017-03-30T15:25:35Z", "closed_at": "2017-03-30T15:25:30Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/540", "html_url": "https://github.com/nlohmann/json/pull/540", "diff_url": "https://github.com/nlohmann/json/pull/540.diff", "patch_url": "https://github.com/nlohmann/json/pull/540.patch"}, "body": "Currently, with clang, the diagnostics are push()ed twice, but pop()ed only once. Fixing this by adding a \"pragma diagnostics pop\"."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/539", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/539/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/539/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/539/events", "html_url": "https://github.com/nlohmann/json/issues/539", "id": 218136956, "node_id": "MDU6SXNzdWUyMTgxMzY5NTY=", "number": 539, "title": "Help request", "user": {"login": "abdessattar", "id": 14142064, "node_id": "MDQ6VXNlcjE0MTQyMDY0", "avatar_url": "https://avatars3.githubusercontent.com/u/14142064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abdessattar", "html_url": "https://github.com/abdessattar", "followers_url": "https://api.github.com/users/abdessattar/followers", "following_url": "https://api.github.com/users/abdessattar/following{/other_user}", "gists_url": "https://api.github.com/users/abdessattar/gists{/gist_id}", "starred_url": "https://api.github.com/users/abdessattar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abdessattar/subscriptions", "organizations_url": "https://api.github.com/users/abdessattar/orgs", "repos_url": "https://api.github.com/users/abdessattar/repos", "events_url": "https://api.github.com/users/abdessattar/events{/privacy}", "received_events_url": "https://api.github.com/users/abdessattar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2017-03-30T09:36:38Z", "updated_at": "2017-04-07T19:29:55Z", "closed_at": "2017-03-31T23:06:59Z", "author_association": "NONE", "body": "Hello,\r\nI want to thank you for the important advice. I get what I want but with simple class.\r\nWhen I tried your solution with singleton and other specific classes. I got this error \"C2338   could not find to _json() method in T's namespace \".\r\nReally, I need your help for advancing as soon as possible.\r\nthank you in advance,\r\nBest regards,"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/538", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/538/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/538/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/538/events", "html_url": "https://github.com/nlohmann/json/issues/538", "id": 218099754, "node_id": "MDU6SXNzdWUyMTgwOTk3NTQ=", "number": 538, "title": "How to deal with missing keys in `from_json`?", "user": {"login": "dneise", "id": 8200858, "node_id": "MDQ6VXNlcjgyMDA4NTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/8200858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dneise", "html_url": "https://github.com/dneise", "followers_url": "https://api.github.com/users/dneise/followers", "following_url": "https://api.github.com/users/dneise/following{/other_user}", "gists_url": "https://api.github.com/users/dneise/gists{/gist_id}", "starred_url": "https://api.github.com/users/dneise/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dneise/subscriptions", "organizations_url": "https://api.github.com/users/dneise/orgs", "repos_url": "https://api.github.com/users/dneise/repos", "events_url": "https://api.github.com/users/dneise/events{/privacy}", "received_events_url": "https://api.github.com/users/dneise/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 6, "created_at": "2017-03-30T07:03:15Z", "updated_at": "2017-03-30T15:40:36Z", "closed_at": "2017-03-30T15:39:14Z", "author_association": "NONE", "body": "I am following this example: https://github.com/nlohmann/json#basic-usage\r\n\r\nWhen there is a key missing in the json, inside `from_json`, I expected to get an exception, but I just get a core_dump. \r\nI would like to avoid writing a lot of boilerplate to check for the existence of keys and type of  values myself.\r\nI am mostly a python guy and am used to the try..catch style of doing things. This awesome library looked like it supports this style in this case.\r\n\r\nMy own type looks like this, lives inside namespace `Lid`:\r\n\r\n    struct MotorReport\r\n    {\r\n        int8_t motor_id;\r\n        int32_t duration_in_ms;\r\n        int8_t stop_reason;\r\n        std::vector<int> current;\r\n        std::vector<int> position;\r\n    };\r\n\r\n    void to_json(nlohmann::json& j, const MotorReport& r) {\r\n        j = nlohmann::json{\r\n            {\"motor_id\", r.motor_id},\r\n            {\"duration[ms]\", r.duration_in_ms},\r\n            {\"motor_stop_reason\", {\r\n                {\"motor_stop_id\", r.stop_reason}\r\n            }},\r\n            {\"current\", r.current},\r\n            {\"position\", r.position}\r\n        };\r\n    }\r\n\r\n    void from_json(const nlohmann::json& j, MotorReport& r) {\r\n        r.motor_id = j[\"motor_id\"];\r\n        r.duration_in_ms = j[\"duration[ms]\"];\r\n        r.stop_reason = j[\"motor_stop_reason\"][\"motor_stop_id\"];\r\n        r.current = j[\"current\"].get<std::vector<int> >();\r\n        r.position = j[\"position\"].get<std::vector<int> >();\r\n    }\r\n\r\nwhen the json is complete, `from_json` nicely works.\r\n\r\n    json j = R\"(\r\n         {\r\n              \"motor_id\":1,\r\n              \"duration[ms]\":4129,\r\n              \"motor_stop_reason\":{\r\n                  \"motor_stop_name\":\"User Interupt\",\r\n                  \"motor_stop_id\":5\r\n              },\r\n              \"current\":[\r\n                  468,181,181,188,219,222,223,223,224,222,220,218,218,218,\r\n                  217,214,212,210,209,210,210,208,206,206,206\r\n              ],\r\n              \"position\":[\r\n                  37,37,37,37,36,37,37,37,37,37,36,37,37,\r\n                  37,37,37,37,37,37,37,37,36,37,37,37\r\n              ]\r\n          }\r\n    )\"_json;\r\n\r\n    Lid::MotorReport mr = j;\r\n\r\nWhen I leave out a necessary key, e.g. `motor_id` like this, I expected to get a `std::domain_error` or so.\r\nSo I tested this:\r\n\r\n    json j3 = R\"(\r\n         {\r\n              \"duration[ms]\":4129,\r\n              \"motor_stop_reason\":{\r\n                  \"motor_stop_name\":\"User Interupt\",\r\n                  \"motor_stop_id\":5\r\n              },\r\n              \"current\":[\r\n                  468,181,181,188,219,222,223,223,224,222,220,218,218,218,\r\n                  217,214,212,210,209,210,210,208,206,206,206\r\n              ],\r\n              \"position\":[\r\n                  37,37,37,37,36,37,37,37,37,37,36,37,37,\r\n                  37,37,37,37,37,37,37,37,36,37,37,37\r\n              ]\r\n          }\r\n    )\"_json;\r\n\r\n    Lid::MotorReport mr3 = j3;\r\n\r\nBut I get a core dump instead:\r\n\r\n    test_json3: json.hpp:4010: const value_type& nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::operator[](T*) const [with T = const char; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::adl_serializer; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::const_reference = const nlohmann::basic_json<>&; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::value_type = nlohmann::basic_json<>]: Assertion `m_value.object->find(key) != m_value.object->end()' failed.\r\n    Aborted (core dumped)\r\n\r\n--- \r\n\r\nJust to be sure if exception work at all. When trying to access the missing key outside `from_json` I get a nice exception. So this:\r\n\r\n    try{\r\n        int myint = j3[\"motor_id\"];\r\n    }\r\n    catch(...){\r\n        std::clog << boost::current_exception_diagnostic_information() << std::endl;\r\n    }\r\n\r\n\r\nLeads to this:\r\n\r\n    Dynamic exception type: std::domain_error\r\n    std::exception::what: type must be number, but is null\r\n\r\n----\r\n\r\nI tried putting the same `try{  }catch(...){}` into `from_json`, but I still got a core dump and no nice exception I can catch.\r\n\r\nSo after this long text comes the question: What is your canonical way of dealing with missing keys inside `from_json`\r\n\r\nThanks a lot for the awesome work.\r\n\r\n----\r\n\r\nplatform \tUbuntu 16.04 LTS\r\ngcc version 5.3.1 20160413 (Ubuntu 5.3.1-14ubuntu2.1) \r\nUsing the single header `json.hpp v.2.1.1`\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/537", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/537/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/537/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/537/events", "html_url": "https://github.com/nlohmann/json/issues/537", "id": 217461799, "node_id": "MDU6SXNzdWUyMTc0NjE3OTk=", "number": 537, "title": "recursive from_msgpack implementation will stack overflow", "user": {"login": "xgzeng", "id": 230203, "node_id": "MDQ6VXNlcjIzMDIwMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/230203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xgzeng", "html_url": "https://github.com/xgzeng", "followers_url": "https://api.github.com/users/xgzeng/followers", "following_url": "https://api.github.com/users/xgzeng/following{/other_user}", "gists_url": "https://api.github.com/users/xgzeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/xgzeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xgzeng/subscriptions", "organizations_url": "https://api.github.com/users/xgzeng/orgs", "repos_url": "https://api.github.com/users/xgzeng/repos", "events_url": "https://api.github.com/users/xgzeng/events{/privacy}", "received_events_url": "https://api.github.com/users/xgzeng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 571470316, "node_id": "MDU6TGFiZWw1NzE0NzAzMTY=", "url": "https://api.github.com/repos/nlohmann/json/labels/aspect:%20binary%20formats", "name": "aspect: binary formats", "color": "5319e7", "default": false}, {"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-28T06:38:46Z", "updated_at": "2017-03-28T21:59:34Z", "closed_at": "2017-03-28T21:46:19Z", "author_association": "NONE", "body": "`from_msgpack` function(etc) parses data recursively, which will cause stack overflow when process deep nested structure. \r\nIt will be DOS vulnerabilities, if we use library to process data from outside.\r\n\r\nFollowing is example code to generate malicious data. `msgpack_pack_array` is not shown here.\r\n```cpp\r\nfor (int i = 0; i < 10000; ++i) {\r\n    msgpack_pack_array(buffer, 1);\r\n}\r\nmsgpack_pack_array(buffer, 0);\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/536", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/536/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/536/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/536/events", "html_url": "https://github.com/nlohmann/json/pull/536", "id": 216970067, "node_id": "MDExOlB1bGxSZXF1ZXN0MTEyNTg0Mjk2", "number": 536, "title": "Add Visual Studio 17 image to appveyor build matrix", "user": {"login": "vpetrigo", "id": 5689770, "node_id": "MDQ6VXNlcjU2ODk3NzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5689770?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vpetrigo", "html_url": "https://github.com/vpetrigo", "followers_url": "https://api.github.com/users/vpetrigo/followers", "following_url": "https://api.github.com/users/vpetrigo/following{/other_user}", "gists_url": "https://api.github.com/users/vpetrigo/gists{/gist_id}", "starred_url": "https://api.github.com/users/vpetrigo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vpetrigo/subscriptions", "organizations_url": "https://api.github.com/users/vpetrigo/orgs", "repos_url": "https://api.github.com/users/vpetrigo/repos", "events_url": "https://api.github.com/users/vpetrigo/events{/privacy}", "received_events_url": "https://api.github.com/users/vpetrigo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 1, "created_at": "2017-03-25T12:09:48Z", "updated_at": "2017-03-25T13:12:31Z", "closed_at": "2017-03-25T13:12:31Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/536", "html_url": "https://github.com/nlohmann/json/pull/536", "diff_url": "https://github.com/nlohmann/json/pull/536.diff", "patch_url": "https://github.com/nlohmann/json/pull/536.patch"}, "body": "I would like to propose a small addition to the current `appveyor.yml` file that adds Visual Studio 17 image to the build matrix. So, now it is possible to track a build status with brand new MS's Studio."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/535", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/535/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/535/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/535/events", "html_url": "https://github.com/nlohmann/json/pull/535", "id": 216963280, "node_id": "MDExOlB1bGxSZXF1ZXN0MTEyNTgwNzI0", "number": 535, "title": "GCC Requirement >= 4.8.5", "user": {"login": "perara", "id": 3774846, "node_id": "MDQ6VXNlcjM3NzQ4NDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3774846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/perara", "html_url": "https://github.com/perara", "followers_url": "https://api.github.com/users/perara/followers", "following_url": "https://api.github.com/users/perara/following{/other_user}", "gists_url": "https://api.github.com/users/perara/gists{/gist_id}", "starred_url": "https://api.github.com/users/perara/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/perara/subscriptions", "organizations_url": "https://api.github.com/users/perara/orgs", "repos_url": "https://api.github.com/users/perara/repos", "events_url": "https://api.github.com/users/perara/events{/privacy}", "received_events_url": "https://api.github.com/users/perara/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-03-25T09:47:30Z", "updated_at": "2017-03-25T22:38:48Z", "closed_at": "2017-03-25T22:07:07Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/535", "html_url": "https://github.com/nlohmann/json/pull/535", "diff_url": "https://github.com/nlohmann/json/pull/535.diff", "patch_url": "https://github.com/nlohmann/json/pull/535.patch"}, "body": "Tested on Centos 7 (4.8.5 is default gcc version)\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/534", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/534/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/534/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/534/events", "html_url": "https://github.com/nlohmann/json/pull/534", "id": 216793432, "node_id": "MDExOlB1bGxSZXF1ZXN0MTEyNDYxNjI1", "number": 534, "title": "UTF8 encoding enhancement", "user": {"login": "TedLyngmo", "id": 2361158, "node_id": "MDQ6VXNlcjIzNjExNTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2361158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TedLyngmo", "html_url": "https://github.com/TedLyngmo", "followers_url": "https://api.github.com/users/TedLyngmo/followers", "following_url": "https://api.github.com/users/TedLyngmo/following{/other_user}", "gists_url": "https://api.github.com/users/TedLyngmo/gists{/gist_id}", "starred_url": "https://api.github.com/users/TedLyngmo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TedLyngmo/subscriptions", "organizations_url": "https://api.github.com/users/TedLyngmo/orgs", "repos_url": "https://api.github.com/users/TedLyngmo/repos", "events_url": "https://api.github.com/users/TedLyngmo/events{/privacy}", "received_events_url": "https://api.github.com/users/TedLyngmo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 2, "created_at": "2017-03-24T13:58:15Z", "updated_at": "2017-03-24T21:07:28Z", "closed_at": "2017-03-24T18:38:30Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/534", "html_url": "https://github.com/nlohmann/json/pull/534", "diff_url": "https://github.com/nlohmann/json/pull/534.diff", "patch_url": "https://github.com/nlohmann/json/pull/534.patch"}, "body": "Remove the bitmask from the first utf8 octet for codepoints > 0x7f. The range check and bit shift already makes sure that the result is ok.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/533", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/533/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/533/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/533/events", "html_url": "https://github.com/nlohmann/json/pull/533", "id": 216770171, "node_id": "MDExOlB1bGxSZXF1ZXN0MTEyNDQ1MDYy", "number": 533, "title": "UTF8 bitmask enhancement", "user": {"login": "TedLyngmo", "id": 2361158, "node_id": "MDQ6VXNlcjIzNjExNTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2361158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TedLyngmo", "html_url": "https://github.com/TedLyngmo", "followers_url": "https://api.github.com/users/TedLyngmo/followers", "following_url": "https://api.github.com/users/TedLyngmo/following{/other_user}", "gists_url": "https://api.github.com/users/TedLyngmo/gists{/gist_id}", "starred_url": "https://api.github.com/users/TedLyngmo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TedLyngmo/subscriptions", "organizations_url": "https://api.github.com/users/TedLyngmo/orgs", "repos_url": "https://api.github.com/users/TedLyngmo/repos", "events_url": "https://api.github.com/users/TedLyngmo/events{/privacy}", "received_events_url": "https://api.github.com/users/TedLyngmo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-24T12:23:39Z", "updated_at": "2017-03-24T13:47:52Z", "closed_at": "2017-03-24T13:45:38Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/533", "html_url": "https://github.com/nlohmann/json/pull/533", "diff_url": "https://github.com/nlohmann/json/pull/533.diff", "patch_url": "https://github.com/nlohmann/json/pull/533.patch"}, "body": "Remove the bitmask from the first utf8 octet for codepoints > 0x7f. The range check and bit shift already makes sure that the result is ok."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/532", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/532/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/532/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/532/events", "html_url": "https://github.com/nlohmann/json/pull/532", "id": 216568906, "node_id": "MDExOlB1bGxSZXF1ZXN0MTEyMzM1NTI5", "number": 532, "title": "Remove three unnecessary bitmasks", "user": {"login": "TedLyngmo", "id": 2361158, "node_id": "MDQ6VXNlcjIzNjExNTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2361158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TedLyngmo", "html_url": "https://github.com/TedLyngmo", "followers_url": "https://api.github.com/users/TedLyngmo/followers", "following_url": "https://api.github.com/users/TedLyngmo/following{/other_user}", "gists_url": "https://api.github.com/users/TedLyngmo/gists{/gist_id}", "starred_url": "https://api.github.com/users/TedLyngmo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TedLyngmo/subscriptions", "organizations_url": "https://api.github.com/users/TedLyngmo/orgs", "repos_url": "https://api.github.com/users/TedLyngmo/repos", "events_url": "https://api.github.com/users/TedLyngmo/events{/privacy}", "received_events_url": "https://api.github.com/users/TedLyngmo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-03-23T20:51:13Z", "updated_at": "2017-03-24T13:47:50Z", "closed_at": "2017-03-24T12:13:17Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/532", "html_url": "https://github.com/nlohmann/json/pull/532", "diff_url": "https://github.com/nlohmann/json/pull/532.diff", "patch_url": "https://github.com/nlohmann/json/pull/532.patch"}, "body": "Remove the bitmask from the first utf8 octet for codepoints > 0x7f. The range check and bit shift already makes sure that the result is ok."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/531", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/531/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/531/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/531/events", "html_url": "https://github.com/nlohmann/json/issues/531", "id": 216504916, "node_id": "MDU6SXNzdWUyMTY1MDQ5MTY=", "number": 531, "title": "Exception objects must be nothrow copy constructible (ERR60-CPP)", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 4, "created_at": "2017-03-23T17:12:26Z", "updated_at": "2017-04-07T19:29:55Z", "closed_at": "2017-03-26T10:54:58Z", "author_association": "OWNER", "body": "The SEI CERT C++ Coding Standard states in ERR60-CPP:\r\n\r\n> If the copy constructor for the exception object type throws during the copy initialization, std::terminate() is called, which can result in undefined behavior.\r\n\r\nThe user-defined exceptions all base on `detail::exception` which has a `std::string` member. The exceptions have to be refactored to satisfy `std::is_nothrow_copy_constructible`."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/530", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/530/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/530/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/530/events", "html_url": "https://github.com/nlohmann/json/pull/530", "id": 216416993, "node_id": "MDExOlB1bGxSZXF1ZXN0MTEyMjMwMjg3", "number": 530, "title": "Fix typo", "user": {"login": "berkus", "id": 80306, "node_id": "MDQ6VXNlcjgwMzA2", "avatar_url": "https://avatars3.githubusercontent.com/u/80306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berkus", "html_url": "https://github.com/berkus", "followers_url": "https://api.github.com/users/berkus/followers", "following_url": "https://api.github.com/users/berkus/following{/other_user}", "gists_url": "https://api.github.com/users/berkus/gists{/gist_id}", "starred_url": "https://api.github.com/users/berkus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berkus/subscriptions", "organizations_url": "https://api.github.com/users/berkus/orgs", "repos_url": "https://api.github.com/users/berkus/repos", "events_url": "https://api.github.com/users/berkus/events{/privacy}", "received_events_url": "https://api.github.com/users/berkus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 1, "created_at": "2017-03-23T12:51:23Z", "updated_at": "2017-03-23T16:59:42Z", "closed_at": "2017-03-23T12:57:55Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/530", "html_url": "https://github.com/nlohmann/json/pull/530", "diff_url": "https://github.com/nlohmann/json/pull/530.diff", "patch_url": "https://github.com/nlohmann/json/pull/530.patch"}, "body": ""}, {"url": "https://api.github.com/repos/nlohmann/json/issues/529", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/529/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/529/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/529/events", "html_url": "https://github.com/nlohmann/json/issues/529", "id": 216407939, "node_id": "MDU6SXNzdWUyMTY0MDc5Mzk=", "number": 529, "title": "Support for multiple root elements", "user": {"login": "alexculea", "id": 16594531, "node_id": "MDQ6VXNlcjE2NTk0NTMx", "avatar_url": "https://avatars0.githubusercontent.com/u/16594531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexculea", "html_url": "https://github.com/alexculea", "followers_url": "https://api.github.com/users/alexculea/followers", "following_url": "https://api.github.com/users/alexculea/following{/other_user}", "gists_url": "https://api.github.com/users/alexculea/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexculea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexculea/subscriptions", "organizations_url": "https://api.github.com/users/alexculea/orgs", "repos_url": "https://api.github.com/users/alexculea/repos", "events_url": "https://api.github.com/users/alexculea/events{/privacy}", "received_events_url": "https://api.github.com/users/alexculea/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-03-23T12:14:12Z", "updated_at": "2017-05-21T13:07:16Z", "closed_at": "2017-03-28T23:05:31Z", "author_association": "NONE", "body": "I've been using the library for a very short time, so please excuse me if I'm coming out of the context of previous discussions (or might've missed some important aspect).\r\n\r\nTaking note of the contribution guidelines in regards to the JSON standard conformation, this is a proposition to start discussing if supporting multiple root elements could be considered for this great project.\r\n\r\n### The problem:\r\nThe constraint of having a single root element per document adds the necessity for JSON-generator programs to consider previously generated data when adding new entries. Consider the following scenario: a program takes performance samples every n-secs and dumps them to the filesystem. To provide valid JSON output, the program has look at the previously generated data, adding commas, re-align '}'s or ']'s and so forth. Imagine how this scales when a short time, say 1 second, is used to store the dumps on a relatively busy system. Not good. The alternative: generate a file per sample but that doesn't scale either.\r\n\r\n### What do the standards say?\r\n[rfc4627](https://tools.ietf.org/html/rfc4627), says that \"A JSON text is a serialized object or array.\" (paragraph 2) which enforces the current implementations to look at everything being enclosed in root object {} or array [].\r\n\r\n### How about the real world?\r\nAlthough, the same rfc4627 says that generators MUST conform to the grammar (see chapter 5 Generators) I've seen implementations that do not respect this, understandably IMHO because of the trouble of parsing back the old data. Two examples I can think of right now are: GlusterFS 3.8 (diagnostics.stats-dump-interval) and WinstonJS.\r\n\r\n### What could be done?\r\nI think some sort of flag could be implemented in the library to allow multiple root elements, thus solving the said dilemma.  I'm not sure of the implementation details at the this time but would appreciate the contributors feedback on the matter.\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/528", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/528/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/528/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/528/events", "html_url": "https://github.com/nlohmann/json/issues/528", "id": 215817747, "node_id": "MDU6SXNzdWUyMTU4MTc3NDc=", "number": 528, "title": "Port has_shape from dropbox/json11", "user": {"login": "berkus", "id": 80306, "node_id": "MDQ6VXNlcjgwMzA2", "avatar_url": "https://avatars3.githubusercontent.com/u/80306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berkus", "html_url": "https://github.com/berkus", "followers_url": "https://api.github.com/users/berkus/followers", "following_url": "https://api.github.com/users/berkus/following{/other_user}", "gists_url": "https://api.github.com/users/berkus/gists{/gist_id}", "starred_url": "https://api.github.com/users/berkus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berkus/subscriptions", "organizations_url": "https://api.github.com/users/berkus/orgs", "repos_url": "https://api.github.com/users/berkus/repos", "events_url": "https://api.github.com/users/berkus/events{/privacy}", "received_events_url": "https://api.github.com/users/berkus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-03-21T17:25:27Z", "updated_at": "2017-04-09T14:49:30Z", "closed_at": "2017-04-09T14:49:26Z", "author_association": "CONTRIBUTOR", "body": "It has a very nice utility function, which I ported to nlohmann/json for myself, but would be nice to have it as part of the class:\r\n\r\n```cpp\r\n#pragma once\r\n\r\n#include <json.hpp>\r\n\r\n/* has_shape(json, types)\r\n *\r\n * Return true if this is a JSON object and, for each item in types, has a field of\r\n * the given type. If not, return false and set err to a descriptive message.\r\n *                                        ^^^ feel free to adjust the return to your error model, but this one is handy\r\n */\r\nusing shape_t = std::initializer_list<std::pair<std::string, nlohmann::json::value_t>>;\r\n\r\nbool has_shape(nlohmann::json const& js, shape_t const& shape, std::string& err)\r\n{\r\n    if (!js.is_object()) {\r\n        err = \"expected JSON object, got \" + js.dump();\r\n        return false;\r\n    }\r\n\r\n    for (auto & item : shape) {\r\n        if (js[item.first].type() != item.second) {\r\n            err = \"bad type for \" + item.first + \" in \" + js.dump();\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n```"}]