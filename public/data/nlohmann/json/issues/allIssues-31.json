[{"url": "https://api.github.com/repos/nlohmann/json/issues/287", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/287/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/287/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/287/events", "html_url": "https://github.com/nlohmann/json/issues/287", "id": 168920168, "node_id": "MDU6SXNzdWUxNjg5MjAxNjg=", "number": 287, "title": "Incorrect parsing of large int64_t numbers", "user": {"login": "mariobadr", "id": 5625409, "node_id": "MDQ6VXNlcjU2MjU0MDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5625409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mariobadr", "html_url": "https://github.com/mariobadr", "followers_url": "https://api.github.com/users/mariobadr/followers", "following_url": "https://api.github.com/users/mariobadr/following{/other_user}", "gists_url": "https://api.github.com/users/mariobadr/gists{/gist_id}", "starred_url": "https://api.github.com/users/mariobadr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mariobadr/subscriptions", "organizations_url": "https://api.github.com/users/mariobadr/orgs", "repos_url": "https://api.github.com/users/mariobadr/repos", "events_url": "https://api.github.com/users/mariobadr/events{/privacy}", "received_events_url": "https://api.github.com/users/mariobadr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-02T15:47:00Z", "updated_at": "2016-08-02T19:17:23Z", "closed_at": "2016-08-02T15:56:34Z", "author_association": "NONE", "body": "Hello,\n\nI use dynamic instrumentation to gather information about a program, and then output it using your json library to a file. When I parse the file into a different application using your library, I get different values. Below is a minimal example:\n\n**_main.cpp_**\n\n```\n#include <fstream>\n#include <iostream>\n\n#include \"json.hpp\"\n\nint main(int argc, char** argv) {\n  using json = nlohmann::json;\n\n  if(argc != 2) {\n    return 0;\n  }\n\n  std::ifstream stream(argv[1]);\n  json j;\n  stream >> j;\n\n  std::cout << j[\"id\"] << \"\\n\";\n\n  return 0;\n}\n```\n\n**_test.json_**\n`\n{\n  \"call\": \"pthread_mutex_lock\",\n  \"id\": 8492065431569638403,\n  \"object\": 139898772169632\n}\n`\n\n_**Output**_\n`8492065431569638400`\n\nThe documentation states that numbers are stored in int64_t, and that the maximum value allowed is 9223372036854775807. The above value is less than that number, so I'm not sure what the problem is. Thanks.\n\nEdit: I am using version 1.1.0\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/286", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/286/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/286/events", "html_url": "https://github.com/nlohmann/json/issues/286", "id": 167311770, "node_id": "MDU6SXNzdWUxNjczMTE3NzA=", "number": 286, "title": "can function dump()  return string in the order I push in the json object ?", "user": {"login": "zyinter2008", "id": 19711705, "node_id": "MDQ6VXNlcjE5NzExNzA1", "avatar_url": "https://avatars0.githubusercontent.com/u/19711705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zyinter2008", "html_url": "https://github.com/zyinter2008", "followers_url": "https://api.github.com/users/zyinter2008/followers", "following_url": "https://api.github.com/users/zyinter2008/following{/other_user}", "gists_url": "https://api.github.com/users/zyinter2008/gists{/gist_id}", "starred_url": "https://api.github.com/users/zyinter2008/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zyinter2008/subscriptions", "organizations_url": "https://api.github.com/users/zyinter2008/orgs", "repos_url": "https://api.github.com/users/zyinter2008/repos", "events_url": "https://api.github.com/users/zyinter2008/events{/privacy}", "received_events_url": "https://api.github.com/users/zyinter2008/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-07-25T08:32:07Z", "updated_at": "2018-01-15T09:52:41Z", "closed_at": "2016-07-25T11:43:51Z", "author_association": "NONE", "body": "the program like this:\n    json obj = { {\"result\", \"OK\"}, {\"model\", \"AAA\" } };\n    string str = obj.dump();\nwhich i want get { {\"result\", \"OK\"}, {\"model\", \"AAA\" } }, but it always return {  {\"model\", \"AAA\" }, {\"result\", \"OK\"} }\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/285", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/285/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/285/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/285/events", "html_url": "https://github.com/nlohmann/json/issues/285", "id": 167257816, "node_id": "MDU6SXNzdWUxNjcyNTc4MTY=", "number": 285, "title": "Error on the Mac: Undefined symbols for architecture x86_64", "user": {"login": "a-x-", "id": 6201068, "node_id": "MDQ6VXNlcjYyMDEwNjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/6201068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a-x-", "html_url": "https://github.com/a-x-", "followers_url": "https://api.github.com/users/a-x-/followers", "following_url": "https://api.github.com/users/a-x-/following{/other_user}", "gists_url": "https://api.github.com/users/a-x-/gists{/gist_id}", "starred_url": "https://api.github.com/users/a-x-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a-x-/subscriptions", "organizations_url": "https://api.github.com/users/a-x-/orgs", "repos_url": "https://api.github.com/users/a-x-/repos", "events_url": "https://api.github.com/users/a-x-/events{/privacy}", "received_events_url": "https://api.github.com/users/a-x-/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-07-24T22:23:00Z", "updated_at": "2017-11-30T05:58:07Z", "closed_at": "2016-07-25T11:43:36Z", "author_association": "NONE", "body": "I installed json with brew (brew tap nlohmann/json && brew install nlohmann_json).\nthen i wrote hello world:\n\n``` cpp\n#include \"json.hpp\"\nusing json = nlohmann::json;\n    // create object from string literal\n    auto j3 = json::parse(\"{ \\\"happy\\\": true, \\\"pi\\\": 3.141 }\");\n```\n\nfinnaly i ran clang: `clang -std=c++11 -O3 compare-vectors.cpp -o compare-vectors`\n\n```\nUndefined symbols for architecture x86_64:\n  \"std::__1::__vector_base_common<true>::__throw_length_error() const\", referenced from:\n      void std::__1::vector<nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long long, unsigned long long, double, std::__1::allocator>, std::__1::allocator<nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long long, unsigned long long, double, std::__1::allocator> > >::__push_back_slow_path<nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long long, unsigned long long, double, std::__1::allocator> >(nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long long, unsigned long long, double, std::__1::allocator>&&) in compare-vectors-480e6b.o\n...\n      ...\nld: symbol(s) not found for architecture x86_64\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\n```\n\n---\n\nApple LLVM version 7.3.0 (clang-703.0.31)\nTarget: x86_64-apple-darwin15.5.0\nThread model: posix\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/284", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/284/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/284/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/284/events", "html_url": "https://github.com/nlohmann/json/issues/284", "id": 166854094, "node_id": "MDU6SXNzdWUxNjY4NTQwOTQ=", "number": 284, "title": "[question]: macro to disable floating point support", "user": {"login": "rianquinn", "id": 5932003, "node_id": "MDQ6VXNlcjU5MzIwMDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5932003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rianquinn", "html_url": "https://github.com/rianquinn", "followers_url": "https://api.github.com/users/rianquinn/followers", "following_url": "https://api.github.com/users/rianquinn/following{/other_user}", "gists_url": "https://api.github.com/users/rianquinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/rianquinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rianquinn/subscriptions", "organizations_url": "https://api.github.com/users/rianquinn/orgs", "repos_url": "https://api.github.com/users/rianquinn/repos", "events_url": "https://api.github.com/users/rianquinn/events{/privacy}", "received_events_url": "https://api.github.com/users/rianquinn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-07-21T15:50:33Z", "updated_at": "2016-11-13T22:37:59Z", "closed_at": "2016-08-10T21:09:11Z", "author_association": "NONE", "body": "We are interested in using JSON in our [Bareflank](https://github.com/Bareflank/hypervisor) Hypervisor for both comms and configuration files, and would love to use this implementation. Kernel / Hypervisor code however should not use double / float as these data types can generate exceptions that cannot be handled well inside the kernel. \n\nIt appears that you already support signed / unsigned integers. Would you be interested in a patch that disables (likely via a macro of some sort) double / float completely to support people interested in using this library in non-userspace code?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/283", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/283/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/283/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/283/events", "html_url": "https://github.com/nlohmann/json/issues/283", "id": 166710747, "node_id": "MDU6SXNzdWUxNjY3MTA3NDc=", "number": 283, "title": "value() does not work with _json_pointer types", "user": {"login": "clwill", "id": 1330725, "node_id": "MDQ6VXNlcjEzMzA3MjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1330725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clwill", "html_url": "https://github.com/clwill", "followers_url": "https://api.github.com/users/clwill/followers", "following_url": "https://api.github.com/users/clwill/following{/other_user}", "gists_url": "https://api.github.com/users/clwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/clwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clwill/subscriptions", "organizations_url": "https://api.github.com/users/clwill/orgs", "repos_url": "https://api.github.com/users/clwill/repos", "events_url": "https://api.github.com/users/clwill/events{/privacy}", "received_events_url": "https://api.github.com/users/clwill/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/7", "html_url": "https://github.com/nlohmann/json/milestone/7", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/7/labels", "id": 1853616, "node_id": "MDk6TWlsZXN0b25lMTg1MzYxNg==", "number": 7, "title": "Release 2.0.2", "description": "The next release if backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2016-06-28T20:19:10Z", "updated_at": "2016-07-31T11:41:43Z", "due_on": "2016-07-30T07:00:00Z", "closed_at": "2016-07-31T11:41:43Z"}, "comments": 4, "created_at": "2016-07-21T00:13:45Z", "updated_at": "2016-11-13T22:37:59Z", "closed_at": "2016-07-24T09:18:19Z", "author_association": "NONE", "body": "It would be great if value(), which supports default values, worked like at() which can handle _json_pointer types.\n\nThis would allow the handling of nested objects, and still be robust to missing elements.\n\nTo wit:\n\n``` cpp\n#include <json.hpp>\n\nusing json = nlohmann::json;\n\nint main()\n{\n    json j =\n    {\n        {\"object\", {{\"key1\", 1}, {\"key2\", 2}}},\n    };\n\n    int at_integer = j.at(\"/object/key2\"_json_pointer);\n    int val_integer = j.value(\"/object/key2\"_json_pointer, 0);\n\n    std::cout << std::boolalpha << at_integer << \" \" << val_integer\n              << \" \" << (at_integer == val_integer) << \"\\n\";\n}\n```\n\nThis code produces the output:\n\n```\n2 0 false\n```\n\nWould be nice if it was `2 2 true`.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/282", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/282/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/282/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/282/events", "html_url": "https://github.com/nlohmann/json/issues/282", "id": 165781733, "node_id": "MDU6SXNzdWUxNjU3ODE3MzM=", "number": 282, "title": "Build error for std::int64", "user": {"login": "felipezacani", "id": 6606367, "node_id": "MDQ6VXNlcjY2MDYzNjc=", "avatar_url": "https://avatars0.githubusercontent.com/u/6606367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felipezacani", "html_url": "https://github.com/felipezacani", "followers_url": "https://api.github.com/users/felipezacani/followers", "following_url": "https://api.github.com/users/felipezacani/following{/other_user}", "gists_url": "https://api.github.com/users/felipezacani/gists{/gist_id}", "starred_url": "https://api.github.com/users/felipezacani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felipezacani/subscriptions", "organizations_url": "https://api.github.com/users/felipezacani/orgs", "repos_url": "https://api.github.com/users/felipezacani/repos", "events_url": "https://api.github.com/users/felipezacani/events{/privacy}", "received_events_url": "https://api.github.com/users/felipezacani/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/7", "html_url": "https://github.com/nlohmann/json/milestone/7", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/7/labels", "id": 1853616, "node_id": "MDk6TWlsZXN0b25lMTg1MzYxNg==", "number": 7, "title": "Release 2.0.2", "description": "The next release if backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2016-06-28T20:19:10Z", "updated_at": "2016-07-31T11:41:43Z", "due_on": "2016-07-30T07:00:00Z", "closed_at": "2016-07-31T11:41:43Z"}, "comments": 3, "created_at": "2016-07-15T13:01:22Z", "updated_at": "2016-07-15T17:50:00Z", "closed_at": "2016-07-15T17:44:24Z", "author_association": "NONE", "body": "When building on Windows with clang, clang defaults to Visual Studio (Windows SDK) headers. There is no int64 defined inside the std namespace. \n\nAs specified in http://en.cppreference.com/w/cpp/types/integer, those int64 types (lines 209 and 210) are not defined in std, but open in cstdint.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/281", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/281/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/281/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/281/events", "html_url": "https://github.com/nlohmann/json/issues/281", "id": 165275683, "node_id": "MDU6SXNzdWUxNjUyNzU2ODM=", "number": 281, "title": "strings can't be accessed after dump()->parse() - type is lost", "user": {"login": "guygman", "id": 20042886, "node_id": "MDQ6VXNlcjIwMDQyODg2", "avatar_url": "https://avatars0.githubusercontent.com/u/20042886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guygman", "html_url": "https://github.com/guygman", "followers_url": "https://api.github.com/users/guygman/followers", "following_url": "https://api.github.com/users/guygman/following{/other_user}", "gists_url": "https://api.github.com/users/guygman/gists{/gist_id}", "starred_url": "https://api.github.com/users/guygman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guygman/subscriptions", "organizations_url": "https://api.github.com/users/guygman/orgs", "repos_url": "https://api.github.com/users/guygman/repos", "events_url": "https://api.github.com/users/guygman/events{/privacy}", "received_events_url": "https://api.github.com/users/guygman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-13T09:23:34Z", "updated_at": "2016-07-13T16:51:50Z", "closed_at": "2016-07-13T16:51:50Z", "author_association": "NONE", "body": "Hi,\n\nstrangely, this code doesn't work and I can't find out what I'm doing wrong.... \n\nnlohmann::json out;\nout[accessTokenField] = (const string&)accessToken;   // key and value std::strings\nstd::string tmp1 = out[accessTokenField]; // this works\nstd::string dump = out.dump(); // 'dump' is - {\"accessToken\": \"b9c6f71f-0a10-4025-9628\"}\nnlohmann::json in;\nin.parse(dump);\nstd::string tmp2 = in[accessTokenField]; // this fails!! error message- \"type must be string, but is null\"\n\nupdate: using the static json::parse method works fine-\n.\n.\nnlohmann::json in;\nin = nlohmann::json::parse(dump);\nstd::string tmp2 = in[accessTokenField];\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/280", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/280/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/280/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/280/events", "html_url": "https://github.com/nlohmann/json/issues/280", "id": 165081058, "node_id": "MDU6SXNzdWUxNjUwODEwNTg=", "number": 280, "title": "Easy serialization of classes", "user": {"login": "jonasseglare", "id": 5850088, "node_id": "MDQ6VXNlcjU4NTAwODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/5850088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonasseglare", "html_url": "https://github.com/jonasseglare", "followers_url": "https://api.github.com/users/jonasseglare/followers", "following_url": "https://api.github.com/users/jonasseglare/following{/other_user}", "gists_url": "https://api.github.com/users/jonasseglare/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonasseglare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonasseglare/subscriptions", "organizations_url": "https://api.github.com/users/jonasseglare/orgs", "repos_url": "https://api.github.com/users/jonasseglare/repos", "events_url": "https://api.github.com/users/jonasseglare/events{/privacy}", "received_events_url": "https://api.github.com/users/jonasseglare/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-12T13:31:30Z", "updated_at": "2017-01-27T05:25:24Z", "closed_at": "2016-07-20T19:12:05Z", "author_association": "NONE", "body": "I am currently using msgpack to serialize my objects in C++, but the msgpack is not human readable, so I am looking at using JSON. The msgpack-c++ library has a very neat macro called `MSGPACK_DEFINE` which, in one line, adds msgpack serialization to a class, so that it can be serialized/deserialized to the msgpack format. See example here: https://github.com/msgpack/msgpack-c/wiki/v1_1_cpp_adaptor#intrusive-approach\n\n``` C++\n#include <msgpack.hpp>\n\nstruct your_class {\n    int a;\n    std::string b;\n    MSGPACK_DEFINE(a, b);\n};\n```\n\nDoes this JSON library feature a similar functionality? It would be very useful.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/279", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/279/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/279/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/279/events", "html_url": "https://github.com/nlohmann/json/pull/279", "id": 164678337, "node_id": "MDExOlB1bGxSZXF1ZXN0NzY4NTMxNDI=", "number": 279, "title": "let the makefile choose the correct sed", "user": {"login": "murinicanor", "id": 6024601, "node_id": "MDQ6VXNlcjYwMjQ2MDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/6024601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/murinicanor", "html_url": "https://github.com/murinicanor", "followers_url": "https://api.github.com/users/murinicanor/followers", "following_url": "https://api.github.com/users/murinicanor/following{/other_user}", "gists_url": "https://api.github.com/users/murinicanor/gists{/gist_id}", "starred_url": "https://api.github.com/users/murinicanor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/murinicanor/subscriptions", "organizations_url": "https://api.github.com/users/murinicanor/orgs", "repos_url": "https://api.github.com/users/murinicanor/repos", "events_url": "https://api.github.com/users/murinicanor/events{/privacy}", "received_events_url": "https://api.github.com/users/murinicanor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/7", "html_url": "https://github.com/nlohmann/json/milestone/7", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/7/labels", "id": 1853616, "node_id": "MDk6TWlsZXN0b25lMTg1MzYxNg==", "number": 7, "title": "Release 2.0.2", "description": "The next release if backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2016-06-28T20:19:10Z", "updated_at": "2016-07-31T11:41:43Z", "due_on": "2016-07-30T07:00:00Z", "closed_at": "2016-07-31T11:41:43Z"}, "comments": 6, "created_at": "2016-07-09T18:05:19Z", "updated_at": "2016-07-18T14:22:28Z", "closed_at": "2016-07-09T22:32:32Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/279", "html_url": "https://github.com/nlohmann/json/pull/279", "diff_url": "https://github.com/nlohmann/json/pull/279.diff", "patch_url": "https://github.com/nlohmann/json/pull/279.patch"}, "body": "there is no gsed on some systems (i.e. on debian, where i'm building the documentation), so let the makefile choose the correct sed variant\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/278", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/278/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/278/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/278/events", "html_url": "https://github.com/nlohmann/json/issues/278", "id": 164054159, "node_id": "MDU6SXNzdWUxNjQwNTQxNTk=", "number": 278, "title": "Do not throw exception when default_value's type does not match the actual type", "user": {"login": "cezheng", "id": 2549967, "node_id": "MDQ6VXNlcjI1NDk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2549967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cezheng", "html_url": "https://github.com/cezheng", "followers_url": "https://api.github.com/users/cezheng/followers", "following_url": "https://api.github.com/users/cezheng/following{/other_user}", "gists_url": "https://api.github.com/users/cezheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/cezheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cezheng/subscriptions", "organizations_url": "https://api.github.com/users/cezheng/orgs", "repos_url": "https://api.github.com/users/cezheng/repos", "events_url": "https://api.github.com/users/cezheng/events{/privacy}", "received_events_url": "https://api.github.com/users/cezheng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 304694104, "node_id": "MDU6TGFiZWwzMDQ2OTQxMDQ=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20please%20discuss", "name": "state: please discuss", "color": "fbca04", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/5", "html_url": "https://github.com/nlohmann/json/milestone/5", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/5/labels", "id": 1836708, "node_id": "MDk6TWlsZXN0b25lMTgzNjcwOA==", "number": 5, "title": "Release 3.0.0", "description": "The next release when backwards incompatible changes are introduced to the public API", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 131, "state": "closed", "created_at": "2016-06-19T16:09:34Z", "updated_at": "2017-12-17T10:11:43Z", "due_on": "2017-12-17T08:00:00Z", "closed_at": "2017-12-17T10:11:43Z"}, "comments": 44, "created_at": "2016-07-06T11:23:05Z", "updated_at": "2018-02-08T23:20:34Z", "closed_at": "2017-12-07T14:57:34Z", "author_association": "NONE", "body": "Thanks for this great library. I have been quite happy about almost every aspect of the library, except one point about the `value` method on object.\n\nConsider this sample code.\n\n``` cpp\nint main() {\n  nlohmann::json j = { {\"b\", nullptr}};\n  std::string result = j.value(\"b\", \"1\"); // std::domain_error: type must be string, but is null\n  return 0;\n}\n```\n\nWhen I'm using `value` to specify a default value of a key, I pretty much don't care about whether it exists or not, whether it is a valid value or not. It's pretty much like, if it failed to fetch a value of a specific type, then return the default_value I specified.\n\nSo I'm thinking about changing the following method: \nhttps://github.com/nlohmann/json/blob/develop/src/json.hpp#L3653\n\nto something like this:\n\n``` cpp\n    template <class ValueType, typename\n              std::enable_if<\n                  std::is_convertible<basic_json_t, ValueType>::value\n                  , int>::type = 0>\n    ValueType value(const typename object_t::key_type& key, ValueType default_value) const\n    {\n        // at only works for objects\n        if (is_object())\n        {\n            // if key is found, return value and given default value otherwise\n            const auto it = find(key);\n            if (it != end())\n            {\n                try\n                {\n                    return *it;\n                }\n                catch (...)\n                {\n                    // if some kind of exception occurred, return default value\n                    return default_value;\n                }\n            }\n            else\n            {\n                return default_value;\n            }\n        }\n        else\n        {\n            throw std::domain_error(\"cannot use value() with \" + type_name());\n        }\n    }\n```\n\nWhich I think will make the `value` method a lot easier to use. What do you think? @nlohmann \n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/277", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/277/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/277/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/277/events", "html_url": "https://github.com/nlohmann/json/issues/277", "id": 163745934, "node_id": "MDU6SXNzdWUxNjM3NDU5MzQ=", "number": 277, "title": "recursive data structures", "user": {"login": "froatsnook", "id": 10405574, "node_id": "MDQ6VXNlcjEwNDA1NTc0", "avatar_url": "https://avatars2.githubusercontent.com/u/10405574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froatsnook", "html_url": "https://github.com/froatsnook", "followers_url": "https://api.github.com/users/froatsnook/followers", "following_url": "https://api.github.com/users/froatsnook/following{/other_user}", "gists_url": "https://api.github.com/users/froatsnook/gists{/gist_id}", "starred_url": "https://api.github.com/users/froatsnook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froatsnook/subscriptions", "organizations_url": "https://api.github.com/users/froatsnook/orgs", "repos_url": "https://api.github.com/users/froatsnook/repos", "events_url": "https://api.github.com/users/froatsnook/events{/privacy}", "received_events_url": "https://api.github.com/users/froatsnook/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-07-04T21:51:20Z", "updated_at": "2016-07-06T14:30:50Z", "closed_at": "2016-07-05T04:19:17Z", "author_association": "NONE", "body": "Hi, thanks for the great library :). I had a gotcha when working with a recursive data structure.\n\n``` c++\nusing namespace std;\nusing namespace nlohmann;\nint main() {\n    string text = \"{\\\"A\\\":{\\\"id\\\":1,\\\"children\\\":{\\\"B\\\":{\\\"id\\\":2,\\\"children\\\":{\\\"C\\\":{\\\"id\\\":3,\\\"children\\\":{}}}}}}}\";\n    json data = json::parse(text);\n\n    json& curr = data;\n    curr = curr[\"A\"][\"children\"];\n\n    cout << \"curr=\" << curr.dump() << std::endl; // { B: ... } OK\n    cout << \"data=\" << data.dump() << std::endl; // { B: ... } expected { A: ... }\n}\n```\n\nI was able to work around this using a pointer:\n\n``` c++\n    string text = \"{\\\"A\\\":{\\\"id\\\":1,\\\"children\\\":{\\\"B\\\":{\\\"id\\\":2,\\\"children\\\":{\\\"C\\\":{\\\"id\\\":3,\\\"children\\\":{}}}}}}}\";\n    json data = json::parse(text);\n\n    json* curr = &data;\n    curr = &curr->operator[](\"A\").operator[](\"children\");\n\n    cout << \"curr=\" << curr->dump() << std::endl; // { B: ... } OK\n    cout << \"data=\" << data.dump() << std::endl; // { A: ... } OK\n```\n\nIs there a better way to work with `json` in this way?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/276", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/276/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/276/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/276/events", "html_url": "https://github.com/nlohmann/json/issues/276", "id": 163419027, "node_id": "MDU6SXNzdWUxNjM0MTkwMjc=", "number": 276, "title": "Cannot convert from 'json' to 'char'", "user": {"login": "DPD85", "id": 1238383, "node_id": "MDQ6VXNlcjEyMzgzODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1238383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DPD85", "html_url": "https://github.com/DPD85", "followers_url": "https://api.github.com/users/DPD85/followers", "following_url": "https://api.github.com/users/DPD85/following{/other_user}", "gists_url": "https://api.github.com/users/DPD85/gists{/gist_id}", "starred_url": "https://api.github.com/users/DPD85/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DPD85/subscriptions", "organizations_url": "https://api.github.com/users/DPD85/orgs", "repos_url": "https://api.github.com/users/DPD85/repos", "events_url": "https://api.github.com/users/DPD85/events{/privacy}", "received_events_url": "https://api.github.com/users/DPD85/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}, {"id": 344572510, "node_id": "MDU6TGFiZWwzNDQ1NzI1MTA=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20help%20needed", "name": "state: help needed", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-07-01T15:25:27Z", "updated_at": "2018-04-12T12:49:22Z", "closed_at": "2016-11-02T16:24:28Z", "author_association": "NONE", "body": "I'm not sure if this is an issue,\nbut it's not possible to assign a json object to a variable of type char.\nWith all other integral types it works, only the char type makes error.\n\nExample:\n\n``` cpp\n    json j;\n    j = 'B'; // ok, store a value as type number_integer\n    char b = j; // compiler error: cannot convert from 'json' to 'char'\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/275", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/275/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/275/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/275/events", "html_url": "https://github.com/nlohmann/json/pull/275", "id": 162903238, "node_id": "MDExOlB1bGxSZXF1ZXN0NzU2MzIwNTI=", "number": 275, "title": "Update hexify to use array lookup instead of ternary (#270)", "user": {"login": "dtoma", "id": 1595791, "node_id": "MDQ6VXNlcjE1OTU3OTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1595791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtoma", "html_url": "https://github.com/dtoma", "followers_url": "https://api.github.com/users/dtoma/followers", "following_url": "https://api.github.com/users/dtoma/following{/other_user}", "gists_url": "https://api.github.com/users/dtoma/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtoma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtoma/subscriptions", "organizations_url": "https://api.github.com/users/dtoma/orgs", "repos_url": "https://api.github.com/users/dtoma/repos", "events_url": "https://api.github.com/users/dtoma/events{/privacy}", "received_events_url": "https://api.github.com/users/dtoma/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/7", "html_url": "https://github.com/nlohmann/json/milestone/7", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/7/labels", "id": 1853616, "node_id": "MDk6TWlsZXN0b25lMTg1MzYxNg==", "number": 7, "title": "Release 2.0.2", "description": "The next release if backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2016-06-28T20:19:10Z", "updated_at": "2016-07-31T11:41:43Z", "due_on": "2016-07-30T07:00:00Z", "closed_at": "2016-07-31T11:41:43Z"}, "comments": 3, "created_at": "2016-06-29T11:33:26Z", "updated_at": "2016-07-01T14:51:41Z", "closed_at": "2016-07-01T14:51:35Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/275", "html_url": "https://github.com/nlohmann/json/pull/275", "diff_url": "https://github.com/nlohmann/json/pull/275.diff", "patch_url": "https://github.com/nlohmann/json/pull/275.patch"}, "body": "https://github.com/nlohmann/json/issues/270\n\nEnded up using an array of char rather than std::array, because `std::array::[]` only accepts unsigneds, thus we'd get a conversion warning.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/274", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/274/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/274/events", "html_url": "https://github.com/nlohmann/json/issues/274", "id": 162671818, "node_id": "MDU6SXNzdWUxNjI2NzE4MTg=", "number": 274, "title": "Using QString as string type", "user": {"login": "mlutken", "id": 16965348, "node_id": "MDQ6VXNlcjE2OTY1MzQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/16965348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlutken", "html_url": "https://github.com/mlutken", "followers_url": "https://api.github.com/users/mlutken/followers", "following_url": "https://api.github.com/users/mlutken/following{/other_user}", "gists_url": "https://api.github.com/users/mlutken/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlutken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlutken/subscriptions", "organizations_url": "https://api.github.com/users/mlutken/orgs", "repos_url": "https://api.github.com/users/mlutken/repos", "events_url": "https://api.github.com/users/mlutken/events{/privacy}", "received_events_url": "https://api.github.com/users/mlutken/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 53, "created_at": "2016-06-28T12:17:34Z", "updated_at": "2018-02-19T14:22:08Z", "closed_at": "2016-11-08T20:09:05Z", "author_association": "NONE", "body": "Hi\n\nIt would be very nice if one could do:\nusing json = nlohmann::basic_json < std::map, std::vector, QString >;\n\nAnd have everything work.\nRight now it seems stringstream are used to stringify etc... So it does not quite compile.\n\nOtherwise I am pretty impressed by the way this library works. Having used hson mostly from PHP, where it's very simple, this is clearly the way to go in C++ :)\n\n-Martin\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/273", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/273/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/273/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/273/events", "html_url": "https://github.com/nlohmann/json/issues/273", "id": 162517234, "node_id": "MDU6SXNzdWUxNjI1MTcyMzQ=", "number": 273, "title": "Compilation error.", "user": {"login": "kerolex", "id": 7253675, "node_id": "MDQ6VXNlcjcyNTM2NzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/7253675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kerolex", "html_url": "https://github.com/kerolex", "followers_url": "https://api.github.com/users/kerolex/followers", "following_url": "https://api.github.com/users/kerolex/following{/other_user}", "gists_url": "https://api.github.com/users/kerolex/gists{/gist_id}", "starred_url": "https://api.github.com/users/kerolex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kerolex/subscriptions", "organizations_url": "https://api.github.com/users/kerolex/orgs", "repos_url": "https://api.github.com/users/kerolex/repos", "events_url": "https://api.github.com/users/kerolex/events{/privacy}", "received_events_url": "https://api.github.com/users/kerolex/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-27T18:30:27Z", "updated_at": "2016-06-27T19:51:35Z", "closed_at": "2016-06-27T18:37:33Z", "author_association": "NONE", "body": "Please notice this error during compilation phase:\n\n```\ntest/src/unit.cpp:12033:32: error: unterminated raw string\n             CHECK_NOTHROW(json(R\"(\n                                ^\ntest/src/unit.cpp:12048:14: warning: missing terminating \" character [enabled by default]\n             )\"));\n```\n\nThis error is also repeating on other lines with similar structure.\nPlease can you tell me if it is just a problem of mine?\n\nMy OS is Ubuntu 14.04 LTS and compiler g++ 4.8.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/272", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/272/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/272/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/272/events", "html_url": "https://github.com/nlohmann/json/issues/272", "id": 162470353, "node_id": "MDU6SXNzdWUxNjI0NzAzNTM=", "number": 272, "title": "dump() performance degradation in v2", "user": {"login": "duncanwerner", "id": 3460408, "node_id": "MDQ6VXNlcjM0NjA0MDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/3460408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duncanwerner", "html_url": "https://github.com/duncanwerner", "followers_url": "https://api.github.com/users/duncanwerner/followers", "following_url": "https://api.github.com/users/duncanwerner/following{/other_user}", "gists_url": "https://api.github.com/users/duncanwerner/gists{/gist_id}", "starred_url": "https://api.github.com/users/duncanwerner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duncanwerner/subscriptions", "organizations_url": "https://api.github.com/users/duncanwerner/orgs", "repos_url": "https://api.github.com/users/duncanwerner/repos", "events_url": "https://api.github.com/users/duncanwerner/events{/privacy}", "received_events_url": "https://api.github.com/users/duncanwerner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/6", "html_url": "https://github.com/nlohmann/json/milestone/6", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/6/labels", "id": 1853279, "node_id": "MDk6TWlsZXN0b25lMTg1MzI3OQ==", "number": 6, "title": "Release 2.0.1", "description": "Bugfix release due to #272.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "closed", "created_at": "2016-06-28T17:20:16Z", "updated_at": "2016-06-28T20:18:59Z", "due_on": null, "closed_at": "2016-06-28T20:18:59Z"}, "comments": 11, "created_at": "2016-06-27T14:48:34Z", "updated_at": "2016-09-01T21:33:42Z", "closed_at": "2016-06-28T19:25:42Z", "author_association": "NONE", "body": "(This should maybe go into #202?)\n\nTesting a switch from v1.1 -> v2.0 I found fairly significant performance degradation in `dump()` with a large set of doubles.  Here's a sample implementation:\n\n```\njson data;\nstd::vector< double > vec(5e5);\nsrand(1);\nfor( int i = 0; i< 5e5; i++ ){ vec[i] = rand();}\ndata = vec;\nstd::string str = data.dump();\n```\n\ncompiled with vs2015 on windows.  Using v1.1 the dump call takes ~550ms.  With 2.0 it takes ~25000ms (50x).  I haven't tested on any other platforms (although I can do that if it's helpful).\n\nGranted this is an edge case, but it's a pretty dramatic change.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/271", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/271/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/271/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/271/events", "html_url": "https://github.com/nlohmann/json/pull/271", "id": 162102562, "node_id": "MDExOlB1bGxSZXF1ZXN0NzUwODIzMjA=", "number": 271, "title": "fixed a tiny typo", "user": {"login": "feroldi", "id": 8634526, "node_id": "MDQ6VXNlcjg2MzQ1MjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8634526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/feroldi", "html_url": "https://github.com/feroldi", "followers_url": "https://api.github.com/users/feroldi/followers", "following_url": "https://api.github.com/users/feroldi/following{/other_user}", "gists_url": "https://api.github.com/users/feroldi/gists{/gist_id}", "starred_url": "https://api.github.com/users/feroldi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/feroldi/subscriptions", "organizations_url": "https://api.github.com/users/feroldi/orgs", "repos_url": "https://api.github.com/users/feroldi/repos", "events_url": "https://api.github.com/users/feroldi/events{/privacy}", "received_events_url": "https://api.github.com/users/feroldi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-24T08:47:11Z", "updated_at": "2016-06-24T09:28:08Z", "closed_at": "2016-06-24T09:28:01Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/271", "html_url": "https://github.com/nlohmann/json/pull/271", "diff_url": "https://github.com/nlohmann/json/pull/271.diff", "patch_url": "https://github.com/nlohmann/json/pull/271.patch"}, "body": ""}, {"url": "https://api.github.com/repos/nlohmann/json/issues/270", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/270/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/270/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/270/events", "html_url": "https://github.com/nlohmann/json/issues/270", "id": 162091282, "node_id": "MDU6SXNzdWUxNjIwOTEyODI=", "number": 270, "title": "hexify() function emits conversion warning", "user": {"login": "dtoma", "id": 1595791, "node_id": "MDQ6VXNlcjE1OTU3OTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1595791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtoma", "html_url": "https://github.com/dtoma", "followers_url": "https://api.github.com/users/dtoma/followers", "following_url": "https://api.github.com/users/dtoma/following{/other_user}", "gists_url": "https://api.github.com/users/dtoma/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtoma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtoma/subscriptions", "organizations_url": "https://api.github.com/users/dtoma/orgs", "repos_url": "https://api.github.com/users/dtoma/repos", "events_url": "https://api.github.com/users/dtoma/events{/privacy}", "received_events_url": "https://api.github.com/users/dtoma/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/7", "html_url": "https://github.com/nlohmann/json/milestone/7", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/7/labels", "id": 1853616, "node_id": "MDk6TWlsZXN0b25lMTg1MzYxNg==", "number": 7, "title": "Release 2.0.2", "description": "The next release if backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2016-06-28T20:19:10Z", "updated_at": "2016-07-31T11:41:43Z", "due_on": "2016-07-30T07:00:00Z", "closed_at": "2016-07-31T11:41:43Z"}, "comments": 3, "created_at": "2016-06-24T07:27:54Z", "updated_at": "2016-07-01T14:58:57Z", "closed_at": "2016-07-01T14:58:57Z", "author_association": "CONTRIBUTOR", "body": "Hello,\n\nUsing gcc `6.1.0`.\n\nCompilation error (`-Wconversion -Werror`):\n\n```\n./deps/json.hpp:9995:25:   required from here\n./deps/json.hpp:5957:72: error: conversion to 'char' from 'int' may alter its value [-Werror=conversion]\n                             : ('a' + static_cast<char>((v - 10) & 0x1f));\n                                                                        ^\n./deps/json.hpp:5957:72: error: conversion to 'char' from 'int' may alter its value [-Werror=conversion]\n```\n\n[hexify](https://github.com/nlohmann/json/blob/master/src/json.hpp.re2c#L5953):\n\n``` c++\nconst auto hexify = [](const int v) -> char\n{\n  return (v < 10)\n  ? ('0' + static_cast<char>(v))\n  : ('a' + static_cast<char>((v - 10) & 0x1f));\n};\n```\n\nCould be written as something like:\n\n``` c++\nconst auto hexify = [](const int v) -> char\n{\n    static const std::array<char, 16> hex = { '0', '1', '2', '3',\n                                              '4', '5', '6', '7',\n                                              '8', '9', 'a', 'b',\n                                              'c', 'd', 'e', 'f' };\n    return hex[v];\n};\n```\n\nWould you be interested in a PR for such a change?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/269", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/269/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/269/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/269/events", "html_url": "https://github.com/nlohmann/json/issues/269", "id": 161736046, "node_id": "MDU6SXNzdWUxNjE3MzYwNDY=", "number": 269, "title": "json::diff generates incorrect patch when removing multiple array elements.", "user": {"login": "tmyersjstar", "id": 13578082, "node_id": "MDQ6VXNlcjEzNTc4MDgy", "avatar_url": "https://avatars3.githubusercontent.com/u/13578082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmyersjstar", "html_url": "https://github.com/tmyersjstar", "followers_url": "https://api.github.com/users/tmyersjstar/followers", "following_url": "https://api.github.com/users/tmyersjstar/following{/other_user}", "gists_url": "https://api.github.com/users/tmyersjstar/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmyersjstar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmyersjstar/subscriptions", "organizations_url": "https://api.github.com/users/tmyersjstar/orgs", "repos_url": "https://api.github.com/users/tmyersjstar/repos", "events_url": "https://api.github.com/users/tmyersjstar/events{/privacy}", "received_events_url": "https://api.github.com/users/tmyersjstar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/3", "html_url": "https://github.com/nlohmann/json/milestone/3", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/3/labels", "id": 1510937, "node_id": "MDk6TWlsZXN0b25lMTUxMDkzNw==", "number": 3, "title": "Release 2.0.0", "description": "This release adds several features such as JSON Pointers, JSON Patch, or support for 64 bit unsigned integers. Furthermore, several (subtle) bugs have been fixed.\r\n\r\nAs `noexcept` and `constexpr` specifier have been added to several functions, the public API has effectively been changed in a (potential) non-backwards compatible manner. As we adhere to [Semantic Versioning](http://semver.org), this calls for a new major version, so say hello to 2\ufe0f\u20e3.0\ufe0f\u20e3.0\ufe0f\u20e3.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 34, "state": "closed", "created_at": "2016-01-17T12:14:39Z", "updated_at": "2016-06-23T22:53:19Z", "due_on": "2016-06-23T07:00:00Z", "closed_at": "2016-06-23T22:53:19Z"}, "comments": 5, "created_at": "2016-06-22T17:05:50Z", "updated_at": "2016-06-22T22:05:56Z", "closed_at": "2016-06-22T22:05:56Z", "author_association": "NONE", "body": "Removing multiple elements from an array will generate a patch which is incorrect.  Here is a unit test that will fail:\n\n``` cpp\n// Exists in TEST_CASE(\"JSON patch\")\nSECTION(\"remove multiple\")\n{\n    json doc = R\"(\n        {\n            \"arr1\": [1, 2, 3, 4]\n        }\n    )\"_json;\n    json expected = R\"(\n        {\n            \"arr1\": [1, 2]\n        }\n    )\"_json;\n\n    // check roundtrip\n    CHECK(doc.patch(json::diff(doc, expected)) == expected);\n}\n```\n\nThe patch that is generated is the following:\n\n``` js\n[\n    {\n        \"op\": \"remove\",\n        \"path\": \"/2\"\n    },\n    {\n        \"op\": \"remove\",\n        \"path\": \"/3\"\n    }\n]\n```\n\nThis fails obviously because first index 2 is removed, and then index 3 is attempted to be removed, but the size is only 2 at this point:\n\n```\ntest/src/unit.cpp:13106: FAILED:\n  CHECK( doc.patch(json::diff(doc, expected)) == expected )\ndue to unexpected exception with message:\n  array index 3 is out of range\n```\n\nSorry if this is already a known issue or not the right way to report this issue.  I will try to take a look into creating a fix if I have time.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/268", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/268/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/268/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/268/events", "html_url": "https://github.com/nlohmann/json/issues/268", "id": 161327201, "node_id": "MDU6SXNzdWUxNjEzMjcyMDE=", "number": 268, "title": "dump() method doesn't work with a custom allocator", "user": {"login": "michsco", "id": 15827689, "node_id": "MDQ6VXNlcjE1ODI3Njg5", "avatar_url": "https://avatars0.githubusercontent.com/u/15827689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michsco", "html_url": "https://github.com/michsco", "followers_url": "https://api.github.com/users/michsco/followers", "following_url": "https://api.github.com/users/michsco/following{/other_user}", "gists_url": "https://api.github.com/users/michsco/gists{/gist_id}", "starred_url": "https://api.github.com/users/michsco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michsco/subscriptions", "organizations_url": "https://api.github.com/users/michsco/orgs", "repos_url": "https://api.github.com/users/michsco/repos", "events_url": "https://api.github.com/users/michsco/events{/privacy}", "received_events_url": "https://api.github.com/users/michsco/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}, {"id": 304694104, "node_id": "MDU6TGFiZWwzMDQ2OTQxMDQ=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20please%20discuss", "name": "state: please discuss", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-06-21T00:48:40Z", "updated_at": "2017-06-16T17:36:51Z", "closed_at": "2017-06-16T17:36:51Z", "author_association": "NONE", "body": "Even if #161 isn't fixed, the dump() method still assumes the default allocator is used. Consider the following code:\n\n``` cpp\nnlohmann::basic_json<std::map, std::vector, StringWithMyAllocator, bool, int64_t, uint64_t, double, MyAllocator> j;\n\n// add a string that is stored as std::string\nj[\"name\"] = \"Niels\";\n\n// explicit conversion to string\nStringWithMyAllocator s = j.dump();    // {\\\"happy\\\":true,\\\"pi\\\":3.141}\n```\n\nThis results in a compiler error:\n'return': cannot convert from 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' to 'std::basic_string<char,std::char_traits<char>,MyAllocator<char>>'\n\nThe issue is due to the stringstream that is used without specifying the allocator for the stream. As a result, dump fails to compile due to the call to ss.str().\n\n``` cpp\nstring_t dump(const int indent = -1) const\n{\n    std::stringstream ss;\n\n    if (indent >= 0)\n    {\n        dump(ss, true, static_cast<unsigned int>(indent));\n    }\n    else\n    {\n        dump(ss, false, 0);\n    }\n\n    return ss.str();\n}\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/267", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/267/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/267/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/267/events", "html_url": "https://github.com/nlohmann/json/issues/267", "id": 160952101, "node_id": "MDU6SXNzdWUxNjA5NTIxMDE=", "number": 267, "title": "Docs - What does Json[key] return?", "user": {"login": "MartinNvp", "id": 19196293, "node_id": "MDQ6VXNlcjE5MTk2Mjkz", "avatar_url": "https://avatars1.githubusercontent.com/u/19196293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MartinNvp", "html_url": "https://github.com/MartinNvp", "followers_url": "https://api.github.com/users/MartinNvp/followers", "following_url": "https://api.github.com/users/MartinNvp/following{/other_user}", "gists_url": "https://api.github.com/users/MartinNvp/gists{/gist_id}", "starred_url": "https://api.github.com/users/MartinNvp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MartinNvp/subscriptions", "organizations_url": "https://api.github.com/users/MartinNvp/orgs", "repos_url": "https://api.github.com/users/MartinNvp/repos", "events_url": "https://api.github.com/users/MartinNvp/events{/privacy}", "received_events_url": "https://api.github.com/users/MartinNvp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-06-17T18:49:59Z", "updated_at": "2016-06-22T09:27:00Z", "closed_at": "2016-06-18T12:34:21Z", "author_association": "NONE", "body": "### Background\n\nI wanted to loop through the keys of \"instruments\" (without assuming the nature of the contained values).\n\n``` json\n{\n  \"instruments\": {\n    \"cu1608\": {\"MaxPos\": 3, \"StartTime\": \"09:00\" },\n    \"cu1609\": {\"MaxPos\": 0, \"StartTime\": \"09:00\" },\n    \"cu1610\": {\"MaxPos\": 0, \"StartTime\": \"09:00\" },\n  }\n}\n```\n\nYour main readme.md is great, but seems a tad more focus on _loading_ than reading/querying Json. (The forms of loading are  impressive/elegant.)\nAll the examples I could find for iterating over JSON object/map content where at the top level. Not nested.\n\nI wanted to know what the operator[] returned. I dug into the class docs. Found json::operator[] returned some reference type.\nWhich did not look iterable.\n\nDespite that observation (is it wrong?) this code works:\n\n``` c++\nvoid strathost_from_json(StrategyHostParams& host, const json& j)\n    {\n        host.subscribe_instrumentname_list.clear();\n        const json& instrums = j[\"instruments\"]; //<<<< this bit was hard to figure out\n        for (json::const_iterator it = instrums.begin(); it != instrums.end(); ++it)\n            host.subscribe_instrumentname_list.emplace_back(it.key());\n    }\n```\n\nSo I _can_ get a JSON object at every level all the way down. Happy Surprise.\n### Request\n\nCan (or should?) that readme.md docs state something like:\n-  \"Its JSON objects\" all the way down \n  (not [turtles](https://en.wikipedia.org/wiki/Turtles_all_the_way_down) ;-) )\n- JSON[] returns (via implicit conversion??) a thing convertible to json&\n- show iteration of nested objects arrays.\n\n(Hope this aint daft, new to use of your JSON, or any JSON actually.)\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/266", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/266/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/266/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/266/events", "html_url": "https://github.com/nlohmann/json/pull/266", "id": 160130902, "node_id": "MDExOlB1bGxSZXF1ZXN0NzM3MDM0MzI=", "number": 266, "title": "Fix Issue #265", "user": {"login": "06needhamt", "id": 4162227, "node_id": "MDQ6VXNlcjQxNjIyMjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4162227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/06needhamt", "html_url": "https://github.com/06needhamt", "followers_url": "https://api.github.com/users/06needhamt/followers", "following_url": "https://api.github.com/users/06needhamt/following{/other_user}", "gists_url": "https://api.github.com/users/06needhamt/gists{/gist_id}", "starred_url": "https://api.github.com/users/06needhamt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/06needhamt/subscriptions", "organizations_url": "https://api.github.com/users/06needhamt/orgs", "repos_url": "https://api.github.com/users/06needhamt/repos", "events_url": "https://api.github.com/users/06needhamt/events{/privacy}", "received_events_url": "https://api.github.com/users/06needhamt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/3", "html_url": "https://github.com/nlohmann/json/milestone/3", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/3/labels", "id": 1510937, "node_id": "MDk6TWlsZXN0b25lMTUxMDkzNw==", "number": 3, "title": "Release 2.0.0", "description": "This release adds several features such as JSON Pointers, JSON Patch, or support for 64 bit unsigned integers. Furthermore, several (subtle) bugs have been fixed.\r\n\r\nAs `noexcept` and `constexpr` specifier have been added to several functions, the public API has effectively been changed in a (potential) non-backwards compatible manner. As we adhere to [Semantic Versioning](http://semver.org), this calls for a new major version, so say hello to 2\ufe0f\u20e3.0\ufe0f\u20e3.0\ufe0f\u20e3.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 34, "state": "closed", "created_at": "2016-01-17T12:14:39Z", "updated_at": "2016-06-23T22:53:19Z", "due_on": "2016-06-23T07:00:00Z", "closed_at": "2016-06-23T22:53:19Z"}, "comments": 1, "created_at": "2016-06-14T09:02:37Z", "updated_at": "2016-06-14T13:28:04Z", "closed_at": "2016-06-14T13:24:50Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/266", "html_url": "https://github.com/nlohmann/json/pull/266", "diff_url": "https://github.com/nlohmann/json/pull/266.diff", "patch_url": "https://github.com/nlohmann/json/pull/266.patch"}, "body": "## Files to change\n\nThere are currently two files which need to be edited:\n1. [`src/json.hpp.re2c`](https://github.com/nlohmann/json/blob/master/src/json.hpp.re2c) (note the `.re2c` suffix) - This file contains a comment section which describes the JSON lexic. This section is translated by [`re2c`](http://re2c.org) into file [`src/json.hpp`](https://github.com/nlohmann/json/blob/master/src/json.hpp) which is plain \"vanilla\" C++11 code. (In fact, the generated lexer consists of some hundred lines of `goto`s, which is a hint you never want to edit this file...).\n   \n   If you only edit file `src/json.hpp` (without the `.re2c` suffix), your changes will be overwritten as soon as the lexer is touched again. To generate the `src/json.hpp` file which is actually used during compilation of the tests and all other code, please execute\n   \n   ``` sh\n   make re2c\n   ```\n   \n   To run [`re2c`](http://re2c.org) and generate/overwrite file `src/json.hpp` with your changes in file `src/json.hpp.re2c`.\n2. [`test/src/unit.cpp`](https://github.com/nlohmann/json/blob/master/test/unit.cpp) - This contains the [Catch](https://github.com/philsquared/Catch) unit tests which currently cover [100 %](https://coveralls.io/github/nlohmann/json) of the library's code.\n   \n   If you add or change a feature, please also add a unit test to this file. The unit tests can be compiled with\n   \n   ``` sh\n   make\n   ```\n   \n   and can be executed with\n   \n   ``` sh\n   ./json_unit\n   ```\n   \n   The test cases are also executed with several different compilers on [Travis](https://travis-ci.org/nlohmann/json) once you open a pull request.\n\nPlease understand that I cannot accept pull requests changing only file `src/json.hpp`.\n## Note\n- If you open a pull request, the code will be automatically tested with [Valgrind](http://valgrind.org)'s Memcheck tool to detect memory leaks. Please be aware that the execution with Valgrind _may_ in rare cases yield different behavior than running the code directly. This can result in failing unit tests which run successfully without Valgrind.\n## Please don't\n- Only make changes to file `src/json.hpp` -- please read the paragraph above and understand why `src/json.hpp.re2c` exists.\n- The C++11 support varies between different **compilers** and versions. Please note the [list of supported compilers](https://github.com/nlohmann/json/blob/master/README.md#supported-compilers). Some compilers like GCC 4.8 (and earlier), Clang 3.3 (and earlier), or Microsoft Visual Studio 13.0 and earlier are known not to work due to missing or incomplete C++11 support. Please refrain from proposing changes that work around these compiler's limitations with `#ifdef`s or other means.\n- Specifically, I am aware of compilation problems with **Microsoft Visual Studio** (there even is an [issue label](https://github.com/nlohmann/json/issues?utf8=\u2713&q=label%3A%22visual+studio%22+) for these kind of bugs). I understand that even in 2016, complete C++11 support isn't there yet. But please also understand that I do not want to drop features or uglify the code just to make Microsoft's sub-standard compiler happy. The past has shown that there are ways to express the functionality such that the code compiles with the most recent MSVC - unfortunately, this is not the main objective of the project.\n- Please refrain from proposing changes that would **break [JSON](http://json.org) conformance**. If you propose a conformant extension of JSON to be supported by the library, please motivate this extension.\n- Please do not open pull requests that address **multiple issues**.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/265", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/265/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/265/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/265/events", "html_url": "https://github.com/nlohmann/json/issues/265", "id": 160009990, "node_id": "MDU6SXNzdWUxNjAwMDk5OTA=", "number": 265, "title": "Compiler Errors With JSON.hpp", "user": {"login": "06needhamt", "id": 4162227, "node_id": "MDQ6VXNlcjQxNjIyMjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4162227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/06needhamt", "html_url": "https://github.com/06needhamt", "followers_url": "https://api.github.com/users/06needhamt/followers", "following_url": "https://api.github.com/users/06needhamt/following{/other_user}", "gists_url": "https://api.github.com/users/06needhamt/gists{/gist_id}", "starred_url": "https://api.github.com/users/06needhamt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/06needhamt/subscriptions", "organizations_url": "https://api.github.com/users/06needhamt/orgs", "repos_url": "https://api.github.com/users/06needhamt/repos", "events_url": "https://api.github.com/users/06needhamt/events{/privacy}", "received_events_url": "https://api.github.com/users/06needhamt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/3", "html_url": "https://github.com/nlohmann/json/milestone/3", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/3/labels", "id": 1510937, "node_id": "MDk6TWlsZXN0b25lMTUxMDkzNw==", "number": 3, "title": "Release 2.0.0", "description": "This release adds several features such as JSON Pointers, JSON Patch, or support for 64 bit unsigned integers. Furthermore, several (subtle) bugs have been fixed.\r\n\r\nAs `noexcept` and `constexpr` specifier have been added to several functions, the public API has effectively been changed in a (potential) non-backwards compatible manner. As we adhere to [Semantic Versioning](http://semver.org), this calls for a new major version, so say hello to 2\ufe0f\u20e3.0\ufe0f\u20e3.0\ufe0f\u20e3.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 34, "state": "closed", "created_at": "2016-01-17T12:14:39Z", "updated_at": "2016-06-23T22:53:19Z", "due_on": "2016-06-23T07:00:00Z", "closed_at": "2016-06-23T22:53:19Z"}, "comments": 5, "created_at": "2016-06-13T18:03:04Z", "updated_at": "2016-06-14T13:27:57Z", "closed_at": "2016-06-14T13:27:50Z", "author_association": "CONTRIBUTOR", "body": "Hi i am experiencing some compiler errors with JSON.hpp the errors are as follows\n\n```\nError   C2589   '(': illegal token on right side of '::'    json.hpp 8475   \nError   C2059   syntax error: '::'   json.hpp   8475    \nError   C2143   syntax error: missing '(' before '::'   json.hpp    8475    \nError   C2589   '(': illegal token on right side of '::'    json.hpp    8481    \nError   C2059   syntax error: '::'  json.hpp    8481    \nError   C2143   syntax error: missing '(' before '::'   json.hpp    8481    \n```\n\nThis was compiled using Visual Studio 2015 Update 2 on Windows 10 build 10586\n\nHope this helps fix the issue\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/264", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/264/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/264/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/264/events", "html_url": "https://github.com/nlohmann/json/issues/264", "id": 159492548, "node_id": "MDU6SXNzdWUxNTk0OTI1NDg=", "number": 264, "title": "Throw exception instead of crashing my app", "user": {"login": "RandomSayHello", "id": 10299457, "node_id": "MDQ6VXNlcjEwMjk5NDU3", "avatar_url": "https://avatars2.githubusercontent.com/u/10299457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RandomSayHello", "html_url": "https://github.com/RandomSayHello", "followers_url": "https://api.github.com/users/RandomSayHello/followers", "following_url": "https://api.github.com/users/RandomSayHello/following{/other_user}", "gists_url": "https://api.github.com/users/RandomSayHello/gists{/gist_id}", "starred_url": "https://api.github.com/users/RandomSayHello/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RandomSayHello/subscriptions", "organizations_url": "https://api.github.com/users/RandomSayHello/orgs", "repos_url": "https://api.github.com/users/RandomSayHello/repos", "events_url": "https://api.github.com/users/RandomSayHello/events{/privacy}", "received_events_url": "https://api.github.com/users/RandomSayHello/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-06-09T19:47:55Z", "updated_at": "2016-06-10T16:21:36Z", "closed_at": "2016-06-10T16:06:18Z", "author_association": "NONE", "body": "Hi there,\n\nI just wanted to know how I can \"predefine\" a check-statement.\n\nlike, whenever I read something like json[\"test_me\"] and it's non-existant, my app crash.\nIs there any simple way to check if this value even exists before it force-read it?\n\nsorry, Imma newbie here. I might explained my question in a totally wrong way .. however, I hope you can help me out! :+1: \n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/263", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/263/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/263/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/263/events", "html_url": "https://github.com/nlohmann/json/issues/263", "id": 159380878, "node_id": "MDU6SXNzdWUxNTkzODA4Nzg=", "number": 263, "title": "Ambiguous push_back and operator+= overloads", "user": {"login": "markand", "id": 11919008, "node_id": "MDQ6VXNlcjExOTE5MDA4", "avatar_url": "https://avatars0.githubusercontent.com/u/11919008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markand", "html_url": "https://github.com/markand", "followers_url": "https://api.github.com/users/markand/followers", "following_url": "https://api.github.com/users/markand/following{/other_user}", "gists_url": "https://api.github.com/users/markand/gists{/gist_id}", "starred_url": "https://api.github.com/users/markand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markand/subscriptions", "organizations_url": "https://api.github.com/users/markand/orgs", "repos_url": "https://api.github.com/users/markand/repos", "events_url": "https://api.github.com/users/markand/events{/privacy}", "received_events_url": "https://api.github.com/users/markand/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-09T10:59:34Z", "updated_at": "2016-06-09T13:32:17Z", "closed_at": "2016-06-09T11:00:46Z", "author_association": "NONE", "body": "Hello,\n\nI'm trying to add a property to an object like in the example from the README gif, I get an error about ambiguous overload with the following code using GCC 5.1:\n\n``` cpp\n#include \"json.hpp\"\n\nusing json = nlohmann::json;\n\nint main()\n{\n    json j = json::object();\n\n    j += { \"anotherkey\", false };\n\n    return 0;\n}\n```\n\nAnd the error:\n\n```\nmain.cpp: In function 'int main()':\nmain.cpp:9:4: error: ambiguous overload for 'operator+=' (operand types are 'json {aka nlohmann::basic_json<>}' and '<brace-enclosed initializer list>')\n  j += { \"anotherkey\", false };\n    ^\nIn file included from main.cpp:1:0:\njson.hpp:4324:15: note: candidate: nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::value_type& nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::operator+=(nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>&&) [with ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long long int; NumberFloatType = double; AllocatorType = std::allocator; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::reference = nlohmann::basic_json<>&; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::value_type = nlohmann::basic_json<>]\n     reference operator+=(basic_json&& val)\n               ^\njson.hpp:4358:15: note: candidate: nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::value_type& nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::operator+=(const nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>&) [with ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long long int; NumberFloatType = double; AllocatorType = std::allocator; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::reference = nlohmann::basic_json<>&; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::value_type = nlohmann::basic_json<>]\n     reference operator+=(const basic_json& val)\n               ^\njson.hpp:4408:15: note: candidate: nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::value_type& nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::operator+=(const typename nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::object_t::value_type&) [with ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long long int; NumberFloatType = double; AllocatorType = std::allocator; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::reference = nlohmann::basic_json<>&; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::value_type = nlohmann::basic_json<>; typename nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::object_t::value_type = std::pair<const std::__cxx11::basic_string<char>, nlohmann::basic_json<> >]\n     reference operator+=(const typename object_t::value_type& val)\n               ^\n```\n\nIt works if I use `j += json{{ \"anotherkey\", false }};` though\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/262", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/262/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/262/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/262/events", "html_url": "https://github.com/nlohmann/json/issues/262", "id": 158805394, "node_id": "MDU6SXNzdWUxNTg4MDUzOTQ=", "number": 262, "title": "Preseving order of items in json", "user": {"login": "moneroexamples", "id": 15305358, "node_id": "MDQ6VXNlcjE1MzA1MzU4", "avatar_url": "https://avatars1.githubusercontent.com/u/15305358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moneroexamples", "html_url": "https://github.com/moneroexamples", "followers_url": "https://api.github.com/users/moneroexamples/followers", "following_url": "https://api.github.com/users/moneroexamples/following{/other_user}", "gists_url": "https://api.github.com/users/moneroexamples/gists{/gist_id}", "starred_url": "https://api.github.com/users/moneroexamples/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moneroexamples/subscriptions", "organizations_url": "https://api.github.com/users/moneroexamples/orgs", "repos_url": "https://api.github.com/users/moneroexamples/repos", "events_url": "https://api.github.com/users/moneroexamples/events{/privacy}", "received_events_url": "https://api.github.com/users/moneroexamples/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-07T00:34:00Z", "updated_at": "2016-06-07T04:03:04Z", "closed_at": "2016-06-07T04:03:04Z", "author_association": "NONE", "body": "Is there a way of cunstring json object so that it preserves the ordering of elements?\n\nFor example, this:\n\n``` c++\n    nlohmann::json j1 {{\"ccc\", 2}, {\"aaa\", 4}};\n    cout << j1 << endl;\n```\n\nresults in a string in different order than originally defined\n\n``` c++\n{\"aaa\":4,\"ccc\":2}\n```\n\nI would like to preserve the orginal order, i.e., to get this instead:\n\n``` c++\n{\"ccc\":2,\"aaa\":4}\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/261", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/261/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/261/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/261/events", "html_url": "https://github.com/nlohmann/json/issues/261", "id": 158787352, "node_id": "MDU6SXNzdWUxNTg3ODczNTI=", "number": 261, "title": "'\\' char problem in strings", "user": {"login": "tanisman", "id": 15254912, "node_id": "MDQ6VXNlcjE1MjU0OTEy", "avatar_url": "https://avatars3.githubusercontent.com/u/15254912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tanisman", "html_url": "https://github.com/tanisman", "followers_url": "https://api.github.com/users/tanisman/followers", "following_url": "https://api.github.com/users/tanisman/following{/other_user}", "gists_url": "https://api.github.com/users/tanisman/gists{/gist_id}", "starred_url": "https://api.github.com/users/tanisman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tanisman/subscriptions", "organizations_url": "https://api.github.com/users/tanisman/orgs", "repos_url": "https://api.github.com/users/tanisman/repos", "events_url": "https://api.github.com/users/tanisman/events{/privacy}", "received_events_url": "https://api.github.com/users/tanisman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}, {"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-06-06T22:11:25Z", "updated_at": "2016-06-07T11:23:46Z", "closed_at": "2016-06-07T11:23:46Z", "author_association": "NONE", "body": "I am trying to parse this json:\n\n \"window\": {\n    \"texture\": \"interface\\\\ifcommon\\\\slibifwnd.ddj\",\n    \"width\":330,\n    \"height\":366,\n    \"position\": [0, 0],\n    \"rect\": [0, 0, 330, 366],\n    \"moveable\": true,\n    \"moverect\": [0, 0, 330, 30]\n    },\n\nbut parser gives me unexpected \\ error for string.\n\nIDE: Visual Studio 2015\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/260", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/260/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/260/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/260/events", "html_url": "https://github.com/nlohmann/json/issues/260", "id": 158618433, "node_id": "MDU6SXNzdWUxNTg2MTg0MzM=", "number": 260, "title": "VS2015 compile fail", "user": {"login": "aaron3481", "id": 1323760, "node_id": "MDQ6VXNlcjEzMjM3NjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1323760?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaron3481", "html_url": "https://github.com/aaron3481", "followers_url": "https://api.github.com/users/aaron3481/followers", "following_url": "https://api.github.com/users/aaron3481/following{/other_user}", "gists_url": "https://api.github.com/users/aaron3481/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaron3481/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaron3481/subscriptions", "organizations_url": "https://api.github.com/users/aaron3481/orgs", "repos_url": "https://api.github.com/users/aaron3481/repos", "events_url": "https://api.github.com/users/aaron3481/events{/privacy}", "received_events_url": "https://api.github.com/users/aaron3481/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-06-06T07:46:20Z", "updated_at": "2016-06-14T06:30:38Z", "closed_at": "2016-06-06T15:21:25Z", "author_association": "NONE", "body": "Hi all,\n\nI'm trying to import json.hpp into my project. When compiling, an error came out and pointed to line 8500 \"max = static_cast<uint64_t>(std::numeric_limits<number_integer_t>::max()) + 1;\"\n\nError Code: C2589 '(': illegal token on right side of '::'\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/259", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/259/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/259/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/259/events", "html_url": "https://github.com/nlohmann/json/issues/259", "id": 158510792, "node_id": "MDU6SXNzdWUxNTg1MTA3OTI=", "number": 259, "title": "-Wconversion warning", "user": {"login": "manuporto", "id": 7240098, "node_id": "MDQ6VXNlcjcyNDAwOTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7240098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manuporto", "html_url": "https://github.com/manuporto", "followers_url": "https://api.github.com/users/manuporto/followers", "following_url": "https://api.github.com/users/manuporto/following{/other_user}", "gists_url": "https://api.github.com/users/manuporto/gists{/gist_id}", "starred_url": "https://api.github.com/users/manuporto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manuporto/subscriptions", "organizations_url": "https://api.github.com/users/manuporto/orgs", "repos_url": "https://api.github.com/users/manuporto/repos", "events_url": "https://api.github.com/users/manuporto/events{/privacy}", "received_events_url": "https://api.github.com/users/manuporto/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/3", "html_url": "https://github.com/nlohmann/json/milestone/3", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/3/labels", "id": 1510937, "node_id": "MDk6TWlsZXN0b25lMTUxMDkzNw==", "number": 3, "title": "Release 2.0.0", "description": "This release adds several features such as JSON Pointers, JSON Patch, or support for 64 bit unsigned integers. Furthermore, several (subtle) bugs have been fixed.\r\n\r\nAs `noexcept` and `constexpr` specifier have been added to several functions, the public API has effectively been changed in a (potential) non-backwards compatible manner. As we adhere to [Semantic Versioning](http://semver.org), this calls for a new major version, so say hello to 2\ufe0f\u20e3.0\ufe0f\u20e3.0\ufe0f\u20e3.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 34, "state": "closed", "created_at": "2016-01-17T12:14:39Z", "updated_at": "2016-06-23T22:53:19Z", "due_on": "2016-06-23T07:00:00Z", "closed_at": "2016-06-23T22:53:19Z"}, "comments": 11, "created_at": "2016-06-04T15:59:25Z", "updated_at": "2016-06-23T16:16:45Z", "closed_at": "2016-06-23T16:16:40Z", "author_association": "NONE", "body": "I'm receiving a `-Wconversion` warning when including and compiling the latest release of the library. I read https://github.com/nlohmann/json/issues/239 but the errors showed are different (although it's the same flag that sends the warning), also the links present there are down.\nHere is the complete output:\n\n```\nIn file included from .../foo.cpp:3:0:\n.../json.hpp: In instantiation of \u2018nlohmann::basic_json<ObjectType, ArrayType, StringType, \nBooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::escape_string(const \nstring_t&) [with ObjectType = std::map; ArrayType = std::vector; StringType = \nstd::basic_string<char>; BooleanType = bool; NumberInteger\nType = long int; NumberFloatType = double; AllocatorType = std::allocator; \nnlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, \nNumberFloatType, AllocatorType>::string_t = std::basic_string<char>]::__lambda3\u2019:\n.../json.hpp:5455:40:   required from \u2018struct nlohmann::basic_json<ObjectType, ArrayType, \nStringType, BooleanType, NumberIntegerType, NumberFloatType, \nAllocatorType>::escape_string(const string_t&) [with ObjectType = std::map; ArrayType = \nstd::vector; StringType = std::basic_string<char>; BooleanType = bool; NumberIntegerType = long \nint; NumberFloatType = double; AllocatorType = std::allocator; nlohmann::basic_json<ObjectType, \nArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, \nAllocatorType>::string_t = std::basic_string<char>]::__lambda3\u2019\n.../json.hpp:5458:25:   required from \u2018static nlohmann::basic_json<ObjectType, ArrayType, \nStringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::string_t \nnlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, \nNumberFloatType, AllocatorType>::escape_string(const string_t&) [with ObjectType = std::map; \nArrayType = std::vector; StringType = std::basic_string<char>; BooleanType = bool; \nNumberIntegerType = long int; NumberFloatType = double; AllocatorType = std::allocator; \nnlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, \nNumberFloatType, AllocatorType>::string_t = std::basic_string<char>]\u2019\n.../json.hpp:5536:48:   required from \u2018void nlohmann::basic_json<ObjectType, ArrayType, \nStringType, BooleanType, NumberIntegerType, NumberFloatType, \nAllocatorType>::dump(std::ostream&, bool, unsigned int, unsigned int) const [with ObjectType = \nstd::map; ArrayType = std::vector; StringType = std::basic_string<char>; BooleanType = bool; \nNumberIntegerType = long int; NumberFloatType = double; AllocatorType = std::allocator; \nstd::ostream = std::basic_ostream<char>]\u2019\n.../json.hpp:1892:61:   required from \u2018nlohmann::basic_json<ObjectType, ArrayType, StringType, \nBooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::string_t \nnlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, \nNumberFloatType, AllocatorType>::dump(int) const [with ObjectType = std::map; ArrayType = \nstd::vector; StringType = std::basic_string<char>; BooleanType = bool; NumberIntegerType = long \nint; NumberFloatType = double; AllocatorType =\n std::allocator; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, \nNumberIntegerType, NumberFloatType, AllocatorType>::string_t = std::basic_string<char>]\u2019\n.../json.hpp:8209:25:   required from here\n.../json.hpp:5457:72: error: conversion to \u2018char\u2019 from \u2018int\u2019 may alter its value [-Werror=conversion]\n                             return (v < 10) ? ('0' + v) : ('a' + v - 10);\n                                                                        ^\n.../json.hpp:5457:72: error: conversion to \u2018char\u2019 from \u2018int\u2019 may alter its value [-Werror=conversion]\n.../json.hpp: In instantiation of \u2018static nlohmann::basic_json<ObjectType, ArrayType, StringType, \nBooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::string_t \nnlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, \nNumberFloatType, AllocatorType>::escape_string(const\n string_t&) [with ObjectType = std::map; ArrayType = std::vector; StringType = \nstd::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberFloatType = \ndouble; AllocatorType = std::allocator; nlohmann::basic_json<ObjectType, ArrayType, StringType, \nBooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::string_t = std::basic\n_string<char>]\u2019:\n.../json.hpp:5536:48:   required from \u2018void nlohmann::basic_json<ObjectType, ArrayType, \nStringType, BooleanType, NumberIntegerType, NumberFloatType, \nAllocatorType>::dump(std::ostream&, bool, unsigned int, unsigned int) const [with ObjectType = \nstd::map; ArrayType = std::vector; StringType = std::basic_string<char>; BooleanType = bool; \nNumberIntegerType = long int; NumberFloatType = double; AllocatorType = std::allocator; \nstd::ostream = std::basic_ostream<char>]\u2019\n.../json.hpp:1892:61:   required from \u2018nlohmann::basic_json<ObjectType, ArrayType, StringType, \nBooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::string_t \nnlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, \nNumberFloatType, AllocatorType>::dump(int) const [with ObjectType = std::map; ArrayType = \nstd::vector; StringType = std::basic_string<char>; BooleanType = bool; NumberIntegerType = long \nint; NumberFloatType = double; AllocatorType =\n std::allocator; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, \nNumberIntegerType, NumberFloatType, AllocatorType>::string_t = std::basic_string<char>]\u2019\n.../json.hpp:8209:25:   required from here\n.../json.hpp:5462:51: error: conversion to \u2018char\u2019 from \u2018int\u2019 may alter its value [-Werror=conversion]\n                     { 'u', '0', '0', hexify(c >> 4), hexify(c & 0x0f)\n                                                   ^\ncc1plus: all warnings being treated as errors\n```\n- gcc (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4\n- Compile flags: `-std=c++11 -Wall -Werror -Wconversion -Wno-unused-parameter -Wextra -Wtype-limits -pedantic -pedantic-errors`\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/258", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/258/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/258/events", "html_url": "https://github.com/nlohmann/json/issues/258", "id": 158439893, "node_id": "MDU6SXNzdWUxNTg0Mzk4OTM=", "number": 258, "title": "Maybe a bug", "user": {"login": "dekonunes", "id": 1737599, "node_id": "MDQ6VXNlcjE3Mzc1OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1737599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dekonunes", "html_url": "https://github.com/dekonunes", "followers_url": "https://api.github.com/users/dekonunes/followers", "following_url": "https://api.github.com/users/dekonunes/following{/other_user}", "gists_url": "https://api.github.com/users/dekonunes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dekonunes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dekonunes/subscriptions", "organizations_url": "https://api.github.com/users/dekonunes/orgs", "repos_url": "https://api.github.com/users/dekonunes/repos", "events_url": "https://api.github.com/users/dekonunes/events{/privacy}", "received_events_url": "https://api.github.com/users/dekonunes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-06-03T19:39:34Z", "updated_at": "2016-06-05T00:25:35Z", "closed_at": "2016-06-05T00:25:35Z", "author_association": "NONE", "body": "My english is not so well, but i'll try show what happening.\n\nI'm creating a genetic algorithm and when create a string with 16 or more bits the lib have a bug, will explain better.\n\nFirst i'm reading like this: \n\n``` c++\nvoid IndividuoBinario::openJson() {        \n        using json = nlohmann::json;\n        ifstream texto(\"entrada.json\");\n        if (!texto)\n            cout << \"dont open\" << endl;\n        stringstream buffer;\n        buffer << texto.rdbuf();\n        this->entrada = json::parse(buffer.str());\n        texto.close();\n}\n```\n\nI have a class IndividuoBinario with this constructor: \n\n``` c++\nIndividuoBinario::IndividuoBinario() {\n    static mt19937 mt(time(NULL));\n    static uniform_int_distribution<int> bit(0, 1);\n    string aux;\n    openJson();\n    pair<int, int> auxGenes;\n    for (int count = 0; count < this->entrada[\"qtdVariaveis\"]; ++count) {\n        auxGenes.first = this->entrada[\"variaveis\"][count][\"min\"];\n        auxGenes.second = this->entrada[\"variaveis\"][count][\"max\"];\n        this->genes.push_back(auxGenes);\n    }\n    for (int count = 0; count < this->genes.size(); ++count) {\n        this->quantidadeBitsCadaGene.push_back(getNumeroBits(this->entrada[\"variaveis\"][count][\"max\"],\n                this->entrada[\"variaveis\"][count][\"min\"],\n                this->entrada[\"variaveis\"][count][\"precisao\"]));\n    }\n\n    for (int var = 0; var < this->genes.size(); ++var) {\n        for (int i = 0; i < this->quantidadeBitsCadaGene.at(var); i++) {\n            aux = static_cast<ostringstream*>(&(ostringstream() << bit(mt)))->str();\n            this->cromossomo = this->cromossomo + aux;\n        }\n    }\n    this->probMutacao = this->entrada[\"chanceMutacao\"];\n}\n```\n\n Working fine, BUT when i make a pair this bug happen:\n\n``` c++\npair<IndividuoBinario, IndividuoBinario> newIndividuosCrossover; \n```\n\nusing printf to find the error (error is Segmentation fault) i found in this line (of method openJSON): \n\n``` c++\ncout << \"here 1\" << endl; //show\nifstream texto(\"entrada.json\");\ncout << \"here 2\" << endl; // dont show (Segmentation fault)\n```\n\nwhen run:\n\n```\n.....\nhere1\nhere2\nhere1\nhere2\nline before pair\nhere1\nSegmentation Fault (core dumped)\n```\n\nbut more weird its because this happen just when my string (this->cromossomo) is more then 16 chars and just when use pairs, if invoke normal class IndividuoBinario work fine, just using pair this happen and with more then 16 chars.\n\nI used gdb and this happen \n```malloc_consolidate (av=av@entry=0x7ffff6efec00 <main_arena>) at malloc.c:4134\n4134    malloc.c: Arquivo ou diret\u00f3rio n\u00e3o encontrado.\n\n```\n\n\nI dont know if this is because the lib, but maybe. I'm trying hard to solve this.\n\n```\n"}]