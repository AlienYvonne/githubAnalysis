[{"url": "https://api.github.com/repos/nlohmann/json/issues/135", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/135/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/135/events", "html_url": "https://github.com/nlohmann/json/issues/135", "id": 110645836, "node_id": "MDU6SXNzdWUxMTA2NDU4MzY=", "number": 135, "title": "Bug in basic_json::operator[] const overload", "user": {"login": "dariomt", "id": 12997431, "node_id": "MDQ6VXNlcjEyOTk3NDMx", "avatar_url": "https://avatars3.githubusercontent.com/u/12997431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dariomt", "html_url": "https://github.com/dariomt", "followers_url": "https://api.github.com/users/dariomt/followers", "following_url": "https://api.github.com/users/dariomt/following{/other_user}", "gists_url": "https://api.github.com/users/dariomt/gists{/gist_id}", "starred_url": "https://api.github.com/users/dariomt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dariomt/subscriptions", "organizations_url": "https://api.github.com/users/dariomt/orgs", "repos_url": "https://api.github.com/users/dariomt/repos", "events_url": "https://api.github.com/users/dariomt/events{/privacy}", "received_events_url": "https://api.github.com/users/dariomt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2015-10-09T12:16:50Z", "updated_at": "2015-12-21T08:02:59Z", "closed_at": "2015-12-21T08:02:59Z", "author_association": "CONTRIBUTOR", "body": "The following code\n\n```\n// note the *const*\nconst json object =\n{\n        {\"one\", 1}, {\"two\", 2}, {\"three\", 2.9}\n};\nstd::cout << object.size() << '\\n';\nstd::cout << object[\"doh!\"] << '\\n'; // element not found\nstd::cout << object.size() << '\\n'; // const object modified!\n```\n\nprints\n\n```\n3\nnull\n4\n```\n\nAllowing a const object to change like this is not a good idea.\nI think this is a bug: either the const overload of `operator[]` throws if the key cannot be found, or there is no such const overload (e.g. std::map does not have it).\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/134", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/134/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/134/events", "html_url": "https://github.com/nlohmann/json/issues/134", "id": 110500666, "node_id": "MDU6SXNzdWUxMTA1MDA2NjY=", "number": 134, "title": "wrong enable_if for const pointer (instead of pointer-to-const)", "user": {"login": "dariomt", "id": 12997431, "node_id": "MDQ6VXNlcjEyOTk3NDMx", "avatar_url": "https://avatars3.githubusercontent.com/u/12997431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dariomt", "html_url": "https://github.com/dariomt", "followers_url": "https://api.github.com/users/dariomt/followers", "following_url": "https://api.github.com/users/dariomt/following{/other_user}", "gists_url": "https://api.github.com/users/dariomt/gists{/gist_id}", "starred_url": "https://api.github.com/users/dariomt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dariomt/subscriptions", "organizations_url": "https://api.github.com/users/dariomt/orgs", "repos_url": "https://api.github.com/users/dariomt/repos", "events_url": "https://api.github.com/users/dariomt/events{/privacy}", "received_events_url": "https://api.github.com/users/dariomt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2015-10-08T17:12:26Z", "updated_at": "2015-12-06T15:44:54Z", "closed_at": "2015-12-06T15:44:54Z", "author_association": "CONTRIBUTOR", "body": "Hi ,\nThe following test fails to compile:\n\n```\nconst json value = {{\"one\", 1}, {\"two\", 2}};\nconst json::object_t* p = value.get_ptr<const json::object_t*>();\n```\n\nBut this compiles (note the extra const):\n\n```\nconst json value = {{\"one\", 1}, {\"two\", 2}};\nconst json::object_t* const q = value.get_ptr<const json::object_t* const>();\n```\n\nI think that the problem is the additional check for the const overload of get_ptr\n`and std::is_const<PointerType>::value`\n\nI think what you intended was to check that the template parameter is a \"pointer-to-const\" but what you are actually checking is if you got a \"const pointer\".\n\nI believe the right fix is to check for \"pointer-to-const\" like this:\n`and std::is_const< typename std::remove_pointer<PointerType>::type >::value`\nIt works in VS2015.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/133", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/133/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/133/events", "html_url": "https://github.com/nlohmann/json/issues/133", "id": 110451476, "node_id": "MDU6SXNzdWUxMTA0NTE0NzY=", "number": 133, "title": "overload of at() with default value", "user": {"login": "dariomt", "id": 12997431, "node_id": "MDQ6VXNlcjEyOTk3NDMx", "avatar_url": "https://avatars3.githubusercontent.com/u/12997431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dariomt", "html_url": "https://github.com/dariomt", "followers_url": "https://api.github.com/users/dariomt/followers", "following_url": "https://api.github.com/users/dariomt/following{/other_user}", "gists_url": "https://api.github.com/users/dariomt/gists{/gist_id}", "starred_url": "https://api.github.com/users/dariomt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dariomt/subscriptions", "organizations_url": "https://api.github.com/users/dariomt/orgs", "repos_url": "https://api.github.com/users/dariomt/repos", "events_url": "https://api.github.com/users/dariomt/events{/privacy}", "received_events_url": "https://api.github.com/users/dariomt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 22, "created_at": "2015-10-08T13:31:07Z", "updated_at": "2016-11-13T22:38:10Z", "closed_at": "2015-12-27T14:32:48Z", "author_association": "CONTRIBUTOR", "body": "My use case is:\n- use find() to look for a key\n- if the key is not found return a default_value of type T (possibly moved in and out)\n- if the key is found return the object converted to type T (only if T is compatible)\n\ne.g.\n\n```\ntemplate <typename T>\nT at (const typename object_t::key_type & key, T default_value) const noexcept\n{\n    auto it = find(key);\n    if (it != end()) return *it;\n    return default_value;\n}\n```\n\nWhat do you think?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/132", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/132/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/132/events", "html_url": "https://github.com/nlohmann/json/issues/132", "id": 110425267, "node_id": "MDU6SXNzdWUxMTA0MjUyNjc=", "number": 132, "title": "Splitting source", "user": {"login": "dariomt", "id": 12997431, "node_id": "MDQ6VXNlcjEyOTk3NDMx", "avatar_url": "https://avatars3.githubusercontent.com/u/12997431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dariomt", "html_url": "https://github.com/dariomt", "followers_url": "https://api.github.com/users/dariomt/followers", "following_url": "https://api.github.com/users/dariomt/following{/other_user}", "gists_url": "https://api.github.com/users/dariomt/gists{/gist_id}", "starred_url": "https://api.github.com/users/dariomt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dariomt/subscriptions", "organizations_url": "https://api.github.com/users/dariomt/orgs", "repos_url": "https://api.github.com/users/dariomt/repos", "events_url": "https://api.github.com/users/dariomt/events{/privacy}", "received_events_url": "https://api.github.com/users/dariomt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-10-08T11:03:14Z", "updated_at": "2015-12-09T15:32:39Z", "closed_at": "2015-12-09T15:32:39Z", "author_association": "CONTRIBUTOR", "body": "Hi,\nI appreciate the ease of deploying a single header file.\nBut, I think it would be better to decouple the different pieces of functionality.\n\nI propose splitting the single json.hpp header file into three parts:\n- json_fwd.hpp with only the forward declarations of template basic_json and the alias json\n- json.hpp with the definition of template basic_json but without the io (and without the dependency to all the very heavy standard io related headers)\n- json_io.hpp with the definition of the io funcitonality, i.e. parsing, streaming, etc...\n\nDo you think this is feasible?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/131", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/131/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/131/events", "html_url": "https://github.com/nlohmann/json/pull/131", "id": 110265672, "node_id": "MDExOlB1bGxSZXF1ZXN0NDcwNTA0ODc=", "number": 131, "title": "disabled \"CopyAssignable\" test for MSVC in Debug mode, see #125", "user": {"login": "dariomt", "id": 12997431, "node_id": "MDQ6VXNlcjEyOTk3NDMx", "avatar_url": "https://avatars3.githubusercontent.com/u/12997431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dariomt", "html_url": "https://github.com/dariomt", "followers_url": "https://api.github.com/users/dariomt/followers", "following_url": "https://api.github.com/users/dariomt/following{/other_user}", "gists_url": "https://api.github.com/users/dariomt/gists{/gist_id}", "starred_url": "https://api.github.com/users/dariomt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dariomt/subscriptions", "organizations_url": "https://api.github.com/users/dariomt/orgs", "repos_url": "https://api.github.com/users/dariomt/repos", "events_url": "https://api.github.com/users/dariomt/events{/privacy}", "received_events_url": "https://api.github.com/users/dariomt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-07T16:31:54Z", "updated_at": "2015-10-17T10:41:25Z", "closed_at": "2015-10-17T10:41:20Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/131", "html_url": "https://github.com/nlohmann/json/pull/131", "diff_url": "https://github.com/nlohmann/json/pull/131.diff", "patch_url": "https://github.com/nlohmann/json/pull/131.patch"}, "body": "STL iterators used by json::iterator don't pass this test in Debug mode.\nThe test does pass in Release mode, so I felt the best thing to do was selectively disable that test.\nMore details in #125 \n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/130", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/130/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/130/events", "html_url": "https://github.com/nlohmann/json/pull/130", "id": 110257212, "node_id": "MDExOlB1bGxSZXF1ZXN0NDcwNDU2MzA=", "number": 130, "title": "removed stream operator for iterator, resolution for #125", "user": {"login": "dariomt", "id": 12997431, "node_id": "MDQ6VXNlcjEyOTk3NDMx", "avatar_url": "https://avatars3.githubusercontent.com/u/12997431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dariomt", "html_url": "https://github.com/dariomt", "followers_url": "https://api.github.com/users/dariomt/followers", "following_url": "https://api.github.com/users/dariomt/following{/other_user}", "gists_url": "https://api.github.com/users/dariomt/gists{/gist_id}", "starred_url": "https://api.github.com/users/dariomt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dariomt/subscriptions", "organizations_url": "https://api.github.com/users/dariomt/orgs", "repos_url": "https://api.github.com/users/dariomt/repos", "events_url": "https://api.github.com/users/dariomt/events{/privacy}", "received_events_url": "https://api.github.com/users/dariomt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-10-07T15:51:23Z", "updated_at": "2015-10-23T16:42:16Z", "closed_at": "2015-10-23T16:42:10Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/130", "html_url": "https://github.com/nlohmann/json/pull/130", "diff_url": "https://github.com/nlohmann/json/pull/130.diff", "patch_url": "https://github.com/nlohmann/json/pull/130.patch"}, "body": "It doesn't really make sense to stream an iterator.\nBesides, this was causing trouble in MSVC in Debug mode (see #125)\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/129", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/129/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/129/events", "html_url": "https://github.com/nlohmann/json/pull/129", "id": 109499805, "node_id": "MDExOlB1bGxSZXF1ZXN0NDY2NDAzMzI=", "number": 129, "title": "fixed typos in comments for examples", "user": {"login": "dariomt", "id": 12997431, "node_id": "MDQ6VXNlcjEyOTk3NDMx", "avatar_url": "https://avatars3.githubusercontent.com/u/12997431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dariomt", "html_url": "https://github.com/dariomt", "followers_url": "https://api.github.com/users/dariomt/followers", "following_url": "https://api.github.com/users/dariomt/following{/other_user}", "gists_url": "https://api.github.com/users/dariomt/gists{/gist_id}", "starred_url": "https://api.github.com/users/dariomt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dariomt/subscriptions", "organizations_url": "https://api.github.com/users/dariomt/orgs", "repos_url": "https://api.github.com/users/dariomt/repos", "events_url": "https://api.github.com/users/dariomt/events{/privacy}", "received_events_url": "https://api.github.com/users/dariomt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-02T14:20:43Z", "updated_at": "2015-10-03T08:36:39Z", "closed_at": "2015-10-03T08:36:36Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/129", "html_url": "https://github.com/nlohmann/json/pull/129", "diff_url": "https://github.com/nlohmann/json/pull/129.diff", "patch_url": "https://github.com/nlohmann/json/pull/129.patch"}, "body": "Minor fixes to comments in examples.\n\nBTW, I don't see the examples compiled as part of the tests.\nHow do you make sure they compile?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/128", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/128/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/128/events", "html_url": "https://github.com/nlohmann/json/issues/128", "id": 109462593, "node_id": "MDU6SXNzdWUxMDk0NjI1OTM=", "number": 128, "title": "Question about get_ref()", "user": {"login": "dariomt", "id": 12997431, "node_id": "MDQ6VXNlcjEyOTk3NDMx", "avatar_url": "https://avatars3.githubusercontent.com/u/12997431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dariomt", "html_url": "https://github.com/dariomt", "followers_url": "https://api.github.com/users/dariomt/followers", "following_url": "https://api.github.com/users/dariomt/following{/other_user}", "gists_url": "https://api.github.com/users/dariomt/gists{/gist_id}", "starred_url": "https://api.github.com/users/dariomt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dariomt/subscriptions", "organizations_url": "https://api.github.com/users/dariomt/orgs", "repos_url": "https://api.github.com/users/dariomt/repos", "events_url": "https://api.github.com/users/dariomt/events{/privacy}", "received_events_url": "https://api.github.com/users/dariomt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/2", "html_url": "https://github.com/nlohmann/json/milestone/2", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/2/labels", "id": 1479859, "node_id": "MDk6TWlsZXN0b25lMTQ3OTg1OQ==", "number": 2, "title": "Release 1.1.0", "description": "", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 19, "state": "closed", "created_at": "2016-01-01T17:36:30Z", "updated_at": "2016-01-26T05:26:42Z", "due_on": "2016-01-23T08:00:00Z", "closed_at": "2016-01-26T05:26:42Z"}, "comments": 11, "created_at": "2015-10-02T09:50:35Z", "updated_at": "2016-01-20T20:16:24Z", "closed_at": "2016-01-20T20:16:24Z", "author_association": "CONTRIBUTOR", "body": "I see there were some discussions about adding get_ref(), but I can't see it in the code.\nWhat happened to get_ref()?\n\nI believe that having get_ref() is convenient and safe. It could merely call get_ptr() and throw if it returns nullptr. It makes it easier to traverse a json object when I'm pretty sure about the types it holds. Otherwise I have to constantly check against nullptr myself.\n\nI'd like the following code to work seamlessly:\n\n``` cpp\nvoid func(const std::string&);\njson value = \"foobar\";\nfunc( value.get_ref<const std::string>() );\n```\n\nCurrently I'd have to write the following:\n\n``` cpp\nvoid func(const std::string&);\njson value = \"foobar\";\nauto p = value.get_ptr<const std::string*>();\nif (!p) throw some_exception;\nfunc( *p );\n```\n\nWould you accept a PR for this functionality?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/127", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/127/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/127/events", "html_url": "https://github.com/nlohmann/json/issues/127", "id": 109460870, "node_id": "MDU6SXNzdWUxMDk0NjA4NzA=", "number": 127, "title": "Question about get_ptr()", "user": {"login": "dariomt", "id": 12997431, "node_id": "MDQ6VXNlcjEyOTk3NDMx", "avatar_url": "https://avatars3.githubusercontent.com/u/12997431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dariomt", "html_url": "https://github.com/dariomt", "followers_url": "https://api.github.com/users/dariomt/followers", "following_url": "https://api.github.com/users/dariomt/following{/other_user}", "gists_url": "https://api.github.com/users/dariomt/gists{/gist_id}", "starred_url": "https://api.github.com/users/dariomt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dariomt/subscriptions", "organizations_url": "https://api.github.com/users/dariomt/orgs", "repos_url": "https://api.github.com/users/dariomt/repos", "events_url": "https://api.github.com/users/dariomt/events{/privacy}", "received_events_url": "https://api.github.com/users/dariomt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-10-02T09:37:37Z", "updated_at": "2015-12-16T10:43:34Z", "closed_at": "2015-12-16T10:43:34Z", "author_association": "CONTRIBUTOR", "body": "I see the following in the documentation of get_ptr()\n\n\"@warning Writing data to the pointee of the result yields an undefined state.\"\n\nIIUC this means that the following code yields an undefined state:\n\n``` cpp\njson value = 17;\nauto p = value.get_ptr<json::number_integer_t*>();\n*p = 42;\n```\n\ni.e. I cannot modify the integer value inside the json\n\nWhy is this so?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/126", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/126/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/126/events", "html_url": "https://github.com/nlohmann/json/pull/126", "id": 108380131, "node_id": "MDExOlB1bGxSZXF1ZXN0NDYwNDA4MjA=", "number": 126, "title": "Remove superfluous inefficiency", "user": {"login": "d-frey", "id": 3956325, "node_id": "MDQ6VXNlcjM5NTYzMjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3956325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d-frey", "html_url": "https://github.com/d-frey", "followers_url": "https://api.github.com/users/d-frey/followers", "following_url": "https://api.github.com/users/d-frey/following{/other_user}", "gists_url": "https://api.github.com/users/d-frey/gists{/gist_id}", "starred_url": "https://api.github.com/users/d-frey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d-frey/subscriptions", "organizations_url": "https://api.github.com/users/d-frey/orgs", "repos_url": "https://api.github.com/users/d-frey/repos", "events_url": "https://api.github.com/users/d-frey/events{/privacy}", "received_events_url": "https://api.github.com/users/d-frey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-25T18:08:47Z", "updated_at": "2015-10-03T12:42:42Z", "closed_at": "2015-10-03T08:38:18Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/126", "html_url": "https://github.com/nlohmann/json/pull/126", "diff_url": "https://github.com/nlohmann/json/pull/126.diff", "patch_url": "https://github.com/nlohmann/json/pull/126.patch"}, "body": ""}, {"url": "https://api.github.com/repos/nlohmann/json/issues/125", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/125/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/125/events", "html_url": "https://github.com/nlohmann/json/issues/125", "id": 107807939, "node_id": "MDU6SXNzdWUxMDc4MDc5Mzk=", "number": 125, "title": "Visual Studio 14 Debug assertion failed", "user": {"login": "ruslo", "id": 4346993, "node_id": "MDQ6VXNlcjQzNDY5OTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4346993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruslo", "html_url": "https://github.com/ruslo", "followers_url": "https://api.github.com/users/ruslo/followers", "following_url": "https://api.github.com/users/ruslo/following{/other_user}", "gists_url": "https://api.github.com/users/ruslo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruslo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruslo/subscriptions", "organizations_url": "https://api.github.com/users/ruslo/orgs", "repos_url": "https://api.github.com/users/ruslo/repos", "events_url": "https://api.github.com/users/ruslo/events{/privacy}", "received_events_url": "https://api.github.com/users/ruslo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2015-09-22T21:36:49Z", "updated_at": "2015-12-08T01:26:38Z", "closed_at": "2015-12-08T01:26:38Z", "author_association": "NONE", "body": "I've tried to run unit-test with Visual Studio 14 2015 generator and got runtime error:\n\n```\nExpression: vector iterator not dereferencable\n```\n\nLast backtrace entry comes from: https://github.com/nlohmann/json/blob/0a813539894d8a6d688ca6a404966f17b56f6e01/src/json.hpp#L5119\n\nwhich came from: https://github.com/nlohmann/json/blob/0a813539894d8a6d688ca6a404966f17b56f6e01/test/unit.cpp#L2879\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/124", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/124/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/124/events", "html_url": "https://github.com/nlohmann/json/pull/124", "id": 107734845, "node_id": "MDExOlB1bGxSZXF1ZXN0NDU2NzUxNjk=", "number": 124, "title": "remove invalid parameter '-stdlib=libc++' in CMakeLists.txt", "user": {"login": "emvivre", "id": 12485451, "node_id": "MDQ6VXNlcjEyNDg1NDUx", "avatar_url": "https://avatars0.githubusercontent.com/u/12485451?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emvivre", "html_url": "https://github.com/emvivre", "followers_url": "https://api.github.com/users/emvivre/followers", "following_url": "https://api.github.com/users/emvivre/following{/other_user}", "gists_url": "https://api.github.com/users/emvivre/gists{/gist_id}", "starred_url": "https://api.github.com/users/emvivre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emvivre/subscriptions", "organizations_url": "https://api.github.com/users/emvivre/orgs", "repos_url": "https://api.github.com/users/emvivre/repos", "events_url": "https://api.github.com/users/emvivre/events{/privacy}", "received_events_url": "https://api.github.com/users/emvivre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-22T15:07:47Z", "updated_at": "2015-12-07T20:11:59Z", "closed_at": "2015-12-07T20:11:58Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/124", "html_url": "https://github.com/nlohmann/json/pull/124", "diff_url": "https://github.com/nlohmann/json/pull/124.diff", "patch_url": "https://github.com/nlohmann/json/pull/124.patch"}, "body": "I remove the following invalid parameter : -stdlib=libc++\nThis produce a compilation error with my compiler : g++ 4.9.3\nc++: error: unrecognized command line option \u2018-stdlib=libc++\u2019\nCMakeFiles/json_unit.dir/build.make:54: recipe for target 'CMakeFiles/json_unit.dir/test/unit.cpp.o' failed\nmake[2]: **\\* [CMakeFiles/json_unit.dir/test/unit.cpp.o] Error 1\nCMakeFiles/Makefile2:60: recipe for target 'CMakeFiles/json_unit.dir/all' failed\nmake[1]: **\\* [CMakeFiles/json_unit.dir/all] Error 2\nMakefile:75: recipe for target 'all' failed\nmake: **\\* [all] Error 2\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/123", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/123/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/123/events", "html_url": "https://github.com/nlohmann/json/pull/123", "id": 107529238, "node_id": "MDExOlB1bGxSZXF1ZXN0NDU1NTc1ODE=", "number": 123, "title": "support cmake package config file : find_package support + auto-install ", "user": {"login": "daminetreg", "id": 181726, "node_id": "MDQ6VXNlcjE4MTcyNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/181726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daminetreg", "html_url": "https://github.com/daminetreg", "followers_url": "https://api.github.com/users/daminetreg/followers", "following_url": "https://api.github.com/users/daminetreg/following{/other_user}", "gists_url": "https://api.github.com/users/daminetreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/daminetreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daminetreg/subscriptions", "organizations_url": "https://api.github.com/users/daminetreg/orgs", "repos_url": "https://api.github.com/users/daminetreg/repos", "events_url": "https://api.github.com/users/daminetreg/events{/privacy}", "received_events_url": "https://api.github.com/users/daminetreg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-09-21T14:48:45Z", "updated_at": "2015-12-20T14:47:56Z", "closed_at": "2015-12-20T14:47:56Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/123", "html_url": "https://github.com/nlohmann/json/pull/123", "diff_url": "https://github.com/nlohmann/json/pull/123.diff", "patch_url": "https://github.com/nlohmann/json/pull/123.patch"}, "body": "Dear @nlohmann,\n\nI wish to submit you these changes which adds the possibility for dependent programs of your library to use it easily via cmake `find_package`, and therefore auto-download+install via `hunter_add_package` ( _i.e._ see [example cmake](https://github.com/daminetreg/hunter/blob/pull-request/add-nlohmann-json/examples/nlohmann-json/) )..\n\n``` cmake\n\nHunterGate(\n    URL \"https://github.com/ruslo/hunter/archive/vUPCOMING.tar.gz\"\n    SHA1 \"53b198e364dc7bc8360fc545f798563229bd7e20\"\n)\n\nproject(dowload-nlohmann-json)\n\nhunter_add_package(nlohmann-json)\nfind_package(nlohmann-json)\n\nadd_executable(main main.cpp)\n\ntarget_link_libraries(main\n  nlohmann-json::nlohmann-json)\n```\n\nFor the moment this is not in Hunter ( _i.e._ See PR [#239](https://github.com/ruslo/hunter/pull/239) ), but even if it isn't accepted in Hunter, it is useful for code depending on your library, as the changes aren't Hunter specific, they allow the standard cmake `find_package` mechanism to be used to find your library.\n\nThank you very much for your awesome library to handle json. I like it. :smile: \nCheers,\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/122", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/122/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/122/events", "html_url": "https://github.com/nlohmann/json/pull/122", "id": 107407836, "node_id": "MDExOlB1bGxSZXF1ZXN0NDU1MDA5ODU=", "number": 122, "title": "exception-safe object creation, fixes #118", "user": {"login": "d-frey", "id": 3956325, "node_id": "MDQ6VXNlcjM5NTYzMjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3956325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d-frey", "html_url": "https://github.com/d-frey", "followers_url": "https://api.github.com/users/d-frey/followers", "following_url": "https://api.github.com/users/d-frey/following{/other_user}", "gists_url": "https://api.github.com/users/d-frey/gists{/gist_id}", "starred_url": "https://api.github.com/users/d-frey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d-frey/subscriptions", "organizations_url": "https://api.github.com/users/d-frey/orgs", "repos_url": "https://api.github.com/users/d-frey/repos", "events_url": "https://api.github.com/users/d-frey/events{/privacy}", "received_events_url": "https://api.github.com/users/d-frey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-20T18:06:39Z", "updated_at": "2015-10-03T12:42:20Z", "closed_at": "2015-10-03T10:29:26Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/122", "html_url": "https://github.com/nlohmann/json/pull/122", "diff_url": "https://github.com/nlohmann/json/pull/122.diff", "patch_url": "https://github.com/nlohmann/json/pull/122.patch"}, "body": ""}, {"url": "https://api.github.com/repos/nlohmann/json/issues/121", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/121/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/121/events", "html_url": "https://github.com/nlohmann/json/pull/121", "id": 107391852, "node_id": "MDExOlB1bGxSZXF1ZXN0NDU0OTYwMjk=", "number": 121, "title": "Fix small oversight.", "user": {"login": "ColinH", "id": 113184, "node_id": "MDQ6VXNlcjExMzE4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/113184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ColinH", "html_url": "https://github.com/ColinH", "followers_url": "https://api.github.com/users/ColinH/followers", "following_url": "https://api.github.com/users/ColinH/following{/other_user}", "gists_url": "https://api.github.com/users/ColinH/gists{/gist_id}", "starred_url": "https://api.github.com/users/ColinH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ColinH/subscriptions", "organizations_url": "https://api.github.com/users/ColinH/orgs", "repos_url": "https://api.github.com/users/ColinH/repos", "events_url": "https://api.github.com/users/ColinH/events{/privacy}", "received_events_url": "https://api.github.com/users/ColinH/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-20T13:07:07Z", "updated_at": "2015-10-03T08:39:17Z", "closed_at": "2015-10-03T08:39:14Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/121", "html_url": "https://github.com/nlohmann/json/pull/121", "diff_url": "https://github.com/nlohmann/json/pull/121.diff", "patch_url": "https://github.com/nlohmann/json/pull/121.patch"}, "body": "Same as previous but changes json.hpp.re2c instead of json.hpp.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/120", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/120/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/120/events", "html_url": "https://github.com/nlohmann/json/pull/120", "id": 107339845, "node_id": "MDExOlB1bGxSZXF1ZXN0NDU0Nzg2NzM=", "number": 120, "title": "Overload parse() to accept an rvalue reference", "user": {"login": "silverweed", "id": 7806878, "node_id": "MDQ6VXNlcjc4MDY4Nzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/7806878?v=4", "gravatar_id": "", "url": "https://api.github.com/users/silverweed", "html_url": "https://github.com/silverweed", "followers_url": "https://api.github.com/users/silverweed/followers", "following_url": "https://api.github.com/users/silverweed/following{/other_user}", "gists_url": "https://api.github.com/users/silverweed/gists{/gist_id}", "starred_url": "https://api.github.com/users/silverweed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/silverweed/subscriptions", "organizations_url": "https://api.github.com/users/silverweed/orgs", "repos_url": "https://api.github.com/users/silverweed/repos", "events_url": "https://api.github.com/users/silverweed/events{/privacy}", "received_events_url": "https://api.github.com/users/silverweed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-09-19T15:37:38Z", "updated_at": "2015-10-03T08:43:20Z", "closed_at": "2015-10-03T08:43:16Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/120", "html_url": "https://github.com/nlohmann/json/pull/120", "diff_url": "https://github.com/nlohmann/json/pull/120.diff", "patch_url": "https://github.com/nlohmann/json/pull/120.patch"}, "body": "Currently, one cannot directly pass a `std::ifstream` to the `parse` function: \n\n``` c++\nconst char *filename = \"my_file.json\";\njson my_json = json::parse(std::ifstream(filename));\n```\n\nThis fails with the error: \n\n```\nerror: invalid initialization of non-const reference of type \u2018std::istream& {aka std::basic_istream<char>&}\u2019 from an rvalue of type \u2018std::basic_istream<char>\u2019\n json my_json = json::parse(std::ifstream(filename));\n```\n\nIf I'm not mistaken, this happens because a temporary `ifstream` is created which cannot be bound to a non-const reference, as it's required from the signature of `parse(std::istream&, parser_callback_t)`.\n\nOverloading `parse` to accept an rvalue reference (valid C++11) solves the problem and allows to move the ownership of the temporary stream to the function.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/119", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/119/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/119/events", "html_url": "https://github.com/nlohmann/json/pull/119", "id": 105448529, "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ0Njk2MTg=", "number": 119, "title": "exception-safe object creation, fixes #118", "user": {"login": "d-frey", "id": 3956325, "node_id": "MDQ6VXNlcjM5NTYzMjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3956325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d-frey", "html_url": "https://github.com/d-frey", "followers_url": "https://api.github.com/users/d-frey/followers", "following_url": "https://api.github.com/users/d-frey/following{/other_user}", "gists_url": "https://api.github.com/users/d-frey/gists{/gist_id}", "starred_url": "https://api.github.com/users/d-frey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d-frey/subscriptions", "organizations_url": "https://api.github.com/users/d-frey/orgs", "repos_url": "https://api.github.com/users/d-frey/repos", "events_url": "https://api.github.com/users/d-frey/events{/privacy}", "received_events_url": "https://api.github.com/users/d-frey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-09-08T18:59:13Z", "updated_at": "2015-09-20T18:07:37Z", "closed_at": "2015-09-20T18:07:08Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/119", "html_url": "https://github.com/nlohmann/json/pull/119", "diff_url": "https://github.com/nlohmann/json/pull/119.diff", "patch_url": "https://github.com/nlohmann/json/pull/119.patch"}, "body": "Using `unique_ptr` is preferable to `try { ... } catch(...) { ...; throw; }` as the latter will screw up the backtrace of uncaught exceptions in the debugger or a terminate handler.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/118", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/118/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/118/events", "html_url": "https://github.com/nlohmann/json/issues/118", "id": 105413865, "node_id": "MDU6SXNzdWUxMDU0MTM4NjU=", "number": 118, "title": "Memory leak in face of exceptions", "user": {"login": "ColinH", "id": 113184, "node_id": "MDQ6VXNlcjExMzE4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/113184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ColinH", "html_url": "https://github.com/ColinH", "followers_url": "https://api.github.com/users/ColinH/followers", "following_url": "https://api.github.com/users/ColinH/following{/other_user}", "gists_url": "https://api.github.com/users/ColinH/gists{/gist_id}", "starred_url": "https://api.github.com/users/ColinH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ColinH/subscriptions", "organizations_url": "https://api.github.com/users/ColinH/orgs", "repos_url": "https://api.github.com/users/ColinH/repos", "events_url": "https://api.github.com/users/ColinH/events{/privacy}", "received_events_url": "https://api.github.com/users/ColinH/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-08T16:05:33Z", "updated_at": "2016-11-13T22:38:10Z", "closed_at": "2015-10-03T10:29:27Z", "author_association": "CONTRIBUTOR", "body": "The constructor often does a two-step initialisation, an `allocate()` followed by a `construct()`. If the `construct()` throws then the previously allocated memory will leak...\n\n```\n        AllocatorType<object_t> alloc;\n        object = alloc.allocate(1);\n        alloc.construct(object, value);\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/117", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/117/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/117/events", "html_url": "https://github.com/nlohmann/json/issues/117", "id": 104052015, "node_id": "MDU6SXNzdWUxMDQwNTIwMTU=", "number": 117, "title": "Find and Count for arrays", "user": {"login": "alvarolb", "id": 1141353, "node_id": "MDQ6VXNlcjExNDEzNTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1141353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alvarolb", "html_url": "https://github.com/alvarolb", "followers_url": "https://api.github.com/users/alvarolb/followers", "following_url": "https://api.github.com/users/alvarolb/following{/other_user}", "gists_url": "https://api.github.com/users/alvarolb/gists{/gist_id}", "starred_url": "https://api.github.com/users/alvarolb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alvarolb/subscriptions", "organizations_url": "https://api.github.com/users/alvarolb/orgs", "repos_url": "https://api.github.com/users/alvarolb/repos", "events_url": "https://api.github.com/users/alvarolb/events{/privacy}", "received_events_url": "https://api.github.com/users/alvarolb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2015-08-31T13:19:30Z", "updated_at": "2016-11-13T22:38:10Z", "closed_at": "2015-12-16T10:37:39Z", "author_association": "NONE", "body": "Not sure if this has been already discussed, but I find useful to implement the find and count methods also for arrays. Arrays can store multiple items, so count can be useful to check wether a item is present of how many times it appears. However I don't know if it is easy to develop taking into account that an array can store multiple value types.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/116", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/116/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/116/events", "html_url": "https://github.com/nlohmann/json/pull/116", "id": 103842001, "node_id": "MDExOlB1bGxSZXF1ZXN0NDM2OTIwMTQ=", "number": 116, "title": "Fix small oversight.", "user": {"login": "ColinH", "id": 113184, "node_id": "MDQ6VXNlcjExMzE4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/113184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ColinH", "html_url": "https://github.com/ColinH", "followers_url": "https://api.github.com/users/ColinH/followers", "following_url": "https://api.github.com/users/ColinH/following{/other_user}", "gists_url": "https://api.github.com/users/ColinH/gists{/gist_id}", "starred_url": "https://api.github.com/users/ColinH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ColinH/subscriptions", "organizations_url": "https://api.github.com/users/ColinH/orgs", "repos_url": "https://api.github.com/users/ColinH/repos", "events_url": "https://api.github.com/users/ColinH/events{/privacy}", "received_events_url": "https://api.github.com/users/ColinH/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-08-29T09:41:52Z", "updated_at": "2015-09-20T13:02:50Z", "closed_at": "2015-09-20T13:02:50Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/116", "html_url": "https://github.com/nlohmann/json/pull/116", "diff_url": "https://github.com/nlohmann/json/pull/116.diff", "patch_url": "https://github.com/nlohmann/json/pull/116.patch"}, "body": ""}, {"url": "https://api.github.com/repos/nlohmann/json/issues/115", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/115/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/115/events", "html_url": "https://github.com/nlohmann/json/pull/115", "id": 102924699, "node_id": "MDExOlB1bGxSZXF1ZXN0NDMyMzkyNzU=", "number": 115, "title": "Use the right variable name in doc string", "user": {"login": "whoshuu", "id": 4143617, "node_id": "MDQ6VXNlcjQxNDM2MTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/4143617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whoshuu", "html_url": "https://github.com/whoshuu", "followers_url": "https://api.github.com/users/whoshuu/followers", "following_url": "https://api.github.com/users/whoshuu/following{/other_user}", "gists_url": "https://api.github.com/users/whoshuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/whoshuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whoshuu/subscriptions", "organizations_url": "https://api.github.com/users/whoshuu/orgs", "repos_url": "https://api.github.com/users/whoshuu/repos", "events_url": "https://api.github.com/users/whoshuu/events{/privacy}", "received_events_url": "https://api.github.com/users/whoshuu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-08-25T00:57:59Z", "updated_at": "2015-10-03T08:41:30Z", "closed_at": "2015-10-03T08:41:26Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/115", "html_url": "https://github.com/nlohmann/json/pull/115", "diff_url": "https://github.com/nlohmann/json/pull/115.diff", "patch_url": "https://github.com/nlohmann/json/pull/115.patch"}, "body": ""}, {"url": "https://api.github.com/repos/nlohmann/json/issues/114", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/114/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/114/events", "html_url": "https://github.com/nlohmann/json/issues/114", "id": 101791194, "node_id": "MDU6SXNzdWUxMDE3OTExOTQ=", "number": 114, "title": "dynamically constructing an arbitrarily nested object", "user": {"login": "zcourts", "id": 692396, "node_id": "MDQ6VXNlcjY5MjM5Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/692396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zcourts", "html_url": "https://github.com/zcourts", "followers_url": "https://api.github.com/users/zcourts/followers", "following_url": "https://api.github.com/users/zcourts/following{/other_user}", "gists_url": "https://api.github.com/users/zcourts/gists{/gist_id}", "starred_url": "https://api.github.com/users/zcourts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zcourts/subscriptions", "organizations_url": "https://api.github.com/users/zcourts/orgs", "repos_url": "https://api.github.com/users/zcourts/repos", "events_url": "https://api.github.com/users/zcourts/events{/privacy}", "received_events_url": "https://api.github.com/users/zcourts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-08-19T02:20:17Z", "updated_at": "2016-11-13T22:38:10Z", "closed_at": "2015-12-16T10:20:45Z", "author_association": "NONE", "body": "How would you go about constructing an arbitrarily nested object e.g. a.b.c.d for serialisation?\nSomething like the following comes to mind but doesn't work:\n\n``` c++\n      auto record(nlohmann::json({});\n      nlohmann::json field = record;\n      for (const auto &part:utils::spilt(name)) {\n        field = field[part].is_null() ? nlohmann::json({}) : field[part];\n      }\n```\n\nwhere split(...) returns a vector of components from a dot notation string.\nI know I can do `record[\"a\"][\"b\"][\"c\"]` but they keys or depth aren't known in advance.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/113", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/113/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/113/events", "html_url": "https://github.com/nlohmann/json/issues/113", "id": 101613751, "node_id": "MDU6SXNzdWUxMDE2MTM3NTE=", "number": 113, "title": "Returning any data type", "user": {"login": "tomus85", "id": 462692, "node_id": "MDQ6VXNlcjQ2MjY5Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/462692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomus85", "html_url": "https://github.com/tomus85", "followers_url": "https://api.github.com/users/tomus85/followers", "following_url": "https://api.github.com/users/tomus85/following{/other_user}", "gists_url": "https://api.github.com/users/tomus85/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomus85/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomus85/subscriptions", "organizations_url": "https://api.github.com/users/tomus85/orgs", "repos_url": "https://api.github.com/users/tomus85/repos", "events_url": "https://api.github.com/users/tomus85/events{/privacy}", "received_events_url": "https://api.github.com/users/tomus85/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-08-18T09:34:23Z", "updated_at": "2015-08-21T07:46:35Z", "closed_at": "2015-08-21T07:46:35Z", "author_association": "NONE", "body": "Morning, \n\nI know this isn't the right place to ask as I don't have an issue with the library. It's more of C++ support. I have looked everywhere on Google and haven't found a solution. I hope you don't mind helping me out, I would very much appreciated it, cheers :-)\n\nI am creating a caching class in C++ so that It can be used in iOS and Android. I have created a simple class, this class is a singleton class:\n\nusing json = nlohmann::json;\nusing namespace std;\n\nclass Cache\n{\nprivate:\n    static Cache *instance;\n    json j;\n\n```\nCache() {};\nCache(Cache const&)             = delete;\nvoid operator=(Cache const&)    = delete;\n```\n\npublic:\n    static bool fileExists();\n    static Cache\\* getInstance();\n\n```\ntemplate<typename T> void add(string key, T t) { j[key] = t; }\n```\n\n//    template<typename T> T get(string key) { return j[key]; }\n\n```\nvoid persist();\n\nstring toString();\n```\n\n};\n\nThis is what I have implemented in Objective-C class \n        cache = Cache::getInstance();\n\n```\n    cache->add(\"test\", \"test\");\n    cache->add(\"name\", true);\n    cache->add(\"again\", 199.9);\n    NSLog(@\"%s\", cache->toString().c_str());\n```\n\nSo far the result is what I am expecting however I am trying to implement the 'get' method. As you can see I have comment this out in the header file. I would like to implement this method so that whatever key i pass in the parameter I get the value associated with the key. For example \n\ncache->get(\"test\") would return string \"test\"\ncache->get(\"name\") returns bool true\nand so on. \n\nWhat I have commented out requires this syntax 'cache->get<>(\"key\")'.\nI would very much appreciate if I could  get help implementing the 'get' method. \n\nIf this is not the right place to ask as this is not an issue with the framework then I will remove this thread.\n\nThank you for your time ;-)\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/112", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/112/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/112/events", "html_url": "https://github.com/nlohmann/json/issues/112", "id": 101500426, "node_id": "MDU6SXNzdWUxMDE1MDA0MjY=", "number": 112, "title": "Compile error with g++ 4.9.3 cygwin 64-bit", "user": {"login": "dariost", "id": 5399827, "node_id": "MDQ6VXNlcjUzOTk4Mjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5399827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dariost", "html_url": "https://github.com/dariost", "followers_url": "https://api.github.com/users/dariost/followers", "following_url": "https://api.github.com/users/dariost/following{/other_user}", "gists_url": "https://api.github.com/users/dariost/gists{/gist_id}", "starred_url": "https://api.github.com/users/dariost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dariost/subscriptions", "organizations_url": "https://api.github.com/users/dariost/orgs", "repos_url": "https://api.github.com/users/dariost/repos", "events_url": "https://api.github.com/users/dariost/events{/privacy}", "received_events_url": "https://api.github.com/users/dariost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2015-08-17T20:12:09Z", "updated_at": "2015-12-07T21:04:06Z", "closed_at": "2015-12-07T21:04:06Z", "author_association": "NONE", "body": "I've tried to compile the following code\n\n``` c++\n#include \"json.hpp\"\n#include <iostream>\n\nusing json = nlohmann::json;\n\nint main()\n{\n    json j;\n    j[\"success\"] = false;\n    std::cout << j.dump(4) << std::endl;\n    return 0;\n}\n```\n\nwith g++ 4.9.3 on cygwin 64-bit (I'm using Windows 10)\n\n```\n$ g++ --version\ng++ (GCC) 4.9.3\nCopyright (C) 2015 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n```\n\nThis is the compiler output\n\n```\n$ g++ main.cpp -std=c++11 -o main\nIn file included from main.cpp:1:0:\njson.hpp: In member function \u2018std::string nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::iterator_wrapper::iterator_wrapper_internal::calculate_key()\u2019:\njson.hpp:5725:32: error: \u2018to_string\u2019 is not a member of \u2018std\u2019\n                         return std::to_string(array_index);\n                                ^\njson.hpp: In member function \u2018long double nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::lexer::get_number() const\u2019:\njson.hpp:6940:36: error: \u2018strtold\u2019 is not a member of \u2018std\u2019\n             const auto float_val = std::strtold(reinterpret_cast<typename string_t::const_pointer>(m_start),\n                                    ^\njson.hpp:6940:36: note: suggested alternative:\nIn file included from /usr/lib/gcc/x86_64-pc-cygwin/4.9.3/include/c++/cstdlib:72:0,\n                 from /usr/lib/gcc/x86_64-pc-cygwin/4.9.3/include/c++/bits/stl_algo.h:59,\n                 from /usr/lib/gcc/x86_64-pc-cygwin/4.9.3/include/c++/algorithm:62,\n                 from json.hpp:41,\n                 from main.cpp:1:\n/usr/include/stdlib.h:279:20: note:   \u2018strtold\u2019\n extern long double strtold (const char *__restrict, char **__restrict);\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/111", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/111/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/111/events", "html_url": "https://github.com/nlohmann/json/pull/111", "id": 100826404, "node_id": "MDExOlB1bGxSZXF1ZXN0NDIzNzc0Njg=", "number": 111, "title": "Quick fix to address subsequent unicode chars prob", "user": {"login": "caiovlp", "id": 2237461, "node_id": "MDQ6VXNlcjIyMzc0NjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2237461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caiovlp", "html_url": "https://github.com/caiovlp", "followers_url": "https://api.github.com/users/caiovlp/followers", "following_url": "https://api.github.com/users/caiovlp/following{/other_user}", "gists_url": "https://api.github.com/users/caiovlp/gists{/gist_id}", "starred_url": "https://api.github.com/users/caiovlp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caiovlp/subscriptions", "organizations_url": "https://api.github.com/users/caiovlp/orgs", "repos_url": "https://api.github.com/users/caiovlp/repos", "events_url": "https://api.github.com/users/caiovlp/events{/privacy}", "received_events_url": "https://api.github.com/users/caiovlp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2015-08-13T17:38:11Z", "updated_at": "2015-08-14T12:45:47Z", "closed_at": "2015-08-14T12:45:47Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/111", "html_url": "https://github.com/nlohmann/json/pull/111", "diff_url": "https://github.com/nlohmann/json/pull/111.diff", "patch_url": "https://github.com/nlohmann/json/pull/111.patch"}, "body": "sprintf prints a null character at the end of the string and overwrites the \\ character that was set during initalization (line 4625). Whenever there are two subsequent characters that are escaped, the first one ends up overwriting the second's backslash. In case there's a non-escaped string between them, the string itself overwrites the null character.\n\nHere's an easy way to reproduce this issue:\n\n```\nstring bytes{0x7, 0x7};\ncout << \"bytes: \" << bytes << endl;\njson j;\nj[\"string\"] = bytes;\ncout << j.dump() << endl;\n```\n\n// expected result: \\u0007\\u0007\n// actual result: \\u0007\\0u0007\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/110", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/110/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/110/events", "html_url": "https://github.com/nlohmann/json/issues/110", "id": 100225606, "node_id": "MDU6SXNzdWUxMDAyMjU2MDY=", "number": 110, "title": "insert json array issue with gcc4.8.2", "user": {"login": "tjuliuyou", "id": 5418088, "node_id": "MDQ6VXNlcjU0MTgwODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5418088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tjuliuyou", "html_url": "https://github.com/tjuliuyou", "followers_url": "https://api.github.com/users/tjuliuyou/followers", "following_url": "https://api.github.com/users/tjuliuyou/following{/other_user}", "gists_url": "https://api.github.com/users/tjuliuyou/gists{/gist_id}", "starred_url": "https://api.github.com/users/tjuliuyou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tjuliuyou/subscriptions", "organizations_url": "https://api.github.com/users/tjuliuyou/orgs", "repos_url": "https://api.github.com/users/tjuliuyou/repos", "events_url": "https://api.github.com/users/tjuliuyou/events{/privacy}", "received_events_url": "https://api.github.com/users/tjuliuyou/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2015-08-11T04:51:42Z", "updated_at": "2015-12-08T17:13:50Z", "closed_at": "2015-12-08T17:13:26Z", "author_association": "NONE", "body": "The task may like this:\n\n``` json\n[\n{\n \"id\" : \"1111-0000\",\n\"content\" : []\n},\n{\n \"id\" : \"1111-2222\",\n\"content\" : []\n}\n]\n```\n\nwhen I try to insert json to `_task` \n\n``` cpp\n // nlohmann::json _task; \n  void add_task(const nlohmann::json& tasks) {\n    std::lock_guard<std::mutex> lock(_mtx);\n    _task.insert(_task.end(),tasks.cbegin(),tasks.cend());\n  }\n```\n\nI get this error when using gcc4.8.2 (but worked when using clang3.6)\n\n```\nhome/sven/Workspace/Collector/include/json.hpp: In instantiation of \u2018nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::iterator nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::insert(nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::const_iterator, nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::const_iterator, nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::const_iterator) [with ObjectType = std::map; ArrayType = std::vector; StringType = std::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberFloatType = double; AllocatorType = std::allocator]\u2019:\n/home/sven/Workspace/Collector/Collector/Services/serialize_manager.cpp:46:57:   required from here\n/home/sven/Workspace/Collector/include/json.hpp:3897:36: error: no match for \u2018operator=\u2019 (operand types are \u2018std::vector<nlohmann::basic_json<>, std::allocator<nlohmann::basic_json<> > >::iterator {aka __gnu_cxx::__normal_iterator<nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<>, std::allocator<nlohmann::basic_json<> > > >}\u2019 and \u2018void\u2019)\n         result.m_it.array_iterator = m_value.array->insert(pos.m_it.array_iterator,\n                                    ^\n/home/sven/Workspace/Collector/include/json.hpp:3897:36: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/4.8.2/bits/char_traits.h:39,\n                 from /usr/include/c++/4.8.2/string:40,\n                 from /home/sven/Workspace/Collector/Collector/Services/serialize_manager.h:8,\n                 from /home/sven/Workspace/Collector/Collector/Services/serialize_manager.cpp:5:\n/usr/include/c++/4.8.2/bits/stl_iterator.h:708:11: note: __gnu_cxx::__normal_iterator<nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<>, std::allocator<nlohmann::basic_json<> > > >& __gnu_cxx::__normal_iterator<nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<>, std::allocator<nlohmann::basic_json<> > > >::operator=(const __gnu_cxx::__normal_iterator<nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<>, std::allocator<nlohmann::basic_json<> > > >&)\n     class __normal_iterator\n           ^\n/usr/include/c++/4.8.2/bits/stl_iterator.h:708:11: note:   no known conversion for argument 1 from \u2018void\u2019 to \u2018const __gnu_cxx::__normal_iterator<nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<>, std::allocator<nlohmann::basic_json<> > > >&\u2019\n/usr/include/c++/4.8.2/bits/stl_iterator.h:708:11: note: __gnu_cxx::__normal_iterator<nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<>, std::allocator<nlohmann::basic_json<> > > >& __gnu_cxx::__normal_iterator<nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<>, std::allocator<nlohmann::basic_json<> > > >::operator=(__gnu_cxx::__normal_iterator<nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<>, std::allocator<nlohmann::basic_json<> > > >&&)\n/usr/include/c++/4.8.2/bits/stl_iterator.h:708:11: note:   no known conversion for argument 1 from \u2018void\u2019 to \u2018__gnu_cxx::__normal_iterator<nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<>, std::allocator<nlohmann::basic_json<> > > >&&\u2019\ngmake[3]: *** [Collector/CMakeFiles/collector.dir/Services/serialize_manager.cpp.o] Error 1\ngmake[2]: *** [Collector/CMakeFiles/collector.dir/all] Error 2\ngmake[1]: *** [Collector/CMakeFiles/collector.dir/rule] Error 2\ngmake: *** [collector] Error 2\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/109", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/109/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/109/events", "html_url": "https://github.com/nlohmann/json/issues/109", "id": 100206652, "node_id": "MDU6SXNzdWUxMDAyMDY2NTI=", "number": 109, "title": "error: unterminated raw string", "user": {"login": "brianbreitsch", "id": 4730272, "node_id": "MDQ6VXNlcjQ3MzAyNzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/4730272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brianbreitsch", "html_url": "https://github.com/brianbreitsch", "followers_url": "https://api.github.com/users/brianbreitsch/followers", "following_url": "https://api.github.com/users/brianbreitsch/following{/other_user}", "gists_url": "https://api.github.com/users/brianbreitsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/brianbreitsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brianbreitsch/subscriptions", "organizations_url": "https://api.github.com/users/brianbreitsch/orgs", "repos_url": "https://api.github.com/users/brianbreitsch/repos", "events_url": "https://api.github.com/users/brianbreitsch/events{/privacy}", "received_events_url": "https://api.github.com/users/brianbreitsch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2015-08-11T01:52:48Z", "updated_at": "2018-07-19T05:46:45Z", "closed_at": "2015-12-07T20:54:04Z", "author_association": "NONE", "body": "G++ 4.8.2\n\nI'm not 100% sure that I'm doing things correctly--nevertheless, the first error I get when running `make` is:\n\n```\ng++ -std=c++11  -Wall -Wextra -pedantic -Weffc++ -Wcast-align -Wcast-qual -Wctor-dtor-privacy -Wdisabled-optimization -Wformat=2 -Winit-self -Wmissing-declarations -Wmissing-include-dirs -Wold-style-cast -Woverloaded-virtual -Wredundant-decls -Wshadow -Wsign-conversion -Wsign-promo -Wstrict-overflow=5 -Wswitch -Wundef -Wno-unused -Wnon-virtual-dtor -Wreorder -Wdeprecated -Wfloat-equal  -I src -I test test/unit.cpp  -o json_unit\ntest/unit.cpp:9675:32: error: unterminated raw string\n             CHECK_NOTHROW(json(R\"(\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/108", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/108/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/108/events", "html_url": "https://github.com/nlohmann/json/issues/108", "id": 99422504, "node_id": "MDU6SXNzdWU5OTQyMjUwNA==", "number": 108, "title": "vector<json> copy constructor really weird", "user": {"login": "ajneu", "id": 11367585, "node_id": "MDQ6VXNlcjExMzY3NTg1", "avatar_url": "https://avatars1.githubusercontent.com/u/11367585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajneu", "html_url": "https://github.com/ajneu", "followers_url": "https://api.github.com/users/ajneu/followers", "following_url": "https://api.github.com/users/ajneu/following{/other_user}", "gists_url": "https://api.github.com/users/ajneu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajneu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajneu/subscriptions", "organizations_url": "https://api.github.com/users/ajneu/orgs", "repos_url": "https://api.github.com/users/ajneu/repos", "events_url": "https://api.github.com/users/ajneu/events{/privacy}", "received_events_url": "https://api.github.com/users/ajneu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2015-08-06T12:17:26Z", "updated_at": "2015-09-07T11:23:32Z", "closed_at": "2015-08-11T17:19:24Z", "author_association": "NONE", "body": "Hi there!\n\nTry guess the output of the following:\n\n``` cpp\n#include <iostream>\n#include <cassert>\n#include <vector>\n\n#include <json.hpp>\n\n// for convenience\nusing json = nlohmann::json;\n\ntemplate <typename T>\nclass WeirdClass {\npublic:\n  WeirdClass(const std::vector<T> &v) : vec{v}\n  {\n    std::cout << \"v.size()   == \" << v.size()   << std::endl;\n    std::cout << \"vec.size() == \" << vec.size() << std::endl;\n\n    std::cout << std::endl;\n\n    for (decltype(v.size()) idx = 0; idx != v.size(); ++idx) {\n      std::cout << \"v[\" << idx << \"]   == \" << v[idx] << std::endl;\n    }\n\n    std::cout << std::endl;\n\n    for (decltype(vec.size()) idx = 0; idx != vec.size(); ++idx) {\n      std::cout << \"vec[\" << idx << \"] == \" << vec[idx] << std::endl;\n    }\n    std::cout << std::endl;\n\n    assert(v.size() == vec.size());\n  }\nprivate:\n  const std::vector<T> vec;\n };\n\n\nint main()\n{\n  json x, y;\n  x[\"value\"] = 0;\n  y[\"value\"] = 1;\n  WeirdClass<json> weird{{x, y}};\n\n  return 0;\n}\n```\n\nIt aborts!!!!! and gives me this\n\n``` bash\nv.size()   == 2\nvec.size() == 1\n\nv[0]   == {\"value\":0}\nv[1]   == {\"value\":1}\n\nvec[0] == [{\"value\":0},{\"value\":1}]\n\ngo: /home/me/main.cpp:31: WeirdClass<T>::WeirdClass(const std::vector<_RealType>&) [with T = nlohmann::basic_json<>]: Assertion `v.size() == vec.size()' failed.\nAborted\n```\n\nChanging the constructor to \n\n``` cpp\n  WeirdClass(const std::vector<T> &v) : vec{v.cbegin(), v.cend()}\n  { //...\n```\n\ngives me the expected output:\n\n``` bash\nv.size()   == 2\nvec.size() == 2\n\nv[0]   == {\"value\":0}\nv[1]   == {\"value\":1}\n\nvec[0] == {\"value\":0}\nvec[1] == {\"value\":1}\n```\n\nWhat's going on here??\nI thought things like the copy constructor should behave in a standard way. (Or is my compiler buggy?? I'm using: gcc c++ (Debian 4.9.3-3) 4.9.3; and compiling with `-std=c++14`)\n\nThanks\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/107", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/107/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/107/events", "html_url": "https://github.com/nlohmann/json/issues/107", "id": 97883903, "node_id": "MDU6SXNzdWU5Nzg4MzkwMw==", "number": 107, "title": "[clang-3.6.2] string/sstream with number to json issue", "user": {"login": "vpetrigo", "id": 5689770, "node_id": "MDQ6VXNlcjU2ODk3NzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5689770?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vpetrigo", "html_url": "https://github.com/vpetrigo", "followers_url": "https://api.github.com/users/vpetrigo/followers", "following_url": "https://api.github.com/users/vpetrigo/following{/other_user}", "gists_url": "https://api.github.com/users/vpetrigo/gists{/gist_id}", "starred_url": "https://api.github.com/users/vpetrigo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vpetrigo/subscriptions", "organizations_url": "https://api.github.com/users/vpetrigo/orgs", "repos_url": "https://api.github.com/users/vpetrigo/repos", "events_url": "https://api.github.com/users/vpetrigo/events{/privacy}", "received_events_url": "https://api.github.com/users/vpetrigo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 17, "created_at": "2015-07-29T08:15:09Z", "updated_at": "2015-11-06T13:40:21Z", "closed_at": "2015-11-06T07:36:56Z", "author_association": "CONTRIBUTOR", "body": "Dear Niels,\n\nI have a library for working with some translate API. By using curl I form request to the server and obtain a string in the format `{\"code\":200,\"lang\":\"ru-en\",\"text\":[hello]}`. After a while I met the issue that my library which had been build with clang dropped with `Segmentation fault` error. \nBelow my test code which works well with `g++ (4.9.2 and 5.2.0)`, but not with `clang++ (3.6.2)`:\n\n``` cpp\n#include <iostream>\n#include <sstream>\n#include \"json.hpp\"\n\nusing json = nlohmann::json;\n\nint main() {\n    std::istringstream is {R\"({\"code\":200,\"lang\":\"ru-en\",\"text\":[\"hello\"]})\"};\n    json d;\n\n    std::cout << is.str() << std::endl;\n\n    is >> d;\n\n    std::cout << d.dump() << std::endl;\n\n    return 0;\n}\n```\n\nAnd also tested such case:\n\n``` cpp\n    std::string s{\"{ \\\"code\\\" : 200 }\"};\n    json d;\n\n    d = json::parse(s);\n```\n\nMy current clang is `version 3.6.2 (tags/RELEASE_362/final)`. I will test it with other version and will tell you if something changes.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/106", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/106/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/106/events", "html_url": "https://github.com/nlohmann/json/issues/106", "id": 97546245, "node_id": "MDU6SXNzdWU5NzU0NjI0NQ==", "number": 106, "title": "maintaining order of keys during iteration", "user": {"login": "nickdesaulniers", "id": 1823839, "node_id": "MDQ6VXNlcjE4MjM4Mzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1823839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickdesaulniers", "html_url": "https://github.com/nickdesaulniers", "followers_url": "https://api.github.com/users/nickdesaulniers/followers", "following_url": "https://api.github.com/users/nickdesaulniers/following{/other_user}", "gists_url": "https://api.github.com/users/nickdesaulniers/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickdesaulniers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickdesaulniers/subscriptions", "organizations_url": "https://api.github.com/users/nickdesaulniers/orgs", "repos_url": "https://api.github.com/users/nickdesaulniers/repos", "events_url": "https://api.github.com/users/nickdesaulniers/events{/privacy}", "received_events_url": "https://api.github.com/users/nickdesaulniers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-07-27T20:18:52Z", "updated_at": "2016-12-10T20:50:06Z", "closed_at": "2015-12-06T15:51:32Z", "author_association": "NONE", "body": "keys in JSON are not sorted, but ordered based on definition. This becomes apparent when iterating keys of an object.  For example, in JavaScript, with an object literal:\n\n``` js\nx = { a: 0, b: 1 }\ny = { b: 0, a: 1 }\nfor (var key in x) console.log(key)\nfor (var key in y) console.log(key)\nfor (var key in JSON.parse(JSON.stringify(x))) console.log(key)\nfor (var key in JSON.parse(JSON.stringify(y))) console.log(key)\n```\n\nprints\n\n```\na\nb\nb\na\na\nb\nb\na\n```\n\nFor example, I believe most JS JITs keep separate shapes for object with the same properties but defined in different orders.\n"}]