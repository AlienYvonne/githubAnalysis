[{"url": "https://api.github.com/repos/nlohmann/json/issues/75", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/75/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/75/events", "html_url": "https://github.com/nlohmann/json/pull/75", "id": 81054779, "node_id": "MDExOlB1bGxSZXF1ZXN0MzYyMjQ2OTY=", "number": 75, "title": "Serialization to ostream and faster string escaping", "user": {"login": "EricMCornelius", "id": 748917, "node_id": "MDQ6VXNlcjc0ODkxNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/748917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EricMCornelius", "html_url": "https://github.com/EricMCornelius", "followers_url": "https://api.github.com/users/EricMCornelius/followers", "following_url": "https://api.github.com/users/EricMCornelius/following{/other_user}", "gists_url": "https://api.github.com/users/EricMCornelius/gists{/gist_id}", "starred_url": "https://api.github.com/users/EricMCornelius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EricMCornelius/subscriptions", "organizations_url": "https://api.github.com/users/EricMCornelius/orgs", "repos_url": "https://api.github.com/users/EricMCornelius/repos", "events_url": "https://api.github.com/users/EricMCornelius/events{/privacy}", "received_events_url": "https://api.github.com/users/EricMCornelius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/1", "html_url": "https://github.com/nlohmann/json/milestone/1", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/1/labels", "id": 1189739, "node_id": "MDk6TWlsZXN0b25lMTE4OTczOQ==", "number": 1, "title": "Release 1.0.0-rc1", "description": "The 1.0.0 release should be the first \"official\" release after the initial announcement of the class in January 2015 via reddit (\"0.1.0\") and a heavily overworked second version (\"0.2.0\") in February. By switching to official releases, I would like to make the class evolution and feature set more predictable. The times of frequent API changes are over.\r\n\r\nThis milestone collects issues that should be finished before a release can be made.", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2015-07-01T21:13:03Z", "updated_at": "2016-01-13T20:02:11Z", "due_on": null, "closed_at": "2016-01-13T20:02:11Z"}, "comments": 6, "created_at": "2015-05-26T17:14:31Z", "updated_at": "2015-07-26T16:42:38Z", "closed_at": "2015-07-26T16:42:05Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/75", "html_url": "https://github.com/nlohmann/json/pull/75", "diff_url": "https://github.com/nlohmann/json/pull/75.diff", "patch_url": "https://github.com/nlohmann/json/pull/75.patch"}, "body": "Opening this to spur discussion - I'm assuming it should actually be added to the re2c file.\n\nAfter doing some performance analysis of an xml => json transformer I'm working on, I discovered that the json.dump() call accounted for a disproportionate amount of the total execution time.\n\nThese changes enable ostream output instead of needing to first buffer the entire formatted output in a string.  \n\nThe alternative string escaping method seems to be quite a bit faster for a broad array of data which I've tested on (~50% on our internal test cases running over approximately 50GB test sets - unfortunately can't share the files as they contain sensitive security data).\n\nBasic concept is to do one pass to find the number of necessary characters to escape, then another pass to actually do the escaping.  This lets it completely avoid another dynamic memory allocation for strings which don't need any escaping, and guarantees only a single allocation in the alternative scenario.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/74", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/74/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/74/events", "html_url": "https://github.com/nlohmann/json/pull/74", "id": 80208129, "node_id": "MDExOlB1bGxSZXF1ZXN0MzYxMDUwNzQ=", "number": 74, "title": "fixed typo in comment", "user": {"login": "RossBencina", "id": 3253274, "node_id": "MDQ6VXNlcjMyNTMyNzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3253274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RossBencina", "html_url": "https://github.com/RossBencina", "followers_url": "https://api.github.com/users/RossBencina/followers", "following_url": "https://api.github.com/users/RossBencina/following{/other_user}", "gists_url": "https://api.github.com/users/RossBencina/gists{/gist_id}", "starred_url": "https://api.github.com/users/RossBencina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RossBencina/subscriptions", "organizations_url": "https://api.github.com/users/RossBencina/orgs", "repos_url": "https://api.github.com/users/RossBencina/repos", "events_url": "https://api.github.com/users/RossBencina/events{/privacy}", "received_events_url": "https://api.github.com/users/RossBencina/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-24T16:48:39Z", "updated_at": "2015-06-02T19:24:21Z", "closed_at": "2015-06-02T19:24:21Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/74", "html_url": "https://github.com/nlohmann/json/pull/74", "diff_url": "https://github.com/nlohmann/json/pull/74.diff", "patch_url": "https://github.com/nlohmann/json/pull/74.patch"}, "body": ""}, {"url": "https://api.github.com/repos/nlohmann/json/issues/73", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/73/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/73/events", "html_url": "https://github.com/nlohmann/json/pull/73", "id": 75614049, "node_id": "MDExOlB1bGxSZXF1ZXN0MzUyMjg5NDY=", "number": 73, "title": " Fix typos", "user": {"login": "aqnouch", "id": 3692812, "node_id": "MDQ6VXNlcjM2OTI4MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3692812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aqnouch", "html_url": "https://github.com/aqnouch", "followers_url": "https://api.github.com/users/aqnouch/followers", "following_url": "https://api.github.com/users/aqnouch/following{/other_user}", "gists_url": "https://api.github.com/users/aqnouch/gists{/gist_id}", "starred_url": "https://api.github.com/users/aqnouch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aqnouch/subscriptions", "organizations_url": "https://api.github.com/users/aqnouch/orgs", "repos_url": "https://api.github.com/users/aqnouch/repos", "events_url": "https://api.github.com/users/aqnouch/events{/privacy}", "received_events_url": "https://api.github.com/users/aqnouch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-12T13:59:48Z", "updated_at": "2015-05-12T15:30:00Z", "closed_at": "2015-05-12T15:29:50Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/73", "html_url": "https://github.com/nlohmann/json/pull/73", "diff_url": "https://github.com/nlohmann/json/pull/73.diff", "patch_url": "https://github.com/nlohmann/json/pull/73.patch"}, "body": ""}, {"url": "https://api.github.com/repos/nlohmann/json/issues/72", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/72/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/72/events", "html_url": "https://github.com/nlohmann/json/pull/72", "id": 74934051, "node_id": "MDExOlB1bGxSZXF1ZXN0MzUwODM1NzY=", "number": 72, "title": "Replace `default_callback` function with `nullptr` and check for null\u2026", "user": {"login": "aburgh", "id": 191582, "node_id": "MDQ6VXNlcjE5MTU4Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/191582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aburgh", "html_url": "https://github.com/aburgh", "followers_url": "https://api.github.com/users/aburgh/followers", "following_url": "https://api.github.com/users/aburgh/following{/other_user}", "gists_url": "https://api.github.com/users/aburgh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aburgh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aburgh/subscriptions", "organizations_url": "https://api.github.com/users/aburgh/orgs", "repos_url": "https://api.github.com/users/aburgh/repos", "events_url": "https://api.github.com/users/aburgh/events{/privacy}", "received_events_url": "https://api.github.com/users/aburgh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-10T14:46:28Z", "updated_at": "2015-05-10T21:47:47Z", "closed_at": "2015-05-10T15:10:47Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/72", "html_url": "https://github.com/nlohmann/json/pull/72", "diff_url": "https://github.com/nlohmann/json/pull/72.diff", "patch_url": "https://github.com/nlohmann/json/pull/72.patch"}, "body": "\u2026 callback function before calling it. This is cleaner and better performing.\n\nThis is in response to your question about performance and the temporary object for the callback. This does not eliminate the temporary object, but it replaces the default callback with a check for null on the callback member variable, which is faster and avoids the temp object in the default case. In the case where the caller has supplied a callback function, presumably the overhead of a temp object is negligible compared to the processing that will be performed in the callback.\n\nIf you would like to optimize the callback to avoid the temp object, the only solution I can think of at the moment is to change the `basic_json` reference parameter of the callback function to a `void *` and require the callback function to cast it to a `string` pointer or `basic_json` pointer based on the event type. This solution sounds really ugly to me, so my vote is in favor of the temp object. \n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/71", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/71/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/71/events", "html_url": "https://github.com/nlohmann/json/pull/71", "id": 74636025, "node_id": "MDExOlB1bGxSZXF1ZXN0MzUwNjQzNzY=", "number": 71, "title": "support enum", "user": {"login": "likebeta", "id": 3068426, "node_id": "MDQ6VXNlcjMwNjg0MjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3068426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/likebeta", "html_url": "https://github.com/likebeta", "followers_url": "https://api.github.com/users/likebeta/followers", "following_url": "https://api.github.com/users/likebeta/following{/other_user}", "gists_url": "https://api.github.com/users/likebeta/gists{/gist_id}", "starred_url": "https://api.github.com/users/likebeta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/likebeta/subscriptions", "organizations_url": "https://api.github.com/users/likebeta/orgs", "repos_url": "https://api.github.com/users/likebeta/repos", "events_url": "https://api.github.com/users/likebeta/events{/privacy}", "received_events_url": "https://api.github.com/users/likebeta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-05-09T09:45:57Z", "updated_at": "2015-06-16T01:57:15Z", "closed_at": "2015-05-09T13:23:51Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/71", "html_url": "https://github.com/nlohmann/json/pull/71", "diff_url": "https://github.com/nlohmann/json/pull/71.diff", "patch_url": "https://github.com/nlohmann/json/pull/71.patch"}, "body": "construct enum type to basic_json (proxy by int type)\n\n```\n    enum { t = 0 };\n    json  j = json::array();\n    j.push_back(t);\n\n    j.push_back(json::object({\n         {\"game_type\", t}\n    }));\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/70", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/70/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/70/events", "html_url": "https://github.com/nlohmann/json/issues/70", "id": 73462498, "node_id": "MDU6SXNzdWU3MzQ2MjQ5OA==", "number": 70, "title": "Handle infinity and NaN cases", "user": {"login": "EricMCornelius", "id": 748917, "node_id": "MDQ6VXNlcjc0ODkxNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/748917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EricMCornelius", "html_url": "https://github.com/EricMCornelius", "followers_url": "https://api.github.com/users/EricMCornelius/followers", "following_url": "https://api.github.com/users/EricMCornelius/following{/other_user}", "gists_url": "https://api.github.com/users/EricMCornelius/gists{/gist_id}", "starred_url": "https://api.github.com/users/EricMCornelius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EricMCornelius/subscriptions", "organizations_url": "https://api.github.com/users/EricMCornelius/orgs", "repos_url": "https://api.github.com/users/EricMCornelius/repos", "events_url": "https://api.github.com/users/EricMCornelius/events{/privacy}", "received_events_url": "https://api.github.com/users/EricMCornelius/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2015-05-05T23:29:51Z", "updated_at": "2017-03-12T17:57:42Z", "closed_at": "2015-05-06T17:52:17Z", "author_association": "NONE", "body": "http://en.cppreference.com/w/cpp/io/c/fprintf\n\nsnprintf will format infinity and nan doubles as Inf/Infinity or nan/nan(char_sequence) respectively.  This  can break the validity of a json.dump() document: https://github.com/nlohmann/json/blob/1580eee4ed36cce2251c42ced420807abe8fa35f/src/json.hpp#L2279\n\nYou can check for infinity/nan w/ std::isinfinite/std::isnan - not sure what you'd like to actually do in those scenarios (some specific/configurable string representation?)\n\nhttp://en.cppreference.com/w/cpp/numeric/math/isfinite\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/69", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/69/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/69/events", "html_url": "https://github.com/nlohmann/json/pull/69", "id": 73016127, "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ2MzYyMzI=", "number": 69, "title": "Fix performance regression introduced with the parsing callback feature.", "user": {"login": "aburgh", "id": 191582, "node_id": "MDQ6VXNlcjE5MTU4Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/191582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aburgh", "html_url": "https://github.com/aburgh", "followers_url": "https://api.github.com/users/aburgh/followers", "following_url": "https://api.github.com/users/aburgh/following{/other_user}", "gists_url": "https://api.github.com/users/aburgh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aburgh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aburgh/subscriptions", "organizations_url": "https://api.github.com/users/aburgh/orgs", "repos_url": "https://api.github.com/users/aburgh/repos", "events_url": "https://api.github.com/users/aburgh/events{/privacy}", "received_events_url": "https://api.github.com/users/aburgh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-05-04T13:15:26Z", "updated_at": "2015-05-11T20:10:34Z", "closed_at": "2015-05-04T13:39:44Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/69", "html_url": "https://github.com/nlohmann/json/pull/69", "diff_url": "https://github.com/nlohmann/json/pull/69.diff", "patch_url": "https://github.com/nlohmann/json/pull/69.patch"}, "body": "Hi Niels, \n\nUpon reviewing the changes I made during our exchange regarding the performance of the callback feature, these two moves appear to account for all of the improvement to get performance back to the non-callback version. \n\nRegards,\n\nAaron\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/68", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/68/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/68/events", "html_url": "https://github.com/nlohmann/json/issues/68", "id": 72853213, "node_id": "MDU6SXNzdWU3Mjg1MzIxMw==", "number": 68, "title": "errors in g++-4.8.1", "user": {"login": "soonhokong", "id": 403281, "node_id": "MDQ6VXNlcjQwMzI4MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/403281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soonhokong", "html_url": "https://github.com/soonhokong", "followers_url": "https://api.github.com/users/soonhokong/followers", "following_url": "https://api.github.com/users/soonhokong/following{/other_user}", "gists_url": "https://api.github.com/users/soonhokong/gists{/gist_id}", "starred_url": "https://api.github.com/users/soonhokong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soonhokong/subscriptions", "organizations_url": "https://api.github.com/users/soonhokong/orgs", "repos_url": "https://api.github.com/users/soonhokong/repos", "events_url": "https://api.github.com/users/soonhokong/events{/privacy}", "received_events_url": "https://api.github.com/users/soonhokong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2015-05-03T19:29:35Z", "updated_at": "2015-05-06T20:41:09Z", "closed_at": "2015-05-06T18:18:22Z", "author_association": "NONE", "body": "g++-4.8.1 generates the following two errors while g++-4.9.2 does not generate any error (OS: ubuntu-12.04).\n\n```\ng++-4.8 -std=c++11    -I src -I test test/unit.cpp  -o json_unit\nIn file included from test/unit.cpp:25:0:\nsrc/json.hpp: In instantiation of \u2018T nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::erase(T) [with T = nlohmann::basic_json<>::const_iterator; typename std::enable_if<(std::is_same<V, nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::iterator>::value || std::is_same<V, nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::const_iterator>::value), int>::type <anonymous> = 0; ObjectType = std::map; ArrayType = std::vector; StringType = std::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberFloatType = double; AllocatorType = std::allocator]\u2019:\ntest/unit.cpp:2655:80:   required from here\nsrc/json.hpp:1286:44: error: no matching function for call to \u2018std::vector<nlohmann::basic_json<> >::erase(__gnu_cxx::__normal_iterator<const nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >&)\u2019\n                 result.m_it.array_iterator = m_value.array->erase(pos.m_it.array_iterator);\n                                            ^\nsrc/json.hpp:1286:44: note: candidates are:\nIn file included from /usr/include/c++/4.8/vector:69:0,\n                 from /usr/include/c++/4.8/bits/random.h:34,\n                 from /usr/include/c++/4.8/random:50,\n                 from /usr/include/c++/4.8/bits/stl_algo.h:65,\n                 from /usr/include/c++/4.8/algorithm:62,\n                 from test/catch.hpp:62,\n                 from test/unit.cpp:11:\n/usr/include/c++/4.8/bits/vector.tcc:134:5: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::iterator) [with _Tp = nlohmann::basic_json<>; _Alloc = std::allocator<nlohmann::basic_json<> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = nlohmann::basic_json<>*]\n     vector<_Tp, _Alloc>::\n     ^\n/usr/include/c++/4.8/bits/vector.tcc:134:5: note:   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<const nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >\u2019 to \u2018std::vector<nlohmann::basic_json<> >::iterator {aka __gnu_cxx::__normal_iterator<nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >}\u2019\n/usr/include/c++/4.8/bits/vector.tcc:146:5: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::iterator) [with _Tp = nlohmann::basic_json<>; _Alloc = std::allocator<nlohmann::basic_json<> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = nlohmann::basic_json<>*]\n     vector<_Tp, _Alloc>::\n     ^\n/usr/include/c++/4.8/bits/vector.tcc:146:5: note:   candidate expects 2 arguments, 1 provided\nIn file included from test/unit.cpp:25:0:\nsrc/json.hpp: In instantiation of \u2018T nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::erase(T, T) [with T = nlohmann::basic_json<>::const_iterator; typename std::enable_if<(std::is_same<V, nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::iterator>::value || std::is_same<V, nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberFloatType, AllocatorType>::const_iterator>::value), int>::type <anonymous> = 0; ObjectType = std::map; ArrayType = std::vector; StringType = std::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberFloatType = double; AllocatorType = std::allocator]\u2019:\ntest/unit.cpp:2671:95:   required from here\nsrc/json.hpp:1348:44: error: no matching function for call to \u2018std::vector<nlohmann::basic_json<> >::erase(__gnu_cxx::__normal_iterator<const nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >&, __gnu_cxx::__normal_iterator<const nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >&)\u2019\n                 result.m_it.array_iterator = m_value.array->erase(first.m_it.array_iterator,\n                                            ^\nsrc/json.hpp:1348:44: note: candidates are:\nIn file included from /usr/include/c++/4.8/vector:69:0,\n                 from /usr/include/c++/4.8/bits/random.h:34,\n                 from /usr/include/c++/4.8/random:50,\n                 from /usr/include/c++/4.8/bits/stl_algo.h:65,\n                 from /usr/include/c++/4.8/algorithm:62,\n                 from test/catch.hpp:62,\n                 from test/unit.cpp:11:\n/usr/include/c++/4.8/bits/vector.tcc:134:5: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::iterator) [with _Tp = nlohmann::basic_json<>; _Alloc = std::allocator<nlohmann::basic_json<> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = nlohmann::basic_json<>*]\n     vector<_Tp, _Alloc>::\n     ^\n/usr/include/c++/4.8/bits/vector.tcc:134:5: note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/4.8/bits/vector.tcc:146:5: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::iterator) [with _Tp = nlohmann::basic_json<>; _Alloc = std::allocator<nlohmann::basic_json<> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = nlohmann::basic_json<>*]\n     vector<_Tp, _Alloc>::\n     ^\n/usr/include/c++/4.8/bits/vector.tcc:146:5: note:   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<const nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >\u2019 to \u2018std::vector<nlohmann::basic_json<> >::iterator {aka __gnu_cxx::__normal_iterator<nlohmann::basic_json<>*, std::vector<nlohmann::basic_json<> > >}\u2019\nmake: *** [json_unit] Error 1\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/67", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/67/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/67/events", "html_url": "https://github.com/nlohmann/json/issues/67", "id": 72680672, "node_id": "MDU6SXNzdWU3MjY4MDY3Mg==", "number": 67, "title": "Keys when iterating over objects", "user": {"login": "mlund", "id": 3248398, "node_id": "MDQ6VXNlcjMyNDgzOTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3248398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlund", "html_url": "https://github.com/mlund", "followers_url": "https://api.github.com/users/mlund/followers", "following_url": "https://api.github.com/users/mlund/following{/other_user}", "gists_url": "https://api.github.com/users/mlund/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlund/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlund/subscriptions", "organizations_url": "https://api.github.com/users/mlund/orgs", "repos_url": "https://api.github.com/users/mlund/repos", "events_url": "https://api.github.com/users/mlund/events{/privacy}", "received_events_url": "https://api.github.com/users/mlund/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-05-02T18:34:19Z", "updated_at": "2015-05-03T16:14:01Z", "closed_at": "2015-05-03T13:16:42Z", "author_association": "NONE", "body": "I'm trying to iterate over a json input file containing an unknown number of molecules (see below). For each of these the key is the name which I currently have found no way to extract. Is this possible?\n\nCode:\n\n``` c++\n#include <faunus/json.hpp>\n#include <iostream>\n#include <fstream>\n\n/*\n * minimal.json:\n * {\n *   \"moleculelist\" : { \n *     \"salt\" : { \"atoms\":\"Na Cl\", \"atomic\":true, \"Ninit\":1 },\n *     \"water\" : { \"atoms\":\"H H O\", \"atomic\":false, \"Ninit\":55 }\n *   }\n * }\n */\n\nusing json = nlohmann::json;\n\nint main() {\n  std::ifstream f(\"minimal.json\");\n  if (f) {\n    json j;\n    j << f;\n    if ( ! j[\"moleculelist\"].empty() )\n      for ( auto &mol : j[\"moleculelist\"] )\n        if ( mol.is_object() ) {\n          // how to get entry keys? (i.e. \"salt\", \"water\", etc.)\n          for ( auto &i : mol )\n            std::cout << i << \"\\n\";\n        }\n  }\n}\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/66", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/66/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/66/events", "html_url": "https://github.com/nlohmann/json/issues/66", "id": 72561373, "node_id": "MDU6SXNzdWU3MjU2MTM3Mw==", "number": 66, "title": "Consider submitting this to the Boost Library Incubator", "user": {"login": "robertramey", "id": 1970652, "node_id": "MDQ6VXNlcjE5NzA2NTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1970652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robertramey", "html_url": "https://github.com/robertramey", "followers_url": "https://api.github.com/users/robertramey/followers", "following_url": "https://api.github.com/users/robertramey/following{/other_user}", "gists_url": "https://api.github.com/users/robertramey/gists{/gist_id}", "starred_url": "https://api.github.com/users/robertramey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robertramey/subscriptions", "organizations_url": "https://api.github.com/users/robertramey/orgs", "repos_url": "https://api.github.com/users/robertramey/repos", "events_url": "https://api.github.com/users/robertramey/events{/privacy}", "received_events_url": "https://api.github.com/users/robertramey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2015-05-02T01:17:36Z", "updated_at": "2015-12-29T11:24:34Z", "closed_at": "2015-12-29T11:24:34Z", "author_association": "NONE", "body": "www.blincubator.com\n\nRobert Ramey\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/65", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/65/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/65/events", "html_url": "https://github.com/nlohmann/json/issues/65", "id": 72516805, "node_id": "MDU6SXNzdWU3MjUxNjgwNQ==", "number": 65, "title": "Wishlist", "user": {"login": "jwaterloo", "id": 10145988, "node_id": "MDQ6VXNlcjEwMTQ1OTg4", "avatar_url": "https://avatars2.githubusercontent.com/u/10145988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwaterloo", "html_url": "https://github.com/jwaterloo", "followers_url": "https://api.github.com/users/jwaterloo/followers", "following_url": "https://api.github.com/users/jwaterloo/following{/other_user}", "gists_url": "https://api.github.com/users/jwaterloo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwaterloo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwaterloo/subscriptions", "organizations_url": "https://api.github.com/users/jwaterloo/orgs", "repos_url": "https://api.github.com/users/jwaterloo/repos", "events_url": "https://api.github.com/users/jwaterloo/events{/privacy}", "received_events_url": "https://api.github.com/users/jwaterloo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-05-01T20:32:46Z", "updated_at": "2016-11-13T22:38:10Z", "closed_at": "2015-12-14T14:30:35Z", "author_association": "NONE", "body": "A common use case in web development is the need for flatten and unflatten functions, that is the ability to flatten a json object into a map of javascript assignment strings and vice versa.\n\n{\n\"member1\" : true,\n\"member2\" : \"Hello World\",\n\"member3\" : [1, {\"member4\" : 4, \"member5\" : 6.5}, 3]\n}\n\ninto\n\nprefix \"whatever\"\n\nkey = whatever.member1\nvalue = true\nkey = whatever.member2\nvalue = \"Hello World\"\nkey = whatever.member3[0]\nvalue = 1\nkey = whatever.member1[1].member4\nvalue = 4\nkey = whatever.member1[1].member5\nvalue = 6.5\nkey = whatever.member3[2]\nvalue = 3\n\nfunction sighatures would be something like\n\nmap&lt;string, json_primitive_that_insn't_object_or_array&gt; flatten(json_object_or_array, symbol_name);\njson_object_or_array unflatten(map&lt;string, json_primitive_that_insn't_object_or_array&gt;, symbol_name);\n\nThe type of the map would be string to a json primitive that isn't an object or an array.\n\nThe use case is that the keys in the map could be used as form field names. PHP and jQuery both are already doing this natively. Wouldn't it be nice if C++ had equal or better footing for web development.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/64", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/64/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/64/events", "html_url": "https://github.com/nlohmann/json/issues/64", "id": 72137834, "node_id": "MDU6SXNzdWU3MjEzNzgzNA==", "number": 64, "title": "Compilation results in tons of warnings", "user": {"login": "JeffAbrahamson", "id": 1220683, "node_id": "MDQ6VXNlcjEyMjA2ODM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1220683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeffAbrahamson", "html_url": "https://github.com/JeffAbrahamson", "followers_url": "https://api.github.com/users/JeffAbrahamson/followers", "following_url": "https://api.github.com/users/JeffAbrahamson/following{/other_user}", "gists_url": "https://api.github.com/users/JeffAbrahamson/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeffAbrahamson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeffAbrahamson/subscriptions", "organizations_url": "https://api.github.com/users/JeffAbrahamson/orgs", "repos_url": "https://api.github.com/users/JeffAbrahamson/repos", "events_url": "https://api.github.com/users/JeffAbrahamson/events{/privacy}", "received_events_url": "https://api.github.com/users/JeffAbrahamson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2015-04-30T11:54:04Z", "updated_at": "2015-05-01T09:57:36Z", "closed_at": "2015-05-01T09:57:22Z", "author_association": "NONE", "body": "\u256d\u2574 (master=)\u2576\u256e\n\u2570 jeff@siegfried:json $ uname -a\nLinux siegfried 3.16.0-33-generic #44-Ubuntu SMP Thu Mar 12 12:19:35 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux\n\u256d\u2574 (master=)\u2576\u256e\n\u2570 jeff@siegfried:json $ make\ng++ -std=c++11  -Wall -Wextra -pedantic -Weffc++ -Wcast-align -Wcast-qual -Wctor-dtor-privacy -Wdisabled-optimization -Wformat=2 -Winit-self -Wmissing-declarations -Wmissing-include-dirs -Wold-style-cast -Woverloaded-virtual -Wredundant-decls -Wshadow -Wsign-conversion -Wsign-promo -Wstrict-overflow=5 -Wswitch -Wundef -Wno-unused -Wnon-virtual-dtor -Wreorder -Wdeprecated -Wfloat-equal  -I src -I test test/unit.cpp  -o json_unit\nIn file included from test/unit.cpp:11:0:\ntest/catch.hpp:264:57: warning: \u2018const T& Catch::operator+(const T&, Catch::StreamEndStop)\u2019 should return by value [-Weffc++]\n     T const& operator + ( T const& value, StreamEndStop ) {\n                                                         ^\ntest/catch.hpp: In copy constructor \u2018Catch::NotImplementedException::NotImplementedException(const Catch::NotImplementedException&)\u2019:\ntest/catch.hpp:280:9: warning: \u2018Catch::NotImplementedException::m_what\u2019 should be initialized in the member initialization list [-Weffc++]\n         NotImplementedException( NotImplementedException const& ) {}\n         ^\ntest/catch.hpp:280:9: warning: \u2018Catch::NotImplementedException::m_lineInfo\u2019 should be initialized in the member initialization list [-Weffc++]\nIn file included from test/unit.cpp:11:0:\ntest/catch.hpp: At global scope:\ntest/catch.hpp:478:7: warning: \u2018class Catch::MethodTestCase<C>\u2019 only defines a private destructor and has no friends [-Wctor-dtor-privacy]\n class MethodTestCase : public SharedImpl<ITestCase> {\n       ^\ntest/catch.hpp: In constructor \u2018Catch::AssertionInfo::AssertionInfo()\u2019:\ntest/catch.hpp:645:9: warning: \u2018Catch::AssertionInfo::macroName\u2019 should be initialized in the member initialization list [-Weffc++]\n         AssertionInfo() {}\n         ^\ntest/catch.hpp:645:9: warning: \u2018Catch::AssertionInfo::lineInfo\u2019 should be initialized in the member initialization list [-Weffc++]\ntest/catch.hpp:645:9: warning: \u2018Catch::AssertionInfo::capturedExpression\u2019 should be initialized in the member initialization list [-Weffc++]\ntest/catch.hpp:645:9: warning: \u2018Catch::AssertionInfo::resultDisposition\u2019 should be initialized in the member initialization list [-Weffc++]\ntest/catch.hpp: In constructor \u2018Catch::AssertionResultData::AssertionResultData()\u2019:\ntest/catch.hpp:659:9: warning: \u2018Catch::AssertionResultData::reconstructedExpression\u2019 should be initialized in the member initialization list [-Weffc++]\n         AssertionResultData() : resultType( ResultWas::Unknown ) {}\n         ^\ntest/catch.hpp:659:9: warning: \u2018Catch::AssertionResultData::message\u2019 should be initialized in the member initialization list [-Weffc++]\n\n...\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/63", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/63/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/63/events", "html_url": "https://github.com/nlohmann/json/pull/63", "id": 71063911, "node_id": "MDExOlB1bGxSZXF1ZXN0MzQxMjI3NTI=", "number": 63, "title": "Improve the implementations of the comparission-operators", "user": {"login": "Florianjw", "id": 554592, "node_id": "MDQ6VXNlcjU1NDU5Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/554592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Florianjw", "html_url": "https://github.com/Florianjw", "followers_url": "https://api.github.com/users/Florianjw/followers", "following_url": "https://api.github.com/users/Florianjw/following{/other_user}", "gists_url": "https://api.github.com/users/Florianjw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Florianjw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Florianjw/subscriptions", "organizations_url": "https://api.github.com/users/Florianjw/orgs", "repos_url": "https://api.github.com/users/Florianjw/repos", "events_url": "https://api.github.com/users/Florianjw/events{/privacy}", "received_events_url": "https://api.github.com/users/Florianjw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-04-26T13:00:32Z", "updated_at": "2015-04-26T13:11:01Z", "closed_at": "2015-04-26T13:10:32Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/63", "html_url": "https://github.com/nlohmann/json/pull/63", "diff_url": "https://github.com/nlohmann/json/pull/63.diff", "patch_url": "https://github.com/nlohmann/json/pull/63.patch"}, "body": "As the title says, just one thing should be noted:\n\nUntil now, `integer<float` used integer-comparission, while `float<integer` worked on floats. I believe that this was at best questionable behavior, at worst a bug. This pull-request changes that to always work on floats, which might break code (that would then however have been broken to begin with).\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/62", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/62/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/62/events", "html_url": "https://github.com/nlohmann/json/issues/62", "id": 70944091, "node_id": "MDU6SXNzdWU3MDk0NDA5MQ==", "number": 62, "title": "Windows/Visual Studio (through 2013) is unsupported", "user": {"login": "smiley", "id": 354181, "node_id": "MDQ6VXNlcjM1NDE4MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/354181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smiley", "html_url": "https://github.com/smiley", "followers_url": "https://api.github.com/users/smiley/followers", "following_url": "https://api.github.com/users/smiley/following{/other_user}", "gists_url": "https://api.github.com/users/smiley/gists{/gist_id}", "starred_url": "https://api.github.com/users/smiley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smiley/subscriptions", "organizations_url": "https://api.github.com/users/smiley/orgs", "repos_url": "https://api.github.com/users/smiley/repos", "events_url": "https://api.github.com/users/smiley/events{/privacy}", "received_events_url": "https://api.github.com/users/smiley/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 42, "created_at": "2015-04-25T17:50:57Z", "updated_at": "2016-11-13T22:38:10Z", "closed_at": "2015-12-14T14:31:04Z", "author_association": "NONE", "body": "I was about to use this for a C++ project in Visual Studio 2013, but the header fails compilation entirely, thanks to a myriad of errors:\n\n```\n1>------ Build started: Project: jsondummy, Configuration: Debug Win32 ------\n1>  main.cpp\n1>d:\\github\\jsondummy\\src\\json.hpp(137): error C2061: syntax error : identifier 'iterator'\n1>          d:\\github\\jsondummy\\src\\json.hpp(4893) : see reference to class template instantiation 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>' being compiled\n1>d:\\github\\jsondummy\\src\\json.hpp(137): error C2238: unexpected token(s) preceding ';'\n1>d:\\github\\jsondummy\\src\\json.hpp(143): error C2061: syntax error : identifier 'const_iterator'\n1>d:\\github\\jsondummy\\src\\json.hpp(143): error C2238: unexpected token(s) preceding ';'\n1>d:\\github\\jsondummy\\src\\json.hpp(149): error C2061: syntax error : identifier 'reverse_iterator'\n1>d:\\github\\jsondummy\\src\\json.hpp(149): error C2238: unexpected token(s) preceding ';'\n1>d:\\github\\jsondummy\\src\\json.hpp(155): error C2061: syntax error : identifier 'const_reverse_iterator'\n1>d:\\github\\jsondummy\\src\\json.hpp(155): error C2238: unexpected token(s) preceding ';'\n1>d:\\github\\jsondummy\\src\\json.hpp(382): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(385): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(402): warning C4346: 'std::is_constructible<ObjectType<StringType,nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,>::key_type,V::key_type>::value' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(402): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(402): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(402): error C2143: syntax error : missing ',' before 'std::is_constructible<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,V::mapped_type>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(402): error C2977: 'std::enable_if' : too many template arguments\n1>          c:\\program files (x86)\\microsoft visual studio 12.0\\vc\\include\\xtr1common(67) : see declaration of 'std::enable_if'\n1>d:\\github\\jsondummy\\src\\json.hpp(403): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int\n1>d:\\github\\jsondummy\\src\\json.hpp(426): error C2065: 'not' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(426): warning C4346: 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::iterator' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(426): error C2923: 'std::is_same' : 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::iterator' is not a valid template type argument for parameter '_Ty2'\n1>d:\\github\\jsondummy\\src\\json.hpp(426): error C2143: syntax error : missing ',' before 'std::integral_constant<bool,false>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(427): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(427): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(427): error C2146: syntax error : missing ',' before identifier 'not'\n1>d:\\github\\jsondummy\\src\\json.hpp(427): error C2065: 'not' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(427): warning C4346: 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::const_iterator' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(427): error C2923: 'std::is_same' : 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::const_iterator' is not a valid template type argument for parameter '_Ty2'\n1>d:\\github\\jsondummy\\src\\json.hpp(427): error C2143: syntax error : missing ',' before 'std::integral_constant<bool,false>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(428): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(428): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(428): error C2146: syntax error : missing ',' before identifier 'not'\n1>d:\\github\\jsondummy\\src\\json.hpp(428): error C2065: 'not' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(428): warning C4346: 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::reverse_iterator' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(428): error C2923: 'std::is_same' : 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::reverse_iterator' is not a valid template type argument for parameter '_Ty2'\n1>d:\\github\\jsondummy\\src\\json.hpp(428): error C2143: syntax error : missing ',' before 'std::integral_constant<bool,false>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(429): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(429): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(429): error C2146: syntax error : missing ',' before identifier 'not'\n1>d:\\github\\jsondummy\\src\\json.hpp(429): error C2065: 'not' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(429): warning C4346: 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::const_reverse_iterator' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(429): error C2923: 'std::is_same' : 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::const_reverse_iterator' is not a valid template type argument for parameter '_Ty2'\n1>d:\\github\\jsondummy\\src\\json.hpp(429): error C2143: syntax error : missing ',' before 'std::integral_constant<bool,false>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(430): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(430): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(430): error C2146: syntax error : missing ',' before identifier 'not'\n1>d:\\github\\jsondummy\\src\\json.hpp(430): error C2065: 'not' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(430): error C2143: syntax error : missing ',' before 'std::is_same<V,ArrayType<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,>::iterator>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(431): warning C4346: 'std::is_same<V,ArrayType<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,>::iterator>::value' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(431): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(431): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(431): error C2146: syntax error : missing ',' before identifier 'not'\n1>d:\\github\\jsondummy\\src\\json.hpp(431): error C2065: 'not' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(431): error C2143: syntax error : missing ',' before 'std::is_same<V,ArrayType<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,>::const_iterator>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(432): warning C4346: 'std::is_same<V,ArrayType<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,>::const_iterator>::value' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(432): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(432): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(432): error C2143: syntax error : missing ',' before 'std::is_constructible<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,V::value_type>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(432): error C2977: 'std::enable_if' : too many template arguments\n1>          c:\\program files (x86)\\microsoft visual studio 12.0\\vc\\include\\xtr1common(67) : see declaration of 'std::enable_if'\n1>d:\\github\\jsondummy\\src\\json.hpp(433): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int\n1>d:\\github\\jsondummy\\src\\json.hpp(434): error C2535: 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::basic_json(const V &)' : member function already defined or declared\n1>          d:\\github\\jsondummy\\src\\json.hpp(404) : see declaration of 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::basic_json'\n1>d:\\github\\jsondummy\\src\\json.hpp(485): warning C4346: 'std::is_constructible<NumberIntegerType,T>::value' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(485): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(485): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(485): error C2143: syntax error : missing ',' before 'std::numeric_limits<T>::is_integer'\n1>d:\\github\\jsondummy\\src\\json.hpp(485): error C2977: 'std::enable_if' : too many template arguments\n1>          c:\\program files (x86)\\microsoft visual studio 12.0\\vc\\include\\xtr1common(67) : see declaration of 'std::enable_if'\n1>d:\\github\\jsondummy\\src\\json.hpp(486): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int\n1>d:\\github\\jsondummy\\src\\json.hpp(487): warning C4346: 'std::numeric_limits<T>::is_integer' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(487): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(502): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(594): warning C4346: 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::iterator' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(594): error C2923: 'std::is_same' : 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::iterator' is not a valid template type argument for parameter '_Ty2'\n1>d:\\github\\jsondummy\\src\\json.hpp(595): error C2146: syntax error : missing ',' before identifier 'or'\n1>d:\\github\\jsondummy\\src\\json.hpp(595): error C2065: 'or' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(595): warning C4346: 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::const_iterator' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(595): error C2923: 'std::is_same' : 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::const_iterator' is not a valid template type argument for parameter '_Ty2'\n1>d:\\github\\jsondummy\\src\\json.hpp(596): error C2143: syntax error : missing ',' before 'std::integral_constant<bool,false>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(596): error C2977: 'std::enable_if' : too many template arguments\n1>          c:\\program files (x86)\\microsoft visual studio 12.0\\vc\\include\\xtr1common(67) : see declaration of 'std::enable_if'\n1>d:\\github\\jsondummy\\src\\json.hpp(597): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int\n1>d:\\github\\jsondummy\\src\\json.hpp(748): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(761): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(762): warning C4346: 'std::is_nothrow_move_constructible<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>::value_t>::value' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(762): error C2061: syntax error : identifier 'value'\n1>d:\\github\\jsondummy\\src\\json.hpp(767): error C2091: function returns function\n1>d:\\github\\jsondummy\\src\\json.hpp(779): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(838): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(851): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(857): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(863): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(869): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(875): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(881): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(887): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(893): error C3646: 'noexcept' : unknown override specifier\n1>d:\\github\\jsondummy\\src\\json.hpp(906): warning C4346: 'std::is_convertible<ObjectType<StringType,nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,>::key_type,T::key_type>::value' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(906): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(906): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(907): error C2143: syntax error : missing ',' before 'std::is_convertible<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,T::mapped_type>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(907): error C2977: 'std::enable_if' : too many template arguments\n1>          c:\\program files (x86)\\microsoft visual studio 12.0\\vc\\include\\xtr1common(67) : see declaration of 'std::enable_if'\n1>d:\\github\\jsondummy\\src\\json.hpp(907): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int\n1>d:\\github\\jsondummy\\src\\json.hpp(943): warning C4346: 'std::is_convertible<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,T::value_type>::value' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(943): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(943): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(943): error C2146: syntax error : missing ',' before identifier 'not'\n1>d:\\github\\jsondummy\\src\\json.hpp(943): error C2065: 'not' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(943): error C2143: syntax error : missing ',' before 'std::is_same<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,T::value_type>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(944): warning C4346: 'std::is_same<nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,AllocatorType>,T::value_type>::value' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(944): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(944): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(944): error C2146: syntax error : missing ',' before identifier 'not'\n1>d:\\github\\jsondummy\\src\\json.hpp(944): error C2065: 'not' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(944): error C2143: syntax error : missing ',' before 'std::is_arithmetic<T>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(945): warning C4346: 'std::is_arithmetic<T>::value' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(945): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(945): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(945): error C2146: syntax error : missing ',' before identifier 'not'\n1>d:\\github\\jsondummy\\src\\json.hpp(945): error C2065: 'not' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(945): error C2143: syntax error : missing ',' before 'std::is_convertible<std::string,T>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(946): warning C4346: 'std::is_convertible<std::string,T>::value' : dependent name is not a type\n1>          prefix with 'typename' to indicate a type\n1>d:\\github\\jsondummy\\src\\json.hpp(946): error C2146: syntax error : missing ',' before identifier 'and'\n1>d:\\github\\jsondummy\\src\\json.hpp(946): error C2065: 'and' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(946): error C2146: syntax error : missing ',' before identifier 'not'\n1>d:\\github\\jsondummy\\src\\json.hpp(946): error C2065: 'not' : undeclared identifier\n1>d:\\github\\jsondummy\\src\\json.hpp(947): error C2143: syntax error : missing ',' before 'nlohmann::has_mapped_type<T>::value'\n1>d:\\github\\jsondummy\\src\\json.hpp(947): error C2977: 'std::enable_if' : too many template arguments\n1>          c:\\program files (x86)\\microsoft visual studio 12.0\\vc\\include\\xtr1common(67) : see declaration of 'std::enable_if'\n1>d:\\github\\jsondummy\\src\\json.hpp(947): fatal error C1003: error count exceeds 100; stopping compilation\n========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========\n```\n\nThis is on VS2013, and as far as I know it supports [90% of the standard](https://msdn.microsoft.com/en-us/library/hh567368.aspx?f=255&MSPPError=-2147217396) (but not some of what you're using here, like `noexcept`).\n\nAre you planning to support Visual Studio/Windows some time later on?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/61", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/61/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/61/events", "html_url": "https://github.com/nlohmann/json/issues/61", "id": 70819875, "node_id": "MDU6SXNzdWU3MDgxOTg3NQ==", "number": 61, "title": "Complete brief documentation", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-24T23:22:42Z", "updated_at": "2015-06-22T21:30:58Z", "closed_at": "2015-06-22T21:30:58Z", "author_association": "OWNER", "body": "The following functions are not yet documented:\n- [ ] type\n- [ ] push_back\n- [ ] operator+=\n- [ ] swap\n- [ ] find\n- [ ] count\n- [ ] dump\n- [ ] parse\n- [ ] operator==, operator!=, operator<, operator<=, operator>, operator>=\n- [ ] std::swap\n- [ ] std::hash\n- [ ] operator<<, operator>>\n- [ ] operator\"\" _json\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/60", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/60/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/60/events", "html_url": "https://github.com/nlohmann/json/issues/60", "id": 69392571, "node_id": "MDU6SXNzdWU2OTM5MjU3MQ==", "number": 60, "title": "Double quotation mark is not parsed correctly", "user": {"login": "miloyip", "id": 1195774, "node_id": "MDQ6VXNlcjExOTU3NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1195774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miloyip", "html_url": "https://github.com/miloyip", "followers_url": "https://api.github.com/users/miloyip/followers", "following_url": "https://api.github.com/users/miloyip/following{/other_user}", "gists_url": "https://api.github.com/users/miloyip/gists{/gist_id}", "starred_url": "https://api.github.com/users/miloyip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miloyip/subscriptions", "organizations_url": "https://api.github.com/users/miloyip/orgs", "repos_url": "https://api.github.com/users/miloyip/repos", "events_url": "https://api.github.com/users/miloyip/events{/privacy}", "received_events_url": "https://api.github.com/users/miloyip/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2015-04-19T06:36:04Z", "updated_at": "2015-04-24T20:07:04Z", "closed_at": "2015-04-24T20:07:04Z", "author_association": "NONE", "body": "In JSON, double quotation mark in a JSON string is escaped as `\\\"`, such as\n\n``` js\n[\"\\\"foo\\\"\"]\n```\n\nshould be escaped as `\"foo\"`. But this library did not handle it and parsed it as `\\\"foo\\\"`.\n\nI reproduced the bug with the following test case:\n\n``` cpp\n    SECTION(\"escape_dobulequote\")\n    {\n        auto s = \"[\\\"\\\\\\\"foo\\\\\\\"\\\"]\";\n        json j = json::parse(s);\n        CHECK(j == json({\"\\\"foo\\\"\"}));\n    }\n```\n\nResults:\n\n```\ntest/unit.cpp:6351: FAILED:\n  CHECK( j == json({\"\\\"foo\\\"\"}) )\nwith expansion:\n  [\"\\\\\\\"foo\\\\\\\"\"] == \"\\\"foo\\\"\"\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/59", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/59/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/59/events", "html_url": "https://github.com/nlohmann/json/pull/59", "id": 68387177, "node_id": "MDExOlB1bGxSZXF1ZXN0MzMyNjA0NTc=", "number": 59, "title": "Fix compilation of json_unit with GCC 5", "user": {"login": "dkopecek", "id": 1353140, "node_id": "MDQ6VXNlcjEzNTMxNDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1353140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkopecek", "html_url": "https://github.com/dkopecek", "followers_url": "https://api.github.com/users/dkopecek/followers", "following_url": "https://api.github.com/users/dkopecek/following{/other_user}", "gists_url": "https://api.github.com/users/dkopecek/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkopecek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkopecek/subscriptions", "organizations_url": "https://api.github.com/users/dkopecek/orgs", "repos_url": "https://api.github.com/users/dkopecek/repos", "events_url": "https://api.github.com/users/dkopecek/events{/privacy}", "received_events_url": "https://api.github.com/users/dkopecek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-14T14:07:23Z", "updated_at": "2015-04-15T07:44:58Z", "closed_at": "2015-04-15T06:53:40Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/59", "html_url": "https://github.com/nlohmann/json/pull/59", "diff_url": "https://github.com/nlohmann/json/pull/59.diff", "patch_url": "https://github.com/nlohmann/json/pull/59.patch"}, "body": "Addressing:\n\n```\n+ make json_unit\ng++ -std=c++11  -Wall -Wextra -pedantic -Weffc++ -Wcast-align -Wcast-qual -Wctor-dtor-privacy -Wdisabled-optimization -Wformat=2 -Winit-self -Wmissing-declarations -Wmissing-include-dirs -Wold-style-cast -Woverloaded-virtual -Wredundant-decls -Wshadow -Wsign-conversion -Wsign-promo -Wstrict-overflow=5 -Wswitch -Wundef -Wno-unused -Wnon-virtual-dtor -Wreorder -Wdeprecated -Wfloat-equal  -I src -I test -Dprivate=public test/unit.cpp  -o json_unit\nIn file included from test/catch.hpp:65:0,\n                 from test/unit.cpp:11:\n/usr/include/c++/5.0.0/sstream:300:7: error: 'struct std::__cxx11::basic_stringbuf<_CharT, _Traits, _Alloc>::__xfer_bufptrs' redeclared with different access\n       struct __xfer_bufptrs\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/58", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/58/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/58/events", "html_url": "https://github.com/nlohmann/json/issues/58", "id": 67934042, "node_id": "MDU6SXNzdWU2NzkzNDA0Mg==", "number": 58, "title": "Get coverage back to 100%", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-12T16:50:51Z", "updated_at": "2015-05-09T13:22:54Z", "closed_at": "2015-05-09T13:22:54Z", "author_association": "OWNER", "body": "There are currently some lines that are not covered by test cases:\n- [x] https://coveralls.io/builds/2320536/source?filename=src%2Fjson.hpp#L4168\n- [x] https://coveralls.io/builds/2320536/source?filename=src%2Fjson.hpp#L4152\n- [x] https://coveralls.io/builds/2320536/source?filename=src%2Fjson.hpp#L4185\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/57", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/57/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/57/events", "html_url": "https://github.com/nlohmann/json/issues/57", "id": 67416401, "node_id": "MDU6SXNzdWU2NzQxNjQwMQ==", "number": 57, "title": "erase elements using iterators", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2015-04-09T17:53:13Z", "updated_at": "2016-11-13T22:38:10Z", "closed_at": "2015-04-11T13:48:31Z", "author_association": "OWNER", "body": "Just as other containers, iterators should be used to identify the element to be deleted from a container.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/56", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/56/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/56/events", "html_url": "https://github.com/nlohmann/json/issues/56", "id": 67087425, "node_id": "MDU6SXNzdWU2NzA4NzQyNQ==", "number": 56, "title": "Removing item from array", "user": {"login": "drewpts", "id": 10561098, "node_id": "MDQ6VXNlcjEwNTYxMDk4", "avatar_url": "https://avatars2.githubusercontent.com/u/10561098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewpts", "html_url": "https://github.com/drewpts", "followers_url": "https://api.github.com/users/drewpts/followers", "following_url": "https://api.github.com/users/drewpts/following{/other_user}", "gists_url": "https://api.github.com/users/drewpts/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewpts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewpts/subscriptions", "organizations_url": "https://api.github.com/users/drewpts/orgs", "repos_url": "https://api.github.com/users/drewpts/repos", "events_url": "https://api.github.com/users/drewpts/events{/privacy}", "received_events_url": "https://api.github.com/users/drewpts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-04-08T09:22:10Z", "updated_at": "2016-11-13T22:38:09Z", "closed_at": "2015-04-09T16:59:29Z", "author_association": "NONE", "body": "Hi. Thanks for great lib!\nIs there support for removing item/items from array?\n\nE.g.:\n\n``` cpp\n        json j;\n        j[\"name\"] = { \"testname\", \"yetanothername\" };\n        j[\"name\"].erase(\"testname\");\n```\n\n```\n$ ./a.out \nterminate called after throwing an instance of 'std::runtime_error'\nwhat():  cannot use at with array\n```\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/55", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/55/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/55/events", "html_url": "https://github.com/nlohmann/json/issues/55", "id": 66730656, "node_id": "MDU6SXNzdWU2NjczMDY1Ng==", "number": 55, "title": "Serialize/Deserialize like PHP?", "user": {"login": "irazasyed", "id": 1915268, "node_id": "MDQ6VXNlcjE5MTUyNjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1915268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irazasyed", "html_url": "https://github.com/irazasyed", "followers_url": "https://api.github.com/users/irazasyed/followers", "following_url": "https://api.github.com/users/irazasyed/following{/other_user}", "gists_url": "https://api.github.com/users/irazasyed/gists{/gist_id}", "starred_url": "https://api.github.com/users/irazasyed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irazasyed/subscriptions", "organizations_url": "https://api.github.com/users/irazasyed/orgs", "repos_url": "https://api.github.com/users/irazasyed/repos", "events_url": "https://api.github.com/users/irazasyed/events{/privacy}", "received_events_url": "https://api.github.com/users/irazasyed/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2015-04-06T23:30:16Z", "updated_at": "2017-01-27T06:08:17Z", "closed_at": "2015-04-09T17:05:10Z", "author_association": "NONE", "body": "Hi,\n\nIs there a way we could Serialize the output like PHP's [Serialize](http://php.net/manual/en/function.serialize.php) version?\n\nCurrently it outputs in one line as a string. Would be helpful if it could support additional method such as this one.\n\nLet me know!\n\nThanks.\n\nP.S Kudos for the awesome work you've done. Very nice, clean and easier to use!\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/54", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/54/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/54/events", "html_url": "https://github.com/nlohmann/json/issues/54", "id": 66726604, "node_id": "MDU6SXNzdWU2NjcyNjYwNA==", "number": 54, "title": "Numbers as keys", "user": {"login": "ivan-krukov", "id": 1881263, "node_id": "MDQ6VXNlcjE4ODEyNjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1881263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivan-krukov", "html_url": "https://github.com/ivan-krukov", "followers_url": "https://api.github.com/users/ivan-krukov/followers", "following_url": "https://api.github.com/users/ivan-krukov/following{/other_user}", "gists_url": "https://api.github.com/users/ivan-krukov/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivan-krukov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivan-krukov/subscriptions", "organizations_url": "https://api.github.com/users/ivan-krukov/orgs", "repos_url": "https://api.github.com/users/ivan-krukov/repos", "events_url": "https://api.github.com/users/ivan-krukov/events{/privacy}", "received_events_url": "https://api.github.com/users/ivan-krukov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-04-06T23:05:49Z", "updated_at": "2016-11-13T22:38:09Z", "closed_at": "2015-04-08T20:35:42Z", "author_association": "NONE", "body": "I know this isn't strictly `json`-compliant, but I would love to have numbers as keys.\n\nSay I try:\n\n```\nstd::map data<double, double> = {{1.0, 2.0}, {3.0, 4.0}};\n```\n\nI would like to be able to:\n\n```\njson j_data(data);\n```\n\nIn order to get:\n\n```\n{1.0:2.0, 3.0:4.0}\n```\n\nI think the strength of `json` is that it can take a little bit of abuse.\nThanks.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/53", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/53/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/53/events", "html_url": "https://github.com/nlohmann/json/issues/53", "id": 66522543, "node_id": "MDU6SXNzdWU2NjUyMjU0Mw==", "number": 53, "title": "Why are elements alphabetized on key while iterating?", "user": {"login": "luxe", "id": 1312081, "node_id": "MDQ6VXNlcjEzMTIwODE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1312081?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luxe", "html_url": "https://github.com/luxe", "followers_url": "https://api.github.com/users/luxe/followers", "following_url": "https://api.github.com/users/luxe/following{/other_user}", "gists_url": "https://api.github.com/users/luxe/gists{/gist_id}", "starred_url": "https://api.github.com/users/luxe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luxe/subscriptions", "organizations_url": "https://api.github.com/users/luxe/orgs", "repos_url": "https://api.github.com/users/luxe/repos", "events_url": "https://api.github.com/users/luxe/events{/privacy}", "received_events_url": "https://api.github.com/users/luxe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-06T04:21:24Z", "updated_at": "2015-04-08T20:32:13Z", "closed_at": "2015-04-08T20:32:13Z", "author_association": "CONTRIBUTOR", "body": "Let's say I have the json from the example readme:\n\n```\n  nlohmann::json all = {\n  {\"pi\", 3.141},\n  {\"happy\", true},\n  {\"name\", \"Niels\"},\n  {\"nothing\", nullptr},\n  {\"answer\", {\n    {\"everything\", 42}\n  }},\n  {\"list\", {1, 0, 2}},\n  {\"object\", {\n    {\"currency\", \"USD\"},\n    {\"value\", 42.99}\n  }}\n};\n```\n\nI will iterate over it the following way:\n\n```\n  for (nlohmann::json::iterator it = all.begin(); it != all.end(); ++it) {\n    std::cout << it.key() << std::endl;\n  }\n```\n\nI would expect this:\n\n```\npi\nhappy\nname\nnothing\nanswer\nlist\nobject\n```\n\nInstead, I get:\n\n```\nanswer\nhappy\nlist\nname\nnothing\nobject\npi\n```\n\nWhy is this the default?  Can it be turned off?\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/52", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/52/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/52/events", "html_url": "https://github.com/nlohmann/json/issues/52", "id": 64583856, "node_id": "MDU6SXNzdWU2NDU4Mzg1Ng==", "number": 52, "title": "Document erase, count, and iterators key and value", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-03-26T17:04:58Z", "updated_at": "2016-11-13T22:38:09Z", "closed_at": "2015-03-27T16:11:11Z", "author_association": "NONE", "body": "Add examples in the documentation for:\n- erase(iterator)\n- count(iterator)\n- and for the usage of iterators key()/value() member functions\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/51", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/51/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/51/events", "html_url": "https://github.com/nlohmann/json/issues/51", "id": 64490007, "node_id": "MDU6SXNzdWU2NDQ5MDAwNw==", "number": 51, "title": "Do not use std::to_string", "user": {"login": "krisztiantobias", "id": 11661824, "node_id": "MDQ6VXNlcjExNjYxODI0", "avatar_url": "https://avatars0.githubusercontent.com/u/11661824?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krisztiantobias", "html_url": "https://github.com/krisztiantobias", "followers_url": "https://api.github.com/users/krisztiantobias/followers", "following_url": "https://api.github.com/users/krisztiantobias/following{/other_user}", "gists_url": "https://api.github.com/users/krisztiantobias/gists{/gist_id}", "starred_url": "https://api.github.com/users/krisztiantobias/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krisztiantobias/subscriptions", "organizations_url": "https://api.github.com/users/krisztiantobias/orgs", "repos_url": "https://api.github.com/users/krisztiantobias/repos", "events_url": "https://api.github.com/users/krisztiantobias/events{/privacy}", "received_events_url": "https://api.github.com/users/krisztiantobias/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2015-03-26T10:24:28Z", "updated_at": "2015-03-27T16:13:12Z", "closed_at": "2015-03-27T16:13:12Z", "author_association": "NONE", "body": "This is simply wrong:\n\n``` cpp\n    case (value_t::number_float):\n    {\n        return std::to_string(m_value.number_float);\n    }\n```\n\nThe to_string use std::locale what can change the point to comma (happened with us, because in QT the QApplication create change this) what is not good for json. You have to use always point instead of comma (json rpc standard)\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/50", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/50/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/50/events", "html_url": "https://github.com/nlohmann/json/issues/50", "id": 63954027, "node_id": "MDU6SXNzdWU2Mzk1NDAyNw==", "number": 50, "title": "Supported compilers", "user": {"login": "suy", "id": 1200609, "node_id": "MDQ6VXNlcjEyMDA2MDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1200609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suy", "html_url": "https://github.com/suy", "followers_url": "https://api.github.com/users/suy/followers", "following_url": "https://api.github.com/users/suy/following{/other_user}", "gists_url": "https://api.github.com/users/suy/gists{/gist_id}", "starred_url": "https://api.github.com/users/suy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suy/subscriptions", "organizations_url": "https://api.github.com/users/suy/orgs", "repos_url": "https://api.github.com/users/suy/repos", "events_url": "https://api.github.com/users/suy/events{/privacy}", "received_events_url": "https://api.github.com/users/suy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2015-03-24T09:53:39Z", "updated_at": "2016-11-13T22:38:09Z", "closed_at": "2015-04-09T17:21:47Z", "author_association": "NONE", "body": "Hi.\n\nThere is no documentation on what compilers are supported, or which C++ features are required. I've tried to include the header in a project with MSVC 2013, and I get plenty of compile errors (with MinGW it compiles fine). I know MSVC might not have good enough C++11 support, so that's somewhat expected. I'm wondering, though, if anybody has attempted some newer pre-release of MSVC and if it is worth it at all trying to get it compile, sending patches, etc.\n\nThank you.\n\nPD: In case it's useful, the first error I have is with the declaration of using iterator = basic_json::iterator:\n\n```\nc:\\users\\alex\\documents\\helloworld\\json/src/json.hpp(142) : error C2061: syntax error : identifier 'iterator'\n        c:\\users\\alex\\documents\\helloworld\\json/src/json.hpp(4335) : see reference to class template instantiation 'nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberFloatType,Allocator>' being compiled\nc:\\users\\alex\\documents\\helloworld\\json/src/json.hpp(142) : error C2238: unexpected token(s) preceding ';'\n```\n\nLater on I get plenty of unrecognized noexcept. The later could be worked around with a macro, I think, but I have no idea on the former, or other template magic involved.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/49", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/49/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/49/events", "html_url": "https://github.com/nlohmann/json/issues/49", "id": 62529139, "node_id": "MDU6SXNzdWU2MjUyOTEzOQ==", "number": 49, "title": "Confused about iterating through json objects", "user": {"login": "DanTheColoradan", "id": 3826143, "node_id": "MDQ6VXNlcjM4MjYxNDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3826143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DanTheColoradan", "html_url": "https://github.com/DanTheColoradan", "followers_url": "https://api.github.com/users/DanTheColoradan/followers", "following_url": "https://api.github.com/users/DanTheColoradan/following{/other_user}", "gists_url": "https://api.github.com/users/DanTheColoradan/gists{/gist_id}", "starred_url": "https://api.github.com/users/DanTheColoradan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DanTheColoradan/subscriptions", "organizations_url": "https://api.github.com/users/DanTheColoradan/orgs", "repos_url": "https://api.github.com/users/DanTheColoradan/repos", "events_url": "https://api.github.com/users/DanTheColoradan/events{/privacy}", "received_events_url": "https://api.github.com/users/DanTheColoradan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-03-17T22:06:47Z", "updated_at": "2015-03-26T17:03:35Z", "closed_at": "2015-03-26T17:01:18Z", "author_association": "NONE", "body": "If I have:\n\n``` .json\n{\n  \"england\": {\n    \"name\": \"euro\",\n    \"value\": 57.99\n  },\n  \"mexico\": {\n    \"name\": \"peso\",\n    \"value\": 31.99\n  },\n  \"us\": {\n    \"name\": \"USD\",\n    \"value\": 42.99\n  }\n}\n```\n\nAnd I want to iterate through each, how would I do so?\n\nMy attempt so far has been similar to the following:\n\n``` .cpp\nstd::ifstream input_file( const string file_path );\nnlohmann::json currencies_json;\ncurrencies_json << input_file;\ninput_file.close();\n\nunordered_map <string, currency_class> currencies;\nfor ( const auto currency_json: currencies_json ) {\n    currency_class new_currency;\n\n    new_currency[ \"country\" ] = ???\n    new_currency[ \"name\" ] = ???\n    new_currency[ \"value\"] = ???\n\n    currencies[ country ] = new_currency;\n}\n```\n\nI've tried it a a few ways including - for example - creating a string for `new_currency[ \"country\" ]` first and then storing it in it like `new_currency[ \"country\" ] = my_string`, but I get errors such as:\n\n``` .sh\nno member named 'key' in 'nlohmann::basic_json<std::map, std::vector, std::__1::basic_string<char>, bool, long long, double, std::allocator>'\n```\n\nor\n\n``` .sh\n[....]:1073:20: error: 'm_it' is a private member of 'nlohmann::basic_json<std::map, std::vector, std::__1::basic_string<char>,\n      bool, long long, double, std::allocator>::const_iterator'\n           result.m_it.object_iterator = m_value.object->find(key);\n                   ^\n[...]:89:32: note: in instantiation of member function 'nlohmann::basic_json<std::map, std::vector, std::__1::basic_string<char>, bool, long long, double,\n      std::allocator>::find' requested here\n                const auto iterator = currencies.find(\"country\");\n                                             ^\n[...]/build/dependencies/json-prefix/src/json/src/json.hpp:3007:96: note: declared private here\n        internal_iterator<typename array_t::const_iterator, typename object_t::const_iterator> m_it;\n```\n\nCould you provide some guidance? I'd really appreciate it!\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/48", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/48/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/48/events", "html_url": "https://github.com/nlohmann/json/issues/48", "id": 60546129, "node_id": "MDU6SXNzdWU2MDU0NjEyOQ==", "number": 48, "title": "Use non-member begin/end", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2015-03-10T18:27:35Z", "updated_at": "2016-11-13T22:38:09Z", "closed_at": "2015-03-22T16:30:56Z", "author_association": "NONE", "body": "Right now the library uses member-functions `.begin()` and `.end()` when serializing sequences: see e.g. [here](https://github.com/nlohmann/json/blob/master/src/json.hpp#L441). \n\nAs a consequence some types cannot be serialized. \n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/47", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/47/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/47/events", "html_url": "https://github.com/nlohmann/json/issues/47", "id": 60523518, "node_id": "MDU6SXNzdWU2MDUyMzUxOA==", "number": 47, "title": "Erase key", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-03-10T16:02:41Z", "updated_at": "2016-11-13T22:38:09Z", "closed_at": "2015-03-24T15:51:01Z", "author_association": "NONE", "body": "Right now there is no way of erasing a key.\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/46", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/46/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/46/events", "html_url": "https://github.com/nlohmann/json/issues/46", "id": 60523361, "node_id": "MDU6SXNzdWU2MDUyMzM2MQ==", "number": 46, "title": "Key iterator", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 19, "created_at": "2015-03-10T16:01:55Z", "updated_at": "2016-11-13T22:38:09Z", "closed_at": "2015-03-26T17:01:12Z", "author_association": "NONE", "body": "When iterating over a `json` object, e.g. using a range-based for loop, one only gets the values, and it is impossible right now to get the key of each value. It would be nice to be able to iterate over the keys, since this allows you to get the value afterwards if you want too. \n\nAnother alternative is a key.value pair iterator like map.\n"}]