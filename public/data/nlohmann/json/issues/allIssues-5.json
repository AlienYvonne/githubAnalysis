[{"url": "https://api.github.com/repos/nlohmann/json/issues/1068", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1068/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1068/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1068/events", "html_url": "https://github.com/nlohmann/json/issues/1068", "id": 317732626, "node_id": "MDU6SXNzdWUzMTc3MzI2MjY=", "number": 1068, "title": "Compilation error with ICPC compiler", "user": {"login": "stefashkaa", "id": 17688105, "node_id": "MDQ6VXNlcjE3Njg4MTA1", "avatar_url": "https://avatars2.githubusercontent.com/u/17688105?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefashkaa", "html_url": "https://github.com/stefashkaa", "followers_url": "https://api.github.com/users/stefashkaa/followers", "following_url": "https://api.github.com/users/stefashkaa/following{/other_user}", "gists_url": "https://api.github.com/users/stefashkaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefashkaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefashkaa/subscriptions", "organizations_url": "https://api.github.com/users/stefashkaa/orgs", "repos_url": "https://api.github.com/users/stefashkaa/repos", "events_url": "https://api.github.com/users/stefashkaa/events{/privacy}", "received_events_url": "https://api.github.com/users/stefashkaa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 706237888, "node_id": "MDU6TGFiZWw3MDYyMzc4ODg=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20icc", "name": "platform: icc", "color": "eb6420", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-04-25T17:56:49Z", "updated_at": "2018-07-05T19:28:01Z", "closed_at": "2018-06-01T19:51:07Z", "author_association": "NONE", "body": "Hello!\r\n\r\nWhat could you say about **https://github.com/nlohmann/json/issues/994** issue?\r\n\r\nI have a similar problem using the **ICPC** compiler.\r\n\r\n...\\json.hpp(904): error : type name is not allowed\r\ndetect(std::declval<typename BasicJsonType::template json_serializer<T, void>>()))>::value;\r\n...\\json.hpp(920): error : type name is not allowed\r\nstd::declval<typename BasicJsonType::template json_serializer<T, void>>()))>::value;\r\n...\\json.hpp(935): error : type name is not allowed\r\nstd::declval<typename BasicJsonType::template json_serializer<T, void>>()))>::value;\r\n\r\nI use the following flags:\r\n`icpc -qopenmp -Wall -otarget/main-uname -m main.cpp\r\n`\r\nCould you help me?\r\n\r\nBest regards!\r\nStefan"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1067", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1067/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1067/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1067/events", "html_url": "https://github.com/nlohmann/json/pull/1067", "id": 317375659, "node_id": "MDExOlB1bGxSZXF1ZXN0MTgzODQ5MjAz", "number": 1067, "title": "Fix operator== overload ambiguity", "user": {"login": "th0br0", "id": 30996, "node_id": "MDQ6VXNlcjMwOTk2", "avatar_url": "https://avatars0.githubusercontent.com/u/30996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/th0br0", "html_url": "https://github.com/th0br0", "followers_url": "https://api.github.com/users/th0br0/followers", "following_url": "https://api.github.com/users/th0br0/following{/other_user}", "gists_url": "https://api.github.com/users/th0br0/gists{/gist_id}", "starred_url": "https://api.github.com/users/th0br0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/th0br0/subscriptions", "organizations_url": "https://api.github.com/users/th0br0/orgs", "repos_url": "https://api.github.com/users/th0br0/repos", "events_url": "https://api.github.com/users/th0br0/events{/privacy}", "received_events_url": "https://api.github.com/users/th0br0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-04-24T20:07:09Z", "updated_at": "2018-07-23T09:47:03Z", "closed_at": null, "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1067", "html_url": "https://github.com/nlohmann/json/pull/1067", "diff_url": "https://github.com/nlohmann/json/pull/1067.diff", "patch_url": "https://github.com/nlohmann/json/pull/1067.patch"}, "body": "Currently, `json` does not work well together with GoogleMock.\r\n(e.g. `MOCK_METHOD0(sample, nlohmann::json(void));`)\r\n\r\nThis is because of an ambiguous overload which this PR fixes by disabling one of the two.\r\nAs `std::is_null_pointer` is only available from C++14, this uses the possible implementation from http://en.cppreference.com/w/cpp/types/is_null_pointer\r\n\r\nExample error:\r\n```\r\nIn file included from external/com_google_googletest/googlemock/include/gmock/gmock.h:58:\r\nexternal/com_google_googletest/googlemock/include/gmock/gmock-actions.h:388:18: error: use of overloaded operator '==' is ambiguous (with operand types 'const internal::linked_ptr<ActionInterface<const basic_json<std::map, std::vector, basic_string<char, char_traits<char>, allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> ()> >' and 'nullptr_t')\r\n    return impl_ == nullptr && fun_ == nullptr;\r\n           ~~~~~ ^  ~~~~~~~\r\nSNIP\r\n\r\nexternal/com_google_googletest/googletest/include/gtest/internal/gtest-linked_ptr.h:186:8: note: candidate function\r\n  bool operator==(T* p) const { return value_ == p; }\r\n       ^\r\njson.h:15149:17: note: candidate function [with ScalarType = nullptr_t, $1 = 0]\r\n    friend bool operator==(const_reference lhs, const ScalarType rhs) noexcept\r\n                ^\r\njson.h:15078:17: note: candidate function\r\n    friend bool operator==(const_reference lhs, const_reference rhs) noexcept\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1066", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1066/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1066/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1066/events", "html_url": "https://github.com/nlohmann/json/issues/1066", "id": 316852881, "node_id": "MDU6SXNzdWUzMTY4NTI4ODE=", "number": 1066, "title": "Minimal branch?", "user": {"login": "rpav", "id": 1011983, "node_id": "MDQ6VXNlcjEwMTE5ODM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1011983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpav", "html_url": "https://github.com/rpav", "followers_url": "https://api.github.com/users/rpav/followers", "following_url": "https://api.github.com/users/rpav/following{/other_user}", "gists_url": "https://api.github.com/users/rpav/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpav/subscriptions", "organizations_url": "https://api.github.com/users/rpav/orgs", "repos_url": "https://api.github.com/users/rpav/repos", "events_url": "https://api.github.com/users/rpav/events{/privacy}", "received_events_url": "https://api.github.com/users/rpav/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-23T15:02:21Z", "updated_at": "2018-04-23T15:24:08Z", "closed_at": "2018-04-23T15:24:08Z", "author_association": "NONE", "body": "**Feature Request**\r\n\r\nCould we get a \"minimal\" or \"release\" branch which contains essentially `README` / `LICENSE` and `single_include/nlohmann/json.hpp` (and perhaps also `include/...`)?  This would allow a tiny shallow or single-branch checkout to track releases, rather than a (relatively slow) hundred-megabyte checkout or submodule."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1065", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1065/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1065/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1065/events", "html_url": "https://github.com/nlohmann/json/issues/1065", "id": 316838664, "node_id": "MDU6SXNzdWUzMTY4Mzg2NjQ=", "number": 1065, "title": "Not existing value, crash", "user": {"login": "Dardanboy", "id": 2006937, "node_id": "MDQ6VXNlcjIwMDY5Mzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2006937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dardanboy", "html_url": "https://github.com/Dardanboy", "followers_url": "https://api.github.com/users/Dardanboy/followers", "following_url": "https://api.github.com/users/Dardanboy/following{/other_user}", "gists_url": "https://api.github.com/users/Dardanboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dardanboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dardanboy/subscriptions", "organizations_url": "https://api.github.com/users/Dardanboy/orgs", "repos_url": "https://api.github.com/users/Dardanboy/repos", "events_url": "https://api.github.com/users/Dardanboy/events{/privacy}", "received_events_url": "https://api.github.com/users/Dardanboy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-23T14:30:44Z", "updated_at": "2018-05-22T08:46:25Z", "closed_at": "2018-04-23T14:34:15Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- When I get a json list (from server) and that a value I try to reach doesn't exist, the application crash\r\n\r\n**Feature Request**\r\n\r\n- I think that this kind of things shouldn't happen (maybe an error, or maybe something returning nothing would be better)\r\n\r\n\r\n***What is the best solution in this cases ? (Check before trying to get value ?..)***\r\n\r\n\r\n*Edit*\r\n\r\nI didn't notice that:\r\n\r\n> note operator[] implements unchecked access for const objects: If the given key is not present, the behavior is **undefined** (think of a dereferenced null pointer) and yields an assertion failure if assertions are switched on. If you are not sure whether an element in an object exists, **use checked access with the at() function.**\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1064", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1064/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1064/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1064/events", "html_url": "https://github.com/nlohmann/json/issues/1064", "id": 316610954, "node_id": "MDU6SXNzdWUzMTY2MTA5NTQ=", "number": 1064, "title": "cyryllic symbols", "user": {"login": "eksponvt", "id": 37670650, "node_id": "MDQ6VXNlcjM3NjcwNjUw", "avatar_url": "https://avatars0.githubusercontent.com/u/37670650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eksponvt", "html_url": "https://github.com/eksponvt", "followers_url": "https://api.github.com/users/eksponvt/followers", "following_url": "https://api.github.com/users/eksponvt/following{/other_user}", "gists_url": "https://api.github.com/users/eksponvt/gists{/gist_id}", "starred_url": "https://api.github.com/users/eksponvt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eksponvt/subscriptions", "organizations_url": "https://api.github.com/users/eksponvt/orgs", "repos_url": "https://api.github.com/users/eksponvt/repos", "events_url": "https://api.github.com/users/eksponvt/events{/privacy}", "received_events_url": "https://api.github.com/users/eksponvt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-04-22T20:34:34Z", "updated_at": "2018-04-26T09:31:17Z", "closed_at": "2018-04-26T09:31:17Z", "author_association": "NONE", "body": "```cpp\r\nauto main( ) -> int\r\n{\r\n\tsetlocale(0, \"ru\");\r\n\tstd::cout << nlohmann::json::parse(std::string(\"{ \\\"happy\\\": \u0442\u0435\u0441\u0442, \\\"pi\\\": 3.141 }\")) << std::endl;\r\n\tSleep(INT_MAX);\r\n}\r\n```\r\n\r\nif I replace \"\u0442\u0435\u0441\u0442\" with English symbols, program doesnt throw an exception\r\n\r\nscreenshot:\r\n![dc782d02-2958-4559-8a59-bb5365342e33](https://user-images.githubusercontent.com/37670650/39099640-e3622600-469f-11e8-8d71-2aeec482c251.jpeg)\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1063", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1063/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1063/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1063/events", "html_url": "https://github.com/nlohmann/json/issues/1063", "id": 316596530, "node_id": "MDU6SXNzdWUzMTY1OTY1MzA=", "number": 1063, "title": "newbie usage question", "user": {"login": "lonnieOST", "id": 24719646, "node_id": "MDQ6VXNlcjI0NzE5NjQ2", "avatar_url": "https://avatars0.githubusercontent.com/u/24719646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lonnieOST", "html_url": "https://github.com/lonnieOST", "followers_url": "https://api.github.com/users/lonnieOST/followers", "following_url": "https://api.github.com/users/lonnieOST/following{/other_user}", "gists_url": "https://api.github.com/users/lonnieOST/gists{/gist_id}", "starred_url": "https://api.github.com/users/lonnieOST/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lonnieOST/subscriptions", "organizations_url": "https://api.github.com/users/lonnieOST/orgs", "repos_url": "https://api.github.com/users/lonnieOST/repos", "events_url": "https://api.github.com/users/lonnieOST/events{/privacy}", "received_events_url": "https://api.github.com/users/lonnieOST/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-04-22T17:18:28Z", "updated_at": "2018-04-26T06:16:21Z", "closed_at": "2018-04-26T06:16:21Z", "author_association": "NONE", "body": "Hello,\r\n\r\nI was looking over your json framework and think that it is exactly what I need for my project, but in your documentation I did not see how to iterate over a json set of attributes.\r\n\r\nFor example if I have a json file that looks like this:\r\n\r\n```js\r\n{\r\n    \"answers\": [],\r\n    \"corrections\": [],\r\n    \"infoboxes\": [\r\n        {\r\n            \"content\": \"...\",\r\n            \"engine\": \"...\",\r\n            \"id\": \"...\",\r\n            \"img_src\": \"...\",\r\n            \"infobox\": \"...\",\r\n            \"urls\": [\r\n                {\r\n                    \"title\": \"...\",\r\n                    \"url\": \"...\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"number_of_results\": ...,\r\n    \"query\": \"...\",\r\n    \"results\": [\r\n        {\r\n            \"category\": \"....\",\r\n            \"content\": \"...\",\r\n        },\r\n        {\r\n            \"category\": \"....\",\r\n            \"content\": \"...\",\r\n        },\r\n        {\r\n            \"category\": \"....\",\r\n            \"content\": \"...\",\r\n        },\r\n        {\r\n            \"category\": \"....\",\r\n            \"content\": \"...\",\r\n        },\r\n        {\r\n            \"category\": \"....\",\r\n            \"content\": \"...\",\r\n        }\r\n    ],\r\n    \"suggestions\": [],\r\n    \"somehting\": [\r\n        [\r\n            \"one\",\r\n            \"two\"\r\n        ]\r\n    ]\r\n}\r\n```\r\n\r\nThen I have to 2 possible needs.\r\n\r\n1. I would read it in a string variable and want to iterate over the \"category\" and \"content\" attributes to collect all of the different information.\r\n\r\n2. I would like to be able to create the above json using your reference method.\r\n\r\nIn your example I would like to create:\r\n\r\n```js\r\n{\r\n  \"pi\": 3.141,\r\n  \"happy\": true,\r\n  \"name\": \"Niels\",\r\n  \"nothing\": null,\r\n  \"answer\": {\r\n    \"everything\": 42\r\n  },\r\n  \"list\": [1, 0, 2],\r\n  \"object\": {\r\n    \"currency\": \"USD\",\r\n    \"value\": 42.99\r\n  },\r\n  \"object\": {\r\n    \"currency\": \"USD\",\r\n    \"value\": 2.99\r\n  },\r\n  \"object\": {\r\n    \"currency\": \"USD\",\r\n    \"value\": 4.99\r\n  }\r\n}\r\n```\r\n\r\nYou show:\r\n\r\n```cpp\r\n// add another object (using an initializer list of pairs)\r\nj[\"object\"] = { {\"currency\", \"USD\"}, {\"value\", 42.99} };\r\n```\r\n\r\nbut can it also be done something like:\r\n\r\n```cpp\r\n// add another object (using an initializer list of pairs)\r\nj[\"object\"] [\"currency\"]=  \"USD\"\r\nj[\"object\"][\"value\"]= 42.99;\r\n```\r\n\r\nbut that would only be for 1 object and I need to be able to add many \"object\" items to a structure.\r\n\r\nI also need to be able to reference nested items in a similar way if possible.\r\n\r\nThanks,\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1062", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1062/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1062/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1062/events", "html_url": "https://github.com/nlohmann/json/issues/1062", "id": 316481347, "node_id": "MDU6SXNzdWUzMTY0ODEzNDc=", "number": 1062, "title": "Trying j[\"strTest\"] = \"%A\" produces \"strTest\": \"-0X1.CCCCCCCCCCCCCP+205\"", "user": {"login": "scherbatuk", "id": 38583884, "node_id": "MDQ6VXNlcjM4NTgzODg0", "avatar_url": "https://avatars0.githubusercontent.com/u/38583884?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scherbatuk", "html_url": "https://github.com/scherbatuk", "followers_url": "https://api.github.com/users/scherbatuk/followers", "following_url": "https://api.github.com/users/scherbatuk/following{/other_user}", "gists_url": "https://api.github.com/users/scherbatuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/scherbatuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scherbatuk/subscriptions", "organizations_url": "https://api.github.com/users/scherbatuk/orgs", "repos_url": "https://api.github.com/users/scherbatuk/repos", "events_url": "https://api.github.com/users/scherbatuk/events{/privacy}", "received_events_url": "https://api.github.com/users/scherbatuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-21T10:43:58Z", "updated_at": "2018-04-21T16:38:08Z", "closed_at": "2018-04-21T10:59:08Z", "author_association": "NONE", "body": "Trying j[\"strTest\"] = \"%A\" \r\n\r\nproduces:\r\n\r\n\"strTest\": \"-0X1.CCCCCCCCCCCCCP+205\"\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1061", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1061/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1061/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1061/events", "html_url": "https://github.com/nlohmann/json/issues/1061", "id": 315830806, "node_id": "MDU6SXNzdWUzMTU4MzA4MDY=", "number": 1061, "title": "convert json value to std::string???", "user": {"login": "Mamlesh", "id": 37332116, "node_id": "MDQ6VXNlcjM3MzMyMTE2", "avatar_url": "https://avatars1.githubusercontent.com/u/37332116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mamlesh", "html_url": "https://github.com/Mamlesh", "followers_url": "https://api.github.com/users/Mamlesh/followers", "following_url": "https://api.github.com/users/Mamlesh/following{/other_user}", "gists_url": "https://api.github.com/users/Mamlesh/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mamlesh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mamlesh/subscriptions", "organizations_url": "https://api.github.com/users/Mamlesh/orgs", "repos_url": "https://api.github.com/users/Mamlesh/repos", "events_url": "https://api.github.com/users/Mamlesh/events{/privacy}", "received_events_url": "https://api.github.com/users/Mamlesh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2018-04-19T11:09:31Z", "updated_at": "2018-05-11T16:12:10Z", "closed_at": "2018-05-11T16:12:10Z", "author_association": "NONE", "body": "how to convert json value to string ..\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1060", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1060/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1060/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1060/events", "html_url": "https://github.com/nlohmann/json/issues/1060", "id": 315767806, "node_id": "MDU6SXNzdWUzMTU3Njc4MDY=", "number": 1060, "title": "Commented out test cases, should they be removed?", "user": {"login": "whackashoe", "id": 855581, "node_id": "MDQ6VXNlcjg1NTU4MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/855581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whackashoe", "html_url": "https://github.com/whackashoe", "followers_url": "https://api.github.com/users/whackashoe/followers", "following_url": "https://api.github.com/users/whackashoe/following{/other_user}", "gists_url": "https://api.github.com/users/whackashoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/whackashoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whackashoe/subscriptions", "organizations_url": "https://api.github.com/users/whackashoe/orgs", "repos_url": "https://api.github.com/users/whackashoe/repos", "events_url": "https://api.github.com/users/whackashoe/events{/privacy}", "received_events_url": "https://api.github.com/users/whackashoe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/24", "html_url": "https://github.com/nlohmann/json/milestone/24", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/24/labels", "id": 3188647, "node_id": "MDk6TWlsZXN0b25lMzE4ODY0Nw==", "number": 24, "title": "Release 3.1.3", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 33, "state": "open", "created_at": "2018-03-14T21:05:47Z", "updated_at": "2018-07-21T12:46:17Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2018-04-19T08:02:54Z", "updated_at": "2018-04-23T17:42:14Z", "closed_at": "2018-04-23T17:42:14Z", "author_association": "CONTRIBUTOR", "body": "I found a few files with commented out test cases, wondering if they should be kept or banished to git history\r\n\r\n---\r\n\r\ntest/src/unit-allocator.cpp\r\n\r\ntest/src/unit-cbor.cpp\r\n\r\ntest/src/unit-regression.cpp\r\n\r\ntest/src/unit-ubjson.cpp\r\n\r\ntest/src/unit-class_lexer.cpp\r\n\r\ntest/src/unit-regression.cpp\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1059", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1059/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1059/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1059/events", "html_url": "https://github.com/nlohmann/json/issues/1059", "id": 315054930, "node_id": "MDU6SXNzdWUzMTUwNTQ5MzA=", "number": 1059, "title": "different behaviour between clang and gcc with braced initialization", "user": {"login": "scontini76", "id": 2496830, "node_id": "MDQ6VXNlcjI0OTY4MzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/2496830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scontini76", "html_url": "https://github.com/scontini76", "followers_url": "https://api.github.com/users/scontini76/followers", "following_url": "https://api.github.com/users/scontini76/following{/other_user}", "gists_url": "https://api.github.com/users/scontini76/gists{/gist_id}", "starred_url": "https://api.github.com/users/scontini76/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scontini76/subscriptions", "organizations_url": "https://api.github.com/users/scontini76/orgs", "repos_url": "https://api.github.com/users/scontini76/repos", "events_url": "https://api.github.com/users/scontini76/events{/privacy}", "received_events_url": "https://api.github.com/users/scontini76/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 344572510, "node_id": "MDU6TGFiZWwzNDQ1NzI1MTA=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20help%20needed", "name": "state: help needed", "color": "fbca04", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-17T13:16:06Z", "updated_at": "2018-05-26T11:27:32Z", "closed_at": "2018-05-26T11:27:32Z", "author_association": "NONE", "body": "```c++\r\n#include \"json.hpp\"\r\n#include <iostream>\r\n\r\nusing json = nlohmann::json;\r\n\r\nint main()\r\n{\r\n    auto j{json::parse(R\"({ \"result\": [1, 2, 3] })\")};\r\n\r\n    std::cout << j[\"result\"];\r\n\r\n    return 0;\r\n}\r\n```\r\n\r\ncompiled with g++5, g++6, gcc+7 bring to the following result:\r\n\r\nterminate called after throwing an instance of 'nlohmann::detail::type_error'\r\n  what():  [json.exception.type_error.305] cannot use operator[] with array\r\n\r\n\r\nwith clang++ the output is the excepted:\r\n\r\n[1, 2, 3]\r\n\r\nI'm using json 3.1.2, is there an error in my code? what compiler is wrong? can we obtain the same behaviour on both the family complier? \r\n\r\nThe code works in the on either g++ and clang++ if I use the assignment instead of braced initialisation.\r\n\r\nso:\r\n\r\n```c++\r\nauto j{json::parse(R\"({ \"result\": [1, 2, 3] })\")};\r\nstd::cout << j[\"result\"];\r\n```\r\n\r\nworks on clang\r\n\r\n```\r\nauto j = json::parse(R\"({ \"result\": [1, 2, 3] })\");\r\nstd::cout << j[\"result\"];\r\n```\r\nworks on both family compilers\r\n\r\n```c++\r\nauto j{json::parse(R\"({ \"result\": [1, 2, 3] })\")};\r\nstd::cout << j[0][\"result\"];\r\n```\r\n works on g++\r\n\r\nthank you for the support!"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1058", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1058/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1058/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1058/events", "html_url": "https://github.com/nlohmann/json/pull/1058", "id": 314992702, "node_id": "MDExOlB1bGxSZXF1ZXN0MTgyMTE1NzU5", "number": 1058, "title": "Fix typo", "user": {"login": "dns13", "id": 4911959, "node_id": "MDQ6VXNlcjQ5MTE5NTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4911959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dns13", "html_url": "https://github.com/dns13", "followers_url": "https://api.github.com/users/dns13/followers", "following_url": "https://api.github.com/users/dns13/following{/other_user}", "gists_url": "https://api.github.com/users/dns13/gists{/gist_id}", "starred_url": "https://api.github.com/users/dns13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dns13/subscriptions", "organizations_url": "https://api.github.com/users/dns13/orgs", "repos_url": "https://api.github.com/users/dns13/repos", "events_url": "https://api.github.com/users/dns13/events{/privacy}", "received_events_url": "https://api.github.com/users/dns13/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/24", "html_url": "https://github.com/nlohmann/json/milestone/24", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/24/labels", "id": 3188647, "node_id": "MDk6TWlsZXN0b25lMzE4ODY0Nw==", "number": 24, "title": "Release 3.1.3", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 33, "state": "open", "created_at": "2018-03-14T21:05:47Z", "updated_at": "2018-07-21T12:46:17Z", "due_on": null, "closed_at": null}, "comments": 4, "created_at": "2018-04-17T10:09:56Z", "updated_at": "2018-04-18T07:05:20Z", "closed_at": "2018-04-17T17:56:01Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1058", "html_url": "https://github.com/nlohmann/json/pull/1058", "diff_url": "https://github.com/nlohmann/json/pull/1058.diff", "patch_url": "https://github.com/nlohmann/json/pull/1058.patch"}, "body": "Just fixed a typo in the docs."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1057", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1057/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1057/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1057/events", "html_url": "https://github.com/nlohmann/json/issues/1057", "id": 314969189, "node_id": "MDU6SXNzdWUzMTQ5NjkxODk=", "number": 1057, "title": "json array:  initialize with prescribed size and `resize` method.", "user": {"login": "SylvainCorlay", "id": 2397974, "node_id": "MDQ6VXNlcjIzOTc5NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SylvainCorlay", "html_url": "https://github.com/SylvainCorlay", "followers_url": "https://api.github.com/users/SylvainCorlay/followers", "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}", "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}", "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions", "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs", "repos_url": "https://api.github.com/users/SylvainCorlay/repos", "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}", "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-17T09:05:44Z", "updated_at": "2018-04-19T06:59:50Z", "closed_at": "2018-04-19T06:59:50Z", "author_association": "NONE", "body": "**Feature Request**\r\n\r\nI would like the ability to initialize a JSON array with a prescribed size.\r\n\r\nMy use case if that I know that I will be setting all items of a JSON arrays on known length but out of order.\r\n\r\nI could do this with an intermediate STL container but I would prefer to avoid the temporary.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1056", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1056/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1056/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1056/events", "html_url": "https://github.com/nlohmann/json/issues/1056", "id": 314705846, "node_id": "MDU6SXNzdWUzMTQ3MDU4NDY=", "number": 1056, "title": "Is it possible to use exceptions istead of assertions?", "user": {"login": "zaycakitayca", "id": 2539038, "node_id": "MDQ6VXNlcjI1MzkwMzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2539038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zaycakitayca", "html_url": "https://github.com/zaycakitayca", "followers_url": "https://api.github.com/users/zaycakitayca/followers", "following_url": "https://api.github.com/users/zaycakitayca/following{/other_user}", "gists_url": "https://api.github.com/users/zaycakitayca/gists{/gist_id}", "starred_url": "https://api.github.com/users/zaycakitayca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zaycakitayca/subscriptions", "organizations_url": "https://api.github.com/users/zaycakitayca/orgs", "repos_url": "https://api.github.com/users/zaycakitayca/repos", "events_url": "https://api.github.com/users/zaycakitayca/events{/privacy}", "received_events_url": "https://api.github.com/users/zaycakitayca/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-16T15:26:21Z", "updated_at": "2018-04-17T04:23:26Z", "closed_at": "2018-04-17T04:23:26Z", "author_association": "NONE", "body": "Let's consider the following code\r\n\r\n```\r\n#include \"json.hpp\"\r\n#include <iostream>\r\n\r\nint main()\r\n{\r\n\tconst auto data = R\"({\"foo\":42})\"_json;\r\n\t\r\n\ttry {\r\n\t\tstd::cout << data[\"bar\"] << std::endl;\r\n\t} catch(...) {\r\n\t\tstd::cerr << \"json error\" << std::endl;\r\n\t}\r\n}\r\n```\r\n\r\nI expect this code to output `json error`, but instead it shuts down with the following error:\r\n\r\n```\r\njson.hpp:12936: const value_type& nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::operator[](T*) const [with T = const char; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::adl_serializer; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::const_reference = const nlohmann::basic_json<>&; nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer>::value_type = nlohmann::basic_json<>]: Assertion `m_value.object->find(key) != m_value.object->end()' failed.\r\n```\r\n\r\nI know I can disable assertion by `NDEBUG` flag, but then it prints out `null` in my example (and I'm almost sure this is an UB) instead of expected exception.\r\n\r\nI've checked out `json.hpp` code and found 98 calls to `assert`, so I don't think above is the only example leading to application shutdown which can't be handled. In my real app I deal with user provided data, so it's quite bad for me. Is it possible to just replace those assertions with exception throws? Or, if assertions are necessary for some cases, is it possible to have something like template parameter specifying assertion handler, which would be defaulted to `assert`?\r\n\r\nI can create a PR by myself, but first I want to know which option is preferred."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1055", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1055/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1055/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1055/events", "html_url": "https://github.com/nlohmann/json/issues/1055", "id": 314651715, "node_id": "MDU6SXNzdWUzMTQ2NTE3MTU=", "number": 1055, "title": "when using assign operator in with json object a static assertion fails..", "user": {"login": "jipr311", "id": 4445270, "node_id": "MDQ6VXNlcjQ0NDUyNzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4445270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jipr311", "html_url": "https://github.com/jipr311", "followers_url": "https://api.github.com/users/jipr311/followers", "following_url": "https://api.github.com/users/jipr311/following{/other_user}", "gists_url": "https://api.github.com/users/jipr311/gists{/gist_id}", "starred_url": "https://api.github.com/users/jipr311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jipr311/subscriptions", "organizations_url": "https://api.github.com/users/jipr311/orgs", "repos_url": "https://api.github.com/users/jipr311/repos", "events_url": "https://api.github.com/users/jipr311/events{/privacy}", "received_events_url": "https://api.github.com/users/jipr311/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-16T13:30:05Z", "updated_at": "2018-04-28T09:31:42Z", "closed_at": "2018-04-28T09:31:42Z", "author_association": "NONE", "body": "**Bug Report**\r\nsuppose you have the following class:\r\n\r\n```cpp\r\nclass Point{\r\npublic:\r\nPoint();\r\nprivate:\r\nint x;\r\nint y;\r\n}\r\n```\r\n\r\nthen if you create a point:\r\n\r\n```cpp\r\nPoint p { 100, 100 };\r\n```\r\n\r\nand do\r\n\r\n```cpp\r\njson j = p;\r\n```\r\n\r\nthen you get the error: \r\n\r\n```\r\nstatic assertion failed: could not find to_json() method in T's namespace\r\n         static_assert(sizeof(BasicJsonType) == 0,\r\n         ^\r\n````\r\n\r\nthat is pretty st.forward, what is the reason of the failure?\r\n**Feature Request**\r\n\r\n- Describe the feature in as much detail as possible.\r\n\r\n- Include sample usage where appropriate.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1054", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1054/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1054/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1054/events", "html_url": "https://github.com/nlohmann/json/issues/1054", "id": 314466554, "node_id": "MDU6SXNzdWUzMTQ0NjY1NTQ=", "number": 1054, "title": "Iterate over leafs of a JSON data structure: enrich the JSON pointer API", "user": {"login": "SylvainCorlay", "id": 2397974, "node_id": "MDQ6VXNlcjIzOTc5NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SylvainCorlay", "html_url": "https://github.com/SylvainCorlay", "followers_url": "https://api.github.com/users/SylvainCorlay/followers", "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}", "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}", "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions", "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs", "repos_url": "https://api.github.com/users/SylvainCorlay/repos", "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}", "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-04-16T00:20:34Z", "updated_at": "2018-04-17T06:52:36Z", "closed_at": "2018-04-17T06:49:03Z", "author_association": "NONE", "body": "**Enriching the  `json_pointer` API**\r\n\r\nI noticed that the `json_pointer` class stored a `std::vector<std::string>` internally.\r\n\r\nWith private inheritance instead of composition, and a bunch of `using` statements to forward the API, you would enable a JSON pointer with a richer API, such as\r\n\r\n - initialize with initializer lists.\r\n - push / pop -pack for new values in the paths.\r\n\r\n**The use case**\r\n\r\nMy use-case is that I would like to iterate over all the leafs (number, boolean, null, strings) of a nested JSON data structure..\r\n\r\nIn order to do so, I would keep a vector of strings for the current position to which new elements are pushed back when meeting an array or object, and popped when leaving a level.\r\n\r\nIf this \"key\" is a JSON pointer, it could be used for access later, while right now, I would need to compose a string from it and pass it to the constructor of `json_pointer`, which is not very efficient."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1053", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1053/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1053/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1053/events", "html_url": "https://github.com/nlohmann/json/issues/1053", "id": 314079097, "node_id": "MDU6SXNzdWUzMTQwNzkwOTc=", "number": 1053, "title": "[Feature request] Access by path", "user": {"login": "SylvainCorlay", "id": 2397974, "node_id": "MDQ6VXNlcjIzOTc5NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SylvainCorlay", "html_url": "https://github.com/SylvainCorlay", "followers_url": "https://api.github.com/users/SylvainCorlay/followers", "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}", "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}", "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions", "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs", "repos_url": "https://api.github.com/users/SylvainCorlay/repos", "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}", "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-04-13T11:57:58Z", "updated_at": "2018-04-15T12:28:16Z", "closed_at": "2018-04-15T12:28:16Z", "author_association": "NONE", "body": "It would be great if there was accessors by path in a JSON object:\r\n\r\nfor example, if we have a JSON object `x` containing\r\n\r\n```JSON\r\n{\r\n    \"foo\": {\r\n        \"bar\": {\r\n            \"value\": 1   \r\n        },\r\n        \"baz\": {\r\n            \"value\": 3\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n`x[{\"foo\", \"baz\"}]` would return a JSON object containing\r\n\r\n```JSON\r\n{\r\n    \"value\": 3\r\n}\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1052", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1052/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1052/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1052/events", "html_url": "https://github.com/nlohmann/json/issues/1052", "id": 313697819, "node_id": "MDU6SXNzdWUzMTM2OTc4MTk=", "number": 1052, "title": "document that implicit js -> primitive conversion does not work for std::string::value_type and why", "user": {"login": "weber-martin", "id": 33350165, "node_id": "MDQ6VXNlcjMzMzUwMTY1", "avatar_url": "https://avatars0.githubusercontent.com/u/33350165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weber-martin", "html_url": "https://github.com/weber-martin", "followers_url": "https://api.github.com/users/weber-martin/followers", "following_url": "https://api.github.com/users/weber-martin/following{/other_user}", "gists_url": "https://api.github.com/users/weber-martin/gists{/gist_id}", "starred_url": "https://api.github.com/users/weber-martin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weber-martin/subscriptions", "organizations_url": "https://api.github.com/users/weber-martin/orgs", "repos_url": "https://api.github.com/users/weber-martin/repos", "events_url": "https://api.github.com/users/weber-martin/events{/privacy}", "received_events_url": "https://api.github.com/users/weber-martin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/24", "html_url": "https://github.com/nlohmann/json/milestone/24", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/24/labels", "id": 3188647, "node_id": "MDk6TWlsZXN0b25lMzE4ODY0Nw==", "number": 24, "title": "Release 3.1.3", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 33, "state": "open", "created_at": "2018-03-14T21:05:47Z", "updated_at": "2018-07-21T12:46:17Z", "due_on": null, "closed_at": null}, "comments": 6, "created_at": "2018-04-12T12:05:43Z", "updated_at": "2018-06-22T20:36:05Z", "closed_at": "2018-06-22T20:36:05Z", "author_association": "NONE", "body": "I expect to be able to convert from and to any C++ primitive type.\r\n\r\nI can convert from and to json from basically any type but a plain \"char\". If trying to do so, I'm getting a compile error:\r\n\r\n```\r\n error: cannot convert \u2018nlohmann::json {aka nlohmann::basic_json<>}\u2019 to \u2018char\u2019 in initialization\r\n  C c2 = js;\r\n```\r\n\r\nConversion from and to similarly sized `signed char` and `unsigned char` do work as expected, as do conversions from and to `int8_t` and `uint8_t`.\r\n\r\nSee the following file:\r\n```// minimal.cpp\r\n#include <iostream>\r\n#include <nlohmann/json.hpp>\r\n\r\nusing nlohmann::json;\r\n\r\ntemplate <typename C>\r\nvoid char_test() {\r\n\tC c1 = '?';\r\n\tjson js = c1;\r\n\tC c2 = js;\r\n\r\n\tstd::cout << \" c1: \" << c1 << \" js: \" << js << \" c2: \" << c2 << std::endl;\r\n}\r\n\r\nint main(int, char **) {\r\n\tchar_test<int8_t>();\r\n\tchar_test<uint8_t>();\r\n\tchar_test<signed char>();\r\n\tchar_test<unsigned char>();\r\n\t//char_test<char>();\r\n\treturn 0;\r\n}\r\n```\r\n\r\nuncomment the second to last line in `main()` to get the compile error.\r\n\r\nCompiled with `g++ (Debian 6.3.0-18+deb9u1) 6.3.0 20170516` on `Linux 4.12.0-0.bpo.2-amd64 x86_64` invoked as ` g++ -Wextra -Wall -Werror -std=c++11 -I $NLOHMANN_JSON_SINGLE_INCLUDE_DIR -o minimal minimal.cpp`\r\n\r\nThis is with `nlohmann-json commit 46ec2fddf8774af2f9368bf563dd6e32fa91d77e`\r\n\r\n>- If you experience a compilation error: can you [compile and run the unit tests](https://github.com/nlohmann/json#execute-unit-tests)?\r\n\r\nNope, I don't have a cmake 3.8 handy."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1051", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1051/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1051/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1051/events", "html_url": "https://github.com/nlohmann/json/issues/1051", "id": 313370256, "node_id": "MDU6SXNzdWUzMTMzNzAyNTY=", "number": 1051, "title": "error: \u2018BasicJsonType\u2019 in namespace \u2018::\u2019 does not name a type", "user": {"login": "simulationcloud", "id": 33330174, "node_id": "MDQ6VXNlcjMzMzMwMTc0", "avatar_url": "https://avatars3.githubusercontent.com/u/33330174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simulationcloud", "html_url": "https://github.com/simulationcloud", "followers_url": "https://api.github.com/users/simulationcloud/followers", "following_url": "https://api.github.com/users/simulationcloud/following{/other_user}", "gists_url": "https://api.github.com/users/simulationcloud/gists{/gist_id}", "starred_url": "https://api.github.com/users/simulationcloud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simulationcloud/subscriptions", "organizations_url": "https://api.github.com/users/simulationcloud/orgs", "repos_url": "https://api.github.com/users/simulationcloud/repos", "events_url": "https://api.github.com/users/simulationcloud/events{/privacy}", "received_events_url": "https://api.github.com/users/simulationcloud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-04-11T15:16:55Z", "updated_at": "2018-04-15T12:28:43Z", "closed_at": "2018-04-15T12:28:43Z", "author_association": "NONE", "body": "I get this error when compiling with nvcc, which is using g++6.4.1. I am specifying the --std=c++11 flag.\r\n\r\nThe version of nlohmann/json is 3.1.2. \r\n\r\nAny help would be greatly appreciated! "}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1050", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1050/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1050/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1050/events", "html_url": "https://github.com/nlohmann/json/issues/1050", "id": 313137935, "node_id": "MDU6SXNzdWUzMTMxMzc5MzU=", "number": 1050, "title": "Destructor is called when filling object through assignement", "user": {"login": "vindex10", "id": 1962652, "node_id": "MDQ6VXNlcjE5NjI2NTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1962652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vindex10", "html_url": "https://github.com/vindex10", "followers_url": "https://api.github.com/users/vindex10/followers", "following_url": "https://api.github.com/users/vindex10/following{/other_user}", "gists_url": "https://api.github.com/users/vindex10/gists{/gist_id}", "starred_url": "https://api.github.com/users/vindex10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vindex10/subscriptions", "organizations_url": "https://api.github.com/users/vindex10/orgs", "repos_url": "https://api.github.com/users/vindex10/repos", "events_url": "https://api.github.com/users/vindex10/events{/privacy}", "received_events_url": "https://api.github.com/users/vindex10/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-11T00:57:08Z", "updated_at": "2018-04-11T12:13:28Z", "closed_at": "2018-04-11T12:13:27Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\nDestructor being called in an unexpected place.\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\n```c++\r\n#include <iostream>\r\n#include \"nlohmann/json.hpp\"\r\n\r\nusing namespace std;\r\nusing json = nlohmann::json;\r\n\r\nclass State {\r\npublic:\r\n    double x;\r\n    ~State() {\r\n        cout << \"destroyed\" << endl;\r\n    }\r\n};\r\n\r\nvoid from_json(const json& j, State& p) {\r\n    try {\r\n        p.x = j.at(\"x\").get<double>();\r\n    } catch(json::type_error& e) {\r\n        std::cerr << e.what() << std::endl;\r\n    } catch(json::out_of_range& e) {\r\n        std::cerr << e.what() << std::endl;\r\n    }\r\n}\r\n\r\nint main() {\r\n    json data;\r\n    State s;\r\n    data[\"x\"] = 10.;\r\n    s = data;\r\n    cout << s.x << endl;\r\n    return 0;\r\n}\r\n```\r\n\r\nOutput is:\r\n```bash\r\ndestroyed\r\n10\r\ndestroyed\r\n```\r\n\r\n- What is the expected behavior?\r\ndo not call destructor during assignment\r\n\r\n- And what is the actual behavior instead?\r\ndestructor is called\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\n```bash\r\ng++ (Gentoo 6.4.0-r1 p1.3) 6.4.0\r\nCopyright (C) 2017 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n```\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\nchecked for both: master and develop branch.\r\n\r\nCould you please describe, whether it is a feature or a bug :) By default assignment operator doesn't call destructor, that is why the behavior seems to me unexpected.\r\n\r\nThank you!"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1049", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1049/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1049/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1049/events", "html_url": "https://github.com/nlohmann/json/issues/1049", "id": 313028933, "node_id": "MDU6SXNzdWUzMTMwMjg5MzM=", "number": 1049, "title": "Is this thing thread safe for reads?", "user": {"login": "mlfarrell", "id": 7664370, "node_id": "MDQ6VXNlcjc2NjQzNzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/7664370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlfarrell", "html_url": "https://github.com/mlfarrell", "followers_url": "https://api.github.com/users/mlfarrell/followers", "following_url": "https://api.github.com/users/mlfarrell/following{/other_user}", "gists_url": "https://api.github.com/users/mlfarrell/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlfarrell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlfarrell/subscriptions", "organizations_url": "https://api.github.com/users/mlfarrell/orgs", "repos_url": "https://api.github.com/users/mlfarrell/repos", "events_url": "https://api.github.com/users/mlfarrell/events{/privacy}", "received_events_url": "https://api.github.com/users/mlfarrell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-10T17:57:12Z", "updated_at": "2018-04-10T18:36:20Z", "closed_at": "2018-04-10T18:35:48Z", "author_association": "NONE", "body": "Wondering about thread safety.\r\n\r\nDidn't see anything in the docs.  "}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1048", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1048/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1048/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1048/events", "html_url": "https://github.com/nlohmann/json/pull/1048", "id": 312927832, "node_id": "MDExOlB1bGxSZXF1ZXN0MTgwNjA2Mjgx", "number": 1048, "title": "Misc cmake packaging enhancements", "user": {"login": "chuckatkins", "id": 320135, "node_id": "MDQ6VXNlcjMyMDEzNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/320135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chuckatkins", "html_url": "https://github.com/chuckatkins", "followers_url": "https://api.github.com/users/chuckatkins/followers", "following_url": "https://api.github.com/users/chuckatkins/following{/other_user}", "gists_url": "https://api.github.com/users/chuckatkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/chuckatkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chuckatkins/subscriptions", "organizations_url": "https://api.github.com/users/chuckatkins/orgs", "repos_url": "https://api.github.com/users/chuckatkins/repos", "events_url": "https://api.github.com/users/chuckatkins/events{/privacy}", "received_events_url": "https://api.github.com/users/chuckatkins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/24", "html_url": "https://github.com/nlohmann/json/milestone/24", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/24/labels", "id": 3188647, "node_id": "MDk6TWlsZXN0b25lMzE4ODY0Nw==", "number": 24, "title": "Release 3.1.3", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 33, "state": "open", "created_at": "2018-03-14T21:05:47Z", "updated_at": "2018-07-21T12:46:17Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2018-04-10T13:41:45Z", "updated_at": "2018-04-10T15:57:27Z", "closed_at": "2018-04-10T15:57:22Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1048", "html_url": "https://github.com/nlohmann/json/pull/1048", "diff_url": "https://github.com/nlohmann/json/pull/1048.diff", "patch_url": "https://github.com/nlohmann/json/pull/1048.patch"}, "body": "Some additions to the CMake package configs to be more consistent with common CMake packaging guidelines:\r\n\r\n*  Use namespaces for imported targets\r\n*  Allow package configs in build directory \r\n*  User-defined install location for package configs\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1047", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1047/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1047/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1047/events", "html_url": "https://github.com/nlohmann/json/pull/1047", "id": 312776140, "node_id": "MDExOlB1bGxSZXF1ZXN0MTgwNDkyMTIz", "number": 1047, "title": "Fixed incorrect LLVM version number in README", "user": {"login": "jammehcow", "id": 4962764, "node_id": "MDQ6VXNlcjQ5NjI3NjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4962764?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jammehcow", "html_url": "https://github.com/jammehcow", "followers_url": "https://api.github.com/users/jammehcow/followers", "following_url": "https://api.github.com/users/jammehcow/following{/other_user}", "gists_url": "https://api.github.com/users/jammehcow/gists{/gist_id}", "starred_url": "https://api.github.com/users/jammehcow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jammehcow/subscriptions", "organizations_url": "https://api.github.com/users/jammehcow/orgs", "repos_url": "https://api.github.com/users/jammehcow/repos", "events_url": "https://api.github.com/users/jammehcow/events{/privacy}", "received_events_url": "https://api.github.com/users/jammehcow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/24", "html_url": "https://github.com/nlohmann/json/milestone/24", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/24/labels", "id": 3188647, "node_id": "MDk6TWlsZXN0b25lMzE4ODY0Nw==", "number": 24, "title": "Release 3.1.3", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 33, "state": "open", "created_at": "2018-03-14T21:05:47Z", "updated_at": "2018-07-21T12:46:17Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2018-04-10T05:18:20Z", "updated_at": "2018-04-10T06:51:55Z", "closed_at": "2018-04-10T06:39:59Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1047", "html_url": "https://github.com/nlohmann/json/pull/1047", "diff_url": "https://github.com/nlohmann/json/pull/1047.diff", "patch_url": "https://github.com/nlohmann/json/pull/1047.patch"}, "body": "clang-900.0.39.2 is from LLVM 9.0.0, not 8.1.0 (as listed in the support compilers table)\r\n\r\n* * *\r\n\r\n## Pull request checklist\r\nNone of these apply to the README.\r\n\r\nRead the [Contribution Guidelines](https://github.com/nlohmann/json/blob/develop/.github/CONTRIBUTING.md) for detailed information.\r\n\r\n- [x]  Changes are described in the pull request, or an [existing issue is referenced](https://github.com/nlohmann/json/issues).\r\n- [x]  The test suite [compiles and runs](https://github.com/nlohmann/json/blob/develop/README.md#execute-unit-tests) without error.\r\n- [x]  [Code coverage](https://coveralls.io/github/nlohmann/json) is 100%. Test cases can be added by editing the [test suite](https://github.com/nlohmann/json/tree/develop/test/src).\r\n- [x]  The source code is amalgamated; that is, after making changes to the sources in the `include/nlohmann` directory, run `make amalgamate` to create the single-header file `single_include/nlohmann/json.hpp`. The whole process is described [here](https://github.com/nlohmann/json/blob/develop/.github/CONTRIBUTING.md#files-to-change)."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1046", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1046/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1046/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1046/events", "html_url": "https://github.com/nlohmann/json/issues/1046", "id": 312570539, "node_id": "MDU6SXNzdWUzMTI1NzA1Mzk=", "number": 1046, "title": "clang-tidy: Call to virtual function during construction ", "user": {"login": "SimonEbner", "id": 570249, "node_id": "MDQ6VXNlcjU3MDI0OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/570249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonEbner", "html_url": "https://github.com/SimonEbner", "followers_url": "https://api.github.com/users/SimonEbner/followers", "following_url": "https://api.github.com/users/SimonEbner/following{/other_user}", "gists_url": "https://api.github.com/users/SimonEbner/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonEbner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonEbner/subscriptions", "organizations_url": "https://api.github.com/users/SimonEbner/orgs", "repos_url": "https://api.github.com/users/SimonEbner/repos", "events_url": "https://api.github.com/users/SimonEbner/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonEbner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/24", "html_url": "https://github.com/nlohmann/json/milestone/24", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/24/labels", "id": 3188647, "node_id": "MDk6TWlsZXN0b25lMzE4ODY0Nw==", "number": 24, "title": "Release 3.1.3", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 33, "state": "open", "created_at": "2018-03-14T21:05:47Z", "updated_at": "2018-07-21T12:46:17Z", "due_on": null, "closed_at": null}, "comments": 3, "created_at": "2018-04-09T15:10:06Z", "updated_at": "2018-05-27T16:14:07Z", "closed_at": "2018-05-17T06:31:11Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\nWhen running clang-tidy on a minimal example I get the warning `Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall]`\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\n1. Clone the repo with tag `v3.1.2`\r\n2. Create a cpp file: \r\n```#include <fstream>\r\n#include <nlohmann/json.hpp>\r\n\r\nint main()\r\n{\r\n    std::ifstream in(\"a.json\");\r\n    nlohmann::json j;\r\n    in >> j;\r\n}\r\n```\r\n3. Run clang-tidy on it: `clang-tidy b.cc -- -I.`\r\n\r\n- What is the expected behavior?\r\nNo warnings emitted\r\n\r\n- And what is the actual behavior instead?\r\nOne warning emitted by the parsing of the ifstream (full output at the end)\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\n```\r\n % lsb_release -a \r\nNo LSB modules are available.\r\nDistributor ID:\tUbuntu\r\nDescription:\tUbuntu 16.04.3 LTS\r\nRelease:\t16.04\r\nCodename:\txenial\r\n```\r\n\r\n```\r\n% clang --version\r\nclang version 7.0.0 (https://git.llvm.org/git/clang 7f273fa6df66a8dfbfa2170d5bd307d9f426fd1a) (https://git.llvm.org/git/llvm 0a9e4fe67e24fe921d2ed544471bbb53d579f790)\r\nTarget: x86_64-unknown-linux-gnu\r\nThread model: posix\r\nInstalledDir: /usr/local/bin\r\n```\r\n\r\n```\r\n% clang-tidy --version\r\nLLVM (http://llvm.org/):\r\n  LLVM version 7.0.0svn\r\n  Optimized build with assertions.\r\n  Default target: x86_64-unknown-linux-gnu\r\n  Host CPU: broadwell\r\n```\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\nI used tag `v3.1.2`\r\n\r\n\r\nThis is the full output:\r\n```\r\n./nlohmann/detail/input/input_adapters.hpp:74:18: warning: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall]\r\n        if ((c = get_character()) == 0xEF)\r\n                 ^\r\n/home/simon/test/b.cc:8:5: note: Calling 'operator>>'\r\n    in >> j;\r\n    ^\r\n./nlohmann/json.hpp:6135:16: note: Calling constructor for 'input_adapter'\r\n        parser(detail::input_adapter(i)).parse(false, j);\r\n               ^\r\n./nlohmann/detail/input/input_adapters.hpp:175:14: note: Calling 'make_shared'\r\n        : ia(std::make_shared<input_stream_adapter>(i)) {}\r\n             ^\r\n/usr/lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/shared_ptr.h:635:14: note: Calling 'allocate_shared'\r\n      return std::allocate_shared<_Tp>(std::allocator<_Tp_nc>(),\r\n             ^\r\n/usr/lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/shared_ptr.h:619:14: note: Calling constructor for 'shared_ptr'\r\n      return shared_ptr<_Tp>(_Sp_make_shared_tag(), __a,\r\n             ^\r\n/usr/lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/shared_ptr.h:319:4: note: Calling constructor for '__shared_ptr'\r\n        : __shared_ptr<_Tp>(__tag, __a, std::forward<_Args>(__args)...)\r\n          ^\r\n/usr/lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/shared_ptr_base.h:1096:14: note: Calling constructor for '__shared_count'\r\n        : _M_ptr(), _M_refcount(__tag, (_Tp*)0, __a,\r\n                    ^\r\n/usr/lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/shared_ptr_base.h:617:18: note: Calling constructor for '_Sp_counted_ptr_inplace'\r\n          ::new (__mem) _Sp_cp_type(std::move(__a),\r\n                        ^\r\n/usr/lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/shared_ptr_base.h:522:4: note: Calling 'allocator_traits::construct'\r\n          allocator_traits<_Alloc>::construct(__a, _M_ptr(),\r\n          ^\r\n/usr/lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/alloc_traits.h:530:4: note: Calling 'new_allocator::construct'\r\n        { __a.construct(__p, std::forward<_Args>(__args)...); }\r\n          ^\r\n/usr/lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/ext/new_allocator.h:120:23: note: Calling constructor for 'input_stream_adapter'\r\n        { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }\r\n                             ^\r\n./nlohmann/detail/input/input_adapters.hpp:74:18: note: This constructor of an object of type 'input_stream_adapter' has not returned when the virtual method was called\r\n        if ((c = get_character()) == 0xEF)\r\n                 ^\r\n./nlohmann/detail/input/input_adapters.hpp:74:18: note: Call to virtual function during construction\r\n./nlohmann/detail/input/input_adapters.hpp:76:22: warning: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall]\r\n            if ((c = get_character()) == 0xBB)\r\n                     ^\r\n/home/simon/test/b.cc:8:5: note: Calling 'operator>>'\r\n    in >> j;\r\n    ^\r\n./nlohmann/json.hpp:6135:16: note: Calling constructor for 'input_adapter'\r\n        parser(detail::input_adapter(i)).parse(false, j);\r\n               ^\r\n./nlohmann/detail/input/input_adapters.hpp:175:14: note: Calling 'make_shared'\r\n        : ia(std::make_shared<input_stream_adapter>(i)) {}\r\n             ^\r\n/usr/lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/shared_ptr.h:635:14: note: Calling 'allocate_shared'\r\n      return std::allocate_shared<_Tp>(std::allocator<_Tp_nc>(),\r\n             ^\r\n/usr/lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/shared_ptr.h:619:14: note: Calling constructor for 'shared_ptr'\r\n      return shared_ptr<_Tp>(_Sp_make_shared_tag(), __a,\r\n             ^\r\n/usr/lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/shared_ptr.h:319:4: note: Calling constructor for '__shared_ptr'\r\n        : __shared_ptr<_Tp>(__tag, __a, std::forward<_Args>(__args)...)\r\n          ^\r\n/usr/lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/shared_ptr_base.h:1096:14: note: Calling constructor for '__shared_count'\r\n        : _M_ptr(), _M_refcount(__tag, (_Tp*)0, __a,\r\n                    ^\r\n/usr/lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/shared_ptr_base.h:617:18: note: Calling constructor for '_Sp_counted_ptr_inplace'\r\n          ::new (__mem) _Sp_cp_type(std::move(__a),\r\n                        ^\r\n/usr/lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/shared_ptr_base.h:522:4: note: Calling 'allocator_traits::construct'\r\n          allocator_traits<_Alloc>::construct(__a, _M_ptr(),\r\n          ^\r\n/usr/lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/alloc_traits.h:530:4: note: Calling 'new_allocator::construct'\r\n        { __a.construct(__p, std::forward<_Args>(__args)...); }\r\n          ^\r\n/usr/lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/ext/new_allocator.h:120:23: note: Calling constructor for 'input_stream_adapter'\r\n        { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }\r\n                             ^\r\n./nlohmann/detail/input/input_adapters.hpp:74:13: note: Assuming the condition is true\r\n        if ((c = get_character()) == 0xEF)\r\n            ^\r\n./nlohmann/detail/input/input_adapters.hpp:74:9: note: Taking true branch\r\n        if ((c = get_character()) == 0xEF)\r\n        ^\r\n./nlohmann/detail/input/input_adapters.hpp:76:22: note: This constructor of an object of type 'input_stream_adapter' has not returned when the virtual method was called\r\n            if ((c = get_character()) == 0xBB)\r\n                     ^\r\n./nlohmann/detail/input/input_adapters.hpp:76:22: note: Call to virtual function during construction\r\n./nlohmann/detail/input/input_adapters.hpp:78:26: warning: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall]\r\n                if ((c = get_character()) == 0xBF)\r\n                         ^\r\n/home/simon/test/b.cc:8:5: note: Calling 'operator>>'\r\n    in >> j;\r\n    ^\r\n./nlohmann/json.hpp:6135:16: note: Calling constructor for 'input_adapter'\r\n        parser(detail::input_adapter(i)).parse(false, j);\r\n               ^\r\n./nlohmann/detail/input/input_adapters.hpp:175:14: note: Calling 'make_shared'\r\n        : ia(std::make_shared<input_stream_adapter>(i)) {}\r\n             ^\r\n/usr/lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/shared_ptr.h:635:14: note: Calling 'allocate_shared'\r\n      return std::allocate_shared<_Tp>(std::allocator<_Tp_nc>(),\r\n             ^\r\n/usr/lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/shared_ptr.h:619:14: note: Calling constructor for 'shared_ptr'\r\n      return shared_ptr<_Tp>(_Sp_make_shared_tag(), __a,\r\n             ^\r\n/usr/lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/shared_ptr.h:319:4: note: Calling constructor for '__shared_ptr'\r\n        : __shared_ptr<_Tp>(__tag, __a, std::forward<_Args>(__args)...)\r\n          ^\r\n/usr/lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/shared_ptr_base.h:1096:14: note: Calling constructor for '__shared_count'\r\n        : _M_ptr(), _M_refcount(__tag, (_Tp*)0, __a,\r\n                    ^\r\n/usr/lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/shared_ptr_base.h:617:18: note: Calling constructor for '_Sp_counted_ptr_inplace'\r\n          ::new (__mem) _Sp_cp_type(std::move(__a),\r\n                        ^\r\n/usr/lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/shared_ptr_base.h:522:4: note: Calling 'allocator_traits::construct'\r\n          allocator_traits<_Alloc>::construct(__a, _M_ptr(),\r\n          ^\r\n/usr/lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/alloc_traits.h:530:4: note: Calling 'new_allocator::construct'\r\n        { __a.construct(__p, std::forward<_Args>(__args)...); }\r\n          ^\r\n/usr/lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/ext/new_allocator.h:120:23: note: Calling constructor for 'input_stream_adapter'\r\n        { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }\r\n                             ^\r\n./nlohmann/detail/input/input_adapters.hpp:74:13: note: Assuming the condition is true\r\n        if ((c = get_character()) == 0xEF)\r\n            ^\r\n./nlohmann/detail/input/input_adapters.hpp:74:9: note: Taking true branch\r\n        if ((c = get_character()) == 0xEF)\r\n        ^\r\n./nlohmann/detail/input/input_adapters.hpp:76:17: note: Assuming the condition is true\r\n            if ((c = get_character()) == 0xBB)\r\n                ^\r\n./nlohmann/detail/input/input_adapters.hpp:76:13: note: Taking true branch\r\n            if ((c = get_character()) == 0xBB)\r\n            ^\r\n./nlohmann/detail/input/input_adapters.hpp:78:26: note: This constructor of an object of type 'input_stream_adapter' has not returned when the virtual method was called\r\n                if ((c = get_character()) == 0xBF)\r\n                         ^\r\n./nlohmann/detail/input/input_adapters.hpp:78:26: note: Call to virtual function during construction\r\n```\r\n\r\nMaybe related to https://github.com/nlohmann/json/issues/94 ?\r\n\r\nP.s. the warning is not triggered if I use the `json::parse` explicitely like so:\r\n```\r\nint main()\r\n{\r\n    std::ifstream t(\"file.txt\");\r\n    std::stringstream buffer;\r\n    buffer << t.rdbuf();\r\n    auto j = nlohmann::json::parse(buffer.str());\r\n}\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1045", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1045/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1045/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1045/events", "html_url": "https://github.com/nlohmann/json/issues/1045", "id": 312506415, "node_id": "MDU6SXNzdWUzMTI1MDY0MTU=", "number": 1045, "title": "Using STL algorithms with JSON containers with expected results?", "user": {"login": "bandzaw", "id": 24864195, "node_id": "MDQ6VXNlcjI0ODY0MTk1", "avatar_url": "https://avatars1.githubusercontent.com/u/24864195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bandzaw", "html_url": "https://github.com/bandzaw", "followers_url": "https://api.github.com/users/bandzaw/followers", "following_url": "https://api.github.com/users/bandzaw/following{/other_user}", "gists_url": "https://api.github.com/users/bandzaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/bandzaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bandzaw/subscriptions", "organizations_url": "https://api.github.com/users/bandzaw/orgs", "repos_url": "https://api.github.com/users/bandzaw/repos", "events_url": "https://api.github.com/users/bandzaw/events{/privacy}", "received_events_url": "https://api.github.com/users/bandzaw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/24", "html_url": "https://github.com/nlohmann/json/milestone/24", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/24/labels", "id": 3188647, "node_id": "MDk6TWlsZXN0b25lMzE4ODY0Nw==", "number": 24, "title": "Release 3.1.3", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 33, "state": "open", "created_at": "2018-03-14T21:05:47Z", "updated_at": "2018-07-21T12:46:17Z", "due_on": null, "closed_at": null}, "comments": 11, "created_at": "2018-04-09T12:14:35Z", "updated_at": "2018-06-28T19:33:39Z", "closed_at": "2018-06-28T19:33:39Z", "author_association": "NONE", "body": "I'd like to use JSON as any other STL container with the same expected results. For example, given this code snippet:\r\n```cpp\r\n#include <iostream>\r\n#include <map>\r\n#include <algorithm>\r\n#include \"json.hpp\"\r\n\r\n\r\nint main()\r\n{\r\n    {\r\n        std::map<std::string,int> diffs;\r\n        std::map<std::string,int> m1{{\"key1\",42}};\r\n        std::map<std::string,int> m2{{\"key2\",42}};\r\n        std::set_difference(\r\n            m1.begin(), m1.end(),\r\n            m2.begin(), m2.end(),\r\n        std::inserter(diffs, diffs.end()));\r\n        std::cout << \"map diffs: \" << diffs.size() << std::endl;\r\n    }\r\n    {\r\n        nlohmann::json diffs = nlohmann::json::array();\r\n        nlohmann::json m1{{\"key1\",42}};\r\n        nlohmann::json m2{{\"key2\",42}};\r\n        std::set_difference(\r\n            m1.begin(), m1.end(),\r\n            m2.begin(), m2.end(),\r\n        std::inserter(diffs, diffs.end()));\r\n        std::cout << \"json diffs: \" << diffs.size() << std::endl;\r\n    }\r\n}\r\n```\r\nthe output is:\r\n```\r\nmap diffs: 1\r\njson diffs: 0\r\n```\r\nwhich is not what I expected. I'd really want to be able to compare JSON containers, including their keys.\r\n\r\nThe reason is that JSON iterators, when dereferenced, only return a reference to the value pointed to by the iterator (compare with std::map returning a std::pair of its key&value).\r\nBut then I thought I could use the proxy iterator: iteration_proxy and its key and value methods to work around my problem by writing a custom comparator and use it with std::set_difference:\r\n```cpp\r\n    {\r\n        nlohmann::json diffs = nlohmann::json::array();\r\n        nlohmann::json m1{{\"key1\",42}};\r\n        nlohmann::json m2{{\"key2\",42}};\r\n        auto p1 = m1.items();\r\n        auto p2 = m2.items();\r\n        std::set_difference(\r\n            p1.begin(), p1.end(),\r\n            p2.begin(), p2.end(),\r\n        std::inserter(diffs, diffs.end()),\r\n        [&](const auto& e1, const auto& e2) -> bool {\r\n            return (e1.key() < e2.key()) && (e1.value() < e2.value());\r\n        });\r\n        std::cout << \"json diffs: \" << diffs.size() << std::endl;\r\n    }\r\n```\r\nThis however, fails to compile. The compiler (g++ 7.2 (on Ubuntu 16.04)) complains that there is no iterator_category or value_type in iteration_proxy_internal. Hmm. From its name, and from the compiler message, I guess the iterator proxy is not an iterator. But, could it easily be extended to support my use case? Or can I solve my problem in another way? Or do I have to resort to writing my own algorithms for the JSON containers?\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1044", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1044/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1044/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1044/events", "html_url": "https://github.com/nlohmann/json/issues/1044", "id": 312336014, "node_id": "MDU6SXNzdWUzMTIzMzYwMTQ=", "number": 1044, "title": "Usage with gtest/gmock not working as expected", "user": {"login": "deblauwetom", "id": 2629599, "node_id": "MDQ6VXNlcjI2Mjk1OTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2629599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deblauwetom", "html_url": "https://github.com/deblauwetom", "followers_url": "https://api.github.com/users/deblauwetom/followers", "following_url": "https://api.github.com/users/deblauwetom/following{/other_user}", "gists_url": "https://api.github.com/users/deblauwetom/gists{/gist_id}", "starred_url": "https://api.github.com/users/deblauwetom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deblauwetom/subscriptions", "organizations_url": "https://api.github.com/users/deblauwetom/orgs", "repos_url": "https://api.github.com/users/deblauwetom/repos", "events_url": "https://api.github.com/users/deblauwetom/events{/privacy}", "received_events_url": "https://api.github.com/users/deblauwetom/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 344572510, "node_id": "MDU6TGFiZWwzNDQ1NzI1MTA=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20help%20needed", "name": "state: help needed", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-08T20:05:29Z", "updated_at": "2018-07-27T09:58:14Z", "closed_at": "2018-04-09T13:50:27Z", "author_association": "NONE", "body": "I am trying to use the library with google test/google mock. It seems gtest is not able to print the json value out with its universal printer.\r\n\r\nExample that fails:\r\n```cpp\r\n#include <gtest/gtest.h>\r\n#include <nlohmann/json.hpp>\r\n\r\nusing json = nlohmann::json;\r\nusing namespace testing;\r\n\r\nTEST(EnsureJsonComparesCorrectly)\r\n{\r\n   auto test1 = R\"BLA(\r\n{\r\n    \"event\" : \"test\",\r\n    \"description\" : \"Test description\"\r\n}\r\n)BLA\"_json;\r\n\r\n   auto test2 = R\"BLA(\r\n{\r\n    \"description\" : \"Test description\",\r\n    \"event\" : \"test\"\r\n}\r\n)BLA\"_json;\r\n    EXPECT_THAT(test1, Eq(test2));\r\n}\r\n\r\n```\r\n\r\nI am using 3.1.2 of nlohmann and 1.8.0 of google test/mock. I am compiling and running on macOS.\r\n\r\nI also tried to use it with gmock, but it also fails. The myCall function is defined as:\r\n```cpp\r\nvoid myCall(std::string url, nlohmann::json message);\r\n```\r\nSo this is in gmock:\r\n```cpp\r\nMOCK_METHOD2(myCall, void(std::string url, nlohmann::json message));\r\n```\r\nAnd then in the test I set an expectation, like this:\r\n```cpp\r\n EXPECT_CALL(*myMock, myCall(_, test1));\r\n```\r\n\r\nbut every time gtest tries to print, in this case the \"test1\" object, then it crashes.\r\n\r\nSo what could causing this? Gtest is normally able to use a custom PrintTo function but I could not get that to work. Any pointers on how to solve it?\r\n\r\nI have a \"workaround\" but it goes against the \"json as first-class citizen\" philosophy :)\r\nWorkaround for EXPECT_THAT:\r\n```cpp\r\nEXPECT_THAT(test1.dump(), Eq(test2.dump()));\r\n```\r\nThat is more or less acceptable, but not really.\r\nAnd then for gmock it is really too much :) see:\r\n```cpp\r\njson tmp;\r\njson test;\r\nEXPECT_CALL(*myMock, myCall(_, _)).WillOnce(SaveArg<1>(&tmp));\r\nEXPECT_THAT(tmp.dump(), Eq(test.dump()));\r\n```\r\nBut of course it should be as easy as:\r\n```cpp\r\nEXPECT_CALL(*myMock, myCall(_, test));\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1043", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1043/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1043/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1043/events", "html_url": "https://github.com/nlohmann/json/pull/1043", "id": 312334592, "node_id": "MDExOlB1bGxSZXF1ZXN0MTgwMTc2ODM1", "number": 1043, "title": "Fix trivial typo in comment.", "user": {"login": "coryan", "id": 6241635, "node_id": "MDQ6VXNlcjYyNDE2MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/6241635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coryan", "html_url": "https://github.com/coryan", "followers_url": "https://api.github.com/users/coryan/followers", "following_url": "https://api.github.com/users/coryan/following{/other_user}", "gists_url": "https://api.github.com/users/coryan/gists{/gist_id}", "starred_url": "https://api.github.com/users/coryan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coryan/subscriptions", "organizations_url": "https://api.github.com/users/coryan/orgs", "repos_url": "https://api.github.com/users/coryan/repos", "events_url": "https://api.github.com/users/coryan/events{/privacy}", "received_events_url": "https://api.github.com/users/coryan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/24", "html_url": "https://github.com/nlohmann/json/milestone/24", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/24/labels", "id": 3188647, "node_id": "MDk6TWlsZXN0b25lMzE4ODY0Nw==", "number": 24, "title": "Release 3.1.3", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 33, "state": "open", "created_at": "2018-03-14T21:05:47Z", "updated_at": "2018-07-21T12:46:17Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2018-04-08T19:49:21Z", "updated_at": "2018-04-09T06:20:01Z", "closed_at": "2018-04-09T06:19:57Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1043", "html_url": "https://github.com/nlohmann/json/pull/1043", "diff_url": "https://github.com/nlohmann/json/pull/1043.diff", "patch_url": "https://github.com/nlohmann/json/pull/1043.patch"}, "body": "Not really important, but since I saw it.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1042", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1042/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1042/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1042/events", "html_url": "https://github.com/nlohmann/json/issues/1042", "id": 312270882, "node_id": "MDU6SXNzdWUzMTIyNzA4ODI=", "number": 1042, "title": "Consequences of from_json / to_json being in namespace of data struct.", "user": {"login": "Anketell", "id": 14371698, "node_id": "MDQ6VXNlcjE0MzcxNjk4", "avatar_url": "https://avatars2.githubusercontent.com/u/14371698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Anketell", "html_url": "https://github.com/Anketell", "followers_url": "https://api.github.com/users/Anketell/followers", "following_url": "https://api.github.com/users/Anketell/following{/other_user}", "gists_url": "https://api.github.com/users/Anketell/gists{/gist_id}", "starred_url": "https://api.github.com/users/Anketell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Anketell/subscriptions", "organizations_url": "https://api.github.com/users/Anketell/orgs", "repos_url": "https://api.github.com/users/Anketell/repos", "events_url": "https://api.github.com/users/Anketell/events{/privacy}", "received_events_url": "https://api.github.com/users/Anketell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-08T04:14:48Z", "updated_at": "2018-04-15T00:41:31Z", "closed_at": "2018-04-10T06:31:49Z", "author_association": "NONE", "body": "Hi,\r\n\r\nI was recently shown nlohmann::json and have found it to be very nice.\r\n\r\nI have a query surrounding the necessity of _from_json_ / _to_json_ converters to be in a data structure's namespace. Primarily I was wondering what the benefit was of this decision? Below I've illustrated the consequences in an example that cannot easily be addressed with this constraint.\r\n\r\n**Example**\r\n\r\nPulling share trading data from two web portals that publish in JSON. There is a common struct used in more agnostic code:\r\n\r\n<pre>\r\nnamespace shares\r\n{\r\n   struct price_t\r\n   {\r\n      uint64_t time;\r\n      double   open;\r\n      double   high;\r\n      double   low;\r\n      double   close;\r\n      uint64_t volume;\r\n   };\r\n}\r\n</pre>\r\n\r\nOne site published this data in JSON as an object:\r\n<pre>\r\n{\r\n   \"time\": xxxx,\r\n   \"open\": xxxx,\r\n   \"high\": xxxx,\r\n   \"low\": xxxx,\r\n   \"close\": xxxx,\r\n   \"volume\": xxxx\r\n}\r\n</pre>\r\nThe second as an array:\r\n<pre>\r\n[ xxxx, xxxx, xxxx, xxxx, xxxx, xxxx ]\r\n</pre>\r\n\r\nGiven that I must define _from_json_ in namespace _shares_, I cannot conveniently define multiple _from_json_ converters, one for each schema.\r\n\r\nIdeally I'd like to define the following:\r\n\r\n<pre>\r\nnamespace schema_1\r\n{\r\n   void from_json( const nlohmann::json & value, shares::price_t & price )\r\n   {\r\n      price.time = value[ \"time\" ];\r\n      price.open = value[ \"open\" ];\r\n      price.high = value[ \"high\" ];\r\n      price.low = value[ \"low\" ];\r\n      price.close = value[ \"close\" ];\r\n      price.volume = value[ \"volume\" ];\r\n   }\r\n}\r\n</pre>\r\n\r\nAnd:\r\n\r\n<pre>\r\nnamespace schema_2\r\n{\r\n   void from_json( const nlohmann::json & value, shares::price_t & price )\r\n   {\r\n      price.time = value[ 0 ];\r\n      price.open = value[ 1 ];\r\n      price.high = value[ 2 ];\r\n      price.low = value[ 3 ];\r\n      price.close = value[ 4 ];\r\n      price.volume = value[ 5 ];\r\n   }\r\n}\r\n</pre>\r\n\r\nThen use them like this:\r\n\r\n<pre>\r\nshares::price_t read_schema_1( const std::string & url )\r\n{\r\n   using schema_1::from_json;\r\n\r\n   return curl.read_json( url );\r\n}\r\n</pre>\r\n\r\nAnd:\r\n\r\n<pre>\r\nshares::price_t read_schema_2( const std::string & url )\r\n{\r\n   using schema_2::from_json;\r\n\r\n   return curl.read_json( url );\r\n}\r\n\r\n</pre>\r\n\r\nIn general the necessity to place _from_json_ and _to_json_ in the the namespace of the data structure couples that data structure too tightly to an externally defined JSON schema. This results in negatively limiting its flexibility.\r\n\r\nUnless there is some compelling reason for binding these conversion routines in this way, I'd suggest that this limitation be removed."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1041", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1041/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1041/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1041/events", "html_url": "https://github.com/nlohmann/json/pull/1041", "id": 312213738, "node_id": "MDExOlB1bGxSZXF1ZXN0MTgwMTA5MTcz", "number": 1041, "title": "Package Manager: Spack", "user": {"login": "ax3l", "id": 1353258, "node_id": "MDQ6VXNlcjEzNTMyNTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1353258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ax3l", "html_url": "https://github.com/ax3l", "followers_url": "https://api.github.com/users/ax3l/followers", "following_url": "https://api.github.com/users/ax3l/following{/other_user}", "gists_url": "https://api.github.com/users/ax3l/gists{/gist_id}", "starred_url": "https://api.github.com/users/ax3l/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ax3l/subscriptions", "organizations_url": "https://api.github.com/users/ax3l/orgs", "repos_url": "https://api.github.com/users/ax3l/repos", "events_url": "https://api.github.com/users/ax3l/events{/privacy}", "received_events_url": "https://api.github.com/users/ax3l/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-04-07T14:55:35Z", "updated_at": "2018-04-09T07:55:19Z", "closed_at": "2018-04-08T09:32:36Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1041", "html_url": "https://github.com/nlohmann/json/pull/1041", "diff_url": "https://github.com/nlohmann/json/pull/1041.diff", "patch_url": "https://github.com/nlohmann/json/pull/1041.patch"}, "body": "I [contributed a package](https://github.com/spack/spack/pull/7690) to the [Spack package manager](https://spack.io/).\r\n\r\nSpack is a flexible package manager that supports multiple versions, configurations, platforms, and compilers. It is popular in high-performance computing.\r\n\r\n## Usage\r\n\r\n### CLI\r\n\r\n```bash\r\nspack install nlohmann-json\r\nspack load    nlohmann-json\r\n#             |-- \"spec\" -|\r\n```\r\n\r\n| Variant: add to spec               | Description                   |\r\n|-------------------------------------|-------------------------------|\r\n| `+test`/`~test`                     |   Build tests                 |\r\n| `+single_header` / `~single_header` | Use amalgamated single-header |\r\n\r\nExample with a variant:\r\n```bash\r\nspack install nlohmann-json ~test ~single_header\r\n#             |------------ \"spec\" ------------|\r\n```\r\n\r\nExample with a variant of a specific version with a specific compiler:\r\n```bash\r\nspack install nlohmann-json@3.1.2 ~test %clang\r\n#             |----------- \"spec\" -----------|\r\n```\r\n\r\n### Depending on the Library\r\n```python\r\nfrom spack import *\r\n\r\n\r\nclass MyProject(CMakePackage):\r\n    # ...\r\n    depends_on('nlohmann-json')\r\n```\r\n\r\n## To Do\r\n\r\n- [x] wait for the PR in https://github.com/spack/spack/pull/7690 to be reviewed & merged\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1040", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1040/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1040/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1040/events", "html_url": "https://github.com/nlohmann/json/pull/1040", "id": 312198546, "node_id": "MDExOlB1bGxSZXF1ZXN0MTgwMTAxMjM0", "number": 1040, "title": "CMake: 3.8+ is Sufficient", "user": {"login": "ax3l", "id": 1353258, "node_id": "MDQ6VXNlcjEzNTMyNTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1353258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ax3l", "html_url": "https://github.com/ax3l", "followers_url": "https://api.github.com/users/ax3l/followers", "following_url": "https://api.github.com/users/ax3l/following{/other_user}", "gists_url": "https://api.github.com/users/ax3l/gists{/gist_id}", "starred_url": "https://api.github.com/users/ax3l/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ax3l/subscriptions", "organizations_url": "https://api.github.com/users/ax3l/orgs", "repos_url": "https://api.github.com/users/ax3l/repos", "events_url": "https://api.github.com/users/ax3l/events{/privacy}", "received_events_url": "https://api.github.com/users/ax3l/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/24", "html_url": "https://github.com/nlohmann/json/milestone/24", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/24/labels", "id": 3188647, "node_id": "MDk6TWlsZXN0b25lMzE4ODY0Nw==", "number": 24, "title": "Release 3.1.3", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 33, "state": "open", "created_at": "2018-03-14T21:05:47Z", "updated_at": "2018-07-21T12:46:17Z", "due_on": null, "closed_at": null}, "comments": 3, "created_at": "2018-04-07T11:18:30Z", "updated_at": "2018-04-07T14:29:04Z", "closed_at": "2018-04-07T13:15:00Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1040", "html_url": "https://github.com/nlohmann/json/pull/1040", "diff_url": "https://github.com/nlohmann/json/pull/1040.diff", "patch_url": "https://github.com/nlohmann/json/pull/1040.patch"}, "body": "The current CMake scripts depend on CMake 3.8+. This allows us to remove old checks.\r\n\r\n* * *\r\n\r\n## Pull request checklist\r\n\r\nRead the [Contribution Guidelines](https://github.com/nlohmann/json/blob/develop/.github/CONTRIBUTING.md) for detailed information.\r\n\r\n- [x]  Changes are described in the pull request, or an [existing issue is referenced](https://github.com/nlohmann/json/issues).\r\n- [x]  The test suite [compiles and runs](https://github.com/nlohmann/json/blob/develop/README.md#execute-unit-tests) without error.\r\n- [x]  [Code coverage](https://coveralls.io/github/nlohmann/json) is 100%. Test cases can be added by editing the [test suite](https://github.com/nlohmann/json/tree/develop/test/src).\r\n- [x]  The source code is amalgamated; that is, after making changes to the sources in the `include/nlohmann` directory, run `make amalgamate` to create the single-header file `single_include/nlohmann/json.hpp`. The whole process is described [here](https://github.com/nlohmann/json/blob/develop/.github/CONTRIBUTING.md#files-to-change).\r\n\r\n## Please don't\r\n\r\n- The C++11 support varies between different **compilers** and versions. Please note the [list of supported compilers](https://github.com/nlohmann/json/blob/master/README.md#supported-compilers). Some compilers like GCC 4.8 (and earlier), Clang 3.3 (and earlier), or Microsoft Visual Studio 13.0 and earlier are known not to work due to missing or incomplete C++11 support. Please refrain from proposing changes that work around these compiler's limitations with `#ifdef`s or other means.\r\n- Specifically, I am aware of compilation problems with **Microsoft Visual Studio** (there even is an [issue label](https://github.com/nlohmann/json/issues?utf8=\u2713&q=label%3A%22visual+studio%22+) for these kind of bugs). I understand that even in 2016, complete C++11 support isn't there yet. But please also understand that I do not want to drop features or uglify the code just to make Microsoft's sub-standard compiler happy. The past has shown that there are ways to express the functionality such that the code compiles with the most recent MSVC - unfortunately, this is not the main objective of the project.\r\n- Please refrain from proposing changes that would **break [JSON](http://json.org) conformance**. If you propose a conformant extension of JSON to be supported by the library, please motivate this extension.\r\n- Please do not open pull requests that address **multiple issues**.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1039", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1039/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1039/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1039/events", "html_url": "https://github.com/nlohmann/json/issues/1039", "id": 311682631, "node_id": "MDU6SXNzdWUzMTE2ODI2MzE=", "number": 1039, "title": "const_reference operator[](const typename object_t::key_type& key) const throw instead of assert", "user": {"login": "smonasco", "id": 25205020, "node_id": "MDQ6VXNlcjI1MjA1MDIw", "avatar_url": "https://avatars3.githubusercontent.com/u/25205020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smonasco", "html_url": "https://github.com/smonasco", "followers_url": "https://api.github.com/users/smonasco/followers", "following_url": "https://api.github.com/users/smonasco/following{/other_user}", "gists_url": "https://api.github.com/users/smonasco/gists{/gist_id}", "starred_url": "https://api.github.com/users/smonasco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smonasco/subscriptions", "organizations_url": "https://api.github.com/users/smonasco/orgs", "repos_url": "https://api.github.com/users/smonasco/repos", "events_url": "https://api.github.com/users/smonasco/events{/privacy}", "received_events_url": "https://api.github.com/users/smonasco/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-04-05T16:30:31Z", "updated_at": "2018-04-05T19:08:09Z", "closed_at": "2018-04-05T19:08:09Z", "author_association": "NONE", "body": "**Feature Request**\r\n\r\nI'd rather have an out_of_range exception thrown than undefined behavior that kills my app (VS2015).\r\n"}]