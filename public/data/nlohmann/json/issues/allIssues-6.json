[{"url": "https://api.github.com/repos/nlohmann/json/issues/1038", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1038/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1038/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1038/events", "html_url": "https://github.com/nlohmann/json/issues/1038", "id": 311464289, "node_id": "MDU6SXNzdWUzMTE0NjQyODk=", "number": 1038, "title": "Trying to retrieve data from nested objects", "user": {"login": "EtienneBerube", "id": 18299036, "node_id": "MDQ6VXNlcjE4Mjk5MDM2", "avatar_url": "https://avatars1.githubusercontent.com/u/18299036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EtienneBerube", "html_url": "https://github.com/EtienneBerube", "followers_url": "https://api.github.com/users/EtienneBerube/followers", "following_url": "https://api.github.com/users/EtienneBerube/following{/other_user}", "gists_url": "https://api.github.com/users/EtienneBerube/gists{/gist_id}", "starred_url": "https://api.github.com/users/EtienneBerube/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EtienneBerube/subscriptions", "organizations_url": "https://api.github.com/users/EtienneBerube/orgs", "repos_url": "https://api.github.com/users/EtienneBerube/repos", "events_url": "https://api.github.com/users/EtienneBerube/events{/privacy}", "received_events_url": "https://api.github.com/users/EtienneBerube/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-04-05T03:53:39Z", "updated_at": "2018-04-08T07:29:52Z", "closed_at": "2018-04-07T23:21:37Z", "author_association": "NONE", "body": "Hi, I'm trying to map data from a Json file to individual objects in order to sort them and perform other operations on them. However, the data structure required is quite complex and makes it hard to navigate. \r\nHere is a snippet of the Json file:\r\n```js\r\n{\r\n  \"items\":\r\n  {\r\n    \"item\":\r\n    [\r\n      {\r\n        \"id\": \"0001\",\r\n        \"type\": \"donut\",\r\n        \"name\": \"Cake\",\r\n        \"ppu\": 0.55,\r\n        \"batters\":\r\n        {\r\n          \"batter\":\r\n          [\r\n            { \"id\": \"1001\", \"type\": \"Regular\" },\r\n            { \"id\": \"1002\", \"type\": \"Chocolate\" },\r\n            { \"id\": \"1003\", \"type\": \"Blueberry\" },\r\n            { \"id\": \"1004\", \"type\": \"Devil's Food\" }\r\n          ]\r\n        },\r\n        \"topping\":\r\n        [\r\n          { \"id\": \"5001\", \"type\": \"None\" },\r\n          { \"id\": \"5002\", \"type\": \"Glazed\" },\r\n          { \"id\": \"5005\", \"type\": \"Sugar\" },\r\n          { \"id\": \"5007\", \"type\": \"Powdered Sugar\" },\r\n          { \"id\": \"5006\", \"type\": \"Chocolate with Sprinkles\" },\r\n          { \"id\": \"5003\", \"type\": \"Chocolate\" },\r\n          { \"id\": \"5004\", \"type\": \"Maple\" }\r\n        ]\r\n      },\r\n      [...] Other items could be there\r\n    ]\r\n  }\r\n}\r\n```\r\nI cannot change the way it is organised. However, I cannot figure out how to properly get every element and extract it.\r\n\r\nMy current code:\r\n\r\n```cpp\r\nifstream input(\"sample.json\");\r\n\r\n    json json1;\r\n\r\n    input >> json1;\r\n\r\n    json json2 = json1[\"items\"][\"item\"];\r\n\r\n    for ( auto& item : json2.get<json::object_t>() ){\r\n        Item *tempItem = new Item();\r\n\r\n        tempItem->setId(item.at(\"id\"));\r\n        tempItem->setName(item.at(\"name\"));\r\n        tempItem->setType(item.at(\"type\"));\r\n        tempItem->setId(item.at(\"ppu\"));\r\n        //Trying to go in the array batters\r\n        object_t temp_obj = item.at(\"batters\");\r\n\r\n        items.push_back(new Item());\r\n    }\r\n```\r\n\r\nNote: Even then I get an error because `json2.get<json::object_t>() ` returns a pair<>. \r\n\r\nThanks in advance!\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1037", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1037/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1037/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1037/events", "html_url": "https://github.com/nlohmann/json/issues/1037", "id": 311267360, "node_id": "MDU6SXNzdWUzMTEyNjczNjA=", "number": 1037, "title": "Direct download link for json_fwd.hpp?", "user": {"login": "wolframroesler", "id": 25565229, "node_id": "MDQ6VXNlcjI1NTY1MjI5", "avatar_url": "https://avatars0.githubusercontent.com/u/25565229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wolframroesler", "html_url": "https://github.com/wolframroesler", "followers_url": "https://api.github.com/users/wolframroesler/followers", "following_url": "https://api.github.com/users/wolframroesler/following{/other_user}", "gists_url": "https://api.github.com/users/wolframroesler/gists{/gist_id}", "starred_url": "https://api.github.com/users/wolframroesler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wolframroesler/subscriptions", "organizations_url": "https://api.github.com/users/wolframroesler/orgs", "repos_url": "https://api.github.com/users/wolframroesler/repos", "events_url": "https://api.github.com/users/wolframroesler/events{/privacy}", "received_events_url": "https://api.github.com/users/wolframroesler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-04T14:59:27Z", "updated_at": "2018-04-23T18:04:29Z", "closed_at": "2018-04-23T18:04:29Z", "author_association": "NONE", "body": "On the release page (https://github.com/nlohmann/json/releases) there's a hyperlink to download the single header version of the library (currently, https://github.com/nlohmann/json/releases/download/v3.1.2/json.hpp). How about adding a similar link for the forward header file, json_fwd.hpp?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1036", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1036/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1036/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1036/events", "html_url": "https://github.com/nlohmann/json/issues/1036", "id": 310807361, "node_id": "MDU6SXNzdWUzMTA4MDczNjE=", "number": 1036, "title": "I know the library supports UTF-8, but failed to dump the value", "user": {"login": "htonus", "id": 805160, "node_id": "MDQ6VXNlcjgwNTE2MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/805160?v=4", "gravatar_id": "", "url": "https://api.github.com/users/htonus", "html_url": "https://github.com/htonus", "followers_url": "https://api.github.com/users/htonus/followers", "following_url": "https://api.github.com/users/htonus/following{/other_user}", "gists_url": "https://api.github.com/users/htonus/gists{/gist_id}", "starred_url": "https://api.github.com/users/htonus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/htonus/subscriptions", "organizations_url": "https://api.github.com/users/htonus/orgs", "repos_url": "https://api.github.com/users/htonus/repos", "events_url": "https://api.github.com/users/htonus/events{/privacy}", "received_events_url": "https://api.github.com/users/htonus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-04-03T12:01:36Z", "updated_at": "2018-04-03T13:24:08Z", "closed_at": "2018-04-03T13:24:08Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\nFailed to dump object with UTF8 value;\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\njsonObject[\"name\"] = \"Telef\u00f3nica\";\r\njsonObject.dump()\r\n\r\n- What is the expected behavior?\r\nstringified json\r\n- And what is the actual behavior instead?\r\nthrown an exeption. Is it possible to avoid exceptions?\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\nVS 2017 Community edition\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\nFrom dev branch\r\n\r\n- If you experience a compilation error: can you [compile and run the unit tests](https://github.com/nlohmann/json#execute-unit-tests)?\r\n\r\n\r\n**Feature Request**\r\n\r\n- Describe the feature in as much detail as possible.\r\n\r\n- Include sample usage where appropriate.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1035", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1035/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1035/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1035/events", "html_url": "https://github.com/nlohmann/json/issues/1035", "id": 310707103, "node_id": "MDU6SXNzdWUzMTA3MDcxMDM=", "number": 1035, "title": "Putting a Vec3-like vector into a json object", "user": {"login": "PopThis", "id": 35315308, "node_id": "MDQ6VXNlcjM1MzE1MzA4", "avatar_url": "https://avatars2.githubusercontent.com/u/35315308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PopThis", "html_url": "https://github.com/PopThis", "followers_url": "https://api.github.com/users/PopThis/followers", "following_url": "https://api.github.com/users/PopThis/following{/other_user}", "gists_url": "https://api.github.com/users/PopThis/gists{/gist_id}", "starred_url": "https://api.github.com/users/PopThis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PopThis/subscriptions", "organizations_url": "https://api.github.com/users/PopThis/orgs", "repos_url": "https://api.github.com/users/PopThis/repos", "events_url": "https://api.github.com/users/PopThis/events{/privacy}", "received_events_url": "https://api.github.com/users/PopThis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-04-03T06:15:43Z", "updated_at": "2018-04-08T12:39:07Z", "closed_at": "2018-04-08T12:39:07Z", "author_association": "NONE", "body": "I have a struct like this\r\n\r\n```cpp\r\nstruct Vertexes\r\n{\r\npublic:\r\n\t// Construction\r\n\tfloat x_;\r\n\tfloat y_;\r\n\tfloat z_;\r\n\r\n\tVertexes(float x, float y, float z) : x_(x), y_(y), z_(z) {}\r\n\r\n\t// Getters\r\n\tfloat getX() const { return x_; }\r\n\tfloat getY() const { return y_; }\r\n\tfloat getZ() const { return z_; }\r\n\r\n\t// Setters\r\n\tvoid setX(float val) { x_ = val; }\r\n\tvoid setY(float val) { y_ = val; }\r\n\tvoid setZ(float val) { z_ = val; }\r\n\r\n\tstd::string getString() {\r\n\t\treturn std::to_string(x_) + \", \" + std::to_string(z_) + \", \" + std::to_string(y_);\r\n\t}\r\n\r\n\tVertexes flip() const { return Vertexes{ x_ , z_ , y_ }; }\r\n\tVertexes smaller() const { return Vertexes{ x_ / 100, y_ / 100, z_ / 100 }; }\r\n\tVertexes smallerflip() const { return Vertexes{ x_ / 100, z_ / 100, y_ / 100 }; }\r\n\r\n};\r\n\r\n```\r\n\r\nSure, I could even flatten this down to just a \r\n```cpp\r\nstruct Vec3\r\n{\r\n   float x, y, z;\r\n}\r\n```\r\n\r\nBut \r\n\r\n```cpp\r\nstd::vector<Vertexes> SavedPoints = { {10, 1, 5}, {7,2,2} };\r\njson v(SavedPoints);\r\nstd::ofstream o(\"file.json\");\r\no << std::setw(4) << v << std::endl;\r\n```\r\n\r\nWould not work with to_json template (line 312 at to_json.hpp)\r\n\r\nIs there a way to store this vector of vertexes as a json output? such as\r\nv[\"list\"] = SavedPoints and results in\r\n\r\n```js\r\n{\"0\":[\r\n     [10, 1, 5]\r\n     ],\r\n \"1\":[[7,2 ,2]\r\n     ]\r\n }\r\n```\r\n\r\nThank you very much!"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1034", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1034/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1034/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1034/events", "html_url": "https://github.com/nlohmann/json/issues/1034", "id": 310489448, "node_id": "MDU6SXNzdWUzMTA0ODk0NDg=", "number": 1034, "title": "Ternary operator crash", "user": {"login": "parfenuk", "id": 4920456, "node_id": "MDQ6VXNlcjQ5MjA0NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/4920456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/parfenuk", "html_url": "https://github.com/parfenuk", "followers_url": "https://api.github.com/users/parfenuk/followers", "following_url": "https://api.github.com/users/parfenuk/following{/other_user}", "gists_url": "https://api.github.com/users/parfenuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/parfenuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/parfenuk/subscriptions", "organizations_url": "https://api.github.com/users/parfenuk/orgs", "repos_url": "https://api.github.com/users/parfenuk/repos", "events_url": "https://api.github.com/users/parfenuk/events{/privacy}", "received_events_url": "https://api.github.com/users/parfenuk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-02T13:48:15Z", "updated_at": "2018-04-02T15:56:18Z", "closed_at": "2018-04-02T15:56:18Z", "author_association": "NONE", "body": "This simple code crashes:\r\n`string someStr;`\r\n`json j = json::object();`\r\n`// the next line crashes`\r\n`j[\"someKey\"] = someStr.empty() ? nullptr : someStr;`\r\n\r\nHowever, if I use standard if-else condition, everything is fine:\r\n`string someStr;`\r\n`json j = json::object();`\r\n`// the code below works ok`\r\n`if (someStr.empty()) j[\"someKey\"] = nullptr;`\r\n`else j[\"someKey\"] = someStr;`\r\n\r\nAlso if S is not empty - both versions work. \r\nIs it a bug or feature? :)\r\n\r\nI'm using GNU C++ 14 compiler, IDE Xcode 9.3"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1033", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1033/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1033/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1033/events", "html_url": "https://github.com/nlohmann/json/issues/1033", "id": 310329219, "node_id": "MDU6SXNzdWUzMTAzMjkyMTk=", "number": 1033, "title": "Issued with Clion Inspection Resolution since 2018.1", "user": {"login": "trivigy", "id": 3146062, "node_id": "MDQ6VXNlcjMxNDYwNjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/3146062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trivigy", "html_url": "https://github.com/trivigy", "followers_url": "https://api.github.com/users/trivigy/followers", "following_url": "https://api.github.com/users/trivigy/following{/other_user}", "gists_url": "https://api.github.com/users/trivigy/gists{/gist_id}", "starred_url": "https://api.github.com/users/trivigy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trivigy/subscriptions", "organizations_url": "https://api.github.com/users/trivigy/orgs", "repos_url": "https://api.github.com/users/trivigy/repos", "events_url": "https://api.github.com/users/trivigy/events{/privacy}", "received_events_url": "https://api.github.com/users/trivigy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-04-01T14:52:27Z", "updated_at": "2018-04-03T17:18:10Z", "closed_at": "2018-04-03T16:11:10Z", "author_association": "NONE", "body": "Really not sure how to touch base with clion nor do I feel like they will do anything to fix this. Figured I will post it here and see if anyone else has the same issue.\r\n\r\nIn both cases I am getting: \"no matching function\" and \"no matching constructor\".\r\n\r\nHowever the code compiles and works fine.\r\n![screenshot from 2018-04-01 10-48-56](https://user-images.githubusercontent.com/3146062/38174413-ba910dd8-359a-11e8-9e91-1a6f8feb9d1d.png)\r\n![screenshot from 2018-04-01 10-48-45](https://user-images.githubusercontent.com/3146062/38174414-baa2e364-359a-11e8-8f37-9ca07263c493.png)\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1032", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1032/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1032/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1032/events", "html_url": "https://github.com/nlohmann/json/issues/1032", "id": 310270110, "node_id": "MDU6SXNzdWUzMTAyNzAxMTA=", "number": 1032, "title": "Some testcases fail and one never finishes", "user": {"login": "yurivict", "id": 271906, "node_id": "MDQ6VXNlcjI3MTkwNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/271906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yurivict", "html_url": "https://github.com/yurivict", "followers_url": "https://api.github.com/users/yurivict/followers", "following_url": "https://api.github.com/users/yurivict/following{/other_user}", "gists_url": "https://api.github.com/users/yurivict/gists{/gist_id}", "starred_url": "https://api.github.com/users/yurivict/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yurivict/subscriptions", "organizations_url": "https://api.github.com/users/yurivict/orgs", "repos_url": "https://api.github.com/users/yurivict/repos", "events_url": "https://api.github.com/users/yurivict/events{/privacy}", "received_events_url": "https://api.github.com/users/yurivict/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2018-03-31T20:34:04Z", "updated_at": "2018-07-29T08:52:27Z", "closed_at": "2018-04-05T15:50:25Z", "author_association": "NONE", "body": "```\r\n      Start 10: test-cbor_all\r\n10/78 Test #10: test-cbor_all .......................***Exception: Child aborted  9.98 sec\r\n      Start 56: test-msgpack_all\r\n56/78 Test #56: test-msgpack_all ....................***Exception: Child aborted  9.99 sec\r\n      Start 74: test-ubjson_all\r\n74/78 Test #74: test-ubjson_all .....................***Exception: Child aborted  2.96 sec\r\n      Start 78: test-unicode_all\r\n/// {never finishes}\r\n```\r\n\r\nOS: FreeBSD-11.1 amd64\r\nVersion 3.1.2 built from port, while trying to update it."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1031", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1031/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1031/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1031/events", "html_url": "https://github.com/nlohmann/json/issues/1031", "id": 309827558, "node_id": "MDU6SXNzdWUzMDk4Mjc1NTg=", "number": 1031, "title": "Can this class work with wchar_t / std::wstring?", "user": {"login": "htonus", "id": 805160, "node_id": "MDQ6VXNlcjgwNTE2MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/805160?v=4", "gravatar_id": "", "url": "https://api.github.com/users/htonus", "html_url": "https://github.com/htonus", "followers_url": "https://api.github.com/users/htonus/followers", "following_url": "https://api.github.com/users/htonus/following{/other_user}", "gists_url": "https://api.github.com/users/htonus/gists{/gist_id}", "starred_url": "https://api.github.com/users/htonus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/htonus/subscriptions", "organizations_url": "https://api.github.com/users/htonus/orgs", "repos_url": "https://api.github.com/users/htonus/repos", "events_url": "https://api.github.com/users/htonus/events{/privacy}", "received_events_url": "https://api.github.com/users/htonus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/24", "html_url": "https://github.com/nlohmann/json/milestone/24", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/24/labels", "id": 3188647, "node_id": "MDk6TWlsZXN0b25lMzE4ODY0Nw==", "number": 24, "title": "Release 3.1.3", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 33, "state": "open", "created_at": "2018-03-14T21:05:47Z", "updated_at": "2018-07-21T12:46:17Z", "due_on": null, "closed_at": null}, "comments": 17, "created_at": "2018-03-29T16:47:58Z", "updated_at": "2018-04-29T15:30:31Z", "closed_at": "2018-04-29T15:30:30Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\nFailed to parse wchar_t string\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\njson::parse(wstring) failed\r\n- What is the expected behavior?\r\nthe string was parsed\r\n- And what is the actual behavior instead?\r\nerror\r\n- Which compiler and operating system are you using? Is it a [supported compiler]\r\nVS 2017 Community edition\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\nTook from developer branch\r\n- If you experience a compilation error: can you [compile and run the unit tests](https://github.com/nlohmann/json#execute-unit-tests)?\r\n\r\n\r\n**Feature Request**\r\n\r\n- Describe the feature in as much detail as possible.\r\n\r\n- Include sample usage where appropriate.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1030", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1030/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1030/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1030/events", "html_url": "https://github.com/nlohmann/json/issues/1030", "id": 309765443, "node_id": "MDU6SXNzdWUzMDk3NjU0NDM=", "number": 1030, "title": "Makefile: Valgrind flags have no effect", "user": {"login": "tsemaylo", "id": 6775363, "node_id": "MDQ6VXNlcjY3NzUzNjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/6775363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tsemaylo", "html_url": "https://github.com/tsemaylo", "followers_url": "https://api.github.com/users/tsemaylo/followers", "following_url": "https://api.github.com/users/tsemaylo/following{/other_user}", "gists_url": "https://api.github.com/users/tsemaylo/gists{/gist_id}", "starred_url": "https://api.github.com/users/tsemaylo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tsemaylo/subscriptions", "organizations_url": "https://api.github.com/users/tsemaylo/orgs", "repos_url": "https://api.github.com/users/tsemaylo/repos", "events_url": "https://api.github.com/users/tsemaylo/events{/privacy}", "received_events_url": "https://api.github.com/users/tsemaylo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/24", "html_url": "https://github.com/nlohmann/json/milestone/24", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/24/labels", "id": 3188647, "node_id": "MDk6TWlsZXN0b25lMzE4ODY0Nw==", "number": 24, "title": "Release 3.1.3", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 33, "state": "open", "created_at": "2018-03-14T21:05:47Z", "updated_at": "2018-07-21T12:46:17Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2018-03-29T13:58:10Z", "updated_at": "2018-03-29T16:45:11Z", "closed_at": "2018-03-29T16:45:10Z", "author_association": "NONE", "body": "There is the following Valgrind configuration in CMake file from test subdirectory (test/CMakeLists.txt).\r\nAnd it looks like there is a typo.\r\n\r\n```cmake\r\nif(JSON_Valgrind)\r\n    find_program(CMAKE_MEMORYCHECK_COMMAND valgrind)\r\n    message(STATUS \"Executing test suite with Valgrind (${CMAKE_MEMORYCHECK_COMMAND})\")\r\n    set(MEMORYCHECK_COMMAND_OPTIONS \"--error-exitcode=1 --leak-check=full\")\r\n    set(memcheck_command \"${CMAKE_MEMORYCHECK_COMMAND} ${CMAKE_MEMORYCHECK_COMMAND_OPTIONS}\")\r\n    separate_arguments(memcheck_command)\r\nendif()\r\n```\r\n\r\nVariable `CMAKE_MEMORYCHECK_COMMAND_OPTIONS` is not initialized instead of that we have `set(MEMORYCHECK_COMMAND_OPTIONS, ...)`. Therefore automated execution of tests will not report any memory check problem. "}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1029", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1029/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1029/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1029/events", "html_url": "https://github.com/nlohmann/json/issues/1029", "id": 309633320, "node_id": "MDU6SXNzdWUzMDk2MzMzMjA=", "number": 1029, "title": "\u300c==\u300d Should be \u300c>\u300d", "user": {"login": "tnie", "id": 5952845, "node_id": "MDQ6VXNlcjU5NTI4NDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/5952845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tnie", "html_url": "https://github.com/tnie", "followers_url": "https://api.github.com/users/tnie/followers", "following_url": "https://api.github.com/users/tnie/following{/other_user}", "gists_url": "https://api.github.com/users/tnie/gists{/gist_id}", "starred_url": "https://api.github.com/users/tnie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tnie/subscriptions", "organizations_url": "https://api.github.com/users/tnie/orgs", "repos_url": "https://api.github.com/users/tnie/repos", "events_url": "https://api.github.com/users/tnie/events{/privacy}", "received_events_url": "https://api.github.com/users/tnie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/24", "html_url": "https://github.com/nlohmann/json/milestone/24", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/24/labels", "id": 3188647, "node_id": "MDk6TWlsZXN0b25lMzE4ODY0Nw==", "number": 24, "title": "Release 3.1.3", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 33, "state": "open", "created_at": "2018-03-14T21:05:47Z", "updated_at": "2018-07-21T12:46:17Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2018-03-29T06:23:43Z", "updated_at": "2018-03-29T16:41:00Z", "closed_at": "2018-03-29T16:41:00Z", "author_association": "NONE", "body": "https://github.com/nlohmann/json/blob/develop/doc/examples/operator__greater.cpp\r\n\r\n```cpp\r\n    std::cout << array_1 << \" == \" << array_2 << \" \" << (array_1 > array_2) << '\\n';\r\n    std::cout << object_1 << \" == \" << object_2 << \" \" << (object_1 > object_2) << '\\n';\r\n    std::cout << number_1 << \" == \" << number_2 << \" \" << (number_1 > number_2) << '\\n';\r\n    std::cout << string_1 << \" == \" << string_2 << \" \" << (string_1 > string_2) << '\\n';\r\n\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1028", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1028/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1028/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1028/events", "html_url": "https://github.com/nlohmann/json/pull/1028", "id": 309622027, "node_id": "MDExOlB1bGxSZXF1ZXN0MTc4MjI4NTgz", "number": 1028, "title": "Added support for string_view in C++17", "user": {"login": "gracicot", "id": 2906673, "node_id": "MDQ6VXNlcjI5MDY2NzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/2906673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gracicot", "html_url": "https://github.com/gracicot", "followers_url": "https://api.github.com/users/gracicot/followers", "following_url": "https://api.github.com/users/gracicot/following{/other_user}", "gists_url": "https://api.github.com/users/gracicot/gists{/gist_id}", "starred_url": "https://api.github.com/users/gracicot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gracicot/subscriptions", "organizations_url": "https://api.github.com/users/gracicot/orgs", "repos_url": "https://api.github.com/users/gracicot/repos", "events_url": "https://api.github.com/users/gracicot/events{/privacy}", "received_events_url": "https://api.github.com/users/gracicot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374233, "node_id": "MDU6TGFiZWw0NjM3NDIzMw==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20enhancement/improvement", "name": "kind: enhancement/improvement", "color": "207de5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/24", "html_url": "https://github.com/nlohmann/json/milestone/24", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/24/labels", "id": 3188647, "node_id": "MDk6TWlsZXN0b25lMzE4ODY0Nw==", "number": 24, "title": "Release 3.1.3", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 33, "state": "open", "created_at": "2018-03-14T21:05:47Z", "updated_at": "2018-07-21T12:46:17Z", "due_on": null, "closed_at": null}, "comments": 12, "created_at": "2018-03-29T05:11:59Z", "updated_at": "2018-06-23T15:10:10Z", "closed_at": "2018-06-23T15:10:05Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1028", "html_url": "https://github.com/nlohmann/json/pull/1028", "diff_url": "https://github.com/nlohmann/json/pull/1028.diff", "patch_url": "https://github.com/nlohmann/json/pull/1028.patch"}, "body": "This patch adds support for `std::string_view` conversion (explicit and implicit). It also added construction from `std::string_view`.\r\n\r\nI did that by following how many compatible array types were handled and adding a type trait that checks for compatible string types.\r\n\r\nHowever, I fear the trait is kinda loose in which type is allows (see `is_compatible_string_type`). Tell me if it needs to be fixed!"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1027", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1027/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1027/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1027/events", "html_url": "https://github.com/nlohmann/json/issues/1027", "id": 309074382, "node_id": "MDU6SXNzdWUzMDkwNzQzODI=", "number": 1027, "title": "HOCON reader?", "user": {"login": "abrownsword", "id": 9805159, "node_id": "MDQ6VXNlcjk4MDUxNTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9805159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abrownsword", "html_url": "https://github.com/abrownsword", "followers_url": "https://api.github.com/users/abrownsword/followers", "following_url": "https://api.github.com/users/abrownsword/following{/other_user}", "gists_url": "https://api.github.com/users/abrownsword/gists{/gist_id}", "starred_url": "https://api.github.com/users/abrownsword/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abrownsword/subscriptions", "organizations_url": "https://api.github.com/users/abrownsword/orgs", "repos_url": "https://api.github.com/users/abrownsword/repos", "events_url": "https://api.github.com/users/abrownsword/events{/privacy}", "received_events_url": "https://api.github.com/users/abrownsword/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-03-27T18:02:58Z", "updated_at": "2018-04-02T19:55:48Z", "closed_at": "2018-04-02T19:55:48Z", "author_association": "NONE", "body": "**Feature Request**\r\n\r\nSince your JSON C++ API is mature and so much nicer than cpp-hocon's (not to mention WAY fewer dependencies), it would be really nice if this project were able to read HOCON files.  I would imagine the include mechanism would be the trickiest part, whereas having the parser skip comments and cope with the format's extensions shouldn't be a big deal.  Writing would be substantially more complex (due to the need to support adding includes, comments, etc) and is substantially less interesting since HOCON's primary goal seems to be to make config files more *human* writeable.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1026", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1026/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1026/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1026/events", "html_url": "https://github.com/nlohmann/json/pull/1026", "id": 309060301, "node_id": "MDExOlB1bGxSZXF1ZXN0MTc3ODA5NTMw", "number": 1026, "title": "Added public target_compile_features for auto and constexpr", "user": {"login": "ktonon", "id": 22655, "node_id": "MDQ6VXNlcjIyNjU1", "avatar_url": "https://avatars0.githubusercontent.com/u/22655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktonon", "html_url": "https://github.com/ktonon", "followers_url": "https://api.github.com/users/ktonon/followers", "following_url": "https://api.github.com/users/ktonon/following{/other_user}", "gists_url": "https://api.github.com/users/ktonon/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktonon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktonon/subscriptions", "organizations_url": "https://api.github.com/users/ktonon/orgs", "repos_url": "https://api.github.com/users/ktonon/repos", "events_url": "https://api.github.com/users/ktonon/events{/privacy}", "received_events_url": "https://api.github.com/users/ktonon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/24", "html_url": "https://github.com/nlohmann/json/milestone/24", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/24/labels", "id": 3188647, "node_id": "MDk6TWlsZXN0b25lMzE4ODY0Nw==", "number": 24, "title": "Release 3.1.3", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 33, "state": "open", "created_at": "2018-03-14T21:05:47Z", "updated_at": "2018-07-21T12:46:17Z", "due_on": null, "closed_at": null}, "comments": 16, "created_at": "2018-03-27T17:21:31Z", "updated_at": "2018-04-03T15:34:49Z", "closed_at": "2018-04-03T15:34:43Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1026", "html_url": "https://github.com/nlohmann/json/pull/1026", "diff_url": "https://github.com/nlohmann/json/pull/1026.diff", "patch_url": "https://github.com/nlohmann/json/pull/1026.patch"}, "body": "For projects which consume this header-only library using CMake, this adds public dependencies on C++ features to the library target. Requires an update to CMake 3.1.0, as `target_compile_features` was not available before that version.\r\n\r\nAlso, I'm not sure that the list of features is exhaustive. I only notice the use of `auto` and `constexpr`, and including these two was sufficient to get my example building without having to manually specify C++ 11.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1025", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1025/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1025/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1025/events", "html_url": "https://github.com/nlohmann/json/issues/1025", "id": 308904263, "node_id": "MDU6SXNzdWUzMDg5MDQyNjM=", "number": 1025, "title": "add json string in previous string??", "user": {"login": "Mamlesh", "id": 37332116, "node_id": "MDQ6VXNlcjM3MzMyMTE2", "avatar_url": "https://avatars1.githubusercontent.com/u/37332116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mamlesh", "html_url": "https://github.com/Mamlesh", "followers_url": "https://api.github.com/users/Mamlesh/followers", "following_url": "https://api.github.com/users/Mamlesh/following{/other_user}", "gists_url": "https://api.github.com/users/Mamlesh/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mamlesh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mamlesh/subscriptions", "organizations_url": "https://api.github.com/users/Mamlesh/orgs", "repos_url": "https://api.github.com/users/Mamlesh/repos", "events_url": "https://api.github.com/users/Mamlesh/events{/privacy}", "received_events_url": "https://api.github.com/users/Mamlesh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-27T10:08:06Z", "updated_at": "2018-04-02T19:56:03Z", "closed_at": "2018-04-02T19:56:03Z", "author_association": "NONE", "body": "1st string..\r\n\r\n{ { \"Layer\",  },\r\n{ \"Data\",{\r\n{ { \"Type\", },{ \"Count\", },\r\n{ \"Point\",\r\n{\r\n\t\t\t\r\n}\r\n}\r\n}\r\n} },\r\n};\r\n\r\n2nd string..\r\n\r\n{ \"Point1\",\r\n{\r\n{ \"X\", },\r\n{ \"Y\", },\r\n{ \"Z\", }\r\n} },\r\n\r\n\r\nhow to add 2nd string into \"Point\" section of 1st string???"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1024", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1024/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1024/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1024/events", "html_url": "https://github.com/nlohmann/json/pull/1024", "id": 308625429, "node_id": "MDExOlB1bGxSZXF1ZXN0MTc3NDg2Mzc1", "number": 1024, "title": "Optional comment stripping.", "user": {"login": "BrunoFiligree", "id": 32366481, "node_id": "MDQ6VXNlcjMyMzY2NDgx", "avatar_url": "https://avatars1.githubusercontent.com/u/32366481?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BrunoFiligree", "html_url": "https://github.com/BrunoFiligree", "followers_url": "https://api.github.com/users/BrunoFiligree/followers", "following_url": "https://api.github.com/users/BrunoFiligree/following{/other_user}", "gists_url": "https://api.github.com/users/BrunoFiligree/gists{/gist_id}", "starred_url": "https://api.github.com/users/BrunoFiligree/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BrunoFiligree/subscriptions", "organizations_url": "https://api.github.com/users/BrunoFiligree/orgs", "repos_url": "https://api.github.com/users/BrunoFiligree/repos", "events_url": "https://api.github.com/users/BrunoFiligree/events{/privacy}", "received_events_url": "https://api.github.com/users/BrunoFiligree/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-03-26T15:38:46Z", "updated_at": "2018-04-03T18:07:25Z", "closed_at": "2018-04-02T19:55:09Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1024", "html_url": "https://github.com/nlohmann/json/pull/1024", "diff_url": "https://github.com/nlohmann/json/pull/1024.diff", "patch_url": "https://github.com/nlohmann/json/pull/1024.patch"}, "body": "I've added optional code to strip javascript '//' style comments from a json file. This is only enabled if the JSON_STRIP_COMMENTS C++ macro is defined. By default this does not break conformance with the JSON standard, but allows cases where comment stripping is needed to be enabled on an ad-hoc basis without having to introduce pre-parsing phases with any associated extra code.\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1023", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1023/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1023/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1023/events", "html_url": "https://github.com/nlohmann/json/issues/1023", "id": 308085058, "node_id": "MDU6SXNzdWUzMDgwODUwNTg=", "number": 1023, "title": "RFC: fluent parsing interface", "user": {"login": "markand", "id": 11919008, "node_id": "MDQ6VXNlcjExOTE5MDA4", "avatar_url": "https://avatars0.githubusercontent.com/u/11919008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markand", "html_url": "https://github.com/markand", "followers_url": "https://api.github.com/users/markand/followers", "following_url": "https://api.github.com/users/markand/following{/other_user}", "gists_url": "https://api.github.com/users/markand/gists{/gist_id}", "starred_url": "https://api.github.com/users/markand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markand/subscriptions", "organizations_url": "https://api.github.com/users/markand/orgs", "repos_url": "https://api.github.com/users/markand/repos", "events_url": "https://api.github.com/users/markand/events{/privacy}", "received_events_url": "https://api.github.com/users/markand/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 735376215, "node_id": "MDU6TGFiZWw3MzUzNzYyMTU=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20needs%20more%20info", "name": "state: needs more info", "color": "f9d0c4", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-03-23T15:55:18Z", "updated_at": "2018-04-05T15:12:39Z", "closed_at": "2018-04-05T15:12:39Z", "author_association": "NONE", "body": "**Feature Request**\r\n\r\nI'm searching a convenient way for destructuring data where I can have the following requirements:\r\n\r\n  - I do not need intermediate value, result should be returned in any case\r\n  - If I require a value from a JSON object and...\r\n    - ... value is not defined: I throw a custom exception\r\n    - ... value is not the good type: I throw an exception\r\n  - If I search an optional value and...\r\n    - ... value is not defined: I return a default value given\r\n    - ... value is not the good type: I throw an exception\r\n\r\nFinal code should look like this:\r\n\r\n```cpp\r\nconst nlohmann::json json{\r\n    { \"hostname\", \"localhost\" }\r\n};\r\n\r\nconst parser ps(json);\r\n\r\n// s is a object I want to convert from JSON.\r\nserver s;\r\ns.set_host(ps.get<std::string>(\"hostname\")\r\n             .error<std::invalid_argument>(\"invalid hostname\"));\r\ns.set_port(ps.get<std::string>(\"port\")\r\n             .optional(\"irc\")\r\n             .error<std::runtime_error>(\"invalid port number\"));\r\n```\r\n\r\nIn this case, I require **hostname** property, if it's missing `std::invalid_argument(\"invalid hostname\")` will be thrown. For **port** property, if the value is not defined, I return **irc** otherwise if it's defined in the wrong type I throw `std::invalid_argument(\"invalid port number\")`.\r\n\r\nThe code is not complete yet, but you can see a simple POC in this gist:\r\n\r\nhttps://gist.github.com/markand/45c9f6a3f9239802850badd8869117e3\r\n\r\nWhat are your thoughts? How do you usually deserialize unverified input?\r\n    \r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1022", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1022/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1022/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1022/events", "html_url": "https://github.com/nlohmann/json/issues/1022", "id": 307526274, "node_id": "MDU6SXNzdWUzMDc1MjYyNzQ=", "number": 1022, "title": "Does it support chinese character?", "user": {"login": "JueLance", "id": 5292953, "node_id": "MDQ6VXNlcjUyOTI5NTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/5292953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JueLance", "html_url": "https://github.com/JueLance", "followers_url": "https://api.github.com/users/JueLance/followers", "following_url": "https://api.github.com/users/JueLance/following{/other_user}", "gists_url": "https://api.github.com/users/JueLance/gists{/gist_id}", "starred_url": "https://api.github.com/users/JueLance/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JueLance/subscriptions", "organizations_url": "https://api.github.com/users/JueLance/orgs", "repos_url": "https://api.github.com/users/JueLance/repos", "events_url": "https://api.github.com/users/JueLance/events{/privacy}", "received_events_url": "https://api.github.com/users/JueLance/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-03-22T06:55:52Z", "updated_at": "2018-03-27T06:31:02Z", "closed_at": "2018-03-27T06:29:39Z", "author_association": "NONE", "body": "I try to input some chinese characters, the application is crashed. The code as following below:\r\n\r\njson j;\r\n\r\nj[\"chinese\"] = \"\u4e2d\u6587\";\r\n    \r\nstring s = j.dump();\r\n\r\ncout << s.c_str() << endl;\r\n\r\nCan you tell me how to make it works?\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1021", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1021/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1021/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1021/events", "html_url": "https://github.com/nlohmann/json/issues/1021", "id": 307462288, "node_id": "MDU6SXNzdWUzMDc0NjIyODg=", "number": 1021, "title": "to/from_msgpack only works with standard typization", "user": {"login": "phyz777", "id": 19569239, "node_id": "MDQ6VXNlcjE5NTY5MjM5", "avatar_url": "https://avatars1.githubusercontent.com/u/19569239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phyz777", "html_url": "https://github.com/phyz777", "followers_url": "https://api.github.com/users/phyz777/followers", "following_url": "https://api.github.com/users/phyz777/following{/other_user}", "gists_url": "https://api.github.com/users/phyz777/gists{/gist_id}", "starred_url": "https://api.github.com/users/phyz777/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phyz777/subscriptions", "organizations_url": "https://api.github.com/users/phyz777/orgs", "repos_url": "https://api.github.com/users/phyz777/repos", "events_url": "https://api.github.com/users/phyz777/events{/privacy}", "received_events_url": "https://api.github.com/users/phyz777/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 571470316, "node_id": "MDU6TGFiZWw1NzE0NzAzMTY=", "url": "https://api.github.com/repos/nlohmann/json/labels/aspect:%20binary%20formats", "name": "aspect: binary formats", "color": "5319e7", "default": false}, {"id": 232252782, "node_id": "MDU6TGFiZWwyMzIyNTI3ODI=", "url": "https://api.github.com/repos/nlohmann/json/labels/confirmed", "name": "confirmed", "color": "e11d21", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/24", "html_url": "https://github.com/nlohmann/json/milestone/24", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/24/labels", "id": 3188647, "node_id": "MDk6TWlsZXN0b25lMzE4ODY0Nw==", "number": 24, "title": "Release 3.1.3", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 33, "state": "open", "created_at": "2018-03-14T21:05:47Z", "updated_at": "2018-07-21T12:46:17Z", "due_on": null, "closed_at": null}, "comments": 6, "created_at": "2018-03-22T00:15:47Z", "updated_at": "2018-04-08T07:29:29Z", "closed_at": "2018-04-08T07:29:29Z", "author_association": "NONE", "body": "The to/from_msgpack functions only work for standard typization of nlohmann::basic_json. \r\n\r\nUsing nlohmann::basic_json<std::map, std::vector, std::string, bool, std::int32_t, std::uint32_t, float> produces the following error: \r\n\r\nparse error at 1472: expected a MessagePack string; last byte: 0x68\r\n\r\nThe error occurs when I put an object into a msgpack, send it over the network, then reconstruct the object using from_msgpack. When I use nlohmann::json instead, everything works fine. \r\n\r\nSystem is linux, compiler is g++, version 7.2.1, nlohmann::json is version 3.1.2. "}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1020", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1020/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1020/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1020/events", "html_url": "https://github.com/nlohmann/json/issues/1020", "id": 307404288, "node_id": "MDU6SXNzdWUzMDc0MDQyODg=", "number": 1020, "title": "Build failure using latest clang and GCC compilers", "user": {"login": "xvitaly", "id": 966711, "node_id": "MDQ6VXNlcjk2NjcxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/966711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xvitaly", "html_url": "https://github.com/xvitaly", "followers_url": "https://api.github.com/users/xvitaly/followers", "following_url": "https://api.github.com/users/xvitaly/following{/other_user}", "gists_url": "https://api.github.com/users/xvitaly/gists{/gist_id}", "starred_url": "https://api.github.com/users/xvitaly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xvitaly/subscriptions", "organizations_url": "https://api.github.com/users/xvitaly/orgs", "repos_url": "https://api.github.com/users/xvitaly/repos", "events_url": "https://api.github.com/users/xvitaly/events{/privacy}", "received_events_url": "https://api.github.com/users/xvitaly/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2018-03-21T20:23:00Z", "updated_at": "2018-03-27T19:54:19Z", "closed_at": "2018-03-27T19:54:19Z", "author_association": "NONE", "body": "Version:\r\n```\r\n-- The C compiler identification is Clang 6.0.0\r\n-- The CXX compiler identification is Clang 6.0.0\r\n-- Check for working C compiler: /usr/bin/clang\r\n-- Check for working C compiler: /usr/bin/clang -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Check for working CXX compiler: /usr/bin/clang++\r\n-- Check for working CXX compiler: /usr/bin/clang++ -- works\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Detecting CXX compile features\r\n-- Detecting CXX compile features - done\r\n```\r\n\r\nTrying to build latest commit of [matrix-structs](https://github.com/mujx/matrix-structs), but got this error:\r\n```c++\r\n[  2%] Building CXX object CMakeFiles/matrix_structs.dir/src/events.cpp.o\r\nclang-6.0: warning: argument unused during compilation: '-specs=/usr/lib/rpm/redhat/redhat-hardened-cc1' [-Wunused-command-line-argument]\r\nclang-6.0: warning: argument unused during compilation: '-specs=/usr/lib/rpm/redhat/redhat-annobin-cc1' [-Wunused-command-line-argument]\r\nIn file included from /builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/src/events.cpp:1:\r\nIn file included from /builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/include/mtx/events.hpp:3:\r\nIn file included from /builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/deps/json.hpp:40:\r\nIn file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/functional:49:\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_function.h:545:9: error: redefinition of '__not_overloaded<_Tp, _Up>'\r\n        struct __not_overloaded<_Tp, _Up> : __not_overloaded2<_Tp, _Up> { };\r\n               ^~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_function.h:531:9: note: previous definition is here\r\n        struct __not_overloaded<_Tp, _Up, __void_t<\r\n               ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_function.h:608:9: error: redefinition of '__not_overloaded<_Tp, _Up>'\r\n        struct __not_overloaded<_Tp, _Up> : __not_overloaded2<_Tp, _Up> { };\r\n               ^~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_function.h:594:9: note: previous definition is here\r\n        struct __not_overloaded<_Tp, _Up, __void_t<\r\n               ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_function.h:671:9: error: redefinition of '__not_overloaded<_Tp, _Up>'\r\n        struct __not_overloaded<_Tp, _Up> : __not_overloaded2<_Tp, _Up> { };\r\n               ^~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_function.h:657:9: note: previous definition is here\r\n        struct __not_overloaded<_Tp, _Up, __void_t<\r\n               ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_function.h:734:9: error: redefinition of '__not_overloaded<_Tp, _Up>'\r\n        struct __not_overloaded<_Tp, _Up> : __not_overloaded2<_Tp, _Up> { };\r\n               ^~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_function.h:720:9: note: previous definition is here\r\n        struct __not_overloaded<_Tp, _Up, __void_t<\r\n               ^\r\nIn file included from /builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/src/events.cpp:1:\r\nIn file included from /builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/include/mtx/events.hpp:3:\r\nIn file included from /builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/deps/json.hpp:36:\r\nIn file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/algorithm:60:\r\nIn file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/utility:70:\r\nIn file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_pair.h:59:\r\nIn file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/move.h:55:\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/type_traits:149:26: error: implicit instantiation of undefined template 'std::less<void>::__not_overloaded<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &, void>'\r\n    : public conditional<_B1::value, __and_<_B2, _B3, _Bn...>, _B1>::type\r\n                         ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_function.h:564:4: note: in instantiation of template class 'std::__and_<std::less<void>::__not_overloaded<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &, void>, std::is_convertible<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &, const volatile void *>, std::is_convertible<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &, const volatile void *> >' requested here\r\n                        __ptr_cmp<_Tp, _Up>{});\r\n                        ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_tree.h:2054:13: note: in instantiation of function template specialization 'std::less<void>::operator()<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &>' requested here\r\n          __comp = _M_impl._M_key_compare(__k, _S_key(__x));\r\n                   ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_tree.h:2372:19: note: in instantiation of member function 'std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > >, std::less<void>, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >::_M_get_insert_unique_pos' requested here\r\n            auto __res = _M_get_insert_unique_pos(_S_key(__z));\r\n                         ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_map.h:575:16: note: in instantiation of function template specialization 'std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > >, std::less<void>, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >::_M_emplace_unique<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> >' requested here\r\n        { return _M_t._M_emplace_unique(std::forward<_Args>(__args)...); }\r\n                      ^\r\n/builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/deps/json.hpp:3348:48: note: in instantiation of function template specialization 'std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer>, std::less<void>, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >::emplace<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> >' requested here\r\n                        result.m_value.object->emplace(std::move(key), std::move(value));\r\n                                               ^\r\n/builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/deps/json.hpp:3205:9: note: in instantiation of member function 'nlohmann::detail::parser<nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> >::parse_internal' requested here\r\n        parse_internal(true, result);\r\n        ^\r\n/builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/deps/json.hpp:15692:74: note: in instantiation of member function 'nlohmann::detail::parser<nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> >::parse' requested here\r\n        parser(detail::input_adapter(first, last), cb, allow_exceptions).parse(true, result);\r\n                                                                         ^\r\n/builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/deps/json.hpp:17254:28: note: in instantiation of function template specialization 'nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer>::parse<const char *, 0>' requested here\r\n    return nlohmann::json::parse(s, s + n);\r\n                           ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_function.h:590:9: note: template is declared here\r\n        struct __not_overloaded;\r\n               ^\r\nIn file included from /builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/src/events.cpp:1:\r\nIn file included from /builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/include/mtx/events.hpp:3:\r\nIn file included from /builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/deps/json.hpp:53:\r\nIn file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/map:60:\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_tree.h:2065:11: error: no matching function for call to object of type 'std::less<void>'\r\n      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))\r\n          ^~~~~~~~~~~~~~~~~~~~~~\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_tree.h:2372:19: note: in instantiation of member function 'std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > >, std::less<void>, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >::_M_get_insert_unique_pos' requested here\r\n            auto __res = _M_get_insert_unique_pos(_S_key(__z));\r\n                         ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_map.h:575:16: note: in instantiation of function template specialization 'std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > >, std::less<void>, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >::_M_emplace_unique<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> >' requested here\r\n        { return _M_t._M_emplace_unique(std::forward<_Args>(__args)...); }\r\n                      ^\r\n/builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/deps/json.hpp:3348:48: note: in instantiation of function template specialization 'std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer>, std::less<void>, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >::emplace<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> >' requested here\r\n                        result.m_value.object->emplace(std::move(key), std::move(value));\r\n                                               ^\r\n/builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/deps/json.hpp:3205:9: note: in instantiation of member function 'nlohmann::detail::parser<nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> >::parse_internal' requested here\r\n        parse_internal(true, result);\r\n        ^\r\n/builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/deps/json.hpp:15692:74: note: in instantiation of member function 'nlohmann::detail::parser<nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> >::parse' requested here\r\n        parser(detail::input_adapter(first, last), cb, allow_exceptions).parse(true, result);\r\n                                                                         ^\r\n/builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/deps/json.hpp:17254:28: note: in instantiation of function template specialization 'nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer>::parse<const char *, 0>' requested here\r\n    return nlohmann::json::parse(s, s + n);\r\n                           ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_function.h:559:2: note: candidate template ignored: substitution failure [with _Tp = const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &, _Up = const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &]\r\n        operator()(_Tp&& __t, _Up&& __u) const\r\n        ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_function.h:569:2: note: candidate template ignored: could not match '_Tp *' against 'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >'\r\n        operator()(_Tp* __t, _Up* __u) const noexcept\r\n        ^\r\nIn file included from /builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/src/events.cpp:1:\r\nIn file included from /builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/include/mtx/events.hpp:3:\r\nIn file included from /builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/deps/json.hpp:53:\r\nIn file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/map:60:\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_tree.h:2317:11: error: no matching function for call to object of type 'std::less<void>'\r\n                            || _M_impl._M_key_compare(_S_key(__z),\r\n                               ^~~~~~~~~~~~~~~~~~~~~~\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_tree.h:2374:20: note: in instantiation of member function 'std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > >, std::less<void>, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >::_M_insert_node' requested here\r\n              return _Res(_M_insert_node(__res.first, __res.second, __z), true);\r\n                          ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_map.h:575:16: note: in instantiation of function template specialization 'std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > >, std::less<void>, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >::_M_emplace_unique<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> >' requested here\r\n        { return _M_t._M_emplace_unique(std::forward<_Args>(__args)...); }\r\n                      ^\r\n/builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/deps/json.hpp:3348:48: note: in instantiation of function template specialization 'std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer>, std::less<void>, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >::emplace<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> >' requested here\r\n                        result.m_value.object->emplace(std::move(key), std::move(value));\r\n                                               ^\r\n/builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/deps/json.hpp:3205:9: note: in instantiation of member function 'nlohmann::detail::parser<nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> >::parse_internal' requested here\r\n        parse_internal(true, result);\r\n        ^\r\n/builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/deps/json.hpp:15692:74: note: in instantiation of member function 'nlohmann::detail::parser<nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> >::parse' requested here\r\n        parser(detail::input_adapter(first, last), cb, allow_exceptions).parse(true, result);\r\n                                                                         ^\r\n/builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/deps/json.hpp:17254:28: note: in instantiation of function template specialization 'nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer>::parse<const char *, 0>' requested here\r\n    return nlohmann::json::parse(s, s + n);\r\n                           ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_function.h:559:2: note: candidate template ignored: substitution failure [with _Tp = const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &, _Up = const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &]\r\n        operator()(_Tp&& __t, _Up&& __u) const\r\n        ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_function.h:569:2: note: candidate template ignored: could not match '_Tp *' against 'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >'\r\n        operator()(_Tp* __t, _Up* __u) const noexcept\r\n        ^\r\nIn file included from /builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/src/events.cpp:1:\r\nIn file included from /builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/include/mtx/events.hpp:3:\r\nIn file included from /builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/deps/json.hpp:36:\r\nIn file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/algorithm:60:\r\nIn file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/utility:70:\r\nIn file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_pair.h:59:\r\nIn file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/move.h:55:\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/type_traits:149:26: error: implicit instantiation of undefined template 'std::less<void>::__not_overloaded<char const (&)[5], const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &, void>'\r\n    : public conditional<_B1::value, __and_<_B2, _B3, _Bn...>, _B1>::type\r\n                         ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_function.h:564:4: note: in instantiation of template class 'std::__and_<std::less<void>::__not_overloaded<char const (&)[5], const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &, void>, std::is_convertible<char const (&)[5], const volatile void *>, std::is_convertible<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &, const volatile void *> >' requested here\r\n                        __ptr_cmp<_Tp, _Up>{});\r\n                        ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_tree.h:1241:24: note: in instantiation of function template specialization 'std::less<void>::operator()<char const (&)[5], const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &>' requested here\r\n          if (__j != end() && _M_impl._M_key_compare(__k, _S_key(__j._M_node)))\r\n                              ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_tree.h:1231:25: note: in instantiation of function template specialization 'std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > >, std::less<void>, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >::_M_find_tr<char [5], void>' requested here\r\n          return __const_this->_M_find_tr(__k)._M_const_cast();\r\n                               ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_map.h:1176:16: note: in instantiation of function template specialization 'std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > >, std::less<void>, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >::_M_find_tr<char [5], void>' requested here\r\n        { return _M_t._M_find_tr(__x); }\r\n                      ^\r\n/builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/deps/json.hpp:13498:59: note: in instantiation of function template specialization 'std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer>, std::less<void>, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >::find<char [5]>' requested here\r\n            result.m_it.object_iterator = m_value.object->find(std::forward<KeyT>(key));\r\n                                                          ^\r\n/builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/src/events.cpp:85:17: note: in instantiation of function template specialization 'nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer>::find<char const (&)[5]>' requested here\r\n        if (obj.find(\"type\") != obj.end())\r\n                ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_function.h:590:9: note: template is declared here\r\n        struct __not_overloaded;\r\n               ^\r\nIn file included from /builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/src/events.cpp:1:\r\nIn file included from /builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/include/mtx/events.hpp:3:\r\nIn file included from /builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/deps/json.hpp:36:\r\nIn file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/algorithm:60:\r\nIn file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/utility:70:\r\nIn file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_pair.h:59:\r\nIn file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/move.h:55:\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/type_traits:149:26: error: implicit instantiation of undefined template 'std::less<void>::__not_overloaded<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &, char const (&)[5], void>'\r\n    : public conditional<_B1::value, __and_<_B2, _B3, _Bn...>, _B1>::type\r\n                         ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_function.h:564:4: note: in instantiation of template class 'std::__and_<std::less<void>::__not_overloaded<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &, char const (&)[5], void>, std::is_convertible<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &, const volatile void *>, std::is_convertible<char const (&)[5], const volatile void *> >' requested here\r\n                        __ptr_cmp<_Tp, _Up>{});\r\n                        ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_tree.h:1275:11: note: in instantiation of function template specialization 'std::less<void>::operator()<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &, char const (&)[5]>' requested here\r\n            if (!_M_impl._M_key_compare(_S_key(__x), __k))\r\n                 ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_tree.h:1240:15: note: in instantiation of function template specialization 'std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > >, std::less<void>, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >::_M_lower_bound_tr<char [5], void>' requested here\r\n          auto __j = _M_lower_bound_tr(__k);\r\n                     ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_tree.h:1231:25: note: in instantiation of function template specialization 'std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > >, std::less<void>, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >::_M_find_tr<char [5], void>' requested here\r\n          return __const_this->_M_find_tr(__k)._M_const_cast();\r\n                               ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_map.h:1176:16: note: in instantiation of function template specialization 'std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > >, std::less<void>, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >::_M_find_tr<char [5], void>' requested here\r\n        { return _M_t._M_find_tr(__x); }\r\n                      ^\r\n/builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/deps/json.hpp:13498:59: note: in instantiation of function template specialization 'std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer>, std::less<void>, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >::find<char [5]>' requested here\r\n            result.m_it.object_iterator = m_value.object->find(std::forward<KeyT>(key));\r\n                                                          ^\r\n/builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/src/events.cpp:85:17: note: in instantiation of function template specialization 'nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer>::find<char const (&)[5]>' requested here\r\n        if (obj.find(\"type\") != obj.end())\r\n                ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_function.h:590:9: note: template is declared here\r\n        struct __not_overloaded;\r\n               ^\r\nIn file included from /builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/src/events.cpp:1:\r\nIn file included from /builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/include/mtx/events.hpp:3:\r\nIn file included from /builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/deps/json.hpp:53:\r\nIn file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/map:61:\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_map.h:538:22: error: no matching function for call to object of type 'std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer>, std::less<void>, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >::key_compare' (aka 'std::less<void>')\r\n        if (__i == end() || key_comp()(__k, (*__i).first))\r\n                            ^~~~~~~~~~\r\n/builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/deps/json.hpp:12639:40: note: in instantiation of member function 'std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer>, std::less<void>, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >::at' requested here\r\n                return m_value.object->at(key);\r\n                                       ^\r\n/builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/src/events.cpp:86:41: note: in instantiation of member function 'nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer>::at' requested here\r\n                return getEventType(obj.at(\"type\").get<std::string>());\r\n                                        ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_function.h:559:2: note: candidate template ignored: substitution failure [with _Tp = const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &, _Up = const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &]\r\n        operator()(_Tp&& __t, _Up&& __u) const\r\n        ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_function.h:569:2: note: candidate template ignored: could not match '_Tp *' against 'std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer>, std::less<void>, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >::key_type' (aka 'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >')\r\n        operator()(_Tp* __t, _Up* __u) const noexcept\r\n        ^\r\nIn file included from /builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/src/events.cpp:1:\r\nIn file included from /builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/include/mtx/events.hpp:3:\r\nIn file included from /builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/deps/json.hpp:53:\r\nIn file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/map:60:\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_tree.h:1888:7: error: no matching function for call to object of type 'std::less<void>'\r\n        if (!_M_impl._M_key_compare(_S_key(__x), __k))\r\n             ^~~~~~~~~~~~~~~~~~~~~~\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_tree.h:1203:16: note: in instantiation of member function 'std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > >, std::less<void>, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >::_M_lower_bound' requested here\r\n      { return _M_lower_bound(_M_begin(), _M_end(), __k); }\r\n               ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_map.h:1240:21: note: in instantiation of member function 'std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > >, std::less<void>, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >::lower_bound' requested here\r\n      { return _M_t.lower_bound(__x); }\r\n                    ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_map.h:537:17: note: in instantiation of member function 'std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer>, std::less<void>, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >::lower_bound' requested here\r\n        iterator __i = lower_bound(__k);\r\n                       ^\r\n/builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/deps/json.hpp:12639:40: note: in instantiation of member function 'std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer>, std::less<void>, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >::at' requested here\r\n                return m_value.object->at(key);\r\n                                       ^\r\n/builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/src/events.cpp:86:41: note: in instantiation of member function 'nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer>::at' requested here\r\n                return getEventType(obj.at(\"type\").get<std::string>());\r\n                                        ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_function.h:559:2: note: candidate template ignored: substitution failure [with _Tp = const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &, _Up = const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &]\r\n        operator()(_Tp&& __t, _Up&& __u) const\r\n        ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_function.h:569:2: note: candidate template ignored: could not match '_Tp *' against 'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >'\r\n        operator()(_Tp* __t, _Up* __u) const noexcept\r\n        ^\r\nIn file included from /builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/src/events.cpp:1:\r\nIn file included from /builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/include/mtx/events.hpp:3:\r\nIn file included from /builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/deps/json.hpp:36:\r\nIn file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/algorithm:60:\r\nIn file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/utility:70:\r\nIn file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_pair.h:59:\r\nIn file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/move.h:55:\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/type_traits:149:26: error: implicit instantiation of undefined template 'std::less<void>::__not_overloaded<char const (&)[8], const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &, void>'\r\n    : public conditional<_B1::value, __and_<_B2, _B3, _Bn...>, _B1>::type\r\n                         ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_function.h:564:4: note: in instantiation of template class 'std::__and_<std::less<void>::__not_overloaded<char const (&)[8], const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &, void>, std::is_convertible<char const (&)[8], const volatile void *>, std::is_convertible<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &, const volatile void *> >' requested here\r\n                        __ptr_cmp<_Tp, _Up>{});\r\n                        ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_tree.h:1241:24: note: in instantiation of function template specialization 'std::less<void>::operator()<char const (&)[8], const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &>' requested here\r\n          if (__j != end() && _M_impl._M_key_compare(__k, _S_key(__j._M_node)))\r\n                              ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_tree.h:1231:25: note: in instantiation of function template specialization 'std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > >, std::less<void>, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >::_M_find_tr<char [8], void>' requested here\r\n          return __const_this->_M_find_tr(__k)._M_const_cast();\r\n                               ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_map.h:1176:16: note: in instantiation of function template specialization 'std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > >, std::less<void>, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >::_M_find_tr<char [8], void>' requested here\r\n        { return _M_t._M_find_tr(__x); }\r\n                      ^\r\n/builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/deps/json.hpp:13498:59: note: in instantiation of function template specialization 'std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer>, std::less<void>, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >::find<char [8]>' requested here\r\n            result.m_it.object_iterator = m_value.object->find(std::forward<KeyT>(key));\r\n                                                          ^\r\n/builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/src/events.cpp:120:17: note: in instantiation of function template specialization 'nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer>::find<char const (&)[8]>' requested here\r\n        if (obj.find(\"msgtype\") == obj.end())\r\n                ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_function.h:590:9: note: template is declared here\r\n        struct __not_overloaded;\r\n               ^\r\nIn file included from /builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/src/events.cpp:1:\r\nIn file included from /builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/include/mtx/events.hpp:3:\r\nIn file included from /builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/deps/json.hpp:36:\r\nIn file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/algorithm:60:\r\nIn file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/utility:70:\r\nIn file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_pair.h:59:\r\nIn file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/move.h:55:\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/type_traits:149:26: error: implicit instantiation of undefined template 'std::less<void>::__not_overloaded<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &, char const (&)[8], void>'\r\n    : public conditional<_B1::value, __and_<_B2, _B3, _Bn...>, _B1>::type\r\n                         ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_function.h:564:4: note: in instantiation of template class 'std::__and_<std::less<void>::__not_overloaded<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &, char const (&)[8], void>, std::is_convertible<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &, const volatile void *>, std::is_convertible<char const (&)[8], const volatile void *> >' requested here\r\n                        __ptr_cmp<_Tp, _Up>{});\r\n                        ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_tree.h:1275:11: note: in instantiation of function template specialization 'std::less<void>::operator()<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &, char const (&)[8]>' requested here\r\n            if (!_M_impl._M_key_compare(_S_key(__x), __k))\r\n                 ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_tree.h:1240:15: note: in instantiation of function template specialization 'std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > >, std::less<void>, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >::_M_lower_bound_tr<char [8], void>' requested here\r\n          auto __j = _M_lower_bound_tr(__k);\r\n                     ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_tree.h:1231:25: note: in instantiation of function template specialization 'std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > >, std::less<void>, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >::_M_find_tr<char [8], void>' requested here\r\n          return __const_this->_M_find_tr(__k)._M_const_cast();\r\n                               ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_map.h:1176:16: note: in instantiation of function template specialization 'std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > >, std::less<void>, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >::_M_find_tr<char [8], void>' requested here\r\n        { return _M_t._M_find_tr(__x); }\r\n                      ^\r\n/builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/deps/json.hpp:13498:59: note: in instantiation of function template specialization 'std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer>, std::less<void>, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer> > > >::find<char [8]>' requested here\r\n            result.m_it.object_iterator = m_value.object->find(std::forward<KeyT>(key));\r\n                                                          ^\r\n/builddir/build/BUILD/nheko-480de2d30bcd82ed3beeab5fad9b2a55d34b4990/.third-party/matrix_structs/src/events.cpp:120:17: note: in instantiation of function template specialization 'nlohmann::basic_json<std::map, std::vector, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, long, unsigned long, double, std::allocator, adl_serializer>::find<char const (&)[8]>' requested here\r\n        if (obj.find(\"msgtype\") == obj.end())\r\n                ^\r\n/usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_function.h:590:9: note: template is declared here\r\n        struct __not_overloaded;\r\n               ^\r\n13 errors generated.\r\ngmake[2]: *** [CMakeFiles/matrix_structs.dir/build.make:63: CMakeFiles/matrix_structs.dir/src/events.cpp.o] Error 1\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1019", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1019/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1019/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1019/events", "html_url": "https://github.com/nlohmann/json/issues/1019", "id": 306986791, "node_id": "MDU6SXNzdWUzMDY5ODY3OTE=", "number": 1019, "title": "can two json objects be concatenated?", "user": {"login": "CheyenneForbes", "id": 8251976, "node_id": "MDQ6VXNlcjgyNTE5NzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/8251976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CheyenneForbes", "html_url": "https://github.com/CheyenneForbes", "followers_url": "https://api.github.com/users/CheyenneForbes/followers", "following_url": "https://api.github.com/users/CheyenneForbes/following{/other_user}", "gists_url": "https://api.github.com/users/CheyenneForbes/gists{/gist_id}", "starred_url": "https://api.github.com/users/CheyenneForbes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CheyenneForbes/subscriptions", "organizations_url": "https://api.github.com/users/CheyenneForbes/orgs", "repos_url": "https://api.github.com/users/CheyenneForbes/repos", "events_url": "https://api.github.com/users/CheyenneForbes/events{/privacy}", "received_events_url": "https://api.github.com/users/CheyenneForbes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 46374232, "node_id": "MDU6TGFiZWw0NjM3NDIzMg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20duplicate", "name": "solution: duplicate", "color": "cccccc", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-20T18:27:53Z", "updated_at": "2018-03-27T06:15:10Z", "closed_at": "2018-03-27T06:15:10Z", "author_association": "NONE", "body": "for example:\r\n\r\n```\r\njson j1 = {\r\n {obj1, value1},\r\n {obj2, value2}\r\n};\r\njson j2 = {\r\n {obj3, value3},\r\n {obj4, value4}\r\n};\r\n\r\njson j3 = j1 + j2;\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1018", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1018/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1018/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1018/events", "html_url": "https://github.com/nlohmann/json/issues/1018", "id": 306802507, "node_id": "MDU6SXNzdWUzMDY4MDI1MDc=", "number": 1018, "title": "Erase by integer index", "user": {"login": "zkelo", "id": 13527447, "node_id": "MDQ6VXNlcjEzNTI3NDQ3", "avatar_url": "https://avatars0.githubusercontent.com/u/13527447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zkelo", "html_url": "https://github.com/zkelo", "followers_url": "https://api.github.com/users/zkelo/followers", "following_url": "https://api.github.com/users/zkelo/following{/other_user}", "gists_url": "https://api.github.com/users/zkelo/gists{/gist_id}", "starred_url": "https://api.github.com/users/zkelo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zkelo/subscriptions", "organizations_url": "https://api.github.com/users/zkelo/orgs", "repos_url": "https://api.github.com/users/zkelo/repos", "events_url": "https://api.github.com/users/zkelo/events{/privacy}", "received_events_url": "https://api.github.com/users/zkelo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-20T10:15:56Z", "updated_at": "2018-03-20T16:25:19Z", "closed_at": "2018-03-20T16:25:19Z", "author_association": "NONE", "body": "I have this object.\r\n\r\n`json obj = {\r\n     {\"Foo\", 1},\r\n     {\"Bar\", 2}\r\n};`\r\n\r\nIn some cases I have only integer index of `Foo` (i.e. `0`) or `Bar` (i.e. `1`), not a key like \"Foo\" or \"Bar\". And I'm need to `erase` \"Bar\" using only integer index. If I'm trying to erase \"Bar\" with using integer index, I'm getting an exception.\r\n\r\nSo, how I can (if it's possible) erase \"Bar\" using integer index? Or I need to use cycle like this `for (auto it : obj)` to find associative key by integer in first?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1017", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1017/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1017/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1017/events", "html_url": "https://github.com/nlohmann/json/issues/1017", "id": 306779553, "node_id": "MDU6SXNzdWUzMDY3Nzk1NTM=", "number": 1017, "title": "Function find overload taking a json_pointer", "user": {"login": "markand", "id": 11919008, "node_id": "MDQ6VXNlcjExOTE5MDA4", "avatar_url": "https://avatars0.githubusercontent.com/u/11919008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markand", "html_url": "https://github.com/markand", "followers_url": "https://api.github.com/users/markand/followers", "following_url": "https://api.github.com/users/markand/following{/other_user}", "gists_url": "https://api.github.com/users/markand/gists{/gist_id}", "starred_url": "https://api.github.com/users/markand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markand/subscriptions", "organizations_url": "https://api.github.com/users/markand/orgs", "repos_url": "https://api.github.com/users/markand/repos", "events_url": "https://api.github.com/users/markand/events{/privacy}", "received_events_url": "https://api.github.com/users/markand/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 304694104, "node_id": "MDU6TGFiZWwzMDQ2OTQxMDQ=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20please%20discuss", "name": "state: please discuss", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-20T09:05:41Z", "updated_at": "2018-06-14T16:20:04Z", "closed_at": "2018-06-14T16:20:04Z", "author_association": "NONE", "body": "**Feature Request**\r\n\r\nIt looks like there is no `find` function taking a `json_pointer`. I think it could be handy to have a no-throwing find overload for it so we are able to do:\r\n\r\n```cpp\r\n#include <json.hpp>\r\n\r\nint main()\r\n{\r\n    auto json = nlohmann::json({\r\n        { \"foo\", \"true\" }\r\n    });\r\n    auto it = json.find(\"/foo\"_json_pointer);\r\n\r\n    if (it != json.end())\r\n        std::cout << it->dump(4) << std::endl;\r\n    else\r\n        std::cout << \"not found\" << std::endl;\r\n}\r\n```\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1016", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1016/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1016/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1016/events", "html_url": "https://github.com/nlohmann/json/issues/1016", "id": 306195644, "node_id": "MDU6SXNzdWUzMDYxOTU2NDQ=", "number": 1016, "title": "I think should implement an parser function", "user": {"login": "mlkt", "id": 10374085, "node_id": "MDQ6VXNlcjEwMzc0MDg1", "avatar_url": "https://avatars2.githubusercontent.com/u/10374085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlkt", "html_url": "https://github.com/mlkt", "followers_url": "https://api.github.com/users/mlkt/followers", "following_url": "https://api.github.com/users/mlkt/following{/other_user}", "gists_url": "https://api.github.com/users/mlkt/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlkt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlkt/subscriptions", "organizations_url": "https://api.github.com/users/mlkt/orgs", "repos_url": "https://api.github.com/users/mlkt/repos", "events_url": "https://api.github.com/users/mlkt/events{/privacy}", "received_events_url": "https://api.github.com/users/mlkt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}, {"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-17T22:24:34Z", "updated_at": "2018-03-27T19:55:58Z", "closed_at": "2018-03-27T19:55:58Z", "author_association": "NONE", "body": "I see an issue #801 \r\n\r\nI think should implement an parser function, for example:\r\n`char* data = ....; //read from network or other data source;`\r\n`size_t data_len = ....;  //known when read data.`\r\n`json j = parse_json(data, data_len);`\r\n\r\ncall **parse_json()** is zero-copy, no need to convert to std::string.\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1015", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1015/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1015/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1015/events", "html_url": "https://github.com/nlohmann/json/issues/1015", "id": 305677631, "node_id": "MDU6SXNzdWUzMDU2Nzc2MzE=", "number": 1015, "title": "Readme gif", "user": {"login": "Cyberunner23", "id": 746256, "node_id": "MDQ6VXNlcjc0NjI1Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/746256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cyberunner23", "html_url": "https://github.com/Cyberunner23", "followers_url": "https://api.github.com/users/Cyberunner23/followers", "following_url": "https://api.github.com/users/Cyberunner23/following{/other_user}", "gists_url": "https://api.github.com/users/Cyberunner23/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cyberunner23/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cyberunner23/subscriptions", "organizations_url": "https://api.github.com/users/Cyberunner23/orgs", "repos_url": "https://api.github.com/users/Cyberunner23/repos", "events_url": "https://api.github.com/users/Cyberunner23/events{/privacy}", "received_events_url": "https://api.github.com/users/Cyberunner23/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}, {"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-15T18:50:47Z", "updated_at": "2018-03-16T14:14:53Z", "closed_at": "2018-03-16T14:14:53Z", "author_association": "NONE", "body": "Not exactly a bug report nor a feature request but an inquiry.\r\n\r\nI am rather curious as to how you made / which tool you used to make that presentation gif.\r\nIt looks really nice to say the least.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1014", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1014/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1014/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1014/events", "html_url": "https://github.com/nlohmann/json/issues/1014", "id": 305449044, "node_id": "MDU6SXNzdWUzMDU0NDkwNDQ=", "number": 1014, "title": "Python bindings", "user": {"login": "mlund", "id": 3248398, "node_id": "MDQ6VXNlcjMyNDgzOTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3248398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlund", "html_url": "https://github.com/mlund", "followers_url": "https://api.github.com/users/mlund/followers", "following_url": "https://api.github.com/users/mlund/following{/other_user}", "gists_url": "https://api.github.com/users/mlund/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlund/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlund/subscriptions", "organizations_url": "https://api.github.com/users/mlund/orgs", "repos_url": "https://api.github.com/users/mlund/repos", "events_url": "https://api.github.com/users/mlund/events{/privacy}", "received_events_url": "https://api.github.com/users/mlund/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-03-15T08:00:08Z", "updated_at": "2018-03-20T07:07:31Z", "closed_at": "2018-03-20T07:07:26Z", "author_association": "NONE", "body": "**Feature Request**\r\n\r\nI wonder if you have considered exposing the `json` object to Python in order to convert directly between Python dictionaries and `json`? This would be extremely useful for exposing C++ functions that take `json` obejcts. The type conversion should be possible via the [pybind11](http://pybind11.readthedocs.io/en/stable/) project (for example)."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1013", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1013/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1013/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1013/events", "html_url": "https://github.com/nlohmann/json/issues/1013", "id": 305056387, "node_id": "MDU6SXNzdWUzMDUwNTYzODc=", "number": 1013, "title": "STL containers are always serialized to a nested array like [[1,2,3]]", "user": {"login": "fred777", "id": 5749774, "node_id": "MDQ6VXNlcjU3NDk3NzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/5749774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fred777", "html_url": "https://github.com/fred777", "followers_url": "https://api.github.com/users/fred777/followers", "following_url": "https://api.github.com/users/fred777/following{/other_user}", "gists_url": "https://api.github.com/users/fred777/gists{/gist_id}", "starred_url": "https://api.github.com/users/fred777/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fred777/subscriptions", "organizations_url": "https://api.github.com/users/fred777/orgs", "repos_url": "https://api.github.com/users/fred777/repos", "events_url": "https://api.github.com/users/fred777/events{/privacy}", "received_events_url": "https://api.github.com/users/fred777/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-14T08:00:30Z", "updated_at": "2018-03-14T08:18:07Z", "closed_at": "2018-03-14T08:17:23Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\nI'm using the single-header json.hpp (v3.1.1) and I am struggling with serializing stl containers:\r\n```\r\nauto tojson = nlohmann::json{ std::forward_list<double>{1,2,3} };\r\ncout << tojson;\r\n```\r\n**Expected:** [1,2,3]\r\n**Got instead:** [[1,2,3]]\r\n\r\nIt's the same for other STL containers like vector, list, initializer_list, ...\r\n\r\nDid I miss something?\r\n\r\n**Compiler:** Visual C++ 2017 (v15.6.1)\r\n**OS:** Windows 10 x64\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1012", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1012/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1012/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1012/events", "html_url": "https://github.com/nlohmann/json/issues/1012", "id": 304719546, "node_id": "MDU6SXNzdWUzMDQ3MTk1NDY=", "number": 1012, "title": "how to add two json string in single object??", "user": {"login": "Mamlesh", "id": 37332116, "node_id": "MDQ6VXNlcjM3MzMyMTE2", "avatar_url": "https://avatars1.githubusercontent.com/u/37332116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mamlesh", "html_url": "https://github.com/Mamlesh", "followers_url": "https://api.github.com/users/Mamlesh/followers", "following_url": "https://api.github.com/users/Mamlesh/following{/other_user}", "gists_url": "https://api.github.com/users/Mamlesh/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mamlesh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mamlesh/subscriptions", "organizations_url": "https://api.github.com/users/Mamlesh/orgs", "repos_url": "https://api.github.com/users/Mamlesh/repos", "events_url": "https://api.github.com/users/Mamlesh/events{/privacy}", "received_events_url": "https://api.github.com/users/Mamlesh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-13T11:07:30Z", "updated_at": "2018-03-21T19:18:51Z", "closed_at": "2018-03-21T19:18:51Z", "author_association": "NONE", "body": "like..\r\n\r\n```js\r\n{\r\n\t\"WALL\": [\r\n\t\t{\r\n\t\t\t\"Data\": {\r\n\t\t\t\t\"Count\": 2,\r\n\t\t\t\t\"POINT\": {\r\n\t\t\t\t\t\"Point1\": {\r\n\t\t\t\t\t\t\"X\": 1942.6468505859375,\r\n\t\t\t\t\t\t\"Y\": 2344.69677734375,\r\n\t\t\t\t\t\t\"Z\": 0\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"Point2\": {\r\n\t\t\t\t\t\t\"X\": 3313.0263671875,\r\n\t\t\t\t\t\t\"Y\": 2062.294189453125,\r\n\t\t\t\t\t\t\"Z\": 0\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"Type\": \"LINE\"\r\n\t\t\t},\r\n\t\t\t\"Layer\": \"WALL_T\"\r\n\t\t}\r\n\t]\r\n}\r\n```\r\n\r\nand \r\n\r\n```js\r\n{\r\n\t\"Data\": {\r\n\t\t\"Count\": 2,\r\n\t\t\"POINT\": {\r\n\t\t\t\"Point1\": {\r\n\t\t\t\t\"X\": 2015.12353515625,\r\n\t\t\t\t\"Y\": 2028.6619873046875,\r\n\t\t\t\t\"Z\": 0\r\n\t\t\t},\r\n\t\t\t\"Point2\": {\r\n\t\t\t\t\"X\": 2967.66357421875,\r\n\t\t\t\t\"Y\": 1559.193359375,\r\n\t\t\t\t\"Z\": 0\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"Type\": \"LINE\"\r\n\t},\r\n\t\"Layer\": \"WALL_T\"\r\n}\r\n```\r\n\r\ni want to add second string in first \"wall\" array..\r\nresult be like ..\r\n\r\n```js\r\n{\r\n\t\"WALL\": [\r\n\t\t{\r\n\t\t\t\"Data\": {\r\n\t\t\t\t\"Count\": 2,\r\n\t\t\t\t\"POINT\": {\r\n\t\t\t\t\t\"Point1\": {\r\n\t\t\t\t\t\t\"X\": 1942.6468505859375,\r\n\t\t\t\t\t\t\"Y\": 2344.69677734375,\r\n\t\t\t\t\t\t\"Z\": 0\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"Point2\": {\r\n\t\t\t\t\t\t\"X\": 3313.0263671875,\r\n\t\t\t\t\t\t\"Y\": 2062.294189453125,\r\n\t\t\t\t\t\t\"Z\": 0\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"Type\": \"LINE\"\r\n\t\t\t},\r\n\t\t\t\"Layer\": \"WALL_T\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"Data\": {\r\n\t\t\t\t\"Count\": 2,\r\n\t\t\t\t\"POINT\": {\r\n\t\t\t\t\t\"Point1\": {\r\n\t\t\t\t\t\t\"X\": 2015.12353515625,\r\n\t\t\t\t\t\t\"Y\": 2028.6619873046875,\r\n\t\t\t\t\t\t\"Z\": 0\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"Point2\": {\r\n\t\t\t\t\t\t\"X\": 2967.66357421875,\r\n\t\t\t\t\t\t\"Y\": 1559.193359375,\r\n\t\t\t\t\t\t\"Z\": 0\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"Type\": \"LINE\"\r\n\t\t\t},\r\n\t\t\t\"Layer\": \"WALL_T\"\r\n\t\t}\r\n\t]\r\n}\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1011", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1011/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1011/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1011/events", "html_url": "https://github.com/nlohmann/json/issues/1011", "id": 304717290, "node_id": "MDU6SXNzdWUzMDQ3MTcyOTA=", "number": 1011, "title": "how to serialize class Object (convert data in object into json)??", "user": {"login": "Mamlesh", "id": 37332116, "node_id": "MDQ6VXNlcjM3MzMyMTE2", "avatar_url": "https://avatars1.githubusercontent.com/u/37332116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mamlesh", "html_url": "https://github.com/Mamlesh", "followers_url": "https://api.github.com/users/Mamlesh/followers", "following_url": "https://api.github.com/users/Mamlesh/following{/other_user}", "gists_url": "https://api.github.com/users/Mamlesh/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mamlesh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mamlesh/subscriptions", "organizations_url": "https://api.github.com/users/Mamlesh/orgs", "repos_url": "https://api.github.com/users/Mamlesh/repos", "events_url": "https://api.github.com/users/Mamlesh/events{/privacy}", "received_events_url": "https://api.github.com/users/Mamlesh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 735376215, "node_id": "MDU6TGFiZWw3MzUzNzYyMTU=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20needs%20more%20info", "name": "state: needs more info", "color": "f9d0c4", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-13T11:00:07Z", "updated_at": "2018-03-21T19:19:22Z", "closed_at": "2018-03-21T19:19:22Z", "author_association": "NONE", "body": "\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1010", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1010/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1010/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1010/events", "html_url": "https://github.com/nlohmann/json/issues/1010", "id": 304608382, "node_id": "MDU6SXNzdWUzMDQ2MDgzODI=", "number": 1010, "title": "The library doesn't want to insert an unordered_map", "user": {"login": "tristan957", "id": 11936772, "node_id": "MDQ6VXNlcjExOTM2Nzcy", "avatar_url": "https://avatars1.githubusercontent.com/u/11936772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tristan957", "html_url": "https://github.com/tristan957", "followers_url": "https://api.github.com/users/tristan957/followers", "following_url": "https://api.github.com/users/tristan957/following{/other_user}", "gists_url": "https://api.github.com/users/tristan957/gists{/gist_id}", "starred_url": "https://api.github.com/users/tristan957/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tristan957/subscriptions", "organizations_url": "https://api.github.com/users/tristan957/orgs", "repos_url": "https://api.github.com/users/tristan957/repos", "events_url": "https://api.github.com/users/tristan957/events{/privacy}", "received_events_url": "https://api.github.com/users/tristan957/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-13T02:44:26Z", "updated_at": "2018-03-13T06:39:07Z", "closed_at": "2018-03-13T06:25:19Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have? I am trying to insert an unordered_map, but it always comes out ordered in the json file.\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example? \r\n```\r\nargs = {\"hello\", \"world\"};\r\njson j;\r\n// get info from file\r\nj[\"distributions\"].push_back(std::unordered_map<std::string, std::string>({{\"name\", args[1]}, {\"location\", args[2]}}));\r\n\r\n{\r\n    \"distributions\": [\r\n        {\r\n            \"location\": \"world\",\r\n            \"name\": \"hello\"\r\n        },\r\n        {\r\n            \"location\": \"there\",\r\n            \"name\": \"hi\"\r\n        },\r\n        {\r\n            \"location\": \"partin\",\r\n            \"name\": \"tristan\"\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n- What is the expected behavior? I want the name key, then the location key.\r\n\r\n- And what is the actual behavior instead? The location key comes before the name key.\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)? G++ 7.3 Solus (Linux)\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch? Released (latest stable)"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1009", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1009/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1009/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1009/events", "html_url": "https://github.com/nlohmann/json/pull/1009", "id": 304494630, "node_id": "MDExOlB1bGxSZXF1ZXN0MTc0NDYwMjkw", "number": 1009, "title": "Allowing for user-defined string type in lexer/parser", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/23", "html_url": "https://github.com/nlohmann/json/milestone/23", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/23/labels", "id": 3114191, "node_id": "MDk6TWlsZXN0b25lMzExNDE5MQ==", "number": 23, "title": "Release 3.1.2", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "closed", "created_at": "2018-02-13T18:42:55Z", "updated_at": "2018-03-14T20:25:26Z", "due_on": "2018-03-14T07:00:00Z", "closed_at": "2018-03-14T20:25:26Z"}, "comments": 1, "created_at": "2018-03-12T18:44:26Z", "updated_at": "2018-03-13T13:53:06Z", "closed_at": "2018-03-13T13:53:00Z", "author_association": "OWNER", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1009", "html_url": "https://github.com/nlohmann/json/pull/1009", "diff_url": "https://github.com/nlohmann/json/pull/1009.diff", "patch_url": "https://github.com/nlohmann/json/pull/1009.patch"}, "body": "With #1006 we allowed for user-defined string types in the serializer. This PR also adds support for user-defined string types in the lexer and parser.\r\n\r\nThanks to @ralfbielig for noting."}]