[{"url": "https://api.github.com/repos/nlohmann/json/issues/1008", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1008/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1008/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1008/events", "html_url": "https://github.com/nlohmann/json/issues/1008", "id": 304301551, "node_id": "MDU6SXNzdWUzMDQzMDE1NTE=", "number": 1008, "title": "Convert Json to uint8_t", "user": {"login": "qvs5010", "id": 491550, "node_id": "MDQ6VXNlcjQ5MTU1MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/491550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qvs5010", "html_url": "https://github.com/qvs5010", "followers_url": "https://api.github.com/users/qvs5010/followers", "following_url": "https://api.github.com/users/qvs5010/following{/other_user}", "gists_url": "https://api.github.com/users/qvs5010/gists{/gist_id}", "starred_url": "https://api.github.com/users/qvs5010/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qvs5010/subscriptions", "organizations_url": "https://api.github.com/users/qvs5010/orgs", "repos_url": "https://api.github.com/users/qvs5010/repos", "events_url": "https://api.github.com/users/qvs5010/events{/privacy}", "received_events_url": "https://api.github.com/users/qvs5010/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-03-12T09:48:08Z", "updated_at": "2018-03-13T18:11:56Z", "closed_at": "2018-03-13T18:11:56Z", "author_association": "NONE", "body": "Hi \r\nHow can I convert my JSON to a uint8_t?\r\nis this even possible?\r\n\r\nuint8_t data[64] = theJsonData;\r\n\r\n  "}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1007", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1007/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1007/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1007/events", "html_url": "https://github.com/nlohmann/json/issues/1007", "id": 304158242, "node_id": "MDU6SXNzdWUzMDQxNTgyNDI=", "number": 1007, "title": "How to compare two JSON objects?", "user": {"login": "zkelo", "id": 13527447, "node_id": "MDQ6VXNlcjEzNTI3NDQ3", "avatar_url": "https://avatars0.githubusercontent.com/u/13527447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zkelo", "html_url": "https://github.com/zkelo", "followers_url": "https://api.github.com/users/zkelo/followers", "following_url": "https://api.github.com/users/zkelo/following{/other_user}", "gists_url": "https://api.github.com/users/zkelo/gists{/gist_id}", "starred_url": "https://api.github.com/users/zkelo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zkelo/subscriptions", "organizations_url": "https://api.github.com/users/zkelo/orgs", "repos_url": "https://api.github.com/users/zkelo/repos", "events_url": "https://api.github.com/users/zkelo/events{/privacy}", "received_events_url": "https://api.github.com/users/zkelo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-11T13:26:04Z", "updated_at": "2018-03-11T16:26:01Z", "closed_at": "2018-03-11T16:24:12Z", "author_association": "NONE", "body": "I have default app settngs in JSON object `DefaultSettings` and I'm parsing current app settings from file `Config.json` (ifstream). How to compare indexes from `Settings` with indexes in `DefaultSettings`? Does library have functions for this? I tried to compare with `iterator_wrapper` but he's deprecated."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1006", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1006/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1006/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1006/events", "html_url": "https://github.com/nlohmann/json/pull/1006", "id": 304145811, "node_id": "MDExOlB1bGxSZXF1ZXN0MTc0MjEzNTc5", "number": 1006, "title": "dump to alternative string type, as defined in basic_json template", "user": {"login": "agrianius", "id": 37244280, "node_id": "MDQ6VXNlcjM3MjQ0Mjgw", "avatar_url": "https://avatars0.githubusercontent.com/u/37244280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agrianius", "html_url": "https://github.com/agrianius", "followers_url": "https://api.github.com/users/agrianius/followers", "following_url": "https://api.github.com/users/agrianius/following{/other_user}", "gists_url": "https://api.github.com/users/agrianius/gists{/gist_id}", "starred_url": "https://api.github.com/users/agrianius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agrianius/subscriptions", "organizations_url": "https://api.github.com/users/agrianius/orgs", "repos_url": "https://api.github.com/users/agrianius/repos", "events_url": "https://api.github.com/users/agrianius/events{/privacy}", "received_events_url": "https://api.github.com/users/agrianius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/23", "html_url": "https://github.com/nlohmann/json/milestone/23", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/23/labels", "id": 3114191, "node_id": "MDk6TWlsZXN0b25lMzExNDE5MQ==", "number": 23, "title": "Release 3.1.2", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "closed", "created_at": "2018-02-13T18:42:55Z", "updated_at": "2018-03-14T20:25:26Z", "due_on": "2018-03-14T07:00:00Z", "closed_at": "2018-03-14T20:25:26Z"}, "comments": 2, "created_at": "2018-03-11T10:07:00Z", "updated_at": "2018-03-12T17:42:04Z", "closed_at": "2018-03-12T17:42:00Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1006", "html_url": "https://github.com/nlohmann/json/pull/1006", "diff_url": "https://github.com/nlohmann/json/pull/1006.diff", "patch_url": "https://github.com/nlohmann/json/pull/1006.patch"}, "body": "An alternative string implementation can be defined in basic_json template. These changes allow json::dump to work with the alternative string type."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1005", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1005/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1005/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1005/events", "html_url": "https://github.com/nlohmann/json/pull/1005", "id": 304107068, "node_id": "MDExOlB1bGxSZXF1ZXN0MTc0MTkwNTE4", "number": 1005, "title": "dump to alternative string type, as defined in basic_json template", "user": {"login": "agrianius", "id": 37244280, "node_id": "MDQ6VXNlcjM3MjQ0Mjgw", "avatar_url": "https://avatars0.githubusercontent.com/u/37244280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agrianius", "html_url": "https://github.com/agrianius", "followers_url": "https://api.github.com/users/agrianius/followers", "following_url": "https://api.github.com/users/agrianius/following{/other_user}", "gists_url": "https://api.github.com/users/agrianius/gists{/gist_id}", "starred_url": "https://api.github.com/users/agrianius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agrianius/subscriptions", "organizations_url": "https://api.github.com/users/agrianius/orgs", "repos_url": "https://api.github.com/users/agrianius/repos", "events_url": "https://api.github.com/users/agrianius/events{/privacy}", "received_events_url": "https://api.github.com/users/agrianius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-10T21:30:55Z", "updated_at": "2018-03-11T10:04:23Z", "closed_at": "2018-03-11T10:04:23Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1005", "html_url": "https://github.com/nlohmann/json/pull/1005", "diff_url": "https://github.com/nlohmann/json/pull/1005.diff", "patch_url": "https://github.com/nlohmann/json/pull/1005.patch"}, "body": "An alternative string implementation can be defined in basic_json template. These changes allow json::dump to work with the alternative string type."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1004", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1004/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1004/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1004/events", "html_url": "https://github.com/nlohmann/json/pull/1004", "id": 304075587, "node_id": "MDExOlB1bGxSZXF1ZXN0MTc0MTczMTAz", "number": 1004, "title": "dump to alternative implementation of string, as defined in basic_json template", "user": {"login": "agrianius", "id": 37244280, "node_id": "MDQ6VXNlcjM3MjQ0Mjgw", "avatar_url": "https://avatars0.githubusercontent.com/u/37244280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agrianius", "html_url": "https://github.com/agrianius", "followers_url": "https://api.github.com/users/agrianius/followers", "following_url": "https://api.github.com/users/agrianius/following{/other_user}", "gists_url": "https://api.github.com/users/agrianius/gists{/gist_id}", "starred_url": "https://api.github.com/users/agrianius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agrianius/subscriptions", "organizations_url": "https://api.github.com/users/agrianius/orgs", "repos_url": "https://api.github.com/users/agrianius/repos", "events_url": "https://api.github.com/users/agrianius/events{/privacy}", "received_events_url": "https://api.github.com/users/agrianius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-10T14:43:06Z", "updated_at": "2018-03-10T20:52:10Z", "closed_at": "2018-03-10T20:52:10Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1004", "html_url": "https://github.com/nlohmann/json/pull/1004", "diff_url": "https://github.com/nlohmann/json/pull/1004.diff", "patch_url": "https://github.com/nlohmann/json/pull/1004.patch"}, "body": "Alternative string implementation can be defined in basic_json template. These changes allows json::dump to work with the alternative string type."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1003", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1003/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1003/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1003/events", "html_url": "https://github.com/nlohmann/json/issues/1003", "id": 303984322, "node_id": "MDU6SXNzdWUzMDM5ODQzMjI=", "number": 1003, "title": "Syntax checking", "user": {"login": "zkelo", "id": 13527447, "node_id": "MDQ6VXNlcjEzNTI3NDQ3", "avatar_url": "https://avatars0.githubusercontent.com/u/13527447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zkelo", "html_url": "https://github.com/zkelo", "followers_url": "https://api.github.com/users/zkelo/followers", "following_url": "https://api.github.com/users/zkelo/following{/other_user}", "gists_url": "https://api.github.com/users/zkelo/gists{/gist_id}", "starred_url": "https://api.github.com/users/zkelo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zkelo/subscriptions", "organizations_url": "https://api.github.com/users/zkelo/orgs", "repos_url": "https://api.github.com/users/zkelo/repos", "events_url": "https://api.github.com/users/zkelo/events{/privacy}", "received_events_url": "https://api.github.com/users/zkelo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-03-09T21:22:22Z", "updated_at": "2018-07-27T21:14:07Z", "closed_at": "2018-03-10T17:31:26Z", "author_association": "NONE", "body": "I'm need to read some *.json file, but this file can have invalid json format. How to check for right json format before or while parsing?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1002", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1002/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1002/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1002/events", "html_url": "https://github.com/nlohmann/json/issues/1002", "id": 303787063, "node_id": "MDU6SXNzdWUzMDM3ODcwNjM=", "number": 1002, "title": "more than one operator '=' matches these operands", "user": {"login": "balldrix", "id": 8443064, "node_id": "MDQ6VXNlcjg0NDMwNjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8443064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/balldrix", "html_url": "https://github.com/balldrix", "followers_url": "https://api.github.com/users/balldrix/followers", "following_url": "https://api.github.com/users/balldrix/following{/other_user}", "gists_url": "https://api.github.com/users/balldrix/gists{/gist_id}", "starred_url": "https://api.github.com/users/balldrix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/balldrix/subscriptions", "organizations_url": "https://api.github.com/users/balldrix/orgs", "repos_url": "https://api.github.com/users/balldrix/repos", "events_url": "https://api.github.com/users/balldrix/events{/privacy}", "received_events_url": "https://api.github.com/users/balldrix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-09T10:05:25Z", "updated_at": "2018-03-09T12:42:05Z", "closed_at": "2018-03-09T12:00:03Z", "author_association": "NONE", "body": "I'm copying data into a struct. I get this warning when I copy a std::string.\r\n\r\n```\r\n// read file\r\n\tstd::ifstream file(fileName);\r\n\r\n\t// parse data from file\r\n\tjson data = json::parse(file);\r\n\tjson animation = data[\"animation\"];\r\n\r\n\t// iterate through data and save in animation list\r\n\tfor(json::iterator it = animation.begin(); it != animation.end(); ++it)\r\n\t{\r\n\t\t// json of current it in array\r\n\t\tjson j = it.value();\r\n\r\n\t\t// data struct\r\n\t\tAnimation animationType;\r\n\t\tanimationType.name = j[\"name\"];\r\n\t\tanimationType.spriteSheetIndex = j[\"index\"];\r\n\t\tanimationType.frameCount = j[\"frameCount\"];\r\n\t\tanimationType.framesPerSecond = j[\"framesPerSecond\"];\r\n\t\tanimationType.loop = j[\"loop\"];\r\n\r\n\t\t// push data to list\r\n\t\tm_animationList.push_back(animationType);\r\n\t}\r\n```\r\n\r\nThe code works as intended but would you know why this message appears? Is there a better way for me to take the json file and put the data in a vector list?\r\n\r\nI'm using Windows 7 & Windows 10, Visual Studio 2017 v15.5.6.\r\n\r\nUsing the most recent release version of nlohmann/json.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1001", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1001/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1001/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1001/events", "html_url": "https://github.com/nlohmann/json/pull/1001", "id": 303770908, "node_id": "MDExOlB1bGxSZXF1ZXN0MTczOTUyODE2", "number": 1001, "title": "Fix memory leak during parser callback", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374231, "node_id": "MDU6TGFiZWw0NjM3NDIzMQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20bug", "name": "kind: bug", "color": "fc2929", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/23", "html_url": "https://github.com/nlohmann/json/milestone/23", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/23/labels", "id": 3114191, "node_id": "MDk6TWlsZXN0b25lMzExNDE5MQ==", "number": 23, "title": "Release 3.1.2", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "closed", "created_at": "2018-02-13T18:42:55Z", "updated_at": "2018-03-14T20:25:26Z", "due_on": "2018-03-14T07:00:00Z", "closed_at": "2018-03-14T20:25:26Z"}, "comments": 2, "created_at": "2018-03-09T09:08:11Z", "updated_at": "2018-03-10T07:32:33Z", "closed_at": "2018-03-09T20:23:01Z", "author_association": "OWNER", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/1001", "html_url": "https://github.com/nlohmann/json/pull/1001", "diff_url": "https://github.com/nlohmann/json/pull/1001.diff", "patch_url": "https://github.com/nlohmann/json/pull/1001.patch"}, "body": "Fixes a memory leak in the case when the parser callback function discards values. The reason was a forgotten destroy call.\r\n\r\nThanks to @ralfbielig for reporting and proposing a fix."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/1000", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/1000/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/1000/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/1000/events", "html_url": "https://github.com/nlohmann/json/issues/1000", "id": 303770564, "node_id": "MDU6SXNzdWUzMDM3NzA1NjQ=", "number": 1000, "title": "How to check if key existed ", "user": {"login": "leeqicheng", "id": 6437615, "node_id": "MDQ6VXNlcjY0Mzc2MTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6437615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leeqicheng", "html_url": "https://github.com/leeqicheng", "followers_url": "https://api.github.com/users/leeqicheng/followers", "following_url": "https://api.github.com/users/leeqicheng/following{/other_user}", "gists_url": "https://api.github.com/users/leeqicheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/leeqicheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leeqicheng/subscriptions", "organizations_url": "https://api.github.com/users/leeqicheng/orgs", "repos_url": "https://api.github.com/users/leeqicheng/repos", "events_url": "https://api.github.com/users/leeqicheng/events{/privacy}", "received_events_url": "https://api.github.com/users/leeqicheng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-03-09T09:06:44Z", "updated_at": "2018-03-09T09:42:24Z", "closed_at": "2018-03-09T09:42:24Z", "author_association": "NONE", "body": "Hi to all is there a method to check if the key exist , \r\n\r\nwhat is the close to \r\n\r\nJava JSON \r\n\r\n> indivFB.has(\"object_id\")\r\n\r\nThanks "}, {"url": "https://api.github.com/repos/nlohmann/json/issues/999", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/999/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/999/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/999/events", "html_url": "https://github.com/nlohmann/json/issues/999", "id": 302801028, "node_id": "MDU6SXNzdWUzMDI4MDEwMjg=", "number": 999, "title": "nlohmann::json::parse exhaust memory in go binding", "user": {"login": "sjiekak", "id": 1922047, "node_id": "MDQ6VXNlcjE5MjIwNDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1922047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjiekak", "html_url": "https://github.com/sjiekak", "followers_url": "https://api.github.com/users/sjiekak/followers", "following_url": "https://api.github.com/users/sjiekak/following{/other_user}", "gists_url": "https://api.github.com/users/sjiekak/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjiekak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjiekak/subscriptions", "organizations_url": "https://api.github.com/users/sjiekak/orgs", "repos_url": "https://api.github.com/users/sjiekak/repos", "events_url": "https://api.github.com/users/sjiekak/events{/privacy}", "received_events_url": "https://api.github.com/users/sjiekak/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-06T17:47:50Z", "updated_at": "2018-03-06T19:01:38Z", "closed_at": "2018-03-06T19:00:44Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- `nlohmann::json::parse` exhaust memory inside cgo\r\n\r\n- Code : \r\n\r\nparse.hpp\r\n\r\n```cpp\r\n#ifndef PARSE_DEMO_H_\r\n#define PARSE_DEMO_H_\r\n\r\n#ifdef __cplusplus\r\nextern \"C\" {\r\n#endif\r\n    void parse(char* value);\r\n#ifdef __cplusplus\r\n}\r\n#endif\r\n\r\n#endif\r\n```\r\nparse.cpp\r\n\r\n```cpp\r\n#include \"parse.hpp\"\r\n#include \"json.hpp\"\r\n\r\nextern \"C\" void parse(char* value)\r\n{\r\n    try\r\n    {\r\n        nlohmann::json::parse(value);\r\n    }\r\n    catch (std::exception&)\r\n    {}\r\n}\r\n```\r\n\r\nleaker.go\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"unsafe\"\r\n)\r\n\r\n// #include <stdlib.h>\r\n// #include \"parse.hpp\"\r\n// #cgo LDFLAGS: -lparse -lstdc++\r\nimport \"C\"\r\n\r\nfunc main() {\r\n\tinput := \"{\\\"hello\\\": \\\"world\\\"}\";\r\n\tfor ;; {\r\n\t\tcinput := C.CString(input);\r\n\t\tdefer C.free(unsafe.Pointer(cinput))\r\n\t\tC.parse(cinput)\r\n\t}\r\n}\r\n```\r\n\r\nrun.sh\r\n```sh\r\n#!/bin/bash\r\n\r\nset -eo pipefail\r\n\r\ng++ -g -c -std=gnu++17 ./parse.cpp -o parse.o\r\nar -s -r libparse.a parse.o\r\nrm parse.o\r\nCGO_LDFLAGS=-L\"$PWD\" go run leaker.go\r\n```\r\n\r\nDockerfile\r\n```dockerfile\r\nFROM ubuntu:17.10\r\nRUN apt-get update --yes && \\\r\n    apt-get install \\\r\n    curl \\\r\n    g++ \\\r\n    --yes\r\n\r\nENV GO_VERSION=1.9 \\\r\n    GO_SHA256=d70eadefce8e160638a9a6db97f7192d8463069ab33138893ad3bf31b0650a79\r\n\r\nRUN curl https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz -o /golang.tar.gz && \\\r\n    echo \"${GO_SHA256} /golang.tar.gz\" | sha256sum -c - && \\\r\n    tar -xzf /golang.tar.gz && \\\r\n    cd /usr/local/bin && ln -s /go/bin/* . && \\\r\n    go version && \\\r\n    rm /golang.tar.gz\r\n\r\nRUN mkdir -p /usr/local/demo/\r\nCOPY /* /usr/local/demo/\r\nWORKDIR /usr/local/demo\r\n```\r\n\r\n- What is the expected behavior? \r\n\r\n**Constant memory usage**\r\n\r\n- And what is the actual behavior instead? \r\n\r\n**Increasing memory usage**\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\n\r\n**g++ (Ubuntu 7.2.0-8ubuntu3.2) 7.2.0**\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\n\r\nI used the latest release version to date\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/998", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/998/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/998/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/998/events", "html_url": "https://github.com/nlohmann/json/issues/998", "id": 302584464, "node_id": "MDU6SXNzdWUzMDI1ODQ0NjQ=", "number": 998, "title": "Range-based iteration over a non-array object", "user": {"login": "dvhwgumby", "id": 450612, "node_id": "MDQ6VXNlcjQ1MDYxMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/450612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvhwgumby", "html_url": "https://github.com/dvhwgumby", "followers_url": "https://api.github.com/users/dvhwgumby/followers", "following_url": "https://api.github.com/users/dvhwgumby/following{/other_user}", "gists_url": "https://api.github.com/users/dvhwgumby/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvhwgumby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvhwgumby/subscriptions", "organizations_url": "https://api.github.com/users/dvhwgumby/orgs", "repos_url": "https://api.github.com/users/dvhwgumby/repos", "events_url": "https://api.github.com/users/dvhwgumby/events{/privacy}", "received_events_url": "https://api.github.com/users/dvhwgumby/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-06T06:54:20Z", "updated_at": "2018-03-06T07:54:22Z", "closed_at": "2018-03-06T07:51:51Z", "author_association": "NONE", "body": "It is possible or planned to be able to use a range-based for loop to iterate over a non-array object?\r\n\r\nThat is, you can do:\r\n\r\n    for (auto& element : j) \r\n      std::cout << element << std::endl;\r\n\r\nfor an array ```[ \"a\", \"b\" ]``` but not for ```{\"foo\": \"bar\", \"quux\":\"baaz\"}``` (well, range-based iteration works if you don't care about the key)\r\n\r\nThe json package compiles and works just fine under C++17, so I would like to be able to do:\r\n\r\n    for (auto& [key, value] : j)\r\n      std::cout << key << \" : \" << value << std::endl;\r\n\r\nI am sure there are more important feature requests (e.g. SAX read & write) but I thought I would submit this one anyway.  This package is great!  Thanks, d "}, {"url": "https://api.github.com/repos/nlohmann/json/issues/997", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/997/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/997/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/997/events", "html_url": "https://github.com/nlohmann/json/issues/997", "id": 302569855, "node_id": "MDU6SXNzdWUzMDI1Njk4NTU=", "number": 997, "title": "Enable forward declaration of json by making json a class instead of a using declaration", "user": {"login": "pgoodman", "id": 43664, "node_id": "MDQ6VXNlcjQzNjY0", "avatar_url": "https://avatars2.githubusercontent.com/u/43664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pgoodman", "html_url": "https://github.com/pgoodman", "followers_url": "https://api.github.com/users/pgoodman/followers", "following_url": "https://api.github.com/users/pgoodman/following{/other_user}", "gists_url": "https://api.github.com/users/pgoodman/gists{/gist_id}", "starred_url": "https://api.github.com/users/pgoodman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pgoodman/subscriptions", "organizations_url": "https://api.github.com/users/pgoodman/orgs", "repos_url": "https://api.github.com/users/pgoodman/repos", "events_url": "https://api.github.com/users/pgoodman/events{/privacy}", "received_events_url": "https://api.github.com/users/pgoodman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 735376215, "node_id": "MDU6TGFiZWw3MzUzNzYyMTU=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20needs%20more%20info", "name": "state: needs more info", "color": "f9d0c4", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-03-06T05:34:34Z", "updated_at": "2018-06-06T11:51:28Z", "closed_at": "2018-04-09T20:19:12Z", "author_association": "NONE", "body": "I would like to be able to be able to declare the conversion operators in a header without having to `#include` the json.h file. I would then define the conversion operators in a source file, which actually includes json.h.\r\n\r\nHere is an example of what I want do do, but can't:\r\n\r\n```c++\r\nnamespace nlohmann {\r\nclass json;\r\nvoid to_json(json &j, const MyType &blah);\r\nvoid from_json(const json &j, MyType &blah);\r\n}  // namespace nlohmann\r\n```\r\n\r\nWhat is stopping me is `using json = basic_json<>;`. A simple fix should be `class json : public basic_json<> {};`.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/996", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/996/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/996/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/996/events", "html_url": "https://github.com/nlohmann/json/issues/996", "id": 302520726, "node_id": "MDU6SXNzdWUzMDI1MjA3MjY=", "number": 996, "title": "get<T> for types that are not default constructible", "user": {"login": "bradymadams", "id": 23110600, "node_id": "MDQ6VXNlcjIzMTEwNjAw", "avatar_url": "https://avatars1.githubusercontent.com/u/23110600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bradymadams", "html_url": "https://github.com/bradymadams", "followers_url": "https://api.github.com/users/bradymadams/followers", "following_url": "https://api.github.com/users/bradymadams/following{/other_user}", "gists_url": "https://api.github.com/users/bradymadams/gists{/gist_id}", "starred_url": "https://api.github.com/users/bradymadams/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bradymadams/subscriptions", "organizations_url": "https://api.github.com/users/bradymadams/orgs", "repos_url": "https://api.github.com/users/bradymadams/repos", "events_url": "https://api.github.com/users/bradymadams/events{/privacy}", "received_events_url": "https://api.github.com/users/bradymadams/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-03-06T00:46:24Z", "updated_at": "2018-03-06T13:19:58Z", "closed_at": "2018-03-06T13:19:58Z", "author_association": "NONE", "body": "Currently the `get<T>` method requires that T is default constructible. Might it make sense to overload `get` so that it can take variadic arguments and construct the new object with a non-default constructor? For example - below is a minor variation of `get`. Any reason why this is a bad idea?\r\n\r\n```c++\r\ntemplate<typename ValueTypeCV, typename ValueType = detail::uncvref_t<ValueTypeCV>,\r\n         detail::enable_if_t <\r\n             not std::is_same<basic_json_t, ValueType>::value and\r\n             detail::has_from_json<basic_json_t, ValueType>::value and\r\n             not detail::has_non_default_from_json<basic_json_t, ValueType>::value,\r\n             int> = 0, typename ...Types>\r\nValueType get(Types... args) const noexcept(noexcept(\r\n                                   JSONSerializer<ValueType>::from_json(std::declval<const basic_json_t&>(), std::declval<ValueType&>())))\r\n{\r\n    // we cannot static_assert on ValueTypeCV being non-const, because\r\n    // there is support for get<const basic_json_t>(), which is why we\r\n    // still need the uncvref\r\n    static_assert(not std::is_reference<ValueTypeCV>::value,\r\n                  \"get() cannot be used with reference types, you might want to use get_ref()\");\r\n\r\n    ValueType ret(args...); // Allows non-default constructors to be used\r\n    JSONSerializer<ValueType>::from_json(*this, ret);\r\n    return ret;\r\n}\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/995", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/995/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/995/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/995/events", "html_url": "https://github.com/nlohmann/json/issues/995", "id": 302392612, "node_id": "MDU6SXNzdWUzMDIzOTI2MTI=", "number": 995, "title": "Prevent Null values to appear in .dump()", "user": {"login": "nuno407", "id": 11352538, "node_id": "MDQ6VXNlcjExMzUyNTM4", "avatar_url": "https://avatars2.githubusercontent.com/u/11352538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nuno407", "html_url": "https://github.com/nuno407", "followers_url": "https://api.github.com/users/nuno407/followers", "following_url": "https://api.github.com/users/nuno407/following{/other_user}", "gists_url": "https://api.github.com/users/nuno407/gists{/gist_id}", "starred_url": "https://api.github.com/users/nuno407/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nuno407/subscriptions", "organizations_url": "https://api.github.com/users/nuno407/orgs", "repos_url": "https://api.github.com/users/nuno407/repos", "events_url": "https://api.github.com/users/nuno407/events{/privacy}", "received_events_url": "https://api.github.com/users/nuno407/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-05T17:32:44Z", "updated_at": "2018-03-06T16:47:00Z", "closed_at": "2018-03-06T16:47:00Z", "author_association": "NONE", "body": "Imagine that you have the following json string created by .dump()\r\n\r\n`\r\n{\"connectorId\":0,\r\n\"meterValue\": [{\"sampledValue\":[{\"context\":\"Sample.Periodic\",\"format\":null,\"location\":\"Body\",\"measurand\":null,\"phase\":\"L1\",\"unit\":\"V\",\"value\":\"18440\"},{\"context\":\"Sample.Periodic\",\"format\":null,\"location\":\"Body\",\"measurand\":null,\"phase\":\"L2\",\"unit\":\"V\",\"value\":\"46927\"},{\"context\":\"Sample.Periodic\",\"format\":null,\"location\":\"Body\",\"measurand\":null,\"phase\":\"L3\",\"unit\":\"V\",\"value\":\"44515\"}]\r\n`\r\n\r\nHow can I configure the library to not include null values in the dump? I research in the documentation by with no success. The only way I can find is to create a For loop that removes all null entries but is quite inefficient.\r\n\r\nThank you for the help,\r\nNuno\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/994", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/994/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/994/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/994/events", "html_url": "https://github.com/nlohmann/json/issues/994", "id": 302098095, "node_id": "MDU6SXNzdWUzMDIwOTgwOTU=", "number": 994, "title": "compilation error while using intel c++ compiler 2018", "user": {"login": "tomqt", "id": 37045275, "node_id": "MDQ6VXNlcjM3MDQ1Mjc1", "avatar_url": "https://avatars2.githubusercontent.com/u/37045275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomqt", "html_url": "https://github.com/tomqt", "followers_url": "https://api.github.com/users/tomqt/followers", "following_url": "https://api.github.com/users/tomqt/following{/other_user}", "gists_url": "https://api.github.com/users/tomqt/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomqt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomqt/subscriptions", "organizations_url": "https://api.github.com/users/tomqt/orgs", "repos_url": "https://api.github.com/users/tomqt/repos", "events_url": "https://api.github.com/users/tomqt/events{/privacy}", "received_events_url": "https://api.github.com/users/tomqt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 706237888, "node_id": "MDU6TGFiZWw3MDYyMzc4ODg=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20icc", "name": "platform: icc", "color": "eb6420", "default": false}, {"id": 735376215, "node_id": "MDU6TGFiZWw3MzUzNzYyMTU=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20needs%20more%20info", "name": "state: needs more info", "color": "f9d0c4", "default": false}, {"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-04T16:13:03Z", "updated_at": "2018-04-25T17:42:28Z", "closed_at": "2018-04-09T20:19:11Z", "author_association": "NONE", "body": "Hello!\r\n\r\nI am facing an issue that maybe has been already solved but I can't find documentation regarding it.\r\nWhen trying to compile a new project that includes json.hpp with Intel C++ 18.0 compiler (as well for Intel C++ 17.0) in visual studio\r\nI get the following errors:\r\n\r\n```\r\n...\\json.hpp(428): error : type name is not allowed\r\ndetect(std::declval<typename BasicJsonType::template json_serializer<T, void>()))>::value;\r\n\r\n...\\json.hpp(446): error : type name is not allowed\r\nstd::declval<typename BasicJsonType::template json_serializer<T, void>()))>::value;\r\n\r\n...\\json.hpp(461): error : type name is not allowed\r\nstd::declval<typename BasicJsonType::template json_serializer<T, void>()))>::value;\r\n```\r\n\r\nIs it a known and solved issue?\r\n\r\nThanks!"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/993", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/993/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/993/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/993/events", "html_url": "https://github.com/nlohmann/json/issues/993", "id": 302066098, "node_id": "MDU6SXNzdWUzMDIwNjYwOTg=", "number": 993, "title": "number parsing", "user": {"login": "Yaossg", "id": 29620619, "node_id": "MDQ6VXNlcjI5NjIwNjE5", "avatar_url": "https://avatars1.githubusercontent.com/u/29620619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yaossg", "html_url": "https://github.com/Yaossg", "followers_url": "https://api.github.com/users/Yaossg/followers", "following_url": "https://api.github.com/users/Yaossg/following{/other_user}", "gists_url": "https://api.github.com/users/Yaossg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yaossg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yaossg/subscriptions", "organizations_url": "https://api.github.com/users/Yaossg/orgs", "repos_url": "https://api.github.com/users/Yaossg/repos", "events_url": "https://api.github.com/users/Yaossg/events{/privacy}", "received_events_url": "https://api.github.com/users/Yaossg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-04T08:03:01Z", "updated_at": "2018-03-05T11:21:15Z", "closed_at": "2018-03-05T11:21:09Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\nnumber literals like `\"+1\"_json` , `\".5\"_json` , `\"5.\"_json` are invalid\r\n\r\n**Feature Request**\r\n\r\nhexadecimal floating literal (like`0x1.2p3`)"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/992", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/992/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/992/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/992/events", "html_url": "https://github.com/nlohmann/json/pull/992", "id": 301693404, "node_id": "MDExOlB1bGxSZXF1ZXN0MTcyNDQ5Nzc4", "number": 992, "title": "fixed misprinted condition detected by PVS Studio.", "user": {"login": "bogemic", "id": 26283467, "node_id": "MDQ6VXNlcjI2MjgzNDY3", "avatar_url": "https://avatars0.githubusercontent.com/u/26283467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bogemic", "html_url": "https://github.com/bogemic", "followers_url": "https://api.github.com/users/bogemic/followers", "following_url": "https://api.github.com/users/bogemic/following{/other_user}", "gists_url": "https://api.github.com/users/bogemic/gists{/gist_id}", "starred_url": "https://api.github.com/users/bogemic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bogemic/subscriptions", "organizations_url": "https://api.github.com/users/bogemic/orgs", "repos_url": "https://api.github.com/users/bogemic/repos", "events_url": "https://api.github.com/users/bogemic/events{/privacy}", "received_events_url": "https://api.github.com/users/bogemic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/23", "html_url": "https://github.com/nlohmann/json/milestone/23", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/23/labels", "id": 3114191, "node_id": "MDk6TWlsZXN0b25lMzExNDE5MQ==", "number": 23, "title": "Release 3.1.2", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "closed", "created_at": "2018-02-13T18:42:55Z", "updated_at": "2018-03-14T20:25:26Z", "due_on": "2018-03-14T07:00:00Z", "closed_at": "2018-03-14T20:25:26Z"}, "comments": 2, "created_at": "2018-03-02T08:49:46Z", "updated_at": "2018-03-05T14:58:03Z", "closed_at": "2018-03-05T14:57:57Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/992", "html_url": "https://github.com/nlohmann/json/pull/992", "diff_url": "https://github.com/nlohmann/json/pull/992.diff", "patch_url": "https://github.com/nlohmann/json/pull/992.patch"}, "body": "fixed misprinted condition detected by PVS Studio.\r\n\r\n* * *\r\n\r\n## Pull request checklist\r\n\r\nRead the [Contribution Guidelines](https://github.com/nlohmann/json/blob/develop/.github/CONTRIBUTING.md) for detailed information.\r\n\r\n- [ ]  Changes are described in the pull request, or an [existing issue is referenced](https://github.com/nlohmann/json/issues).\r\n- [ ]  The test suite [compiles and runs](https://github.com/nlohmann/json/blob/develop/README.md#execute-unit-tests) without error.\r\n- [ ]  [Code coverage](https://coveralls.io/github/nlohmann/json) is 100%. Test cases can be added by editing the [test suite](https://github.com/nlohmann/json/tree/develop/test/src).\r\n- [ ]  The source code is amalgamated; that is, after making changes to the sources in the `include/nlohmann` directory, run `make amalgamate` to create the single-header file `single_include/nlohmann/json.hpp`. The whole process is described [here](https://github.com/nlohmann/json/blob/develop/.github/CONTRIBUTING.md#files-to-change).\r\n\r\n## Please don't\r\n\r\n- The C++11 support varies between different **compilers** and versions. Please note the [list of supported compilers](https://github.com/nlohmann/json/blob/master/README.md#supported-compilers). Some compilers like GCC 4.8 (and earlier), Clang 3.3 (and earlier), or Microsoft Visual Studio 13.0 and earlier are known not to work due to missing or incomplete C++11 support. Please refrain from proposing changes that work around these compiler's limitations with `#ifdef`s or other means.\r\n- Specifically, I am aware of compilation problems with **Microsoft Visual Studio** (there even is an [issue label](https://github.com/nlohmann/json/issues?utf8=\u2713&q=label%3A%22visual+studio%22+) for these kind of bugs). I understand that even in 2016, complete C++11 support isn't there yet. But please also understand that I do not want to drop features or uglify the code just to make Microsoft's sub-standard compiler happy. The past has shown that there are ways to express the functionality such that the code compiles with the most recent MSVC - unfortunately, this is not the main objective of the project.\r\n- Please refrain from proposing changes that would **break [JSON](http://json.org) conformance**. If you propose a conformant extension of JSON to be supported by the library, please motivate this extension.\r\n- Please do not open pull requests that address **multiple issues**.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/991", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/991/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/991/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/991/events", "html_url": "https://github.com/nlohmann/json/pull/991", "id": 301688561, "node_id": "MDExOlB1bGxSZXF1ZXN0MTcyNDQ2NDE4", "number": 991, "title": "pvs_studio fix. misprinted condition", "user": {"login": "bogemic", "id": 26283467, "node_id": "MDQ6VXNlcjI2MjgzNDY3", "avatar_url": "https://avatars0.githubusercontent.com/u/26283467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bogemic", "html_url": "https://github.com/bogemic", "followers_url": "https://api.github.com/users/bogemic/followers", "following_url": "https://api.github.com/users/bogemic/following{/other_user}", "gists_url": "https://api.github.com/users/bogemic/gists{/gist_id}", "starred_url": "https://api.github.com/users/bogemic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bogemic/subscriptions", "organizations_url": "https://api.github.com/users/bogemic/orgs", "repos_url": "https://api.github.com/users/bogemic/repos", "events_url": "https://api.github.com/users/bogemic/events{/privacy}", "received_events_url": "https://api.github.com/users/bogemic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-02T08:29:01Z", "updated_at": "2018-03-02T09:42:34Z", "closed_at": "2018-03-02T08:30:36Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/991", "html_url": "https://github.com/nlohmann/json/pull/991", "diff_url": "https://github.com/nlohmann/json/pull/991.diff", "patch_url": "https://github.com/nlohmann/json/pull/991.patch"}, "body": "fixed misprinted condition detected by PVS Studio.\r\n[Describe your pull request here. Please read the text below the line, and make sure you follow the checklist.]\r\n\r\n* * *\r\n\r\n## Pull request checklist\r\n\r\nRead the [Contribution Guidelines](https://github.com/nlohmann/json/blob/develop/.github/CONTRIBUTING.md) for detailed information.\r\n\r\n- [ ]  Changes are described in the pull request, or an [existing issue is referenced](https://github.com/nlohmann/json/issues).\r\n- [ ]  The test suite [compiles and runs](https://github.com/nlohmann/json/blob/develop/README.md#execute-unit-tests) without error.\r\n- [ ]  [Code coverage](https://coveralls.io/github/nlohmann/json) is 100%. Test cases can be added by editing the [test suite](https://github.com/nlohmann/json/tree/develop/test/src).\r\n- [ ]  The source code is amalgamated; that is, after making changes to the sources in the `include/nlohmann` directory, run `make amalgamate` to create the single-header file `single_include/nlohmann/json.hpp`. The whole process is described [here](https://github.com/nlohmann/json/blob/develop/.github/CONTRIBUTING.md#files-to-change).\r\n\r\n## Please don't\r\n\r\n- The C++11 support varies between different **compilers** and versions. Please note the [list of supported compilers](https://github.com/nlohmann/json/blob/master/README.md#supported-compilers). Some compilers like GCC 4.8 (and earlier), Clang 3.3 (and earlier), or Microsoft Visual Studio 13.0 and earlier are known not to work due to missing or incomplete C++11 support. Please refrain from proposing changes that work around these compiler's limitations with `#ifdef`s or other means.\r\n- Specifically, I am aware of compilation problems with **Microsoft Visual Studio** (there even is an [issue label](https://github.com/nlohmann/json/issues?utf8=\u2713&q=label%3A%22visual+studio%22+) for these kind of bugs). I understand that even in 2016, complete C++11 support isn't there yet. But please also understand that I do not want to drop features or uglify the code just to make Microsoft's sub-standard compiler happy. The past has shown that there are ways to express the functionality such that the code compiles with the most recent MSVC - unfortunately, this is not the main objective of the project.\r\n- Please refrain from proposing changes that would **break [JSON](http://json.org) conformance**. If you propose a conformant extension of JSON to be supported by the library, please motivate this extension.\r\n- Please do not open pull requests that address **multiple issues**.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/990", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/990/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/990/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/990/events", "html_url": "https://github.com/nlohmann/json/issues/990", "id": 301238885, "node_id": "MDU6SXNzdWUzMDEyMzg4ODU=", "number": 990, "title": "How to create a json variable?", "user": {"login": "miketing629", "id": 36926596, "node_id": "MDQ6VXNlcjM2OTI2NTk2", "avatar_url": "https://avatars3.githubusercontent.com/u/36926596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miketing629", "html_url": "https://github.com/miketing629", "followers_url": "https://api.github.com/users/miketing629/followers", "following_url": "https://api.github.com/users/miketing629/following{/other_user}", "gists_url": "https://api.github.com/users/miketing629/gists{/gist_id}", "starred_url": "https://api.github.com/users/miketing629/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miketing629/subscriptions", "organizations_url": "https://api.github.com/users/miketing629/orgs", "repos_url": "https://api.github.com/users/miketing629/repos", "events_url": "https://api.github.com/users/miketing629/events{/privacy}", "received_events_url": "https://api.github.com/users/miketing629/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374235, "node_id": "MDU6TGFiZWw0NjM3NDIzNQ==", "url": "https://api.github.com/repos/nlohmann/json/labels/kind:%20question", "name": "kind: question", "color": "cc317c", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-03-01T00:46:30Z", "updated_at": "2018-03-18T22:52:43Z", "closed_at": "2018-03-18T22:52:43Z", "author_association": "NONE", "body": "**Bug Report**\r\n\r\n- What is the issue you have?\r\n\r\nThis is more of a question than an issue.  The sample code illustrates what I'm trying to do, and the included output shows it's not working the way I hope/expect.  I've tried other variations than what is in the sample - can't get anything to work.\r\n\r\n- Please describe the steps to reproduce the issue. Can you provide a small but working code example?\r\n\r\nBuild and run this code:\r\n\r\n```cpp\r\nvoid jsonTest()\r\n{\r\n    try\r\n    {\r\n        nlohmann::json v1 = nlohmann::json::parse(\"{ \\\"a\\\":{\\\"b\\\":{\\\"c\\\":{\\\"value\\\":900}}} }\");\r\n        auto value1 = v1[\"a\"][\"b\"][\"c\"].value(\"value\", 0);\r\n\r\n        std::cout << \"value1: \" << value1 << std::endl;\r\n    }\r\n    catch (...)\r\n    {\r\n        printf(\"value1: exception\");\r\n        std::cout << \"value1: exception\" << std::endl;\r\n    }\r\n\r\n    try\r\n    {\r\n        nlohmann::json v2 =\r\n        {\r\n            \"a\",\r\n            {\r\n                \"b\",\r\n                {\r\n                    \"c\",\r\n                    {\r\n                        \"value\", 900\r\n                    }\r\n                }\r\n            } \r\n        };\r\n        auto value2 = v2[\"a\"][\"b\"][\"c\"].value(\"value\", 0);\r\n\r\n        std::cout << \"value1: \" << value2 << std::endl;\r\n    }\r\n    catch (...)\r\n    {\r\n        std::cout << \"value2: exception\" << std::endl;\r\n    }\r\n\r\n    try\r\n    {\r\n        nlohmann::json v3 =\r\n        {\r\n            {\r\n                \"a\",\r\n                {\r\n                    \"b\",\r\n                    {\r\n                        \"c\",\r\n                        {\r\n                            \"value\", 900\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        auto value3 = v3[\"a\"][\"b\"][\"c\"].value(\"value\", 0);\r\n\r\n        std::cout << \"value3: \" << value3 << std::endl;\r\n    }\r\n    catch (...)\r\n    {\r\n        std::cout << \"value3: exception\" << std::endl;\r\n    }\r\n}\r\n```\r\n\r\n- What is the expected behavior?\r\n\r\nAll cases print the value 900.\r\n- And what is the actual behavior instead?\r\n\r\nThis is the output of the code:\r\n\r\nvalue1: 900\r\nvalue2 : exception\r\nvalue3 : exception\r\n\r\n- Which compiler and operating system are you using? Is it a [supported compiler](https://github.com/nlohmann/json#supported-compilers)?\r\n\r\nVisual Studio 2017, Windows 10\r\n\r\n- Did you use a released version of the library or the version from the `develop` branch?\r\n\r\nReleased version 3.1.1.\r\n\r\n- If you experience a compilation error: can you [compile and run the unit tests](https://github.com/nlohmann/json#execute-unit-tests)?\r\n\r\n\r\n**Feature Request**\r\n\r\n- Describe the feature in as much detail as possible.\r\n\r\n- Include sample usage where appropriate.\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/989", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/989/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/989/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/989/events", "html_url": "https://github.com/nlohmann/json/pull/989", "id": 301054984, "node_id": "MDExOlB1bGxSZXF1ZXN0MTcxOTc2ODE0", "number": 989, "title": "Add license scan report and status", "user": {"login": "fossabot", "id": 29791463, "node_id": "MDQ6VXNlcjI5NzkxNDYz", "avatar_url": "https://avatars0.githubusercontent.com/u/29791463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fossabot", "html_url": "https://github.com/fossabot", "followers_url": "https://api.github.com/users/fossabot/followers", "following_url": "https://api.github.com/users/fossabot/following{/other_user}", "gists_url": "https://api.github.com/users/fossabot/gists{/gist_id}", "starred_url": "https://api.github.com/users/fossabot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fossabot/subscriptions", "organizations_url": "https://api.github.com/users/fossabot/orgs", "repos_url": "https://api.github.com/users/fossabot/repos", "events_url": "https://api.github.com/users/fossabot/events{/privacy}", "received_events_url": "https://api.github.com/users/fossabot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-28T14:56:33Z", "updated_at": "2018-02-28T15:14:18Z", "closed_at": "2018-02-28T15:14:18Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/989", "html_url": "https://github.com/nlohmann/json/pull/989", "diff_url": "https://github.com/nlohmann/json/pull/989.diff", "patch_url": "https://github.com/nlohmann/json/pull/989.patch"}, "body": "Your FOSSA integration was successful! Attached in this PR is a badge and license report to track scan status in your README.\n\nBelow are docs for integrating FOSSA license checks into your CI:\n\n- [CircleCI](http://fossa.io/docs/integrating-tools/circleci/)\n- [TravisCI](http://fossa.io/docs/integrating-tools/travisci/)\n- [Jenkins](https://github.com/fossas/fossa-jenkins-plugin)\n- [Other](https://github.com/fossas/license-cli)"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/988", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/988/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/988/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/988/events", "html_url": "https://github.com/nlohmann/json/pull/988", "id": 301016626, "node_id": "MDExOlB1bGxSZXF1ZXN0MTcxOTQ3NzAy", "number": 988, "title": "Configure Zappr", "user": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-28T13:05:59Z", "updated_at": "2018-02-28T15:14:08Z", "closed_at": "2018-02-28T13:06:50Z", "author_association": "OWNER", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/988", "html_url": "https://github.com/nlohmann/json/pull/988", "diff_url": "https://github.com/nlohmann/json/pull/988.diff", "patch_url": "https://github.com/nlohmann/json/pull/988.patch"}, "body": "This is a reduced example of a [configuration file](https://zappr.readthedocs.io/en/latest/setup) for Zappr.\nIf you have questions you can reach us\n\n  * in our [Gitter channel](https://gitter.im/zalando/zappr)\n  * on [Twitter](https://twitter.com/zalando_zappr)\n\nThese are the features we currently support:\n\n## Approvals\n\n  * Approve pull requests with comments and configurable pattern\n  * \"Veto\" (ie. block) pull requests with comments and configurable pattern\n  * Configure how many approvals your pull request needs before merging\n  * Extensively configure who can approve or veto in your project\n\n## Pull Request guidelines\n\n  * Block a PR until it has the required set of labels (e.g. `reviewed`)\n  * Block a PR as long as it has unfinished tasks\n\n## Specification guidelines\n\n  * Configure minimum length of pull request title and description\n  * Configure if pull request description can be the same as pull request template\n\n## Commit message guidelines\n\n  * Configure patterns that all commits in a pull request must match\n\n## Automatic branch creation\n\n  * Automatically create a branch in your repository for every issue\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/987", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/987/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/987/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/987/events", "html_url": "https://github.com/nlohmann/json/issues/987", "id": 300947997, "node_id": "MDU6SXNzdWUzMDA5NDc5OTc=", "number": 987, "title": "C2664 (C++/CLR) cannot convert 'nullptr' to 'nullptr &&'", "user": {"login": "freanux", "id": 11588703, "node_id": "MDQ6VXNlcjExNTg4NzAz", "avatar_url": "https://avatars0.githubusercontent.com/u/11588703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/freanux", "html_url": "https://github.com/freanux", "followers_url": "https://api.github.com/users/freanux/followers", "following_url": "https://api.github.com/users/freanux/following{/other_user}", "gists_url": "https://api.github.com/users/freanux/gists{/gist_id}", "starred_url": "https://api.github.com/users/freanux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/freanux/subscriptions", "organizations_url": "https://api.github.com/users/freanux/orgs", "repos_url": "https://api.github.com/users/freanux/repos", "events_url": "https://api.github.com/users/freanux/events{/privacy}", "received_events_url": "https://api.github.com/users/freanux/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}, {"id": 558418062, "node_id": "MDU6TGFiZWw1NTg0MTgwNjI=", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20proposed%20fix", "name": "solution: proposed fix", "color": "00bb00", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2018-02-28T09:23:45Z", "updated_at": "2018-03-01T07:49:06Z", "closed_at": "2018-02-28T18:41:38Z", "author_association": "NONE", "body": "I'm working on a C++ to C# wrapper using C++/CLR and MS VS Community 2015 (Version 14.0.25431.01 Update 3).\r\n\r\nCompiling the single header json.hpp fails with described error in the title. The json.hpp version in 3.1.1.\r\n\r\nI uploaded a tiny test project to reproduce the compile error:\r\n[TestLibrary.zip](https://github.com/nlohmann/json/files/1766437/TestLibrary.zip)\r\n\r\nFor me a possible workaround is to encapsulate the json object and return the dump()ed string to pass to the C++/CLR and pass that string to the C# world instead of passing the dump()ed string from my C++/CLR class to the C# environment.\r\n\r\nThanks in advance."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/986", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/986/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/986/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/986/events", "html_url": "https://github.com/nlohmann/json/pull/986", "id": 300604187, "node_id": "MDExOlB1bGxSZXF1ZXN0MTcxNjQzMTUw", "number": 986, "title": "Fix/basic json conversion", "user": {"login": "theodelrieu", "id": 15652306, "node_id": "MDQ6VXNlcjE1NjUyMzA2", "avatar_url": "https://avatars1.githubusercontent.com/u/15652306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theodelrieu", "html_url": "https://github.com/theodelrieu", "followers_url": "https://api.github.com/users/theodelrieu/followers", "following_url": "https://api.github.com/users/theodelrieu/following{/other_user}", "gists_url": "https://api.github.com/users/theodelrieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/theodelrieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theodelrieu/subscriptions", "organizations_url": "https://api.github.com/users/theodelrieu/orgs", "repos_url": "https://api.github.com/users/theodelrieu/repos", "events_url": "https://api.github.com/users/theodelrieu/events{/privacy}", "received_events_url": "https://api.github.com/users/theodelrieu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/23", "html_url": "https://github.com/nlohmann/json/milestone/23", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/23/labels", "id": 3114191, "node_id": "MDk6TWlsZXN0b25lMzExNDE5MQ==", "number": 23, "title": "Release 3.1.2", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "closed", "created_at": "2018-02-13T18:42:55Z", "updated_at": "2018-03-14T20:25:26Z", "due_on": "2018-03-14T07:00:00Z", "closed_at": "2018-03-14T20:25:26Z"}, "comments": 17, "created_at": "2018-02-27T12:05:55Z", "updated_at": "2018-03-06T21:49:38Z", "closed_at": "2018-03-06T18:27:39Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/986", "html_url": "https://github.com/nlohmann/json/pull/986", "diff_url": "https://github.com/nlohmann/json/pull/986.diff", "patch_url": "https://github.com/nlohmann/json/pull/986.patch"}, "body": "Attempt to fix #977.\r\n\r\nDetails can be found in the commit message body.\r\n\r\nThere is a `FIXME` left in the code about the `value_t::discarded` flag. I don't know in which cases this flag can be encountered.\r\n\r\n* * *\r\n\r\n## Pull request checklist\r\n\r\nRead the [Contribution Guidelines](https://github.com/nlohmann/json/blob/develop/.github/CONTRIBUTING.md) for detailed information.\r\n\r\n- [x]  Changes are described in the pull request, or an [existing issue is referenced](https://github.com/nlohmann/json/issues).\r\n- [x]  The test suite [compiles and runs](https://github.com/nlohmann/json/blob/develop/README.md#execute-unit-tests) without error.\r\n- [x]  [Code coverage](https://coveralls.io/github/nlohmann/json) is 100%. Test cases can be added by editing the [test suite](https://github.com/nlohmann/json/tree/develop/test/src).\r\n- [x]  The source code is amalgamated; that is, after making changes to the sources in the `include/nlohmann` directory, run `make amalgamate` to create the single-header file `single_include/nlohmann/json.hpp`. The whole process is described [here](https://github.com/nlohmann/json/blob/develop/.github/CONTRIBUTING.md#files-to-change).\r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/985", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/985/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/985/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/985/events", "html_url": "https://github.com/nlohmann/json/issues/985", "id": 300524860, "node_id": "MDU6SXNzdWUzMDA1MjQ4NjA=", "number": 985, "title": "Uniform initialization from another json object differs between gcc and clang.", "user": {"login": "dsiroky", "id": 1227818, "node_id": "MDQ6VXNlcjEyMjc4MTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1227818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsiroky", "html_url": "https://github.com/dsiroky", "followers_url": "https://api.github.com/users/dsiroky/followers", "following_url": "https://api.github.com/users/dsiroky/following{/other_user}", "gists_url": "https://api.github.com/users/dsiroky/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsiroky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsiroky/subscriptions", "organizations_url": "https://api.github.com/users/dsiroky/orgs", "repos_url": "https://api.github.com/users/dsiroky/repos", "events_url": "https://api.github.com/users/dsiroky/events{/privacy}", "received_events_url": "https://api.github.com/users/dsiroky/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-27T07:49:43Z", "updated_at": "2018-02-28T15:20:46Z", "closed_at": "2018-02-28T15:20:38Z", "author_association": "NONE", "body": "Construction behaves differently with gcc 7.2 and clang 5.\r\n\r\nCode to reproduce:\r\n```\r\nauto j1{nlohmann::json::parse(\"5\")};\r\nauto j2 = nlohmann::json::parse(\"5\");\r\nstd::cout << j1.is_array() << '\\n';\r\nstd::cout << j2.is_array() << '\\n';\r\n```\r\n\r\ngcc prints:\r\n1\r\n0\r\n\r\nclang prints:\r\n0\r\n0\r\n\r\nBoth are nlohmann::json instances however `j1` has an array wrapped around in gcc."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/984", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/984/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/984/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/984/events", "html_url": "https://github.com/nlohmann/json/pull/984", "id": 300224926, "node_id": "MDExOlB1bGxSZXF1ZXN0MTcxMzY1MjY1", "number": 984, "title": "Set stream flags in `input_stream_adapter`", "user": {"login": "abolz", "id": 1213085, "node_id": "MDQ6VXNlcjEyMTMwODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1213085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abolz", "html_url": "https://github.com/abolz", "followers_url": "https://api.github.com/users/abolz/followers", "following_url": "https://api.github.com/users/abolz/following{/other_user}", "gists_url": "https://api.github.com/users/abolz/gists{/gist_id}", "starred_url": "https://api.github.com/users/abolz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abolz/subscriptions", "organizations_url": "https://api.github.com/users/abolz/orgs", "repos_url": "https://api.github.com/users/abolz/repos", "events_url": "https://api.github.com/users/abolz/events{/privacy}", "received_events_url": "https://api.github.com/users/abolz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 730407699, "node_id": "MDU6TGFiZWw3MzA0MDc2OTk=", "url": "https://api.github.com/repos/nlohmann/json/labels/state:%20stale", "name": "state: stale", "color": "999999", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-02-26T12:49:04Z", "updated_at": "2018-05-19T18:57:04Z", "closed_at": "2018-05-19T18:57:04Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/984", "html_url": "https://github.com/nlohmann/json/pull/984", "diff_url": "https://github.com/nlohmann/json/pull/984.diff", "patch_url": "https://github.com/nlohmann/json/pull/984.patch"}, "body": "Set stream flags in `input_stream_adapter` on various error conditions. Fixes #976.\r\n\r\nFor performance reasons do not use the `istream` interface but the underlying `streambuf` to get/unget characters. The behavior of this implementation differs slightly from the reference implementation (see below) in case a `streambuf` operation throws an exception (`badbit` is not turned on in the `istream`'s error state).\r\n\r\n---\r\nFor reference, this class was used to generate test cases:\r\n```c++\r\nclass input_stream_adapter : public input_adapter_protocol {\r\n    std::istream& is;\r\n\r\npublic:\r\n    explicit input_stream_adapter(std::istream& i) : is(i) {\r\n        // skip byte order mark\r\n        if (is.peek() == 0xEF) {\r\n            is.ignore();\r\n            if (is.peek() == 0xBB) {\r\n                is.ignore();\r\n                if (is.peek() == 0xBF) {\r\n                    is.ignore();\r\n                    return;\r\n                }\r\n                is.unget();\r\n            }\r\n            is.unget();\r\n        }\r\n    }\r\n\r\n    traits::int_type get_character() override {\r\n        if (is.good()) {\r\n            const auto ch = is.peek();\r\n            if (ch != traits::eof()) {\r\n                is.ignore();\r\n                return ch;\r\n            }\r\n        }\r\n        return traits::eof();\r\n    }\r\n\r\n    void unget_character() override {\r\n        is.unget();\r\n    }\r\n};\r\n```"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/983", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/983/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/983/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/983/events", "html_url": "https://github.com/nlohmann/json/issues/983", "id": 300160531, "node_id": "MDU6SXNzdWUzMDAxNjA1MzE=", "number": 983, "title": "Problem with adding the lib as a submodule", "user": {"login": "CDitzel", "id": 22954412, "node_id": "MDQ6VXNlcjIyOTU0NDEy", "avatar_url": "https://avatars3.githubusercontent.com/u/22954412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDitzel", "html_url": "https://github.com/CDitzel", "followers_url": "https://api.github.com/users/CDitzel/followers", "following_url": "https://api.github.com/users/CDitzel/following{/other_user}", "gists_url": "https://api.github.com/users/CDitzel/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDitzel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDitzel/subscriptions", "organizations_url": "https://api.github.com/users/CDitzel/orgs", "repos_url": "https://api.github.com/users/CDitzel/repos", "events_url": "https://api.github.com/users/CDitzel/events{/privacy}", "received_events_url": "https://api.github.com/users/CDitzel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374234, "node_id": "MDU6TGFiZWw0NjM3NDIzNA==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20invalid", "name": "solution: invalid", "color": "e6e6e6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-26T09:19:33Z", "updated_at": "2018-02-26T15:50:17Z", "closed_at": "2018-02-26T15:49:50Z", "author_association": "NONE", "body": "I am trying to use your lib as a submodule in my CMake Project in an externalLibs directory that I call via add_subdirectory(json). CMake runs through, but when I try to compile I get a whole lot of errors along the following lines\r\n\r\n~/project/extLibs/json/test/src/unit-json_patch.cpp:65:12: warning: missing terminating \" character\r\n             CHECK(doc1.patch(patch) == R\"(\r\n            ^\r\n~/project/extLibs/json/test/src/unit-json_patch.cpp:65:12: error: missing terminating \" character\r\n             CHECK(doc1.patch(patch) == R\"(\r\n            ^~~~~~~~~~~~~~~~~~~~~~~~~~\r\n~/project/extLibs/json/test/src/unit-json_patch.cpp:67:21: error: stray \u2018\\\u2019 in program\r\n                     \"a\": {\r\n\r\nI cant seem to find the reason for that; i use gcc-7.2 \r\n\r\nhelp is deeply appreciated \r\n\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/982", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/982/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/982/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/982/events", "html_url": "https://github.com/nlohmann/json/issues/982", "id": 299913853, "node_id": "MDU6SXNzdWUyOTk5MTM4NTM=", "number": 982, "title": "UTF-8/Unicode error", "user": {"login": "frank83413", "id": 23654153, "node_id": "MDQ6VXNlcjIzNjU0MTUz", "avatar_url": "https://avatars3.githubusercontent.com/u/23654153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frank83413", "html_url": "https://github.com/frank83413", "followers_url": "https://api.github.com/users/frank83413/followers", "following_url": "https://api.github.com/users/frank83413/following{/other_user}", "gists_url": "https://api.github.com/users/frank83413/gists{/gist_id}", "starred_url": "https://api.github.com/users/frank83413/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frank83413/subscriptions", "organizations_url": "https://api.github.com/users/frank83413/orgs", "repos_url": "https://api.github.com/users/frank83413/repos", "events_url": "https://api.github.com/users/frank83413/events{/privacy}", "received_events_url": "https://api.github.com/users/frank83413/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-02-24T05:29:24Z", "updated_at": "2018-03-05T14:58:25Z", "closed_at": "2018-03-05T14:58:25Z", "author_association": "NONE", "body": "I have some problems with parsing UTF-8\r\nHere is my code\r\n```\r\n#include <iostream>\r\n#include <string.h> \r\n#include \"nlohmann/json.hpp\"\r\nusing json = nlohmann::json;\r\n\r\nint main()\r\n{\r\n\tjson j1 = \"{\\\"name\\\":\\\"\\\\u6211\\\"}\"_json;\r\n\tjson j2 = json::parse(R\"({ \"name\" : \"\\u6211\" })\");\r\n        std::cout << j1.dump() << std::endl;\r\n\tstd::cout << j2.dump() << std::endl;\r\n\tsystem(\"pause\");\r\n\treturn 0;\r\n}\r\n\r\n```\r\n\r\nI think I should get  output like :\r\n\r\n```\r\n{\"name\":\"\u6211\"}\r\n{\"name\":\"\u6211\"}\r\n```\r\n\r\nbut I only get:\r\n\r\n```\r\n{\"name\":\"?\r\n```\r\n\r\nIf I do  ```auto temp = j1[\"name\"].get<std::string>();``` temp will have Invalid character in string.\r\n\r\nAre there anyone could help me to fix it?"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/981", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/981/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/981/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/981/events", "html_url": "https://github.com/nlohmann/json/pull/981", "id": 299883541, "node_id": "MDExOlB1bGxSZXF1ZXN0MTcxMTQxNTQ0", "number": 981, "title": "Make integration section concise", "user": {"login": "wla80", "id": 13490408, "node_id": "MDQ6VXNlcjEzNDkwNDA4", "avatar_url": "https://avatars1.githubusercontent.com/u/13490408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wla80", "html_url": "https://github.com/wla80", "followers_url": "https://api.github.com/users/wla80/followers", "following_url": "https://api.github.com/users/wla80/following{/other_user}", "gists_url": "https://api.github.com/users/wla80/gists{/gist_id}", "starred_url": "https://api.github.com/users/wla80/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wla80/subscriptions", "organizations_url": "https://api.github.com/users/wla80/orgs", "repos_url": "https://api.github.com/users/wla80/repos", "events_url": "https://api.github.com/users/wla80/events{/privacy}", "received_events_url": "https://api.github.com/users/wla80/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395133926, "node_id": "MDU6TGFiZWwzOTUxMzM5MjY=", "url": "https://api.github.com/repos/nlohmann/json/labels/documentation", "name": "documentation", "color": "0e8a16", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nlohmann/json/milestones/23", "html_url": "https://github.com/nlohmann/json/milestone/23", "labels_url": "https://api.github.com/repos/nlohmann/json/milestones/23/labels", "id": 3114191, "node_id": "MDk6TWlsZXN0b25lMzExNDE5MQ==", "number": 23, "title": "Release 3.1.2", "description": "The next release when backwards compatible bux fixes are made", "creator": {"login": "nlohmann", "id": 159488, "node_id": "MDQ6VXNlcjE1OTQ4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlohmann", "html_url": "https://github.com/nlohmann", "followers_url": "https://api.github.com/users/nlohmann/followers", "following_url": "https://api.github.com/users/nlohmann/following{/other_user}", "gists_url": "https://api.github.com/users/nlohmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlohmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlohmann/subscriptions", "organizations_url": "https://api.github.com/users/nlohmann/orgs", "repos_url": "https://api.github.com/users/nlohmann/repos", "events_url": "https://api.github.com/users/nlohmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nlohmann/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "closed", "created_at": "2018-02-13T18:42:55Z", "updated_at": "2018-03-14T20:25:26Z", "due_on": "2018-03-14T07:00:00Z", "closed_at": "2018-03-14T20:25:26Z"}, "comments": 3, "created_at": "2018-02-23T23:35:30Z", "updated_at": "2018-02-26T15:51:52Z", "closed_at": "2018-02-26T15:51:52Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/nlohmann/json/pulls/981", "html_url": "https://github.com/nlohmann/json/pull/981", "diff_url": "https://github.com/nlohmann/json/pull/981.diff", "patch_url": "https://github.com/nlohmann/json/pull/981.patch"}, "body": "Rewrite in concise sentences to improve the readability of the section\r\n"}, {"url": "https://api.github.com/repos/nlohmann/json/issues/980", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/980/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/980/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/980/events", "html_url": "https://github.com/nlohmann/json/issues/980", "id": 299758270, "node_id": "MDU6SXNzdWUyOTk3NTgyNzA=", "number": 980, "title": "\"forcing MSVC stacktrace to show which T we're talking about.\" error", "user": {"login": "Starfinder99999", "id": 19537044, "node_id": "MDQ6VXNlcjE5NTM3MDQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/19537044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Starfinder99999", "html_url": "https://github.com/Starfinder99999", "followers_url": "https://api.github.com/users/Starfinder99999/followers", "following_url": "https://api.github.com/users/Starfinder99999/following{/other_user}", "gists_url": "https://api.github.com/users/Starfinder99999/gists{/gist_id}", "starred_url": "https://api.github.com/users/Starfinder99999/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Starfinder99999/subscriptions", "organizations_url": "https://api.github.com/users/Starfinder99999/orgs", "repos_url": "https://api.github.com/users/Starfinder99999/repos", "events_url": "https://api.github.com/users/Starfinder99999/events{/privacy}", "received_events_url": "https://api.github.com/users/Starfinder99999/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296080787, "node_id": "MDU6TGFiZWwyOTYwODA3ODc=", "url": "https://api.github.com/repos/nlohmann/json/labels/platform:%20visual%20studio", "name": "platform: visual studio", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-02-23T15:55:42Z", "updated_at": "2018-02-27T12:16:07Z", "closed_at": "2018-02-27T12:15:59Z", "author_association": "NONE", "body": "Hello, I am a beginner at c++ and get this error message, when I try to run my code:\r\n\r\nError\tC2338\tforcing MSVC stacktrace to show which T we're talking about.\tConsoleRPG\tc:\\...\\nlohmann\\json.hpp\t1207\r\nError\tC2065\t\"force_msvc_stacktrace\": undeclared identifier\tConsoleRPG\tc:\\...\\nlohmann\\json.hpp\t1206\r\nError\tC2039\t\"force_msvc_stacktrace\": is not a member of \"Item\"\tConsoleRPG\tc:\\...\\nlohmann\\json.hpp\t1206\r\nError        C2338\tcould not find from_json() method in T's namespace\tConsoleRPG\tc:\\...\\nlohmann\\json.hpp\t1202\r\n\r\nI already read this thread: https://github.com/nlohmann/json/issues/929\r\n\r\nI could still not locate the error.\r\n\r\nThe only thing I assign to json values is like this: \r\nnlohmann::json itemJ = json::parse(\"string\")\r\nor having them as parameters in functions."}, {"url": "https://api.github.com/repos/nlohmann/json/issues/979", "repository_url": "https://api.github.com/repos/nlohmann/json", "labels_url": "https://api.github.com/repos/nlohmann/json/issues/979/labels{/name}", "comments_url": "https://api.github.com/repos/nlohmann/json/issues/979/comments", "events_url": "https://api.github.com/repos/nlohmann/json/issues/979/events", "html_url": "https://github.com/nlohmann/json/issues/979", "id": 299299616, "node_id": "MDU6SXNzdWUyOTkyOTk2MTY=", "number": 979, "title": "reverse order of serialization ", "user": {"login": "CDitzel", "id": 22954412, "node_id": "MDQ6VXNlcjIyOTU0NDEy", "avatar_url": "https://avatars3.githubusercontent.com/u/22954412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDitzel", "html_url": "https://github.com/CDitzel", "followers_url": "https://api.github.com/users/CDitzel/followers", "following_url": "https://api.github.com/users/CDitzel/following{/other_user}", "gists_url": "https://api.github.com/users/CDitzel/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDitzel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDitzel/subscriptions", "organizations_url": "https://api.github.com/users/CDitzel/orgs", "repos_url": "https://api.github.com/users/CDitzel/repos", "events_url": "https://api.github.com/users/CDitzel/events{/privacy}", "received_events_url": "https://api.github.com/users/CDitzel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46374236, "node_id": "MDU6TGFiZWw0NjM3NDIzNg==", "url": "https://api.github.com/repos/nlohmann/json/labels/solution:%20wontfix", "name": "solution: wontfix", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-22T10:31:31Z", "updated_at": "2018-02-22T13:38:01Z", "closed_at": "2018-02-22T13:37:55Z", "author_association": "NONE", "body": "why is the snippet \r\n\r\n`json j;\r\n  j[\"pi\"] = 3.141;\r\n  j[\"happy\"] = true;\r\n  std::ofstream ofs{ \"test.json\" };\r\n  ofs << j << std::endl;`\r\n\r\nrsulting in an output like the following\r\n\r\n{\r\n    \"happy\": true,\r\n    \"pi\": 3.141\r\n}\r\n\r\nit should be the other way around should it not? What am I missing here?\r\n"}]