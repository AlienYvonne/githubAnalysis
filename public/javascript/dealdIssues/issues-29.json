[{"url": "https://api.github.com/repos/airbnb/javascript/issues/846", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/846/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/846/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/846/events", "html_url": "https://github.com/airbnb/javascript/issues/846", "id": 150135498, "node_id": "MDU6SXNzdWUxNTAxMzU0OTg=", "number": 846, "title": "Missing jsx-quotes rule", "user": {"login": "billyjanitsch", "id": 1158733, "node_id": "MDQ6VXNlcjExNTg3MzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1158733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/billyjanitsch", "html_url": "https://github.com/billyjanitsch", "followers_url": "https://api.github.com/users/billyjanitsch/followers", "following_url": "https://api.github.com/users/billyjanitsch/following{/other_user}", "gists_url": "https://api.github.com/users/billyjanitsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/billyjanitsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/billyjanitsch/subscriptions", "organizations_url": "https://api.github.com/users/billyjanitsch/orgs", "repos_url": "https://api.github.com/users/billyjanitsch/repos", "events_url": "https://api.github.com/users/billyjanitsch/events{/privacy}", "received_events_url": "https://api.github.com/users/billyjanitsch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 18135602, "node_id": "MDU6TGFiZWwxODEzNTYwMg==", "url": "https://api.github.com/repos/airbnb/javascript/labels/bug", "name": "bug", "color": "fc2929", "default": true}, {"id": 377914681, "node_id": "MDU6TGFiZWwzNzc5MTQ2ODE=", "url": "https://api.github.com/repos/airbnb/javascript/labels/react", "name": "react", "color": "bfdadc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-21T17:09:03Z", "updated_at": "2016-05-17T17:03:03Z", "closed_at": "2016-04-21T17:12:11Z", "author_association": "CONTRIBUTOR", "body": "52d3401f953afcf09ca64dbbb177c6284832aae6 disabled the `jsx-quotes` rule in `eslint-config-airbnb-base` (presumably because the config is intended to deal with non-React rules) but the rule didn't get re-enabled on the `eslint-config-airbnb` side.\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/844", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/844/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/844/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/844/events", "html_url": "https://github.com/airbnb/javascript/issues/844", "id": 149786300, "node_id": "MDU6SXNzdWUxNDk3ODYzMDA=", "number": 844, "title": "How to pass param in onclick in react?", "user": {"login": "dineshvgp", "id": 5243459, "node_id": "MDQ6VXNlcjUyNDM0NTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5243459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dineshvgp", "html_url": "https://github.com/dineshvgp", "followers_url": "https://api.github.com/users/dineshvgp/followers", "following_url": "https://api.github.com/users/dineshvgp/following{/other_user}", "gists_url": "https://api.github.com/users/dineshvgp/gists{/gist_id}", "starred_url": "https://api.github.com/users/dineshvgp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dineshvgp/subscriptions", "organizations_url": "https://api.github.com/users/dineshvgp/orgs", "repos_url": "https://api.github.com/users/dineshvgp/repos", "events_url": "https://api.github.com/users/dineshvgp/events{/privacy}", "received_events_url": "https://api.github.com/users/dineshvgp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 18135606, "node_id": "MDU6TGFiZWwxODEzNTYwNg==", "url": "https://api.github.com/repos/airbnb/javascript/labels/question", "name": "question", "color": "cc317c", "default": true}, {"id": 377914681, "node_id": "MDU6TGFiZWwzNzc5MTQ2ODE=", "url": "https://api.github.com/repos/airbnb/javascript/labels/react", "name": "react", "color": "bfdadc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-20T14:36:25Z", "updated_at": "2016-05-17T17:03:03Z", "closed_at": "2016-04-20T15:50:58Z", "author_association": "NONE", "body": "Got the following sample code from https://github.com/airbnb/javascript/tree/master/react#methods\n\n```\n  // bad\n  class extends React.Component {\n    onClickDiv(param, event) {\n      // do stuff\n    }\n\n    render() {\n      return <div onClick={this.onClickDiv.bind(this, param)} />\n    }\n  }\n```\n\nHow achieve this in the following good practice?\n\n```\n// good\n  class extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.onClickDiv = this.onClickDiv.bind(this);\n    }\n\n    onClickDiv() {\n      // do stuff\n    }\n\n    render() {\n      return <div onClick={this.onClickDiv} />\n    }\n  }\n```\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/843", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/843/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/843/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/843/events", "html_url": "https://github.com/airbnb/javascript/issues/843", "id": 149736742, "node_id": "MDU6SXNzdWUxNDk3MzY3NDI=", "number": 843, "title": "Rules covered by JSCS, but not ESLint", "user": {"login": "devillexio", "id": 11049609, "node_id": "MDQ6VXNlcjExMDQ5NjA5", "avatar_url": "https://avatars3.githubusercontent.com/u/11049609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devillexio", "html_url": "https://github.com/devillexio", "followers_url": "https://api.github.com/users/devillexio/followers", "following_url": "https://api.github.com/users/devillexio/following{/other_user}", "gists_url": "https://api.github.com/users/devillexio/gists{/gist_id}", "starred_url": "https://api.github.com/users/devillexio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devillexio/subscriptions", "organizations_url": "https://api.github.com/users/devillexio/orgs", "repos_url": "https://api.github.com/users/devillexio/repos", "events_url": "https://api.github.com/users/devillexio/events{/privacy}", "received_events_url": "https://api.github.com/users/devillexio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-20T11:04:33Z", "updated_at": "2016-09-07T06:13:45Z", "closed_at": "2016-09-07T06:13:45Z", "author_association": "NONE", "body": "This is spawned as a result of a Twitter conversation with @ljharb.\n\nSome JSCS rules are not covered by the ESLint rule set. As you'll see from the code provided below, style was an issue and the ESLint rule set alone was not enough.\n\nCode sample generating JSCS output:\n\n``` javascript\nmodule.exports.updateRule = function *updateRule() {\n    const mongo = this.mongo || undefined;\n    assert(mongo, 'context is missing MongoDB');\n    const rules = mongo.collection('RULE-rules');\n    const triggers = this.request.body.triggers;\n    const tokens = library.extract(triggers || []);\n    this.checkParams('wid').notEmpty().len(24, 24);\n    const tv = this.checkBody('triggers').notEmpty();\n    tv.ensure(_.isArray(triggers), 'invalid triggers');\n    tv.ensureNot(_.isEmpty(tokens), 'empty rule tokens');\n    const clean = _.isEmpty(this.errors || false);\n    if (!clean) { this.body = this.errors; return; }\n    const wid = new ObjectID(this.params.wid || 0);\n    this.log.info(`updating ${wid} RULE rule`);\n    const rule = library.compile(wid, tokens);\n    const [q, u] = [{ tag: wid }, { $set: rule }];\n    yield rules.update(q, u, { upsert: true });\n    this.body = { rule, triggers, wid };\n};\n\nmodule.exports.dryRun = function *dryRun() {\n    const triggers = this.request.body.triggers;\n    const tokens = library.extract(triggers || []);\n    this.checkParams('wid').notEmpty().len(24, 24);\n    const tv = this.checkBody('triggers').notEmpty();\n    tv.ensure(_.isArray(triggers), 'invalid triggers');\n    tv.ensureNot(_.isEmpty(tokens), 'empty rule tokens');\n    const clean = _.isEmpty(this.errors || false);\n    if (!clean) { this.body = this.errors; return; }\n    const wid = new ObjectID(this.params.wid || 0);\n    this.log.info(`dry-running ${wid} RULE rule`);\n    const rule = library.compile(wid, tokens);\n    this.body = { rule, triggers, wid };\n};\n\nmodule.exports.removeRule = function *removeRule() {\n    const mongo = this.mongo || undefined;\n    assert(mongo, 'context is missing MongoDB');\n    const rules = mongo.collection('RULE-rules');\n    this.checkParams('wid').notEmpty().len(24, 24);\n    const clean = _.isEmpty(this.errors || false);\n    if (!clean) { this.body = this.errors; return; }\n    const wid = new ObjectID(this.params.wid || 0);\n    this.log.info(`removing ${wid} RULE rule`);\n    const q = { tag: wid.toString() }; // by ID\n    const v = yield rules.findAndRemove(q);\n    this.body = { rule: v.value, wid };\n};\n\nmodule.exports.queryRules = function *queryRules() {\n    const mongo = this.mongo || undefined;\n    assert(mongo, 'context is missing MongoDB');\n    const rules = mongo.collection('RULE-rules');\n    this.checkParams('wid').optional(); // opted\n    this.checkQuery('skip').optional().toInt(0);\n    this.checkQuery('limit').optional().toInt(0);\n    const clean = _.isEmpty(this.errors || false);\n    if (!clean) { this.body = this.errors; return; }\n    const wid = new ObjectID(this.params.wid || 0);\n    const q = {}; // baseline query; from scratch\n    const o = this.query || {}; // query options\n    if (this.params.wid) q.tag = wid; // set ID?\n    const cursor = rules.find(q, o); // perform\n    const results = yield cursor.toArray();\n    const count = yield cursor.count();\n    this.body = { results, count };\n};\n```\n\nJSCS output:\n\n``` bash\n[12:55:56] Starting 'style'...\nMissing newline after opening curly brace at /Users/deville.weppenaar/Developer/stream-listener/app/temp.js :\n    10 | tv.ensureNot(_.isEmpty(tokens), 'empty rule tokens');\n    11 | const clean = _.isEmpty(this.errors || false);\n    12 | if (!clean) { this.body = this.errors; return; }\n----------------------^\n    13 | const wid = new ObjectID(this.params.wid || 0);\n    14 | this.log.info(`updating ${wid} RULE rule`);\n\nMissing newline before closing curly brace at /Users/deville.weppenaar/Developer/stream-listener/app/temp.js :\n    10 | tv.ensureNot(_.isEmpty(tokens), 'empty rule tokens');\n    11 | const clean = _.isEmpty(this.errors || false);\n    12 | if (!clean) { this.body = this.errors; return; }\n-------------------------------------------------------^\n    13 | const wid = new ObjectID(this.params.wid || 0);\n    14 | this.log.info(`updating ${wid} RULE rule`);\n\nMissing newline after block at /Users/deville.weppenaar/Developer/stream-listener/app/temp.js :\n    10 | tv.ensureNot(_.isEmpty(tokens), 'empty rule tokens');\n    11 | const clean = _.isEmpty(this.errors || false);\n    12 | if (!clean) { this.body = this.errors; return; }\n---------------------------------------------------------^\n    13 | const wid = new ObjectID(this.params.wid || 0);\n    14 | this.log.info(`updating ${wid} RULE rule`);\n\nMissing newline after opening curly brace at /Users/deville.weppenaar/Developer/stream-listener/app/temp.js :\n    27 | tv.ensureNot(_.isEmpty(tokens), 'empty rule tokens');\n    28 | const clean = _.isEmpty(this.errors || false);\n    29 | if (!clean) { this.body = this.errors; return; }\n----------------------^\n    30 | const wid = new ObjectID(this.params.wid || 0);\n    31 | this.log.info(`dry-running ${wid} RULE rule`);\n\nMissing newline before closing curly brace at /Users/deville.weppenaar/Developer/stream-listener/app/temp.js :\n    27 | tv.ensureNot(_.isEmpty(tokens), 'empty rule tokens');\n    28 | const clean = _.isEmpty(this.errors || false);\n    29 | if (!clean) { this.body = this.errors; return; }\n-------------------------------------------------------^\n    30 | const wid = new ObjectID(this.params.wid || 0);\n    31 | this.log.info(`dry-running ${wid} RULE rule`);\n\nMissing newline after block at /Users/deville.weppenaar/Developer/stream-listener/app/temp.js :\n    27 | tv.ensureNot(_.isEmpty(tokens), 'empty rule tokens');\n    28 | const clean = _.isEmpty(this.errors || false);\n    29 | if (!clean) { this.body = this.errors; return; }\n---------------------------------------------------------^\n    30 | const wid = new ObjectID(this.params.wid || 0);\n    31 | this.log.info(`dry-running ${wid} RULE rule`);\n\nMissing newline after opening curly brace at /Users/deville.weppenaar/Developer/stream-listener/app/temp.js :\n    40 | this.checkParams('wid').notEmpty().len(24, 24);\n    41 | const clean = _.isEmpty(this.errors || false);\n    42 | if (!clean) { this.body = this.errors; return; }\n----------------------^\n    43 | const wid = new ObjectID(this.params.wid || 0);\n    44 | this.log.info(`removing ${wid} RULE rule`);\n\nMissing newline before closing curly brace at /Users/deville.weppenaar/Developer/stream-listener/app/temp.js :\n    40 | this.checkParams('wid').notEmpty().len(24, 24);\n    41 | const clean = _.isEmpty(this.errors || false);\n    42 | if (!clean) { this.body = this.errors; return; }\n-------------------------------------------------------^\n    43 | const wid = new ObjectID(this.params.wid || 0);\n    44 | this.log.info(`removing ${wid} RULE rule`);\n\nMissing newline after block at /Users/deville.weppenaar/Developer/stream-listener/app/temp.js :\n    40 | this.checkParams('wid').notEmpty().len(24, 24);\n    41 | const clean = _.isEmpty(this.errors || false);\n    42 | if (!clean) { this.body = this.errors; return; }\n---------------------------------------------------------^\n    43 | const wid = new ObjectID(this.params.wid || 0);\n    44 | this.log.info(`removing ${wid} RULE rule`);\n\nMissing newline after opening curly brace at /Users/deville.weppenaar/Developer/stream-listener/app/temp.js :\n    56 | this.checkQuery('limit').optional().toInt(0);\n    57 | const clean = _.isEmpty(this.errors || false);\n    58 | if (!clean) { this.body = this.errors; return; }\n----------------------^\n    59 | const wid = new ObjectID(this.params.wid || 0);\n    60 | const q = {}; // baseline query; from scratch\n\nMissing newline before closing curly brace at /Users/deville.weppenaar/Developer/stream-listener/app/temp.js :\n    56 | this.checkQuery('limit').optional().toInt(0);\n    57 | const clean = _.isEmpty(this.errors || false);\n    58 | if (!clean) { this.body = this.errors; return; }\n-------------------------------------------------------^\n    59 | const wid = new ObjectID(this.params.wid || 0);\n    60 | const q = {}; // baseline query; from scratch\n\nMissing newline after block at /Users/deville.weppenaar/Developer/stream-listener/app/temp.js :\n    56 | this.checkQuery('limit').optional().toInt(0);\n    57 | const clean = _.isEmpty(this.errors || false);\n    58 | if (!clean) { this.body = this.errors; return; }\n---------------------------------------------------------^\n    59 | const wid = new ObjectID(this.params.wid || 0);\n    60 | const q = {}; // baseline query; from scratch\n\n\n12 code style errors found.\n[12:55:57] Finished 'style' after 452 ms\n```\n\n.eslintrc:\n\n``` json\n{\n    \"extends\": \"airbnb/base\",\n    \"env\": {\n        \"node\": true,\n        \"mocha\": true\n    },\n    \"rules\": {\n         \"indent\": [1, \"tab\"],\n         \"no-console\": 0,\n         \"no-multiple-empty-lines\": [1, {\"max\": 2, \"maxBOF\": 0, \"maxEOF\": 0}],\n         \"generator-star-spacing\": [1, {\"before\": true, \"after\": false}],\n         \"new-cap\": 0,\n         \"max-len\": [2, 140, 4, {\"ignoreUrls\": true, \"ignoreComments\": false}]\n    }\n}\n```\n\n.jscsrc:\n\n``` json\n{\n    \"preset\": \"airbnb\",\n    \"validateIndentation\": \"\\t\",\n    \"maximumLineLength\": { \"value\": 140, \"allExcept\": [ \"urlComments\" ] }\n}\n```\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/840", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/840/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/840/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/840/events", "html_url": "https://github.com/airbnb/javascript/issues/840", "id": 149670886, "node_id": "MDU6SXNzdWUxNDk2NzA4ODY=", "number": 840, "title": "Please document no-restricted-syntax", "user": {"login": "Arcanemagus", "id": 427137, "node_id": "MDQ6VXNlcjQyNzEzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/427137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Arcanemagus", "html_url": "https://github.com/Arcanemagus", "followers_url": "https://api.github.com/users/Arcanemagus/followers", "following_url": "https://api.github.com/users/Arcanemagus/following{/other_user}", "gists_url": "https://api.github.com/users/Arcanemagus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Arcanemagus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Arcanemagus/subscriptions", "organizations_url": "https://api.github.com/users/Arcanemagus/orgs", "repos_url": "https://api.github.com/users/Arcanemagus/repos", "events_url": "https://api.github.com/users/Arcanemagus/events{/privacy}", "received_events_url": "https://api.github.com/users/Arcanemagus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 311904405, "node_id": "MDU6TGFiZWwzMTE5MDQ0MDU=", "url": "https://api.github.com/repos/airbnb/javascript/labels/editorial", "name": "editorial", "color": "bfe5bf", "default": false}, {"id": 303239021, "node_id": "MDU6TGFiZWwzMDMyMzkwMjE=", "url": "https://api.github.com/repos/airbnb/javascript/labels/pull%20request%20wanted", "name": "pull request wanted", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-04-20T06:17:32Z", "updated_at": "2017-07-10T17:24:32Z", "closed_at": "2016-07-06T16:04:16Z", "author_association": "NONE", "body": "After moving to `eslint-config-airbnb-base` from `eslint-config-airbnb` I am now getting warnings related to the `no-restricted-syntax` rule (specified [here](https://github.com/airbnb/javascript/blob/d06147d279549c08dacd2ef4835cbccf2b1f1159/packages/eslint-config-airbnb-base/rules/best-practices.js#L118)), but no documentation backing this up exists in [README.md](https://github.com/airbnb/javascript/blob/763416260ab791d2efd2cf175100d8e506bb7eaa/README.md).\n\nCan the documentation be updated explaining the reasoning behind the choices in this rule?\n\n---\n\nIn my particular case this was triggered on a `for...in` loop, so I'm _guessing_ that having `ForInStatement` in the list of forbidden nodes would fall into the [Iterators and Generators](https://github.com/airbnb/javascript/blob/763416260ab791d2efd2cf175100d8e506bb7eaa/README.md#iterators--nope) section.\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/839", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/839/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/839/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/839/events", "html_url": "https://github.com/airbnb/javascript/issues/839", "id": 149631314, "node_id": "MDU6SXNzdWUxNDk2MzEzMTQ=", "number": 839, "title": "eslint-plugin-jsx-a11y breaking changes", "user": {"login": "boldkhuu", "id": 2161151, "node_id": "MDQ6VXNlcjIxNjExNTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2161151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boldkhuu", "html_url": "https://github.com/boldkhuu", "followers_url": "https://api.github.com/users/boldkhuu/followers", "following_url": "https://api.github.com/users/boldkhuu/following{/other_user}", "gists_url": "https://api.github.com/users/boldkhuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/boldkhuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boldkhuu/subscriptions", "organizations_url": "https://api.github.com/users/boldkhuu/orgs", "repos_url": "https://api.github.com/users/boldkhuu/repos", "events_url": "https://api.github.com/users/boldkhuu/events{/privacy}", "received_events_url": "https://api.github.com/users/boldkhuu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-20T01:46:04Z", "updated_at": "2016-04-20T03:06:36Z", "closed_at": "2016-04-20T03:06:36Z", "author_association": "NONE", "body": "Lint works wrong with [eslint-plugin-jsx-a11y latest release](https://github.com/evcohen/eslint-plugin-jsx-a11y/releases/tag/1.0.0). They have several breaking changes on their rule names.\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/832", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/832/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/832/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/832/events", "html_url": "https://github.com/airbnb/javascript/issues/832", "id": 149319483, "node_id": "MDU6SXNzdWUxNDkzMTk0ODM=", "number": 832, "title": "release eslint-plugin-react@^5.0.0 version", "user": {"login": "tmc", "id": 3977, "node_id": "MDQ6VXNlcjM5Nzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmc", "html_url": "https://github.com/tmc", "followers_url": "https://api.github.com/users/tmc/followers", "following_url": "https://api.github.com/users/tmc/following{/other_user}", "gists_url": "https://api.github.com/users/tmc/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmc/subscriptions", "organizations_url": "https://api.github.com/users/tmc/orgs", "repos_url": "https://api.github.com/users/tmc/repos", "events_url": "https://api.github.com/users/tmc/events{/privacy}", "received_events_url": "https://api.github.com/users/tmc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 377914681, "node_id": "MDU6TGFiZWwzNzc5MTQ2ODE=", "url": "https://api.github.com/repos/airbnb/javascript/labels/react", "name": "react", "color": "bfdadc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-19T01:22:55Z", "updated_at": "2016-05-17T17:03:03Z", "closed_at": "2016-04-22T02:07:38Z", "author_association": "NONE", "body": ""}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/831", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/831/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/831/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/831/events", "html_url": "https://github.com/airbnb/javascript/issues/831", "id": 149145876, "node_id": "MDU6SXNzdWUxNDkxNDU4NzY=", "number": 831, "title": "Recreate tag for v7 ", "user": {"login": "iyel", "id": 929834, "node_id": "MDQ6VXNlcjkyOTgzNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/929834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iyel", "html_url": "https://github.com/iyel", "followers_url": "https://api.github.com/users/iyel/followers", "following_url": "https://api.github.com/users/iyel/following{/other_user}", "gists_url": "https://api.github.com/users/iyel/gists{/gist_id}", "starred_url": "https://api.github.com/users/iyel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iyel/subscriptions", "organizations_url": "https://api.github.com/users/iyel/orgs", "repos_url": "https://api.github.com/users/iyel/repos", "events_url": "https://api.github.com/users/iyel/events{/privacy}", "received_events_url": "https://api.github.com/users/iyel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-18T13:07:45Z", "updated_at": "2016-04-18T15:46:24Z", "closed_at": "2016-04-18T15:46:24Z", "author_association": "NONE", "body": "Currently it points to wrong commit with old versions in package.json\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/830", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/830/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/830/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/830/events", "html_url": "https://github.com/airbnb/javascript/issues/830", "id": 148976199, "node_id": "MDU6SXNzdWUxNDg5NzYxOTk=", "number": 830, "title": "Clean install warns about the react and a11y plugin, but not the import plugin", "user": {"login": "tleunen", "id": 1972567, "node_id": "MDQ6VXNlcjE5NzI1Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1972567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tleunen", "html_url": "https://github.com/tleunen", "followers_url": "https://api.github.com/users/tleunen/followers", "following_url": "https://api.github.com/users/tleunen/following{/other_user}", "gists_url": "https://api.github.com/users/tleunen/gists{/gist_id}", "starred_url": "https://api.github.com/users/tleunen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tleunen/subscriptions", "organizations_url": "https://api.github.com/users/tleunen/orgs", "repos_url": "https://api.github.com/users/tleunen/repos", "events_url": "https://api.github.com/users/tleunen/events{/privacy}", "received_events_url": "https://api.github.com/users/tleunen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 377914681, "node_id": "MDU6TGFiZWwzNzc5MTQ2ODE=", "url": "https://api.github.com/repos/airbnb/javascript/labels/react", "name": "react", "color": "bfdadc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-17T17:50:50Z", "updated_at": "2016-05-17T17:03:03Z", "closed_at": "2016-04-17T18:15:20Z", "author_association": "NONE", "body": "I know there's a PR in the works to create a new \"base\" package, but I just did a clean install in a project and was surprised it didn't warn about the import plugin. Do you know why?\n\n```\n\u251c\u2500\u2500 eslint-config-airbnb@7.0.0 \n\u251c\u2500\u2500 UNMET PEER DEPENDENCY eslint-plugin-jsx-a11y@^0.6.2\n\u251c\u2500\u2500 UNMET PEER DEPENDENCY eslint-plugin-react@^4.3.0\n```\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/828", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/828/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/828/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/828/events", "html_url": "https://github.com/airbnb/javascript/issues/828", "id": 148650520, "node_id": "MDU6SXNzdWUxNDg2NTA1MjA=", "number": 828, "title": "Arrow function IIFE parens", "user": {"login": "shhac", "id": 2800184, "node_id": "MDQ6VXNlcjI4MDAxODQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2800184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shhac", "html_url": "https://github.com/shhac", "followers_url": "https://api.github.com/users/shhac/followers", "following_url": "https://api.github.com/users/shhac/following{/other_user}", "gists_url": "https://api.github.com/users/shhac/gists{/gist_id}", "starred_url": "https://api.github.com/users/shhac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shhac/subscriptions", "organizations_url": "https://api.github.com/users/shhac/orgs", "repos_url": "https://api.github.com/users/shhac/repos", "events_url": "https://api.github.com/users/shhac/events{/privacy}", "received_events_url": "https://api.github.com/users/shhac/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 18135602, "node_id": "MDU6TGFiZWwxODEzNTYwMg==", "url": "https://api.github.com/repos/airbnb/javascript/labels/bug", "name": "bug", "color": "fc2929", "default": true}, {"id": 311904405, "node_id": "MDU6TGFiZWwzMTE5MDQ0MDU=", "url": "https://api.github.com/repos/airbnb/javascript/labels/editorial", "name": "editorial", "color": "bfe5bf", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ljharb", "id": 45469, "node_id": "MDQ6VXNlcjQ1NDY5", "avatar_url": "https://avatars1.githubusercontent.com/u/45469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljharb", "html_url": "https://github.com/ljharb", "followers_url": "https://api.github.com/users/ljharb/followers", "following_url": "https://api.github.com/users/ljharb/following{/other_user}", "gists_url": "https://api.github.com/users/ljharb/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljharb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljharb/subscriptions", "organizations_url": "https://api.github.com/users/ljharb/orgs", "repos_url": "https://api.github.com/users/ljharb/repos", "events_url": "https://api.github.com/users/ljharb/events{/privacy}", "received_events_url": "https://api.github.com/users/ljharb/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ljharb", "id": 45469, "node_id": "MDQ6VXNlcjQ1NDY5", "avatar_url": "https://avatars1.githubusercontent.com/u/45469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljharb", "html_url": "https://github.com/ljharb", "followers_url": "https://api.github.com/users/ljharb/followers", "following_url": "https://api.github.com/users/ljharb/following{/other_user}", "gists_url": "https://api.github.com/users/ljharb/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljharb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljharb/subscriptions", "organizations_url": "https://api.github.com/users/ljharb/orgs", "repos_url": "https://api.github.com/users/ljharb/repos", "events_url": "https://api.github.com/users/ljharb/events{/privacy}", "received_events_url": "https://api.github.com/users/ljharb/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2016-04-15T12:42:57Z", "updated_at": "2016-04-16T02:24:56Z", "closed_at": "2016-04-16T02:24:56Z", "author_association": "NONE", "body": "In section `20.1` there is the following\n\n```\n// bad\n(function () {\n  const name = 'Skywalker'\n  return name\n})()\n\n// good\n(() => {\n  const name = 'Skywalker';\n  return name;\n}());\n\n// good (guards against the function becoming an argument when two files with IIFEs are concatenated)\n;(() => {\n  const name = 'Skywalker';\n  return name;\n}());\n```\n\nThe two arrow functions commented as good are actually invalid and will throw SyntaxErrors because you can't call them this early (per spec) as they are not CallExpressions, see http://stackoverflow.com/questions/34589488/es6-immediately-invoked-arrow-function\n\nYou would need to wrap them in extra parenthesis first.\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/823", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/823/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/823/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/823/events", "html_url": "https://github.com/airbnb/javascript/issues/823", "id": 148062091, "node_id": "MDU6SXNzdWUxNDgwNjIwOTE=", "number": 823, "title": "react/jsx-no-bind: arrow functions and garbage collection", "user": {"login": "codejet", "id": 802203, "node_id": "MDQ6VXNlcjgwMjIwMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/802203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codejet", "html_url": "https://github.com/codejet", "followers_url": "https://api.github.com/users/codejet/followers", "following_url": "https://api.github.com/users/codejet/following{/other_user}", "gists_url": "https://api.github.com/users/codejet/gists{/gist_id}", "starred_url": "https://api.github.com/users/codejet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codejet/subscriptions", "organizations_url": "https://api.github.com/users/codejet/orgs", "repos_url": "https://api.github.com/users/codejet/repos", "events_url": "https://api.github.com/users/codejet/events{/privacy}", "received_events_url": "https://api.github.com/users/codejet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 18135606, "node_id": "MDU6TGFiZWwxODEzNTYwNg==", "url": "https://api.github.com/repos/airbnb/javascript/labels/question", "name": "question", "color": "cc317c", "default": true}, {"id": 377914681, "node_id": "MDU6TGFiZWwzNzc5MTQ2ODE=", "url": "https://api.github.com/repos/airbnb/javascript/labels/react", "name": "react", "color": "bfdadc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-13T13:29:48Z", "updated_at": "2016-05-17T17:03:02Z", "closed_at": "2016-04-13T19:02:06Z", "author_association": "NONE", "body": "I saw that you are allowing arrow functions with jsx-no-bind again. Part of the reasoning was that bind is slow while creation of arrow functions is not. The explanation on the eslint page only talks about garbage collection (\"This is bad for performance, as it will result in the garbage collector being invoked way more than is necessary.\" - https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-bind.md). At first glance these seem to be two different types of reasons (speed of function creation vs. performance hit due to garbage collection intervals), but maybe I'm missing something?\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/819", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/819/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/819/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/819/events", "html_url": "https://github.com/airbnb/javascript/issues/819", "id": 147396533, "node_id": "MDU6SXNzdWUxNDczOTY1MzM=", "number": 819, "title": "Max line length of 100 characters: allow URLs?", "user": {"login": "andreyvolokitin", "id": 466394, "node_id": "MDQ6VXNlcjQ2NjM5NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/466394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreyvolokitin", "html_url": "https://github.com/andreyvolokitin", "followers_url": "https://api.github.com/users/andreyvolokitin/followers", "following_url": "https://api.github.com/users/andreyvolokitin/following{/other_user}", "gists_url": "https://api.github.com/users/andreyvolokitin/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreyvolokitin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreyvolokitin/subscriptions", "organizations_url": "https://api.github.com/users/andreyvolokitin/orgs", "repos_url": "https://api.github.com/users/andreyvolokitin/repos", "events_url": "https://api.github.com/users/andreyvolokitin/events{/privacy}", "received_events_url": "https://api.github.com/users/andreyvolokitin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-04-11T11:20:45Z", "updated_at": "2016-04-11T17:16:51Z", "closed_at": "2016-04-11T16:01:40Z", "author_association": "NONE", "body": "It is common to have URLs in comments, but they do not fit in `\"maximumLineLength\": 100` rule\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/818", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/818/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/818/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/818/events", "html_url": "https://github.com/airbnb/javascript/issues/818", "id": 147199562, "node_id": "MDU6SXNzdWUxNDcxOTk1NjI=", "number": 818, "title": "'React' is defined but never used", "user": {"login": "scwood", "id": 9126138, "node_id": "MDQ6VXNlcjkxMjYxMzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/9126138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scwood", "html_url": "https://github.com/scwood", "followers_url": "https://api.github.com/users/scwood/followers", "following_url": "https://api.github.com/users/scwood/following{/other_user}", "gists_url": "https://api.github.com/users/scwood/gists{/gist_id}", "starred_url": "https://api.github.com/users/scwood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scwood/subscriptions", "organizations_url": "https://api.github.com/users/scwood/orgs", "repos_url": "https://api.github.com/users/scwood/repos", "events_url": "https://api.github.com/users/scwood/events{/privacy}", "received_events_url": "https://api.github.com/users/scwood/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 377914681, "node_id": "MDU6TGFiZWwzNzc5MTQ2ODE=", "url": "https://api.github.com/repos/airbnb/javascript/labels/react", "name": "react", "color": "bfdadc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-04-10T06:36:14Z", "updated_at": "2016-05-17T17:03:02Z", "closed_at": "2016-04-10T06:50:56Z", "author_association": "NONE", "body": "```\nsrc/client/index.jsx\n--------------------\nerror  'React' is defined but never used  no-unused-vars\n```\n\nMy .eslintrc:\n\n``` json\n{\n  \"extends\": \"airbnb\",\n  \"plugins\": [\n    \"react\"\n  ]\n}\n```\n\nPackage versions:\n\n``` json\n\"eslint\": \"^2.7.0\",\n\"eslint-config-airbnb\": \"^6.2.0\",\n\"eslint-plugin-react\": \"^4.2.3\",\n```\n\nI've tried setting 'React' under globals, I've tried adding the `jsx-uses-react` rule, (which appears to be set already). Neither worked for me. Removing `\"extends\": \"airbnb\"` fixes this issue.\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/817", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/817/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/817/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/817/events", "html_url": "https://github.com/airbnb/javascript/issues/817", "id": 147142865, "node_id": "MDU6SXNzdWUxNDcxNDI4NjU=", "number": 817, "title": "Filename and directory structure", "user": {"login": "tleunen", "id": 1972567, "node_id": "MDQ6VXNlcjE5NzI1Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1972567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tleunen", "html_url": "https://github.com/tleunen", "followers_url": "https://api.github.com/users/tleunen/followers", "following_url": "https://api.github.com/users/tleunen/following{/other_user}", "gists_url": "https://api.github.com/users/tleunen/gists{/gist_id}", "starred_url": "https://api.github.com/users/tleunen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tleunen/subscriptions", "organizations_url": "https://api.github.com/users/tleunen/orgs", "repos_url": "https://api.github.com/users/tleunen/repos", "events_url": "https://api.github.com/users/tleunen/events{/privacy}", "received_events_url": "https://api.github.com/users/tleunen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 18135606, "node_id": "MDU6TGFiZWwxODEzNTYwNg==", "url": "https://api.github.com/repos/airbnb/javascript/labels/question", "name": "question", "color": "cc317c", "default": true}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-04-09T16:24:51Z", "updated_at": "2016-04-16T02:21:19Z", "closed_at": "2016-04-16T02:21:19Z", "author_association": "NONE", "body": "I have a question about the naming convention, the styleguide specifies that if the file exports a single class, the name of the file should be the name of the class. (see https://github.com/airbnb/javascript#naming--filename-matches-export)\n\nSo something like this:\n\n``` js\nimport CheckBox from './CheckBox';\n```\n\nWhat about the directory structure? Is there any preference?\nBecause, these 2 structures are good based on the styleguide, but the import syntax will be different.\n\n```\n\u251c\u2500\u2500 src\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 CheckBox\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 index.js\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 CheckBox.js\n```\n\n``` js\nimport CheckBox from './CheckBox';\n```\n\n```\n\u251c\u2500\u2500 src\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 checkbox\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 index.js\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 CheckBox.js\n```\n\n``` js\nimport CheckBox from './checkbox';\n```\n\nDoes airbnb have a preference?\nFor internal component, I find it ok to have import with capital letters, but in an external library, it doesn't seem very common to have `import CheckBox from 'component-lib/CheckBox';`\n"}]