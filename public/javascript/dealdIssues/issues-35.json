[{"url": "https://api.github.com/repos/airbnb/javascript/issues/694", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/694/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/694/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/694/events", "html_url": "https://github.com/airbnb/javascript/issues/694", "id": 128511761, "node_id": "MDU6SXNzdWUxMjg1MTE3NjE=", "number": 694, "title": "Arrow functions and parentheses: \"good\" example in 8.2 does not follow suggestions in 8.4", "user": {"login": "dominiks-cliqz", "id": 10814289, "node_id": "MDQ6VXNlcjEwODE0Mjg5", "avatar_url": "https://avatars3.githubusercontent.com/u/10814289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dominiks-cliqz", "html_url": "https://github.com/dominiks-cliqz", "followers_url": "https://api.github.com/users/dominiks-cliqz/followers", "following_url": "https://api.github.com/users/dominiks-cliqz/following{/other_user}", "gists_url": "https://api.github.com/users/dominiks-cliqz/gists{/gist_id}", "starred_url": "https://api.github.com/users/dominiks-cliqz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dominiks-cliqz/subscriptions", "organizations_url": "https://api.github.com/users/dominiks-cliqz/orgs", "repos_url": "https://api.github.com/users/dominiks-cliqz/repos", "events_url": "https://api.github.com/users/dominiks-cliqz/events{/privacy}", "received_events_url": "https://api.github.com/users/dominiks-cliqz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 18135602, "node_id": "MDU6TGFiZWwxODEzNTYwMg==", "url": "https://api.github.com/repos/airbnb/javascript/labels/bug", "name": "bug", "color": "fc2929", "default": true}, {"id": 311904405, "node_id": "MDU6TGFiZWwzMTE5MDQ0MDU=", "url": "https://api.github.com/repos/airbnb/javascript/labels/editorial", "name": "editorial", "color": "bfe5bf", "default": false}, {"id": 303239021, "node_id": "MDU6TGFiZWwzMDMyMzkwMjE=", "url": "https://api.github.com/repos/airbnb/javascript/labels/pull%20request%20wanted", "name": "pull request wanted", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-01-25T11:01:30Z", "updated_at": "2017-06-28T15:56:37Z", "closed_at": "2016-02-10T20:18:52Z", "author_association": "NONE", "body": "[8.4](https://github.com/airbnb/javascript#8.4) suggests (emphasis added):\n\n>  If your function takes a single argument and doesn\u2019t use braces, omit the parentheses. **Otherwise, always include parentheses around arguments.**\n\nHowever, [8.2](https://github.com/airbnb/javascript#8.2) provides a \"good\" example not following the above suggestion:\n\n``` javascript\n// good\n[1, 2, 3].map(number => {\n  const nextNumber = number + 1;\n  return `A string containing the ${nextNumber}.`;\n});\n```\n\nThis might be confusing to readers as it raises the question: is this a good example, or is it not? Adding parentheses around `number` would help to clarify.\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/693", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/693/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/693/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/693/events", "html_url": "https://github.com/airbnb/javascript/issues/693", "id": 128468277, "node_id": "MDU6SXNzdWUxMjg0NjgyNzc=", "number": 693, "title": "Why are some rules well defined but turned off (react/jsx-curly-spacing)?", "user": {"login": "ikornienko", "id": 477269, "node_id": "MDQ6VXNlcjQ3NzI2OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/477269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikornienko", "html_url": "https://github.com/ikornienko", "followers_url": "https://api.github.com/users/ikornienko/followers", "following_url": "https://api.github.com/users/ikornienko/following{/other_user}", "gists_url": "https://api.github.com/users/ikornienko/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikornienko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikornienko/subscriptions", "organizations_url": "https://api.github.com/users/ikornienko/orgs", "repos_url": "https://api.github.com/users/ikornienko/repos", "events_url": "https://api.github.com/users/ikornienko/events{/privacy}", "received_events_url": "https://api.github.com/users/ikornienko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 18135604, "node_id": "MDU6TGFiZWwxODEzNTYwNA==", "url": "https://api.github.com/repos/airbnb/javascript/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 303239021, "node_id": "MDU6TGFiZWwzMDMyMzkwMjE=", "url": "https://api.github.com/repos/airbnb/javascript/labels/pull%20request%20wanted", "name": "pull request wanted", "color": "fbca04", "default": false}, {"id": 311903383, "node_id": "MDU6TGFiZWwzMTE5MDMzODM=", "url": "https://api.github.com/repos/airbnb/javascript/labels/semver-breaking:%20guide%20change", "name": "semver-breaking: guide change", "color": "f7c6c7", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-01-25T05:45:47Z", "updated_at": "2016-04-20T03:17:23Z", "closed_at": "2016-04-20T03:17:23Z", "author_association": "NONE", "body": "For example the rule [react/jsx-curly-spacing](https://github.com/airbnb/javascript/blob/master/packages/eslint-config-airbnb/rules/react.js#L25):\n\n```\n    'react/jsx-curly-spacing': [0, 'never', { 'allowMultiline': true }],\n```\n\nisn't just set to `0`, but has defined behavior `'never'` and options `allowMultiline`. Does it mean that you recommend this behaviour, but you're not making it error (`2`) in 3.x because it'll break a lot of stuff? Therefore will it become enabled in 4.0.0? Or is it for internal discussion like \"we're proposing this rule to look like this, if there are no objections, it'll be enabled with next major release\"?\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/685", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/685/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/685/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/685/events", "html_url": "https://github.com/airbnb/javascript/issues/685", "id": 127129565, "node_id": "MDU6SXNzdWUxMjcxMjk1NjU=", "number": 685, "title": "Lint the readme", "user": {"login": "hzoo", "id": 588473, "node_id": "MDQ6VXNlcjU4ODQ3Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/588473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hzoo", "html_url": "https://github.com/hzoo", "followers_url": "https://api.github.com/users/hzoo/followers", "following_url": "https://api.github.com/users/hzoo/following{/other_user}", "gists_url": "https://api.github.com/users/hzoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/hzoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hzoo/subscriptions", "organizations_url": "https://api.github.com/users/hzoo/orgs", "repos_url": "https://api.github.com/users/hzoo/repos", "events_url": "https://api.github.com/users/hzoo/events{/privacy}", "received_events_url": "https://api.github.com/users/hzoo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 18135604, "node_id": "MDU6TGFiZWwxODEzNTYwNA==", "url": "https://api.github.com/repos/airbnb/javascript/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 303239021, "node_id": "MDU6TGFiZWwzMDMyMzkwMjE=", "url": "https://api.github.com/repos/airbnb/javascript/labels/pull%20request%20wanted", "name": "pull request wanted", "color": "fbca04", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-01-17T22:39:36Z", "updated_at": "2018-03-05T21:08:26Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Don't know if there's already an issue to do this, but @btmills published https://github.com/eslint/eslint-plugin-markdown. So you should be able to lint the readme with the eslint config?\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/684", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/684/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/684/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/684/events", "html_url": "https://github.com/airbnb/javascript/issues/684", "id": 127115605, "node_id": "MDU6SXNzdWUxMjcxMTU2MDU=", "number": 684, "title": "Why no setState in componentDidMount?", "user": {"login": "SimenB", "id": 1404810, "node_id": "MDQ6VXNlcjE0MDQ4MTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1404810?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimenB", "html_url": "https://github.com/SimenB", "followers_url": "https://api.github.com/users/SimenB/followers", "following_url": "https://api.github.com/users/SimenB/following{/other_user}", "gists_url": "https://api.github.com/users/SimenB/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimenB/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimenB/subscriptions", "organizations_url": "https://api.github.com/users/SimenB/orgs", "repos_url": "https://api.github.com/users/SimenB/repos", "events_url": "https://api.github.com/users/SimenB/events{/privacy}", "received_events_url": "https://api.github.com/users/SimenB/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 18135606, "node_id": "MDU6TGFiZWwxODEzNTYwNg==", "url": "https://api.github.com/repos/airbnb/javascript/labels/question", "name": "question", "color": "cc317c", "default": true}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 26, "created_at": "2016-01-17T18:55:32Z", "updated_at": "2018-05-25T01:52:36Z", "closed_at": "2017-11-04T08:02:38Z", "author_association": "CONTRIBUTOR", "body": "This is less of an issue and more of a question on how you handle things.\n\n[React docs](https://facebook.github.io/react/docs/component-specs.html#mounting-componentdidmount) says to put ajax-requests in `componentDidMount`. But I would also like to cancel the request in `componentWillUnmount` as that data is not needed if the component isn't there. And to do so, I need a reference to the promise created in `componentDidMount`. I thought to achieve this by putting it on state, like so:\n\n``` js\ncomponentDidMount() {\n  this.setState({ serverRequest: this.props.fetcData() });\n}\n\ncomponentWillUnmount() {\n  const { serverRequest } = this.state;\n\n  if (serverRequest.isPending()) serverRequest.cancel();\n}\n```\n\n (This is using bluebird btw, not native promises)\n\nAnd this works, but the linter complains about the `setState`-call in `componentDidMount`.\n\nI tracked down the issue where the rule was added (#345 & #346), and while the OP states that it follows your style guide, I can't find any reference to that rule in your docs.\n\nSo, my question is: Do you have any other way of keeping around references to async stuff created in `componentDidMount` such as ajax-requests, `setTimeout`s etc to be able to clean them up in `componentWillUnmount`? Or should I just disable the rule for that particular line?\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/672", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/672/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/672/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/672/events", "html_url": "https://github.com/airbnb/javascript/issues/672", "id": 126010328, "node_id": "MDU6SXNzdWUxMjYwMTAzMjg=", "number": 672, "title": "return indentation on second line?", "user": {"login": "olalonde", "id": 416585, "node_id": "MDQ6VXNlcjQxNjU4NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/416585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olalonde", "html_url": "https://github.com/olalonde", "followers_url": "https://api.github.com/users/olalonde/followers", "following_url": "https://api.github.com/users/olalonde/following{/other_user}", "gists_url": "https://api.github.com/users/olalonde/gists{/gist_id}", "starred_url": "https://api.github.com/users/olalonde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olalonde/subscriptions", "organizations_url": "https://api.github.com/users/olalonde/orgs", "repos_url": "https://api.github.com/users/olalonde/repos", "events_url": "https://api.github.com/users/olalonde/events{/privacy}", "received_events_url": "https://api.github.com/users/olalonde/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-01-11T18:48:43Z", "updated_at": "2016-01-12T06:05:20Z", "closed_at": "2016-01-12T06:05:20Z", "author_association": "NONE", "body": "Couldn't find if this was mentioned in the guide.\n\n``` javascript\nconst a = () => {\n  return somepromise().then(() => {\n    // do something\n  }).then(() => {\n    // do something\n  });\n};\n```\n\nvs\n\n``` javascript\nconst a = () => {\n  return somepromise()\n    .then(() => {\n      // do something\n    })\n    .then(() => {\n      // do something\n    });\n};\n```\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/671", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/671/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/671/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/671/events", "html_url": "https://github.com/airbnb/javascript/issues/671", "id": 126009528, "node_id": "MDU6SXNzdWUxMjYwMDk1Mjg=", "number": 671, "title": "Add section on nested/multiline ternaries", "user": {"login": "ljharb", "id": 45469, "node_id": "MDQ6VXNlcjQ1NDY5", "avatar_url": "https://avatars1.githubusercontent.com/u/45469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljharb", "html_url": "https://github.com/ljharb", "followers_url": "https://api.github.com/users/ljharb/followers", "following_url": "https://api.github.com/users/ljharb/following{/other_user}", "gists_url": "https://api.github.com/users/ljharb/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljharb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljharb/subscriptions", "organizations_url": "https://api.github.com/users/ljharb/orgs", "repos_url": "https://api.github.com/users/ljharb/repos", "events_url": "https://api.github.com/users/ljharb/events{/privacy}", "received_events_url": "https://api.github.com/users/ljharb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 18135604, "node_id": "MDU6TGFiZWwxODEzNTYwNA==", "url": "https://api.github.com/repos/airbnb/javascript/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 303239021, "node_id": "MDU6TGFiZWwzMDMyMzkwMjE=", "url": "https://api.github.com/repos/airbnb/javascript/labels/pull%20request%20wanted", "name": "pull request wanted", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-11T18:43:59Z", "updated_at": "2016-04-20T04:21:31Z", "closed_at": "2016-04-20T04:21:30Z", "author_association": "MEMBER", "body": "Specifically, prohibiting nested ternaries (to match https://github.com/airbnb/javascript/blob/master/packages/eslint-config-airbnb/rules/style.js#L63-L64) and perhaps discouraging multiline ternaries (not sure if there's a rule for it).\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/670", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/670/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/670/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/670/events", "html_url": "https://github.com/airbnb/javascript/issues/670", "id": 125792339, "node_id": "MDU6SXNzdWUxMjU3OTIzMzk=", "number": 670, "title": "Objects: getters and setters?", "user": {"login": "erikjung", "id": 61204, "node_id": "MDQ6VXNlcjYxMjA0", "avatar_url": "https://avatars3.githubusercontent.com/u/61204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikjung", "html_url": "https://github.com/erikjung", "followers_url": "https://api.github.com/users/erikjung/followers", "following_url": "https://api.github.com/users/erikjung/following{/other_user}", "gists_url": "https://api.github.com/users/erikjung/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikjung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikjung/subscriptions", "organizations_url": "https://api.github.com/users/erikjung/orgs", "repos_url": "https://api.github.com/users/erikjung/repos", "events_url": "https://api.github.com/users/erikjung/events{/privacy}", "received_events_url": "https://api.github.com/users/erikjung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 18135606, "node_id": "MDU6TGFiZWwxODEzNTYwNg==", "url": "https://api.github.com/repos/airbnb/javascript/labels/question", "name": "question", "color": "cc317c", "default": true}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-10T01:27:12Z", "updated_at": "2016-04-20T04:02:49Z", "closed_at": "2016-04-20T04:02:49Z", "author_association": "NONE", "body": "It seems that getters and setters are absent from the guide. I assume they would be mentioned in close proximity to [Objects](https://github.com/airbnb/javascript#objects). Do you ever use them? Do you have any reasons not to?\n\nI have mainly used them for syntax concision, but [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/get) also mentions this potential benefit of using `get`:\n\n> Getters give you a way to define a property of an object, but they do not calculate the property's value until it is accessed. A getter defers the cost of calculating the value until the value is needed, and if it is never needed, you never pay the cost.\n\nI typically use it in place of methods that require no arguments and would otherwise be prefixed as such:\n\n``` js\nclass Example {\n  // bad\n  getFoo () {\n    return this._foo;\n  }\n\n  // good \n  get foo () {\n    return this._foo;\n  }\n}\n\n```\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/666", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/666/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/666/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/666/events", "html_url": "https://github.com/airbnb/javascript/issues/666", "id": 125535501, "node_id": "MDU6SXNzdWUxMjU1MzU1MDE=", "number": 666, "title": "setting environments in shared config?", "user": {"login": "rhbecker", "id": 224732, "node_id": "MDQ6VXNlcjIyNDczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/224732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rhbecker", "html_url": "https://github.com/rhbecker", "followers_url": "https://api.github.com/users/rhbecker/followers", "following_url": "https://api.github.com/users/rhbecker/following{/other_user}", "gists_url": "https://api.github.com/users/rhbecker/gists{/gist_id}", "starred_url": "https://api.github.com/users/rhbecker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rhbecker/subscriptions", "organizations_url": "https://api.github.com/users/rhbecker/orgs", "repos_url": "https://api.github.com/users/rhbecker/repos", "events_url": "https://api.github.com/users/rhbecker/events{/privacy}", "received_events_url": "https://api.github.com/users/rhbecker/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 18135606, "node_id": "MDU6TGFiZWwxODEzNTYwNg==", "url": "https://api.github.com/repos/airbnb/javascript/labels/question", "name": "question", "color": "cc317c", "default": true}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-01-08T03:34:28Z", "updated_at": "2016-09-07T06:16:00Z", "closed_at": "2016-09-07T06:16:00Z", "author_association": "NONE", "body": "Hey, I'm still getting up to speed on eslint and your implementation of shared config, so apologies if any of this feedback isn't quite right. And I'm happy to generate PRs for anything you think work addressing ...\n### `env` configured in 3 files ...\n1. [legacy.js](https://github.com/airbnb/javascript/blob/master/packages/eslint-config-airbnb/legacy.js)\n   \n   a. `'browser': true`\n   b. `'node': true`\n   c. `'amd': false`\n   d. `'mocha': false`\n   e. `'jasmine': false`\n2. [rules/node.js](https://github.com/airbnb/javascript/blob/master/packages/eslint-config-airbnb/rules/node.js): `'node': true`\n3. [rules/es6.js](https://github.com/airbnb/javascript/blob/master/packages/eslint-config-airbnb/rules/es6.js): `'es6': false`\n### issues\n1. Why is `legacy.js` disabling `amd`, `mocha`, and `jasmine`? Aren't environments off until explicitly enabled?\n2. Why is `legacy.js` enabling `browser` and `node`? While these may be the most common usage contexts, that seems to overstep the role of this style-guide-based shared config, which might be used in a variety of circumstances. Even if that weren't the case, any \"efficiency\" gained in enabling both by default would seemingly be lost when most users then have to disable one or the other. Maybe I'm missing something?\n3. Similarly - and this may seem like an odd question - why is `rules/node.js` enabling `node`? The fact that `legacy.js` extends `rules/node.js`, and the fact that everything else extends `legacy.js`, means that `node` is always enabled. If the rules in `rules/node.js` are \"safe\" to be included everywhere, I think it makes sense to keep that rule set in the chain of extensions, but then I don't think it makes sense for the `env` to be configured in there. If the rules in `rules/node.js` are NOT \"safe\" to be included everywhere, its place in the extension chain needs to be altered, at which point, it might end up making sense to leave the `env` config in there, similar to how `es6` `env` config makes sense as you have it, in a rule set only included in an extension chain used by those intending to use `es6`.\n4. Depending on how you respond to the prior 2 issues, this might be moot, but it seems redundant that `node` `env` is enabled in both `legacy.js` and `rules/node.js`.\n"}]