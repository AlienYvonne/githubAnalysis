[{"url": "https://api.github.com/repos/airbnb/javascript/issues/665", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/665/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/665/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/665/events", "html_url": "https://github.com/airbnb/javascript/issues/665", "id": 125342912, "node_id": "MDU6SXNzdWUxMjUzNDI5MTI=", "number": 665, "title": "How is the style guide related to eslint-config-airbnb? ", "user": {"login": "inetfuture", "id": 1363189, "node_id": "MDQ6VXNlcjEzNjMxODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1363189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inetfuture", "html_url": "https://github.com/inetfuture", "followers_url": "https://api.github.com/users/inetfuture/followers", "following_url": "https://api.github.com/users/inetfuture/following{/other_user}", "gists_url": "https://api.github.com/users/inetfuture/gists{/gist_id}", "starred_url": "https://api.github.com/users/inetfuture/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inetfuture/subscriptions", "organizations_url": "https://api.github.com/users/inetfuture/orgs", "repos_url": "https://api.github.com/users/inetfuture/repos", "events_url": "https://api.github.com/users/inetfuture/events{/privacy}", "received_events_url": "https://api.github.com/users/inetfuture/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-07T07:44:30Z", "updated_at": "2016-01-07T08:32:44Z", "closed_at": "2016-01-07T08:32:44Z", "author_association": "NONE", "body": "For example, there is a rule about `prefer-arrow-callback` in [style guide](https://github.com/airbnb/javascript#arrow-functions), but I don't see it in eslint-config-airbnb? Aren't they supposed to be matched?\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/660", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/660/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/660/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/660/events", "html_url": "https://github.com/airbnb/javascript/issues/660", "id": 125246605, "node_id": "MDU6SXNzdWUxMjUyNDY2MDU=", "number": 660, "title": "Minor updates on eslint-airbnb-config keep breaking my tests", "user": {"login": "olalonde", "id": 416585, "node_id": "MDQ6VXNlcjQxNjU4NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/416585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olalonde", "html_url": "https://github.com/olalonde", "followers_url": "https://api.github.com/users/olalonde/followers", "following_url": "https://api.github.com/users/olalonde/following{/other_user}", "gists_url": "https://api.github.com/users/olalonde/gists{/gist_id}", "starred_url": "https://api.github.com/users/olalonde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olalonde/subscriptions", "organizations_url": "https://api.github.com/users/olalonde/orgs", "repos_url": "https://api.github.com/users/olalonde/repos", "events_url": "https://api.github.com/users/olalonde/events{/privacy}", "received_events_url": "https://api.github.com/users/olalonde/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 18135606, "node_id": "MDU6TGFiZWwxODEzNTYwNg==", "url": "https://api.github.com/repos/airbnb/javascript/labels/question", "name": "question", "color": "cc317c", "default": true}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-06T19:36:54Z", "updated_at": "2016-01-06T20:20:03Z", "closed_at": "2016-01-06T20:18:45Z", "author_association": "NONE", "body": "It seems every once in a while eslint-airbnb-config introduces changes that break my lint tests. Most recently: \n\n```\n    9:13  error  There should be no space after '['            array-bracket-spacing\n    9:51  error  There should be no space before ']'           array-bracket-spacing\n   10:5   error  Unquoted reserved word `default` used as key  quote-props\n   16:5   error  Unquoted reserved word `default` used as key  quote-props\n   21:5   error  Unquoted reserved word `default` used as key  quote-props\n   22:13  error  There should be no space after '['            array-bracket-spacing\n   22:36  error  There should be no space before ']'           array-bracket-spacing\n   26:5   error  Unquoted reserved word `default` used as key  quote-props\n   27:13  error  There should be no space after '['            array-bracket-spacing\n   27:26  error  There should be no space before ']'           array-bracket-spacing\n   31:5   error  Unquoted reserved word `default` used as key  quote-props\n```\n\nThose errors were not present in 3.0.0 but started showing up after I updated to 3.2.3. Could maintainers bump the major version of the npm package when such breaking changes are introduced?\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/659", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/659/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/659/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/659/events", "html_url": "https://github.com/airbnb/javascript/issues/659", "id": 125200596, "node_id": "MDU6SXNzdWUxMjUyMDA1OTY=", "number": 659, "title": "react/jsx-no-bind: how to pass args from callbacks?", "user": {"login": "alexfedoseev", "id": 4244251, "node_id": "MDQ6VXNlcjQyNDQyNTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/4244251?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexfedoseev", "html_url": "https://github.com/alexfedoseev", "followers_url": "https://api.github.com/users/alexfedoseev/followers", "following_url": "https://api.github.com/users/alexfedoseev/following{/other_user}", "gists_url": "https://api.github.com/users/alexfedoseev/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexfedoseev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexfedoseev/subscriptions", "organizations_url": "https://api.github.com/users/alexfedoseev/orgs", "repos_url": "https://api.github.com/users/alexfedoseev/repos", "events_url": "https://api.github.com/users/alexfedoseev/events{/privacy}", "received_events_url": "https://api.github.com/users/alexfedoseev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 70, "created_at": "2016-01-06T15:38:45Z", "updated_at": "2018-04-18T22:14:51Z", "closed_at": "2016-01-06T19:43:55Z", "author_association": "NONE", "body": "I have a question about `react/jsx-no-bind` rule in `3.0.0`: how can I pass args to handler from callback if I can't use bind and arrow functions?\n\n``` jsx\ndoSomething(thing) { ... }\n\nrender() {\n  const { items } = this.props;\n\n  return (\n    <ul>\n    {\n      items.map(item => (\n        <li onClick={this.doSomething.bind(this, item)} /> // <--- JSX props should not use .bind()\n        <li onClick={() => this.doSomething(item)} />      // <--- JSX props should not use arrow functions\n      ))\n    }\n    </ul>\n  );\n}\n```\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/654", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/654/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/654/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/654/events", "html_url": "https://github.com/airbnb/javascript/issues/654", "id": 124759800, "node_id": "MDU6SXNzdWUxMjQ3NTk4MDA=", "number": 654, "title": "Italian translation", "user": {"login": "roccomuso", "id": 6730217, "node_id": "MDQ6VXNlcjY3MzAyMTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/6730217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roccomuso", "html_url": "https://github.com/roccomuso", "followers_url": "https://api.github.com/users/roccomuso/followers", "following_url": "https://api.github.com/users/roccomuso/following{/other_user}", "gists_url": "https://api.github.com/users/roccomuso/gists{/gist_id}", "starred_url": "https://api.github.com/users/roccomuso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roccomuso/subscriptions", "organizations_url": "https://api.github.com/users/roccomuso/orgs", "repos_url": "https://api.github.com/users/roccomuso/repos", "events_url": "https://api.github.com/users/roccomuso/events{/privacy}", "received_events_url": "https://api.github.com/users/roccomuso/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-04T13:36:23Z", "updated_at": "2016-01-04T19:03:26Z", "closed_at": "2016-01-04T19:03:26Z", "author_association": "NONE", "body": "Is it worth a full translation in italian? I can fork and then PR.\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/653", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/653/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/653/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/653/events", "html_url": "https://github.com/airbnb/javascript/issues/653", "id": 124658664, "node_id": "MDU6SXNzdWUxMjQ2NTg2NjQ=", "number": 653, "title": "Naming conventions and abbreviations", "user": {"login": "AlicanC", "id": 412180, "node_id": "MDQ6VXNlcjQxMjE4MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/412180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlicanC", "html_url": "https://github.com/AlicanC", "followers_url": "https://api.github.com/users/AlicanC/followers", "following_url": "https://api.github.com/users/AlicanC/following{/other_user}", "gists_url": "https://api.github.com/users/AlicanC/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlicanC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlicanC/subscriptions", "organizations_url": "https://api.github.com/users/AlicanC/orgs", "repos_url": "https://api.github.com/users/AlicanC/repos", "events_url": "https://api.github.com/users/AlicanC/events{/privacy}", "received_events_url": "https://api.github.com/users/AlicanC/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-01-03T16:50:07Z", "updated_at": "2018-02-19T07:58:34Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Naming with abbreviations is tricky. Assume you want a class named after \"GNU\" and \"GPL\". How are you supposed to capitalize it?\n- GNUGPLClass\n- GnuGplClass\n- GNUGplClass\n- GnuGPLClass\n\nI would go for \"GnuGplClass\", but W3C uses \"GNUGplClass\" format. (\"XMLHttpRequest\")\n\nAirbnb should have a preference here and rules [22.2](https://github.com/airbnb/javascript#22.2) and [22.3](https://github.com/airbnb/javascript#22.3) should be extended accordingly.\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/646", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/646/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/646/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/646/events", "html_url": "https://github.com/airbnb/javascript/issues/646", "id": 124244942, "node_id": "MDU6SXNzdWUxMjQyNDQ5NDI=", "number": 646, "title": "Document best practices for test assertions", "user": {"login": "zeke", "id": 2289, "node_id": "MDQ6VXNlcjIyODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/2289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zeke", "html_url": "https://github.com/zeke", "followers_url": "https://api.github.com/users/zeke/followers", "following_url": "https://api.github.com/users/zeke/following{/other_user}", "gists_url": "https://api.github.com/users/zeke/gists{/gist_id}", "starred_url": "https://api.github.com/users/zeke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zeke/subscriptions", "organizations_url": "https://api.github.com/users/zeke/orgs", "repos_url": "https://api.github.com/users/zeke/repos", "events_url": "https://api.github.com/users/zeke/events{/privacy}", "received_events_url": "https://api.github.com/users/zeke/received_events", "type": "User", "site_admin": true}, "labels": [{"id": 311904405, "node_id": "MDU6TGFiZWwzMTE5MDQ0MDU=", "url": "https://api.github.com/repos/airbnb/javascript/labels/editorial", "name": "editorial", "color": "bfe5bf", "default": false}, {"id": 18135604, "node_id": "MDU6TGFiZWwxODEzNTYwNA==", "url": "https://api.github.com/repos/airbnb/javascript/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 303239021, "node_id": "MDU6TGFiZWwzMDMyMzkwMjE=", "url": "https://api.github.com/repos/airbnb/javascript/labels/pull%20request%20wanted", "name": "pull request wanted", "color": "fbca04", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-12-29T17:44:07Z", "updated_at": "2016-04-20T04:21:57Z", "closed_at": null, "author_association": "NONE", "body": "There's an issue on enzyme https://github.com/airbnb/enzyme/issues/97 about strengthening the assertion styles to avoid false positives:\n\n> A great first task would be removing this rule override, and fixing our tests and docs to use, for example, .to.equal(true) instead of .to.be.true\n\nThe issue mentions that the `to.be.true` style violates this styleguide, but I wasn't able to find any content here that alludes to this.\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/642", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/642/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/642/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/642/events", "html_url": "https://github.com/airbnb/javascript/issues/642", "id": 124193718, "node_id": "MDU6SXNzdWUxMjQxOTM3MTg=", "number": 642, "title": "Thoughts on \"Use dot notation when accessing properties\"", "user": {"login": "AlicanC", "id": 412180, "node_id": "MDQ6VXNlcjQxMjE4MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/412180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlicanC", "html_url": "https://github.com/AlicanC", "followers_url": "https://api.github.com/users/AlicanC/followers", "following_url": "https://api.github.com/users/AlicanC/following{/other_user}", "gists_url": "https://api.github.com/users/AlicanC/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlicanC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlicanC/subscriptions", "organizations_url": "https://api.github.com/users/AlicanC/orgs", "repos_url": "https://api.github.com/users/AlicanC/repos", "events_url": "https://api.github.com/users/AlicanC/events{/privacy}", "received_events_url": "https://api.github.com/users/AlicanC/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 18135606, "node_id": "MDU6TGFiZWwxODEzNTYwNg==", "url": "https://api.github.com/repos/airbnb/javascript/labels/question", "name": "question", "color": "cc317c", "default": true}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-29T10:47:14Z", "updated_at": "2016-09-07T06:16:56Z", "closed_at": "2016-09-07T06:16:56Z", "author_association": "CONTRIBUTOR", "body": "This is my rule for accessing properties:\n\n> If the object has properties that is not accessible with dot notation, use subscript notation. Use dot notation otherwise.\n\nSo:\n\n``` javascript\nconst objOne = {\n  'facebook': 'no idea',\n  'google-plus': 'no idea',\n};\n\nobjOne['facebook'] = 'thanks';\nobjOne['google-plus'] = 'no thanks';\n\nconst objTwo = {\n  'facebook': 'no idea',\n  'googlePlus': 'no idea',\n};\n\nobjTwo.facebook = 'thanks';\nobjTwo.googlePlus = 'no thanks';\n```\n\nWith Airbnb style, you have to write like this:\n\n``` javascript\nobj.foo = true;\nobj.bar = true;\nobj['foo-bar'] = true;\nobj.baz = true;\nobj['foo-baz'] = true;\n```\n\nThis looks very ugly to be honest.\n\n---\n\nMy suggestion is this (which is also different from my own rule):\n\n> Prefer dot notation when accessing properties. Only use subscript notation when you have to. If you used subscript notation when accessing a property, use subscript for other all cases.\n\nSo:\n\n``` javascript\nfunction foo(providers) {\n  const myProvider = 'google-plus';\n\n  if (providers.facebook) { // This is okay\n    // ...\n  } else if (providers[myProvider]) { // This is okay\n    // ...\n  }\n}\n\nfunction bar(providers) {\n  if (providers['google-plus']) { // This is okay\n    // ...\n  } else if (providers['facebook']) { // This is okay\n    // ...\n  }\n}\n\nfunction baz(providers) {\n  if (providers['google-plus']) { // This is okay\n    // ...\n  } else if (providers.facebook) { // This is not okay\n    // ...\n  }\n}\n\nfunction boo(providers) {\n  if (providers['facebook']) { // This is not okay\n    // ...\n  }\n}\n```\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/641", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/641/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/641/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/641/events", "html_url": "https://github.com/airbnb/javascript/issues/641", "id": 124187097, "node_id": "MDU6SXNzdWUxMjQxODcwOTc=", "number": 641, "title": "Thoughts on \"Never mutate parameters\"", "user": {"login": "AlicanC", "id": 412180, "node_id": "MDQ6VXNlcjQxMjE4MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/412180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlicanC", "html_url": "https://github.com/AlicanC", "followers_url": "https://api.github.com/users/AlicanC/followers", "following_url": "https://api.github.com/users/AlicanC/following{/other_user}", "gists_url": "https://api.github.com/users/AlicanC/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlicanC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlicanC/subscriptions", "organizations_url": "https://api.github.com/users/AlicanC/orgs", "repos_url": "https://api.github.com/users/AlicanC/repos", "events_url": "https://api.github.com/users/AlicanC/events{/privacy}", "received_events_url": "https://api.github.com/users/AlicanC/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-12-29T09:37:27Z", "updated_at": "2017-08-15T17:42:00Z", "closed_at": "2015-12-29T16:44:53Z", "author_association": "CONTRIBUTOR", "body": "1- This [rule](https://github.com/airbnb/javascript#7.12)'s \"Do not reassign parameters\" part should be split into another rule, because reassigning a parameter isn't actually mutation.\n\nPlus it sounds like `no-param-reassign` rule also covers mutation, but it doesn't. It would be nice to easily see what gets covered by ESLint and what doesn't.\n\n---\n\n2- Why shouldn't we reassign parameters?\n\n> Overwriting parameters can lead to unexpected behavior, especially when accessing the arguments object.\n\nAccessing `arguments` is already discouraged. Should we really care about breaking something we aren't supposed to use? What are other unexpected behaviors can this cause?\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/640", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/640/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/640/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/640/events", "html_url": "https://github.com/airbnb/javascript/issues/640", "id": 123793996, "node_id": "MDU6SXNzdWUxMjM3OTM5OTY=", "number": 640, "title": "Naming convention for plain object properties", "user": {"login": "satazor", "id": 1017236, "node_id": "MDQ6VXNlcjEwMTcyMzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1017236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/satazor", "html_url": "https://github.com/satazor", "followers_url": "https://api.github.com/users/satazor/followers", "following_url": "https://api.github.com/users/satazor/following{/other_user}", "gists_url": "https://api.github.com/users/satazor/gists{/gist_id}", "starred_url": "https://api.github.com/users/satazor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/satazor/subscriptions", "organizations_url": "https://api.github.com/users/satazor/orgs", "repos_url": "https://api.github.com/users/satazor/repos", "events_url": "https://api.github.com/users/satazor/events{/privacy}", "received_events_url": "https://api.github.com/users/satazor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-12-24T11:32:41Z", "updated_at": "2015-12-24T18:23:37Z", "closed_at": "2015-12-24T18:22:29Z", "author_association": "NONE", "body": "I couldn't find the convention for naming properties in plain objects. Some people use camelCased properties while others use underscored properties. What's the airbnb convention on this?\n\nThanks.\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/638", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/638/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/638/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/638/events", "html_url": "https://github.com/airbnb/javascript/issues/638", "id": 123743029, "node_id": "MDU6SXNzdWUxMjM3NDMwMjk=", "number": 638, "title": "Work together on eslint-config-defaults", "user": {"login": "baer", "id": 940667, "node_id": "MDQ6VXNlcjk0MDY2Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/940667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/baer", "html_url": "https://github.com/baer", "followers_url": "https://api.github.com/users/baer/followers", "following_url": "https://api.github.com/users/baer/following{/other_user}", "gists_url": "https://api.github.com/users/baer/gists{/gist_id}", "starred_url": "https://api.github.com/users/baer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/baer/subscriptions", "organizations_url": "https://api.github.com/users/baer/orgs", "repos_url": "https://api.github.com/users/baer/repos", "events_url": "https://api.github.com/users/baer/events{/privacy}", "received_events_url": "https://api.github.com/users/baer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-12-24T01:16:42Z", "updated_at": "2016-04-20T04:08:45Z", "closed_at": "2016-04-20T04:08:45Z", "author_association": "NONE", "body": "Hello! I wanted to propose a collaboration between this repo and https://github.com/walmartlabs/eslint-config-defaults.\n\nI originally set out to build config-defaults because I was tired of copy pasting my eslint config around and trying to keep them up to date across lots of projects. Eslint's `extends` key fixes the distribution problem but there are still two issues:\n1. Managing the eslint config file is a pain in the ass even though it is centralized. New rules are added, removed, moved and deprecated all the time!\n2. Just get up and running for a new project was not straightforward and I strongly believe that code quality tooling should be well suited to those who are just starting out. They're often the ones who need it most after all.\n\n---\n\nIt's obvious that you all saw the same problems and it has been enormously helpful to a lot of people. and we've already worked together in #366 and #526 but I want to take your config one step further and I am asking for your help. With eslint-config-defaults I want to try to centralize the config from a few thought leaders around the web so that folks have fast, standard and up to date options from the start.\n\nI've been maintaining an \"unofficial\" airbnb config for a while now but it's duplicate effort and my hope is to try to collaborate/consolidate. For my part, I am committed to staying on top of the latest rules (and deprecations). I should mention that you all have quite a few missing rules already :).\n\nPotential Objections(?):\n- **We need quick access to the repo to make changes.** - I'm happy to try to get your maintainers added to the project.\n- **The project is under walmartlabs and I'm not too sure I like that.** - It's possible we could spin this out into it's own org - I'd have to talk to legal and such about what we can do.\n- **We don't want to install all the configs!** - Maybe we can do what babel does and have multiple npm packages under the same project. We can figure that out.\n- **This project is really popular and is an exceptional part of our OSS portfolio that we're not going to shut down.** - You could easily take config-defaults as a dependency and keep this exactly how it is. Really, this repo's strength is it's plain english documentation and is kindof an awkward place to store ESLint rules.\n\nAnyway, I wanted to start a conversation and see if we can make it work for both of us.\n\n@justjake @taion @ljharb @hshoff\n"}]