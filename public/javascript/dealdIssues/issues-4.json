[{"url": "https://api.github.com/repos/airbnb/javascript/issues/1540", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1540/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1540/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1540/events", "html_url": "https://github.com/airbnb/javascript/issues/1540", "id": 253287795, "node_id": "MDU6SXNzdWUyNTMyODc3OTU=", "number": 1540, "title": "\"Configuration for rule \"jsx-a11y/anchor-has-content\" is invalid\" error with correct peer dependencies", "user": {"login": "OlgaKozlova", "id": 11977591, "node_id": "MDQ6VXNlcjExOTc3NTkx", "avatar_url": "https://avatars2.githubusercontent.com/u/11977591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OlgaKozlova", "html_url": "https://github.com/OlgaKozlova", "followers_url": "https://api.github.com/users/OlgaKozlova/followers", "following_url": "https://api.github.com/users/OlgaKozlova/following{/other_user}", "gists_url": "https://api.github.com/users/OlgaKozlova/gists{/gist_id}", "starred_url": "https://api.github.com/users/OlgaKozlova/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OlgaKozlova/subscriptions", "organizations_url": "https://api.github.com/users/OlgaKozlova/orgs", "repos_url": "https://api.github.com/users/OlgaKozlova/repos", "events_url": "https://api.github.com/users/OlgaKozlova/events{/privacy}", "received_events_url": "https://api.github.com/users/OlgaKozlova/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 18135605, "node_id": "MDU6TGFiZWwxODEzNTYwNQ==", "url": "https://api.github.com/repos/airbnb/javascript/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-28T10:22:21Z", "updated_at": "2017-08-28T15:43:30Z", "closed_at": "2017-08-28T10:27:53Z", "author_association": "NONE", "body": "I looked through similar issues but can't find the solution. I have no globally installed eslint, and peer configurations are correct:\r\n\r\nMy dev-dependencies:\r\n```\r\n\"devDependencies\": {\r\n    \"eslint\": \"^4.3.0\",\r\n    \"eslint-config-airbnb\": \"^15.1.0\",\r\n    \"eslint-plugin-import\": \"^2.7.0\",\r\n    \"eslint-plugin-jsx-a11y\": \"^5.1.1\",\r\n    \"eslint-plugin-react\": \"^7.1.0\"\r\n  }\r\n```\r\n\r\nPeer Dependencies:\r\n```\r\n $ npm info \"eslint-config-airbnb@latest\" peerDependencies\r\n\r\n{ eslint: '^3.19.0 || ^4.3.0',\r\n  'eslint-plugin-jsx-a11y': '^5.1.1',\r\n  'eslint-plugin-import': '^2.7.0',\r\n  'eslint-plugin-react': '^7.1.0' }\r\n\r\n```\r\n.eslintrc\r\n```\r\n{\r\n  \"extends\": \"airbnb\"\r\n}\r\n```\r\n\r\nError: \r\n```\r\nError: <pathToProject>\\node_modules\\eslint-config-airbnb\\rules\\react-a11y.js:\r\n\tConfiguration for rule \"jsx-a11y/anchor-has-content\" is invalid:\r\n\tValue \"[object Object]\" should be string.\r\n\tValue \"[object Object]\" should be array.\r\n\tValue \"[object Object]\" should match exactly one schema in oneOf.\r\n\r\nReferenced from:<pathToProject>\\node_modules\\eslint-config-airbnb\\index.js\r\nReferenced from: <pathToProject>\\.eslintrc\r\n\r\nError: <pathToProject>\\node_modules\\eslint-config-airbnb\\rules\\react-a11y.js:\r\n\tConfiguration for rule \"jsx-a11y/anchor-has-content\" is invalid:\r\n\tValue \"[object Object]\" should be string.\r\n\tValue \"[object Object]\" should be array.\r\n\tValue \"[object Object]\" should match exactly one schema in oneOf.\r\n\r\nReferenced from:<pathToProject>\\node_modules\\eslint-config-airbnb\\index.js\r\nReferenced from: <pathToProject>\\.eslintrc\r\n    at validateRuleOptions (<pathToProject>\\node_modules\\eslint\\lib\\config\\config-validator.js:113:15)\r\n    at Object.keys.forEach.id (<pathToProject>\\node_modules\\eslint\\lib\\config\\config-validator.js:153:9)\r\n    at Array.forEach (native)\r\n    at validateRules (<pathToProject>\\node_modules\\eslint\\lib\\config\\config-validator.js:152:30)\r\n    at Object.validate (<pathToProject>\\node_modules\\eslint\\lib\\config\\config-validator.js:230:5)\r\n    at loadFromDisk (<pathToProject>\\node_modules\\eslint\\lib\\config\\config-file.js:549:19)\r\n    at load (<pathToProject>\\node_modules\\eslint\\lib\\config\\config-file.js:592:20)\r\n    at configExtends.reduceRight (<pathToProject>\\node_modules\\eslint\\lib\\config\\config-file.js:421:36)\r\n    at Array.reduceRight (native)\r\n    at applyExtends (<pathToProject>\\node_modules\\eslint\\lib\\config\\config-file.js:403:28)\r\n```\r\n\r\nnode -v 8.1.0\r\nnpm -v 5.0.3\r\n\r\nWhat can I do to get rid of this?"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/1539", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1539/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1539/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1539/events", "html_url": "https://github.com/airbnb/javascript/issues/1539", "id": 253153592, "node_id": "MDU6SXNzdWUyNTMxNTM1OTI=", "number": 1539, "title": "Use a loose set of rules for consistent JSDoc comments", "user": {"login": "kripod", "id": 14854048, "node_id": "MDQ6VXNlcjE0ODU0MDQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/14854048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kripod", "html_url": "https://github.com/kripod", "followers_url": "https://api.github.com/users/kripod/followers", "following_url": "https://api.github.com/users/kripod/following{/other_user}", "gists_url": "https://api.github.com/users/kripod/gists{/gist_id}", "starred_url": "https://api.github.com/users/kripod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kripod/subscriptions", "organizations_url": "https://api.github.com/users/kripod/orgs", "repos_url": "https://api.github.com/users/kripod/repos", "events_url": "https://api.github.com/users/kripod/events{/privacy}", "received_events_url": "https://api.github.com/users/kripod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-08-27T09:55:59Z", "updated_at": "2018-03-07T10:53:45Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "While using JSDoc should not be mandatory, I think that its users should aim for more consistency, which may be achieved by the following set of loose ESLint rules:\r\n\r\n```json\r\n\"valid-jsdoc\": [\"error\", {\r\n  \"prefer\": {\r\n    \"arg\": \"param\",\r\n    \"argument\": \"param\",\r\n    \"class\": \"constructor\",\r\n    \"return\": \"returns\",\r\n    \"virtual\": \"abstract\"\r\n  },\r\n  \"preferType\": {\r\n    \"Boolean\": \"boolean\",\r\n    \"Number\": \"number\",\r\n    \"object\": \"Object\",\r\n    \"String\": \"string\"\r\n  },\r\n  \"requireReturn\": false\r\n}]\r\n```"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/1536", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1536/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1536/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1536/events", "html_url": "https://github.com/airbnb/javascript/issues/1536", "id": 252713107, "node_id": "MDU6SXNzdWUyNTI3MTMxMDc=", "number": 1536, "title": "Consider incorporating rules from eslint-plugin-unicorn", "user": {"login": "kripod", "id": 14854048, "node_id": "MDQ6VXNlcjE0ODU0MDQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/14854048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kripod", "html_url": "https://github.com/kripod", "followers_url": "https://api.github.com/users/kripod/followers", "following_url": "https://api.github.com/users/kripod/following{/other_user}", "gists_url": "https://api.github.com/users/kripod/gists{/gist_id}", "starred_url": "https://api.github.com/users/kripod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kripod/subscriptions", "organizations_url": "https://api.github.com/users/kripod/orgs", "repos_url": "https://api.github.com/users/kripod/repos", "events_url": "https://api.github.com/users/kripod/events{/privacy}", "received_events_url": "https://api.github.com/users/kripod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-08-24T19:55:22Z", "updated_at": "2017-10-08T00:30:17Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "By using code from [eslint-plugin-unicorn](https://github.com/sindresorhus/eslint-plugin-unicorn), the following style rules could be enforced:\r\n\r\n- [explicit-length-check](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/master/docs/rules/explicit-length-check.md) - [15.3][] Use shortcuts for booleans, but explicit comparisons for strings and numbers.\r\n- [import-index](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/master/docs/rules/import-index.md) - [23.6][] A base filename should exactly match the name of its default export.\r\n\r\n[15.3]: https://github.com/airbnb/javascript#comparison--shortcuts\r\n[23.6]: https://github.com/airbnb/javascript#naming--filename-matches-export\r\n\r\nI also think that introducing new rules from the aforementioned plugin may help paving the way towards a more consistent coding style. For reference, see the rules below:\r\n\r\n#### Avoid unexpected bugs\r\n- [no-array-instanceof](docs/rules/no-array-instanceof.md) - Require `Array.isArray()` instead of `instanceof Array`. *(fixable)*\r\n- [custom-error-definition](docs/rules/custom-error-definition.md) - Enforce correct `Error` subclassing. *(fixable)*\r\n- [no-fn-reference-in-iterator](docs/rules/no-fn-reference-in-iterator.md) - Prevents passing a function reference directly to iterator methods. *(fixable)*\r\n\r\n#### Enforce style consistency\r\n- [no-abusive-eslint-disable](docs/rules/no-abusive-eslint-disable.md) - Enforce specifying rules to disable in `eslint-disable` comments.\r\n- [throw-new-error](docs/rules/throw-new-error.md) - Require `new` when throwing an error. *(fixable)*\r\n- [number-literal-case](docs/rules/number-literal-case.md) - Enforce lowercase identifier and uppercase value for number literals. *(fixable)*\r\n- [escape-case](docs/rules/escape-case.md) - Require escape sequences to use uppercase values. *(fixable)*\r\n- [no-hex-escape](docs/rules/no-hex-escape.md) - Enforce the use of unicode escapes instead of hexadecimal escapes. *(fixable)*\r\n- [prefer-starts-ends-with](docs/rules/prefer-starts-ends-with.md) - Prefer `String#startsWith` & `String#endsWith` over more complex alternatives.\r\n- [prefer-type-error](docs/rules/prefer-type-error.md) - Enforce throwing `TypeError` in type checking conditions. *(fixable)*\r\n- [import-index](docs/rules/import-index.md) - Enforce importing index files with `.`. *(fixable)*\r\n- [new-for-builtins](docs/rules/new-for-builtins.md) - Enforce the use of `new` for all builtins, except `String`, `Number` and `Boolean`. *(fixable)*\r\n\r\n#### Warn about API deprecation\r\n- [no-new-buffer](docs/rules/no-new-buffer.md) - Enforce the use of `Buffer.from()` and `Buffer.alloc()` instead of the deprecated `new Buffer()`. *(fixable)*"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/1535", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1535/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1535/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1535/events", "html_url": "https://github.com/airbnb/javascript/issues/1535", "id": 252401192, "node_id": "MDU6SXNzdWUyNTI0MDExOTI=", "number": 1535, "title": "Accidental bypass for react/jsx-no-bind allowArrowFunctions ", "user": {"login": "richardson-trevor", "id": 2788272, "node_id": "MDQ6VXNlcjI3ODgyNzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2788272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardson-trevor", "html_url": "https://github.com/richardson-trevor", "followers_url": "https://api.github.com/users/richardson-trevor/followers", "following_url": "https://api.github.com/users/richardson-trevor/following{/other_user}", "gists_url": "https://api.github.com/users/richardson-trevor/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardson-trevor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardson-trevor/subscriptions", "organizations_url": "https://api.github.com/users/richardson-trevor/orgs", "repos_url": "https://api.github.com/users/richardson-trevor/repos", "events_url": "https://api.github.com/users/richardson-trevor/events{/privacy}", "received_events_url": "https://api.github.com/users/richardson-trevor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-23T20:09:34Z", "updated_at": "2017-08-23T20:27:17Z", "closed_at": "2017-08-23T20:27:17Z", "author_association": "NONE", "body": "We've recently started to get rid of our usage of arrow functions in component props for similar reasons to that mentioned [here](https://medium.freecodecamp.org/why-arrow-functions-and-bind-in-reacts-render-are-problematic-f1c08b060e36). We went ahead and set: \r\n```JS\r\n'react/jsx-no-bind': ['error', {\r\n      allowArrowFunctions: false,\r\n      allowBind: false,\r\n}]\r\n```\r\nbut realized we were still able to get away with using something like:\r\n```JS\r\nconst someFunc = () => onClickHandler(userId)\r\n<SomeComponent onClick={someFunc} />\r\n```\r\nSo we didn't fix the problem, we just accidentally tricked it. Is this expected behavior or is this a bug?"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/1534", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1534/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1534/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1534/events", "html_url": "https://github.com/airbnb/javascript/issues/1534", "id": 252154431, "node_id": "MDU6SXNzdWUyNTIxNTQ0MzE=", "number": 1534, "title": "What will AirBnb do with Facebook adding a new clause to it's BSD license?", "user": {"login": "sabapk", "id": 3510754, "node_id": "MDQ6VXNlcjM1MTA3NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/3510754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sabapk", "html_url": "https://github.com/sabapk", "followers_url": "https://api.github.com/users/sabapk/followers", "following_url": "https://api.github.com/users/sabapk/following{/other_user}", "gists_url": "https://api.github.com/users/sabapk/gists{/gist_id}", "starred_url": "https://api.github.com/users/sabapk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sabapk/subscriptions", "organizations_url": "https://api.github.com/users/sabapk/orgs", "repos_url": "https://api.github.com/users/sabapk/repos", "events_url": "https://api.github.com/users/sabapk/events{/privacy}", "received_events_url": "https://api.github.com/users/sabapk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-23T04:09:57Z", "updated_at": "2017-08-23T04:55:00Z", "closed_at": "2017-08-23T04:47:29Z", "author_association": "NONE", "body": "AirBnb has been widely using React since 2014 and contributing to the open source.\r\nAs per the latest clause added by FB in the BSD license to use React, any organisation cannot file a patent application for their product in future. If they do, the license will be revoked and the product will have an unlicensed software in it, which will be illegal.\r\nThis has triggered a lot of discussions after Apache Foundation disallowed applications using Facebook libraries. After developers reaching to Facebook, the giant is still firm on it's decision.\r\nHow is AirBnb Engineering taking this decision? Are they moving to another JS Framework?"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/1532", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1532/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1532/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1532/events", "html_url": "https://github.com/airbnb/javascript/issues/1532", "id": 251970747, "node_id": "MDU6SXNzdWUyNTE5NzA3NDc=", "number": 1532, "title": "Line exceeds 100 characters and arrow body style ", "user": {"login": "gkatsanos", "id": 1768834, "node_id": "MDQ6VXNlcjE3Njg4MzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1768834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gkatsanos", "html_url": "https://github.com/gkatsanos", "followers_url": "https://api.github.com/users/gkatsanos/followers", "following_url": "https://api.github.com/users/gkatsanos/following{/other_user}", "gists_url": "https://api.github.com/users/gkatsanos/gists{/gist_id}", "starred_url": "https://api.github.com/users/gkatsanos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gkatsanos/subscriptions", "organizations_url": "https://api.github.com/users/gkatsanos/orgs", "repos_url": "https://api.github.com/users/gkatsanos/repos", "events_url": "https://api.github.com/users/gkatsanos/events{/privacy}", "received_events_url": "https://api.github.com/users/gkatsanos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-22T14:10:57Z", "updated_at": "2017-09-02T16:44:06Z", "closed_at": null, "author_association": "NONE", "body": "I have the following:\r\n\r\n`export const filteredItems = (state, filter, value) => state.items.filter(item => item.filter === value);\r\n`\r\n\r\nwhich gives the max-len (100) error.\r\n\r\nWhen I rewrite it by changing the arrow function to the version with { } , naturally I get the error: https://github.com/airbnb/javascript#arrows--implicit-return . \r\n\r\nWhat's the way around this?\r\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/1529", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1529/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1529/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1529/events", "html_url": "https://github.com/airbnb/javascript/issues/1529", "id": 251296405, "node_id": "MDU6SXNzdWUyNTEyOTY0MDU=", "number": 1529, "title": "ESLint + phantomjs not working", "user": {"login": "amir20", "id": 260667, "node_id": "MDQ6VXNlcjI2MDY2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/260667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amir20", "html_url": "https://github.com/amir20", "followers_url": "https://api.github.com/users/amir20/followers", "following_url": "https://api.github.com/users/amir20/following{/other_user}", "gists_url": "https://api.github.com/users/amir20/gists{/gist_id}", "starred_url": "https://api.github.com/users/amir20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amir20/subscriptions", "organizations_url": "https://api.github.com/users/amir20/orgs", "repos_url": "https://api.github.com/users/amir20/repos", "events_url": "https://api.github.com/users/amir20/events{/privacy}", "received_events_url": "https://api.github.com/users/amir20/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-18T16:29:30Z", "updated_at": "2017-08-19T23:54:56Z", "closed_at": null, "author_association": "NONE", "body": "## Context\r\nI am converting all of https://github.com/amir20/phantomjs-node to use AirBnB lint with prettier. I followed [this tutorial](https://hackernoon.com/configure-eslint-prettier-and-flow-in-vs-code-for-react-development-c9d95db07213) to configure eslint, flow and prettier. \r\n\r\n## Problem\r\nEverything seemed ok and I was going through some of the coding styles that `--fix` couldn't fix. A few looked like the below. \r\n\r\n```\r\nphantomjs-node/src/shim/index.js\r\n    3:1   error    'webpage' should be listed in the project's dependencies. Run 'npm i -S webpage' to add it                                                                             import/no-extraneous-dependencies\r\n    3:21  error    Unable to resolve path to module 'webpage'                                                                                                                             import/no-unresolved\r\n    3:21  error    Missing file extension for \"webpage\"                                                                                                                                   import/extensions\r\n    4:1   error    'system' should be listed in the project's dependencies. Run 'npm i -S system' to add it                                                                               import/no-extraneous-dependencies\r\n```\r\n\r\nI did some research and couldn't find anything about this. I was under the assumption that `/* eslint-env phantomjs */` should fix this. I am a little stumped because it seems like AirBnB's base config for eslint doesn't work with phantomjs. Is this true? \r\n\r\nHere is my `.eslintrc.json`\r\n\r\n```json\r\n{\r\n  \"env\": {\r\n    \"browser\": true,\r\n    \"commonjs\": true,\r\n    \"es6\": true,\r\n    \"node\": true,\r\n    \"jest\": true,\r\n    \"phantomjs\": true\r\n  },\r\n  \"extends\": \"airbnb-base\",\r\n  \"parser\": \"babel-eslint\",\r\n  \"plugins\": [\"import\"]\r\n}\r\n```\r\n\r\n## Questions\r\n\r\n1. How do I get phantomjs env globals and imports to work with AirBnB coding style? \r\n2. This used to work with `\"extends\": \"fbjs/strict\"`. Was it disabled or removed? \r\n\r\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/1527", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1527/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1527/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1527/events", "html_url": "https://github.com/airbnb/javascript/issues/1527", "id": 250986201, "node_id": "MDU6SXNzdWUyNTA5ODYyMDE=", "number": 1527, "title": "Enforce the use of modules", "user": {"login": "guillaumervls", "id": 3765057, "node_id": "MDQ6VXNlcjM3NjUwNTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3765057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guillaumervls", "html_url": "https://github.com/guillaumervls", "followers_url": "https://api.github.com/users/guillaumervls/followers", "following_url": "https://api.github.com/users/guillaumervls/following{/other_user}", "gists_url": "https://api.github.com/users/guillaumervls/gists{/gist_id}", "starred_url": "https://api.github.com/users/guillaumervls/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guillaumervls/subscriptions", "organizations_url": "https://api.github.com/users/guillaumervls/orgs", "repos_url": "https://api.github.com/users/guillaumervls/repos", "events_url": "https://api.github.com/users/guillaumervls/events{/privacy}", "received_events_url": "https://api.github.com/users/guillaumervls/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-17T15:38:43Z", "updated_at": "2017-08-17T16:10:51Z", "closed_at": "2017-08-17T16:10:51Z", "author_association": "NONE", "body": "Hi,\r\n\r\nThe guide says to use `import` instead of `require` :\r\nhttps://github.com/airbnb/javascript#modules--use-them\r\n\r\nHowever it's not enforced :\r\nhttps://github.com/airbnb/javascript/blob/master/packages/eslint-config-airbnb-base/rules/imports.js#L98-L100\r\n\r\nAm I missing something ?\r\n\r\nCheers"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/1523", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1523/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1523/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1523/events", "html_url": "https://github.com/airbnb/javascript/issues/1523", "id": 250666295, "node_id": "MDU6SXNzdWUyNTA2NjYyOTU=", "number": 1523, "title": "Please explain using inline styles comment about expensive stylesheets", "user": {"login": "merlinpatt", "id": 421960, "node_id": "MDQ6VXNlcjQyMTk2MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/421960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/merlinpatt", "html_url": "https://github.com/merlinpatt", "followers_url": "https://api.github.com/users/merlinpatt/followers", "following_url": "https://api.github.com/users/merlinpatt/following{/other_user}", "gists_url": "https://api.github.com/users/merlinpatt/gists{/gist_id}", "starred_url": "https://api.github.com/users/merlinpatt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/merlinpatt/subscriptions", "organizations_url": "https://api.github.com/users/merlinpatt/orgs", "repos_url": "https://api.github.com/users/merlinpatt/repos", "events_url": "https://api.github.com/users/merlinpatt/events{/privacy}", "received_events_url": "https://api.github.com/users/merlinpatt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 18135606, "node_id": "MDU6TGFiZWwxODEzNTYwNg==", "url": "https://api.github.com/repos/airbnb/javascript/labels/question", "name": "question", "color": "cc317c", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-16T15:22:11Z", "updated_at": "2017-08-16T16:45:59Z", "closed_at": null, "author_association": "NONE", "body": "The [css-in-javascript page](https://github.com/airbnb/javascript/tree/master/css-in-javascript) states\r\n\r\n* Use inline styles for styles that have a high cardinality (e.g. uses the value of a prop) and not for styles that have a low cardinality.\r\n\r\n> Why? Generating themed stylesheets can be expensive, so they are best for discrete sets of styles.\r\n\r\nIn the example, you have ` css(styles.periodic, { margin: spacing })`, but this still requires you to use the `withStyles` HOC, so aren't you generated a themed stylesheet regardless of the prop? What makes this less expensive?\r\n\r\nFor another example that I'm actually using and am wondering about, I have these various column classes, which I then spread into the styles returned by `withStyles`.\r\n\r\n```js\r\nconst sizes = [10, 20, 30, 40, 50, 60, 70, 80, 90, 25, 75];\r\nconst sizeStyles = sizes.reduce((object, size) => ({\r\n  ...object,\r\n  [`columnOffset${size}`]: {marginLeft: `${size}%`},\r\n  [`columnPercent${size}`]: {flex: `0 0 ${size}%`, maxWidth: `${size}%`},\r\n}), {});\r\n\r\nwithStyles(() => ({\r\n  // other styles above\r\n  ...sizeStyles,\r\n}))(Column);\r\n```\r\n\r\nAnd my `css` call is ``css(styles.column, styles[`columnPercent${size}`], styles[`columnOffset${offset}`])``.\r\n\r\nBut would it be somehow better to skip adding it to the returned styles and instead do ``css(styles.column, sizeStyles[`columnPercent${size}`], sizeStyles[`columnOffset${offset}`])``?"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/1521", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1521/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1521/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1521/events", "html_url": "https://github.com/airbnb/javascript/issues/1521", "id": 250109335, "node_id": "MDU6SXNzdWUyNTAxMDkzMzU=", "number": 1521, "title": "Support for ESnext Class Feature", "user": {"login": "cheshireoctopus", "id": 4118615, "node_id": "MDQ6VXNlcjQxMTg2MTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/4118615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cheshireoctopus", "html_url": "https://github.com/cheshireoctopus", "followers_url": "https://api.github.com/users/cheshireoctopus/followers", "following_url": "https://api.github.com/users/cheshireoctopus/following{/other_user}", "gists_url": "https://api.github.com/users/cheshireoctopus/gists{/gist_id}", "starred_url": "https://api.github.com/users/cheshireoctopus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cheshireoctopus/subscriptions", "organizations_url": "https://api.github.com/users/cheshireoctopus/orgs", "repos_url": "https://api.github.com/users/cheshireoctopus/repos", "events_url": "https://api.github.com/users/cheshireoctopus/events{/privacy}", "received_events_url": "https://api.github.com/users/cheshireoctopus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 361061166, "node_id": "MDU6TGFiZWwzNjEwNjExNjY=", "url": "https://api.github.com/repos/airbnb/javascript/labels/needs%20eslint%20rule%20change/addition", "name": "needs eslint rule change/addition", "color": "d4c5f9", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-14T18:11:04Z", "updated_at": "2017-08-14T19:51:50Z", "closed_at": null, "author_association": "NONE", "body": "Hello,\r\n\r\nCurious if support for [ESnext classes](https://github.com/tc39/proposal-class-fields) is can be expected now that the feature has been [moved from stage-2 to stage-3](https://github.com/tc39/proposal-class-fields/commit/5a4ff5fa4bf30885188279f6fb8070f2e1903c32).\r\n\r\nIf not, at what point (if any) will this feature be included?\r\n\r\nCurrently using the work around detailed in https://github.com/airbnb/javascript/issues/589.\r\n\r\nThank you"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/1520", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1520/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1520/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1520/events", "html_url": "https://github.com/airbnb/javascript/issues/1520", "id": 250081135, "node_id": "MDU6SXNzdWUyNTAwODExMzU=", "number": 1520, "title": "Confusing dot-notation and no-underscore-dangle", "user": {"login": "pewstiepoll", "id": 9870032, "node_id": "MDQ6VXNlcjk4NzAwMzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/9870032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pewstiepoll", "html_url": "https://github.com/pewstiepoll", "followers_url": "https://api.github.com/users/pewstiepoll/followers", "following_url": "https://api.github.com/users/pewstiepoll/following{/other_user}", "gists_url": "https://api.github.com/users/pewstiepoll/gists{/gist_id}", "starred_url": "https://api.github.com/users/pewstiepoll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pewstiepoll/subscriptions", "organizations_url": "https://api.github.com/users/pewstiepoll/orgs", "repos_url": "https://api.github.com/users/pewstiepoll/repos", "events_url": "https://api.github.com/users/pewstiepoll/events{/privacy}", "received_events_url": "https://api.github.com/users/pewstiepoll/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 18135606, "node_id": "MDU6TGFiZWwxODEzNTYwNg==", "url": "https://api.github.com/repos/airbnb/javascript/labels/question", "name": "question", "color": "cc317c", "default": true}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-14T16:18:19Z", "updated_at": "2017-08-21T20:39:19Z", "closed_at": "2017-08-21T19:49:00Z", "author_association": "NONE", "body": "Hi!\r\nI have an object returned to me from third-party API. Object has following structure:\r\n`object = {\r\n    _links: ...\r\n}`\r\n\r\nWhen I'm trying to access `_links` object using dot-notation like this: `object._links` I've got `no-underscore-dangle` error while trying to get object property with brakets `object['_links']` leads to `dot-notation` error. How to deal with such rules confusion?"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/1519", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1519/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1519/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1519/events", "html_url": "https://github.com/airbnb/javascript/issues/1519", "id": 249469278, "node_id": "MDU6SXNzdWUyNDk0NjkyNzg=", "number": 1519, "title": "Clarification regarding react/prop-types validation and react router dom", "user": {"login": "rsancheza09", "id": 3789821, "node_id": "MDQ6VXNlcjM3ODk4MjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/3789821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsancheza09", "html_url": "https://github.com/rsancheza09", "followers_url": "https://api.github.com/users/rsancheza09/followers", "following_url": "https://api.github.com/users/rsancheza09/following{/other_user}", "gists_url": "https://api.github.com/users/rsancheza09/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsancheza09/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsancheza09/subscriptions", "organizations_url": "https://api.github.com/users/rsancheza09/orgs", "repos_url": "https://api.github.com/users/rsancheza09/repos", "events_url": "https://api.github.com/users/rsancheza09/events{/privacy}", "received_events_url": "https://api.github.com/users/rsancheza09/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 18135606, "node_id": "MDU6TGFiZWwxODEzNTYwNg==", "url": "https://api.github.com/repos/airbnb/javascript/labels/question", "name": "question", "color": "cc317c", "default": true}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-08-10T20:37:53Z", "updated_at": "2017-08-11T16:17:24Z", "closed_at": "2017-08-10T20:55:18Z", "author_association": "NONE", "body": "I am getting the alert, that I have to validate in prop types match, but I think it is not necessary.\r\n\r\nimport React from 'react';\r\n\r\n```javascript\r\nconst Header = (props) => {\r\n  const { match } = props; // 'match' is missing props validation (react/prop-types)\r\n  return (\r\n    <div>\r\n      <h1>Hello</h1>\r\n      <h3>ID: {match.params.id}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n```\r\n\r\nDo I need to validate it? What's the new convention?\r\n\r\nRegards"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/1515", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1515/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1515/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1515/events", "html_url": "https://github.com/airbnb/javascript/issues/1515", "id": 248329924, "node_id": "MDU6SXNzdWUyNDgzMjk5MjQ=", "number": 1515, "title": "Sonarqube Config", "user": {"login": "codejamninja", "id": 6234038, "node_id": "MDQ6VXNlcjYyMzQwMzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6234038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codejamninja", "html_url": "https://github.com/codejamninja", "followers_url": "https://api.github.com/users/codejamninja/followers", "following_url": "https://api.github.com/users/codejamninja/following{/other_user}", "gists_url": "https://api.github.com/users/codejamninja/gists{/gist_id}", "starred_url": "https://api.github.com/users/codejamninja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codejamninja/subscriptions", "organizations_url": "https://api.github.com/users/codejamninja/orgs", "repos_url": "https://api.github.com/users/codejamninja/repos", "events_url": "https://api.github.com/users/codejamninja/events{/privacy}", "received_events_url": "https://api.github.com/users/codejamninja/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 27, "created_at": "2017-08-07T07:35:59Z", "updated_at": "2018-07-10T09:52:02Z", "closed_at": "2017-08-07T07:59:56Z", "author_association": "NONE", "body": "Can someone create a sonarqube config for this?"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/1513", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1513/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1513/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1513/events", "html_url": "https://github.com/airbnb/javascript/issues/1513", "id": 247615870, "node_id": "MDU6SXNzdWUyNDc2MTU4NzA=", "number": 1513, "title": "Using stage-2 syntax will be fatal", "user": {"login": "songzhengxu", "id": 12894135, "node_id": "MDQ6VXNlcjEyODk0MTM1", "avatar_url": "https://avatars1.githubusercontent.com/u/12894135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/songzhengxu", "html_url": "https://github.com/songzhengxu", "followers_url": "https://api.github.com/users/songzhengxu/followers", "following_url": "https://api.github.com/users/songzhengxu/following{/other_user}", "gists_url": "https://api.github.com/users/songzhengxu/gists{/gist_id}", "starred_url": "https://api.github.com/users/songzhengxu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/songzhengxu/subscriptions", "organizations_url": "https://api.github.com/users/songzhengxu/orgs", "repos_url": "https://api.github.com/users/songzhengxu/repos", "events_url": "https://api.github.com/users/songzhengxu/events{/privacy}", "received_events_url": "https://api.github.com/users/songzhengxu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-03T07:27:52Z", "updated_at": "2017-08-03T07:31:23Z", "closed_at": "2017-08-03T07:31:23Z", "author_association": "NONE", "body": " Use Arrow Function in Class Property  for Handling `this`\r\n`handleChange = () => {\r\n code..\r\n};`\r\ni  enable  enable stage-2 in Babel. but ESLint will be fatal error\r\n`Parsing error: Unexpected token = (Fatal)`\r\n\r\nWhat should I do ?\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/1512", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1512/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1512/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1512/events", "html_url": "https://github.com/airbnb/javascript/issues/1512", "id": 247426095, "node_id": "MDU6SXNzdWUyNDc0MjYwOTU=", "number": 1512, "title": "Configuration for rule \"jsx-a11y/anchor-has-content\" is invalid: Value \"\" is the wrong type.", "user": {"login": "Theo-", "id": 7581961, "node_id": "MDQ6VXNlcjc1ODE5NjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/7581961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Theo-", "html_url": "https://github.com/Theo-", "followers_url": "https://api.github.com/users/Theo-/followers", "following_url": "https://api.github.com/users/Theo-/following{/other_user}", "gists_url": "https://api.github.com/users/Theo-/gists{/gist_id}", "starred_url": "https://api.github.com/users/Theo-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Theo-/subscriptions", "organizations_url": "https://api.github.com/users/Theo-/orgs", "repos_url": "https://api.github.com/users/Theo-/repos", "events_url": "https://api.github.com/users/Theo-/events{/privacy}", "received_events_url": "https://api.github.com/users/Theo-/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-02T15:18:21Z", "updated_at": "2017-08-02T18:25:28Z", "closed_at": "2017-08-02T18:24:33Z", "author_association": "NONE", "body": "Hi everyone, I am running into an error that I can't seem to fix on my own, even after looking at previous related issues.\r\n\r\npackage.json\r\n```\r\n    \"eslint\": \"^4.3.0\",\r\n    \"eslint-config-airbnb\": \"^15.1.0\",\r\n    \"eslint-plugin-import\": \"^2.7.0\",\r\n    \"eslint-plugin-jsx-a11y\": \"^5.1.1\",\r\n    \"eslint-plugin-react\": \"^7.1.0\",\r\n```\r\n\r\nwhich meets the peerDependecies:\r\n```\r\n{ eslint: '^3.19.0 || ^4.3.0',\r\n  'eslint-plugin-jsx-a11y': '^5.1.1',\r\n  'eslint-plugin-import': '^2.7.0',\r\n  'eslint-plugin-react': '^7.1.0' }\r\n```\r\n\r\nHowever, when running `eslint` I get the following error:\r\n```\r\n/usr/local/lib/node_modules/eslint-config-airbnb/rules/react-a11y.js:\r\n        Configuration for rule \"jsx-a11y/anchor-has-content\" is invalid:\r\n        Value \"\" is the wrong type.\r\n\r\nReferenced from: airbnb\r\nReferenced from: <project path>/.eslintrc.json\r\nError: /usr/local/lib/node_modules/eslint-config-airbnb/rules/react-a11y.js:\r\n        Configuration for rule \"jsx-a11y/anchor-has-content\" is invalid:\r\n        Value \"\" is the wrong type.\r\n\r\nReferenced from: airbnb\r\nReferenced from: <project path>/.eslintrc.json\r\n    at validateRuleOptions (/usr/local/lib/node_modules/eslint/lib/config/config-validator.js:115:15)\r\n    at /usr/local/lib/node_modules/eslint/lib/config/config-validator.js:162:13\r\n    at Array.forEach (native)\r\n    at Object.validate (/usr/local/lib/node_modules/eslint/lib/config/config-validator.js:161:35)\r\n    at load (/usr/local/lib/node_modules/eslint/lib/config/config-file.js:522:19)\r\n    at /usr/local/lib/node_modules/eslint/lib/config/config-file.js:391:36\r\n    at Array.reduceRight (native)\r\n    at applyExtends (/usr/local/lib/node_modules/eslint/lib/config/config-file.js:362:28)\r\n    at load (/usr/local/lib/node_modules/eslint/lib/config/config-file.js:529:22)\r\n    at /usr/local/lib/node_modules/eslint/lib/config/config-file.js:391:36\r\n```\r\n\r\nI did try to remove `node_modules` and run `yarn install` or `npm install`, but neither works.\r\n\r\nIf that helps, I have node `v6.10.3`\r\n"}]