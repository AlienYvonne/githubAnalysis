[{"url": "https://api.github.com/repos/airbnb/javascript/issues/543", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/543/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/543/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/543/events", "html_url": "https://github.com/airbnb/javascript/issues/543", "id": 111236144, "node_id": "MDU6SXNzdWUxMTEyMzYxNDQ=", "number": 543, "title": "Unused local variable in react render", "user": {"login": "ggarek", "id": 5501062, "node_id": "MDQ6VXNlcjU1MDEwNjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5501062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ggarek", "html_url": "https://github.com/ggarek", "followers_url": "https://api.github.com/users/ggarek/followers", "following_url": "https://api.github.com/users/ggarek/following{/other_user}", "gists_url": "https://api.github.com/users/ggarek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ggarek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ggarek/subscriptions", "organizations_url": "https://api.github.com/users/ggarek/orgs", "repos_url": "https://api.github.com/users/ggarek/repos", "events_url": "https://api.github.com/users/ggarek/events{/privacy}", "received_events_url": "https://api.github.com/users/ggarek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-13T18:06:05Z", "updated_at": "2015-10-14T06:35:46Z", "closed_at": "2015-10-13T20:54:33Z", "author_association": "NONE", "body": "Hello, recently i found a use case when unused local variable could be allowed.\n\nThe use case:\nI need to omit some own props in React component render method, because i want to pass the rest of the props to other component (e.g. own child).\nThe _prop1, prop2, prop3 are used_ in components handlers and thus they are not used in render.\nI want to leverage es6 destructuring assignment to omit some keys and get the rest props packed in a newly created object. Thus the omited props appear as unused local variables. This makes ESLint sad.\n\nI could use something like `_.omit(this.props, [ 'prop1', 'prop2', 'prop3' ])`, but why not use the almost native es6 ability? \nThe other option would be to allow unused variables in React component render method if the destructuring assignment contains `...rest`.\n\nHere is a code sampe:\n\n```\nrender() {\n    const {\n      prop1,\n      prop2,\n      prop3,\n      ...restProps\n      } = this.props;\n\n    return (\n      <OneComponent>\n        <OtherComponent {...restProps}/>\n      </OneComponent>\n    );\n  }\n```\n\nWhat could you suggest regarding the use case?\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/540", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/540/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/540/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/540/events", "html_url": "https://github.com/airbnb/javascript/issues/540", "id": 110149282, "node_id": "MDU6SXNzdWUxMTAxNDkyODI=", "number": 540, "title": "Disallowing Unary Increment and Decrement (++ and --)", "user": {"login": "chrisngobanh", "id": 8410793, "node_id": "MDQ6VXNlcjg0MTA3OTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/8410793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisngobanh", "html_url": "https://github.com/chrisngobanh", "followers_url": "https://api.github.com/users/chrisngobanh/followers", "following_url": "https://api.github.com/users/chrisngobanh/following{/other_user}", "gists_url": "https://api.github.com/users/chrisngobanh/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisngobanh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisngobanh/subscriptions", "organizations_url": "https://api.github.com/users/chrisngobanh/orgs", "repos_url": "https://api.github.com/users/chrisngobanh/repos", "events_url": "https://api.github.com/users/chrisngobanh/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisngobanh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 303239021, "node_id": "MDU6TGFiZWwzMDMyMzkwMjE=", "url": "https://api.github.com/repos/airbnb/javascript/labels/pull%20request%20wanted", "name": "pull request wanted", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2015-10-07T04:13:58Z", "updated_at": "2016-09-07T06:20:50Z", "closed_at": "2016-09-07T06:20:50Z", "author_association": "CONTRIBUTOR", "body": "In Douglas Crockford's Javascript: The Good Parts, he writes:\n\n>  **++ and --**\n> The ++ (increment) and -- (decrement) operators have been known to contribute to bad code by encouraging excessive trickiness. They are second only to faulty architecture in enabling to viruses and other security menaces. There is a plusplus option [in JSLint] that prohibits the use of these operators.\n\nIn addition, his replacement for ++ and -- is += 1 and -= 1, respectively.\n\nApparently Crockford's book is pretty popular, but I don't see anyone really talking about this part.\n\nWhat does everyone think?\n\nEDIT: This is a little off-topic, but Ruby does not support ++ and --.\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/539", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/539/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/539/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/539/events", "html_url": "https://github.com/airbnb/javascript/issues/539", "id": 110025197, "node_id": "MDU6SXNzdWUxMTAwMjUxOTc=", "number": 539, "title": "Turn on no-mixed-spaces-and-tabs`", "user": {"login": "ma11hew28", "id": 17276, "node_id": "MDQ6VXNlcjE3Mjc2", "avatar_url": "https://avatars1.githubusercontent.com/u/17276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ma11hew28", "html_url": "https://github.com/ma11hew28", "followers_url": "https://api.github.com/users/ma11hew28/followers", "following_url": "https://api.github.com/users/ma11hew28/following{/other_user}", "gists_url": "https://api.github.com/users/ma11hew28/gists{/gist_id}", "starred_url": "https://api.github.com/users/ma11hew28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ma11hew28/subscriptions", "organizations_url": "https://api.github.com/users/ma11hew28/orgs", "repos_url": "https://api.github.com/users/ma11hew28/repos", "events_url": "https://api.github.com/users/ma11hew28/events{/privacy}", "received_events_url": "https://api.github.com/users/ma11hew28/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-06T14:50:40Z", "updated_at": "2015-10-30T17:49:53Z", "closed_at": "2015-10-30T17:49:53Z", "author_association": "NONE", "body": "If you want to \"_disallow_ mixed spaces and tabs for indentation\", then the line should be:\n\n```\n    no-mixed-spaces-and-tabs: [2, false],\n```\n\nLine: https://github.com/airbnb/javascript/blob/16f81fbb25ae9aced9b647da5aea1dbcbf9a85e3/packages/eslint-config-airbnb/rules/style.js#L52\n\nDocumentation: http://eslint.org/docs/rules/no-mixed-spaces-and-tabs.html\n\nExample: https://github.com/eslint/eslint/blob/master/.eslintrc#L46\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/538", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/538/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/538/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/538/events", "html_url": "https://github.com/airbnb/javascript/issues/538", "id": 109674444, "node_id": "MDU6SXNzdWUxMDk2NzQ0NDQ=", "number": 538, "title": "ESLint doesn't spot error in render method a class that extends from React Component", "user": {"login": "JeanLebrument", "id": 3106676, "node_id": "MDQ6VXNlcjMxMDY2NzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3106676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeanLebrument", "html_url": "https://github.com/JeanLebrument", "followers_url": "https://api.github.com/users/JeanLebrument/followers", "following_url": "https://api.github.com/users/JeanLebrument/following{/other_user}", "gists_url": "https://api.github.com/users/JeanLebrument/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeanLebrument/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeanLebrument/subscriptions", "organizations_url": "https://api.github.com/users/JeanLebrument/orgs", "repos_url": "https://api.github.com/users/JeanLebrument/repos", "events_url": "https://api.github.com/users/JeanLebrument/events{/privacy}", "received_events_url": "https://api.github.com/users/JeanLebrument/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-10-04T10:42:32Z", "updated_at": "2015-10-06T13:30:17Z", "closed_at": "2015-10-05T18:59:14Z", "author_association": "NONE", "body": "Hello,\n\nI use `eslint` for a `react-native` project that use `babel` and `react-native-webpack-server`.\n\nHere is my `.eslintrc` file: \n\n```\n{\n  \"extends\": \"airbnb\"\n}\n```\n\nWhile I was refactoring some code, I spotted that `eslint` didn't spot an error that has been reported by `react-native` in in the iOS simulator: \n\n```\n/**\n * Welcome Message Component\n */\n\nimport React from 'react-native';\n// import AppStore from '../stores/AppStore';\n// import AppActions from '../actions/AppActions';\n\nconst {\n  Component,\n  StyleSheet,\n  Text,\n  View,\n  TouchableHighlight,\n} = React;\n\nconst styles = StyleSheet.create({\n  welcome: {\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 10,\n  },\n  button: {\n    margin: 10,\n    marginLeft: 0,\n    marginRight: 0,\n    backgroundColor: '#33CCFF',\n    color: 'white',\n    padding: 10,\n  },\n});\n\n// function _getStateFromStore() {\n//   return {\n//     message: AppStore.getMessage(),\n//   };\n// }\n\nexport default class WelcomeComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    // this.state = _getStateFromStore();\n    // BIND 'this' (ES6 React)\n    // this._onChange = this._onChange.bind(this);\n  }\n\n  // componentDidMount() {\n  //   AppStore.addChangeListener(this._onChange);\n  // }\n\n  // componentWillUnmount() {\n  //   AppStore.removeChangeListener(this._onChange);\n  // }\n\n  // _onChange() {\n  //   this.setState(_getStateFromStore());\n  // }\n\n  // _changeMessageStore() {\n  //   AppActions.setWelcomeMessage('Store message Changed !');\n  // }\n\n  render() {\n    return (\n      <View>\n        <TouchableHighlight\n          style={{alignSelf: 'center'}}\n          onPress={this._changeMessageStore}\n          underlayColor=\"transparent\">\n          <Text style={styles.button}>Change Message in Store</Text>\n        </TouchableHighlight>\n        <Text style={styles.welcome}>\n          {this.state.message}\n        </Text>\n      </View>\n    );\n  }\n}\n```\n\n**Question 1: `react-native` spots an error and display it in the simulator: `Error: Cannot read property 'message' of null - WelcomeComponent.js:129`. This error hasn't been spotted by `eslint`. What should I do to let `eslint` spot errors in JSX code? However `eslint`, succeeded to spot ES6 errors.**\n\n**Question 2: On the above error message, it's on the line 129 that the error has been spotted. However, this file only contains only 80 lines. I bet the mapping of the error has been done on the transcripted file (from ES6 to ES5). Is there a way to have the mapping of the errors of the original file in ES6 rather than the transcripted file?**\n\nThanks for helping me on these two questions!\n\nBest,\nJean\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/535", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/535/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/535/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/535/events", "html_url": "https://github.com/airbnb/javascript/issues/535", "id": 109546933, "node_id": "MDU6SXNzdWUxMDk1NDY5MzM=", "number": 535, "title": "Style autofixing", "user": {"login": "hshoff", "id": 339208, "node_id": "MDQ6VXNlcjMzOTIwOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/339208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hshoff", "html_url": "https://github.com/hshoff", "followers_url": "https://api.github.com/users/hshoff/followers", "following_url": "https://api.github.com/users/hshoff/following{/other_user}", "gists_url": "https://api.github.com/users/hshoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/hshoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hshoff/subscriptions", "organizations_url": "https://api.github.com/users/hshoff/orgs", "repos_url": "https://api.github.com/users/hshoff/repos", "events_url": "https://api.github.com/users/hshoff/events{/privacy}", "received_events_url": "https://api.github.com/users/hshoff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-10-02T18:31:49Z", "updated_at": "2015-10-03T01:17:17Z", "closed_at": null, "author_association": "MEMBER", "body": "Just a placeholder for now. Would love to take linting to the next step and autofix rule violations.\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/532", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/532/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/532/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/532/events", "html_url": "https://github.com/airbnb/javascript/issues/532", "id": 109185146, "node_id": "MDU6SXNzdWUxMDkxODUxNDY=", "number": 532, "title": "Best practice for wrapping function arguments", "user": {"login": "logashoff", "id": 1779095, "node_id": "MDQ6VXNlcjE3NzkwOTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1779095?v=4", "gravatar_id": "", "url": "https://api.github.com/users/logashoff", "html_url": "https://github.com/logashoff", "followers_url": "https://api.github.com/users/logashoff/followers", "following_url": "https://api.github.com/users/logashoff/following{/other_user}", "gists_url": "https://api.github.com/users/logashoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/logashoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/logashoff/subscriptions", "organizations_url": "https://api.github.com/users/logashoff/orgs", "repos_url": "https://api.github.com/users/logashoff/repos", "events_url": "https://api.github.com/users/logashoff/events{/privacy}", "received_events_url": "https://api.github.com/users/logashoff/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 18135606, "node_id": "MDU6TGFiZWwxODEzNTYwNg==", "url": "https://api.github.com/repos/airbnb/javascript/labels/question", "name": "question", "color": "cc317c", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-09-30T21:40:44Z", "updated_at": "2016-09-30T05:40:50Z", "closed_at": null, "author_association": "NONE", "body": "Style guide should advise wrapping function arguments that go over maximum line length.\n\n``` js\nfunction someVeryLongFunctionName(someVeryLongArgumentName1, someVeryLongArgumentName2, someVeryLongArgumentName3) {\n  // Function body\n}\n```\n\nor:\n\n``` js\nfunction myFunction(someArg1, someArg2, someArg3, someArg4, someArg5, someArg6, someArg7, someArg8) {\n  // Function body\n}\n```\n\nWrapped:\n\n``` js\nfunction myFunction(someArg1, someArg2, someArg3, someArg4,\n                    someArg5, someArg6, someArg7, someArg8) {\n  // Function body\n}\n```\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/531", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/531/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/531/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/531/events", "html_url": "https://github.com/airbnb/javascript/issues/531", "id": 109107930, "node_id": "MDU6SXNzdWUxMDkxMDc5MzA=", "number": 531, "title": "Boolean(\"false\") parses to true", "user": {"login": "tuhlmann", "id": 407319, "node_id": "MDQ6VXNlcjQwNzMxOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/407319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tuhlmann", "html_url": "https://github.com/tuhlmann", "followers_url": "https://api.github.com/users/tuhlmann/followers", "following_url": "https://api.github.com/users/tuhlmann/following{/other_user}", "gists_url": "https://api.github.com/users/tuhlmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/tuhlmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tuhlmann/subscriptions", "organizations_url": "https://api.github.com/users/tuhlmann/orgs", "repos_url": "https://api.github.com/users/tuhlmann/repos", "events_url": "https://api.github.com/users/tuhlmann/events{/privacy}", "received_events_url": "https://api.github.com/users/tuhlmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-09-30T14:49:14Z", "updated_at": "2015-10-01T06:15:24Z", "closed_at": "2015-09-30T17:51:18Z", "author_association": "NONE", "body": "In section \"21.6 Booleans\" you advice to use `Boolean(x)` to parse a value into a boolean.\nPlease note that parsing mostly any String results in `true`:\n\n```\nBoolean(\"false\")\n=> true\n```\n\n`null, undefined and \"\"` parse to `false`.\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/529", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/529/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/529/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/529/events", "html_url": "https://github.com/airbnb/javascript/issues/529", "id": 108855947, "node_id": "MDU6SXNzdWUxMDg4NTU5NDc=", "number": 529, "title": "Strict mode rule in ESLint", "user": {"login": "feimosi", "id": 5721520, "node_id": "MDQ6VXNlcjU3MjE1MjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5721520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/feimosi", "html_url": "https://github.com/feimosi", "followers_url": "https://api.github.com/users/feimosi/followers", "following_url": "https://api.github.com/users/feimosi/following{/other_user}", "gists_url": "https://api.github.com/users/feimosi/gists{/gist_id}", "starred_url": "https://api.github.com/users/feimosi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/feimosi/subscriptions", "organizations_url": "https://api.github.com/users/feimosi/orgs", "repos_url": "https://api.github.com/users/feimosi/repos", "events_url": "https://api.github.com/users/feimosi/events{/privacy}", "received_events_url": "https://api.github.com/users/feimosi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-09-29T12:07:56Z", "updated_at": "2015-09-29T17:24:48Z", "closed_at": "2015-09-29T16:20:35Z", "author_association": "NONE", "body": "Either I'm missing something out or there's a typo in:\nhttps://github.com/airbnb/javascript/blob/master/packages/eslint-config-airbnb/rules/strict.js#L3-L4\nWhy would we forbid using the strict mode? The comment says something completely different, so shouldn't there be a `function` value?\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/523", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/523/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/523/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/523/events", "html_url": "https://github.com/airbnb/javascript/issues/523", "id": 108326566, "node_id": "MDU6SXNzdWUxMDgzMjY1NjY=", "number": 523, "title": "Possible typo at #21.3", "user": {"login": "DannyNemer", "id": 170023, "node_id": "MDQ6VXNlcjE3MDAyMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/170023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DannyNemer", "html_url": "https://github.com/DannyNemer", "followers_url": "https://api.github.com/users/DannyNemer/followers", "following_url": "https://api.github.com/users/DannyNemer/following{/other_user}", "gists_url": "https://api.github.com/users/DannyNemer/gists{/gist_id}", "starred_url": "https://api.github.com/users/DannyNemer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DannyNemer/subscriptions", "organizations_url": "https://api.github.com/users/DannyNemer/orgs", "repos_url": "https://api.github.com/users/DannyNemer/repos", "events_url": "https://api.github.com/users/DannyNemer/events{/privacy}", "received_events_url": "https://api.github.com/users/DannyNemer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-25T13:28:04Z", "updated_at": "2015-09-25T14:21:27Z", "closed_at": "2015-09-25T14:21:27Z", "author_association": "CONTRIBUTOR", "body": "At item [21.3](https://github.com/airbnb/javascript#21.3), the guide reads:\n\n> Use `parseInt` for Numbers and always with a radix for type casting.\n\nHowever, the example displays:\n\n``` javascript\n// good\nconst val = Number(inputValue);\n\n// good\nconst val = parseInt(inputValue, 10);\n```\n\n**Question**: Is the first of the above examples supposed to be `// bad` (not `// good`), or should the guide read \"Use `parseInt` **or `Number`** for Numbers...\"?\n\nThank you.\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/522", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/522/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/522/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/522/events", "html_url": "https://github.com/airbnb/javascript/issues/522", "id": 108060786, "node_id": "MDU6SXNzdWUxMDgwNjA3ODY=", "number": 522, "title": "Switch to rules from eslint-config-defaults", "user": {"login": "taion", "id": 3112159, "node_id": "MDQ6VXNlcjMxMTIxNTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3112159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taion", "html_url": "https://github.com/taion", "followers_url": "https://api.github.com/users/taion/followers", "following_url": "https://api.github.com/users/taion/following{/other_user}", "gists_url": "https://api.github.com/users/taion/gists{/gist_id}", "starred_url": "https://api.github.com/users/taion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taion/subscriptions", "organizations_url": "https://api.github.com/users/taion/orgs", "repos_url": "https://api.github.com/users/taion/repos", "events_url": "https://api.github.com/users/taion/events{/privacy}", "received_events_url": "https://api.github.com/users/taion/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-24T05:25:16Z", "updated_at": "2015-09-27T19:29:48Z", "closed_at": "2015-09-27T19:29:48Z", "author_association": "CONTRIBUTOR", "body": "@justjake: Do you still plan to proceed with https://github.com/airbnb/javascript/issues/454#issuecomment-134410088? If so, are you looking for a PR to do this?\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/520", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/520/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/520/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/520/events", "html_url": "https://github.com/airbnb/javascript/issues/520", "id": 107509013, "node_id": "MDU6SXNzdWUxMDc1MDkwMTM=", "number": 520, "title": "Best practice regarding conditional JSX", "user": {"login": "AugustinLF", "id": 5271169, "node_id": "MDQ6VXNlcjUyNzExNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5271169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AugustinLF", "html_url": "https://github.com/AugustinLF", "followers_url": "https://api.github.com/users/AugustinLF/followers", "following_url": "https://api.github.com/users/AugustinLF/following{/other_user}", "gists_url": "https://api.github.com/users/AugustinLF/gists{/gist_id}", "starred_url": "https://api.github.com/users/AugustinLF/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AugustinLF/subscriptions", "organizations_url": "https://api.github.com/users/AugustinLF/orgs", "repos_url": "https://api.github.com/users/AugustinLF/repos", "events_url": "https://api.github.com/users/AugustinLF/events{/privacy}", "received_events_url": "https://api.github.com/users/AugustinLF/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 18135606, "node_id": "MDU6TGFiZWwxODEzNTYwNg==", "url": "https://api.github.com/repos/airbnb/javascript/labels/question", "name": "question", "color": "cc317c", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2015-09-21T13:15:54Z", "updated_at": "2018-02-18T05:49:06Z", "closed_at": null, "author_association": "NONE", "body": "There seems to be several schools regarding the way to write conditional JSX. React's documentation suggests [ternary expressions or functions](https://facebook.github.io/react/tips/if-else-in-JSX.html), there are packages using using conditional tags, such as [jsx-control-statement](https://www.npmjs.com/package/jsx-control-statements).\n\nI settled with ternary when there's not too much logic or when the components are not too big (I then fallback to functions), but ternary expressions can easily get hard to read, and the syntax/spacing really differs, a lot. You can find things without any `()` around elements, or with weird indentation, to things like that, which readable, feel a bit verbose:\n\n``` JSX\n this.props.condition === 'blah' ? (\n    <span>IfBlock</span>\n  ) : (\n    <span>ElseBlock</span>\n  )\n```\n\nDo you folks have an opinion on that?\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/515", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/515/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/515/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/515/events", "html_url": "https://github.com/airbnb/javascript/issues/515", "id": 106895326, "node_id": "MDU6SXNzdWUxMDY4OTUzMjY=", "number": 515, "title": "'id-length' is invalid", "user": {"login": "ariporad", "id": 1817508, "node_id": "MDQ6VXNlcjE4MTc1MDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1817508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ariporad", "html_url": "https://github.com/ariporad", "followers_url": "https://api.github.com/users/ariporad/followers", "following_url": "https://api.github.com/users/ariporad/following{/other_user}", "gists_url": "https://api.github.com/users/ariporad/gists{/gist_id}", "starred_url": "https://api.github.com/users/ariporad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ariporad/subscriptions", "organizations_url": "https://api.github.com/users/ariporad/orgs", "repos_url": "https://api.github.com/users/ariporad/repos", "events_url": "https://api.github.com/users/ariporad/events{/privacy}", "received_events_url": "https://api.github.com/users/ariporad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-17T01:30:53Z", "updated_at": "2015-09-24T19:25:38Z", "closed_at": "2015-09-24T19:25:38Z", "author_association": "CONTRIBUTOR", "body": "Hi,\n\nI cloned this repo and (installed the dependencies, and) ran `npm run lint`, and I'm getting this error:\n\n> /Users/Ari/Developer/airbnb-js-style/packages/eslint-config-airbnb/node_modules/eslint/lib/config.js:141\n>                     throw e;\n>                     ^\n> \n> Error: eslint-config-airbnb:\n>   Configuration for rule \"id-length\" is invalid:\n>   Value \"data[\"1\"].properties\" has additional properties.\n> \n> Referenced from: /Users/Ari/Developer/airbnb-js-style/packages/eslint-config-airbnb/.eslintrc\n>     at validateRuleOptions (/Users/Ari/Developer/airbnb-js-style/packages/eslint-config-airbnb/node_modules/eslint/lib/config-validator.js:88:15)\n>     at /Users/Ari/Developer/airbnb-js-style/packages/eslint-config-airbnb/node_modules/eslint/lib/config-validator.js:101:13\n>     at Array.forEach (native)\n>     at Object.validate (/Users/Ari/Developer/airbnb-js-style/packages/eslint-config-airbnb/node_modules/eslint/lib/config-validator.js: 100:35)\n>     at loadConfig (/Users/Ari/Developer/airbnb-js-style/packages/eslint-config-airbnb/node_modules/eslint/lib/config.js:107:19)\n>     at /Users/Ari/Developer/airbnb-js-style/packages/eslint-config-airbnb/node_modules/eslint/lib/config.js:135:46\n>     at Array.reduceRight (native)\n>     at loadConfig (/Users/Ari/Developer/airbnb-js-style/packages/eslint-config-airbnb/node_modules/eslint/lib/config.js:119:36)\n>     at getLocalConfig (/Users/Ari/Developer/airbnb-js-style/packages/eslint-config-airbnb/node_modules/eslint/lib/config.js:243:23)\n>     at Config.getConfig (/Users/Ari/Developer/airbnb-js-style/packages/eslint-config-airbnb/node_modules/eslint/lib/config.js:371:22)\n\nI'm not sure what's causing it. I've just spend the past hour debugging it.\n"}]