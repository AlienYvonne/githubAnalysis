[{"url": "https://api.github.com/repos/airbnb/javascript/issues/124", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/124/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/124/events", "html_url": "https://github.com/airbnb/javascript/issues/124", "id": 23560814, "node_id": "MDU6SXNzdWUyMzU2MDgxNA==", "number": 124, "title": "Add regex section", "user": {"login": "zdroid", "id": 2725611, "node_id": "MDQ6VXNlcjI3MjU2MTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/2725611?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdroid", "html_url": "https://github.com/zdroid", "followers_url": "https://api.github.com/users/zdroid/followers", "following_url": "https://api.github.com/users/zdroid/following{/other_user}", "gists_url": "https://api.github.com/users/zdroid/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdroid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdroid/subscriptions", "organizations_url": "https://api.github.com/users/zdroid/orgs", "repos_url": "https://api.github.com/users/zdroid/repos", "events_url": "https://api.github.com/users/zdroid/events{/privacy}", "received_events_url": "https://api.github.com/users/zdroid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-12-02T09:33:40Z", "updated_at": "2014-02-12T13:58:16Z", "closed_at": "2014-02-12T13:58:16Z", "author_association": "NONE", "body": "It would be nice to have _Regular Expressions_ section into style guide.\n\nUseful informations:\n- what form to use when write regex\n- variable declarations with regex\n- when to use and when to avoid regex\n\nThanks in advance.\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/118", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/118/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/118/events", "html_url": "https://github.com/airbnb/javascript/issues/118", "id": 22982324, "node_id": "MDU6SXNzdWUyMjk4MjMyNA==", "number": 118, "title": "Eval statement", "user": {"login": "ConnorAtherton", "id": 3777511, "node_id": "MDQ6VXNlcjM3Nzc1MTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3777511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ConnorAtherton", "html_url": "https://github.com/ConnorAtherton", "followers_url": "https://api.github.com/users/ConnorAtherton/followers", "following_url": "https://api.github.com/users/ConnorAtherton/following{/other_user}", "gists_url": "https://api.github.com/users/ConnorAtherton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ConnorAtherton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ConnorAtherton/subscriptions", "organizations_url": "https://api.github.com/users/ConnorAtherton/orgs", "repos_url": "https://api.github.com/users/ConnorAtherton/repos", "events_url": "https://api.github.com/users/ConnorAtherton/events{/privacy}", "received_events_url": "https://api.github.com/users/ConnorAtherton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 18135604, "node_id": "MDU6TGFiZWwxODEzNTYwNA==", "url": "https://api.github.com/repos/airbnb/javascript/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-11-20T10:18:34Z", "updated_at": "2015-12-23T20:36:58Z", "closed_at": "2015-12-23T20:36:58Z", "author_association": "NONE", "body": "Can we put in a small paragraph that warns against the use of eval with a few reasons why please.\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/115", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/115/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/115/events", "html_url": "https://github.com/airbnb/javascript/issues/115", "id": 22793233, "node_id": "MDU6SXNzdWUyMjc5MzIzMw==", "number": 115, "title": "Numbers casting: in current chrome parseInt works much faster then bitshift", "user": {"login": "nkbt", "id": 175264, "node_id": "MDQ6VXNlcjE3NTI2NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/175264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nkbt", "html_url": "https://github.com/nkbt", "followers_url": "https://api.github.com/users/nkbt/followers", "following_url": "https://api.github.com/users/nkbt/following{/other_user}", "gists_url": "https://api.github.com/users/nkbt/gists{/gist_id}", "starred_url": "https://api.github.com/users/nkbt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nkbt/subscriptions", "organizations_url": "https://api.github.com/users/nkbt/orgs", "repos_url": "https://api.github.com/users/nkbt/repos", "events_url": "https://api.github.com/users/nkbt/events{/privacy}", "received_events_url": "https://api.github.com/users/nkbt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-11-17T08:21:09Z", "updated_at": "2013-11-19T23:40:26Z", "closed_at": "2013-11-19T23:40:26Z", "author_association": "NONE", "body": "According to mentioned in article: http://jsperf.com/coercion-vs-casting/3\n\n![Screenshot](http://dl.dropbox.com/u/932526/Github/20131117-191707.png)\n\nAnd this test http://jsperf.com/best-of-string-to-number-conversion/10 shows same results.\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/112", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/112/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/112/events", "html_url": "https://github.com/airbnb/javascript/issues/112", "id": 22749163, "node_id": "MDU6SXNzdWUyMjc0OTE2Mw==", "number": 112, "title": "2 whitespaces ?", "user": {"login": "Nek-", "id": 972456, "node_id": "MDQ6VXNlcjk3MjQ1Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/972456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nek-", "html_url": "https://github.com/Nek-", "followers_url": "https://api.github.com/users/Nek-/followers", "following_url": "https://api.github.com/users/Nek-/following{/other_user}", "gists_url": "https://api.github.com/users/Nek-/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nek-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nek-/subscriptions", "organizations_url": "https://api.github.com/users/Nek-/orgs", "repos_url": "https://api.github.com/users/Nek-/repos", "events_url": "https://api.github.com/users/Nek-/events{/privacy}", "received_events_url": "https://api.github.com/users/Nek-/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-11-15T18:20:29Z", "updated_at": "2013-11-15T22:06:38Z", "closed_at": "2013-11-15T21:34:09Z", "author_association": "NONE", "body": "The most popular coding standard for PHP (applicable to other langages in differents levels) is clear: **4 spaces**\n\n**_There is only one possible conclusion: Something's wrong in the matrix.**_\n\nWhat about your thing here:\n\n``` javascript\nvar items        = getItems(),\n    dragonball   = 'z',\n    goSportsTeam = true;\n```\n\nI count 4 spaces. 4, of course, because `\"var \".length` is 4.\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/111", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/111/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/111/events", "html_url": "https://github.com/airbnb/javascript/issues/111", "id": 22723002, "node_id": "MDU6SXNzdWUyMjcyMzAwMg==", "number": 111, "title": "Lots of overlap between airbnb JavaScript & Idiomatic JS - perhaps merge?", "user": {"login": "mikemaccana", "id": 172594, "node_id": "MDQ6VXNlcjE3MjU5NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/172594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikemaccana", "html_url": "https://github.com/mikemaccana", "followers_url": "https://api.github.com/users/mikemaccana/followers", "following_url": "https://api.github.com/users/mikemaccana/following{/other_user}", "gists_url": "https://api.github.com/users/mikemaccana/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikemaccana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikemaccana/subscriptions", "organizations_url": "https://api.github.com/users/mikemaccana/orgs", "repos_url": "https://api.github.com/users/mikemaccana/repos", "events_url": "https://api.github.com/users/mikemaccana/events{/privacy}", "received_events_url": "https://api.github.com/users/mikemaccana/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 18135606, "node_id": "MDU6TGFiZWwxODEzNTYwNg==", "url": "https://api.github.com/repos/airbnb/javascript/labels/question", "name": "question", "color": "cc317c", "default": true}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-11-15T09:56:44Z", "updated_at": "2015-04-14T19:18:30Z", "closed_at": "2015-04-14T17:18:13Z", "author_association": "NONE", "body": "[Idiomatic.JS](https://github.com/rwaldron/idiomatic.js), derived from the JQuery style guidelines, is already a popular style with a _lot_ of contribution from the wider JS community - the airbnb guide seems quite similar but a little shorter. \n\nThere's good stuff in each that is missing from the other.\n\nBoth guides have been widely translated, but into a different set of languages. \n\nCould it be worth merging the airbnb styleguide into Idiomatic? Or vice versa?\n\nJust a thought.\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/110", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/110/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/110/events", "html_url": "https://github.com/airbnb/javascript/issues/110", "id": 22710663, "node_id": "MDU6SXNzdWUyMjcxMDY2Mw==", "number": 110, "title": "Why should strings be ' ' and not \" \"?", "user": {"login": "GurudayalKhalsa", "id": 2160566, "node_id": "MDQ6VXNlcjIxNjA1NjY=", "avatar_url": "https://avatars0.githubusercontent.com/u/2160566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GurudayalKhalsa", "html_url": "https://github.com/GurudayalKhalsa", "followers_url": "https://api.github.com/users/GurudayalKhalsa/followers", "following_url": "https://api.github.com/users/GurudayalKhalsa/following{/other_user}", "gists_url": "https://api.github.com/users/GurudayalKhalsa/gists{/gist_id}", "starred_url": "https://api.github.com/users/GurudayalKhalsa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GurudayalKhalsa/subscriptions", "organizations_url": "https://api.github.com/users/GurudayalKhalsa/orgs", "repos_url": "https://api.github.com/users/GurudayalKhalsa/repos", "events_url": "https://api.github.com/users/GurudayalKhalsa/events{/privacy}", "received_events_url": "https://api.github.com/users/GurudayalKhalsa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-11-15T03:26:58Z", "updated_at": "2018-03-12T15:58:12Z", "closed_at": "2013-11-15T21:37:29Z", "author_association": "NONE", "body": ""}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/109", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/109/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/109/events", "html_url": "https://github.com/airbnb/javascript/issues/109", "id": 22618877, "node_id": "MDU6SXNzdWUyMjYxODg3Nw==", "number": 109, "title": "Bitshift performance vs 64bit numbers", "user": {"login": "bc99", "id": 1482269, "node_id": "MDQ6VXNlcjE0ODIyNjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1482269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bc99", "html_url": "https://github.com/bc99", "followers_url": "https://api.github.com/users/bc99/followers", "following_url": "https://api.github.com/users/bc99/following{/other_user}", "gists_url": "https://api.github.com/users/bc99/gists{/gist_id}", "starred_url": "https://api.github.com/users/bc99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bc99/subscriptions", "organizations_url": "https://api.github.com/users/bc99/orgs", "repos_url": "https://api.github.com/users/bc99/repos", "events_url": "https://api.github.com/users/bc99/events{/privacy}", "received_events_url": "https://api.github.com/users/bc99/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-11-13T20:15:42Z", "updated_at": "2013-11-14T22:15:34Z", "closed_at": "2013-11-14T22:02:59Z", "author_association": "NONE", "body": "Every number is stored with 64bit, except you are doing bit shifting. Then javascript stores the number into a 32bit integer. The result of this: You get negative or just wrong numbers when you are shifting a big js-representing integer.\nIf you really think bit shift is a good way to improve performance, make sure the numbers are not bigger than 32 bit.\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/105", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/105/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/105/events", "html_url": "https://github.com/airbnb/javascript/issues/105", "id": 22438806, "node_id": "MDU6SXNzdWUyMjQzODgwNg==", "number": 105, "title": "Add .jshintrc config file to be compliant with conventions", "user": {"login": "gargol", "id": 675397, "node_id": "MDQ6VXNlcjY3NTM5Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/675397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gargol", "html_url": "https://github.com/gargol", "followers_url": "https://api.github.com/users/gargol/followers", "following_url": "https://api.github.com/users/gargol/following{/other_user}", "gists_url": "https://api.github.com/users/gargol/gists{/gist_id}", "starred_url": "https://api.github.com/users/gargol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gargol/subscriptions", "organizations_url": "https://api.github.com/users/gargol/orgs", "repos_url": "https://api.github.com/users/gargol/repos", "events_url": "https://api.github.com/users/gargol/events{/privacy}", "received_events_url": "https://api.github.com/users/gargol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-11-11T10:05:50Z", "updated_at": "2013-11-14T16:10:32Z", "closed_at": "2013-11-14T16:10:18Z", "author_association": "NONE", "body": "I think that would be a good idea to create a <code>.jshintrc</code> config file to describe all these conventions. \n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/102", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/102/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/102/events", "html_url": "https://github.com/airbnb/javascript/issues/102", "id": 22412698, "node_id": "MDU6SXNzdWUyMjQxMjY5OA==", "number": 102, "title": "Why does JavaScript need a style guide?", "user": {"login": "JacksonGariety", "id": 1356828, "node_id": "MDQ6VXNlcjEzNTY4Mjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1356828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JacksonGariety", "html_url": "https://github.com/JacksonGariety", "followers_url": "https://api.github.com/users/JacksonGariety/followers", "following_url": "https://api.github.com/users/JacksonGariety/following{/other_user}", "gists_url": "https://api.github.com/users/JacksonGariety/gists{/gist_id}", "starred_url": "https://api.github.com/users/JacksonGariety/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JacksonGariety/subscriptions", "organizations_url": "https://api.github.com/users/JacksonGariety/orgs", "repos_url": "https://api.github.com/users/JacksonGariety/repos", "events_url": "https://api.github.com/users/JacksonGariety/events{/privacy}", "received_events_url": "https://api.github.com/users/JacksonGariety/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 43, "created_at": "2013-11-10T17:47:01Z", "updated_at": "2017-06-22T16:19:19Z", "closed_at": "2013-11-12T02:00:00Z", "author_association": "NONE", "body": "One of my favorite parts about the JavaScript community is that people choose to write it in so many different ways.\n\nWhy do you want to ruin that with a style guide? \n\nImagine if when Picasso was learning to paint, we told him what style he should paint in. Would we have cubism?\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/101", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/101/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/101/events", "html_url": "https://github.com/airbnb/javascript/issues/101", "id": 22361840, "node_id": "MDU6SXNzdWUyMjM2MTg0MA==", "number": 101, "title": "Mighty Spring is using this style guide!", "user": {"login": "ultimatedelman", "id": 453402, "node_id": "MDQ6VXNlcjQ1MzQwMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/453402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ultimatedelman", "html_url": "https://github.com/ultimatedelman", "followers_url": "https://api.github.com/users/ultimatedelman/followers", "following_url": "https://api.github.com/users/ultimatedelman/following{/other_user}", "gists_url": "https://api.github.com/users/ultimatedelman/gists{/gist_id}", "starred_url": "https://api.github.com/users/ultimatedelman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ultimatedelman/subscriptions", "organizations_url": "https://api.github.com/users/ultimatedelman/orgs", "repos_url": "https://api.github.com/users/ultimatedelman/repos", "events_url": "https://api.github.com/users/ultimatedelman/events{/privacy}", "received_events_url": "https://api.github.com/users/ultimatedelman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-11-08T20:26:44Z", "updated_at": "2013-11-09T20:04:28Z", "closed_at": "2013-11-09T20:04:28Z", "author_association": "CONTRIBUTOR", "body": "We're already conforming to all of these standards, except for leading commas ;) Thanks for the great guide!\n\nPlease add us to your list! http://www.mightyspring.com\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/100", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/100/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/100/events", "html_url": "https://github.com/airbnb/javascript/issues/100", "id": 22361079, "node_id": "MDU6SXNzdWUyMjM2MTA3OQ==", "number": 100, "title": "Leading Commas", "user": {"login": "ultimatedelman", "id": 453402, "node_id": "MDQ6VXNlcjQ1MzQwMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/453402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ultimatedelman", "html_url": "https://github.com/ultimatedelman", "followers_url": "https://api.github.com/users/ultimatedelman/followers", "following_url": "https://api.github.com/users/ultimatedelman/following{/other_user}", "gists_url": "https://api.github.com/users/ultimatedelman/gists{/gist_id}", "starred_url": "https://api.github.com/users/ultimatedelman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ultimatedelman/subscriptions", "organizations_url": "https://api.github.com/users/ultimatedelman/orgs", "repos_url": "https://api.github.com/users/ultimatedelman/repos", "events_url": "https://api.github.com/users/ultimatedelman/events{/privacy}", "received_events_url": "https://api.github.com/users/ultimatedelman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-11-08T20:13:44Z", "updated_at": "2013-11-08T20:30:43Z", "closed_at": "2013-11-08T20:30:43Z", "author_association": "CONTRIBUTOR", "body": "This is more of a personal preference than anything else. Of course, you're free to implement whatever you'd like, but declaring leading commas as unilaterally \"bad\" is disingenuous and misleading (no pun intended). Leading commas definitely have their pros as much as trailing commas have their cons.\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/98", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/98/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/98/events", "html_url": "https://github.com/airbnb/javascript/issues/98", "id": 22308758, "node_id": "MDU6SXNzdWUyMjMwODc1OA==", "number": 98, "title": "Note on the \"Don't use reserved words as keys\"", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-11-08T01:04:54Z", "updated_at": "2013-11-10T11:00:59Z", "closed_at": "2013-11-08T02:54:43Z", "author_association": "NONE", "body": "\"Don't use reserved words as keys. It won't work in IE8.\"\n\n```\n//....\nvar superman = {\n  default: { clark: 'kent' },\n  private: true\n};\n```\n\nThis is stupid. Well it is not stupid in the context where you want to support IE8, but to sacrifice code quality because of inferior JS interpreter is stupid. The code is not wrong, IE8 is wrong for having dumb JS compiler. You shouldn't say that it is \"good\" for people to make sacrifices to their code to support stupid software. The good thing is that MS fixes IE. At least you should note this and mark this guideline as transient. Further IE8 is old even by today's standards and claiming such practice as good where nobody will need to consider IE8 very soon (or IMO nobody need to consider IE9 already but this is off topic) is not good.\n\nBTW the Rhino JS engine is also dumb regarding property names so using such names causes problems with YUI compressor. But this is easily worked around by placing the property in quotes.\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/97", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/97/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/97/events", "html_url": "https://github.com/airbnb/javascript/issues/97", "id": 22308353, "node_id": "MDU6SXNzdWUyMjMwODM1Mw==", "number": 97, "title": "The boolean \"good\" casting could be better", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2013-11-08T00:54:50Z", "updated_at": "2018-03-21T23:46:27Z", "closed_at": "2015-04-02T06:05:14Z", "author_association": "NONE", "body": "I wouldn't call this \"good\".\n\n``` js\nvar age = 0;\n//...\nvar hasAge = !!age;\n```\n\nIf you think about it there is no way to cast number to truth. All numbers are equally true, they are just numbers. The logical negation operator converts from numbers to bools but this is just a dumb legacy from C where there are no real bools and convenience but has nothing to do with good practice. And further - double negation a good practice - are you serious? This damages readability so much, it could really confuse young people making them wonder if this is some kind of new operator and even experienced developers will need to think about what it does. And if you are debugging and you are in some kind of confusion already this will only add to the confusion. Then you need to be aware of all language specifics like what negation does to strings, empty strings, arrays, empty arrays, objects, empty objects, bools, numbers, specific numbers. If it was strongly typed language like C it is better because you know the type of \"age\", but in JS, and particularly in debugging/undocumented/confused situation you don't know the type of age and the code will produce different results.\n\nThe right thing to do would be.\n\n```\n// bad.. just think about it - what does \"not age\" even means?\n// further the intention is not clear\nif ( !age ) {}\n\n// good, the intention is perfectly clear\n// further the code will work even with wrong types\nif ( age > 0 ) {}\nif ( age !== 0 ) {}\n\n// good\nvar hasAge = (age > 0);\n```\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/96", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/96/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/96/events", "html_url": "https://github.com/airbnb/javascript/issues/96", "id": 22307744, "node_id": "MDU6SXNzdWUyMjMwNzc0NA==", "number": 96, "title": "Optimization and consistency for the string example", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-11-08T00:39:44Z", "updated_at": "2015-04-02T06:06:26Z", "closed_at": "2015-04-02T06:06:26Z", "author_association": "NONE", "body": "Your \"good\" string example. Could be optimized.\nFirst of all you are using `items[i] = ...` and in another example you point this is \"bad\" and say the \"good\" is to use `items.push()`. Then since you already know the size of the array you could pre-allocate with `items = new Array( length );`. Although I must point that this may actually degrade performance in some cases where JS engines are optimized for \"bad\" practices and when you do the right thing you may actually break the optimization.\n\n```\n// good\nfunction inbox(messages) {\n  items = [];\n\n  for (i = 0; i < length; i++) {\n    items[i] = messages[i].message;\n  }\n\n  return '<ul><li>' + items.join('</li><li>') + '</li></ul>';\n}\n```\n"}]