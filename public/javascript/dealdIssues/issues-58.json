[{"url": "https://api.github.com/repos/airbnb/javascript/issues/64", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/64/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/64/events", "html_url": "https://github.com/airbnb/javascript/issues/64", "id": 12558389, "node_id": "MDU6SXNzdWUxMjU1ODM4OQ==", "number": 64, "title": "Request to add Javascript closure style guide", "user": {"login": "anup4khandelwal", "id": 170814, "node_id": "MDQ6VXNlcjE3MDgxNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/170814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anup4khandelwal", "html_url": "https://github.com/anup4khandelwal", "followers_url": "https://api.github.com/users/anup4khandelwal/followers", "following_url": "https://api.github.com/users/anup4khandelwal/following{/other_user}", "gists_url": "https://api.github.com/users/anup4khandelwal/gists{/gist_id}", "starred_url": "https://api.github.com/users/anup4khandelwal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anup4khandelwal/subscriptions", "organizations_url": "https://api.github.com/users/anup4khandelwal/orgs", "repos_url": "https://api.github.com/users/anup4khandelwal/repos", "events_url": "https://api.github.com/users/anup4khandelwal/events{/privacy}", "received_events_url": "https://api.github.com/users/anup4khandelwal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-03-28T10:50:30Z", "updated_at": "2013-09-16T10:14:18Z", "closed_at": "2013-07-02T17:34:24Z", "author_association": "NONE", "body": "Can you please add style guide for Javascript closure. It will be very helpful.\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/62", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/62/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/62/events", "html_url": "https://github.com/airbnb/javascript/issues/62", "id": 12057033, "node_id": "MDU6SXNzdWUxMjA1NzAzMw==", "number": 62, "title": "What about code Annotations like (TODO, FIXME...) ?", "user": {"login": "ButuzGOL", "id": 196564, "node_id": "MDQ6VXNlcjE5NjU2NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/196564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ButuzGOL", "html_url": "https://github.com/ButuzGOL", "followers_url": "https://api.github.com/users/ButuzGOL/followers", "following_url": "https://api.github.com/users/ButuzGOL/following{/other_user}", "gists_url": "https://api.github.com/users/ButuzGOL/gists{/gist_id}", "starred_url": "https://api.github.com/users/ButuzGOL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ButuzGOL/subscriptions", "organizations_url": "https://api.github.com/users/ButuzGOL/orgs", "repos_url": "https://api.github.com/users/ButuzGOL/repos", "events_url": "https://api.github.com/users/ButuzGOL/events{/privacy}", "received_events_url": "https://api.github.com/users/ButuzGOL/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-03-15T10:07:35Z", "updated_at": "2013-03-17T22:47:07Z", "closed_at": "2013-03-17T22:46:36Z", "author_association": "NONE", "body": "It would be good if https://github.com/polarmobile/coffeescript-style-guide#annotations will be added to repo or with some changes ? What do you think ?\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/61", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/61/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/61/events", "html_url": "https://github.com/airbnb/javascript/issues/61", "id": 11984666, "node_id": "MDU6SXNzdWUxMTk4NDY2Ng==", "number": 61, "title": "Allow reserved words for properties?", "user": {"login": "ianb", "id": 44390, "node_id": "MDQ6VXNlcjQ0Mzkw", "avatar_url": "https://avatars1.githubusercontent.com/u/44390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianb", "html_url": "https://github.com/ianb", "followers_url": "https://api.github.com/users/ianb/followers", "following_url": "https://api.github.com/users/ianb/following{/other_user}", "gists_url": "https://api.github.com/users/ianb/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianb/subscriptions", "organizations_url": "https://api.github.com/users/ianb/orgs", "repos_url": "https://api.github.com/users/ianb/repos", "events_url": "https://api.github.com/users/ianb/events{/privacy}", "received_events_url": "https://api.github.com/users/ianb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-03-13T17:35:48Z", "updated_at": "2016-08-03T21:53:09Z", "closed_at": "2016-08-03T21:53:09Z", "author_association": "NONE", "body": "Under [Objects](https://github.com/airbnb/javascript#objects) it says you shouldn't use reserved words.  I'm not sure this is important, though avoiding them might make sense for readability.  At least using `klass` instead of `class` would seem wrong to me, as you are corrupting a word instead of finding a readable synonym (like `type`).\n\nRight now you can use just about anything.  E.g., `test = {function: 1}; test.function === 1` \u2013but additionally I think we can be confident this will continue to be the case.  IndexedDB uses the method `cursor.continue()` which isn't just a future-protected reserved word (like `class`) but a reserved word _right now_.  But IndexedDB represents current API design by people involved in the standardization process.\n\nI think it's questionable from a readability point of view to use current keywords, but I don't see any reason at all to avoid [words reserved for possible future use](https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Reserved_Words#Words_reserved_for_possible_future_use) (`class` and `private`, as used in the example, are both examples of that).\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/60", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/60/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/60/events", "html_url": "https://github.com/airbnb/javascript/issues/60", "id": 11959049, "node_id": "MDU6SXNzdWUxMTk1OTA0OQ==", "number": 60, "title": "Say something about undefined", "user": {"login": "ianb", "id": 44390, "node_id": "MDQ6VXNlcjQ0Mzkw", "avatar_url": "https://avatars1.githubusercontent.com/u/44390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianb", "html_url": "https://github.com/ianb", "followers_url": "https://api.github.com/users/ianb/followers", "following_url": "https://api.github.com/users/ianb/following{/other_user}", "gists_url": "https://api.github.com/users/ianb/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianb/subscriptions", "organizations_url": "https://api.github.com/users/ianb/orgs", "repos_url": "https://api.github.com/users/ianb/repos", "events_url": "https://api.github.com/users/ianb/events{/privacy}", "received_events_url": "https://api.github.com/users/ianb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 26, "created_at": "2013-03-13T03:48:45Z", "updated_at": "2018-06-06T09:39:41Z", "closed_at": null, "author_association": "NONE", "body": "I find people treat `undefined` incorrectly a lot.  It's a value, you can use it, test for it, etc, but people frequently use `typeof x == \"undefined\"` when they don't need to.\n\nI made a [fork](https://github.com/ianb/javascript) with a big changeset of my own opinions, but here's the section I wrote about undefined:\n\n---\n\n``````\n## <a name='undefined'>undefined</a>\n\n  - `undefined` is an object.  You should use it as an object.  You can test for it.  For instance:\n\n    ```javascript\n    // good\n    function pow(a, b) {\n      if (b === undefined) {\n        b = 1;\n      }\n      return Math.pow(a, b);\n    }\n\n    // bad\n    function pow(a, b) {\n      if (typeof b == \"undefined\") {\n        b = 1;\n      }\n      return Math.pow(a, b);\n    }\n    ```\n\n  - *Only* use `typeof x == \"undefined\"` when the variable (`x`) may not be declared, and it would be an error to test `x === undefined`:\n\n    ```javascript\n    if (typeof Module == \"undefined\") {\n      Module = {};\n    }\n\n    // But also okay, for browser-only code:\n    if (window.Module === undefined) {\n      Module = {};\n    }\n    ```\n\n    Note that you can't use `window` in Node.js; if you think your code could be used in a server context you should use the first form.\n``````\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/58", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/58/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/58/events", "html_url": "https://github.com/airbnb/javascript/issues/58", "id": 11756417, "node_id": "MDU6SXNzdWUxMTc1NjQxNw==", "number": 58, "title": "\"jQuery Find vs Context, Selector\" performance test is misleading", "user": {"login": "roberkules", "id": 494263, "node_id": "MDQ6VXNlcjQ5NDI2Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/494263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roberkules", "html_url": "https://github.com/roberkules", "followers_url": "https://api.github.com/users/roberkules/followers", "following_url": "https://api.github.com/users/roberkules/following{/other_user}", "gists_url": "https://api.github.com/users/roberkules/gists{/gist_id}", "starred_url": "https://api.github.com/users/roberkules/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roberkules/subscriptions", "organizations_url": "https://api.github.com/users/roberkules/orgs", "repos_url": "https://api.github.com/users/roberkules/repos", "events_url": "https://api.github.com/users/roberkules/events{/privacy}", "received_events_url": "https://api.github.com/users/roberkules/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-03-07T12:01:01Z", "updated_at": "2015-04-02T05:46:56Z", "closed_at": "2015-04-02T05:46:56Z", "author_association": "NONE", "body": "Hi,\n\nabout the \"jQuery Find vs Context, Selector\" test linked in the performance section.\nhttp://jsperf.com/jquery-find-vs-context-sel/13\n\nI just took the test @ jsPerf, expecting a somewhat similar result as find/context internally end up using the same method (if I remember correctly).\n\nBut the test is misleading, comparing 2 uneven tests.\n\n$article = jQuery object containing 10 article nodes\narticle = only one single article node\n\nSo the only things you can compare in the test are:\n- \"find method (node context)\" (48,378) vs \"context node\" (46,031)\n- \"find method (jquery context)\" (6,679) vs \"context jQuery\" (7,030)\n\n\"context jQuery[0]\" is basically the same as \"context node\"\n\nTL;DR\nThe linked test is misleading as it's comparing different things, so let's either add a new revision with an accurate comparison or just remove the link?!\n\nBTW, we're about 95% compliant to your style guide, trying now to get to 100%. Great work from you guys!\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/55", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/55/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/55/events", "html_url": "https://github.com/airbnb/javascript/issues/55", "id": 11517177, "node_id": "MDU6SXNzdWUxMTUxNzE3Nw==", "number": 55, "title": "Space before left parenthesis in anonymous function literals", "user": {"login": "siclait", "id": 546332, "node_id": "MDQ6VXNlcjU0NjMzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/546332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siclait", "html_url": "https://github.com/siclait", "followers_url": "https://api.github.com/users/siclait/followers", "following_url": "https://api.github.com/users/siclait/following{/other_user}", "gists_url": "https://api.github.com/users/siclait/gists{/gist_id}", "starred_url": "https://api.github.com/users/siclait/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siclait/subscriptions", "organizations_url": "https://api.github.com/users/siclait/orgs", "repos_url": "https://api.github.com/users/siclait/repos", "events_url": "https://api.github.com/users/siclait/events{/privacy}", "received_events_url": "https://api.github.com/users/siclait/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2013-02-28T20:11:42Z", "updated_at": "2016-04-26T09:07:30Z", "closed_at": "2015-12-23T20:37:58Z", "author_association": "NONE", "body": "From Crockford:\n\n> If a function literal is anonymous, there should be one space between the word function and the ( (left parenthesis). If the space is omited, then it can appear that the function's name is function, which is an incorrect reading.\n\n``` javascript\ndiv.onclick = function (e) {\n  return false;\n};\n\nthat = {\n  method: function () {\n    return this.datum;\n  },\n  datum: 0\n};\n```\n\nSource: [Code Conventions for the JavaScript Programming Language](http://javascript.crockford.com/code.html)\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/54", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/54/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/54/events", "html_url": "https://github.com/airbnb/javascript/issues/54", "id": 11514627, "node_id": "MDU6SXNzdWUxMTUxNDYyNw==", "number": 54, "title": "Reasons missing", "user": {"login": "tirams", "id": 1139398, "node_id": "MDQ6VXNlcjExMzkzOTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1139398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirams", "html_url": "https://github.com/tirams", "followers_url": "https://api.github.com/users/tirams/followers", "following_url": "https://api.github.com/users/tirams/following{/other_user}", "gists_url": "https://api.github.com/users/tirams/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirams/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirams/subscriptions", "organizations_url": "https://api.github.com/users/tirams/orgs", "repos_url": "https://api.github.com/users/tirams/repos", "events_url": "https://api.github.com/users/tirams/events{/privacy}", "received_events_url": "https://api.github.com/users/tirams/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-02-28T19:14:10Z", "updated_at": "2013-08-07T20:33:11Z", "closed_at": "2013-08-07T20:33:11Z", "author_association": "NONE", "body": "It would be nice if each rule had a reason why one style was preferred over another. i.e. performance, js good parts reference etc. \n\ni.e. instead of just\n       Don't do X \nstate:\n       Don't do X because Y and Z\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/52", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/52/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/52/events", "html_url": "https://github.com/airbnb/javascript/issues/52", "id": 11248012, "node_id": "MDU6SXNzdWUxMTI0ODAxMg==", "number": 52, "title": "callback && callback();", "user": {"login": "Znarkus", "id": 168042, "node_id": "MDQ6VXNlcjE2ODA0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/168042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Znarkus", "html_url": "https://github.com/Znarkus", "followers_url": "https://api.github.com/users/Znarkus/followers", "following_url": "https://api.github.com/users/Znarkus/following{/other_user}", "gists_url": "https://api.github.com/users/Znarkus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Znarkus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Znarkus/subscriptions", "organizations_url": "https://api.github.com/users/Znarkus/orgs", "repos_url": "https://api.github.com/users/Znarkus/repos", "events_url": "https://api.github.com/users/Znarkus/events{/privacy}", "received_events_url": "https://api.github.com/users/Znarkus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2013-02-21T16:31:52Z", "updated_at": "2014-04-06T05:00:27Z", "closed_at": "2013-02-25T20:07:23Z", "author_association": "CONTRIBUTOR", "body": "Was reading through the style guide, but couldn't find anything about this. Instead of\n\n```\nvar callback;\n\nif (callback) {\n    callback();\n}\n```\n\nI've started using\n\n```\nvar callback;\n\ncallback && callback();\n```\n\nWhich I haven't found any issues with. Would this style guide frown upon this?\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/44", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/44/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/44/events", "html_url": "https://github.com/airbnb/javascript/issues/44", "id": 10573849, "node_id": "MDU6SXNzdWUxMDU3Mzg0OQ==", "number": 44, "title": "Defensive programming benefit of the bang method (\"!\") is not correct.", "user": {"login": "heavysixer", "id": 123, "node_id": "MDQ6VXNlcjEyMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heavysixer", "html_url": "https://github.com/heavysixer", "followers_url": "https://api.github.com/users/heavysixer/followers", "following_url": "https://api.github.com/users/heavysixer/following{/other_user}", "gists_url": "https://api.github.com/users/heavysixer/gists{/gist_id}", "starred_url": "https://api.github.com/users/heavysixer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heavysixer/subscriptions", "organizations_url": "https://api.github.com/users/heavysixer/orgs", "repos_url": "https://api.github.com/users/heavysixer/repos", "events_url": "https://api.github.com/users/heavysixer/events{/privacy}", "received_events_url": "https://api.github.com/users/heavysixer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2013-02-02T16:27:55Z", "updated_at": "2015-07-08T02:32:06Z", "closed_at": "2013-02-04T14:22:18Z", "author_association": "NONE", "body": "First off this is a great document, and thanks for sharing it. I have read the entire file end-to-end as I work on my own personal style guide. However, I was looking at your module example and you assert that \"!\" protects you from concatenation errors. However, I don't think this is correct. Consider the following example:\n\n```\n// => SyntaxError: Unexpected token !\n!function(){console.log(\"ham\");}()!function(){console.log(\"cheese\")}();\n```\n\nMaybe I am misunderstanding how you expected things to work.\n\nI think you still need to prepend a semicolon to truly protect yourself from concatenation errors.\n\n```\n;!function(){console.log(\"ham\");}()\n```\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/42", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/42/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/42/events", "html_url": "https://github.com/airbnb/javascript/issues/42", "id": 9920262, "node_id": "MDU6SXNzdWU5OTIwMjYy", "number": 42, "title": "jsHint config", "user": {"login": "AndriiHeonia", "id": 773648, "node_id": "MDQ6VXNlcjc3MzY0OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/773648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndriiHeonia", "html_url": "https://github.com/AndriiHeonia", "followers_url": "https://api.github.com/users/AndriiHeonia/followers", "following_url": "https://api.github.com/users/AndriiHeonia/following{/other_user}", "gists_url": "https://api.github.com/users/AndriiHeonia/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndriiHeonia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndriiHeonia/subscriptions", "organizations_url": "https://api.github.com/users/AndriiHeonia/orgs", "repos_url": "https://api.github.com/users/AndriiHeonia/repos", "events_url": "https://api.github.com/users/AndriiHeonia/events{/privacy}", "received_events_url": "https://api.github.com/users/AndriiHeonia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-01-13T10:06:42Z", "updated_at": "2013-01-13T10:12:02Z", "closed_at": "2013-01-13T10:12:02Z", "author_association": "NONE", "body": "I think it would be useful to provide recommended [jsHint config](http://www.jshint.com/docs/) file for this StyleGuide. Something like [this](https://github.com/Leaflet/Leaflet/blob/master/build/hintrc.js).\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/41", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/41/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/41/events", "html_url": "https://github.com/airbnb/javascript/issues/41", "id": 9919429, "node_id": "MDU6SXNzdWU5OTE5NDI5", "number": 41, "title": "Javascript guidelines", "user": {"login": "mr-moon", "id": 933164, "node_id": "MDQ6VXNlcjkzMzE2NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/933164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mr-moon", "html_url": "https://github.com/mr-moon", "followers_url": "https://api.github.com/users/mr-moon/followers", "following_url": "https://api.github.com/users/mr-moon/following{/other_user}", "gists_url": "https://api.github.com/users/mr-moon/gists{/gist_id}", "starred_url": "https://api.github.com/users/mr-moon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mr-moon/subscriptions", "organizations_url": "https://api.github.com/users/mr-moon/orgs", "repos_url": "https://api.github.com/users/mr-moon/repos", "events_url": "https://api.github.com/users/mr-moon/events{/privacy}", "received_events_url": "https://api.github.com/users/mr-moon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-01-13T07:27:35Z", "updated_at": "2013-01-14T04:31:06Z", "closed_at": "2013-01-14T04:31:06Z", "author_association": "NONE", "body": "Was reading your guidelines and actually noted that Javascript perform differently on all browsers. You suggest to use Array.apply(null, item) but on Safari 6, OS X, this method is 80% slower than Array.prototype.slice, was using the very same link to test: http://jsperf.com/converting-arguments-to-an-array/7\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/40", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/40/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/40/events", "html_url": "https://github.com/airbnb/javascript/issues/40", "id": 9896985, "node_id": "MDU6SXNzdWU5ODk2OTg1", "number": 40, "title": "String concat speed", "user": {"login": "rjacoby", "id": 14813, "node_id": "MDQ6VXNlcjE0ODEz", "avatar_url": "https://avatars1.githubusercontent.com/u/14813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rjacoby", "html_url": "https://github.com/rjacoby", "followers_url": "https://api.github.com/users/rjacoby/followers", "following_url": "https://api.github.com/users/rjacoby/following{/other_user}", "gists_url": "https://api.github.com/users/rjacoby/gists{/gist_id}", "starred_url": "https://api.github.com/users/rjacoby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rjacoby/subscriptions", "organizations_url": "https://api.github.com/users/rjacoby/orgs", "repos_url": "https://api.github.com/users/rjacoby/repos", "events_url": "https://api.github.com/users/rjacoby/events{/privacy}", "received_events_url": "https://api.github.com/users/rjacoby/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2013-01-11T22:24:23Z", "updated_at": "2017-01-16T17:12:20Z", "closed_at": "2013-01-11T23:30:32Z", "author_association": "NONE", "body": "In the [Strings section](https://github.com/airbnb/javascript#strings) the standard is:\n\n> \"Strings longer than 80 characters should be written across multiple lines using string concatenation.\"\n\nI understand the clarity of code - but the performance is 80-100% worse. [jsPerf](http://jsperf.com/ya-string-concat)\n\nThe need for such long strings is debatable anyway, but isn't this kind of a steep performance penalty for code style?\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/39", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/39/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/39/events", "html_url": "https://github.com/airbnb/javascript/issues/39", "id": 9878226, "node_id": "MDU6SXNzdWU5ODc4MjI2", "number": 39, "title": "Bitshifting instead of Typecasting is slow on Chrome. ", "user": {"login": "Kotrotsos", "id": 522506, "node_id": "MDQ6VXNlcjUyMjUwNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/522506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kotrotsos", "html_url": "https://github.com/Kotrotsos", "followers_url": "https://api.github.com/users/Kotrotsos/followers", "following_url": "https://api.github.com/users/Kotrotsos/following{/other_user}", "gists_url": "https://api.github.com/users/Kotrotsos/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kotrotsos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kotrotsos/subscriptions", "organizations_url": "https://api.github.com/users/Kotrotsos/orgs", "repos_url": "https://api.github.com/users/Kotrotsos/repos", "events_url": "https://api.github.com/users/Kotrotsos/events{/privacy}", "received_events_url": "https://api.github.com/users/Kotrotsos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-01-11T12:21:02Z", "updated_at": "2013-01-11T17:37:04Z", "closed_at": "2013-01-11T17:37:04Z", "author_association": "NONE", "body": "Just a small comment. \n\nBitshifting seems to be really fast on Firefox, (18) but- for as far as I can see much slower on Chrome (24) \n\nhttp://jsperf.com/bitshifting-or-typecasting\n"}]