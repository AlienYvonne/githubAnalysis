[{"url": "https://api.github.com/repos/airbnb/javascript/issues/32", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/32/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/32/events", "html_url": "https://github.com/airbnb/javascript/issues/32", "id": 8456207, "node_id": "MDU6SXNzdWU4NDU2MjA3", "number": 32, "title": "No convention for saving references to `this`", "user": {"login": "clizzin", "id": 55812, "node_id": "MDQ6VXNlcjU1ODEy", "avatar_url": "https://avatars3.githubusercontent.com/u/55812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clizzin", "html_url": "https://github.com/clizzin", "followers_url": "https://api.github.com/users/clizzin/followers", "following_url": "https://api.github.com/users/clizzin/following{/other_user}", "gists_url": "https://api.github.com/users/clizzin/gists{/gist_id}", "starred_url": "https://api.github.com/users/clizzin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clizzin/subscriptions", "organizations_url": "https://api.github.com/users/clizzin/orgs", "repos_url": "https://api.github.com/users/clizzin/repos", "events_url": "https://api.github.com/users/clizzin/events{/privacy}", "received_events_url": "https://api.github.com/users/clizzin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-11-18T23:29:00Z", "updated_at": "2012-11-19T22:03:24Z", "closed_at": "2012-11-19T22:03:24Z", "author_association": "NONE", "body": "I see `self`, `_this`, `that`, and a whole bunch of other variable names used to save references to `this`.  It would be nice to standardize on one of these.\n\nI am partial to `self` but would be happy with agreement on anything that's vaguely reasonable (`elephant` is not reasonable, although it would be pretty funny to have elephants all over our codebase).\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/31", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/31/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/31/events", "html_url": "https://github.com/airbnb/javascript/issues/31", "id": 8364421, "node_id": "MDU6SXNzdWU4MzY0NDIx", "number": 31, "title": "Obect creation vs instance creation !!", "user": {"login": "denmaradi", "id": 2780211, "node_id": "MDQ6VXNlcjI3ODAyMTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2780211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denmaradi", "html_url": "https://github.com/denmaradi", "followers_url": "https://api.github.com/users/denmaradi/followers", "following_url": "https://api.github.com/users/denmaradi/following{/other_user}", "gists_url": "https://api.github.com/users/denmaradi/gists{/gist_id}", "starred_url": "https://api.github.com/users/denmaradi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denmaradi/subscriptions", "organizations_url": "https://api.github.com/users/denmaradi/orgs", "repos_url": "https://api.github.com/users/denmaradi/repos", "events_url": "https://api.github.com/users/denmaradi/events{/privacy}", "received_events_url": "https://api.github.com/users/denmaradi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-11-14T19:08:18Z", "updated_at": "2012-11-15T16:51:17Z", "closed_at": "2012-11-14T19:37:47Z", "author_association": "NONE", "body": "new Object() is used for creating instance, where \"Object\" is a JavaScript class and not static object. Where as var object = {} is used to actually create an object. These are two different use cases. There is nothing good or bad about it.\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/27", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/27/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/27/events", "html_url": "https://github.com/airbnb/javascript/issues/27", "id": 8265671, "node_id": "MDU6SXNzdWU4MjY1Njcx", "number": 27, "title": "Investigate Array.push performance", "user": {"login": "MattiSG", "id": 222463, "node_id": "MDQ6VXNlcjIyMjQ2Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/222463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MattiSG", "html_url": "https://github.com/MattiSG", "followers_url": "https://api.github.com/users/MattiSG/followers", "following_url": "https://api.github.com/users/MattiSG/following{/other_user}", "gists_url": "https://api.github.com/users/MattiSG/gists{/gist_id}", "starred_url": "https://api.github.com/users/MattiSG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MattiSG/subscriptions", "organizations_url": "https://api.github.com/users/MattiSG/orgs", "repos_url": "https://api.github.com/users/MattiSG/repos", "events_url": "https://api.github.com/users/MattiSG/events{/privacy}", "received_events_url": "https://api.github.com/users/MattiSG/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-11-10T21:11:37Z", "updated_at": "2012-11-22T22:20:52Z", "closed_at": "2012-11-22T22:20:52Z", "author_association": "NONE", "body": "Hi there,\n\nI was surprised to see that `Array.push` was so much slower than direct assignment. The [JSperf link you give](http://jsperf.com/array-direct-assignment-vs-push/5) looks like a good proof of this.\n\nHowever, the [latest revision of the same bench](http://jsperf.com/array-direct-assignment-vs-push/10), which has much cleaner code, seems to remove this difference, and even show `push` as faster in recent Chrome versions (which I would have spontaneously thought, considering the JIT optimizations that can be done on predictable function calls rather than guessing numerical access).\n\nAre you sure that this recommendation is still to be followed?\n\nAll the best,\nMatti\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/25", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/25/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/25/events", "html_url": "https://github.com/airbnb/javascript/issues/25", "id": 8232669, "node_id": "MDU6SXNzdWU4MjMyNjY5", "number": 25, "title": "Reserved words as property names", "user": {"login": "rauschma", "id": 526114, "node_id": "MDQ6VXNlcjUyNjExNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/526114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rauschma", "html_url": "https://github.com/rauschma", "followers_url": "https://api.github.com/users/rauschma/followers", "following_url": "https://api.github.com/users/rauschma/following{/other_user}", "gists_url": "https://api.github.com/users/rauschma/gists{/gist_id}", "starred_url": "https://api.github.com/users/rauschma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rauschma/subscriptions", "organizations_url": "https://api.github.com/users/rauschma/orgs", "repos_url": "https://api.github.com/users/rauschma/repos", "events_url": "https://api.github.com/users/rauschma/events{/privacy}", "received_events_url": "https://api.github.com/users/rauschma/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-11-09T10:24:29Z", "updated_at": "2012-11-09T20:12:23Z", "closed_at": "2012-11-09T20:12:23Z", "author_association": "NONE", "body": "Note: allowed in ECMAScript 5.\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/24", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/24/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/24/events", "html_url": "https://github.com/airbnb/javascript/issues/24", "id": 8226380, "node_id": "MDU6SXNzdWU4MjI2Mzgw", "number": 24, "title": "Preferred method of boolean casting?", "user": {"login": "g-k", "id": 226605, "node_id": "MDQ6VXNlcjIyNjYwNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/226605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/g-k", "html_url": "https://github.com/g-k", "followers_url": "https://api.github.com/users/g-k/followers", "following_url": "https://api.github.com/users/g-k/following{/other_user}", "gists_url": "https://api.github.com/users/g-k/gists{/gist_id}", "starred_url": "https://api.github.com/users/g-k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/g-k/subscriptions", "organizations_url": "https://api.github.com/users/g-k/orgs", "repos_url": "https://api.github.com/users/g-k/repos", "events_url": "https://api.github.com/users/g-k/events{/privacy}", "received_events_url": "https://api.github.com/users/g-k/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2012-11-09T02:49:59Z", "updated_at": "2012-12-06T00:21:11Z", "closed_at": "2012-12-06T00:21:11Z", "author_association": "NONE", "body": "Using logical NOT seems faster on Chrome:\n\nhttp://jsperf.com/js-convert-boolean/2\n\nthough it comes with a loss of code readability.\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/22", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/22/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/22/events", "html_url": "https://github.com/airbnb/javascript/issues/22", "id": 8220255, "node_id": "MDU6SXNzdWU4MjIwMjU1", "number": 22, "title": "jQuery find() convention has bad performance", "user": {"login": "brycec", "id": 915640, "node_id": "MDQ6VXNlcjkxNTY0MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/915640?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brycec", "html_url": "https://github.com/brycec", "followers_url": "https://api.github.com/users/brycec/followers", "following_url": "https://api.github.com/users/brycec/following{/other_user}", "gists_url": "https://api.github.com/users/brycec/gists{/gist_id}", "starred_url": "https://api.github.com/users/brycec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brycec/subscriptions", "organizations_url": "https://api.github.com/users/brycec/orgs", "repos_url": "https://api.github.com/users/brycec/repos", "events_url": "https://api.github.com/users/brycec/events{/privacy}", "received_events_url": "https://api.github.com/users/brycec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-11-08T21:52:45Z", "updated_at": "2012-11-08T23:01:50Z", "closed_at": "2012-11-08T22:27:52Z", "author_association": "NONE", "body": "In the jQuery section, there is this convention:\n\n> Scope jQuery object queries with find. jsPerf\n\nBut the jsPerf cited is actually a different test than the example given. The example prefers `$('.sidebar').find('ul')` over `$('.sidebar ul')` and even `$('.sidebar > ul')` however the jsPerf test is not equivalent to the style guide example because it is essentially `$(CACHED_NODE).find('ul')` which means it doesn't need to find the first element.\n\nIf you take a look at this modified jsPerf [here](http://jsperf.com/jquery-find-vs-context-sel/16) you will see that 'select and find' actually has nearly as bad as performance as the 'find in context of' style, 90% slower than 'find on cached node'. Cascade and 'parent > child' selector are only 50% and 40% respectively.\n\nEssentially, the citation behind this convention is not applicable.\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/21", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/21/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/21/events", "html_url": "https://github.com/airbnb/javascript/issues/21", "id": 8208283, "node_id": "MDU6SXNzdWU4MjA4Mjgz", "number": 21, "title": "IIFE Parentheses", "user": {"login": "jcutrell", "id": 302832, "node_id": "MDQ6VXNlcjMwMjgzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/302832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcutrell", "html_url": "https://github.com/jcutrell", "followers_url": "https://api.github.com/users/jcutrell/followers", "following_url": "https://api.github.com/users/jcutrell/following{/other_user}", "gists_url": "https://api.github.com/users/jcutrell/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcutrell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcutrell/subscriptions", "organizations_url": "https://api.github.com/users/jcutrell/orgs", "repos_url": "https://api.github.com/users/jcutrell/repos", "events_url": "https://api.github.com/users/jcutrell/events{/privacy}", "received_events_url": "https://api.github.com/users/jcutrell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2012-11-08T15:50:31Z", "updated_at": "2016-04-21T07:15:09Z", "closed_at": "2012-11-15T19:26:27Z", "author_association": "NONE", "body": "Could this:\n\n``` javascript\n(function() {\n  console.log('Welcome to the Internet. Please follow me.');\n})();\n```\n\nBe this? :\n\n``` javascript\n// Crockford's preference - parens on the inside\n(function() {\n  console.log('Welcome to the Internet. Please follow me.');\n}());\n```\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/19", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/19/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/19/events", "html_url": "https://github.com/airbnb/javascript/issues/19", "id": 8183340, "node_id": "MDU6SXNzdWU4MTgzMzQw", "number": 19, "title": "jQuery Chaining", "user": {"login": "quirkyjack", "id": 1591598, "node_id": "MDQ6VXNlcjE1OTE1OTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1591598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quirkyjack", "html_url": "https://github.com/quirkyjack", "followers_url": "https://api.github.com/users/quirkyjack/followers", "following_url": "https://api.github.com/users/quirkyjack/following{/other_user}", "gists_url": "https://api.github.com/users/quirkyjack/gists{/gist_id}", "starred_url": "https://api.github.com/users/quirkyjack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quirkyjack/subscriptions", "organizations_url": "https://api.github.com/users/quirkyjack/orgs", "repos_url": "https://api.github.com/users/quirkyjack/repos", "events_url": "https://api.github.com/users/quirkyjack/events{/privacy}", "received_events_url": "https://api.github.com/users/quirkyjack/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-11-07T19:30:07Z", "updated_at": "2012-11-07T19:52:11Z", "closed_at": "2012-11-07T19:52:11Z", "author_association": "NONE", "body": "The possibility of showing relationships with indents for jQuery object chaining is something that might be worth considering for a style guide.\n\nBlocks at even indent level are all acting on the last selector in the chain, this can help visualize some confusing subselectors. The trailing semicolon might be considered slightly idiosyncratic, but can be thought of similar to a closing bracket.\n\n``` javascript\n$('#foo')\n  .find('.baz')\n    .doSomething()\n    .end()\n  .find('.moo')\n    .doSomethingElse()\n;\n```\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/18", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/18/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/18/events", "html_url": "https://github.com/airbnb/javascript/issues/18", "id": 8181975, "node_id": "MDU6SXNzdWU4MTgxOTc1", "number": 18, "title": "Preferred method of integer casting?", "user": {"login": "ajacksified", "id": 175515, "node_id": "MDQ6VXNlcjE3NTUxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/175515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajacksified", "html_url": "https://github.com/ajacksified", "followers_url": "https://api.github.com/users/ajacksified/followers", "following_url": "https://api.github.com/users/ajacksified/following{/other_user}", "gists_url": "https://api.github.com/users/ajacksified/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajacksified/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajacksified/subscriptions", "organizations_url": "https://api.github.com/users/ajacksified/orgs", "repos_url": "https://api.github.com/users/ajacksified/repos", "events_url": "https://api.github.com/users/ajacksified/events{/privacy}", "received_events_url": "https://api.github.com/users/ajacksified/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2012-11-07T18:44:15Z", "updated_at": "2012-11-08T20:54:07Z", "closed_at": "2012-11-08T20:54:07Z", "author_association": "CONTRIBUTOR", "body": "It's a small thing, but we should probably be consistent here, too. What's the best way to cast to integers? I have the habit of bitshifting by 0 `\"15\" >> 0`; it's one of the more performant ways to do it, and it's concise, but it also isn't super obvious.\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/15", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/15/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/15/events", "html_url": "https://github.com/airbnb/javascript/issues/15", "id": 8123992, "node_id": "MDU6SXNzdWU4MTIzOTky", "number": 15, "title": "Spacing issue within Naming Conventions", "user": {"login": "michaelmior", "id": 82501, "node_id": "MDQ6VXNlcjgyNTAx", "avatar_url": "https://avatars0.githubusercontent.com/u/82501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelmior", "html_url": "https://github.com/michaelmior", "followers_url": "https://api.github.com/users/michaelmior/followers", "following_url": "https://api.github.com/users/michaelmior/following{/other_user}", "gists_url": "https://api.github.com/users/michaelmior/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelmior/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelmior/subscriptions", "organizations_url": "https://api.github.com/users/michaelmior/orgs", "repos_url": "https://api.github.com/users/michaelmior/repos", "events_url": "https://api.github.com/users/michaelmior/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelmior/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-11-05T23:46:07Z", "updated_at": "2012-11-06T00:00:40Z", "closed_at": "2012-11-05T23:49:00Z", "author_association": "NONE", "body": "Under the section about PascalCase in Naming Conventions is the block\n\n```\n// good\nfunction User(options){\n  this.name = options.name;\n}\n```\n\nAs per the Whitespace section, there should be a space between the closing parens and the brace on the function definition.\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/13", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/13/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/13/events", "html_url": "https://github.com/airbnb/javascript/issues/13", "id": 8119015, "node_id": "MDU6SXNzdWU4MTE5MDE1", "number": 13, "title": "Jedi Mindtricks", "user": {"login": "Kalyse", "id": 199760, "node_id": "MDQ6VXNlcjE5OTc2MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/199760?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kalyse", "html_url": "https://github.com/Kalyse", "followers_url": "https://api.github.com/users/Kalyse/followers", "following_url": "https://api.github.com/users/Kalyse/following{/other_user}", "gists_url": "https://api.github.com/users/Kalyse/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kalyse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kalyse/subscriptions", "organizations_url": "https://api.github.com/users/Kalyse/orgs", "repos_url": "https://api.github.com/users/Kalyse/repos", "events_url": "https://api.github.com/users/Kalyse/events{/privacy}", "received_events_url": "https://api.github.com/users/Kalyse/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-11-05T21:05:20Z", "updated_at": "2012-11-05T21:36:46Z", "closed_at": "2012-11-05T21:36:46Z", "author_association": "NONE", "body": "There is a mistake under the accessors section.\n\n```\nJedi.prototype.set: function(key, val) {\n  this[key] = val;\n};\n```\n\nShould read\n\n```\nJedi.prototype.set = function(key, val) {\n  this[key] = val;\n};\n```\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/9", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/9/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/9/events", "html_url": "https://github.com/airbnb/javascript/issues/9", "id": 8048526, "node_id": "MDU6SXNzdWU4MDQ4NTI2", "number": 9, "title": "Always return as early as possible?", "user": {"login": "spikebrehm", "id": 133937, "node_id": "MDQ6VXNlcjEzMzkzNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/133937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spikebrehm", "html_url": "https://github.com/spikebrehm", "followers_url": "https://api.github.com/users/spikebrehm/followers", "following_url": "https://api.github.com/users/spikebrehm/following{/other_user}", "gists_url": "https://api.github.com/users/spikebrehm/gists{/gist_id}", "starred_url": "https://api.github.com/users/spikebrehm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spikebrehm/subscriptions", "organizations_url": "https://api.github.com/users/spikebrehm/orgs", "repos_url": "https://api.github.com/users/spikebrehm/repos", "events_url": "https://api.github.com/users/spikebrehm/events{/privacy}", "received_events_url": "https://api.github.com/users/spikebrehm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2012-11-02T01:14:08Z", "updated_at": "2012-11-02T07:05:03Z", "closed_at": "2012-11-02T07:05:03Z", "author_association": "MEMBER", "body": "The docs have this:\n- Always return as early as possible\n  \n  ``` javascript\n  // bad\n  function() {\n    var size;\n  \n    if (!arguments.length) {\n      size = false;\n    } else {\n      size = arguments.length;\n    }\n  \n    return size;\n  }\n  \n  // good\n  function() {\n    if (!arguments.length) {\n      return false;\n    }\n  \n    return arguments.length;\n  }\n  \n  However I've generally learned that this is a bad pattern because it can make the code harder to read as it gets more complicated.  Thoughts?\n  ```\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/8", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/8/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/8/events", "html_url": "https://github.com/airbnb/javascript/issues/8", "id": 8048499, "node_id": "MDU6SXNzdWU4MDQ4NDk5", "number": 8, "title": "IIFE styles: to bang, or not to bang?", "user": {"login": "spikebrehm", "id": 133937, "node_id": "MDQ6VXNlcjEzMzkzNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/133937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spikebrehm", "html_url": "https://github.com/spikebrehm", "followers_url": "https://api.github.com/users/spikebrehm/followers", "following_url": "https://api.github.com/users/spikebrehm/following{/other_user}", "gists_url": "https://api.github.com/users/spikebrehm/gists{/gist_id}", "starred_url": "https://api.github.com/users/spikebrehm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spikebrehm/subscriptions", "organizations_url": "https://api.github.com/users/spikebrehm/orgs", "repos_url": "https://api.github.com/users/spikebrehm/repos", "events_url": "https://api.github.com/users/spikebrehm/events{/privacy}", "received_events_url": "https://api.github.com/users/spikebrehm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-11-02T01:11:51Z", "updated_at": "2012-11-02T01:13:11Z", "closed_at": "2012-11-02T01:13:11Z", "author_association": "MEMBER", "body": "We see two different IIFE styles in our codebase; do we have a preference?\n\n``` javascript\n// immediately-invoked function expression (IIFE)\n(function() {\n  console.log('Welcome to the Internet. Please follow me.');\n})();\n```\n\nvs\n\n``` javascript\n// immediately-invoked function expression (IIFE)\n!function() {\n  console.log('Welcome to the Internet. Please follow me.');\n}();\n```\n"}]