[{"url": "https://api.github.com/repos/airbnb/javascript/issues/4", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/4/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/4/events", "html_url": "https://github.com/airbnb/javascript/issues/4", "id": 8047232, "node_id": "MDU6SXNzdWU4MDQ3MjMy", "number": 4, "title": "Accessors", "user": {"login": "reissbaker", "id": 803092, "node_id": "MDQ6VXNlcjgwMzA5Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/803092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reissbaker", "html_url": "https://github.com/reissbaker", "followers_url": "https://api.github.com/users/reissbaker/followers", "following_url": "https://api.github.com/users/reissbaker/following{/other_user}", "gists_url": "https://api.github.com/users/reissbaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/reissbaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reissbaker/subscriptions", "organizations_url": "https://api.github.com/users/reissbaker/orgs", "repos_url": "https://api.github.com/users/reissbaker/repos", "events_url": "https://api.github.com/users/reissbaker/events{/privacy}", "received_events_url": "https://api.github.com/users/reissbaker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2012-11-01T23:52:33Z", "updated_at": "2012-11-02T09:29:52Z", "closed_at": "2012-11-02T09:29:52Z", "author_association": "CONTRIBUTOR", "body": "I disagree that `setValue`/`getValue` style accessors are better than jQuery-style `value()`/`value(10)` accessors. They add unnecessary name length, and require twice as many function definitions.\n\nAdmittedly, it's slightly faster for a VM to deal with functions that always return a single value type, as opposed to sometimes returning a type and sometimes returning nothing. But it's also slightly faster to download scripts using jQuery-style accessors, because the `function` keyword, `prototype` keyword, and public property names are unminifiable -- and we've yet to run into issues where our JS was too slow (whereas we do run into issues where our files are too big). If we have to compromise in one direction, I'd lean towards filesize over VM execution speed.\n\nAdditionally: the setters can still return a value, despite being \"only\" setters. Which means the VM executes just as quickly as it normally does.\n\nIt's also just less typing.\n"}]