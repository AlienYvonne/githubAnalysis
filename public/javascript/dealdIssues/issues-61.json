[{"url": "https://api.github.com/repos/airbnb/javascript/issues/1692", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1692/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1692/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1692/events", "html_url": "https://github.com/airbnb/javascript/issues/1692", "id": 287303114, "node_id": "MDU6SXNzdWUyODczMDMxMTQ=", "number": 1692, "title": "prop-types in react router", "user": {"login": "GravityMsc", "id": 17739114, "node_id": "MDQ6VXNlcjE3NzM5MTE0", "avatar_url": "https://avatars2.githubusercontent.com/u/17739114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GravityMsc", "html_url": "https://github.com/GravityMsc", "followers_url": "https://api.github.com/users/GravityMsc/followers", "following_url": "https://api.github.com/users/GravityMsc/following{/other_user}", "gists_url": "https://api.github.com/users/GravityMsc/gists{/gist_id}", "starred_url": "https://api.github.com/users/GravityMsc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GravityMsc/subscriptions", "organizations_url": "https://api.github.com/users/GravityMsc/orgs", "repos_url": "https://api.github.com/users/GravityMsc/repos", "events_url": "https://api.github.com/users/GravityMsc/events{/privacy}", "received_events_url": "https://api.github.com/users/GravityMsc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 18135606, "node_id": "MDU6TGFiZWwxODEzNTYwNg==", "url": "https://api.github.com/repos/airbnb/javascript/labels/question", "name": "question", "color": "cc317c", "default": true}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-10T03:19:28Z", "updated_at": "2018-01-10T06:17:56Z", "closed_at": "2018-01-10T05:45:46Z", "author_association": "NONE", "body": "I use `eslint-config-airbnb` rules. and here is my code example.\r\n```jsx\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props => (\r\n      authLogin ?\r\n        <Component {...props} /> :\r\n        <Redirect to={{\r\n          pathname: '/login',\r\n          state: { from: props.location },\r\n        }}\r\n        />\r\n    )}\r\n  />\r\n);\r\nPrivateRoute.propTypes = {\r\n  component: PropTypes.element.isRequired,\r\n};\r\n```\r\n[eslint] 'location' is missing in props validation (react/prop-types)\r\n\r\nI wonder what should I do to fix it? I've attempted to fix but useless\r\n  "}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/1689", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1689/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1689/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1689/events", "html_url": "https://github.com/airbnb/javascript/issues/1689", "id": 285897901, "node_id": "MDU6SXNzdWUyODU4OTc5MDE=", "number": 1689, "title": "Error on windows eslint airbnb react - Webstorm", "user": {"login": "Giorat", "id": 4527364, "node_id": "MDQ6VXNlcjQ1MjczNjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4527364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Giorat", "html_url": "https://github.com/Giorat", "followers_url": "https://api.github.com/users/Giorat/followers", "following_url": "https://api.github.com/users/Giorat/following{/other_user}", "gists_url": "https://api.github.com/users/Giorat/gists{/gist_id}", "starred_url": "https://api.github.com/users/Giorat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Giorat/subscriptions", "organizations_url": "https://api.github.com/users/Giorat/orgs", "repos_url": "https://api.github.com/users/Giorat/repos", "events_url": "https://api.github.com/users/Giorat/events{/privacy}", "received_events_url": "https://api.github.com/users/Giorat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-01-04T07:05:06Z", "updated_at": "2018-01-04T08:09:40Z", "closed_at": "2018-01-04T08:09:40Z", "author_association": "NONE", "body": "I have been trying to use your package eslint-config-airbnb with Webstorm following your guide from the README but I keep getting this error.\r\n\r\n`\t...npm\\node_modules\\eslint-config-airbnb\\rules\\react-a11y.js:\r\n\tConfiguration for rule \"jsx-a11y/anchor-has-content\" is invalid:\r\n\tValue {\"components\":[]} should be string.\r\n\tValue {\"components\":[]} should be array.\r\n\tValue {\"components\":[]} should match exactly one schema in oneOf.\r\n`\r\n\r\nHow can I solve this error? I'm using all updated packages for eslint and for your config."}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/1687", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1687/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1687/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1687/events", "html_url": "https://github.com/airbnb/javascript/issues/1687", "id": 285710262, "node_id": "MDU6SXNzdWUyODU3MTAyNjI=", "number": 1687, "title": "What does qualify as a \"function library\" and a \"bare object\"?", "user": {"login": "IGassmann", "id": 4291707, "node_id": "MDQ6VXNlcjQyOTE3MDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/4291707?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IGassmann", "html_url": "https://github.com/IGassmann", "followers_url": "https://api.github.com/users/IGassmann/followers", "following_url": "https://api.github.com/users/IGassmann/following{/other_user}", "gists_url": "https://api.github.com/users/IGassmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/IGassmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IGassmann/subscriptions", "organizations_url": "https://api.github.com/users/IGassmann/orgs", "repos_url": "https://api.github.com/users/IGassmann/repos", "events_url": "https://api.github.com/users/IGassmann/events{/privacy}", "received_events_url": "https://api.github.com/users/IGassmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 18135606, "node_id": "MDU6TGFiZWwxODEzNTYwNg==", "url": "https://api.github.com/repos/airbnb/javascript/labels/question", "name": "question", "color": "cc317c", "default": true}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-03T14:57:21Z", "updated_at": "2018-05-01T14:23:13Z", "closed_at": "2018-05-01T14:23:13Z", "author_association": "NONE", "body": "Rule [23.8](https://github.com/airbnb/javascript#naming--PascalCase-singleton) says that we should PascalCase when exporting a \"function library\" and a \"bare object\".\r\n\r\nWhat exactly would be a function library and a bare object? Would a `Proxy` qualify as one? What about the `lbryuri` object in this example:\r\n\r\n```\r\nconst CHANNEL_NAME_MIN_LEN = 1;\r\nconst CLAIM_ID_MAX_LEN = 40;\r\n\r\nconst Lbryuri = {};\r\n\r\nLbryuri.REGEXP_INVALID_URI = /[^A-Za-z0-9-]/g;\r\nLbryuri.REGEXP_ADDRESS = /^b(?=[^0OIl]{32,33})[0-9A-Za-z]{32,33}$/;\r\n\r\n/**\r\n * Parses a LBRY name into its component parts. Throws errors with user-friendly\r\n * messages for invalid names.\r\n *\r\n * N.B. that \"name\" indicates the value in the name position of the URI. For\r\n * claims for channel content, this will actually be the channel name, and\r\n * the content name is in the path (e.g. lbry://@channel/content)\r\n *\r\n * In most situations, you'll want to use the contentName and channelName keys\r\n * and ignore the name key.\r\n *\r\n * Returns a dictionary with keys:\r\n *   - name (string): The value in the \"name\" position in the URI. Note that this\r\n *                    could be either content name or channel name; see above.\r\n *   - path (string, if persent)\r\n *   - claimSequence (int, if present)\r\n *   - bidPosition (int, if present)\r\n *   - claimId (string, if present)\r\n *   - isChannel (boolean)\r\n *   - contentName (string): For anon claims, the name; for channel claims, the path\r\n *   - channelName (string, if present): Channel name without @\r\n */\r\nLbryuri.parse = (uri, requireProto = false) => {\r\n  // Break into components. Empty sub-matches are converted to null\r\n  const componentsRegex = new RegExp(\r\n    '^((?:lbry://)?)' + // protocol\r\n    '([^:$#/]*)' + // name (stops at the first separator or end)\r\n    '([:$#]?)([^/]*)' + // modifier separator, modifier (stops at the first path separator or end)\r\n      '(/?)(.*)' // path separator, path\r\n  );\r\n  const [proto, name, modSep, modVal, pathSep, path] = componentsRegex\r\n    .exec(uri)\r\n    .slice(1)\r\n    .map(match => match || null);\r\n\r\n  let contentName;\r\n\r\n  // Validate protocol\r\n  if (requireProto && !proto) {\r\n    throw new Error(__('LBRY URIs must include a protocol prefix (lbry://).'));\r\n  }\r\n\r\n  // Validate and process name\r\n  if (!name) {\r\n    throw new Error(__('URI does not include name.'));\r\n  }\r\n\r\n  const isChannel = name.startsWith('@');\r\n  const channelName = isChannel ? name.slice(1) : name;\r\n\r\n  if (isChannel) {\r\n    if (!channelName) {\r\n      throw new Error(__('No channel name after @.'));\r\n    }\r\n\r\n    if (channelName.length < CHANNEL_NAME_MIN_LEN) {\r\n      throw new Error(__(`Channel names must be at least %s characters.`, CHANNEL_NAME_MIN_LEN));\r\n    }\r\n\r\n    contentName = path;\r\n  }\r\n\r\n  const nameBadChars = (channelName || name).match(Lbryuri.REGEXP_INVALID_URI);\r\n  if (nameBadChars) {\r\n    throw new Error(\r\n      __(\r\n        `Invalid character %s in name: %s.`,\r\n        nameBadChars.length === 1 ? '' : 's',\r\n        nameBadChars.join(', ')\r\n      )\r\n    );\r\n  }\r\n\r\n  // Validate and process modifier (claim ID, bid position or claim sequence)\r\n  let claimId;\r\n  let claimSequence;\r\n  let bidPosition;\r\n  if (modSep) {\r\n    if (!modVal) {\r\n      throw new Error(__(`No modifier provided after separator %s.`, modSep));\r\n    }\r\n\r\n    if (modSep === '#') {\r\n      claimId = modVal;\r\n    } else if (modSep === ':') {\r\n      claimSequence = modVal;\r\n    } else if (modSep === '$') {\r\n      bidPosition = modVal;\r\n    }\r\n  }\r\n\r\n  if (\r\n    claimId &&\r\n    (claimId.length > CLAIM_ID_MAX_LEN || !claimId.match(/^[0-9a-f]+$/)) &&\r\n    !claimId.match(/^pending/) // ought to be dropped when savePendingPublish drops hack\r\n  ) {\r\n    throw new Error(__(`Invalid claim ID %s.`, claimId));\r\n  }\r\n\r\n  if (claimSequence && !claimSequence.match(/^-?[1-9][0-9]*$/)) {\r\n    throw new Error(__('Claim sequence must be a number.'));\r\n  }\r\n\r\n  if (bidPosition && !bidPosition.match(/^-?[1-9][0-9]*$/)) {\r\n    throw new Error(__('Bid position must be a number.'));\r\n  }\r\n\r\n  // Validate and process path\r\n  if (path) {\r\n    if (!isChannel) {\r\n      throw new Error(__('Only channel URIs may have a path.'));\r\n    }\r\n\r\n    const pathBadChars = path.match(Lbryuri.REGEXP_INVALID_URI);\r\n    if (pathBadChars) {\r\n      throw new Error(__(`Invalid character in path: %s`, pathBadChars.join(', ')));\r\n    }\r\n\r\n    contentName = path;\r\n  } else if (pathSep) {\r\n    throw new Error(__('No path provided after /'));\r\n  }\r\n\r\n  return {\r\n    name,\r\n    path,\r\n    isChannel,\r\n    ...(contentName ? { contentName } : {}),\r\n    ...(channelName ? { channelName } : {}),\r\n    ...(claimSequence ? { claimSequence: parseInt(claimSequence, 10) } : {}),\r\n    ...(bidPosition ? { bidPosition: parseInt(bidPosition, 10) } : {}),\r\n    ...(claimId ? { claimId } : {}),\r\n    ...(path ? { path } : {}),\r\n  };\r\n};\r\n\r\n/**\r\n * Takes an object in the same format returned by lbryuri.parse() and builds a URI.\r\n *\r\n * The channelName key will accept names with or without the @ prefix.\r\n */\r\nLbryuri.build = (uriObj, includeProto = true) => {\r\n  const { claimId, claimSequence, bidPosition, contentName, channelName } = uriObj;\r\n\r\n  let { name, path } = uriObj;\r\n\r\n  if (channelName) {\r\n    const channelNameFormatted = channelName.startsWith('@') ? channelName : `@${channelName}`;\r\n    if (!name) {\r\n      name = channelNameFormatted;\r\n    } else if (name !== channelNameFormatted) {\r\n      throw new Error(\r\n        __(\r\n          'Received a channel content URI, but name and channelName do not match. \"name\" represents the value in the name position of the URI (lbry://name...), which for channel content will be the channel name. In most cases, to construct a channel URI you should just pass channelName and contentName.'\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  if (contentName) {\r\n    if (!name) {\r\n      name = contentName;\r\n    } else if (!path) {\r\n      path = contentName;\r\n    }\r\n    if (path && path !== contentName) {\r\n      throw new Error(\r\n        __(\r\n          'Path and contentName do not match. Only one is required; most likely you wanted contentName.'\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    (includeProto ? 'lbry://' : '') +\r\n    name +\r\n    (claimId ? `#${claimId}` : '') +\r\n    (claimSequence ? `:${claimSequence}` : '') +\r\n    (bidPosition ? `${bidPosition}` : '') +\r\n    (path ? `/${path}` : '')\r\n  );\r\n};\r\n\r\n/* Takes a parseable LBRY URI and converts it to standard, canonical format (currently this just\r\n * consists of adding the lbry:// prefix if needed) */\r\nLbryuri.normalize = uri => {\r\n  if (uri.match(/pending_claim/)) return uri;\r\n\r\n  const { name, path, bidPosition, claimSequence, claimId } = Lbryuri.parse(uri);\r\n  return Lbryuri.build({ name, path, claimSequence, bidPosition, claimId });\r\n};\r\n\r\nLbryuri.isValid = uri => {\r\n  let parts;\r\n  try {\r\n    parts = Lbryuri.parse(Lbryuri.normalize(uri));\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n  return parts && parts.name;\r\n};\r\n\r\nLbryuri.isValidName = (name, checkCase = true) => {\r\n  const regexp = new RegExp('^[a-z0-9-]+$', checkCase ? '' : 'i');\r\n  return regexp.test(name);\r\n};\r\n\r\nLbryuri.isClaimable = uri => {\r\n  let parts;\r\n  try {\r\n    parts = Lbryuri.parse(Lbryuri.normalize(uri));\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n  return (\r\n    parts &&\r\n    parts.name &&\r\n    !parts.claimId &&\r\n    !parts.bidPosition &&\r\n    !parts.claimSequence &&\r\n    !parts.isChannel &&\r\n    !parts.path\r\n  );\r\n};\r\n\r\nexport default Lbryuri;\r\n```"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/1686", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1686/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1686/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1686/events", "html_url": "https://github.com/airbnb/javascript/issues/1686", "id": 285385826, "node_id": "MDU6SXNzdWUyODUzODU4MjY=", "number": 1686, "title": "Broken link to es5 style guide", "user": {"login": "MatissJanis", "id": 886567, "node_id": "MDQ6VXNlcjg4NjU2Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/886567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MatissJanis", "html_url": "https://github.com/MatissJanis", "followers_url": "https://api.github.com/users/MatissJanis/followers", "following_url": "https://api.github.com/users/MatissJanis/following{/other_user}", "gists_url": "https://api.github.com/users/MatissJanis/gists{/gist_id}", "starred_url": "https://api.github.com/users/MatissJanis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MatissJanis/subscriptions", "organizations_url": "https://api.github.com/users/MatissJanis/orgs", "repos_url": "https://api.github.com/users/MatissJanis/repos", "events_url": "https://api.github.com/users/MatissJanis/events{/privacy}", "received_events_url": "https://api.github.com/users/MatissJanis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-02T09:28:47Z", "updated_at": "2018-01-02T19:53:59Z", "closed_at": "2018-01-02T19:53:59Z", "author_association": "NONE", "body": "Hello,\r\n\r\nThe link to \"es5 style guide\" is currently broken on [Airbnb](http://airbnb.io/projects/javascript/).\r\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/1684", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1684/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1684/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1684/events", "html_url": "https://github.com/airbnb/javascript/issues/1684", "id": 285167669, "node_id": "MDU6SXNzdWUyODUxNjc2Njk=", "number": 1684, "title": "Properties 12.2", "user": {"login": "stevewood593", "id": 30445940, "node_id": "MDQ6VXNlcjMwNDQ1OTQw", "avatar_url": "https://avatars3.githubusercontent.com/u/30445940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stevewood593", "html_url": "https://github.com/stevewood593", "followers_url": "https://api.github.com/users/stevewood593/followers", "following_url": "https://api.github.com/users/stevewood593/following{/other_user}", "gists_url": "https://api.github.com/users/stevewood593/gists{/gist_id}", "starred_url": "https://api.github.com/users/stevewood593/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stevewood593/subscriptions", "organizations_url": "https://api.github.com/users/stevewood593/orgs", "repos_url": "https://api.github.com/users/stevewood593/repos", "events_url": "https://api.github.com/users/stevewood593/events{/privacy}", "received_events_url": "https://api.github.com/users/stevewood593/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 18135606, "node_id": "MDU6TGFiZWwxODEzNTYwNg==", "url": "https://api.github.com/repos/airbnb/javascript/labels/question", "name": "question", "color": "cc317c", "default": true}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-12-29T23:10:22Z", "updated_at": "2017-12-30T18:28:03Z", "closed_at": "2017-12-30T18:28:03Z", "author_association": "NONE", "body": "Hi,\r\n\r\nI think you guys mean \"Use bracket notation [] when accessing properties with a function,\" at [12.2](https://github.com/airbnb/javascript#properties--bracket) in the airbnb style guide. Right now it says \"Use bracket notation [] when accessing properties with a variable.\""}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/1680", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1680/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1680/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1680/events", "html_url": "https://github.com/airbnb/javascript/issues/1680", "id": 284459002, "node_id": "MDU6SXNzdWUyODQ0NTkwMDI=", "number": 1680, "title": "Avoid obscure jargon \"hash\"", "user": {"login": "erights", "id": 273868, "node_id": "MDQ6VXNlcjI3Mzg2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/273868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erights", "html_url": "https://github.com/erights", "followers_url": "https://api.github.com/users/erights/followers", "following_url": "https://api.github.com/users/erights/following{/other_user}", "gists_url": "https://api.github.com/users/erights/gists{/gist_id}", "starred_url": "https://api.github.com/users/erights/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erights/subscriptions", "organizations_url": "https://api.github.com/users/erights/orgs", "repos_url": "https://api.github.com/users/erights/repos", "events_url": "https://api.github.com/users/erights/events{/privacy}", "received_events_url": "https://api.github.com/users/erights/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-25T16:39:28Z", "updated_at": "2017-12-25T18:50:52Z", "closed_at": "2017-12-25T18:50:52Z", "author_association": "NONE", "body": "https://github.com/airbnb/javascript#events--hash says\r\n> pass a hash instead of a raw value\r\n\r\nThis use of \"hash\" is obscure jargon. Use \"object literal\"."}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/1679", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1679/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1679/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1679/events", "html_url": "https://github.com/airbnb/javascript/issues/1679", "id": 284458401, "node_id": "MDU6SXNzdWUyODQ0NTg0MDE=", "number": 1679, "title": "Distinguish doc-comments from other comments", "user": {"login": "erights", "id": 273868, "node_id": "MDQ6VXNlcjI3Mzg2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/273868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erights", "html_url": "https://github.com/erights", "followers_url": "https://api.github.com/users/erights/followers", "following_url": "https://api.github.com/users/erights/following{/other_user}", "gists_url": "https://api.github.com/users/erights/gists{/gist_id}", "starred_url": "https://api.github.com/users/erights/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erights/subscriptions", "organizations_url": "https://api.github.com/users/erights/orgs", "repos_url": "https://api.github.com/users/erights/repos", "events_url": "https://api.github.com/users/erights/events{/privacy}", "received_events_url": "https://api.github.com/users/erights/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 311904405, "node_id": "MDU6TGFiZWwzMTE5MDQ0MDU=", "url": "https://api.github.com/repos/airbnb/javascript/labels/editorial", "name": "editorial", "color": "bfe5bf", "default": false}], "state": "open", "locked": false, "assignee": {"login": "ljharb", "id": 45469, "node_id": "MDQ6VXNlcjQ1NDY5", "avatar_url": "https://avatars1.githubusercontent.com/u/45469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljharb", "html_url": "https://github.com/ljharb", "followers_url": "https://api.github.com/users/ljharb/followers", "following_url": "https://api.github.com/users/ljharb/following{/other_user}", "gists_url": "https://api.github.com/users/ljharb/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljharb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljharb/subscriptions", "organizations_url": "https://api.github.com/users/ljharb/orgs", "repos_url": "https://api.github.com/users/ljharb/repos", "events_url": "https://api.github.com/users/ljharb/events{/privacy}", "received_events_url": "https://api.github.com/users/ljharb/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ljharb", "id": 45469, "node_id": "MDQ6VXNlcjQ1NDY5", "avatar_url": "https://avatars1.githubusercontent.com/u/45469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljharb", "html_url": "https://github.com/ljharb", "followers_url": "https://api.github.com/users/ljharb/followers", "following_url": "https://api.github.com/users/ljharb/following{/other_user}", "gists_url": "https://api.github.com/users/ljharb/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljharb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljharb/subscriptions", "organizations_url": "https://api.github.com/users/ljharb/orgs", "repos_url": "https://api.github.com/users/ljharb/repos", "events_url": "https://api.github.com/users/ljharb/events{/privacy}", "received_events_url": "https://api.github.com/users/ljharb/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2017-12-25T16:27:10Z", "updated_at": "2017-12-26T18:37:54Z", "closed_at": null, "author_association": "NONE", "body": "https://github.com/airbnb/javascript#comments--multiline\r\nrecommend `/** ... */` without even mentioning `/* ... */`. The former should only be used for doc-comments. The latter should be used for all comments that are not doc-comments, even if they are multiline.\r\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/1678", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1678/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1678/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1678/events", "html_url": "https://github.com/airbnb/javascript/issues/1678", "id": 284458127, "node_id": "MDU6SXNzdWUyODQ0NTgxMjc=", "number": 1678, "title": "What does \"mixed operators\" mean?", "user": {"login": "erights", "id": 273868, "node_id": "MDQ6VXNlcjI3Mzg2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/273868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erights", "html_url": "https://github.com/erights", "followers_url": "https://api.github.com/users/erights/followers", "following_url": "https://api.github.com/users/erights/following{/other_user}", "gists_url": "https://api.github.com/users/erights/gists{/gist_id}", "starred_url": "https://api.github.com/users/erights/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erights/subscriptions", "organizations_url": "https://api.github.com/users/erights/orgs", "repos_url": "https://api.github.com/users/erights/repos", "events_url": "https://api.github.com/users/erights/events{/privacy}", "received_events_url": "https://api.github.com/users/erights/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 311904405, "node_id": "MDU6TGFiZWwzMTE5MDQ0MDU=", "url": "https://api.github.com/repos/airbnb/javascript/labels/editorial", "name": "editorial", "color": "bfe5bf", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "sharmilajesupaul", "id": 7876997, "node_id": "MDQ6VXNlcjc4NzY5OTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/7876997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sharmilajesupaul", "html_url": "https://github.com/sharmilajesupaul", "followers_url": "https://api.github.com/users/sharmilajesupaul/followers", "following_url": "https://api.github.com/users/sharmilajesupaul/following{/other_user}", "gists_url": "https://api.github.com/users/sharmilajesupaul/gists{/gist_id}", "starred_url": "https://api.github.com/users/sharmilajesupaul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sharmilajesupaul/subscriptions", "organizations_url": "https://api.github.com/users/sharmilajesupaul/orgs", "repos_url": "https://api.github.com/users/sharmilajesupaul/repos", "events_url": "https://api.github.com/users/sharmilajesupaul/events{/privacy}", "received_events_url": "https://api.github.com/users/sharmilajesupaul/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sharmilajesupaul", "id": 7876997, "node_id": "MDQ6VXNlcjc4NzY5OTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/7876997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sharmilajesupaul", "html_url": "https://github.com/sharmilajesupaul", "followers_url": "https://api.github.com/users/sharmilajesupaul/followers", "following_url": "https://api.github.com/users/sharmilajesupaul/following{/other_user}", "gists_url": "https://api.github.com/users/sharmilajesupaul/gists{/gist_id}", "starred_url": "https://api.github.com/users/sharmilajesupaul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sharmilajesupaul/subscriptions", "organizations_url": "https://api.github.com/users/sharmilajesupaul/orgs", "repos_url": "https://api.github.com/users/sharmilajesupaul/repos", "events_url": "https://api.github.com/users/sharmilajesupaul/events{/privacy}", "received_events_url": "https://api.github.com/users/sharmilajesupaul/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-12-25T16:21:49Z", "updated_at": "2018-01-08T22:57:11Z", "closed_at": "2018-01-08T22:57:11Z", "author_association": "NONE", "body": "https://github.com/airbnb/javascript#comparison--no-mixed-operators says\r\n\r\n```js\r\n// good\r\nconst bar = a + b / c * d;\r\n```\r\n\r\nI agree. However, it seems to contradict the recommendation as written"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/1677", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1677/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1677/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1677/events", "html_url": "https://github.com/airbnb/javascript/issues/1677", "id": 284457868, "node_id": "MDU6SXNzdWUyODQ0NTc4Njg=", "number": 1677, "title": "Recommended ?: refactoring is worse", "user": {"login": "erights", "id": 273868, "node_id": "MDQ6VXNlcjI3Mzg2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/273868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erights", "html_url": "https://github.com/erights", "followers_url": "https://api.github.com/users/erights/followers", "following_url": "https://api.github.com/users/erights/following{/other_user}", "gists_url": "https://api.github.com/users/erights/gists{/gist_id}", "starred_url": "https://api.github.com/users/erights/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erights/subscriptions", "organizations_url": "https://api.github.com/users/erights/orgs", "repos_url": "https://api.github.com/users/erights/repos", "events_url": "https://api.github.com/users/erights/events{/privacy}", "received_events_url": "https://api.github.com/users/erights/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-12-25T16:16:38Z", "updated_at": "2017-12-26T18:40:42Z", "closed_at": "2017-12-25T18:26:09Z", "author_association": "NONE", "body": "https://github.com/airbnb/javascript#comparison--nested-ternaries\r\n\r\nThe recommended refactoring of\r\n```js\r\nconst foo = maybe1 > maybe2\r\n  ? \"bar\"\r\n  : value1 > value2 ? \"baz\" : null;\r\n```\r\ninto \r\n```js\r\nconst maybeNull = value1 > value2 ? 'baz' : null;\r\nconst foo = maybe1 > maybe2 ? 'bar' : maybeNull;\r\n```\r\nis not equivalent. In the latter, the `value1 > value2` comparison is always evaluated, and one of `'baz'` or `null` is also always evaluated. In this case, it is probably fine, but in general it has two problems:\r\n- These extra evaluations may be expensive\r\n- These extra evaluations may have side effects or throw when `maybe1 > maybe2`."}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/1676", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1676/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1676/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1676/events", "html_url": "https://github.com/airbnb/javascript/issues/1676", "id": 284457270, "node_id": "MDU6SXNzdWUyODQ0NTcyNzA=", "number": 1676, "title": "Recommend that switch branches always have curlies", "user": {"login": "erights", "id": 273868, "node_id": "MDQ6VXNlcjI3Mzg2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/273868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erights", "html_url": "https://github.com/erights", "followers_url": "https://api.github.com/users/erights/followers", "following_url": "https://api.github.com/users/erights/following{/other_user}", "gists_url": "https://api.github.com/users/erights/gists{/gist_id}", "starred_url": "https://api.github.com/users/erights/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erights/subscriptions", "organizations_url": "https://api.github.com/users/erights/orgs", "repos_url": "https://api.github.com/users/erights/repos", "events_url": "https://api.github.com/users/erights/events{/privacy}", "received_events_url": "https://api.github.com/users/erights/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-25T16:05:50Z", "updated_at": "2017-12-25T18:26:44Z", "closed_at": "2017-12-25T18:26:44Z", "author_association": "NONE", "body": "https://github.com/airbnb/javascript#comparison--switch-blocks\r\nrecommends curlies only when the branch has a declaration. This is a maintenance hazard. I always happily use curlies there. We should recommend that. It's also a simpler recommendation to remember, and easier for the eye to spot a violation."}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/1675", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1675/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1675/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1675/events", "html_url": "https://github.com/airbnb/javascript/issues/1675", "id": 284456911, "node_id": "MDU6SXNzdWUyODQ0NTY5MTE=", "number": 1675, "title": "var is worse than that", "user": {"login": "erights", "id": 273868, "node_id": "MDQ6VXNlcjI3Mzg2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/273868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erights", "html_url": "https://github.com/erights", "followers_url": "https://api.github.com/users/erights/followers", "following_url": "https://api.github.com/users/erights/following{/other_user}", "gists_url": "https://api.github.com/users/erights/gists{/gist_id}", "starred_url": "https://api.github.com/users/erights/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erights/subscriptions", "organizations_url": "https://api.github.com/users/erights/orgs", "repos_url": "https://api.github.com/users/erights/repos", "events_url": "https://api.github.com/users/erights/events{/privacy}", "received_events_url": "https://api.github.com/users/erights/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-25T15:59:17Z", "updated_at": "2017-12-25T18:50:52Z", "closed_at": "2017-12-25T18:50:52Z", "author_association": "NONE", "body": "https://github.com/airbnb/javascript#hoisting--about starts with\r\n\r\n> `var` declarations get hoisted to the top of their scope\r\n\r\nand the following text suggests that this is the same notion of scope as the scope that `let` and `const` hoist to. Rephrase to something like \"top of the block of their enclosing function\""}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/1674", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1674/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1674/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1674/events", "html_url": "https://github.com/airbnb/javascript/issues/1674", "id": 284455885, "node_id": "MDU6SXNzdWUyODQ0NTU4ODU=", "number": 1674, "title": "Avoiding * imports is even more important", "user": {"login": "erights", "id": 273868, "node_id": "MDQ6VXNlcjI3Mzg2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/273868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erights", "html_url": "https://github.com/erights", "followers_url": "https://api.github.com/users/erights/followers", "following_url": "https://api.github.com/users/erights/following{/other_user}", "gists_url": "https://api.github.com/users/erights/gists{/gist_id}", "starred_url": "https://api.github.com/users/erights/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erights/subscriptions", "organizations_url": "https://api.github.com/users/erights/orgs", "repos_url": "https://api.github.com/users/erights/repos", "events_url": "https://api.github.com/users/erights/events{/privacy}", "received_events_url": "https://api.github.com/users/erights/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 311904405, "node_id": "MDU6TGFiZWwzMTE5MDQ0MDU=", "url": "https://api.github.com/repos/airbnb/javascript/labels/editorial", "name": "editorial", "color": "bfe5bf", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-25T15:40:13Z", "updated_at": "2017-12-25T18:33:42Z", "closed_at": "2017-12-25T18:33:42Z", "author_association": "NONE", "body": "Re https://github.com/airbnb/javascript#modules--no-wildcard\r\n\r\nAn additional reason to avoid * imports:\r\n\r\nIn a module without * imports, every use occurrence of a variable name either refers to a defining occurrence in the same module text, or it is free (refers to a global). In a module with * imports, you can't tell statically from the module text by itself. Further, if the imported module exports a name that collides with a global, it will invisibly shadow that global in the importing module."}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/1673", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1673/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1673/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1673/events", "html_url": "https://github.com/airbnb/javascript/issues/1673", "id": 284455413, "node_id": "MDU6SXNzdWUyODQ0NTU0MTM=", "number": 1673, "title": "Method chaining lets the receiver nominate a next receiver", "user": {"login": "erights", "id": 273868, "node_id": "MDQ6VXNlcjI3Mzg2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/273868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erights", "html_url": "https://github.com/erights", "followers_url": "https://api.github.com/users/erights/followers", "following_url": "https://api.github.com/users/erights/following{/other_user}", "gists_url": "https://api.github.com/users/erights/gists{/gist_id}", "starred_url": "https://api.github.com/users/erights/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erights/subscriptions", "organizations_url": "https://api.github.com/users/erights/orgs", "repos_url": "https://api.github.com/users/erights/repos", "events_url": "https://api.github.com/users/erights/events{/privacy}", "received_events_url": "https://api.github.com/users/erights/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 311904405, "node_id": "MDU6TGFiZWwzMTE5MDQ0MDU=", "url": "https://api.github.com/repos/airbnb/javascript/labels/editorial", "name": "editorial", "color": "bfe5bf", "default": false}, {"id": 303239021, "node_id": "MDU6TGFiZWwzMDMyMzkwMjE=", "url": "https://api.github.com/repos/airbnb/javascript/labels/pull%20request%20wanted", "name": "pull request wanted", "color": "fbca04", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-25T15:32:12Z", "updated_at": "2017-12-26T03:19:05Z", "closed_at": null, "author_association": "NONE", "body": "Re https://github.com/airbnb/javascript#constructors--chaining\r\n\r\nCode like\r\n\r\n```js\r\nluke.jump().setHeight(20);\r\n```\r\nenables luke to provide something other than luke itself as the receiver of the `setHeight` message. When this delegation of control is intended, such method chaining is great. OTOH, if the caller assumes it is equivalent to\r\n\r\n```js\r\nluke.jump();\r\nluke.setHeight(20);\r\n```\r\n\r\nthen they depend on a contract that luke might not obey. That doesn't necessarily mean the style should not be used, but the hazard needs to be explained clearly whenever this style is encouraged."}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/1672", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1672/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1672/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1672/events", "html_url": "https://github.com/airbnb/javascript/issues/1672", "id": 284454912, "node_id": "MDU6SXNzdWUyODQ0NTQ5MTI=", "number": 1672, "title": "Single parameter arrows should always omit parens", "user": {"login": "erights", "id": 273868, "node_id": "MDQ6VXNlcjI3Mzg2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/273868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erights", "html_url": "https://github.com/erights", "followers_url": "https://api.github.com/users/erights/followers", "following_url": "https://api.github.com/users/erights/following{/other_user}", "gists_url": "https://api.github.com/users/erights/gists{/gist_id}", "starred_url": "https://api.github.com/users/erights/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erights/subscriptions", "organizations_url": "https://api.github.com/users/erights/orgs", "repos_url": "https://api.github.com/users/erights/repos", "events_url": "https://api.github.com/users/erights/events{/privacy}", "received_events_url": "https://api.github.com/users/erights/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 18135607, "node_id": "MDU6TGFiZWwxODEzNTYwNw==", "url": "https://api.github.com/repos/airbnb/javascript/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-25T15:25:14Z", "updated_at": "2017-12-25T18:36:27Z", "closed_at": "2017-12-25T18:36:27Z", "author_association": "NONE", "body": "On https://github.com/airbnb/javascript#functions--reassign-params\r\nWhy is\r\n\r\n```js\r\n// bad\r\n[1, 2, 3].map(x => {\r\n  const y = x + 1;\r\n  return x * y;\r\n});\r\n```\r\n\r\nbad? I do that all the time. The extra parens are more verbose whether or not the body uses curlies."}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/1671", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1671/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1671/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1671/events", "html_url": "https://github.com/airbnb/javascript/issues/1671", "id": 284454029, "node_id": "MDU6SXNzdWUyODQ0NTQwMjk=", "number": 1671, "title": "Rules should assume strict mode", "user": {"login": "erights", "id": 273868, "node_id": "MDQ6VXNlcjI3Mzg2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/273868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erights", "html_url": "https://github.com/erights", "followers_url": "https://api.github.com/users/erights/followers", "following_url": "https://api.github.com/users/erights/following{/other_user}", "gists_url": "https://api.github.com/users/erights/gists{/gist_id}", "starred_url": "https://api.github.com/users/erights/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erights/subscriptions", "organizations_url": "https://api.github.com/users/erights/orgs", "repos_url": "https://api.github.com/users/erights/repos", "events_url": "https://api.github.com/users/erights/events{/privacy}", "received_events_url": "https://api.github.com/users/erights/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-12-25T15:11:34Z", "updated_at": "2017-12-26T18:42:44Z", "closed_at": "2017-12-25T18:31:16Z", "author_association": "NONE", "body": "Rules \r\nhttps://github.com/airbnb/javascript#functions--in-blocks\r\nhttps://github.com/airbnb/javascript#functions--note-on-blocks\r\nhttps://github.com/airbnb/javascript#functions--arguments-shadow\r\nonly make sense for sloppy code, which therefore necessarily already violates the style guide by being sloppy.\r\n"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/1670", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1670/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1670/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1670/events", "html_url": "https://github.com/airbnb/javascript/issues/1670", "id": 284453705, "node_id": "MDU6SXNzdWUyODQ0NTM3MDU=", "number": 1670, "title": "Where does a module named 'has' come from?", "user": {"login": "erights", "id": 273868, "node_id": "MDQ6VXNlcjI3Mzg2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/273868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erights", "html_url": "https://github.com/erights", "followers_url": "https://api.github.com/users/erights/followers", "following_url": "https://api.github.com/users/erights/following{/other_user}", "gists_url": "https://api.github.com/users/erights/gists{/gist_id}", "starred_url": "https://api.github.com/users/erights/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erights/subscriptions", "organizations_url": "https://api.github.com/users/erights/orgs", "repos_url": "https://api.github.com/users/erights/repos", "events_url": "https://api.github.com/users/erights/events{/privacy}", "received_events_url": "https://api.github.com/users/erights/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 311904405, "node_id": "MDU6TGFiZWwzMTE5MDQ0MDU=", "url": "https://api.github.com/repos/airbnb/javascript/labels/editorial", "name": "editorial", "color": "bfe5bf", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-25T15:06:18Z", "updated_at": "2017-12-25T18:50:52Z", "closed_at": "2017-12-25T18:50:52Z", "author_association": "NONE", "body": "Re https://github.com/airbnb/javascript#objects--prototype-builtins what is\r\n\r\n```js\r\nimport has from 'has';\r\n```\r\n\r\n?"}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/1667", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1667/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1667/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1667/events", "html_url": "https://github.com/airbnb/javascript/issues/1667", "id": 284311308, "node_id": "MDU6SXNzdWUyODQzMTEzMDg=", "number": 1667, "title": "rtterte", "user": {"login": "saffetpamuk", "id": 2506950, "node_id": "MDQ6VXNlcjI1MDY5NTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/2506950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saffetpamuk", "html_url": "https://github.com/saffetpamuk", "followers_url": "https://api.github.com/users/saffetpamuk/followers", "following_url": "https://api.github.com/users/saffetpamuk/following{/other_user}", "gists_url": "https://api.github.com/users/saffetpamuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/saffetpamuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saffetpamuk/subscriptions", "organizations_url": "https://api.github.com/users/saffetpamuk/orgs", "repos_url": "https://api.github.com/users/saffetpamuk/repos", "events_url": "https://api.github.com/users/saffetpamuk/events{/privacy}", "received_events_url": "https://api.github.com/users/saffetpamuk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 18135605, "node_id": "MDU6TGFiZWwxODEzNTYwNQ==", "url": "https://api.github.com/repos/airbnb/javascript/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-23T15:19:22Z", "updated_at": "2017-12-23T15:52:20Z", "closed_at": "2017-12-23T15:20:22Z", "author_association": "NONE", "body": ""}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/1666", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1666/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1666/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1666/events", "html_url": "https://github.com/airbnb/javascript/issues/1666", "id": 283965233, "node_id": "MDU6SXNzdWUyODM5NjUyMzM=", "number": 1666, "title": "Chaining example for #26.2: Cache jQuery lookups", "user": {"login": "keith24", "id": 10123447, "node_id": "MDQ6VXNlcjEwMTIzNDQ3", "avatar_url": "https://avatars1.githubusercontent.com/u/10123447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keith24", "html_url": "https://github.com/keith24", "followers_url": "https://api.github.com/users/keith24/followers", "following_url": "https://api.github.com/users/keith24/following{/other_user}", "gists_url": "https://api.github.com/users/keith24/gists{/gist_id}", "starred_url": "https://api.github.com/users/keith24/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keith24/subscriptions", "organizations_url": "https://api.github.com/users/keith24/orgs", "repos_url": "https://api.github.com/users/keith24/repos", "events_url": "https://api.github.com/users/keith24/events{/privacy}", "received_events_url": "https://api.github.com/users/keith24/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 18135606, "node_id": "MDU6TGFiZWwxODEzNTYwNg==", "url": "https://api.github.com/repos/airbnb/javascript/labels/question", "name": "question", "color": "cc317c", "default": true}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-21T18:22:10Z", "updated_at": "2017-12-22T01:58:55Z", "closed_at": "2017-12-22T01:58:55Z", "author_association": "NONE", "body": "> [26.2](https://github.com/airbnb/javascript#jquery--cache) Cache jQuery lookups.\r\n> \r\n> ```javascript\r\n> // bad\r\n> function setSidebar() {\r\n>   $('.sidebar').hide();\r\n> \r\n>   // ...\r\n> \r\n>   $('.sidebar').css({\r\n>     'background-color': 'pink',\r\n>   });\r\n> }\r\n> \r\n> // good\r\n> function setSidebar() {\r\n>   const $sidebar = $('.sidebar');\r\n>   $sidebar.hide();\r\n> \r\n>   // ...\r\n> \r\n>   $sidebar.css({\r\n>     'background-color': 'pink',\r\n>   });\r\n> }\r\n> ```\r\n\r\nBut how about: \r\n\r\n```javascript\r\n// best\r\nfunction setSidebar() {\r\n  $('.sidebar').hide().css({\r\n    'background-color': 'pink',\r\n  });\r\n}\r\n````\r\n\r\nI *assume* it's fastest because it doesn't perform two jQ lookups and doesn't declare a new const to memory.  However, I didn't go to school for CS and I don't know much about JS under the hood.  \r\n\r\nI also find chains easy to read since long ones can be split across lines in compliance with [19.6](https://github.com/airbnb/javascript#whitespace--chains).  "}, {"url": "https://api.github.com/repos/airbnb/javascript/issues/1665", "repository_url": "https://api.github.com/repos/airbnb/javascript", "labels_url": "https://api.github.com/repos/airbnb/javascript/issues/1665/labels{/name}", "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1665/comments", "events_url": "https://api.github.com/repos/airbnb/javascript/issues/1665/events", "html_url": "https://github.com/airbnb/javascript/issues/1665", "id": 283791835, "node_id": "MDU6SXNzdWUyODM3OTE4MzU=", "number": 1665, "title": "about react-a11y", "user": {"login": "malin1988", "id": 950868, "node_id": "MDQ6VXNlcjk1MDg2OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/950868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malin1988", "html_url": "https://github.com/malin1988", "followers_url": "https://api.github.com/users/malin1988/followers", "following_url": "https://api.github.com/users/malin1988/following{/other_user}", "gists_url": "https://api.github.com/users/malin1988/gists{/gist_id}", "starred_url": "https://api.github.com/users/malin1988/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malin1988/subscriptions", "organizations_url": "https://api.github.com/users/malin1988/orgs", "repos_url": "https://api.github.com/users/malin1988/repos", "events_url": "https://api.github.com/users/malin1988/events{/privacy}", "received_events_url": "https://api.github.com/users/malin1988/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 18135606, "node_id": "MDU6TGFiZWwxODEzNTYwNg==", "url": "https://api.github.com/repos/airbnb/javascript/labels/question", "name": "question", "color": "cc317c", "default": true}, {"id": 377914681, "node_id": "MDU6TGFiZWwzNzc5MTQ2ODE=", "url": "https://api.github.com/repos/airbnb/javascript/labels/react", "name": "react", "color": "bfdadc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-21T07:11:14Z", "updated_at": "2018-04-27T15:36:39Z", "closed_at": "2018-04-27T15:36:38Z", "author_association": "NONE", "body": "I want to use your default configs without react-a11y included, what should i do? "}]